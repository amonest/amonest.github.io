{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"bean",
				"beans"
			],
			[
				"ce",
				"cellspacing	Attr"
			],
			[
				"array_ke",
				"array_key_exists"
			],
			[
				"array_k",
				"array_key_exists"
			],
			[
				"do",
				"dob	Insert do |variable| … end"
			],
			[
				"up",
				"upto"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "    public BeanDefinition parseCustomElement(Element ele, BeanDefinition containingBd) {\n        String namespaceUri = getNamespaceURI(ele);\n        NamespaceHandler handler = this.readerContext.getNamespaceHandlerResolver().resolve(namespaceUri);\n        if (handler == null) {\n            error(\"Unable to locate Spring NamespaceHandler for XML schema namespace [\" + namespaceUri + \"]\", ele);\n            return null;\n        }\n        return handler.parse(ele, new ParserContext(this.readerContext, this, containingBd));\n    }\nparserContext.delegate.parseCustomElement(child, builder.getBeanDefinition())\n\nparserContext.delegate.parseBeanDefinitionElement(child, builder.getBeanDefinition())\n\nparserContext.delegate.parsePropertyElements(ele, bd);\n.Object val = parserContext.delegate.parsePropertyValue(ele, bd, propertyName);\n\n\n\nreaderContext.parseCustomElement(child, builder)\n\n    protected void parseBeanDefinitions(Element root, BeanDefinitionParserDelegate delegate) {\n        if (delegate.isDefaultNamespace(root)) {\n            NodeList nl = root.getChildNodes();\n            for (int i = 0; i < nl.getLength(); i++) {\n                Node node = nl.item(i);\n                if (node instanceof Element) {\n                    Element ele = (Element) node;\n                    if (delegate.isDefaultNamespace(ele)) {\n                        parseDefaultElement(ele, delegate);\n                    }\n                    else {\n                        delegate.parseCustomElement(ele);\n                    }\n                }\n            }\n        }\n        else {\n            delegate.parseCustomElement(root);\n        }\n    }\n\n\npublic void parsePropertyElements(Element beanEle, BeanDefinition bd) {\n        NodeList nl = beanEle.getChildNodes();\n        for (int i = 0; i < nl.getLength(); i++) {\n            Node node = nl.item(i);\n            if (isCandidateElement(node) && nodeNameEquals(node, PROPERTY_ELEMENT)) {\n                parsePropertyElement((Element) node, bd);\n            }\n        }\n    }\n\n\n    Object val = parsePropertyValue(ele, bd, propertyName);\n            PropertyValue pv = new PropertyValue(propertyName, val);\n            parseMetaElements(ele, pv);\n            pv.setSource(extractSource(ele));\n            bd.getPropertyValues().addPropertyValue(pv);\n\n\n\n\npublic Properties parsePropsElement(Element propsEle) {\n        ManagedProperties props = new ManagedProperties();\n        props.setSource(extractSource(propsEle));\n        props.setMergeEnabled(parseMergeAttribute(propsEle));\n\n        List<Element> propEles = DomUtils.getChildElementsByTagName(propsEle, PROP_ELEMENT);\n        for (Element propEle : propEles) {\n            String key = propEle.getAttribute(KEY_ATTRIBUTE);\n            // Trim the text value to avoid unwanted whitespace\n            // caused by typical XML formatting.\n            String value = DomUtils.getTextValue(propEle).trim();\n            TypedStringValue keyHolder = new TypedStringValue(key);\n            keyHolder.setSource(extractSource(propEle));\n            TypedStringValue valueHolder = new TypedStringValue(value);\n            valueHolder.setSource(extractSource(propEle));\n            props.put(keyHolder, valueHolder);\n        }\n\n        return props;\n    }",
			"settings":
			{
				"buffer_size": 3243,
				"line_ending": "Windows",
				"name": "public BeanDefinition parseCustomElement(Eleme"
			}
		},
		{
			"contents": "1. ConsumerConfig\n  可以直接配置address，而且可以用逗号分割多个\n\n2. 在consumer中设置loadbalance和haStragery\n\n3. Consumer设置成泛型：\nclass Consumer<T> {\n    Class<?> interfaceClass;\n\n    Consumer(Class<?> interfaceClass) {\n       ... ...\n    }\n}\n\nConsumer<FooService> fooConsumer = new Consumer(FooService.class);\n\n设置LoadBalance和Strategy\nclass Consumer<T> {\n    LoadBalance loadBalance;\n    HaStragery haStragery;\n}\n\nConsumer需要一个初始化方法:\nvoid init() {\n    if (getRegistry() != null) {\n        getRegistry().subscribe();\n    }\n}\n\nConsumer需要作为一个监听地址变化事件：\nvoid onAddressListChanged(Registry registry, List<Address> addressList) {\n    //\n}\n\nprivate ConcurrentHashMap<URL, List<Referer<T>>> registryReferers = new ConcurrentHashMap<URL, List<Referer<T>>>();\n\nvoid refreshAddressList() {\n    List<Referer<T>> newClients = new ArrayList<Referer<T>>();\n    for (Address) {\n        if (!address.isMatch) {\n            continue;\n        }\n        Referer<T> referer = getExistingReferer(u, registryReferers.get(registryUrl));\n        if (referer == null) {\n            // careful u: serverURL, refererURL鐨勯厤缃細琚玸erverURL鐨勯厤缃鐩�\n            URL refererURL = u.createCopy();\n            mergeClientConfigs(refererURL);\n            referer = protocol.refer(interfaceClass, refererURL, u);\n        }\n        if (referer != null) {\n            newReferers.add(referer);\n        }\n    }\n\n    if (CollectionUtil.isEmpty(newReferers)) {\n        onRegistryEmpty(registryUrl);\n        return;\n    }\n\n    // 姝ゅ涓嶉攢姣乺eferers锛岀敱cluster杩涜閿�姣�\n    registryReferers.put(registryUrl, newReferers);\n    refreshCluster();\n}\nprivate Referer<T> getExistingReferer(URL url, List<Referer<T>> referers) {\n    if (referers == null) {\n        return null;\n    }\n    for (Referer<T> r : referers) {\n        if (ObjectUtils.equals(url, r.getUrl()) || ObjectUtils.equals(url, r.getServiceUrl())) {\n            return r;\n        }\n    }\n    return null;\n}\nprivate void refreshCluster() {\n    List<Referer<T>> referers = new ArrayList<Referer<T>>();\n    for (List<Referer<T>> refs : registryReferers.values()) {\n        referers.addAll(refs);\n    }\n    cluster.onRefresh(referers);\n}\n\n\n4. LoadBalance\npublic interface LoadBalance<T> {\n\n    void onRefresh(List<Referer<T>> referers);\n\n    Referer<T> select(Request request);\n\n    void selectToHolder(Request request, List<Referer<T>> refersHolder);\n\n    void setWeightString(String weightString);\n}\n\n\n5. HaStragery\npublic interface HaStrategy<T> {\n\n    void setUrl(URL url);\n\n    Response call(Request request, LoadBalance<T> loadBalance);\n\n}\n\n6. Protocol\npublic interface Protocol {\n    <T> Exporter<T> export(Provider<T> provider, URL url);\n    <T> Referer<T> refer(Class<T> clz, URL url, URL serviceUrl);\n    void destroy();\n}",
			"file": "/X/dev/suifeng-java-projects/orchid-parent/TODO.txt",
			"file_size": 3000,
			"file_write_time": 131393897468653074,
			"settings":
			{
				"buffer_size": 2708,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\n    \n    public static Registry getDefaultRegistry() {\n        if (defaultRegistry == null) {\n            synchronized (RegistryConfig.class) {\n                if (defaultRegistry == null) {\n                    defaultRegistry = (Registry) ExtensionHelper.getExtension(\n                            Registry.class, DEFAULT_Registry_TYPE);\n                    defaultRegistry.setSerialization(SerializationConfig.getDefaultSerialization());\n                    defaultRegistry.setCodec(CodecConfig.getDefaultCodec());\n                }\n            }\n        }\n        return defaultRegistry;\n    }\n    \n    private static Registry defaultRegistry;",
			"settings":
			{
				"buffer_size": 646,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/Response.java",
			"settings":
			{
				"buffer_size": 3538,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/ResponseFuture.java",
			"settings":
			{
				"buffer_size": 1525,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/Channel.java",
			"settings":
			{
				"buffer_size": 1753,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/support/DefaultFuture.java",
			"settings":
			{
				"buffer_size": 11190,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/Endpoint.java",
			"settings":
			{
				"buffer_size": 1851,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/ResponseCallback.java",
			"settings":
			{
				"buffer_size": 949,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 58.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pack",
				"Preferences: Browse Packages"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 59.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/X/dev/amonest.github.io",
		"/X/dev/amonest.github.io/_drafts",
		"/X/dev/amonest.github.io/_includes",
		"/X/dev/amonest.github.io/_includes/html",
		"/X/dev/amonest.github.io/_layouts"
	],
	"file_history":
	[
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/support/SimpleFuture.java",
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/Client.java",
		"/X/dev/amonest.github.io/_drafts/spring-source-create-bean-instance.md",
		"//cloth/apache-tomcat-8.0.35/webapps/ROOT/jsps/check-account.jsp",
		"/X/dev/suifeng-java-projects/orchid-parent/README.md",
		"/X/dev/amonest.github.io/_drafts/spring-analysis-AnnotationConfigApplicationContext.md",
		"/X/dev/amonest.github.io/_includes/html/left.html",
		"/X/dev/amonest.github.io/_posts/books/2017-04-29-java-multi-threads.md",
		"/D/SHARED/TEMP/motan-master/motan-manager/src/main/resources/config.properties",
		"/X/dev/suifeng-java-projects/orchid-parent/pom.xml",
		"/X/dev/amonest.github.io/index.md",
		"/X/dev/amonest.github.io/_posts/others/2016-11-19-jekyll-installation-on-windows.md",
		"/C/Users/lbin/Desktop/bookmarks_17_4_29.html",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-18-spring-source-ribbon-configruation.md",
		"/W/cloth-image-handler/cloth-image-handler.xml",
		"/X/dev/amonest.github.io/_drafts/spring-source-annotation-application-initialize.md",
		"/X/dev/amonest.github.io/_includes/snippet/SpringApplication.txt",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-05-spring-autowired-map-or-list.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-05-spring-config-servlet-context-listener.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-05-spring-reflection-set-field.md",
		"//cloth/apache-tomcat-8.0.35/webapps/ROOT/WEB-INF/jsp/enterprise/column/epColumn.jsp",
		"//cloth/apache-tomcat-8.0.35/webapps/ROOT/WEB-INF/jsp/enterprise/goods/columnInfo_forelation.jsp",
		"//cloth/apache-tomcat-8.0.35/webapps/ROOT/jsps/detail-account.jsp",
		"//cloth/apache-tomcat-8.0.35/webapps/ROOT/jsps/theme/default/image/style.custom.css",
		"/X/dev/amonest.github.io/assets/navi.css",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-03-spring-config-servlet-registration.md",
		"/X/dev/amonest.github.io/assets/superfish/css/superfish.css",
		"/X/dev/amonest.github.io/_posts/spring/2016-12-09-spring-mvc-web-controller.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-05-spring-mvc-simple-url-handler-mapping.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-05-spring-config-autowired-map-or-list.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-05-spring-config-autowired-collection.md",
		"/X/dev/amonest.github.io/_includes/html/top.html",
		"/X/dev/amonest.github.io/_includes/html/header.html",
		"/X/dev/amonest.github.io/_posts/spring/2017-03-24-spring-source-eureka-instance-config.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-03-28-spring-source-eureka-client-summary.md",
		"/X/dev/amonest.github.io/_posts/database/sybase/2017-03-30-sybase-identity-insert.md",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zuul-service/src/main/resources/application.properties",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/user-service/src/main/java/net/mingyang/spring_cloud_examples/user_service/Application.java",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/user-service/src/main/java/net/mingyang/spring_cloud_examples/user_service/controller/ComputeController.java",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/web-client/pom.xml",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zuul-service/pom.xml",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zuul-service/src/main/resources/bootstrap.properties",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zuul-service/src/main/java/net/mingyang/spring_cloud_examples/zuul_service/Application.java",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/pom.xml",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zuul-service/.gitignore",
		"/D/SHARED/ERP/SQL/sybase數據庫異常轉移.sql",
		"/X/dev/amonest.github.io/_posts/spring/2017-03-28-spring-source-eureka-http-client.md",
		"//cloth/apache-tomcat-8.0.35/webapps/ROOT/WEB-INF/classes/jdbc.properties",
		"/X/dev/supercap-cloth/src/cc/modules/orm/hibernate/SQLServer2005Dialect.java",
		"/C/Users/lbin/Desktop/SUPERCAP.html",
		"/X/dev/amonest.github.io/_posts/java/2017-03-27-java-call-ant-api.md",
		"/X/dev/amonest.github.io/_posts/java/2017-03-27-java-call-cmd-and-return.md",
		"/X/dev/amonest.github.io/_posts/java/2017-03-27-java-thread-daemon-thread.md",
		"/X/dev/amonest.github.io/_posts/spring/2016-12-26-spring-boot-config-auto-configuration-sample.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-03-24-spring-source-eureka-client-config.md",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zookeeper-webclient/pom.xml",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zookeeper-compute/pom.xml",
		"/X/dev/suifeng-java-projects/cloud-examples/cloud-compute-service/src/main/java/net/mingyang/cloud_compute_service/ComputeController.java",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/eureka-service/pom.xml",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zookeeper-discovery/pom.xml",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zookeeper-config/pom.xml",
		"/X/dev/amonest.github.io/_includes/block/spring-source-list.html",
		"/X/dev/amonest.github.io/_posts/spring/2017-03-13-spring-source-xml-custom-schema.md",
		"/X/bin/spring-1.4.1.RELEASE/bin/spring.bat",
		"/X/dev/suifeng-java-projects/spring-boot-helloworld/pom.xml",
		"/X/dev/suifeng-java-projects/spring-boot-test/pom.xml",
		"/C/Users/lbin/Desktop/20170317101654.xml",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/eureka-service/src/main/java/net/mingyang/spring_cloud_examples/eureka_service/Application.java",
		"/X/dev/supercap-cloth/.gitignore",
		"/X/dev/amonest.github.io/_drafts/spring-analysis-create-bean-instance.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-03-13-spring-config-custom-xml-schema.md",
		"/X/dev/amonest.github.io/_drafts/spring-source-xml-entity-resolver.md",
		"/X/dev/amonest.github.io/_includes/block/spring-analysis-list.html",
		"/X/dev/amonest.github.io/_layouts/post.html",
		"/X/dev/supercap-cloth/src/cc/modules/email/Mail.java",
		"/X/dev/amonest.github.io/_drafts/spring-source-parse-xml-config.md",
		"/X/dev/amonest.github.io/_drafts/spring-analysis-parse-xml-config.md",
		"/X/dev/amonest.github.io/_includes/abc.html",
		"//cloth/apache-tomcat-8.0.35/webapps/ROOT/custom/layerRecommends.jsp",
		"/X/dev/amonest.github.io/_posts/eclipse/2017-02-28-eclipse-tab-spaces.md",
		"/C/Windows/System32/drivers/etc/hosts",
		"/X/dev/suifeng-java-projects/ant-spring-generator/build.xml",
		"/X/dev/suifeng-java-projects/ant-spring-generator/build/email-service/src/main/java/net/mingyang/spring_cloud_examples/email_service/Application.java",
		"/C/Users/lbin/Desktop/2017.02.24 AM/方案一/电脑、iPhone、安卓、Linux系列（增强版）/hosts",
		"/X/dev/amonest.github.io/_posts/linux/2017-02-23-linux-install-docker-compose.md",
		"/C/Users/lbin/Desktop/links.txt",
		"/X/dev/suifeng-java-projects/cloud-examples/cloud-eureka-server/src/main/docker/Dockerfile",
		"/X/dev/amonest.github.io/_posts/linux/2017-02-22-linux-modify-sudoers.md",
		"/X/dev/suifeng-java-projects/cloud-examples/cloud-eureka-server/pom.xml",
		"/X/dev/amonest.github.io/_posts/linux/2017-02-22-linux-query-user-in-groups.md",
		"/X/dev/amonest.github.io/_posts/linux-commands/2017-02-22-linux-command-groups.md",
		"/X/dev/amonest.github.io/_posts/linux/2016-12-29-linux-host-name.md",
		"/X/dev/suifeng-java-projects/cloud-parent/cloud-discovery/pom.xml",
		"/X/dev/suifeng-java-projects/cloud-parent/cloud-config/src/main/resources/bootstrap.properties",
		"/X/dev/suifeng-java-projects/cloud-parent/cloud-config/pom.xml",
		"/X/dev/suifeng-java-projects/cloud-parent/cloud-score/pom.xml",
		"/X/dev/suifeng-java-projects/ant-spring-generator/common.xml",
		"/X/dev/suifeng-java-projects/ant-spring-generator/src/application.properties",
		"/X/dev/suifeng-java-projects/ant-spring-generator/src/pom.xml",
		"/X/dev/suifeng-java-projects/ant-spring-generator/build/spring-cloud-configserver/pom.xml",
		"/X/dev/suifeng-java-projects/ant-spring-generator/src/Application.java",
		"/X/dev/suifeng-java-projects/ant-spring-generator/.gitignore",
		"/X/dev/suifeng-java-projects/ant-spring-generator/build/spring-cloud-configserver/src/main/java/net/mingyang/spring_cloud_configserver/Application.java",
		"//wlfs03/FS/development/build.xml",
		"/X/dev/suifeng-java-projects/ant-spring-generator/ant.bat",
		"//wlfs03/FS/cloth-image-handler/cloth-image-handler.xml",
		"/X/dev/suifeng-java-projects/cloth-image-handler/cloth-image-handler.xml",
		"/X/dev/suifeng-java-projects/ant-spring-generator/scaffold/build.xml",
		"/X/dev/suifeng-java-projects/ant-spring-generator/template/IndexController.java.txt",
		"/C/Users/lbin/Desktop/registration-login-spring-hsql-master/registration-login-spring-hsql-master/src/main/java/com/hellokoding/auth/service/UserDetailsServiceImpl.java",
		"/X/dev/suifeng-java-projects/supercap-library/src/main/resources/templates/dgfp_43_hs/sign-in.html",
		"/X/dev/suifeng-java-projects/spring-mingyang-cms/framework/scaffold/build.xml",
		"/X/dev/suifeng-java-projects/spring-mingyang-cms/common.xml",
		"/X/dev/amonest.github.io/_posts/spring-jpa/2017-02-15-spring-jpa-validate-annotations.md",
		"/X/dev/suifeng-java-projects/supercap-library/src/main/resources/templates/dgfp_43_hs/sign-up.html",
		"/X/bin/sts-bundle/sts-3.8.3.RELEASE/STS.ini",
		"/X/dev/suifeng-java-projects/spring-mingyang-cms/framework/build.xml",
		"/X/dev/suifeng-java-projects/spring-mingyang-cms/persistence/build.xml",
		"/C/Users/lbin/Desktop/spring-data-examples-master/spring-data-examples-master/jpa/pom.xml",
		"/C/Users/lbin/Desktop/spring-data-examples-master/spring-data-examples-master/jpa/example/pom.xml",
		"/C/Users/lbin/Desktop/spring-data-examples-master/spring-data-examples-master/jpa/example/src/main/java/example/springdata/jpa/auditing/AuditableUser.java",
		"/C/Users/lbin/Desktop/thymeleaf-spring4-2.1.5.RELEASE-sources/org/thymeleaf/spring4/util/FieldUtils.java",
		"/C/Users/lbin/Desktop/registration-login-spring-hsql-master/registration-login-spring-hsql-master/src/main/java/com/hellokoding/auth/service/SecurityService.java",
		"/X/dev/amonest.github.io/_posts/spring-jpa/2017-01-16-spring-jpa-create-query.md",
		"/C/Users/lbin/Desktop/registration-login-spring-hsql-master/registration-login-spring-hsql-master/src/main/java/com/hellokoding/auth/model/User.java",
		"/C/Users/lbin/Desktop/registration-login-spring-hsql-master/registration-login-spring-hsql-master/src/main/java/com/hellokoding/auth/model/Role.java",
		"/C/Users/lbin/Desktop/registration-login-spring-hsql-master/registration-login-spring-hsql-master/src/main/java/com/hellokoding/auth/repository/UserRepository.java",
		"/C/Users/lbin/Desktop/registration-login-spring-hsql-master/registration-login-spring-hsql-master/src/main/java/com/hellokoding/auth/repository/RoleRepository.java"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"X:\\dev\\amonest.github.io\\_drafts",
			"C:\\Users\\lbin\\Desktop\\thymeleaf-spring4-2.1.5.RELEASE-sources",
			"C:\\Users\\lbin\\Desktop\\spring-context-4.3.6.RELEASE-sources",
			"X:\\dev\\amonest.github.io\\_posts\\spring",
			"C:\\Users\\lbin\\Desktop\\opencart-2.1.0.2\\opencart-2.1.0.2\\upload\\admin",
			"C:\\Users\\lbin\\Desktop\\opencart-2.1.0.2\\opencart-2.1.0.2\\upload",
			"D:\\SHARED\\TEMP\\amonest.github.io",
			"D:\\SHARED\\TEMP\\suifeng_html",
			"D:\\SHARED\\TEMP\\workspace\\dubbo-master",
			"X:\\dev\\supercap-cloth\\src"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Server",
			"Transport",
			"serialization",
			"Serialization",
			"BeanDefinitionRegistryPostProcessor ",
			"BeanDefinitionRegistryPostProcessor",
			"depot",
			"WEB224",
			"WEB221",
			"Refresh",
			"Qty",
			"goodsInfos",
			"UnderConstruction.jpg",
			" style=\"width: 160px; background: url({{ ASSET_PATH }}/img/arrow.gif) no-repeat 150px 50%;\"",
			"dot",
			"dash",
			"menu",
			"tree2",
			"Jersey",
			"X:\\bin\\spring-1.4.1.RELEASE\\bin",
			"// ******",
			"group",
			"role",
			"user",
			"hasErrors",
			"\"param\"",
			"param",
			"ApplicationContext",
			"ApplicationContextWare",
			"ConfigurationClassPostProcessor",
			"实例",
			"注解识别器",
			"small",
			"<T>",
			"cloud_cli_feign_feign",
			"cloud_cli",
			"250px",
			"tree2",
			"260px",
			"spring-boot-config",
			"spring_boot_config",
			"spring-create-maven-project",
			"User",
			"Content-Type",
			"Allow",
			"AllowO",
			"android",
			"phpMyadmin",
			"200",
			"itmbrma",
			"goodsColumn",
			"itmbrmaAttrs",
			"200",
			"R.",
			"spring_cloth_sample",
			"rtx_allorder_used",
			"KVM",
			"tree3",
			"zabbix",
			"sPrev",
			" ",
			"TxtConfigTypeId",
			"LoadObjectButton",
			"MSHTML",
			"\"",
			"$",
			"contents",
			"<a href=\"./note",
			"./note",
			"<a href=\"assets/note",
			"#2",
			"jekyll",
			"tab_size",
			"jekyll",
			"D:/amonest.github.io",
			"favicon.ico",
			"img/icon.gif",
			"rouge.css",
			"assets/rouge.css",
			".codehilite",
			"        \n",
			"Configure Vsftpd.",
			"../img/",
			"../img",
			"assets/css/",
			"./",
			"assets/css/",
			"./",
			"assets/css/",
			"./",
			"Ads",
			"ads",
			"Ads",
			"left",
			"./CentOS 7 _ Apache httpd _ Install _ Server World_files/",
			"5px 0 }",
			"margin:5px",
			"float:left;",
			"width:",
			"javascript",
			"jquery",
			"bootstrap-3",
			"bootstrap.min.js",
			"What is Jekyll?",
			"Update Author Attributes",
			"vhost",
			"mingyang",
			"DubboRegistryFactory",
			"setRegistryFactory",
			"registryFactory",
			"ProxyFactory",
			"Wrapper",
			"forgetPassword",
			"source",
			"Javassist",
			"proxyFactory",
			"ref",
			"update_check",
			"update",
			"upgrade"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Registry",
			"Server",
			"transport",
			"Codec",
			"Transport",
			"",
			"// <<<这里<<<",
			"permission",
			"group",
			"role",
			"注解读取器",
			"&lt;T&gt;",
			"cloud_cli_feign",
			"240px",
			"250px",
			"spring-boot-test",
			"spring_boot_test",
			"spring-boot-create-maven-project",
			"spring_boot_helloworld",
			"",
			"'",
			"<a href=\"http://www.server-world.info/en/note",
			"C:/amonest.github.io",
			".highlight",
			"img/",
			"img",
			"assets/",
			"5px 0; }",
			"margin: 5px",
			"float: left; ",
			"width: "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3243,
						"regions":
						{
						},
						"selection":
						[
							[
								2019,
								2019
							]
						],
						"settings":
						{
							"auto_name": "public BeanDefinition parseCustomElement(Eleme",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 627.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/X/dev/suifeng-java-projects/orchid-parent/TODO.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2708,
						"regions":
						{
						},
						"selection":
						[
							[
								2375,
								2375
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1221.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 646,
						"regions":
						{
						},
						"selection":
						[
							[
								646,
								646
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/Response.java",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3538,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2214.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/ResponseFuture.java",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1525,
						"regions":
						{
						},
						"selection":
						[
							[
								1074,
								1522
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 378.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/Channel.java",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1753,
						"regions":
						{
						},
						"selection":
						[
							[
								1490,
								1490
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 702.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/support/DefaultFuture.java",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11190,
						"regions":
						{
						},
						"selection":
						[
							[
								4834,
								4834
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 3618.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/Endpoint.java",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1851,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 324.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/ResponseCallback.java",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 949,
						"regions":
						{
						},
						"selection":
						[
							[
								949,
								706
							]
						],
						"settings":
						{
							"syntax": "Packages/Java/Java.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 28.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Ruby/Ruby.sublime-build",
	"project": "amonest.github.io.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"X:\\dev\\suifeng-php-utils\\android-rpc-server\\android-rpc-server.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 213.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
