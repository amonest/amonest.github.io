{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"bean",
				"beans"
			],
			[
				"ce",
				"cellspacing	Attr"
			],
			[
				"array_ke",
				"array_key_exists"
			],
			[
				"array_k",
				"array_key_exists"
			],
			[
				"do",
				"dob	Insert do |variable| … end"
			],
			[
				"up",
				"upto"
			]
		]
	},
	"buffers":
	[
		{
			"file": "_includes/html/left.html",
			"settings":
			{
				"buffer_size": 22888,
				"line_ending": "Windows"
			}
		},
		{
			"file": "_posts/dubbo/2017-06-01-dubbo-source-registry-directory.md",
			"settings":
			{
				"buffer_size": 5961,
				"line_ending": "Windows"
			}
		},
		{
			"file": "_posts/dubbo/2017-05-25-dubbo-source-reference-client.md",
			"settings":
			{
				"buffer_size": 12544,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "---\nlayout: post\ntitle: Dubbo 源码分析 - 配置\n---\n\nConfigurator的作用是根据调用信息，在多个Invoker中做一次过滤，选出一个子集。\n\n{% highlight java %}\npublic interface Configurator extends Comparable<Configurator> {\n    URL getUrl();\n    URL configure(URL url);\n\n}\n{% endhighlight %}\n\n\n\n\n\n\n\n\n目前Router接口有三个实现类：ScriptRouter、ConditionRouter和MockInvokersSelector。例如，ScriptRouter是这样处理的：\n\n{% highlight java %}\npublic class ScriptRouter implements Router {\n\n    public ScriptRouter(URL url) {\n        this.url = url;\n        String type = url.getParameter(Constants.TYPE_KEY);\n        this.priority = url.getParameter(Constants.PRIORITY_KEY, 0);\n        this.rule = url.getParameterAndDecoded(Constants.RULE_KEY);\n        this.engine = ScriptEngineManager().getEngineByName(type);\n    }\n\n    public <T> List<Invoker<T>> route(List<Invoker<T>> invokers, \n                URL url, Invocation invocation) throws RpcException {\n        try {\n            List<Invoker<T>> invokersCopy = new ArrayList<Invoker<T>>(invokers);\n            Compilable compilable = (Compilable) engine;\n\n            // 编译脚本执行环境参数\n            Bindings bindings = engine.createBindings();\n            bindings.put(\"invokers\", invokersCopy);\n            bindings.put(\"invocation\", invocation);\n            bindings.put(\"context\", RpcContext.getContext());\n\n            // 调用编译脚本\n            CompiledScript function = compilable.compile(rule);\n            Object obj = function.eval(bindings);\n\n            // 处理脚本返回结果\n            if (obj instanceof Invoker[]) {\n                invokersCopy = Arrays.asList((Invoker<T>[]) obj);\n            } else if (obj instanceof Object[]) {\n                invokersCopy = new ArrayList<Invoker<T>>();\n                for (Object inv : (Object[]) obj) {\n                    invokersCopy.add((Invoker<T>)inv);\n                }\n            } else {\n                invokersCopy = (List<Invoker<T>>) obj;\n            }\n\n            return invokersCopy;\n        } catch (ScriptException e) {\n            logger.error(\"route error\");\n            return invokers;\n        }\n    }\n}\n{% endhighlight %}\n\n\nRoute的使用主要是RegistryDirectory中，依据注册中心的变更信息，创建Router对象。\n\n如果注册中心返回的网址是router://协议或者category=routers，说明这是一个路由规则，通过toRouters()转化成Router对象。\n\n{% highlight java %}\nprivate List<Router> toRouters(List<URL> urls) {\n    List<Router> routers = new ArrayList<Router>();\n    if(urls == null || urls.size() < 1){\n        return routers ;\n    }\n\n    if (urls != null && urls.size() > 0) {\n        for (URL url : urls) {\n            if (Constants.EMPTY_PROTOCOL.equals(url.getProtocol())) {\n                continue;\n            }\n\n            String routerType = url.getParameter(Constants.ROUTER_KEY);\n            if (routerType != null && routerType.length() > 0){\n                url = url.setProtocol(routerType);\n            }\n\n            try{\n                Router router = routerFactory.getRouter(url);\n                if (!routers.contains(router))\n                    routers.add(router);\n            } catch (Throwable t) {\n                logger.error(\"convert router url to router error, url: \"+ url, t);\n            }\n        }\n    }\n    return routers;\n}\n{% endhighlight %}\n\n\ntoRouters()转化后的Router对象列表通过setRouters()注入到RegistryDirectory。\n\n{% highlight java %}\nprotected void setRouters(List<Router> routers){\n    // copy list\n    routers = routers == null ? new  ArrayList<Router>() : new ArrayList<Router>(routers);\n\n    // append url router\n    String routerkey = url.getParameter(Constants.ROUTER_KEY);\n    if (routerkey != null && routerkey.length() > 0) {\n        RouterFactory routerFactory = ExtensionLoader.getExtensionLoader(RouterFactory.class)\n                    .getExtension(routerkey);\n        routers.add(routerFactory.getRouter(url));\n    }\n\n    // 这里加入了一个通用的MockInvokersSelector对象。\n    // MockInvokersSelector类的compareTo()方法有点特殊，统统返回1，保证排在最前面。\n    routers.add(new MockInvokersSelector());\n\n    // Router实现了Comparable，可以排序\n    // 目前是根据URL中提供的priority排序。\n    Collections.sort(routers);\n\n    this.routers = routers;\n}\n{% endhighlight %}\n\n\n最后，RegistryDirectory的list()方法被调用时，依次调用所有的Router，过滤Invoker列表。\n\n{% highlight java %}\npublic List<Invoker<T>> list(Invocation invocation) throws RpcException {\n    List<Invoker<T>> invokers = doList(invocation);\n\n    List<Router> localRouters = this.routers; // local reference\n    if (localRouters != null && localRouters.size() > 0) {\n\n        // 依次调用所有的Router\n        for (Router router: localRouters){\n            try {\n                if (router.getUrl() == null || router.getUrl().getParameter(Constants.RUNTIME_KEY, true)) {\n                    invokers = router.route(invokers, getConsumerUrl(), invocation);\n                }\n            } catch (Throwable t) {\n                logger.error(\"Failed to execute router: \" + getUrl() + \", cause: \" + t.getMessage(), t);\n            }\n        }\n    }\n\n    return invokers;\n}\n{% endhighlight %}\n\n\n\n\n",
			"file": "_posts/dubbo/2017-06-01-dubbo-source-configurator.md",
			"file_size": 5509,
			"file_write_time": 131411069622348002,
			"settings":
			{
				"buffer_size": 4864,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 58.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pack",
				"Preferences: Browse Packages"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 59.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/X/dev/amonest.github.io",
		"/X/dev/amonest.github.io/_drafts",
		"/X/dev/amonest.github.io/_includes",
		"/X/dev/amonest.github.io/_includes/html",
		"/X/dev/amonest.github.io/_layouts"
	],
	"file_history":
	[
		"/X/dev/amonest.github.io/_posts/dubbo/2017-06-01-dubbo-source-router.md",
		"/X/dev/amonest.github.io/_posts/dubbo/2017-06-01-dubbo-source-configurator.md",
		"/X/dev/amonest.github.io/_posts/dubbo/2017-06-01-dubbo-source-registry-protocol.md",
		"/X/dev/amonest.github.io/_posts/dubbo/2017-06-01-dubbo-source-exchangers.md",
		"/X/dev/amonest.github.io/_posts/dubbo/2017-06-01-dubbo-source-cluster.md",
		"/X/dev/amonest.github.io/_posts/dubbo/2017-06-01-dubbo-source-load-balance.md",
		"/X/dev/amonest.github.io/_posts/dubbo/2017-06-01-dubbo-source-protocol-dubbo.md",
		"/X/dev/amonest.github.io/index.md",
		"/X/dev/amonest.github.io/_includes/html/left.html",
		"/X/dev/amonest.github.io/_posts/dubbo/2017-05-25-dubbo-source-reference-client.md",
		"/X/dev/amonest.github.io/_posts/others/2016-11-19-jekyll-installation-on-windows.md",
		"/X/dev/amonest.github.io/_posts/others/2016-12-27-sublime-settings.md",
		"/X/yun/Dubbo/ServiceConfig.exportLocal().txt",
		"/X/dev/amonest.github.io/_posts/dubbo/2017-05-25-dubbo-source-protocol-dubbo.md",
		"/C/Users/lbin/.dubbo/dubbo-registry-192.168.12.84.cache",
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/Channel.java",
		"/X/dev/suifeng-java-projects/orchid-parent/TODO.txt",
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/ResponseFuture.java",
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/Client.java",
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/ChannelHandler.java",
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/Endpoint.java",
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/ResponseCallback.java",
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/Dispatcher.java",
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-common/src/main/java/com/alibaba/dubbo/common/serialize/DataInput.java",
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-common/src/main/java/com/alibaba/dubbo/common/Extension.java",
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/support/DefaultFuture.java",
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-common/src/main/java/com/alibaba/dubbo/common/URL.java",
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/Response.java",
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/Request.java",
		"/C/Users/lbin/Desktop/dubbo-master/dubbo-master/dubbo-remoting/dubbo-remoting-api/src/main/java/com/alibaba/dubbo/remoting/exchange/support/SimpleFuture.java",
		"/X/dev/amonest.github.io/_drafts/spring-source-create-bean-instance.md",
		"//cloth/apache-tomcat-8.0.35/webapps/ROOT/jsps/check-account.jsp",
		"/X/dev/suifeng-java-projects/orchid-parent/README.md",
		"/X/dev/amonest.github.io/_drafts/spring-analysis-AnnotationConfigApplicationContext.md",
		"/X/dev/amonest.github.io/_posts/books/2017-04-29-java-multi-threads.md",
		"/D/SHARED/TEMP/motan-master/motan-manager/src/main/resources/config.properties",
		"/X/dev/suifeng-java-projects/orchid-parent/pom.xml",
		"/C/Users/lbin/Desktop/bookmarks_17_4_29.html",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-18-spring-source-ribbon-configruation.md",
		"/W/cloth-image-handler/cloth-image-handler.xml",
		"/X/dev/amonest.github.io/_drafts/spring-source-annotation-application-initialize.md",
		"/X/dev/amonest.github.io/_includes/snippet/SpringApplication.txt",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-05-spring-autowired-map-or-list.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-05-spring-config-servlet-context-listener.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-05-spring-reflection-set-field.md",
		"//cloth/apache-tomcat-8.0.35/webapps/ROOT/WEB-INF/jsp/enterprise/column/epColumn.jsp",
		"//cloth/apache-tomcat-8.0.35/webapps/ROOT/WEB-INF/jsp/enterprise/goods/columnInfo_forelation.jsp",
		"//cloth/apache-tomcat-8.0.35/webapps/ROOT/jsps/detail-account.jsp",
		"//cloth/apache-tomcat-8.0.35/webapps/ROOT/jsps/theme/default/image/style.custom.css",
		"/X/dev/amonest.github.io/assets/navi.css",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-03-spring-config-servlet-registration.md",
		"/X/dev/amonest.github.io/assets/superfish/css/superfish.css",
		"/X/dev/amonest.github.io/_posts/spring/2016-12-09-spring-mvc-web-controller.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-05-spring-mvc-simple-url-handler-mapping.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-05-spring-config-autowired-map-or-list.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-04-05-spring-config-autowired-collection.md",
		"/X/dev/amonest.github.io/_includes/html/top.html",
		"/X/dev/amonest.github.io/_includes/html/header.html",
		"/X/dev/amonest.github.io/_posts/spring/2017-03-24-spring-source-eureka-instance-config.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-03-28-spring-source-eureka-client-summary.md",
		"/X/dev/amonest.github.io/_posts/database/sybase/2017-03-30-sybase-identity-insert.md",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zuul-service/src/main/resources/application.properties",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/user-service/src/main/java/net/mingyang/spring_cloud_examples/user_service/Application.java",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/user-service/src/main/java/net/mingyang/spring_cloud_examples/user_service/controller/ComputeController.java",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/web-client/pom.xml",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zuul-service/pom.xml",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zuul-service/src/main/resources/bootstrap.properties",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zuul-service/src/main/java/net/mingyang/spring_cloud_examples/zuul_service/Application.java",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/pom.xml",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zuul-service/.gitignore",
		"/D/SHARED/ERP/SQL/sybase數據庫異常轉移.sql",
		"/X/dev/amonest.github.io/_posts/spring/2017-03-28-spring-source-eureka-http-client.md",
		"//cloth/apache-tomcat-8.0.35/webapps/ROOT/WEB-INF/classes/jdbc.properties",
		"/X/dev/supercap-cloth/src/cc/modules/orm/hibernate/SQLServer2005Dialect.java",
		"/C/Users/lbin/Desktop/SUPERCAP.html",
		"/X/dev/amonest.github.io/_posts/java/2017-03-27-java-call-ant-api.md",
		"/X/dev/amonest.github.io/_posts/java/2017-03-27-java-call-cmd-and-return.md",
		"/X/dev/amonest.github.io/_posts/java/2017-03-27-java-thread-daemon-thread.md",
		"/X/dev/amonest.github.io/_posts/spring/2016-12-26-spring-boot-config-auto-configuration-sample.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-03-24-spring-source-eureka-client-config.md",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zookeeper-webclient/pom.xml",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zookeeper-compute/pom.xml",
		"/X/dev/suifeng-java-projects/cloud-examples/cloud-compute-service/src/main/java/net/mingyang/cloud_compute_service/ComputeController.java",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/eureka-service/pom.xml",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zookeeper-discovery/pom.xml",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/zookeeper-config/pom.xml",
		"/X/dev/amonest.github.io/_includes/block/spring-source-list.html",
		"/X/dev/amonest.github.io/_posts/spring/2017-03-13-spring-source-xml-custom-schema.md",
		"/X/bin/spring-1.4.1.RELEASE/bin/spring.bat",
		"/X/dev/suifeng-java-projects/spring-boot-helloworld/pom.xml",
		"/X/dev/suifeng-java-projects/spring-boot-test/pom.xml",
		"/C/Users/lbin/Desktop/20170317101654.xml",
		"/X/dev/suifeng-java-projects/spring-cloud-examples/eureka-service/src/main/java/net/mingyang/spring_cloud_examples/eureka_service/Application.java",
		"/X/dev/supercap-cloth/.gitignore",
		"/X/dev/amonest.github.io/_drafts/spring-analysis-create-bean-instance.md",
		"/X/dev/amonest.github.io/_posts/spring/2017-03-13-spring-config-custom-xml-schema.md",
		"/X/dev/amonest.github.io/_drafts/spring-source-xml-entity-resolver.md",
		"/X/dev/amonest.github.io/_includes/block/spring-analysis-list.html",
		"/X/dev/amonest.github.io/_layouts/post.html",
		"/X/dev/supercap-cloth/src/cc/modules/email/Mail.java",
		"/X/dev/amonest.github.io/_drafts/spring-source-parse-xml-config.md",
		"/X/dev/amonest.github.io/_drafts/spring-analysis-parse-xml-config.md",
		"/X/dev/amonest.github.io/_includes/abc.html",
		"//cloth/apache-tomcat-8.0.35/webapps/ROOT/custom/layerRecommends.jsp",
		"/X/dev/amonest.github.io/_posts/eclipse/2017-02-28-eclipse-tab-spaces.md",
		"/C/Windows/System32/drivers/etc/hosts",
		"/X/dev/suifeng-java-projects/ant-spring-generator/build.xml",
		"/X/dev/suifeng-java-projects/ant-spring-generator/build/email-service/src/main/java/net/mingyang/spring_cloud_examples/email_service/Application.java",
		"/C/Users/lbin/Desktop/2017.02.24 AM/方案一/电脑、iPhone、安卓、Linux系列（增强版）/hosts",
		"/X/dev/amonest.github.io/_posts/linux/2017-02-23-linux-install-docker-compose.md",
		"/C/Users/lbin/Desktop/links.txt",
		"/X/dev/suifeng-java-projects/cloud-examples/cloud-eureka-server/src/main/docker/Dockerfile",
		"/X/dev/amonest.github.io/_posts/linux/2017-02-22-linux-modify-sudoers.md",
		"/X/dev/suifeng-java-projects/cloud-examples/cloud-eureka-server/pom.xml",
		"/X/dev/amonest.github.io/_posts/linux/2017-02-22-linux-query-user-in-groups.md",
		"/X/dev/amonest.github.io/_posts/linux-commands/2017-02-22-linux-command-groups.md",
		"/X/dev/amonest.github.io/_posts/linux/2016-12-29-linux-host-name.md",
		"/X/dev/suifeng-java-projects/cloud-parent/cloud-discovery/pom.xml",
		"/X/dev/suifeng-java-projects/cloud-parent/cloud-config/src/main/resources/bootstrap.properties",
		"/X/dev/suifeng-java-projects/cloud-parent/cloud-config/pom.xml",
		"/X/dev/suifeng-java-projects/cloud-parent/cloud-score/pom.xml",
		"/X/dev/suifeng-java-projects/ant-spring-generator/common.xml",
		"/X/dev/suifeng-java-projects/ant-spring-generator/src/application.properties",
		"/X/dev/suifeng-java-projects/ant-spring-generator/src/pom.xml",
		"/X/dev/suifeng-java-projects/ant-spring-generator/build/spring-cloud-configserver/pom.xml",
		"/X/dev/suifeng-java-projects/ant-spring-generator/src/Application.java",
		"/X/dev/suifeng-java-projects/ant-spring-generator/.gitignore",
		"/X/dev/suifeng-java-projects/ant-spring-generator/build/spring-cloud-configserver/src/main/java/net/mingyang/spring_cloud_configserver/Application.java"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"X:\\dev\\amonest.github.io\\_drafts",
			"C:\\Users\\lbin\\Desktop\\thymeleaf-spring4-2.1.5.RELEASE-sources",
			"C:\\Users\\lbin\\Desktop\\spring-context-4.3.6.RELEASE-sources",
			"X:\\dev\\amonest.github.io\\_posts\\spring",
			"C:\\Users\\lbin\\Desktop\\opencart-2.1.0.2\\opencart-2.1.0.2\\upload\\admin",
			"C:\\Users\\lbin\\Desktop\\opencart-2.1.0.2\\opencart-2.1.0.2\\upload",
			"D:\\SHARED\\TEMP\\amonest.github.io",
			"D:\\SHARED\\TEMP\\suifeng_html",
			"D:\\SHARED\\TEMP\\workspace\\dubbo-master",
			"X:\\dev\\supercap-cloth\\src"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Exchange",
			"subscribe",
			"group",
			"cachedDefaultName",
			"isSent",
			"start",
			"Server",
			"Transport",
			"serialization",
			"Serialization",
			"BeanDefinitionRegistryPostProcessor ",
			"BeanDefinitionRegistryPostProcessor",
			"depot",
			"WEB224",
			"WEB221",
			"Refresh",
			"Qty",
			"goodsInfos",
			"UnderConstruction.jpg",
			" style=\"width: 160px; background: url({{ ASSET_PATH }}/img/arrow.gif) no-repeat 150px 50%;\"",
			"dot",
			"dash",
			"menu",
			"tree2",
			"Jersey",
			"X:\\bin\\spring-1.4.1.RELEASE\\bin",
			"// ******",
			"group",
			"role",
			"user",
			"hasErrors",
			"\"param\"",
			"param",
			"ApplicationContext",
			"ApplicationContextWare",
			"ConfigurationClassPostProcessor",
			"实例",
			"注解识别器",
			"small",
			"<T>",
			"cloud_cli_feign_feign",
			"cloud_cli",
			"250px",
			"tree2",
			"260px",
			"spring-boot-config",
			"spring_boot_config",
			"spring-create-maven-project",
			"User",
			"Content-Type",
			"Allow",
			"AllowO",
			"android",
			"phpMyadmin",
			"200",
			"itmbrma",
			"goodsColumn",
			"itmbrmaAttrs",
			"200",
			"R.",
			"spring_cloth_sample",
			"rtx_allorder_used",
			"KVM",
			"tree3",
			"zabbix",
			"sPrev",
			" ",
			"TxtConfigTypeId",
			"LoadObjectButton",
			"MSHTML",
			"\"",
			"$",
			"contents",
			"<a href=\"./note",
			"./note",
			"<a href=\"assets/note",
			"#2",
			"jekyll",
			"tab_size",
			"jekyll",
			"D:/amonest.github.io",
			"favicon.ico",
			"img/icon.gif",
			"rouge.css",
			"assets/rouge.css",
			".codehilite",
			"        \n",
			"Configure Vsftpd.",
			"../img/",
			"../img",
			"assets/css/",
			"./",
			"assets/css/",
			"./",
			"assets/css/",
			"./",
			"Ads",
			"ads",
			"Ads",
			"left",
			"./CentOS 7 _ Apache httpd _ Install _ Server World_files/",
			"5px 0 }",
			"margin:5px",
			"float:left;",
			"width:",
			"javascript",
			"jquery",
			"bootstrap-3",
			"bootstrap.min.js",
			"What is Jekyll?",
			"Update Author Attributes",
			"vhost",
			"mingyang",
			"DubboRegistryFactory",
			"setRegistryFactory",
			"registryFactory",
			"ProxyFactory",
			"Wrapper",
			"forgetPassword",
			"source",
			"Javassist",
			"proxyFactory",
			"ref",
			"update_check",
			"update",
			"upgrade"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Registry",
			"Server",
			"transport",
			"Codec",
			"Transport",
			"",
			"// <<<这里<<<",
			"permission",
			"group",
			"role",
			"注解读取器",
			"&lt;T&gt;",
			"cloud_cli_feign",
			"240px",
			"250px",
			"spring-boot-test",
			"spring_boot_test",
			"spring-boot-create-maven-project",
			"spring_boot_helloworld",
			"",
			"'",
			"<a href=\"http://www.server-world.info/en/note",
			"C:/amonest.github.io",
			".highlight",
			"img/",
			"img",
			"assets/",
			"5px 0; }",
			"margin: 5px",
			"float: left; ",
			"width: "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "_includes/html/left.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 22888,
						"regions":
						{
						},
						"selection":
						[
							[
								4189,
								4189
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 252.0,
						"translation.y": 285.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "_posts/dubbo/2017-06-01-dubbo-source-registry-directory.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5961,
						"regions":
						{
						},
						"selection":
						[
							[
								4049,
								4049
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2209.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "_posts/dubbo/2017-05-25-dubbo-source-reference-client.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12544,
						"regions":
						{
						},
						"selection":
						[
							[
								10403,
								10403
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4465.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "_posts/dubbo/2017-06-01-dubbo-source-configurator.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4864,
						"regions":
						{
						},
						"selection":
						[
							[
								61,
								61
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 28.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Ruby/Ruby.sublime-build",
	"project": "amonest.github.io.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"X:\\dev\\suifeng-php-utils\\android-rpc-server\\android-rpc-server.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 210.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
