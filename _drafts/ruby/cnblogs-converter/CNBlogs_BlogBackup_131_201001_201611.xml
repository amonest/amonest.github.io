<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:slash="http://purl.org/rss/1.0/modules/slash/"><channel><title>博客园-eastson的博客天地</title><link>http://www.cnblogs.com/eastson/</link><description /><language>zh-cn</language><lastBuildDate>Mon, 21 Nov 2016 00:49:11 GMT</lastBuildDate><pubDate>Mon, 21 Nov 2016 00:49:11 GMT</pubDate><ttl>60</ttl><item><title>CentOS7：Puppet推送Zabbix Agent</title><link>http://www.cnblogs.com/eastson/archive/2016/11/17/6073027.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 17 Nov 2016 05:48:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/11/17/6073027.html</guid><description><![CDATA[<p>创建zabbix模块目录：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">mkdir</span> -p /etc/puppet/modules/zabbix/{manifests,templates}</pre>
</div>
<p>创建init.pp清单：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">cat</span> /etc/puppet/modules/zabbix/manifests/<span style="color: #000000;">init.pp 
class zabbix {
  package { </span><span style="color: #800000;">'</span><span style="color: #800000;">epel-release</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    ensure </span>=&gt;<span style="color: #000000;"> installed,
  }
  package { </span><span style="color: #800000;">'</span><span style="color: #800000;">zabbix22-agent</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    ensure </span>=&gt;<span style="color: #000000;"> installed,
  }
  </span><span style="color: #0000ff;">file</span> { <span style="color: #800000;">'</span><span style="color: #800000;">/etc/zabbix/zabbix_agentd.conf</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    content </span>=&gt; template(<span style="color: #800000;">"</span><span style="color: #800000;">zabbix/zabbix_agentd.conf.erb</span><span style="color: #800000;">"</span><span style="color: #000000;">),
    ensure </span>=&gt; <span style="color: #0000ff;">file</span><span style="color: #000000;">,
  }
  service { </span><span style="color: #800000;">'</span><span style="color: #800000;">zabbix-agent</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    ensure </span>=&gt; <span style="color: #800000;">"</span><span style="color: #800000;">running</span><span style="color: #800000;">"</span><span style="color: #000000;">,
    hasstatus </span>=&gt; <span style="color: #0000ff;">true</span><span style="color: #000000;">,
    enable </span>=&gt; <span style="color: #0000ff;">true</span><span style="color: #000000;">,
  }
  Package[</span><span style="color: #800000;">"</span><span style="color: #800000;">zabbix22-agent</span><span style="color: #800000;">"</span>] -&gt; File[<span style="color: #800000;">"</span><span style="color: #800000;">/etc/zabbix/zabbix_agentd.conf</span><span style="color: #800000;">"</span>] -&gt; Service[<span style="color: #800000;">"</span><span style="color: #800000;">zabbix-agent</span><span style="color: #800000;">"</span><span style="color: #000000;">]
}</span></pre>
</div>
<p>创建zabbix_agentd.conf.erb模板：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">cp</span> /etc/zabbix/zabbix_agentd.conf /etc/puppet/modules/zabbix/templates/<span style="color: #000000;">zabbix_agentd.conf.erb

$ </span><span style="color: #0000ff;">cat</span> /etc/puppet/modules/zabbix/templates/<span style="color: #000000;">zabbix_agentd.conf.erb
Server</span>=&lt;%= zabbix_server %&gt;<span style="color: #000000;">
ServerActive</span>=&lt;%= zabbix_server %&gt;<span style="color: #000000;">
Hostname</span>=&lt;%= fqdn %&gt;<span style="color: #000000;">
... ... ... ...</span></pre>
</div>
<p>编辑site.pp：</p>
<div class="cnblogs_code">
<pre>$# <span style="color: #0000ff;">cat</span> /etc/puppet/manifests/<span style="color: #000000;">site.pp 
Package {
  allow_virtual </span>=&gt; <span style="color: #0000ff;">true</span><span style="color: #000000;">,
}

node default {
  $zabbix_server </span>= <span style="color: #800000;">"</span><span style="color: #800000;">192.168.154.137</span><span style="color: #800000;">"</span><span style="color: #000000;">
  include zabbix
}</span></pre>
</div>]]></description></item><item><title>CentOS7：配置LAMP</title><link>http://www.cnblogs.com/eastson/archive/2016/11/17/6072415.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 17 Nov 2016 01:01:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/11/17/6072415.html</guid><description><![CDATA[<p>参考：<a id="cb_post_title_url" href="http://www.cnblogs.com/xqzt/p/5123748.html">Centos 7配置LAMP</a></p>
<p>&nbsp;</p>]]></description></item><item><title>CentOS7：安装Zabbix</title><link>http://www.cnblogs.com/eastson/archive/2016/11/17/6069985.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 17 Nov 2016 00:51:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/11/17/6069985.html</guid><description><![CDATA[<p>参考：<a id="cb_post_title_url" href="http://www.cnblogs.com/xqzt/p/5124894.html">CentOS 7 yum安装Zabbix</a></p>
<h3>1. 安装Zabbix Server</h3>
<p>EPEL源里面有Zabbix的安装包，所以需要先安装EPEL。</p>
<p>Zabbix源也可以从这里获得：<a href="http://repo.zabbix.com/" target="_blank">http://repo.zabbix.com/</a></p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> epel-release</pre>
</div>
<p>安装Zabbix Server：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> zabbix22-server-mysql zabbix22-web-mysql </pre>
</div>
<p><span style="line-height: 1.5;">安装Zabbix Agent（可选）：</span>&nbsp;</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> zabbix22-agent</pre>
</div>
<h3>&nbsp;<span style="line-height: 1.5; font-size: 1.17em;">2. 安装MySql Server</span></h3>
<p>先安装MySQL源。从下面网址可以找到对应的MySQL源：</p>
<div class="cnblogs_code">
<pre>http:<span style="color: #008000;">//</span><span style="color: #008000;">dev.mysql.com/downloads/repo/yum/</span></pre>
</div>
<p>安装MySQL源：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> http:<span style="color: #008000;">//</span><span style="color: #008000;">repo.mysql.com</span><span style="color: #008000;">//</span><span style="color: #008000;">mysql57-community-release-el7-9.noarch.rpm</span></pre>
</div>
<p>安装MySQL Server：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> mysql-community-server</pre>
</div>
<p>启动MySQL Server：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ systemctl enable mysqld.service
$ systemctl start mysqld.service</span></pre>
</div>
<h3>3. 创建Zabbix数据库和用户</h3>
<p>使用root用户登录mysql：</p>
<div class="cnblogs_code">
<pre>$ mysql -u root -p mysql</pre>
</div>
<p><span style="line-height: 1.5;">创建zabbix数据库：</span></p>
<div class="cnblogs_code">
<pre>mysql&gt; create database zabbix character set utf8;</pre>
</div>
<p>创建Zabbix用户并授权：</p>
<div class="cnblogs_code">
<pre>mysql&gt; create user <span style="color: #800000;">'</span><span style="color: #800000;">zabbix</span><span style="color: #800000;">'</span>@<span style="color: #800000;">'</span><span style="color: #800000;">localhost</span><span style="color: #800000;">'</span> identified by <span style="color: #800000;">'</span><span style="color: #800000;">zabbix</span><span style="color: #800000;">'</span><span style="color: #000000;">;

mysql</span>&gt; grant all privileges on zabbix.* to <span style="color: #800000;">'</span><span style="color: #800000;">zabbix</span><span style="color: #800000;">'</span>@<span style="color: #800000;">'</span><span style="color: #800000;">localhost</span><span style="color: #800000;">'</span><span style="color: #000000;">;

mysql</span>&gt; flush privileges;</pre>
</div>
<h3>&nbsp;4. 导入zabbix template</h3>
<p>使用zabbix用户登录zabbix数据库：</p>
<div class="cnblogs_code">
<pre>$ mysql -u zabbix -p zabbix</pre>
</div>
<p>导入zabbix template：</p>
<div class="cnblogs_code">
<pre>mysql&gt; source /usr/share/zabbix-mysql/<span style="color: #000000;">schema.sql
mysql</span>&gt; source /usr/share/zabbix-mysql/<span style="color: #000000;">images.sql
mysql</span>&gt; source /usr/share/zabbix-mysql/data.sql</pre>
</div>
<h3>5.修改Zabbix Server配置</h3>
<p>编辑/etc/zabbix/zabbix_server.conf，修改数据库相关选项：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">vi</span> /etc/zabbix/<span style="color: #000000;">zabbix_server.conf
DBHost</span>=<span style="color: #000000;">localhost
DBName</span>=<span style="color: #000000;">zabbix
DBUser</span>=<span style="color: #000000;">zabbix
DBPassword</span>=<span style="color: #000000;">zabbix
DBPort</span>=<span style="color: #800080;">3306</span></pre>
</div>
<h3><span style="line-height: 1.5;">6.修改Zabbix Agent配置</span></h3>
<p><span style="line-height: 1.5;">编辑/etc/zabbix/zabbix_agent.conf，修改Server选项：</span></p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">vi</span> /etc/zabbix/<span style="color: #000000;">zabbix_agentd.conf
Server</span>=<span style="color: #800080;">127.0</span>.<span style="color: #800080;">0.1</span><span style="color: #000000;">
ServerActive</span>=<span style="color: #800080;">127.0</span>.<span style="color: #800080;">0.1</span><span style="color: #000000;">
Hostname</span>=<span style="color: #800080;">127.0</span>.<span style="color: #800080;">0.1</span></pre>
</div>
<h3>7.修改PHP配置</h3>
<p>编辑/etc/php.ini:</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">vi</span> /etc/<span style="color: #000000;">php.ini
max_execution_time </span>= <span style="color: #800080;">600</span><span style="color: #000000;">
max_input_time </span>= <span style="color: #800080;">600</span><span style="color: #000000;">
memory_limit </span>= <span style="color: #800080;">256</span><span style="color: #000000;">
post_max_size </span>=<span style="color: #000000;"> 32M
upload_max_filesize </span>=<span style="color: #000000;"> 16M
</span><span style="color: #0000ff;">date</span>.timezone = Asia/Shanghai</pre>
</div>
<h3><span style="line-height: 1.5;">8. 启动服务</span></h3>
<p><span style="line-height: 1.5;">修改Firewall，开放zabbix端口10050 and 10051：</span></p>
<div class="cnblogs_code">
<pre>$ firewall-cmd --permanent --add-port=<span style="color: #800080;">10050</span>/<span style="color: #000000;">tcp
$ firewall</span>-cmd --permanent --add-port=<span style="color: #800080;">10051</span>/<span style="color: #000000;">tcp
$ systemctl restart firewalld.service</span></pre>
</div>
<p>如果使用 SELinux, 运行以下命令使 Apache 可以和 Zabbix通信：</p>
<div class="cnblogs_code">
<pre>$ setsebool -P httpd_can_connect_zabbix=<span style="color: #800080;">1</span></pre>
</div>
<p>启动相关服务：</p>
<div class="cnblogs_code">
<pre>$ systemctl enable zabbix-<span style="color: #000000;">servermysql.service
$ systemctl enable zabbix</span>-<span style="color: #000000;">agent.service
$ systemctl enable mysqld.service
$ systemctl enable httpd.service

$ systemctl start zabbix</span>-server-<span style="color: #000000;">mysql.service
$ systemctl start zabbix</span>-<span style="color: #000000;">agent.service
$ systemctl restart httpd.service
$ systemctl restart mysqld.service</span></pre>
</div>
<h3>9.通过控制台访问Zabbix Server</h3>
<p>浏览器访问http://ip-address/zabbix：</p>
<p><img src="http://images2015.cnblogs.com/blog/111826/201611/111826-20161117084814388-814661081.png" alt="" /></p>
<p>按照提示进行安装。安装完成后，重定向到zabbix控制台登录页面. 输入用户名和密码，默认的用户名和密码为admin/zabbix.</p>
<p><img src="http://images2015.cnblogs.com/blog/111826/201611/111826-20161117084935607-742647267.png" alt="" /></p>
<h3><span style="font-size: 1.17em; line-height: 1.5;">A1. MySQL一些问题</span></h3>
<p>MySQL初始root密码不对，不能登录。用下面方式重置密码：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ systemctl stop mysqld.service

$ mysqld</span>-debug --user=mysql --skip-grant-tables --skip-networking &amp;<span style="color: #000000;">

$ mysql </span>-<span style="color: #000000;">u root mysql
mysql</span>&gt; UPDATE user SET Password=PASSWORD(<span style="color: #800000;">'</span><span style="color: #800000;">newpassword</span><span style="color: #800000;">'</span>) where USER=<span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">;
如果没有Password列，就用authentication_string列
mysql</span>&gt; update user set authentication_string=password(<span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span>) where user=<span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;"> ;
mysql</span>&gt;<span style="color: #000000;"> flush privileges;
mysql</span>&gt; exit;</pre>
</div>
<p>执行MySQL语句时，提示必须先执行ALTER USER重置密码：</p>
<div class="cnblogs_code">
<pre>ERROR <span style="color: #800080;">1820</span> (HY000): You must reset your password using ALTER USER statement before executing this statement.</pre>
</div>
<p>按下面方式处理：</p>
<div class="cnblogs_code">
<pre>mysql&gt; SET PASSWORD = PASSWORD(<span style="color: #800000;">'</span><span style="color: #800000;">your new password</span><span style="color: #800000;">'</span><span style="color: #000000;">);
mysql</span>&gt; ALTER USER <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span>@<span style="color: #800000;">'</span><span style="color: #800000;">localhost</span><span style="color: #800000;">'</span><span style="color: #000000;"> PASSWORD EXPIRE NEVER;
mysql</span>&gt; flush privileges;</pre>
</div>
<p>MySQL5.6.6增加了密码强度验证插件validate_password。使用了该插件会检查设置的密码是否符合当前设置的强度规则，若不满足则拒绝设置。影响的语句和函数有：create user,grant,set password,password(),old password。可以禁用该插件：</p>
<div class="cnblogs_code">
<pre># /etc/<span style="color: #000000;">my.cnf，需要重启服务
validate_password</span>=off</pre>
</div>]]></description></item><item><title>CentOS7：安装Puppet</title><link>http://www.cnblogs.com/eastson/archive/2016/11/14/6056456.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 14 Nov 2016 01:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/11/14/6056456.html</guid><description><![CDATA[<p>环境说明：</p>
<p>192.168.154.137 master.localdomain #Puppet Server</p>
<p>192.168.154.138 agent1.localdomain #Puppet Agent</p>
<p>这里的机器名称不要有下划线等特殊符合，否则后面会报&ldquo;the scheme puppet does not accept registry part&rdquo;这样的错误信息。</p>
<p>centos的官方软件库里面不包含puppet包，但是在epel项目里面有包含puppet包。epel 是一个对rhel软件仓库的扩展，把一些有用的，但是rhel库没包含的软件收集在一起做成的一个软件仓库。</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> epel-release</pre>
</div>
<h3><span style="font-size: 1.17em; line-height: 1.5;">1. 安装Puppet Server</span></h3>
<div class="cnblogs_code">
<pre>$ hostnamectl set-<span style="color: #0000ff;">hostname</span><span style="color: #000000;"> master.localdomain         #设置机器名称
$ systemctl reboot                                    #重启

$ </span><span style="color: #0000ff;">cat</span> /etc/<span style="color: #000000;">hosts 
</span><span style="color: #800080;">192.168</span>.<span style="color: #800080;">154.137</span><span style="color: #000000;"> master.localdomain
</span><span style="color: #800080;">192.168</span>.<span style="color: #800080;">154.138</span><span style="color: #000000;"> agent1.localdomain

$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> puppet-<span style="color: #000000;">server                            #安装Puppet Server

# firewall</span>-cmd --permanent --add-port=<span style="color: #800080;">8140</span>/tcp6        #修改防火墙，增加8140端口</pre>
</div>
<h3><span style="line-height: 1.5;">2. 安装Puppet Agent</span></h3>
<div class="cnblogs_code">
<pre>$ hostnamectl set-<span style="color: #0000ff;">hostname</span><span style="color: #000000;"> agent1.localdomain         #设置机器名称
$ systemctl reboot                                    #重启

$ </span><span style="color: #0000ff;">cat</span> /etc/<span style="color: #000000;">hosts 
</span><span style="color: #800080;">192.168</span>.<span style="color: #800080;">154.137</span><span style="color: #000000;"> master.localdomain</span><span style="color: #000000;">

$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> puppet                                 #安装Puppet Agent</pre>
</div>
<h3>3. 测试Puppet</h3>
<p>创建测试文件site.pp（Server端）：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">cat</span> /etc/puppet/manifests/<span style="color: #000000;">site.pp
node default {
    </span><span style="color: #0000ff;">file</span> { <span style="color: #800000;">"</span><span style="color: #800000;">/tmp/helloworld.txt</span><span style="color: #800000;">"</span><span style="color: #000000;"> :
        content </span>=&gt; <span style="color: #800000;">"</span><span style="color: #800000;">Hello World!</span><span style="color: #800000;">"</span><span style="color: #000000;">,
    }
}</span></pre>
</div>
<p>启动server，以no-daemonize方式，这样可以在控制台看到操作信息（Server端）：</p>
<div class="cnblogs_code">
<pre>$ puppet master --no-daemonize --<span style="color: #000000;">debug
... ...
Notice: Starting Puppet master version </span><span style="color: #800080;">3.6</span>.<span style="color: #800080;">2</span>         #启动成功，会看到这样的信息</pre>
</div>
<p>编辑客户端puppet.conf，增加server配置项（Agent端）：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">cat</span> /etc/puppet/<span style="color: #000000;">puppet.conf
[agent]
    ... ...
    server </span>= master.localdomain</pre>
</div>
<p>启动agent（Agent端，以root用户）：</p>
<div class="cnblogs_code">
<pre>$ puppet agent --<span style="color: #000000;">test
Info: Creating a new SSL key </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> agent1.localdomain
Info: Caching certificate </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> ca
Info: csr_attributes </span><span style="color: #0000ff;">file</span> loading from /etc/puppet/<span style="color: #000000;">csr_attributes.yaml
Info: Creating a new SSL certificate request </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> agent1.localdomain
Info: Certificate Request fingerprint (SHA256): 1D:</span><span style="color: #800080;">08</span>:<span style="color: #800080;">61</span>:3B:1F:<span style="color: #800080;">43</span>:8C:B5:<span style="color: #800080;">81</span>:<span style="color: #800080;">83</span>:0F:FF:CC:4A:4F:8E:BA:B4:5F:7C:<span style="color: #800080;">94</span>:<span style="color: #800080;">77</span>:<span style="color: #800080;">15</span>:<span style="color: #800080;">72</span>:A2:0C:C0:<span style="color: #800080;">44</span>:D9:1D:<span style="color: #800080;">16</span><span style="color: #000000;">:9E
Info: Caching certificate </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> ca
Exiting; no certificate found and waitforcert is disabled</span></pre>
</div>
<p>启动后，agent向server申请证书，因为证书还没有被server审核，所以目前通信是不成功的。</p>
<p>回到server，通过puppet cert查询证书：</p>
<div class="cnblogs_code">
<pre>$ puppet cert list --<span style="color: #000000;">all
  </span><span style="color: #800000;">"</span><span style="color: #800000;">agent1.localdomain</span><span style="color: #800000;">"</span> (SHA256) 1D:<span style="color: #800080;">08</span>:<span style="color: #800080;">61</span>:3B:1F:<span style="color: #800080;">43</span>:8C:B5:<span style="color: #800080;">81</span>:<span style="color: #800080;">83</span><span style="color: #000000;">:0F:FF:CC:4A:4F:8E:BA:B4
</span>+ <span style="color: #800000;">"</span><span style="color: #800000;">master.localdomain</span><span style="color: #800000;">"</span> (SHA256) <span style="color: #800080;">47</span>:A1:<span style="color: #800080;">12</span>:<span style="color: #800080;">28</span>:<span style="color: #800080;">22</span>:<span style="color: #800080;">05</span>:<span style="color: #800080;">75</span>:A5:E5:<span style="color: #800080;">92</span>:2B:F6:<span style="color: #800080;">53</span>:<span style="color: #800080;">05</span>:A8:D6:1F:9B</pre>
</div>
<p>证书列表中有cs_agnet1的申请，目前是未审核状态（最前面没有+）。审核证书：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ puppet cert sign agent1.localdomain

$ puppet cert list </span>--<span style="color: #000000;">all
</span>+ <span style="color: #800000;">"</span><span style="color: #800000;">agent1.localdomain</span><span style="color: #800000;">"</span> (SHA256) <span style="color: #800080;">39</span>:7F:<span style="color: #800080;">59</span>:A8:3C:B8:EF:B9:E2:AD:1D:5C:D7:<span style="color: #800080;">66</span>:B6:<span style="color: #800080;">02</span>:CF:<span style="color: #800080;">70</span>
+ <span style="color: #800000;">"</span><span style="color: #800000;">master.localdomain</span><span style="color: #800000;">"</span> (SHA256) <span style="color: #800080;">47</span>:A1:<span style="color: #800080;">12</span>:<span style="color: #800080;">28</span>:<span style="color: #800080;">22</span>:<span style="color: #800080;">05</span>:<span style="color: #800080;">75</span>:A5:E5:<span style="color: #800080;">92</span>:2B:F6:<span style="color: #800080;">53</span>:<span style="color: #800080;">05</span>:A8:D6:1F:9B:</pre>
</div>
<p>&nbsp;再次启动agent：</p>
<div class="cnblogs_code">
<pre># puppet agent --<span style="color: #000000;">test
Info: Retrieving pluginfacts
Info: Retrieving plugin
Info: Caching catalog </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> agent1.localdomain
Info: Applying configuration version </span><span style="color: #800000;">'</span><span style="color: #800000;">1479087051</span><span style="color: #800000;">'</span><span style="color: #000000;">
Notice: </span>/Stage[main]/Main/Node[default]/File[/tmp/helloworld.txt]/ensure: defined content as <span style="color: #800000;">'</span><span style="color: #800000;">{md5}ed076287532e86365e841e92bfc50d8c</span><span style="color: #800000;">'</span><span style="color: #000000;">
Notice: Finished catalog run </span><span style="color: #0000ff;">in</span> <span style="color: #800080;">0.02</span> seconds</pre>
</div>
<p>这时候，查看/tmp/helloworld.txt，该文件就自动同步了。</p>
<p>在证书申请过程中，如果有问题，可以删除证书重新申请，一般都能解决问题。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">Agent:
$ </span><span style="color: #0000ff;">rm</span> -rf /var/lib/<span style="color: #000000;">puppet     #删除缓存文件

Server:
$ puppet cert clean agent1.localdomain</span></pre>
</div>
<h3>&nbsp;Q1. 服务端找不到证书?</h3>
<p>在测试时，先启动Server，再通过Agent测试，回到Server通过puppet cert list --all怎么都找不到证书。</p>
<p>后来发现问题原因是这样的：在Server端，puppet.conf使用的是默认配置：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">[main]
    # Where SSL certificates are kept.
    ssldir </span>= $vardir/ssl</pre>
</div>
<p>然后用admin帐号（不是root，另外创建的帐号）启动Server：</p>
<div class="cnblogs_code">
<pre>[admin@master ~]$ <span style="color: #0000ff;">sudo</span> puppet master --no-daemonize --debug</pre>
</div>
<p>这时候，Agent传过来的证书申请实际上都存放在/home/admin/.puppet/ssl/目录下。然后，我再开了另外一个SSH Client，用的是不同的root帐号，结果就是怎么也找不到证书了。所以，在配置Server端时，ssldir最好这样配置：</p>
<div class="cnblogs_code">
<pre>ssldir = /var/lib/puppet/ssl</pre>
</div>
<h3>&nbsp;Q2. 自动审核证书?</h3>
<p>创建autosign.conf文件：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">cat</span> /etc/puppet/<span style="color: #000000;">autosign.conf 
</span>*.localdomain</pre>
</div>
<p>修改Server配置：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">cat</span> /etc/puppet/<span style="color: #000000;">puppet.conf 
[master]
    autosign </span>= /etc/puppet/autosign.conf</pre>
</div>
<p>删除Server和Agent的过期证书：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">Server:
$ puppet cert clean </span>--<span style="color: #000000;">all

Agent:
$ </span><span style="color: #0000ff;">rm</span> -rf /var/lib/puppet</pre>
</div>
<p>OK，这样就可以了。</p>
<h3>Q3. 一个简单的site.pp例子</h3>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">cat</span> /etc/puppet/manifests/<span style="color: #000000;">site.pp 
node default {
  </span><span style="color: #0000ff;">file</span> { <span style="color: #800000;">'</span><span style="color: #800000;">/tmp/hello.txt</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    content </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">Hello World!</span><span style="color: #800000;">'</span><span style="color: #000000;">,
  }
  user { </span><span style="color: #800000;">'</span><span style="color: #800000;">admin</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    ensure           </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">present</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    comment          </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">admin</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    gid              </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">1000</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    </span><span style="color: #0000ff;">groups</span>           =&gt; [<span style="color: #800000;">'</span><span style="color: #800000;">wheel</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">admin</span><span style="color: #800000;">'</span><span style="color: #000000;">],
    home             </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">/home/admin</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    password         </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">$6$o.PFkMC14Xd2gOTk$atsNGzVmLFtQlvVr9imERjmw9n8vNr0quliqW6EdcZR6zyXFGfUv3EIbc9UZd3kJDIuxuMfyonVdm0OT5SJHM.</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    password_max_age </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">99999</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    password_min_age </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">0</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    shell            </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">/bin/bash</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    uid              </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">1000</span><span style="color: #800000;">'</span><span style="color: #000000;">,
  }
  package { </span><span style="color: #800000;">'</span><span style="color: #800000;">epel-release</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    ensure           </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">installed</span><span style="color: #800000;">'</span><span style="color: #000000;">,
  }
  package { </span><span style="color: #800000;">'</span><span style="color: #800000;">tcping</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    ensure           </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">installed</span><span style="color: #800000;">'</span><span style="color: #000000;">,
  }
  package { </span><span style="color: #800000;">'</span><span style="color: #800000;">tree</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    ensure           </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">installed</span><span style="color: #800000;">'</span><span style="color: #000000;">,
  }
  package { </span><span style="color: #800000;">'</span><span style="color: #800000;">net-tools</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    ensure           </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">installed</span><span style="color: #800000;">'</span><span style="color: #000000;">,
  }
  service { </span><span style="color: #800000;">'</span><span style="color: #800000;">firewalld.service</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    ensure           </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">stopped</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    enable           </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">false</span><span style="color: #800000;">'</span><span style="color: #000000;">,
  }
  exec { </span><span style="color: #800000;">"</span><span style="color: #800000;">selinux</span><span style="color: #800000;">"</span><span style="color: #000000;">:
    command </span>=&gt; <span style="color: #800000;">"</span><span style="color: #800000;">setenforce 0</span><span style="color: #800000;">"</span><span style="color: #000000;">,
    path   </span>=&gt; <span style="color: #800000;">"</span><span style="color: #800000;">/usr/bin:/usr/sbin:/bin:/sbin</span><span style="color: #800000;">"</span><span style="color: #000000;">,
    unless </span>=&gt; <span style="color: #800000;">"</span><span style="color: #800000;">getenforce |grep -i Permissive</span><span style="color: #800000;">"</span><span style="color: #000000;">,
  }
}</span></pre>
</div>
<p>网上找到的两个例子：&nbsp;<a id="" href="http://files.cnblogs.com/files/eastson/anjuke-puppet.rar">anjuke-puppet.rar</a>&nbsp;&nbsp;<a id="" href="http://files.cnblogs.com/files/eastson/vmx_puppet.rar">vmx_puppet.rar</a></p>]]></description></item><item><title>CentOS7：搭建SVN ＋ Apache 服务器</title><link>http://www.cnblogs.com/eastson/archive/2016/11/10/6051269.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 10 Nov 2016 08:07:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/11/10/6051269.html</guid><description><![CDATA[<h3>1. 安装httpd</h3>
<p>安装httpd服务：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> httpd</pre>
</div>
<p>检查httpd是否安装成功：</p>
<div class="cnblogs_code">
<pre>$ httpd -<span style="color: #000000;">version
Server version: Apache</span>/<span style="color: #800080;">2.4</span>.<span style="color: #800080;">6</span><span style="color: #000000;"> (CentOS)
Server built:   Jul </span><span style="color: #800080;">18</span> <span style="color: #800080;">2016</span> <span style="color: #800080;">15</span>:<span style="color: #800080;">30</span>:<span style="color: #800080;">14</span></pre>
</div>
<h3>2. 安装svnserve</h3>
<p>安装svnserve服务：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> subversion</pre>
</div>
<p>检查svnserve是否安装成功：</p>
<div class="cnblogs_code">
<pre>$ svnserve --<span style="color: #000000;">version
svnserve, version </span><span style="color: #800080;">1.7</span>.<span style="color: #800080;">14</span><span style="color: #000000;"> (r1542130)
compiled Nov </span><span style="color: #800080;">20</span> <span style="color: #800080;">2015</span>, <span style="color: #800080;">19</span>:<span style="color: #800080;">25</span>:<span style="color: #800080;">09</span></pre>
</div>
<h3>3. 按住mod_dav_svn</h3>
<p>mod_dav_svn是apache服务器访问svn的一个模块。通过yum安装：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> mod_dav_svn</pre>
</div>
<p>安装成功后，会有mod_dav_svn.so和mod_authz_svn.so两个文件。</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">find</span> / -<span style="color: #000000;">name mod_dav_svn.so
</span>/usr/lib64/httpd/modules/<span style="color: #000000;">mod_dav_svn.so

$ </span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">find</span> / -<span style="color: #000000;">name mod_authz_svn.so
</span>/usr/lib64/httpd/modules/mod_authz_svn.so</pre>
</div>
<h3>4. 创建svn仓库</h3>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">mkdir</span> /var/www/<span style="color: #000000;">svn
$ </span><span style="color: #0000ff;">sudo</span> svnadmin create /var/www/svn/spring-hello-<span style="color: #000000;">world

$ ll </span>/var/www/svn/<span style="color: #000000;">
drwxr</span>-xr-x. <span style="color: #800080;">6</span> root root <span style="color: #800080;">80</span> Nov <span style="color: #800080;">10</span> <span style="color: #800080;">14</span>:<span style="color: #800080;">42</span> spring-hello-<span style="color: #000000;">world

$ ll </span>/var/www/svn/spring-hello-world/<span style="color: #000000;">
drwxr</span>-xr-x. <span style="color: #800080;">2</span> root root   <span style="color: #800080;">51</span> Nov <span style="color: #800080;">10</span> <span style="color: #800080;">14</span>:<span style="color: #800080;">42</span><span style="color: #000000;"> conf
drwxr</span>-sr-x. <span style="color: #800080;">6</span> root root <span style="color: #800080;">4096</span> Nov <span style="color: #800080;">10</span> <span style="color: #800080;">14</span>:<span style="color: #800080;">42</span><span style="color: #000000;"> db
</span>-r--r--r--. <span style="color: #800080;">1</span> root root    <span style="color: #800080;">2</span> Nov <span style="color: #800080;">10</span> <span style="color: #800080;">14</span>:<span style="color: #800080;">42</span><span style="color: #000000;"> format
drwxr</span>-xr-x. <span style="color: #800080;">2</span> root root <span style="color: #800080;">4096</span> Nov <span style="color: #800080;">10</span> <span style="color: #800080;">14</span>:<span style="color: #800080;">42</span><span style="color: #000000;"> hooks
drwxr</span>-xr-x. <span style="color: #800080;">2</span> root root   <span style="color: #800080;">39</span> Nov <span style="color: #800080;">10</span> <span style="color: #800080;">14</span>:<span style="color: #800080;">42</span><span style="color: #000000;"> locks
</span>-rw-r--r--. <span style="color: #800080;">1</span> root root  <span style="color: #800080;">229</span> Nov <span style="color: #800080;">10</span> <span style="color: #800080;">14</span>:<span style="color: #800080;">42</span> README.txt</pre>
</div>
<h3>5. 配置权限</h3>
<p>修改svn仓库的用户组为apache：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">chown</span> -R apache:apache /var/www/svn/spring-hello-world/</pre>
</div>
<p>创建用户文件passwd：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">touch</span> /var/www/svn/<span style="color: #0000ff;">passwd</span><span style="color: #000000;">  #创建用户文件

$ </span><span style="color: #0000ff;">sudo</span> htpasswd /var/www/svn/<span style="color: #0000ff;">passwd</span><span style="color: #000000;"> admin  #创建用户admin
$ </span><span style="color: #0000ff;">sudo</span> htpasswd /var/www/svn/<span style="color: #0000ff;">passwd</span><span style="color: #000000;"> guest  #创建用户guest

$ </span><span style="color: #0000ff;">cat</span> /var/www/svn/<span style="color: #0000ff;">passwd</span><span style="color: #000000;"> 
admin:$apr1$UCkPzZ2x$tnDk2rgZoiaURPzO2e57t0
guest:$apr1$vX1RIUq6$OKS1bqKZSptzsPDYUOJ5x.</span></pre>
</div>
<p>创建权限文件authz：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">cp</span> /var/www/svn/spring-hello-world/conf/authz /var/www/svn/<span style="color: #000000;">authz

$ </span><span style="color: #0000ff;">cat</span> /var/www/svn/<span style="color: #000000;">authz 
[</span>/<span style="color: #000000;">]
admin </span>=<span style="color: #000000;"> rw
guest </span>= r</pre>
</div>
<h3>&nbsp;6. 配置httpd</h3>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">touch</span> /etc/httpd/conf.d/<span style="color: #000000;">subversion.conf

$ </span><span style="color: #0000ff;">cat</span> /etc/httpd/conf.d/<span style="color: #000000;">subversion.conf 
</span>&lt;Location /svn&gt;<span style="color: #000000;">
    DAV svn
    SVNParentPath </span>/var/www/<span style="color: #000000;">svn

    AuthType Basic
    AuthName </span><span style="color: #800000;">"</span><span style="color: #800000;">Authorization SVN</span><span style="color: #800000;">"</span><span style="color: #000000;">
    AuthzSVNAccessFile </span>/var/www/svn/<span style="color: #000000;">authz
    AuthUserFile </span>/var/www/svn/<span style="color: #0000ff;">passwd</span><span style="color: #000000;">
    Require valid</span>-<span style="color: #000000;">user
</span>&lt;/Location&gt;</pre>
</div>
<h3>7. 启动httpd服务</h3>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> systemctl start httpd.service</pre>
</div>
<p>客户端使用http://192.168.12.59/svn/spring-hello-world就可以访问刚才建立的svn仓库了。&nbsp;如果返回403错误，可能是防火墙问题。增加防火墙规则：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> firewall-cmd --permanent --add-service=<span style="color: #000000;">http
$ </span><span style="color: #0000ff;">sudo</span> firewall-cmd --permanent --add-service=<span style="color: #000000;">https
$ </span><span style="color: #0000ff;">sudo</span> firewall-cmd --reload</pre>
</div>]]></description></item><item><title>CentOS7：配置SVN服务器</title><link>http://www.cnblogs.com/eastson/archive/2016/11/10/6050710.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 10 Nov 2016 07:17:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/11/10/6050710.html</guid><description><![CDATA[<h3>1. 安装</h3>
<p>CentOS通过yum安装subversion。</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> subversion</pre>
</div>
<p>&nbsp;subversion安装在/bin目录：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">which</span><span style="color: #000000;"> svnserve
</span>/bin/svnserve</pre>
</div>
<p>检查一下subversion是否安装成功。</p>
<div class="cnblogs_code">
<pre>$ svnserve --<span style="color: #000000;">version
svnserve, version </span><span style="color: #800080;">1.7</span>.<span style="color: #800080;">14</span><span style="color: #000000;"> (r1542130)
   compiled Nov </span><span style="color: #800080;">20</span> <span style="color: #800080;">2015</span>, <span style="color: #800080;">19</span>:<span style="color: #800080;">25</span>:<span style="color: #800080;">09</span><span style="color: #000000;">

Copyright (C) </span><span style="color: #800080;">2013</span><span style="color: #000000;"> The Apache Software Foundation.
This software consists of contributions made by many people; see the NOTICE
</span><span style="color: #0000ff;">file</span> <span style="color: #0000ff;">for</span> <span style="color: #0000ff;">more</span><span style="color: #000000;"> information.
Subversion is open source software, see http:</span><span style="color: #008000;">//</span><span style="color: #008000;">subversion.apache.org/</span>
<span style="color: #000000;">
The following repository back</span>-<span style="color: #000000;">end (FS) modules are available:

</span>* fs_base : Module <span style="color: #0000ff;">for</span><span style="color: #000000;"> working with a Berkeley DB repository.
</span>* fs_fs : Module <span style="color: #0000ff;">for</span> working with a plain <span style="color: #0000ff;">file</span><span style="color: #000000;"> (FSFS) repository.

Cyrus SASL authentication is available.</span></pre>
</div>
<h3>2. 建立版本库</h3>
<p>subversion默认以/var/svn作为数据根目录，可以通过/etc/sysconfig/svnserve修改这个默认位置。</p>
<div class="cnblogs_code">
<pre>$ systemctl <span style="color: #0000ff;">cat</span><span style="color: #000000;"> svnserve.service
# </span>/usr/lib/systemd/system/<span style="color: #000000;">svnserve.service
[Unit]
Description</span>=<span style="color: #000000;">Subversion protocol daemon
After</span>=<span style="color: #000000;">syslog.target network.target

[Service]
Type</span>=<span style="color: #000000;">forking
EnvironmentFile</span>=<span style="color: #ff0000;">/etc/sysconfig/</span><span style="color: #000000;"><span style="color: #ff0000;">svnserve</span>
ExecStart</span>=/usr/bin/svnserve --daemon --pid-<span style="color: #0000ff;">file</span>=/run/svnserve/<span style="color: #000000;">svnserve.pid $OPTIONS

[Install]
WantedBy</span>=multi-<span style="color: #000000;">user.target

$ </span><span style="color: #0000ff;">cat</span> /etc/sysconfig/<span style="color: #000000;">svnserve
# OPTIONS is used to pass command</span>-<span style="color: #000000;">line arguments to svnserve.
# 
# Specify the repository location </span><span style="color: #0000ff;">in</span> -<span style="color: #000000;">r parameter:
<span style="color: #ff0000;">OPTIONS</span></span><span style="color: #ff0000;">="-r /var/svn"</span></pre>
</div>
<p>我们修改/etc/sysconfig/svnserver将默认目录指定到/opt/svn。</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">cat</span> /etc/sysconfig/<span style="color: #000000;">svnserve
<span style="color: #ff0000;">OPTIONS</span></span><span style="color: #ff0000;">="-r /opt/svn"</span></pre>
</div>
<p>使用svnadmin建立版本库spring-hello-world。</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">mkdir</span> -p /opt/<span style="color: #000000;">svn
$ </span><span style="color: #0000ff;">sudo</span> svnadmin create /opt/svn/spring-hello-<span style="color: #000000;">world

$ ll </span>/opt/svn/<span style="color: #000000;">
drwxr</span>-xr-x. <span style="color: #800080;">6</span> root root <span style="color: #800080;">80</span> Nov <span style="color: #800080;">10</span> <span style="color: #800080;">14</span>:<span style="color: #800080;">42</span> spring-hello-<span style="color: #000000;">world

$ ll </span>/opt/svn/spring-hello-world/<span style="color: #000000;">
drwxr</span>-xr-x. <span style="color: #800080;">2</span> root root   <span style="color: #800080;">51</span> Nov <span style="color: #800080;">10</span> <span style="color: #800080;">14</span>:<span style="color: #800080;">42</span><span style="color: #000000;"> conf
drwxr</span>-sr-x. <span style="color: #800080;">6</span> root root <span style="color: #800080;">4096</span> Nov <span style="color: #800080;">10</span> <span style="color: #800080;">14</span>:<span style="color: #800080;">42</span><span style="color: #000000;"> db
</span>-r--r--r--. <span style="color: #800080;">1</span> root root    <span style="color: #800080;">2</span> Nov <span style="color: #800080;">10</span> <span style="color: #800080;">14</span>:<span style="color: #800080;">42</span><span style="color: #000000;"> format
drwxr</span>-xr-x. <span style="color: #800080;">2</span> root root <span style="color: #800080;">4096</span> Nov <span style="color: #800080;">10</span> <span style="color: #800080;">14</span>:<span style="color: #800080;">42</span><span style="color: #000000;"> hooks
drwxr</span>-xr-x. <span style="color: #800080;">2</span> root root   <span style="color: #800080;">39</span> Nov <span style="color: #800080;">10</span> <span style="color: #800080;">14</span>:<span style="color: #800080;">42</span><span style="color: #000000;"> locks
</span>-rw-r--r--. <span style="color: #800080;">1</span> root root  <span style="color: #800080;">229</span> Nov <span style="color: #800080;">10</span> <span style="color: #800080;">14</span>:<span style="color: #800080;">42</span> README.txt</pre>
</div>
<h3>3. 配置</h3>
<p>编辑用户文件passwd，新增两个用户：admin和guest。</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">cat</span> /opt/svn/spring-hello-world/conf/<span style="color: #0000ff;">passwd</span><span style="color: #000000;"> 
[users]
admin </span>=<span style="color: #000000;"> admin
guest </span>= guest</pre>
</div>
<p>编辑权限文件authz，用户admin设置可读写权限，guest设置只读权限。</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">cat</span> /opt/svn/spring-hello-world/conf/<span style="color: #000000;">authz 
[</span>/<span style="color: #000000;">]
admin </span>=<span style="color: #000000;"> rw
guest </span>= r</pre>
</div>
<p>编辑svnserve.conf：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">cat</span> /opt/svn/spring-hello-world/conf/<span style="color: #000000;">svnserve.conf 
[general]
anon</span>-access =<span style="color: #000000;"> none                     #控制非鉴权用户访问版本库的权限
auth</span>-access = <span style="color: #0000ff;">write</span><span style="color: #000000;">                    #控制鉴权用户访问版本库的权限
password</span>-db = <span style="color: #0000ff;">passwd</span><span style="color: #000000;">                   #指定用户名口令文件名
authz</span>-db =<span style="color: #000000;"> authz                       #指定权限配置文件名
realm </span>= spring-hello-world             #指定版本库的认证域，即在登录时提示的认证域名称</pre>
</div>
<h3>&nbsp;4. SVN服务</h3>
<p>启动SVN服务。</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> systemctl start svnserve.service</pre>
</div>
<p>检查服务是否启动成功。</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">ps</span> aux | <span style="color: #0000ff;">grep</span><span style="color: #000000;"> svn
root      </span><span style="color: #800080;">16349</span>  <span style="color: #800080;">0.0</span>  <span style="color: #800080;">0.1</span> <span style="color: #800080;">162180</span>   <span style="color: #800080;">900</span> ?        Ss   <span style="color: #800080;">15</span>:<span style="color: #800080;">01</span>   <span style="color: #800080;">0</span>:<span style="color: #800080;">00</span> /usr/bin/svnserve --daemon --pid-<span style="color: #0000ff;">file</span>=/run/svnserve/svnserve.pid -r /opt/svn</pre>
</div>
<p>通过netstat可以看到SVN打开了3690端口。</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> netstat -<span style="color: #000000;">tnlp
Proto Recv</span>-Q Send-Q Local Address           Foreign Address         State       PID/<span style="color: #000000;">Program name    
tcp        </span><span style="color: #800080;">0</span>      <span style="color: #800080;">0</span> <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:<span style="color: #800080;">3690</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:*               LISTEN      <span style="color: #800080;">16349</span>/svnserve </pre>
</div>
<p>设置成开机启动。</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> systemctl enable svnserve.service</pre>
</div>
<h3>&nbsp;5. 客户端测试</h3>
<p>客户端可以通过TortoriseSVN测试。</p>
<p><img src="http://images2015.cnblogs.com/blog/111826/201611/111826-20161110150440749-403696431.png" alt="" /></p>
<p><span style="line-height: 1.5;">这时候可能会防火墙问题。</span><span style="line-height: 1.5;">如果是防火墙问题，会提示无法连接。</span></p>
<p><img src="http://images2015.cnblogs.com/blog/111826/201611/111826-20161110150647670-797577616.png" alt="" /></p>
<p>客户端用telnet无法连接。</p>
<div class="cnblogs_code">
<pre>C:\Temp&gt;telnet <span style="color: #800080;">192.168</span>.<span style="color: #800080;">12.59</span> <span style="color: #800080;">360</span></pre>
</div>
<p>用systemctl检查服务器的防火墙配置：</p>
<div class="cnblogs_code">
<pre>$ firewall-cmd --list-<span style="color: #000000;">all
public (default, active)
  interfaces: eno16777736 eno33554984
  sources: 
  services: dhcpv6</span>-client <span style="color: #0000ff;">ssh</span><span style="color: #000000;">
  ports: 
  masquerade: no
  forward</span>-<span style="color: #000000;">ports: 
  icmp</span>-<span style="color: #000000;">blocks: 
  rich rules: </span></pre>
</div>
<p>可以看到，没有telnet服务和3690端口。增加telnet服务器和3690端口：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> firewall-cmd --permanent --add-service=<span style="color: #000000;">telnet
$ </span><span style="color: #0000ff;">sudo</span> firewall-cmd --permanent --add-port=<span style="color: #800080;">3690</span>/<span style="color: #000000;">tcp
$ </span><span style="color: #0000ff;">sudo</span> firewall-cmd --reload</pre>
</div>
<p>客户端再用telnet，应该就可以了。</p>
<p><img src="http://images2015.cnblogs.com/blog/111826/201611/111826-20161110151054670-776230563.png" alt="" /></p>]]></description></item><item><title>Dubbo：ServiceConfig.exportLocal()说明</title><link>http://www.cnblogs.com/eastson/archive/2016/10/24/5993059.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 24 Oct 2016 07:07:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/10/24/5993059.html</guid><description><![CDATA[<p>exportLocal()完整的代码如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> exportLocal(URL url) {
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #000000;">Constants.LOCAL_PROTOCOL.equalsIgnoreCase(url.getProtocol())) {
        URL local </span>=<span style="color: #000000;"> URL.valueOf(url.toFullString()) <span style="font-size: 15px;"><strong><span style="color: #ff00ff;">①</span></strong></span>
                .setProtocol(Constants.LOCAL_PROTOCOL)
                .setHost(NetUtils.LOCALHOST)
                .setPort(</span>0<span style="color: #000000;">);
        Exporter</span>&lt;?&gt; exporter =<span style="color: #000000;"> protocol.export( <span style="font-size: 15px; color: #ff00ff;"><strong>③</strong></span>
                proxyFactory.getInvoker(ref, (Class) interfaceClass, local)); <span style="font-size: 15px;"><strong><span style="color: #ff00ff;">②</span></strong></span>
        exporters.add(exporter);
        logger.info(</span>"Export dubbo service " + interfaceClass.getName() +" to local registry"<span style="color: #000000;">);
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> exportLocal(URL url) {
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #000000;">Constants.LOCAL_PROTOCOL.equalsIgnoreCase(url.getProtocol())) {
        URL local </span>=<span style="color: #000000;"> URL.valueOf(url.toFullString())
                .setProtocol(Constants.LOCAL_PROTOCOL)
                .setHost(NetUtils.LOCALHOST)
                .setPort(</span>0<span style="color: #000000;">);
        Exporter</span>&lt;?&gt; exporter =<span style="color: #000000;"> protocol.export( <span style="color: #ff00ff;"><strong>①②③④⑤⑥⑦⑧</strong></span>
                proxyFactory.getInvoker(ref, (Class) interfaceClass, local));
        exporters.add(exporter);
        logger.info(</span>"Export dubbo service " + interfaceClass.getName() +" to local registry"<span style="color: #000000;">);
    }
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>Spring框架的XML扩展特性</title><link>http://www.cnblogs.com/eastson/archive/2016/10/20/5980567.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 20 Oct 2016 05:46:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/10/20/5980567.html</guid><description><![CDATA[<p>Spring框架从2.0版本开始，提供了基于Schema风格的XML扩展机制，允许开发者扩展spring配置文件。现在我们来看下怎么实现这个功能，可以参考spring帮助文档中的《<a href="http://docs.spring.io/spring/docs/3.0.x/reference/extensible-xml.html" target="_blank">Extensible XML authoring</a>》。</p>
<p>我们知道如果在需要在spring.xml中配置数据源，需要进行如下的配置：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="dataSource"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.apache.commons.dbcp.BasicDataSource"</span><span style="color: #0000ff;">&gt;</span>       
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="driverClassName"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="com.mysql.jdbc.Driver"</span> <span style="color: #0000ff;">/&gt;</span>      
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="url"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="jdbc:mysql://localhost:3309/sampledb"</span> <span style="color: #0000ff;">/&gt;</span>      
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="username"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="root"</span> <span style="color: #0000ff;">/&gt;</span>      
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="password"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="1234"</span> <span style="color: #0000ff;">/&gt;</span>      
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">bean</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>这种方式配置虽然也比较简单，但是有一个缺点：使用&lt;property&gt;标签不够明显，不如元素属性那么直接。现在我们希望在spring.xml中做如下的配置，就能够完成数据源的配置。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">myns:datasource </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="myDataSourcce"</span><span style="color: #ff0000;"> 
    driverClassName</span><span style="color: #0000ff;">="com.mysql.jdbc.Driver"</span><span style="color: #ff0000;">
    url</span><span style="color: #0000ff;">="jdbc:mysql://localhost:3309/demodb"</span><span style="color: #ff0000;"> 
    userName</span><span style="color: #0000ff;">="root"</span><span style="color: #ff0000;"> 
    password</span><span style="color: #0000ff;">="root"</span> <span style="color: #0000ff;">/&gt;</span></pre>
</div>
<p>如果让spring能够解析这个标签，需要4步。</p>
<p>1、提供一个xsd文件，负责对xml的标签&lt;datasource&gt;进行校验。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">xsd:schema </span><span style="color: #ff0000;">xmlns</span><span style="color: #0000ff;">="http://www.aty.com/schema/aty"</span><span style="color: #ff0000;"> 
    xmlns:xsd</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema"</span><span style="color: #ff0000;">
    xmlns:beans</span><span style="color: #0000ff;">="http://www.springframework.org/schema/beans"</span><span style="color: #ff0000;">
    targetNamespace</span><span style="color: #0000ff;">="http://www.mycompany.com/schema/myns"</span><span style="color: #ff0000;">
    elementFormDefault</span><span style="color: #0000ff;">="qualified"</span><span style="color: #ff0000;">
    attributeFormDefault</span><span style="color: #0000ff;">="unqualified"</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">xsd:import </span><span style="color: #ff0000;">namespace</span><span style="color: #0000ff;">="http://www.springframework.org/schema/beans"</span> <span style="color: #0000ff;">/&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">xsd:element </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="datasource"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">xsd:complexType</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">xsd:complexContent</span><span style="color: #0000ff;">&gt;</span>
                <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">xsd:extension </span><span style="color: #ff0000;">base</span><span style="color: #0000ff;">="beans:identifiedType"</span><span style="color: #0000ff;">&gt;</span>
                    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">xsd:attribute </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="driverClassName"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="xsd:string"</span><span style="color: #ff0000;"> use</span><span style="color: #0000ff;">="required"</span> <span style="color: #0000ff;">/&gt;</span>
                    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">xsd:attribute </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="url"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="xsd:string"</span><span style="color: #ff0000;"> use</span><span style="color: #0000ff;">="required"</span> <span style="color: #0000ff;">/&gt;</span>
                    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">xsd:attribute </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="username"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="xsd:string"</span><span style="color: #ff0000;"> use</span><span style="color: #0000ff;">="required"</span> <span style="color: #0000ff;">/&gt;</span>
                    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">xsd:attribute </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="password"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="xsd:string"</span><span style="color: #ff0000;"> use</span><span style="color: #0000ff;">="required"</span> <span style="color: #0000ff;">/&gt;</span>
                <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">xsd:extension</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">xsd:complexContent</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">xsd:complexType</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">xsd:element</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">xsd:schema</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>2、定义一个BeanDefinitionParser负责解析xml,并将必要的信息放入spring中。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> net.mingyang.spring_extensible_xml;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.apache.commons.dbcp.BasicDataSource;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.beans.factory.support.BeanDefinitionBuilder;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.w3c.dom.Element;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> DatasourceBeanDefinitionParser <span style="color: #0000ff;">extends</span><span style="color: #000000;"> AbstractSingleBeanDefinitionParser {

    </span><span style="color: #0000ff;">protected</span><span style="color: #000000;"> Class getBeanClass(Element element) {
        </span><span style="color: #0000ff;">return</span> BasicDataSource.<span style="color: #0000ff;">class</span><span style="color: #000000;">;
    }

    </span><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> doParse(Element element, BeanDefinitionBuilder bean) {
        String driverClassName </span>= element.getAttribute("driverClassName"<span style="color: #000000;">);
        bean.addPropertyValue(</span>"driverClassName"<span style="color: #000000;">, driverClassName);

        String url </span>= element.getAttribute("url"<span style="color: #000000;">);
        bean.addPropertyValue(</span>"url"<span style="color: #000000;">, url);

        String username </span>= element.getAttribute("username"<span style="color: #000000;">);
        bean.addPropertyValue(</span>"username"<span style="color: #000000;">, username);

        String password </span>= element.getAttribute("password"<span style="color: #000000;">);
        bean.addPropertyValue(</span>"password"<span style="color: #000000;">, password);
    }
}</span></pre>
</div>
<p>3、定义个NamespaceHandler, 由sping框架的调用入口。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> net.mingyang.spring_extensible_xml;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.beans.factory.xml.NamespaceHandlerSupport;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> DatasourceNamespaceHandlerSupport <span style="color: #0000ff;">extends</span><span style="color: #000000;"> NamespaceHandlerSupport
{
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> init()
    {
        registerBeanDefinitionParser(</span>"datasource"<span style="color: #000000;">,
                </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> DatasourceBeanDefinitionParser());
    }
}</span></pre>
</div>
<p>4、配置schema和handler。我们通过一些配置文件来告知Spring，它们就是spring.handlers和spring.schemas，它们放在META-INF目录中。<br />spring.handlers内容如下:&nbsp;</p>
<div class="cnblogs_code">
<pre>http\://www.mycompany.com/schema/myns=net.mingyang.spring_extensible_xml.DatasourceNamespaceHandlerSupport</pre>
</div>
<p>spring.schemas内容如下:</p>
<div class="cnblogs_code">
<pre>http\://www.mycompany.com/schema/myns/myns.xsd=META-INF/myns.xsd</pre>
</div>
<p>OK，到这里Spring需要的所有定义就完了。</p>
<p>测试类：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> net.mingyang.spring_extensible_xml;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.sql.DataSource;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.context.support.ClassPathXmlApplicationContext;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> DatasourceXmlTest
{
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> main(String[] args)
    {
        ClassPathXmlApplicationContext context </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> ClassPathXmlApplicationContext(
                </span>"spring.xml"<span style="color: #000000;">);
        DataSource ds </span>= (DataSource) context.getBean("myDataSourcce"<span style="color: #000000;">);
        System.out.println(ds);
    }
}</span></pre>
</div>
<p>spring.xml内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">beans </span><span style="color: #ff0000;">xmlns</span><span style="color: #0000ff;">="http://www.springframework.org/schema/beans"</span><span style="color: #ff0000;">
    xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;"> 
    xmlns:myns</span><span style="color: #0000ff;">="http://www.mycompany.com/schema/myns"</span><span style="color: #ff0000;">
    xsi:schemaLocation</span><span style="color: #0000ff;">="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.mycompany.com/schema/myns
        http://www.mycompany.com/schema/myns/myns.xsd"</span><span style="color: #0000ff;">&gt;</span>
        
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">myns:datasource </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="myDataSourcce"</span><span style="color: #ff0000;"> 
        driverClassName</span><span style="color: #0000ff;">="com.mysql.jdbc.Driver"</span><span style="color: #ff0000;">
        url</span><span style="color: #0000ff;">="jdbc:mysql://localhost:3309/demodb"</span><span style="color: #ff0000;"> 
        username</span><span style="color: #0000ff;">="root"</span><span style="color: #ff0000;"> 
        password</span><span style="color: #0000ff;">="root"</span> <span style="color: #0000ff;">/&gt;</span>
    
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">beans</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>文件：<a href="http://files.cnblogs.com/files/eastson/spring-extensible-xml.rar" target="_blank">spring-extensible-xml.rar</a></p>]]></description></item><item><title>Spring Boot快速开发Web项目</title><link>http://www.cnblogs.com/eastson/archive/2016/10/18/5971996.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 18 Oct 2016 00:46:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/10/18/5971996.html</guid><description><![CDATA[<p>我们以前使用Spring框架的时候，需要首先在pom文件中增加对相关的的依赖，然后新建Spring相关的xml文件，而且往往那些xml文件还不会少。然后继续使用tomcat或者jetty作为容器来运行这个工程。基本上每次创建一个新的项目都是这么一个流程，而我们有时候仅仅想快速的创建一个Spring web工程来测试一些东西，或者是希望能节省时间。</p>
<p>现在我们使用Spring Boot就可以快速的做到这些了。</p>
<p>1.&nbsp;我们创建一个Maven工程，工程名字为spring-boot-helloworld，然后修改pom.xml文件：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">project </span><span style="color: #ff0000;">xmlns</span><span style="color: #0000ff;">="http://maven.apache.org/POM/4.0.0"</span><span style="color: #ff0000;"> xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;">
    xsi:schemaLocation</span><span style="color: #0000ff;">="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">modelVersion</span><span style="color: #0000ff;">&gt;</span>4.0.0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">modelVersion</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>net.mingyang<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>spring-boot-helloworld<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>0.0.1-SNAPSHOT<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">packaging</span><span style="color: #0000ff;">&gt;</span>jar<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">packaging</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">name</span><span style="color: #0000ff;">&gt;</span>spring-boot-helloworld<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">name</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>Demo project for Spring Boot<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">parent</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>org.springframework.boot<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>spring-boot-starter-parent<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>1.4.1.RELEASE<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">relativePath</span><span style="color: #0000ff;">/&gt;</span> <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> lookup parent from repository </span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">parent</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">properties</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">project.build.sourceEncoding</span><span style="color: #0000ff;">&gt;</span>UTF-8<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">project.build.sourceEncoding</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">project.reporting.outputEncoding</span><span style="color: #0000ff;">&gt;</span>UTF-8<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">project.reporting.outputEncoding</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">java.version</span><span style="color: #0000ff;">&gt;</span>1.7<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">java.version</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">properties</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dependencies</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>org.springframework.boot<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>spring-boot-starter-web<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>

        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>org.springframework.boot<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>spring-boot-starter-test<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">scope</span><span style="color: #0000ff;">&gt;</span>test<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">scope</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dependencies</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">build</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">plugins</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">plugin</span><span style="color: #0000ff;">&gt;</span>
                <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>org.springframework.boot<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>
                <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>spring-boot-maven-plugin<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">plugin</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">plugins</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">build</span><span style="color: #0000ff;">&gt;</span>


<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">project</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>2.&nbsp;新建一个Controller来接受处理我们的请求：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> net.mingyang.spring_boot_helloworld;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.boot.SpringApplication;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.boot.autoconfigure.SpringBootApplication;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.stereotype.Controller;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.web.bind.annotation.RequestMapping;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.web.bind.annotation.RequestMethod;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.web.bind.annotation.ResponseBody;

@SpringBootApplication
@Controller
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> SimpleController {

    @RequestMapping(value </span>="/hello", method =<span style="color: #000000;"> RequestMethod.GET)
    @ResponseBody
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> String hello(){
        </span><span style="color: #0000ff;">return</span> "hello world"<span style="color: #000000;">;
    }
    
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> main(String[] args) {
        SpringApplication.run(SimpleController.</span><span style="color: #0000ff;">class</span><span style="color: #000000;">, args);
    }
}</span></pre>
</div>
<p>3. 执行SimleController中的main()方法：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">  .   ____          _            __ _ _
 </span>/\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |<span style="color: #000000;">  ) ) ) )
  </span>'  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/<span style="color: #000000;">
 :: Spring Boot ::        (v1.</span>4.1<span style="color: #000000;">.RELEASE)

</span>2016-10-18 08:43:46.946  INFO 4640 --- [           main] n.m.s.SimpleController                   : Starting SimpleController on D60601653 with PID 4640 (X:\dev\spring-test-suite\spring-boot-helloworld\target\classes started by lbin in X:\dev\spring-test-suite\spring-boot-<span style="color: #000000;">helloworld)
</span>2016-10-18 08:43:46.950  INFO 4640 --- [           main] n.m.s.SimpleController                   : No active profile set, falling back to <span style="color: #0000ff;">default</span> profiles: <span style="color: #0000ff;">default</span>
2016-10-18 08:43:47.238  INFO 4640 --- [           main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69cc1627: startup date [Tue Oct 18 08:43:47 CST 2016<span style="color: #000000;">]; root of context hierarchy
</span>2016-10-18 08:43:49.969  INFO 4640 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080<span style="color: #000000;"> (http)
</span>2016-10-18 08:43:49.983  INFO 4640 ---<span style="color: #000000;"> [           main] o.apache.catalina.core.StandardService   : Starting service Tomcat
</span>2016-10-18 08:43:49.984  INFO 4640 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.5
2016-10-18 08:43:50.108  INFO 4640 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/<span style="color: #000000;">]       : Initializing Spring embedded WebApplicationContext
</span>2016-10-18 08:43:50.109  INFO 4640 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2874<span style="color: #000000;"> ms
</span>2016-10-18 08:43:50.334  INFO 4640 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/<span style="color: #000000;">]
</span>2016-10-18 08:43:50.340  INFO 4640 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [<span style="color: #008000;">/*</span><span style="color: #008000;">]
2016-10-18 08:43:50.340  INFO 4640 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2016-10-18 08:43:50.340  INFO 4640 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2016-10-18 08:43:50.340  INFO 4640 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2016-10-18 08:43:50.766  INFO 4640 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@69cc1627: startup date [Tue Oct 18 08:43:47 CST 2016]; root of context hierarchy
2016-10-18 08:43:50.863  INFO 4640 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/hello],methods=[GET]}" onto public java.lang.String net.mingyang.spring_boot_helloworld.SimpleController.hello()
2016-10-18 08:43:50.868  INFO 4640 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity&lt;java.util.Map&lt;java.lang.String, java.lang.Object&gt;&gt; org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2016-10-18 08:43:50.868  INFO 4640 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-10-18 08:43:50.912  INFO 4640 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2016-10-18 08:43:50.912  INFO 4640 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2016-10-18 08:43:51.029  INFO 4640 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/*</span><span style="color: #008000;">*/</span>favicon.ico] onto handler of type [<span style="color: #0000ff;">class</span><span style="color: #000000;"> org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
</span>2016-10-18 08:43:51.767  INFO 4640 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans <span style="color: #0000ff;">for</span><span style="color: #000000;"> JMX exposure on startup
</span>2016-10-18 08:43:51.878  INFO 4640 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080<span style="color: #000000;"> (http)
</span>2016-10-18 08:43:51.884  INFO 4640 --- [           main] n.m.s.SimpleController                   : Started SimpleController in 5.658 seconds (JVM running <span style="color: #0000ff;">for</span> 5.99)</pre>
</div>
<p>查看日志可以发现默认使用的是tomcat，端口绑定在8080，访问：http://localhost:8080/hello，就可以看到我们代码中输出的字样了。</p>
<p>是不是很简单？</p>]]></description></item><item><title>redis中setbit的用法</title><link>http://www.cnblogs.com/eastson/archive/2016/10/12/5952505.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 12 Oct 2016 05:50:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/10/12/5952505.html</guid><description><![CDATA[<p>原文地址：<a href="http://www.zhihu.com/question/27672245" target="_blank">http://www.zhihu.com/question/27672245</a></p>
<p>在redis中，存储的字符串都是以二级制的进行存在的。举例：设置一个　key-value ，键的名字叫&ldquo;andy&rdquo; 值为字符'a'：<br /><img src="http://images2015.cnblogs.com/blog/111826/201610/111826-20161012134628453-1387973789.png" alt="" /><br /><br /></p>
<p><span style="line-height: 1.5;">我们知道 'a' 的ASCII码是 97，转换为二进制是01100001。offset的学名叫做&ldquo;偏移&rdquo; 。二进制中的每一位就是offset值，比如在这里offset0等于&lsquo;0&rsquo; ，offset 1等于'1' ,offset2等于'1',offset 7 等于'1' ，没错，</span><strong style="line-height: 1.5;">offset是从左往右计数的，也就是从高位往低位</strong><span style="line-height: 1.5;">。</span></p>
<div>&nbsp;</div>
<div>我们通过SETBIT 命令将 andy中的 'a' 变成 'b' 应该怎么变呢？也就是将 01100001 变成 01100010 （b的ASCII码是98），这个很简单啦，也就是将'a'中的offset 6从0变成1，将offset 7 从1变成0 。</div>
<div><img src="http://images2015.cnblogs.com/blog/111826/201610/111826-20161012134732796-1109610622.png" alt="" />
<p>&nbsp;</p>
<p><span style="line-height: 1.5;">大家可能也发现了，每次SETBIT完毕之后，有一个（integer） 0或者（integer）1的返回值，这个是在你进行SETBIT 之前，该offset位的比特值。</span></p>
<p><br />这个时候，我们再get andy 一下，看看结果：<br /><img src="http://images2015.cnblogs.com/blog/111826/201610/111826-20161012134801984-1011770082.png" alt="" /></p>
<p>果然，就从'a' 变成 'b'了。　<br /><br />这就是redis 中　&ldquo;SETBIT&rdquo; 的基本用法。<br /><br />BITCOUNT 就是统计字符串的二级制码中，有多少个'1'。 所以在这里，BITCOUNT andy 得到的结果就是 3 。</p>

</div>]]></description></item><item><title>Spring in action - 会话管理</title><link>http://www.cnblogs.com/eastson/archive/2016/10/12/5951493.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 12 Oct 2016 01:00:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/10/12/5951493.html</guid><description><![CDATA[<p>传统的会话管理是用一个session表保存会话信息，每次请求时读取、写入该表。</p>
<p><img src="http://images2015.cnblogs.com/blog/111826/201610/111826-20161012083916265-1838814029.png" alt="" /></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span> read(<span style="color: #800080;">$sessID</span><span style="color: #000000;">) { 
   </span><span style="color: #800080;">$hander</span> = <span style="color: #008080;">is_array</span>(<span style="color: #800080;">$this</span>-&gt;hander)?<span style="color: #800080;">$this</span>-&gt;hander[1]:<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">hander;
   </span><span style="color: #800080;">$res</span> = <span style="color: #008080;">mysql_query</span>("SELECT data AS data FROM ".<span style="color: #800080;">$this</span>-&gt;sessionTable." WHERE sid = '<span style="color: #800080;">$sessID</span>'   AND expire &gt;".<span style="color: #008080;">time</span>(),<span style="color: #800080;">$hander</span><span style="color: #000000;">); 
   </span><span style="color: #0000ff;">if</span>(<span style="color: #800080;">$res</span><span style="color: #000000;">) {
       </span><span style="color: #800080;">$row</span> = <span style="color: #008080;">mysql_fetch_assoc</span>(<span style="color: #800080;">$res</span><span style="color: #000000;">);
       </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$row</span>['data'<span style="color: #000000;">]; 
   }
   </span><span style="color: #0000ff;">return</span> ""<span style="color: #000000;">; 
} 

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span> write(<span style="color: #800080;">$sessID</span>,<span style="color: #800080;">$sessData</span><span style="color: #000000;">) { 
   </span><span style="color: #800080;">$hander</span> = <span style="color: #008080;">is_array</span>(<span style="color: #800080;">$this</span>-&gt;hander)?<span style="color: #800080;">$this</span>-&gt;hander[0]:<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">hander;
   </span><span style="color: #800080;">$expire</span> = <span style="color: #008080;">time</span>() + <span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">lifeTime; 
   </span><span style="color: #008080;">mysql_query</span>("REPLACE INTO  ".<span style="color: #800080;">$this</span>-&gt;sessionTable." (  sid, expire, data)  VALUES( '<span style="color: #800080;">$sessID</span>', '<span style="color: #800080;">$expire</span>',  '<span style="color: #800080;">$sessData</span>')",<span style="color: #800080;">$hander</span><span style="color: #000000;">); 
   </span><span style="color: #0000ff;">if</span>(<span style="color: #008080;">mysql_affected_rows</span>(<span style="color: #800080;">$hander</span><span style="color: #000000;">)) 
       </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">true</span><span style="color: #000000;">; 
   </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">; 
} </span></pre>
</div>
<p>session表的expire是一个时间戳，每次请求时更新。使用此栏位可以清理会话。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span> gc(<span style="color: #800080;">$sessMaxLifeTime</span><span style="color: #000000;">) { 
   </span><span style="color: #800080;">$hander</span> = <span style="color: #008080;">is_array</span>(<span style="color: #800080;">$this</span>-&gt;hander)?<span style="color: #800080;">$this</span>-&gt;hander[0]:<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">hander;
   </span><span style="color: #008080;">mysql_query</span>("DELETE FROM ".<span style="color: #800080;">$this</span>-&gt;sessionTable." WHERE expire &lt; ".<span style="color: #008080;">time</span>(),<span style="color: #800080;">$hander</span><span style="color: #000000;">); 
   </span><span style="color: #0000ff;">return</span> <span style="color: #008080;">mysql_affected_rows</span>(<span style="color: #800080;">$hander</span><span style="color: #000000;">); 
} </span></pre>
</div>
<p>&nbsp;</p>
<h3>Redis的处理方式</h3>
<p>首先看一个JAVA方法：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> updateToken(Jedis conn, String token, String user, String item) {
    </span><span style="color: #0000ff;">long</span> timestamp = System.currentTimeMillis() / 1000<span style="color: #000000;">;
    conn.hset(</span>"login:"<span style="color: #000000;">, token, user);
    conn.zadd(</span>"recent:"<span style="color: #000000;">, timestamp, token);
    </span><span style="color: #0000ff;">if</span> (item != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        conn.zadd(</span>"viewed:" +<span style="color: #000000;"> token, timestamp, item);
    }
}</span></pre>
</div>
<p>login是一个哈希表，它的目的是记录所有在线用户，等同session表的记录。<br /><img src="http://images2015.cnblogs.com/blog/111826/201610/111826-20161012084931546-1550138967.png" alt="" /><br />recent是一个有序集合，目的是记录会话的最新访问时间，类似session表的expire字段。使用这个集合，可以对长时间没有请求的会话做清理。<br /><img src="http://images2015.cnblogs.com/blog/111826/201610/111826-20161012090516515-153448157.png" alt="" /></p>
<p>viewed也是一个有序集合，存放访问历史，与session表的data字段作用相同。<br /><img src="http://images2015.cnblogs.com/blog/111826/201610/111826-20161012091308031-876458631.png" alt="" /></p>
<p>如果viewed集合不清理，随着用户浏览的商品越多，集合会不断的增大，必须做清理处理。这里的处理方式是保持viewed集合只有25笔，其它的都删除，按照浏览时间排序，保存最新的25笔。看看修改后的updateToken()方法：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> updateToken(Jedis conn, String token, String user, String item) {
    </span><span style="color: #0000ff;">long</span> timestamp = System.currentTimeMillis() / 1000<span style="color: #000000;">;
    conn.hset(</span>"login:"<span style="color: #000000;">, token, user);
    conn.zadd(</span>"recent:"<span style="color: #000000;">, timestamp, token);
    </span><span style="color: #0000ff;">if</span> (item != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        conn.zadd(</span>"viewed:" +<span style="color: #000000;"> token, timestamp, item);
        conn.zremrangeByRank(</span>"viewed:" + token, 0, -26);  <span style="color: #008000;">//</span><span style="color: #008000;">只保留最后25笔</span>
<span style="color: #000000;">    }
}</span></pre>
</div>
<p>随着时间的推移，会话越来越多，为了限制会话数量，我们决定只保留最新的1000万个会话。rencent集合记录了每个会话的最后访问时间，可以以此为清理条件。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> CleanSessionsThread
        </span><span style="color: #0000ff;">extends</span><span style="color: #000000;"> Thread
{
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Jedis conn;
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">int</span><span style="color: #000000;"> limit;
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">boolean</span><span style="color: #000000;"> quit;

    </span><span style="color: #0000ff;">public</span> CleanSessionsThread(<span style="color: #0000ff;">int</span><span style="color: #000000;"> limit) {
        </span><span style="color: #0000ff;">this</span>.conn = <span style="color: #0000ff;">new</span> Jedis("localhost"<span style="color: #000000;">);
        </span><span style="color: #0000ff;">this</span>.conn.select(15<span style="color: #000000;">);
        </span><span style="color: #0000ff;">this</span>.limit =<span style="color: #000000;"> limit;
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> quit() {
        quit </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> run() {
        </span><span style="color: #0000ff;">while</span> (!<span style="color: #000000;">quit) {
            </span><span style="color: #0000ff;">long</span> size = conn.zcard("recent:"<span style="color: #000000;">);
            </span><span style="color: #0000ff;">if</span> (size &lt;=<span style="color: #000000;"> limit){
                </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
                    sleep(</span>1000<span style="color: #000000;">);
                }</span><span style="color: #0000ff;">catch</span><span style="color: #000000;">(InterruptedException ie){
                    Thread.currentThread().interrupt();
                }
                </span><span style="color: #0000ff;">continue</span><span style="color: #000000;">;
            }

            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 每次最多清理100个会话</span>
            <span style="color: #0000ff;">long</span> endIndex = Math.min(size - limit, 100<span style="color: #000000;">);
            
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> recent是按照访问时间从小到大排列的</span>
            Set&lt;String&gt; tokenSet = conn.zrange("recent:", 0, endIndex - 1<span style="color: #000000;">);
            
            String[] tokens </span>= tokenSet.toArray(<span style="color: #0000ff;">new</span><span style="color: #000000;"> String[tokenSet.size()]);

            ArrayList</span>&lt;String&gt; sessionKeys = <span style="color: #0000ff;">new</span> ArrayList&lt;String&gt;<span style="color: #000000;">();
            </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> (String token : tokens) {
                sessionKeys.add(</span>"viewed:" +<span style="color: #000000;"> token);
            }

            conn.del(sessionKeys.toArray(</span><span style="color: #0000ff;">new</span><span style="color: #000000;"> String[sessionKeys.size()]));
            conn.hdel(</span>"login:"<span style="color: #000000;">, tokens);
            conn.zrem(</span>"recent:"<span style="color: #000000;">, tokens);
        }
    }
}</span></pre>
</div>
<p>有时候我们会统计访问最多的商品，每次访问商品时做一个计数。使用有序集合的特性，将所有商品加入到有序集合，访问一次该商品将就该商品的权值-1，访问越多，权值就越小。有序集合会按照权值从小到大排序，访问最多的商品就会排在最前面。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> updateToken(Jedis conn, String token, String user, String item) {
    </span><span style="color: #0000ff;">long</span> timestamp = System.currentTimeMillis() / 1000<span style="color: #000000;">;
    conn.hset(</span>"login:"<span style="color: #000000;">, token, user);
    conn.zadd(</span>"recent:"<span style="color: #000000;">, timestamp, token);
    </span><span style="color: #0000ff;">if</span> (item != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        conn.zadd(</span>"viewed:" +<span style="color: #000000;"> token, timestamp, item);
        conn.zremrangeByRank(</span>"viewed:" + token, 0, -26);  <span style="color: #008000;">//</span><span style="color: #008000;">只保留最后25笔</span>
        conn.zincrby("viewed:", -1, item); <span style="color: #008000;">//</span><span style="color: #008000;"> 商品访问有序集合，访问越多，权值越小，在集合中月靠前</span>
<span style="color: #000000;">    }
}</span></pre>
</div>
<p>同理，viewed集合也需要定时的清理，不然该集合会不断的增大，最后将把所有的商品都包含在里面。我们单独开一个进程来清理viewed集合。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> CleanViewedThread
        </span><span style="color: #0000ff;">extends</span><span style="color: #000000;"> Thread
{
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Jedis conn;
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">int</span><span style="color: #000000;"> limit;
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">boolean</span><span style="color: #000000;"> quit;

    </span><span style="color: #0000ff;">public</span> CleanViewedThread(<span style="color: #0000ff;">int</span><span style="color: #000000;"> limit) {
        </span><span style="color: #0000ff;">this</span>.conn = <span style="color: #0000ff;">new</span> Jedis("localhost"<span style="color: #000000;">);
        </span><span style="color: #0000ff;">this</span>.conn.select(15<span style="color: #000000;">);
        </span><span style="color: #0000ff;">this</span>.limit =<span style="color: #000000;"> limit;
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> quit() {
        quit </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> run() {
        </span><span style="color: #0000ff;">while</span> (!<span style="color: #000000;">quit) {
            </span><span style="color: #0000ff;">long</span> size = conn.zcard("viewed:"<span style="color: #000000;">);
            </span><span style="color: #0000ff;">if</span> (size &lt;=<span style="color: #000000;"> limit){
                </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
                    sleep(</span>1000<span style="color: #000000;">);
                }</span><span style="color: #0000ff;">catch</span><span style="color: #000000;">(InterruptedException ie){
                    Thread.currentThread().interrupt();
                }
                </span><span style="color: #0000ff;">continue</span><span style="color: #000000;">;
            }

            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 每次最多清理100笔</span>
            <span style="color: #0000ff;">long</span> endIndex = Math.min(limit + 100<span style="color: #000000;">, size);
            
            Set</span>&lt;String&gt; viewedSet = conn.zrange("viewed:", limit, endIndex - 1<span style="color: #000000;">);
            conn.zrem(</span>"viewed:", viewedSet.toArray(<span style="color: #0000ff;">new</span><span style="color: #000000;"> String[viewedSet.size()]));
        }
    }
}</span></pre>
</div>]]></description></item><item><title>Google Font字体本地化使用提高网站访问速度</title><link>http://www.cnblogs.com/eastson/archive/2016/09/21/5891500.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 21 Sep 2016 01:43:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/09/21/5891500.html</guid><description><![CDATA[<p>Google Web font在国内经常不稳定，速度在国内延迟也很高，而引发网页打开速度慢。</p>
<p><strong>一、常见的字体格式介绍</strong><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;不同的浏览器对字体格式支持是不一致的，常见的如下：<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<strong>1、TureTpe(.ttf)：</strong><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;.ttf字体是Windows和Mac的最常见的字体，是一种RAW格式，因此他不为网站优化,支持这种字体的浏览器有【IE9+,Firefox3.5+,Chrome4+,Safari3+,Opera10+,iOS Mobile Safari4.2+】；<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<strong>2、OpenType(.otf)：</strong>&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;.otf字体被认为是一种原始的字体格式，其内置在TureType的基础上，所以也提供了更多的功能,支持这种字体的浏览器有【Firefox3.5+,Chrome4.0+,Safari3.1+,Opera10.0+,iOS Mobile Safari4.2+】；<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<strong>3、Web Open Font Format(.woff)：</strong><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;.woff字体是Web字体中最佳格式，他是一个开放的TrueType/OpenType的压缩版本，同时也支持元数据包的分离,支持这种字体的浏览器有【IE9+,Firefox3.5+,Chrome6+,Safari3.6+,Opera11.1+】；<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<strong>4、Embedded Open Type(.eot)：</strong><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;.eot字体是IE专用字体，可以从TrueType创建此格式字体,支持这种字体的浏览器有【IE4+】；<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<strong>5、SVG(.svg)格式：</strong><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;.svg字体是基于SVG字体渲染的一种格式,支持这种字体的浏览器有:<br />&nbsp;&nbsp;&nbsp;&nbsp;【Chrome4+,Safari3.1+,Opera10.0+,iOS Mobile Safari3.2+】。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;所以，如果不考虑手机上的字体兼容，实际上只需要2种格式就好.<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<strong>（1）eot ：用于兼容IE浏览器的字体格式</strong><br />&nbsp;&nbsp;&nbsp;&nbsp;<strong>（2）woff ：其他非IE浏览器都已经兼容的字体格式</strong></p>
<p>&nbsp;</p>
<p><strong><strong>二、获取你所需要的google font的各类型字体格式</strong></strong></p>
<p><br />&nbsp;&nbsp;&nbsp;&nbsp;一般来说，google font 只提供了字体的TTF格式，将你喜欢的google font的字体TTF下载下来。网上转换的工具很多，我们只要将TTF转换为上述的其他几种格式，比如eot，woff即可。<br /><br />&nbsp; &nbsp; http://www.fontsquirrel.com/fontface/generator在线转换它可以一次性的生成eot,woff.svg,ttf多种字体格式，而且还带有相应的CSS和HTML预览，非常方便。&nbsp;&nbsp;&nbsp;&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;转换完成后，将相关的字体上传到你的网站服务器，接下来，我们用@font-face的语法来调用他就可以了。</p>
<p>&nbsp;</p>
<p><strong>三、在你的CSS中使用@font-face，本地化使用google font。</strong></p>
<p>基本语法网上说明很多，不多介绍了。来个实际例子：</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">@font-face </span>{<span style="color: #ff0000;">
    font-family</span>:<span style="color: #0000ff;"> 'open_sansregular'</span>;<span style="color: #ff0000;">
    src</span>:<span style="color: #0000ff;"> url('opensans.eot')</span>;<span style="color: #ff0000;">
    src</span>:<span style="color: #0000ff;"> url('opensans.eot?#iefix') format('embedded-opentype'),
         url('opensans.woff2') format('woff2'),
         url('opensans.woff') format('woff'),
         url('opensans.ttf') format('truetype'),
         url('opensans.svg#open_sansregular') format('svg')</span>;<span style="color: #ff0000;">
    font-weight</span>:<span style="color: #0000ff;"> normal</span>;<span style="color: #ff0000;">
    font-style</span>:<span style="color: #0000ff;"> normal</span>;
}</pre>
</div>
<pre><code class="css"><span class="at_rule">&nbsp;</span></code></pre>
<p>&nbsp;&nbsp;&nbsp;&nbsp;在这里，通过@font-face，我自定义了一个名为的Tangerine-b字体，相关的eot,woff,ttf,svg字体格式上传在/font/目录下面。这里使用的是相对路径，当然你也可以使用绝对路径。<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;离最后效果只差一步了，就是把自己定义的字体应用到你的Web中的DOM元素上，比如：</p>
<pre><code class="css"><span class="tag">body <span class="rules">{
  <span class="rule"><span class="attribute">font-family:<span class="value"> <span class="string">'open_sansregular'
}</span></span></span></span></span></span></code></pre>]]></description></item><item><title>Java工具类参考</title><link>http://www.cnblogs.com/eastson/archive/2016/07/30/5720640.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 30 Jul 2016 03:57:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/07/30/5720640.html</guid><description><![CDATA[<p><a href="http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/util/StringUtils.html" target="_blank">org.springframework.util.StringUtils<br /></a><a href="http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/util/CollectionUtils.html" target="_blank">org.springframework.util.CollectionUtils<br /></a><a href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/builder/ReflectionToStringBuilder.html" target="_blank">org.springframework.web.bind.ServletRequestUtils<br />org.apache.commons.lang3.builder.ReflectionToStringBuilder<br /></a></p>]]></description></item><item><title>Sybase alter 用法</title><link>http://www.cnblogs.com/eastson/archive/2016/04/19/5408757.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 19 Apr 2016 08:34:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/04/19/5408757.html</guid><description><![CDATA[<p>原文地址：http://lujinan858.iteye.com/blog/437019</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">--</span><span style="color: #008080;">示例 1 为表添加列。Adaptive Server 为表中每个现有行分配一个 NULL  </span><span style="color: #008080;">
--</span><span style="color: #008080;">列值：  </span>
<span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> publishers  
</span><span style="color: #0000ff;">add</span> manager_name <span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">40</span>) <span style="color: #0000ff;">null</span>  
  
<span style="color: #008080;">--</span><span style="color: #008080;">示例 2 向表中添加 IDENTITY 列。Adaptive Server 为表中每个现有行分  </span><span style="color: #008080;">
--</span><span style="color: #008080;">配一个唯一的顺序列值。请注意，IDENTITY 列的类型为 numeric，标度  </span><span style="color: #008080;">
--</span><span style="color: #008080;">零。精度确定可插入到列中的最大值（10 5 - 1 或 99,999）：  </span>
<span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> sales_daily  
</span><span style="color: #0000ff;">add</span> ord_num numeric(<span style="color: #800000; font-weight: bold;">5</span>,<span style="color: #800000; font-weight: bold;">0</span>) <span style="color: #ff00ff;">identity</span>  
  
<span style="color: #008080;">--</span><span style="color: #008080;">示例 3 向 authors 表添加主键约束。如果表上有现有的主键或唯一约  </span><span style="color: #008080;">
--</span><span style="color: #008080;">束，请首先删除现有的约束（见示例 5）：  </span>
<span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> authors  
</span><span style="color: #0000ff;">add</span> <span style="color: #0000ff;">constraint</span><span style="color: #000000;"> au_identification  
</span><span style="color: #0000ff;">primary</span> <span style="color: #0000ff;">key</span><span style="color: #000000;"> (au_id, au_lname, au_fname)  
  
</span><span style="color: #008080;">--</span><span style="color: #008080;">示例 4 在 authors 上创建索引，设置 reservepagegap 值为 16，在索引中  </span><span style="color: #008080;">
--</span><span style="color: #008080;">每 15 个分配的页留一个空白页：  </span>
<span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> authors  
</span><span style="color: #0000ff;">add</span> <span style="color: #0000ff;">constraint</span><span style="color: #000000;"> au_identification  
</span><span style="color: #0000ff;">primary</span> <span style="color: #0000ff;">key</span><span style="color: #000000;"> (au_id, au_lname, au_fname)  
</span><span style="color: #0000ff;">with</span> reservepagegap <span style="color: #808080;">=</span> <span style="color: #800000; font-weight: bold;">16</span>  
  
<span style="color: #008080;">--</span><span style="color: #008080;">示例 5 删除 au_identification 约束：  </span>
<span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> titles  
</span><span style="color: #0000ff;">drop</span> <span style="color: #0000ff;">constraint</span><span style="color: #000000;"> au_identification  
  
</span><span style="color: #008080;">--</span><span style="color: #008080;">示例 6 删除 authors 表中 phone 列的缺省约束。如果列允许空值，则没  </span><span style="color: #008080;">
--</span><span style="color: #008080;">有指定值时会插入空值。如果列不允许空值，则不指定列值的插入操作  </span><span style="color: #008080;">
--</span><span style="color: #008080;">将失败：  </span>
<span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> authors  
</span><span style="color: #ff00ff;">replace</span> phone <span style="color: #0000ff;">default</span> <span style="color: #0000ff;">null</span>  
  
<span style="color: #008080;">--</span><span style="color: #008080;">例 7 为 titleauthor 表创建 4 个新的页链。将表分区后，现有的数据会  </span>
保留在第一个分区。但是新的行会插入到所有这 <span style="color: #800000; font-weight: bold;">5</span><span style="color: #000000;"> 个分区中：  
</span><span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span> titleauthor partition <span style="color: #800000; font-weight: bold;">5</span>  
  
<span style="color: #008080;">--</span><span style="color: #008080;">示例 8 并置 titleauthor 表的所有页链，然后将其重新分区为 6 个分区。  </span>
<span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> titleauthor unpartition  
</span><span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span> titleauthor partition <span style="color: #800000; font-weight: bold;">6</span>  
  
<span style="color: #008080;">--</span><span style="color: #008080;">示例 9 将 titles 表的锁定方案更改为数据行锁定：  </span>
<span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> titles lock datarows  
  
  
</span><span style="color: #008080;">--</span><span style="color: #008080;">示例 10 将非空列 author_type 添加到缺省值为 primary_author 的 authors 表：  </span>
<span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> authors  
</span><span style="color: #0000ff;">add</span> author_type <span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">20</span><span style="color: #000000;">)  
</span><span style="color: #0000ff;">default</span> "primary_author" <span style="color: #808080;">not</span> <span style="color: #0000ff;">null</span>  
  
  
<span style="color: #008080;">--</span><span style="color: #008080;">示例 11 从 titles 表删除 advance、notes 和 contract 列：  </span>
<span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> titles  
</span><span style="color: #0000ff;">drop</span><span style="color: #000000;"> advance, notes, contract  
  
</span><span style="color: #008080;">--</span><span style="color: #008080;">示例 12 将 authors 表的 city 列修改为缺省值为空值的 varchar(30)：  </span>
<span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> authors  
modify city </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">30</span>) <span style="color: #0000ff;">null</span>  
  
<span style="color: #008080;">--</span><span style="color: #008080;">示例 13 将 stores 表的 stor_name 列修改为非空。注意其数据类型  </span>
<span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">40</span><span style="color: #000000;">) 不变：  
</span><span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> stores  
modify stor_name </span><span style="color: #808080;">not</span> <span style="color: #0000ff;">null</span>  
  
<span style="color: #008080;">--</span><span style="color: #008080;">示例 14 修改 titles 表的 type 列，并将 titles 表的锁定方案从所有页锁定  </span><span style="color: #008080;">
--</span><span style="color: #008080;">更改为数据行锁定：  </span>
<span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> titles  
modify type </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">10</span><span style="color: #000000;">)  
lock datarows  
  
</span><span style="color: #008080;">--</span><span style="color: #008080;">示例 15 将 titles 表的 notes 列由 varchar(200) 修改为 varchar(150)，将缺省  </span><span style="color: #008080;">
--</span><span style="color: #008080;">值由空更改为非空，并指定 exp_row_size 值为 40：  </span>
<span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> titles  
modify notes </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">150</span>) <span style="color: #808080;">not</span> <span style="color: #0000ff;">null</span>  
<span style="color: #0000ff;">with</span> exp_row_size <span style="color: #808080;">=</span> <span style="color: #800000; font-weight: bold;">40</span>  
  
<span style="color: #008080;">--</span><span style="color: #008080;">示例 16 添加、修改和删除一列，然后在同一查询中添加另一列。改变  </span><span style="color: #008080;">
--</span><span style="color: #008080;">锁定方案，并指定新列的 exp_row_size 值：  </span>
<span style="color: #0000ff;">alter</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> titles  
</span><span style="color: #0000ff;">add</span> author_type <span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">30</span>) <span style="color: #0000ff;">null</span><span style="color: #000000;">  
modify city </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">30</span><span style="color: #000000;">)  
</span><span style="color: #0000ff;">drop</span><span style="color: #000000;"> notes  
</span><span style="color: #0000ff;">add</span> sec_advance <span style="color: #0000ff;">money</span> <span style="color: #0000ff;">default</span> <span style="color: #800000; font-weight: bold;">1000</span> <span style="color: #808080;">not</span> <span style="color: #0000ff;">null</span><span style="color: #000000;">  
lock datarows  
</span><span style="color: #0000ff;">with</span> exp_row_size <span style="color: #808080;">=</span> <span style="color: #800000; font-weight: bold;">40</span>  </pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>微信公众号接口配置</title><link>http://www.cnblogs.com/eastson/archive/2016/04/12/5381272.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 12 Apr 2016 00:56:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/04/12/5381272.html</guid><description><![CDATA[<p>从微信公众平台下载的PHP测试代码wx_sample.php一直配置失败，后来百度得知加上header('content-type:text');就OK：</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #008000;">/*</span><span style="color: #008000;">*
  * wechat php test
  </span><span style="color: #008000;">*/</span>

<span style="color: #008000;">//</span><span style="color: #008000;">define your token</span>
<span style="color: #008080;">define</span>("TOKEN", "weixin"<span style="color: #000000;">);
</span><span style="color: #800080;">$wechatObj</span> = <span style="color: #0000ff;">new</span><span style="color: #000000;"> wechatCallbackapiTest();
</span><span style="color: #800080;">$wechatObj</span>-&gt;<span style="color: #000000;">valid();

</span><span style="color: #0000ff;">class</span><span style="color: #000000;"> wechatCallbackapiTest
{
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> valid()
    {
        </span><span style="color: #800080;">$echoStr</span> = <span style="color: #800080;">$_GET</span>["echostr"<span style="color: #000000;">];

        </span><span style="color: #008000;">//</span><span style="color: #008000;">valid signature , option</span>
        <span style="color: #0000ff;">if</span>(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">checkSignature()){
            </span><strong><span style="color: #ff0000;">header('content-type:text');
            </span></strong><span style="color: #0000ff;">echo</span> <span style="color: #800080;">$echoStr</span><span style="color: #000000;">;
            </span><span style="color: #0000ff;">exit</span><span style="color: #000000;">;
        }
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> responseMsg()
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;">get post data, May be due to the different environments</span>
        <span style="color: #800080;">$postStr</span> = <span style="color: #800080;">$GLOBALS</span>["HTTP_RAW_POST_DATA"<span style="color: #000000;">];

          </span><span style="color: #008000;">//</span><span style="color: #008000;">extract post data</span>
        <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$postStr</span><span style="color: #000000;">)){
                </span><span style="color: #008000;">/*</span><span style="color: #008000;"> libxml_disable_entity_loader is to prevent XML eXternal Entity Injection,
                   the best way is to check the validity of xml by yourself </span><span style="color: #008000;">*/</span><span style="color: #000000;">
                libxml_disable_entity_loader(</span><span style="color: #0000ff;">true</span><span style="color: #000000;">);
                  </span><span style="color: #800080;">$postObj</span> = <span style="color: #008080;">simplexml_load_string</span>(<span style="color: #800080;">$postStr</span>, 'SimpleXMLElement',<span style="color: #000000;"> LIBXML_NOCDATA);
                </span><span style="color: #800080;">$fromUsername</span> = <span style="color: #800080;">$postObj</span>-&gt;<span style="color: #000000;">FromUserName;
                </span><span style="color: #800080;">$toUsername</span> = <span style="color: #800080;">$postObj</span>-&gt;<span style="color: #000000;">ToUserName;
                </span><span style="color: #800080;">$keyword</span> = <span style="color: #008080;">trim</span>(<span style="color: #800080;">$postObj</span>-&gt;<span style="color: #000000;">Content);
                </span><span style="color: #800080;">$time</span> = <span style="color: #008080;">time</span><span style="color: #000000;">();
                </span><span style="color: #800080;">$textTpl</span> = "<span style="color: #000000;">&lt;xml&gt;
                            &lt;ToUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/ToUserName&gt;
                            &lt;FromUserName&gt;&lt;![CDATA[%s]]&gt;&lt;/FromUserName&gt;
                            &lt;CreateTime&gt;%s&lt;/CreateTime&gt;
                            &lt;MsgType&gt;&lt;![CDATA[%s]]&gt;&lt;/MsgType&gt;
                            &lt;Content&gt;&lt;![CDATA[%s]]&gt;&lt;/Content&gt;
                            &lt;FuncFlag&gt;0&lt;/FuncFlag&gt;
                            &lt;/xml&gt;</span>"<span style="color: #000000;">;             
                </span><span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">empty</span>( <span style="color: #800080;">$keyword</span><span style="color: #000000;"> ))
                {
                      </span><span style="color: #800080;">$msgType</span> = "text"<span style="color: #000000;">;
                    </span><span style="color: #800080;">$contentStr</span> = "Welcome to wechat world!"<span style="color: #000000;">;
                    </span><span style="color: #800080;">$resultStr</span> = <span style="color: #008080;">sprintf</span>(<span style="color: #800080;">$textTpl</span>, <span style="color: #800080;">$fromUsername</span>, <span style="color: #800080;">$toUsername</span>, <span style="color: #800080;">$time</span>, <span style="color: #800080;">$msgType</span>, <span style="color: #800080;">$contentStr</span><span style="color: #000000;">);
                    </span><span style="color: #0000ff;">echo</span> <span style="color: #800080;">$resultStr</span><span style="color: #000000;">;
                }</span><span style="color: #0000ff;">else</span><span style="color: #000000;">{
                    </span><span style="color: #0000ff;">echo</span> "Input something..."<span style="color: #000000;">;
                }

        }</span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
            </span><span style="color: #0000ff;">echo</span> ""<span style="color: #000000;">;
            </span><span style="color: #0000ff;">exit</span><span style="color: #000000;">;
        }
    }
        
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> checkSignature()
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> you must define TOKEN by yourself</span>
        <span style="color: #0000ff;">if</span> (!<span style="color: #008080;">defined</span>("TOKEN"<span style="color: #000000;">)) {
            </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> <span style="color: #0000ff;">Exception</span>('TOKEN is not defined!'<span style="color: #000000;">);
        }
        
        </span><span style="color: #800080;">$signature</span> = <span style="color: #800080;">$_GET</span>["signature"<span style="color: #000000;">];
        </span><span style="color: #800080;">$timestamp</span> = <span style="color: #800080;">$_GET</span>["timestamp"<span style="color: #000000;">];
        </span><span style="color: #800080;">$nonce</span> = <span style="color: #800080;">$_GET</span>["nonce"<span style="color: #000000;">];
                
        </span><span style="color: #800080;">$token</span> =<span style="color: #000000;"> TOKEN;
        </span><span style="color: #800080;">$tmpArr</span> = <span style="color: #0000ff;">array</span>(<span style="color: #800080;">$token</span>, <span style="color: #800080;">$timestamp</span>, <span style="color: #800080;">$nonce</span><span style="color: #000000;">);
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> use SORT_STRING rule</span>
        <span style="color: #008080;">sort</span>(<span style="color: #800080;">$tmpArr</span>,<span style="color: #000000;"> SORT_STRING);
        </span><span style="color: #800080;">$tmpStr</span> = <span style="color: #008080;">implode</span>( <span style="color: #800080;">$tmpArr</span><span style="color: #000000;"> );
        </span><span style="color: #800080;">$tmpStr</span> = <span style="color: #008080;">sha1</span>( <span style="color: #800080;">$tmpStr</span><span style="color: #000000;"> );
        
        </span><span style="color: #0000ff;">if</span>( <span style="color: #800080;">$tmpStr</span> == <span style="color: #800080;">$signature</span><span style="color: #000000;"> ){
            </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }</span><span style="color: #0000ff;">else</span><span style="color: #000000;">{
            </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
        }
    }
}

</span>?&gt;</pre>
</div>
<p>配置成功的画面：<br /><img src="http://images2015.cnblogs.com/blog/111826/201604/111826-20160412085542910-1592408069.png" alt="" /></p>]]></description></item><item><title>OFBIZ：启动之ContainerLoader</title><link>http://www.cnblogs.com/eastson/archive/2016/03/28/5328112.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 28 Mar 2016 03:17:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/03/28/5328112.html</guid><description><![CDATA[<p>ContainerLoader类实现StartupLoader接口，目的是装入各种Container容器。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">/**</span><span style="color: #008000;">
 * An OFBiz container. A container can be thought of as a background process.
 * 
 * &lt;p&gt;
 * When OFBiz starts, the main thread will create the &lt;code&gt;Container&lt;/code&gt; instance and
 * then call the container's &lt;code&gt;init&lt;/code&gt; method. If the method returns without
 * throwing an exception the container will be added to a list of initialized containers.
 * After all instances have been created and initialized, the main thread will call the
 * &lt;code&gt;start&lt;/code&gt; method of each container in the list. When OFBiz shuts down, a
 * separate shutdown thread will call the &lt;code&gt;stop&lt;/code&gt; method of each container.
 * Implementations should anticipate asynchronous calls to the methods by different
 * threads.
 * &lt;/p&gt;
 * 
 * &lt;p&gt;Containers might be loaded more than once (have more than one instance).&lt;p&gt;
 </span><span style="color: #008000;">*/</span>
<span style="color: #0000ff;">public</span> <span style="color: #0000ff;">interface</span><span style="color: #000000;"> Container {

    </span><span style="color: #008000;">/**</span><span style="color: #008000;"> Initialize the container. This method must not block - implementations
     * should initialize internal structures and then return.
     *
     * </span><span style="color: #808080;">@param</span><span style="color: #008000;"> args Command-line arguments.
     * </span><span style="color: #808080;">@param</span><span style="color: #008000;"> name Unique name of the container's instance.
     * </span><span style="color: #808080;">@param</span><span style="color: #008000;"> configFile Location of the configuration file used to load this container.
     * </span><span style="color: #808080;">@throws</span><span style="color: #008000;"> ContainerException If an error was encountered. Throwing this exception
     * will halt container loading, so it should be thrown only when other containers
     * might depend on this one.
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> init(String[] args, String name, String configFile) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ContainerException;

    </span><span style="color: #008000;">/**</span><span style="color: #008000;">
     * Start the container process. This method must not block - implementations
     * that require thread blocking must create a separate thread and then return.
     *
     * </span><span style="color: #808080;">@return</span><span style="color: #008000;"> &lt;code&gt;true&lt;/code&gt; if the process started.
     * </span><span style="color: #808080;">@throws</span><span style="color: #008000;"> ContainerException If an error was encountered.
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">boolean</span> start() <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ContainerException;

    </span><span style="color: #008000;">/**</span><span style="color: #008000;">
     * Stop the container process. This method must not block.
     *
     * </span><span style="color: #808080;">@throws</span><span style="color: #008000;"> ContainerException If an error was encountered.
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> stop() <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ContainerException;

    </span><span style="color: #008000;">/**</span><span style="color: #008000;">
     * Return the container name.
     *
     * </span><span style="color: #808080;">@return</span><span style="color: #008000;"> Name of the container's instance.
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span><span style="color: #000000;"> String getName();
}</span></pre>
</div>
<p><br />ContainerLoader会以三种方式寻找Container。第一种方式从配置文件中找，默认的配置文件是framework/base/config/ofbiz-containers.xml。第二种方式找组件Component总定义的容器。第三种方式找hot-deploy容器，这也是一个配置文件hot-deploy-containers.xml。<br /><br />ofbiz-containers.xml定义了整个OFBIZ最重要的ComponentContainer容器，该容器载入所有的Component。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">ofbiz-containers </span><span style="color: #ff0000;">xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;">
        xsi:noNamespaceSchemaLocation</span><span style="color: #0000ff;">="http://ofbiz.apache.org/dtds/ofbiz-containers.xsd"</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> load the ofbiz component container (always first) </span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">container </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="component-container"</span><span style="color: #ff0000;"> loaders</span><span style="color: #0000ff;">="main,rmi,pos,install"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.ofbiz.base.container.ComponentContainer"</span><span style="color: #0000ff;">/&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">container </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="component-container-test"</span><span style="color: #ff0000;"> loaders</span><span style="color: #0000ff;">="test"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.ofbiz.base.container.ComponentContainer"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="ofbiz.instrumenterClassName"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="org.ofbiz.base.config.CoberturaInstrumenter"</span><span style="color: #0000ff;">/&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="ofbiz.instrumenterFile"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="runtime/logs/cobertura-components.dat"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">container</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">container </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="component-container-limited"</span><span style="color: #ff0000;"> loaders</span><span style="color: #0000ff;">="limited"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.ofbiz.base.container.ComponentContainer"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="update-classpath"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="false"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">container</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">container </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="component-container"</span><span style="color: #ff0000;"> loaders</span><span style="color: #0000ff;">="testlist"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.ofbiz.base.container.JustLoadComponentsContainer"</span><span style="color: #0000ff;">/&gt;</span>

<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">ofbiz-containers</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><br />ContainerLoader首先载入ofbiz-containers.xml中的容器：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">this</span><span style="color: #000000;">.loadedContainers.clear();

</span><span style="color: #008000;">//</span><span style="color: #008000;"> get this loader's configuration file
</span><span style="color: #008000;">//</span><span style="color: #008000;"> default: framework/base/config/ofbiz-containers.xml</span>
<span style="color: #0000ff;">this</span>.configFile =<span style="color: #000000;"> config.containerConfig;

Collection</span>&lt;ContainerConfig.Container&gt; containers = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
    containers </span>=<span style="color: #000000;"> ContainerConfig.getContainers(configFile);
} </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (ContainerException e) {
    </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> StartupException(e);
}

</span><span style="color: #0000ff;">for</span><span style="color: #000000;"> (ContainerConfig.Container containerCfg : containers) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">this</span><span style="color: #000000;">.unloading) {
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
    }
    </span><span style="color: #0000ff;">boolean</span> matchingLoaderFound = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (UtilValidate.isEmpty(containerCfg.loaders) &amp;&amp;<span style="color: #000000;"> UtilValidate.isEmpty(loaders)) {
        matchingLoaderFound </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> (String loader: loaders) {
            </span><span style="color: #0000ff;">if</span> (UtilValidate.isEmpty(containerCfg.loaders) ||<span style="color: #000000;"> containerCfg.loaders.contains(loader)) {
                matchingLoaderFound </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
            }
        }
    }
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (matchingLoaderFound) {
        Debug.logInfo(</span>"Loading container: " +<span style="color: #000000;"> containerCfg.name, module);
       <span style="color: #ff0000;"> Container tmpContainer </span></span><span style="color: #ff0000;">= loadContainer(containerCfg, args);
        this</span><span style="color: #000000;"><span style="color: #ff0000;">.loadedContainers.add(tmpContainer);</span>
        Debug.logInfo(</span>"Loaded container: " +<span style="color: #000000;"> containerCfg.name, module);
    }
}

</span><span style="color: #0000ff;">private</span> Container loadContainer(ContainerConfig.Container containerCfg, String[] args) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> StartupException {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> load the container class</span>
    ClassLoader loader =<span style="color: #000000;"> Thread.currentThread().getContextClassLoader();
    </span><span style="color: #0000ff;">if</span> (loader == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        Debug.logWarning(</span>"Unable to get context classloader; using system"<span style="color: #000000;">, module);
        loader </span>=<span style="color: #000000;"> ClassLoader.getSystemClassLoader();
    }
    Class</span>&lt;?&gt; containerClass = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
        containerClass </span>=<span style="color: #000000;"> loader.loadClass(containerCfg.className);
    } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (ClassNotFoundException e) {
        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> StartupException("Cannot locate container class"<span style="color: #000000;">, e);
    }
    </span><span style="color: #0000ff;">if</span> (containerClass == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> StartupException("Component container class not loaded"<span style="color: #000000;">);
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> create a new instance of the container object</span>
    Container containerObj = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
        <span style="color: #ff0000;">containerObj </span></span><span style="color: #ff0000;">=</span><span style="color: #000000;"><span style="color: #ff0000;"> (Container) containerClass.newInstance();</span>
    } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (InstantiationException e) {
        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> StartupException("Cannot create " +<span style="color: #000000;"> containerCfg.name, e);
    } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (IllegalAccessException e) {
        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> StartupException("Cannot create " +<span style="color: #000000;"> containerCfg.name, e);
    } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (ClassCastException e) {
        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> StartupException("Cannot create " +<span style="color: #000000;"> containerCfg.name, e);
    }

    </span><span style="color: #0000ff;">if</span> (containerObj == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> StartupException("Unable to create instance of component container"<span style="color: #000000;">);
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> initialize the container object</span>
    <span style="color: #0000ff;">try</span><span style="color: #000000;"> {
        <span style="color: #ff0000;">containerObj.init(args, containerCfg.name, configFile);</span>
    } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (ContainerException e) {
        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> StartupException("Cannot init() " +<span style="color: #000000;"> containerCfg.name, e);
    } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (java.lang.AbstractMethodError e) {
        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> StartupException("Cannot init() " +<span style="color: #000000;"> containerCfg.name, e);
    }

    </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> containerObj;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>然后载入Component中定义的容器：</p>
<div class="cnblogs_code">
<pre>List&lt;ContainerConfig.Container&gt; containersDefinedInComponents =<span style="color: #000000;"> ComponentConfig.getAllContainers();
</span><span style="color: #0000ff;">for</span><span style="color: #000000;"> (ContainerConfig.Container containerCfg: containersDefinedInComponents) {
    </span><span style="color: #0000ff;">boolean</span> matchingLoaderFound = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (UtilValidate.isEmpty(containerCfg.loaders) &amp;&amp;<span style="color: #000000;"> UtilValidate.isEmpty(loaders)) {
        matchingLoaderFound </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> (String loader: loaders) {
            </span><span style="color: #0000ff;">if</span> (UtilValidate.isEmpty(containerCfg.loaders) ||<span style="color: #000000;"> containerCfg.loaders.contains(loader)) {
                matchingLoaderFound </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
            }
        }
    }
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (matchingLoaderFound) {
        Debug.logInfo(</span>"Loading component's container: " +<span style="color: #000000;"> containerCfg.name, module);
        Container tmpContainer </span>=<span style="color: #000000;"> loadContainer(containerCfg, args);
        </span><span style="color: #0000ff;">this</span><span style="color: #000000;">.loadedContainers.add(tmpContainer);
        Debug.logInfo(</span>"Loaded component's container: " +<span style="color: #000000;"> containerCfg.name, module);
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>第三步载入hot-deploy容器：</p>
<div class="cnblogs_code">
<pre>ClassLoader loader =<span style="color: #000000;"> Thread.currentThread().getContextClassLoader();
Enumeration</span>&lt;URL&gt;<span style="color: #000000;"> resources;
</span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
    resources </span>= loader.getResources("hot-deploy-containers.xml"<span style="color: #000000;">);
    </span><span style="color: #0000ff;">while</span> (resources.hasMoreElements() &amp;&amp; !<span style="color: #0000ff;">this</span><span style="color: #000000;">.unloading) {
        URL xmlUrl </span>=<span style="color: #000000;"> resources.nextElement();
        Debug.logInfo(</span>"Loading hot-deploy containers from " +<span style="color: #000000;"> xmlUrl, module);
        Collection</span>&lt;ContainerConfig.Container&gt; hotDeployContainers =<span style="color: #000000;"> ContainerConfig.getContainers(xmlUrl);
        </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> (ContainerConfig.Container containerCfg : hotDeployContainers) {
            </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">this</span><span style="color: #000000;">.unloading) {
                </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
            }
            Container tmpContainer </span>=<span style="color: #000000;"> loadContainer(containerCfg, args);
            </span><span style="color: #0000ff;">this</span><span style="color: #000000;">.loadedContainers.add(tmpContainer);
        }
    }
} </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e) {
    Debug.logError(e, </span>"Could not load hot-deploy-containers.xml"<span style="color: #000000;">, module);
    </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> StartupException(e);
}</span></pre>
</div>
<p><br />最后ContainerLoader启动时，执行所有Container的start()方法。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">synchronized</span> <span style="color: #0000ff;">void</span> start() <span style="color: #0000ff;">throws</span><span style="color: #000000;"> StartupException {
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">this</span>.loaded || <span style="color: #0000ff;">this</span><span style="color: #000000;">.unloading) {
        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> IllegalStateException("start() called on unloaded containers"<span style="color: #000000;">);
    }
    Debug.logInfo(</span>"[Startup] Starting containers..."<span style="color: #000000;">, module);
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> start each container object</span>
    <span style="color: #0000ff;">for</span> (Container container: <span style="color: #0000ff;">this</span><span style="color: #000000;">.loadedContainers) {
        </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">this</span><span style="color: #000000;">.unloading) {
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
        }
        Debug.logInfo(</span>"Starting container " +<span style="color: #000000;"> container.getName(), module);
        </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
            container.start();
        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (ContainerException e) {
            </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> StartupException("Cannot start() " +<span style="color: #000000;"> container.getClass().getName(), e);
        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (java.lang.AbstractMethodError e) {
            </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> StartupException("Cannot start() " +<span style="color: #000000;"> container.getClass().getName(), e);
        }
        Debug.logInfo(</span>"Started container " +<span style="color: #000000;"> container.getName(), module);
    }
}</span></pre>
</div>]]></description></item><item><title>OFBIZ：启动之StartupLoader</title><link>http://www.cnblogs.com/eastson/archive/2016/03/28/5328080.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 28 Mar 2016 02:31:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2016/03/28/5328080.html</guid><description><![CDATA[<p>任意一个JAVA程序都是从main()开始启动的，OFBIZ也不例外。OFBIZ的main()位于framework/start/src/org/ofbiz/base/start/Start.java：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">final</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> Start {

    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">final</span> Start instance = <span style="color: #0000ff;">new</span><span style="color: #000000;"> Start();

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span> main(String[] args) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> StartupException {
        ... ...
        
        instance.init(args, command </span>==<span style="color: #000000;"> Command.COMMAND);
        </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
            </span><span style="color: #0000ff;">if</span> (command ==<span style="color: #000000;"> Command.STATUS) {
                System.out.println(</span>"Current Status : " +<span style="color: #000000;"> instance.status());
            } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (command ==<span style="color: #000000;"> Command.SHUTDOWN) {
                System.out.println(</span>"Shutting down server : " +<span style="color: #000000;"> instance.shutdown());
            } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
                </span><span style="color: #008000;">//</span><span style="color: #008000;"> general start</span>
<span style="color: #000000;">                instance.start();
            }
        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e) {
            e.printStackTrace();
            System.exit(</span>99<span style="color: #000000;">);
        }
    }
    
    </span><span style="color: #0000ff;">void</span> init(String[] args, <span style="color: #0000ff;">boolean</span> fullInit) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> StartupException {
        ... ...

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> initialize the startup loaders</span>
<span style="color: #000000;">        initStartLoaders();
    }

    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span> initStartLoaders() <span style="color: #0000ff;">throws</span><span style="color: #000000;"> StartupException {
        ClassLoader classloader </span>=<span style="color: #000000;"> Thread.currentThread().getContextClassLoader();
        </span><span style="color: #0000ff;">synchronized</span> (<span style="color: #0000ff;">this</span><span style="color: #000000;">.loaders) {
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> initialize the loaders</span>
            <span style="color: #0000ff;">for</span> (Map&lt;String, String&gt;<span style="color: #000000;"> loaderMap : config.loaders) {
                </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">this</span>.serverState.get() ==<span style="color: #000000;"> ServerState.STOPPING) {
                    </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
                }
                </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
                    String loaderClassName </span>= loaderMap.get("class"<span style="color: #000000;">);
                    Class</span>&lt;?&gt; loaderClass =<span style="color: #000000;"> classloader.loadClass(loaderClassName);
                    StartupLoader loader </span>=<span style="color: #000000;"> (StartupLoader) loaderClass.newInstance();
                    loader.load(config, loaderArgs.toArray(</span><span style="color: #0000ff;">new</span><span style="color: #000000;"> String[loaderArgs.size()]));
                    loaders.add(loader);
                } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (ClassNotFoundException e) {
                    </span><span style="color: #0000ff;">throw</span> (StartupException) <span style="color: #0000ff;">new</span><span style="color: #000000;"> StartupException(e.getMessage()).initCause(e);
                } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (InstantiationException e) {
                    </span><span style="color: #0000ff;">throw</span> (StartupException) <span style="color: #0000ff;">new</span><span style="color: #000000;"> StartupException(e.getMessage()).initCause(e);
                } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (IllegalAccessException e) {
                    </span><span style="color: #0000ff;">throw</span> (StartupException) <span style="color: #0000ff;">new</span><span style="color: #000000;"> StartupException(e.getMessage()).initCause(e);
                }
            }
            </span><span style="color: #0000ff;">this</span><span style="color: #000000;">.loaders.trimToSize();
        }
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
    }

    </span><span style="color: #0000ff;">void</span> start() <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        </span><span style="color: #0000ff;">if</span> (!<span style="color: #000000;">startStartLoaders()) {
            </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">this</span>.serverState.get() ==<span style="color: #000000;"> ServerState.STOPPING) {
                </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
            } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
                </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> Exception("Error during start."<span style="color: #000000;">);
            }
        }
        </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (config.shutdownAfterLoad) {
            stopServer();
        }
    }
    
    </span><span style="color: #0000ff;">boolean</span><span style="color: #000000;"> startStartLoaders() {
        </span><span style="color: #0000ff;">synchronized</span> (<span style="color: #0000ff;">this</span><span style="color: #000000;">.loaders) {
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> start the loaders</span>
            <span style="color: #0000ff;">for</span> (StartupLoader loader : <span style="color: #0000ff;">this</span><span style="color: #000000;">.loaders) {
                </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">this</span>.serverState.get() ==<span style="color: #000000;"> ServerState.STOPPING) {
                    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
                }
                </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
                    loader.start();
                } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (StartupException e) {
                    e.printStackTrace();
                    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
                }
            }
        }
        </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">this</span><span style="color: #000000;">.serverState.compareAndSet(ServerState.STARTING, ServerState.RUNNING);
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>OFBIZ的main()过程可以简单理解为两个步骤：init()和start()。init()初始化StartupLoader，通过initStartLoaders()实现。start()启动StartupLoader，通过startStartLoaders()实现。<br />StartupLoader是一个接口，实现载入器的整个生命周期。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">/**</span><span style="color: #008000;">
 * An object that loads server startup classes.
 * &lt;p&gt;
 * When OFBiz starts, the main thread will create the &lt;code&gt;StartupLoader&lt;/code&gt; instance and
 * then call the loader's &lt;code&gt;load&lt;/code&gt; method. If the method returns without
 * throwing an exception the loader will be added to a list of initialized loaders.
 * After all instances have been created and initialized, the main thread will call the
 * &lt;code&gt;start&lt;/code&gt; method of each loader in the list. When OFBiz shuts down, a
 * separate shutdown thread will call the &lt;code&gt;unload&lt;/code&gt; method of each loader.
 * Implementations should anticipate asynchronous calls to the methods by different
 * threads.
 * &lt;/p&gt;
 * 
 </span><span style="color: #008000;">*/</span>
<span style="color: #0000ff;">public</span> <span style="color: #0000ff;">interface</span><span style="color: #000000;"> StartupLoader {

    </span><span style="color: #008000;">/**</span><span style="color: #008000;">
     * Load a startup class.
     *
     * </span><span style="color: #808080;">@param</span><span style="color: #008000;"> config Startup config.
     * </span><span style="color: #808080;">@param</span><span style="color: #008000;"> args Command-line arguments.
     * </span><span style="color: #808080;">@throws</span><span style="color: #008000;"> StartupException If an error was encountered. Throwing this exception
     * will halt loader loading, so it should be thrown only when OFBiz can't
     * operate without it.
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> load(Config config, String args[]) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> StartupException;

    </span><span style="color: #008000;">/**</span><span style="color: #008000;">
     * Start the startup class. This method must not block - implementations
     * that require thread blocking must create a separate thread and then return.
     * 
     * </span><span style="color: #808080;">@throws</span><span style="color: #008000;"> StartupException If an error was encountered.
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> start() <span style="color: #0000ff;">throws</span><span style="color: #000000;"> StartupException;

    </span><span style="color: #008000;">/**</span><span style="color: #008000;">
     * Stop the startup class. This method must not block.
     *
     * </span><span style="color: #808080;">@throws</span><span style="color: #008000;"> StartupException If an error was encountered.
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> unload() <span style="color: #0000ff;">throws</span><span style="color: #000000;"> StartupException;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>initStartLoaders()从config.loaders获取可用的载入器信息，然后创建StartupLoader实例，调用load()方法。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span> initStartLoaders() <span style="color: #0000ff;">throws</span><span style="color: #000000;"> StartupException {
    ClassLoader classloader </span>=<span style="color: #000000;"> Thread.currentThread().getContextClassLoader();
    </span><span style="color: #0000ff;">synchronized</span> (<span style="color: #0000ff;">this</span><span style="color: #000000;">.loaders) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> initialize the loaders</span>
        <span style="color: #0000ff;">for</span> (Map&lt;String, String&gt;<span style="color: #000000;"> loaderMap : <span style="color: #ff0000;">config.loaders</span>) {
            </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">this</span>.serverState.get() ==<span style="color: #000000;"> ServerState.STOPPING) {
                </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
            }
            </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
                <span style="color: #ff0000;">String loaderClassName </span></span><span style="color: #ff0000;">= loaderMap.get("class");
                Class&lt;?&gt; loaderClass = classloader.loadClass(loaderClassName);
                StartupLoader loader = (StartupLoader) loaderClass.newInstance();
                loader.load(config, loaderArgs.toArray(new</span><span style="color: #000000;"><span style="color: #ff0000;"> String[loaderArgs.size()]));
                loaders.add(loader);</span>
            } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (ClassNotFoundException e) {
                </span><span style="color: #0000ff;">throw</span> (StartupException) <span style="color: #0000ff;">new</span><span style="color: #000000;"> StartupException(e.getMessage()).initCause(e);
            } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (InstantiationException e) {
                </span><span style="color: #0000ff;">throw</span> (StartupException) <span style="color: #0000ff;">new</span><span style="color: #000000;"> StartupException(e.getMessage()).initCause(e);
            } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (IllegalAccessException e) {
                </span><span style="color: #0000ff;">throw</span> (StartupException) <span style="color: #0000ff;">new</span><span style="color: #000000;"> StartupException(e.getMessage()).initCause(e);
            }
        }
        </span><span style="color: #0000ff;">this</span><span style="color: #000000;">.loaders.trimToSize();
    }
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
}</span></pre>
</div>
<p><br />config.loaders来源于配置文件framework/start/src/org/ofbiz/base/start/start.properties。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;"># --- StartupLoader implementations to load (in order)
ofbiz.start.loader1</span>=<span style="color: #000000;">org.ofbiz.base.container.ContainerLoader
ofbiz.start.loader1.loaders</span>=main,rmi</pre>
</div>
<p><br />config是framework/start/src/org/ofbiz/base/start/Config.java的一个实例。Config类调用readConfig()过程读取start.properties中的配置信息。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> Config {

    </span><span style="color: #0000ff;">public</span> List&lt;Map&lt;String, String&gt;&gt;<span style="color: #000000;"> loaders;

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> Config getInstance(String[] args) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException {
        String firstArg </span>= args.length &gt; 0 ? args[0] : ""<span style="color: #000000;">;
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Needed when portoffset is used with these commands, start.properties fits for all of them</span>
        <span style="color: #0000ff;">if</span> ("start-batch"<span style="color: #000000;">.equalsIgnoreCase(firstArg) 
                </span>|| "start-debug"<span style="color: #000000;">.equalsIgnoreCase(firstArg) 
                </span>|| "stop"<span style="color: #000000;">.equalsIgnoreCase(firstArg) 
                </span>|| "-shutdown"<span style="color: #000000;">.equalsIgnoreCase(firstArg)
                </span>|| "-status"<span style="color: #000000;">.equalsIgnoreCase(firstArg)) {
            firstArg </span>= "start"<span style="color: #000000;">;
        }
        String configFileName </span>=<span style="color: #000000;"> getConfigFileName(firstArg);
        Config result </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> Config();
        result.readConfig(configFileName, args);
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> result;
    }

    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span><span style="color: #000000;"> String getConfigFileName(String command) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> default command is "start"</span>
        <span style="color: #0000ff;">if</span> (command == <span style="color: #0000ff;">null</span> || command.trim().length() == 0<span style="color: #000000;">) {
            command </span>= "start"<span style="color: #000000;">;
        }
        </span><span style="color: #0000ff;">return</span> "org/ofbiz/base/start/" + command + ".properties"<span style="color: #000000;">;
    }
    
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> readConfig(String config, String[] args) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException {
        ... ...
        
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> loader classes</span>
        loaders = <span style="color: #0000ff;">new</span> ArrayList&lt;Map&lt;String, String&gt;&gt;<span style="color: #000000;">();
        </span><span style="color: #0000ff;">int</span> currentPosition = 1<span style="color: #000000;">;
        Map</span>&lt;String, String&gt; loader = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">while</span> (<span style="color: #0000ff;">true</span><span style="color: #000000;">) {
            loader </span>= <span style="color: #0000ff;">new</span> HashMap&lt;String, String&gt;<span style="color: #000000;">();
            String loaderClass </span>= props.getProperty("ofbiz.start.loader" +<span style="color: #000000;"> currentPosition);
            </span><span style="color: #0000ff;">if</span> (loaderClass == <span style="color: #0000ff;">null</span> || loaderClass.length() == 0<span style="color: #000000;">) {
                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
            } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
                loader.put(</span>"class"<span style="color: #000000;">, loaderClass);
                loader.put(</span>"profiles", props.getProperty("ofbiz.start.loader" + currentPosition + ".loaders"<span style="color: #000000;">));
                loaders.add(loader);
                currentPosition</span>++<span style="color: #000000;">;
            }
        }
    }
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>Capture a Screen Shot</title><link>http://www.cnblogs.com/eastson/archive/2015/12/01/5010343.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 01 Dec 2015 07:50:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/12/01/5010343.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #0000ff;">using</span><span style="color: #000000;"> System;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Runtime.InteropServices;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Drawing;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Drawing.Imaging;
</span><span style="color: #0000ff;">namespace</span><span style="color: #000000;"> ScreenShotDemo
{
    </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
    <span style="color: #808080;">///</span><span style="color: #008000;"> Provides functions to capture the entire screen, or a particular window, and save it to a file.
    </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> ScreenCapture
    {
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
        <span style="color: #808080;">///</span><span style="color: #008000;"> Creates an Image object containing a screen shot of the entire desktop
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span>
        <span style="color: #0000ff;">public</span><span style="color: #000000;"> Image CaptureScreen() 
        {
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> CaptureWindow( User32.GetDesktopWindow() );
        }
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
        <span style="color: #808080;">///</span><span style="color: #008000;"> Creates an Image object containing a screen shot of a specific window
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="handle"&gt;</span><span style="color: #008000;">The handle to the window. (In windows forms, this is obtained by the Handle property)</span><span style="color: #808080;">&lt;/param&gt;</span>
        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span>
        <span style="color: #0000ff;">public</span><span style="color: #000000;"> Image CaptureWindow(IntPtr handle)
        {
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> get te hDC of the target window</span>
            IntPtr hdcSrc =<span style="color: #000000;"> User32.GetWindowDC(handle);
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> get the size</span>
            User32.RECT windowRect = <span style="color: #0000ff;">new</span><span style="color: #000000;"> User32.RECT();
            User32.GetWindowRect(handle,</span><span style="color: #0000ff;">ref</span><span style="color: #000000;"> windowRect);
            </span><span style="color: #0000ff;">int</span> width = windowRect.right -<span style="color: #000000;"> windowRect.left;
            </span><span style="color: #0000ff;">int</span> height = windowRect.bottom -<span style="color: #000000;"> windowRect.top;
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> create a device context we can copy to</span>
            IntPtr hdcDest =<span style="color: #000000;"> GDI32.CreateCompatibleDC(hdcSrc);
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> create a bitmap we can copy it to,
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> using GetDeviceCaps to get the width/height</span>
            IntPtr hBitmap =<span style="color: #000000;"> GDI32.CreateCompatibleBitmap(hdcSrc,width,height); 
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> select the bitmap object</span>
            IntPtr hOld =<span style="color: #000000;"> GDI32.SelectObject(hdcDest,hBitmap);
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> bitblt over</span>
            GDI32.BitBlt(hdcDest,<span style="color: #800080;">0</span>,<span style="color: #800080;">0</span>,width,height,hdcSrc,<span style="color: #800080;">0</span>,<span style="color: #800080;">0</span><span style="color: #000000;">,GDI32.SRCCOPY);
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> restore selection</span>
<span style="color: #000000;">            GDI32.SelectObject(hdcDest,hOld);
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> clean up </span>
<span style="color: #000000;">            GDI32.DeleteDC(hdcDest);
            User32.ReleaseDC(handle,hdcSrc);
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> get a .NET image object for it</span>
            Image img =<span style="color: #000000;"> Image.FromHbitmap(hBitmap);
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> free up the Bitmap object</span>
<span style="color: #000000;">            GDI32.DeleteObject(hBitmap);
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> img;
        }
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
        <span style="color: #808080;">///</span><span style="color: #008000;"> Captures a screen shot of a specific window, and saves it to a file
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="handle"&gt;&lt;/param&gt;</span>
        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="filename"&gt;&lt;/param&gt;</span>
        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="format"&gt;&lt;/param&gt;</span>
        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> CaptureWindowToFile(IntPtr handle, <span style="color: #0000ff;">string</span><span style="color: #000000;"> filename, ImageFormat format) 
        {
            Image img </span>=<span style="color: #000000;"> CaptureWindow(handle);
            img.Save(filename,format);
        }
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
        <span style="color: #808080;">///</span><span style="color: #008000;"> Captures a screen shot of the entire desktop, and saves it to a file
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="filename"&gt;&lt;/param&gt;</span>
        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="format"&gt;&lt;/param&gt;</span>
        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> CaptureScreenToFile(<span style="color: #0000ff;">string</span><span style="color: #000000;"> filename, ImageFormat format) 
        {
            Image img </span>=<span style="color: #000000;"> CaptureScreen();
            img.Save(filename,format);
        }
      
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
        <span style="color: #808080;">///</span><span style="color: #008000;"> Helper class containing Gdi32 API functions
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
        <span style="color: #0000ff;">private</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> GDI32
        {
            
            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">const</span> <span style="color: #0000ff;">int</span> SRCCOPY = <span style="color: #800080;">0x00CC0020</span>; <span style="color: #008000;">//</span><span style="color: #008000;"> BitBlt dwRop parameter</span>
            [DllImport(<span style="color: #800000;">"</span><span style="color: #800000;">gdi32.dll</span><span style="color: #800000;">"</span><span style="color: #000000;">)]
            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">extern</span> <span style="color: #0000ff;">bool</span> BitBlt(IntPtr hObject,<span style="color: #0000ff;">int</span> nXDest,<span style="color: #0000ff;">int</span><span style="color: #000000;"> nYDest,
                </span><span style="color: #0000ff;">int</span> nWidth,<span style="color: #0000ff;">int</span><span style="color: #000000;"> nHeight,IntPtr hObjectSource,
                </span><span style="color: #0000ff;">int</span> nXSrc,<span style="color: #0000ff;">int</span> nYSrc,<span style="color: #0000ff;">int</span><span style="color: #000000;"> dwRop);
            [DllImport(</span><span style="color: #800000;">"</span><span style="color: #800000;">gdi32.dll</span><span style="color: #800000;">"</span><span style="color: #000000;">)]
            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">extern</span> IntPtr CreateCompatibleBitmap(IntPtr hDC,<span style="color: #0000ff;">int</span><span style="color: #000000;"> nWidth, 
                </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> nHeight);
            [DllImport(</span><span style="color: #800000;">"</span><span style="color: #800000;">gdi32.dll</span><span style="color: #800000;">"</span><span style="color: #000000;">)]
            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">extern</span><span style="color: #000000;"> IntPtr CreateCompatibleDC(IntPtr hDC);
            [DllImport(</span><span style="color: #800000;">"</span><span style="color: #800000;">gdi32.dll</span><span style="color: #800000;">"</span><span style="color: #000000;">)]
            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">extern</span> <span style="color: #0000ff;">bool</span><span style="color: #000000;"> DeleteDC(IntPtr hDC);
            [DllImport(</span><span style="color: #800000;">"</span><span style="color: #800000;">gdi32.dll</span><span style="color: #800000;">"</span><span style="color: #000000;">)]
            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">extern</span> <span style="color: #0000ff;">bool</span><span style="color: #000000;"> DeleteObject(IntPtr hObject);
            [DllImport(</span><span style="color: #800000;">"</span><span style="color: #800000;">gdi32.dll</span><span style="color: #800000;">"</span><span style="color: #000000;">)]
            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">extern</span><span style="color: #000000;"> IntPtr SelectObject(IntPtr hDC,IntPtr hObject);
        }

        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
        <span style="color: #808080;">///</span><span style="color: #008000;"> Helper class containing User32 API functions
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
        <span style="color: #0000ff;">private</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> User32
        {
            [StructLayout(LayoutKind.Sequential)]
            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">struct</span><span style="color: #000000;"> RECT
            {
                </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">int</span><span style="color: #000000;"> left;
                </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">int</span><span style="color: #000000;"> top;
                </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">int</span><span style="color: #000000;"> right;
                </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">int</span><span style="color: #000000;"> bottom;
            }
            [DllImport(</span><span style="color: #800000;">"</span><span style="color: #800000;">user32.dll</span><span style="color: #800000;">"</span><span style="color: #000000;">)]
            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">extern</span><span style="color: #000000;"> IntPtr GetDesktopWindow();
            [DllImport(</span><span style="color: #800000;">"</span><span style="color: #800000;">user32.dll</span><span style="color: #800000;">"</span><span style="color: #000000;">)]
            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">extern</span><span style="color: #000000;"> IntPtr GetWindowDC(IntPtr hWnd);
            [DllImport(</span><span style="color: #800000;">"</span><span style="color: #800000;">user32.dll</span><span style="color: #800000;">"</span><span style="color: #000000;">)]
            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">extern</span><span style="color: #000000;"> IntPtr ReleaseDC(IntPtr hWnd,IntPtr hDC);
            [DllImport(</span><span style="color: #800000;">"</span><span style="color: #800000;">user32.dll</span><span style="color: #800000;">"</span><span style="color: #000000;">)]
            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">extern</span> IntPtr GetWindowRect(IntPtr hWnd,<span style="color: #0000ff;">ref</span><span style="color: #000000;"> RECT rect);
        }
    }
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>在 Windows 上安装Rabbit MQ 指南</title><link>http://www.cnblogs.com/eastson/archive/2015/11/24/4992023.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 24 Nov 2015 08:37:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/11/24/4992023.html</guid><description><![CDATA[<p><a href="http://www.rabbitmq.com/" target="_blank">RabbitMQ</a> 是由 LShift 提供的一个 Advanced Message Queuing Protocol (AMQP) 的开源实现，由以高性能、健壮以及可伸缩性出名的 Erlang 写成，因此也是继承了这些优点。<br />官网：<a href="http://www.rabbitmq.com/" target="_blank">http://www.rabbitmq.com/</a><br />文档：<a href="http://www.rabbitmq.com/documentation.html" target="_blank">http://www.rabbitmq.com/documentation.html</a><br />下载：<a href="http://www.rabbitmq.com/download.html" target="_blank">http://www.rabbitmq.com/download.html</a><br />参考：<a href="http://www.cnblogs.com/shanyou/p/4067250.html" target="_blank">在 Windows 上安装Rabbit MQ 指南&nbsp;</a><br />&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<a href="https://github.com/ServiceStack/rabbitmq-windows" target="_blank">Rabbit MQ Windows Installation guide</a></p>
<h3>安装RabbitMQ</h3>
<p>Rabbit MQ 是建立在强大的Erlang OTP平台上，因此安装Rabbit MQ的前提是安装Erlang。通过下面两个连接下载安装3.2.3 版本：</p>
<ol>
<li>下载并安装 <a href="http://www.erlang.org/download.html">Eralng OTP For Windows</a></li>
<li>运行安装 <a href="http://www.rabbitmq.com/download.html">Rabbit MQ Server Windows Installer</a></li>

</ol>
<p>默认安装的Rabbit MQ 监听端口是5672。</p>
<h3><strong>激活</strong><strong>Rabbit MQ's Management Plugin</strong></h3>
<p>使用Rabbit MQ 管理插件，可以更好的可视化方式查看Rabbit MQ 服务器实例的状态，你可以在命令行中使用下面的命令激活：</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">"</span><span style="color: #800000;">C:\Program Files (x86)\RabbitMQ Server\rabbitmq_server-3.2.3\sbin\rabbitmq-plugins.bat</span><span style="color: #800000;">"</span> enable rabbitmq_management</pre>
</div>
<p><span style="line-height: 1.5;">要重启服务才能生效：<br /></span></p>
<div class="cnblogs_code">
<pre>net stop RabbitMQ &amp;&amp; net start RabbitMQ</pre>
</div>
<p><br /><br /></p>]]></description></item><item><title>Quartz.NET管理周期性任务</title><link>http://www.cnblogs.com/eastson/archive/2015/11/24/4991624.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 24 Nov 2015 06:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/11/24/4991624.html</guid><description><![CDATA[<p><a href="http://www.quartz-scheduler.net/" target="_blank">Quartz.NET</a>是一个开源的作业调度框架，非常适合在平时的工作中，定时轮询数据库同步，定时邮件通知，定时处理数据等。&nbsp;Quartz.NET允许开发人员根据时间间隔（或天）来调度作业。它实现了作业和触发器的多对多关系，还能把多个作业与不同的触发器关联。整合了 Quartz.NET的应用程序可以重用来自不同事件的作业，还可以为一个事件组合多个作业。<br />官网：<a href="http://www.quartz-scheduler.net/" target="_blank">http://www.quartz-scheduler.net/</a><br />文档：<a href="http://www.quartz-scheduler.net/documentation/index.html" target="_blank">http://www.quartz-scheduler.net/documentation/index.html</a><br />下载：<a href="http://www.quartz-scheduler.net/download.html" target="_blank">http://www.quartz-scheduler.net/download.html</a><br />参考：<a href="http://www.cnblogs.com/jys509/p/4628926.html" target="_blank">http://www.cnblogs.com/jys509/p/4628926.html</a><br /><br />1. 新建一个控制台项目QuartzDemo，引用Topshelf、Log4net和Quartz。</p>
<div class="cnblogs_code">
<pre>Install-<span style="color: #000000;">Package Topshelf
Install</span>-<span style="color: #000000;">Package Topshelf.Log4Net
Install</span>-Package Quartz</pre>
</div>
<p>2. 修改相关文件。<br />Program.cs：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">using</span><span style="color: #000000;"> System;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.IO;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> log4net;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> log4net.Config;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> Quartz;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> Quartz.Impl;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> Topshelf;

</span><span style="color: #0000ff;">namespace</span><span style="color: #000000;"> QuartzDemo
{
    </span><span style="color: #0000ff;">class</span><span style="color: #000000;"> Program
    {
        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> Main()
        {
            </span><span style="color: #0000ff;">var</span> logCfg = <span style="color: #0000ff;">new</span> FileInfo(AppDomain.CurrentDomain.BaseDirectory + <span style="color: #800000;">"</span><span style="color: #800000;">log4net.xml</span><span style="color: #800000;">"</span><span style="color: #000000;">);
            XmlConfigurator.ConfigureAndWatch(logCfg);

            HostFactory.Run(x </span>=&gt;<span style="color: #000000;">
            {
                x.UseLog4Net();
                x.Service</span>&lt;QuartzService&gt;<span style="color: #000000;">();
                x.RunAsLocalSystem();

                x.SetDescription(</span><span style="color: #800000;">"</span><span style="color: #800000;">Quartz Service</span><span style="color: #800000;">"</span><span style="color: #000000;">);
                x.SetDisplayName(</span><span style="color: #800000;">"</span><span style="color: #800000;">QuartzService</span><span style="color: #800000;">"</span><span style="color: #000000;">);
                x.SetServiceName(</span><span style="color: #800000;">"</span><span style="color: #800000;">QuartzService</span><span style="color: #800000;">"</span><span style="color: #000000;">);

                x.EnablePauseAndContinue();
            });
        }
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">sealed</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> QuartzService : ServiceControl, ServiceSuspend
    {
        </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">readonly</span><span style="color: #000000;"> IScheduler scheduler;

        </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> QuartzService()
        {
            scheduler </span>=<span style="color: #000000;"> StdSchedulerFactory.GetDefaultScheduler();
        }

        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">bool</span><span style="color: #000000;"> Start(HostControl hostControl)
        {
            scheduler.Start();
            </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }

        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">bool</span><span style="color: #000000;"> Stop(HostControl hostControl)
        {
            scheduler.Shutdown(</span><span style="color: #0000ff;">false</span><span style="color: #000000;">);
            </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }

        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">bool</span><span style="color: #000000;"> Continue(HostControl hostControl)
        {
            scheduler.ResumeAll();
            </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }

        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">bool</span><span style="color: #000000;"> Pause(HostControl hostControl)
        {
            scheduler.PauseAll();
            </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">sealed</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> TestJob : IJob
    {
        </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">readonly</span> ILog _logger = LogManager.GetLogger(<span style="color: #0000ff;">typeof</span><span style="color: #000000;">(TestJob));

        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> Execute(IJobExecutionContext context)
        {
            _logger.InfoFormat(</span><span style="color: #800000;">"</span><span style="color: #800000;">TestJob测试</span><span style="color: #800000;">"</span><span style="color: #000000;">);
        }
    }
}</span></pre>
</div>
<p>log4net.xml：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="utf-8" </span><span style="color: #0000ff;">?&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">log4net</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">appender </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="RollingLogFileAppender"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="log4net.Appender.RollingFileAppender"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">日志路径</span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">= "File"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">= "Logs\"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">是否是向文件中追加日志</span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">= "AppendToFile"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">= "true"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">log保留天数</span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">= "MaxSizeRollBackups"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">= "10"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">日志文件名是否是固定不变的</span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">= "StaticLogFileName"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">= "false"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">日志文件名格式为:2008-08-31.log</span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">= "DatePattern"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">= "yyyy-MM-dd&amp;quot;.log&amp;quot;"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">日志根据日期滚动</span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">= "RollingStyle"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">= "Date"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">layout </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="log4net.Layout.PatternLayout"</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="ConversionPattern"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="[%d] [%p] [%c] - %m%n"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">layout</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">appender</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> 控制台前台显示日志 </span><span style="color: #008000;">--&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">appender </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="ColoredConsoleAppender"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="log4net.Appender.ColoredConsoleAppender"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">mapping</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">level </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="ERROR"</span> <span style="color: #0000ff;">/&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">foreColor </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="Red, HighIntensity"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">mapping</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">mapping</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">level </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="Info"</span> <span style="color: #0000ff;">/&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">foreColor </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="Green"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">mapping</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">layout </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="log4net.Layout.PatternLayout"</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">conversionPattern </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="%n%date{HH:mm:ss,fff} [%-5level] %m"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">layout</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="log4net.Filter.LevelRangeFilter"</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="LevelMin"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="Info"</span> <span style="color: #0000ff;">/&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="LevelMax"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="Fatal"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">appender</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">root</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">(高) OFF &gt; FATAL &gt; ERROR &gt; WARN &gt; INFO &gt; DEBUG &gt; ALL (低) </span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">level </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="all"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">appender-ref </span><span style="color: #ff0000;">ref</span><span style="color: #0000ff;">="ColoredConsoleAppender"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">appender-ref </span><span style="color: #ff0000;">ref</span><span style="color: #0000ff;">="RollingLogFileAppender"</span><span style="color: #0000ff;">/&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">root</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">log4net</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>quartz.config：</p>
<div class="cnblogs_code">
<pre># You can configure your scheduler in either <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">quartz</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;"> configuration section
# or in quartz properties file
# Configuration section has precedence

quartz.scheduler.instanceName = QuartzTest

# configure thread pool info
quartz.threadPool.type = Quartz.Simpl.SimpleThreadPool, Quartz
quartz.threadPool.threadCount = 10
quartz.threadPool.threadPriority = Normal

# job initialization plugin handles our xml reading, without it defaults are used
quartz.plugin.xml.type = Quartz.Plugin.Xml.XMLSchedulingDataProcessorPlugin, Quartz
quartz.plugin.xml.fileNames = ~/quartz_jobs.xml

# export this server to remoting context
#quartz.scheduler.exporter.type = Quartz.Simpl.RemotingSchedulerExporter, Quartz
#quartz.scheduler.exporter.port = 555
#quartz.scheduler.exporter.bindName = QuartzScheduler
#quartz.scheduler.exporter.channelType = tcp
#quartz.scheduler.exporter.channelName = httpQuartz</span></pre>
</div>
<p>quartz_jobs.xml：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">job-scheduling-data </span><span style="color: #ff0000;">xmlns</span><span style="color: #0000ff;">="http://quartznet.sourceforge.net/JobSchedulingData"</span><span style="color: #ff0000;"> xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;"> version</span><span style="color: #0000ff;">="2.0"</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">processing-directives</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">overwrite-existing-data</span><span style="color: #0000ff;">&gt;</span>true<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">overwrite-existing-data</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">processing-directives</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">schedule</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">job</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">name</span><span style="color: #0000ff;">&gt;</span>TestJob<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">name</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">group</span><span style="color: #0000ff;">&gt;</span>Test<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">group</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>TestJob测试<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">job-type</span><span style="color: #0000ff;">&gt;</span>QuartzDemo.TestJob, QuartzDemo<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">job-type</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">durable</span><span style="color: #0000ff;">&gt;</span>true<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">durable</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">recover</span><span style="color: #0000ff;">&gt;</span>false<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">recover</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">job</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">trigger</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">cron</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">name</span><span style="color: #0000ff;">&gt;</span>TestJobTrigger<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">name</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">group</span><span style="color: #0000ff;">&gt;</span>Test<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">group</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">job-name</span><span style="color: #0000ff;">&gt;</span>TestJob<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">job-name</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">job-group</span><span style="color: #0000ff;">&gt;</span>Test<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">job-group</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">start-time</span><span style="color: #0000ff;">&gt;</span>2015-01-22T00:00:00+08:00<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">start-time</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">cron-expression</span><span style="color: #0000ff;">&gt;</span>0/3 * * * * ?<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">cron-expression</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">cron</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">trigger</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">schedule</span><span style="color: #0000ff;">&gt;</span>
  
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">job-scheduling-data</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>3. 执行，在控制台和日志文件中每3秒钟显示一条测试信息：<br /><img src="http://images2015.cnblogs.com/blog/111826/201511/111826-20151124145229452-432531363.png" alt="" /><br /><br /><span style="color: #ff0000;">注意，log4net.xml、quartz.config、quartz_jobs.xml，这几个文件要选择&ldquo;复制&rdquo;：</span><br /><img src="http://images2015.cnblogs.com/blog/111826/201511/111826-20151124145519749-1060129664.png" alt="" /></p>]]></description></item><item><title>使用Topshelf创建Windows服务</title><link>http://www.cnblogs.com/eastson/archive/2015/11/24/4991416.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 24 Nov 2015 05:57:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/11/24/4991416.html</guid><description><![CDATA[<p><a href="http://topshelf-project.com/">Topshelf</a>是一个开源的跨平台的宿主服务框架，支持Windows和Mono，只需要几行代码就可以构建一个很方便使用的服务宿主。<br />官网：<a href="http://topshelf-project.com/" target="_blank">http://topshelf-project.com/</a><br />文档：<a href="https://topshelf.readthedocs.org/en/latest/" target="_blank">https://topshelf.readthedocs.org/en/latest/</a><br />代码：<a href="https://github.com/topshelf/topshelf" target="_blank">https://github.com/topshelf/topshelf<br /></a>本文参考：<a href="http://www.cnblogs.com/jys509/p/4614975.html" target="_blank">http://www.cnblogs.com/jys509/p/4614975.html</a></p>
<p>1. 新建一个控制台项目，引用Topshelf和Log4net：</p>
<div class="cnblogs_code">
<pre>Install-<span style="color: #000000;">Package Topshelf
Install</span>-Package Topshelf.Log4Net</pre>
</div>
<p>2. 修改相关文件。<br />Program.cs：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">using</span><span style="color: #000000;"> System;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.IO;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Timers;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> log4net;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> log4net.Config;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> Topshelf;

</span><span style="color: #0000ff;">namespace</span><span style="color: #000000;"> TopshelfDemo
{
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> TownCrier
    {
        </span><span style="color: #0000ff;">readonly</span><span style="color: #000000;"> Timer _timer;
        </span><span style="color: #0000ff;">readonly</span> ILog _log = LogManager.GetLogger(<span style="color: #0000ff;">typeof</span><span style="color: #000000;">(TownCrier));

        </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> TownCrier()
        {
            _timer </span>= <span style="color: #0000ff;">new</span> Timer(<span style="color: #800080;">5000</span>) { AutoReset = <span style="color: #0000ff;">true</span><span style="color: #000000;"> };
            _timer.Elapsed </span>+= (sender, eventArgs) =&gt;<span style="color: #000000;"> 
            {
                _log.Info(DateTime.Now);
            };
        }
        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> Start() { _timer.Start(); }
        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> Stop() { _timer.Stop(); }
    }

    </span><span style="color: #0000ff;">class</span><span style="color: #000000;"> Program
    {
        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> Main()
        {
            </span><span style="color: #0000ff;">var</span> logCfg = <span style="color: #0000ff;">new</span> FileInfo(AppDomain.CurrentDomain.BaseDirectory + <span style="color: #800000;">"</span><span style="color: #800000;">log4net.xml</span><span style="color: #800000;">"</span><span style="color: #000000;">);
            XmlConfigurator.ConfigureAndWatch(logCfg);

            HostFactory.Run(x </span>=&gt;<span style="color: #000000;">
            {
                x.Service</span>&lt;TownCrier&gt;(s =&gt;<span style="color: #000000;">
                {
                    s.ConstructUsing(name </span>=&gt; <span style="color: #0000ff;">new</span><span style="color: #000000;"> TownCrier());
                    s.WhenStarted(tc </span>=&gt;<span style="color: #000000;"> tc.Start());
                    s.WhenStopped(tc </span>=&gt;<span style="color: #000000;"> tc.Stop());
                });
                x.RunAsLocalSystem();

                x.SetDescription(</span><span style="color: #800000;">"</span><span style="color: #800000;">Sample Topshelf Host</span><span style="color: #800000;">"</span><span style="color: #000000;">);
                x.SetDisplayName(</span><span style="color: #800000;">"</span><span style="color: #800000;">Stuff</span><span style="color: #800000;">"</span><span style="color: #000000;">);
                x.SetServiceName(</span><span style="color: #800000;">"</span><span style="color: #800000;">Stuff</span><span style="color: #800000;">"</span><span style="color: #000000;">);
            });
        }
    }
}</span></pre>
</div>
<p>log4net.xml：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="utf-8" </span><span style="color: #0000ff;">?&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">log4net</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">appender </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="RollingLogFileAppender"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="log4net.Appender.RollingFileAppender"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">日志路径</span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">= "File"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">= "Logs\"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">是否是向文件中追加日志</span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">= "AppendToFile"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">= "true"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">log保留天数</span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">= "MaxSizeRollBackups"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">= "10"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">日志文件名是否是固定不变的</span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">= "StaticLogFileName"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">= "false"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">日志文件名格式为:2008-08-31.log</span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">= "DatePattern"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">= "yyyy-MM-dd&amp;quot;.log&amp;quot;"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">日志根据日期滚动</span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">= "RollingStyle"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">= "Date"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">layout </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="log4net.Layout.PatternLayout"</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="ConversionPattern"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="[%d] [%p] [%c] - %m%n"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">layout</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">appender</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> 控制台前台显示日志 </span><span style="color: #008000;">--&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">appender </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="ColoredConsoleAppender"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="log4net.Appender.ColoredConsoleAppender"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">mapping</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">level </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="ERROR"</span> <span style="color: #0000ff;">/&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">foreColor </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="Red, HighIntensity"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">mapping</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">mapping</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">level </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="Info"</span> <span style="color: #0000ff;">/&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">foreColor </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="Green"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">mapping</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">layout </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="log4net.Layout.PatternLayout"</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">conversionPattern </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="%n%date{HH:mm:ss,fff} [%-5level] %m"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">layout</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="log4net.Filter.LevelRangeFilter"</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="LevelMin"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="Info"</span> <span style="color: #0000ff;">/&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="LevelMax"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="Fatal"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">appender</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">root</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">(高) OFF &gt; FATAL &gt; ERROR &gt; WARN &gt; INFO &gt; DEBUG &gt; ALL (低) </span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">level </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="all"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">appender-ref </span><span style="color: #ff0000;">ref</span><span style="color: #0000ff;">="ColoredConsoleAppender"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">appender-ref </span><span style="color: #ff0000;">ref</span><span style="color: #0000ff;">="RollingLogFileAppender"</span><span style="color: #0000ff;">/&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">root</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">log4net</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>3. 执行，在控制台和日志文件中每5秒钟显示一条时间信息：<br /><img src="http://images2015.cnblogs.com/blog/111826/201511/111826-20151124135527609-1701235520.png" alt="" /><br />4. 服务相关操作：<br />安装：TopshelfDemo.exe install<br />启动：TopshelfDemo.exe start<br />卸载：TopshelfDemo.exe uninstall</p>]]></description></item><item><title>Redirecting Console.WriteLine() to Textbox</title><link>http://www.cnblogs.com/eastson/archive/2015/10/28/4917633.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 28 Oct 2015 08:01:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/10/28/4917633.html</guid><description><![CDATA[<p>I'm building this application in Visual Studio 2010 using C#.</p>
<p>Basically there are 2 files, form1.cs (which is the windows form) and program.cs (where all the logic lies).</p>
<pre class="lang-cs prettyprint prettyprinted"><code><span class="com">//form1.cs<span class="pln">
<span class="kwd">public<span class="pln"> <span class="kwd">partial<span class="pln"> <span class="kwd">class<span class="pln"> <span class="typ">Form1<span class="pln"> <span class="pun">:<span class="pln"> <span class="typ">Form<span class="pln">
<span class="pun">{<span class="pln">
    <span class="com">//runButton_click function<span class="pln">
<span class="pun">}<span class="pln">

<span class="com">//program.cs<span class="pln">
<span class="kwd">class<span class="pln"> <span class="typ">Program<span class="pln">
<span class="pun">{<span class="pln">
    <span class="kwd">static<span class="pln"> <span class="kwd">void<span class="pln"> <span class="typ">Main<span class="pun">()<span class="pln">
    <span class="pun">{<span class="pln">
        <span class="kwd">while<span class="pun">(<span class="pln">blah<span class="pun">-<span class="pln">condition<span class="pun">)<span class="pln">
        <span class="pun">{<span class="pln">
            <span class="com">//some calculation<span class="pln">
            <span class="typ">Console<span class="pun">.<span class="typ">WriteLine<span class="pun">(<span class="str">"Progress "<span class="pln"> <span class="pun">+<span class="pln"> percent <span class="pun">+<span class="pln"> <span class="str">"% completed."<span class="pun">);<span class="pln">
        <span class="pun">}<span class="pln">
    <span class="pun">}<span class="pln">
<span class="pun">}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
<p>There is a Run&nbsp;<em>button</em>&nbsp;and a blank&nbsp;<em>textbox</em>.</p>
<p>When the user hits the Run&nbsp;<em>button</em>, program.cs will perform some task and constantly printing out the progress using&nbsp;<code>Console.WriteLine()</code>&nbsp;onto the console (command prompt).</p>
<p>Question: How can I print to the textbox on form1 instead of printing into command prompt? I will need to print the progress constantly without any user action.</p>
<p>Thanks in advance!</p>
<p>By the way, it doesn't have to be a textbox, it can be a label or something else that can take text. I chose textbox because it makes more sense to me.<br /><br /></p>
<p>Start by creating a new&nbsp;<code>TextWriter</code>&nbsp;that is capable of writing to a textbox. It only&nbsp;<em>needs</em>&nbsp;to override the&nbsp;<code>Write</code>&nbsp;method that accepts a&nbsp;<code>char</code>, but that would be ungodly inefficient, so it's better to overwrite at least the method with a string.</p>
<pre class="lang-cs prettyprint prettyprinted"><code><span class="kwd">public<span class="pln"> <span class="kwd">class<span class="pln"> <span class="typ">ControlWriter<span class="pln"> <span class="pun">:<span class="pln"> <span class="typ">TextWriter<span class="pln">
<span class="pun">{<span class="pln">
    <span class="kwd">private<span class="pln"> <span class="typ">Control<span class="pln"> textbox<span class="pun">;<span class="pln">
    <span class="kwd">public<span class="pln"> <span class="typ">ControlWriter<span class="pun">(<span class="typ">Control<span class="pln"> textbox<span class="pun">)<span class="pln">
    <span class="pun">{<span class="pln">
        <span class="kwd">this<span class="pun">.<span class="pln">textbox <span class="pun">=<span class="pln"> textbox<span class="pun">;<span class="pln">
    <span class="pun">}<span class="pln">

    <span class="kwd">public<span class="pln"> <span class="kwd">override<span class="pln"> <span class="kwd">void<span class="pln"> <span class="typ">Write<span class="pun">(<span class="kwd">char<span class="pln"> value<span class="pun">)<span class="pln">
    <span class="pun">{<span class="pln">
        textbox<span class="pun">.<span class="typ">Text<span class="pln"> <span class="pun">+=<span class="pln"> value<span class="pun">;<span class="pln">
    <span class="pun">}<span class="pln">

    <span class="kwd">public<span class="pln"> <span class="kwd">override<span class="pln"> <span class="kwd">void<span class="pln"> <span class="typ">Write<span class="pun">(<span class="kwd">string<span class="pln"> value<span class="pun">)<span class="pln">
    <span class="pun">{<span class="pln">
        textbox<span class="pun">.<span class="typ">Text<span class="pln"> <span class="pun">+=<span class="pln"> value<span class="pun">;<span class="pln">
    <span class="pun">}<span class="pln">

    <span class="kwd">public<span class="pln"> <span class="kwd">override<span class="pln"> <span class="typ">Encoding<span class="pln"> <span class="typ">Encoding<span class="pln">
    <span class="pun">{<span class="pln">
        get <span class="pun">{<span class="pln"> <span class="kwd">return<span class="pln"> <span class="typ">Encoding<span class="pun">.<span class="pln">ASCII<span class="pun">;<span class="pln"> <span class="pun">}<span class="pln">
    <span class="pun">}<span class="pln">
<span class="pun">}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
<p>In this case I've had it just accept a&nbsp;<code>Control</code>, which could be a&nbsp;<code>Textbox</code>, a&nbsp;<code>Label</code>, or whatever. If you want to change it to just a&nbsp;<code>Label</code>&nbsp;that would be fine.</p>
<p>Then just set the console output to a new instance of this writer, pointing to some textbox or label:</p>
<pre class="lang-cs prettyprint prettyprinted"><code><span class="typ">Console<span class="pun">.<span class="typ">SetOut<span class="pun">(<span class="kwd">new<span class="pln"> <span class="typ">ControlWriter<span class="pun">(<span class="pln">textbox1<span class="pun">));</span></span></span></span></span></span></span></span></span></span></code></pre>
<p>If you want the output to be written to the console&nbsp;<em>as well as</em>&nbsp;to the textbox we can use this class to create a writer that will write to several writers:</p>
<pre class="lang-cs prettyprint prettyprinted"><code><span class="kwd">public<span class="pln"> <span class="kwd">class<span class="pln"> <span class="typ">MultiTextWriter<span class="pln"> <span class="pun">:<span class="pln"> <span class="typ">TextWriter<span class="pln">
<span class="pun">{<span class="pln">
    <span class="kwd">private<span class="pln"> <span class="typ">IEnumerable<span class="pun">&lt;<span class="typ">TextWriter<span class="pun">&gt;<span class="pln"> writers<span class="pun">;<span class="pln">
    <span class="kwd">public<span class="pln"> <span class="typ">MultiTextWriter<span class="pun">(<span class="typ">IEnumerable<span class="pun">&lt;<span class="typ">TextWriter<span class="pun">&gt;<span class="pln"> writers<span class="pun">)<span class="pln">
    <span class="pun">{<span class="pln">
        <span class="kwd">this<span class="pun">.<span class="pln">writers <span class="pun">=<span class="pln"> writers<span class="pun">.<span class="typ">ToList<span class="pun">();<span class="pln">
    <span class="pun">}<span class="pln">
    <span class="kwd">public<span class="pln"> <span class="typ">MultiTextWriter<span class="pun">(<span class="kwd">params<span class="pln"> <span class="typ">TextWriter<span class="pun">[]<span class="pln"> writers<span class="pun">)<span class="pln">
    <span class="pun">{<span class="pln">
        <span class="kwd">this<span class="pun">.<span class="pln">writers <span class="pun">=<span class="pln"> writers<span class="pun">;<span class="pln">
    <span class="pun">}<span class="pln">

    <span class="kwd">public<span class="pln"> <span class="kwd">override<span class="pln"> <span class="kwd">void<span class="pln"> <span class="typ">Write<span class="pun">(<span class="kwd">char<span class="pln"> value<span class="pun">)<span class="pln">
    <span class="pun">{<span class="pln">
        <span class="kwd">foreach<span class="pln"> <span class="pun">(<span class="kwd">var<span class="pln"> writer <span class="kwd">in<span class="pln"> writers<span class="pun">)<span class="pln">
            writer<span class="pun">.<span class="typ">Write<span class="pun">(<span class="pln">value<span class="pun">);<span class="pln">
    <span class="pun">}<span class="pln">

    <span class="kwd">public<span class="pln"> <span class="kwd">override<span class="pln"> <span class="kwd">void<span class="pln"> <span class="typ">Write<span class="pun">(<span class="kwd">string<span class="pln"> value<span class="pun">)<span class="pln">
    <span class="pun">{<span class="pln">
        <span class="kwd">foreach<span class="pln"> <span class="pun">(<span class="kwd">var<span class="pln"> writer <span class="kwd">in<span class="pln"> writers<span class="pun">)<span class="pln">
            writer<span class="pun">.<span class="typ">Write<span class="pun">(<span class="pln">value<span class="pun">);<span class="pln">
    <span class="pun">}<span class="pln">

    <span class="kwd">public<span class="pln"> <span class="kwd">override<span class="pln"> <span class="kwd">void<span class="pln"> <span class="typ">Flush<span class="pun">()<span class="pln">
    <span class="pun">{<span class="pln">
        <span class="kwd">foreach<span class="pln"> <span class="pun">(<span class="kwd">var<span class="pln"> writer <span class="kwd">in<span class="pln"> writers<span class="pun">)<span class="pln">
            writer<span class="pun">.<span class="typ">Flush<span class="pun">();<span class="pln">
    <span class="pun">}<span class="pln">

    <span class="kwd">public<span class="pln"> <span class="kwd">override<span class="pln"> <span class="kwd">void<span class="pln"> <span class="typ">Close<span class="pun">()<span class="pln">
    <span class="pun">{<span class="pln">
        <span class="kwd">foreach<span class="pln"> <span class="pun">(<span class="kwd">var<span class="pln"> writer <span class="kwd">in<span class="pln"> writers<span class="pun">)<span class="pln">
            writer<span class="pun">.<span class="typ">Close<span class="pun">();<span class="pln">
    <span class="pun">}<span class="pln">

    <span class="kwd">public<span class="pln"> <span class="kwd">override<span class="pln"> <span class="typ">Encoding<span class="pln"> <span class="typ">Encoding<span class="pln">
    <span class="pun">{<span class="pln">
        get <span class="pun">{<span class="pln"> <span class="kwd">return<span class="pln"> <span class="typ">Encoding<span class="pun">.<span class="pln">ASCII<span class="pun">;<span class="pln"> <span class="pun">}<span class="pln">
    <span class="pun">}<span class="pln">
<span class="pun">}</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>
<p>Then using this we can do:</p>
<pre class="lang-cs prettyprint prettyprinted"><code><span class="typ">Console<span class="pun">.<span class="typ">SetOut<span class="pun">(<span class="kwd">new<span class="pln"> <span class="typ">MultiTextWriter<span class="pun">(<span class="kwd">new<span class="pln"> <span class="typ">ControlWriter<span class="pun">(<span class="pln">textbox1<span class="pun">),<span class="pln"> <span class="typ">Console<span class="pun">.<span class="typ">Out<span class="pun">));</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></code></pre>]]></description></item><item><title>C#中如何设置窗体的默认按钮和取消按钮</title><link>http://www.cnblogs.com/eastson/archive/2015/10/23/4905207.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 23 Oct 2015 09:30:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/10/23/4905207.html</guid><description><![CDATA[<p>可以直接在窗体的AcceptButton和CancelButton中设置相应的按钮。</p>
<p>也可以在后头通过代码设置：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">this</span>.AcceptButton =<span style="color: #000000;"> (IButtonControl)btnSave;
</span><span style="color: #0000ff;">this</span>.CancelButton = (IButtonControl)btnCancel;</pre>
</div>]]></description></item><item><title>String Format for DateTime</title><link>http://www.cnblogs.com/eastson/archive/2015/10/22/4901353.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 22 Oct 2015 08:02:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/10/22/4901353.html</guid><description><![CDATA[<p>This example shows how to format&nbsp;<a href="http://msdn2.microsoft.com/en-us/library/system.datetime.aspx">DateTime</a>&nbsp;using&nbsp;<a href="http://msdn2.microsoft.com/en-us/library/system.string.format.aspx">String.Format</a>&nbsp;method. All formatting can be done also using&nbsp;<a href="http://msdn2.microsoft.com/en-us/library/zdtaw1bw.aspx">DateTime.ToString</a>&nbsp;method.</p>
<h2>Custom DateTime Formatting</h2>
<p>There are following custom format specifiers&nbsp;<code>y</code>&nbsp;(year),&nbsp;<code>M</code>&nbsp;(month),&nbsp;<code>d</code>&nbsp;(day),&nbsp;<code>h</code>&nbsp;(hour 12),&nbsp;<code>H</code>&nbsp;(hour 24),&nbsp;<code>m</code>&nbsp;(minute),&nbsp;<code>s</code>&nbsp;(second),&nbsp;<code>f</code>&nbsp;(second fraction),&nbsp;<code>F</code>&nbsp;(second fraction, trailing zeroes are trimmed),<code>t</code>&nbsp;(P.M or A.M) and&nbsp;<code>z</code>&nbsp;(time&nbsp;zone).</p>
<p>Following examples demonstrate how are the format specifiers rewritten to the output.</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> create date time 2008-03-09 16:05:07.123</span>
DateTime dt = <span style="color: #0000ff;">new</span> DateTime(<span style="color: #800080;">2008</span>, <span style="color: #800080;">3</span>, <span style="color: #800080;">9</span>, <span style="color: #800080;">16</span>, <span style="color: #800080;">5</span>, <span style="color: #800080;">7</span>, <span style="color: #800080;">123</span><span style="color: #000000;">);

String.Format(</span><span style="color: #800000;">"</span><span style="color: #800000;">{0:y yy yyy yyyy}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "8 08 008 2008"   year</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:M MM MMM MMMM}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "3 03 Mar March"  month</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:d dd ddd dddd}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "9 09 Sun Sunday" day</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:h hh H HH}</span><span style="color: #800000;">"</span>,     dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "4 04 16 16"      hour 12/24</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:m mm}</span><span style="color: #800000;">"</span>,          dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "5 05"            minute</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:s ss}</span><span style="color: #800000;">"</span>,          dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "7 07"            second</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:f ff fff ffff}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "1 12 123 1230"   sec.fraction</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:F FF FFF FFFF}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "1 12 123 123"    without zeroes</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:t tt}</span><span style="color: #800000;">"</span>,          dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "P PM"            A.M. or P.M.</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:z zz zzz}</span><span style="color: #800000;">"</span>,      dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "-6 -06 -06:00"   time zone</span></pre>
</div>
<p><span style="line-height: 1.5;">You can use also&nbsp;</span><strong style="line-height: 1.5;">date separator</strong><span style="line-height: 1.5;">&nbsp;</span><code style="line-height: 1.5;">/</code><span style="line-height: 1.5;">&nbsp;(slash) and&nbsp;</span><strong style="line-height: 1.5;">time sepatator</strong><span style="line-height: 1.5;">&nbsp;</span><code style="line-height: 1.5;">:</code><span style="line-height: 1.5;">&nbsp;(colon). These characters will be rewritten to characters defined in the current&nbsp;</span><a style="line-height: 1.5;" href="http://msdn2.microsoft.com/en-us/library/system.globalization.datetimeformatinfo.dateseparator.aspx">DateTimeForma&shy;tInfo.DateSepa&shy;rator</a><span style="line-height: 1.5;">&nbsp;and</span><a style="line-height: 1.5;" href="http://msdn2.microsoft.com/en-us/library/system.globalization.datetimeformatinfo.timeseparator.aspx">DateTimeForma&shy;tInfo.TimeSepa&shy;rator</a><span style="line-height: 1.5;">.<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> date separator in german culture is "." (so "/" changes to ".")</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:d/M/yyyy HH:mm:ss}</span><span style="color: #800000;">"</span>, dt); <span style="color: #008000;">//</span><span style="color: #008000;"> "9/3/2008 16:05:07" - english (en-US)</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:d/M/yyyy HH:mm:ss}</span><span style="color: #800000;">"</span>, dt); <span style="color: #008000;">//</span><span style="color: #008000;"> "9.3.2008 16:05:07" - german (de-DE)</span></pre>
</div>
<p><span style="line-height: 1.5;">Here are some examples of custom date and time formatting:<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> month/day numbers without/with leading zeroes</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:M/d/yyyy}</span><span style="color: #800000;">"</span>, dt);            <span style="color: #008000;">//</span><span style="color: #008000;"> "3/9/2008"</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:MM/dd/yyyy}</span><span style="color: #800000;">"</span>, dt);          <span style="color: #008000;">//</span><span style="color: #008000;"> "03/09/2008"

</span><span style="color: #008000;">//</span><span style="color: #008000;"> day/month names</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:ddd, MMM d, yyyy}</span><span style="color: #800000;">"</span>, dt);    <span style="color: #008000;">//</span><span style="color: #008000;"> "Sun, Mar 9, 2008"</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:dddd, MMMM d, yyyy}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "Sunday, March 9, 2008"

</span><span style="color: #008000;">//</span><span style="color: #008000;"> two/four digit year</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:MM/dd/yy}</span><span style="color: #800000;">"</span>, dt);            <span style="color: #008000;">//</span><span style="color: #008000;"> "03/09/08"</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:MM/dd/yyyy}</span><span style="color: #800000;">"</span>, dt);          <span style="color: #008000;">//</span><span style="color: #008000;"> "03/09/2008"</span></pre>
</div>
<h2><span style="font-size: 1.5em; line-height: 1.5;">Standard DateTime Formatting</span></h2>
<p>In&nbsp;<a href="http://msdn2.microsoft.com/en-us/library/system.globalization.datetimeformatinfo.aspx">DateTimeForma&shy;tInfo</a>&nbsp;there are defined standard patterns for the current culture. For example property&nbsp;<a href="http://msdn2.microsoft.com/en-us/library/system.globalization.datetimeformatinfo.shorttimepattern.aspx">ShortTimePattern</a>&nbsp;is string that contains value&nbsp;<code>h:mm tt</code>&nbsp;for&nbsp;<strong>en-US</strong>&nbsp;culture and value&nbsp;<code>HH:mm</code>&nbsp;for&nbsp;<strong>de-DE</strong>&nbsp;culture.</p>
<p>Following table shows patterns defined in&nbsp;<a href="http://msdn2.microsoft.com/en-us/library/system.globalization.datetimeformatinfo.aspx">DateTimeForma&shy;tInfo</a>&nbsp;and their values for en-US culture. First column contains format specifiers for the&nbsp;<a href="http://msdn2.microsoft.com/en-us/library/system.string.format.aspx">String.Format</a>&nbsp;method.</p>
<table>
<tbody>
<tr><th>Specifier</th><th>DateTimeFormatInfo property</th><th>Pattern value (for en-US culture)</th></tr>
<tr>
<td><code>t</code></td>
<td>ShortTimePattern</td>
<td><code>h:mm tt</code></td>
</tr>
<tr>
<td><code>d</code></td>
<td>ShortDatePattern</td>
<td><code>M/d/yyyy</code></td>
</tr>
<tr>
<td><code>T</code></td>
<td>LongTimePattern</td>
<td><code>h:mm:ss tt</code></td>
</tr>
<tr>
<td><code>D</code></td>
<td>LongDatePattern</td>
<td><code>dddd, MMMM dd, yyyy</code></td>
</tr>
<tr>
<td><code>f</code></td>
<td><em>(combination of&nbsp;<code>D</code>&nbsp;and&nbsp;<code>t</code>)</em></td>
<td><code>dddd, MMMM dd, yyyy h:mm tt</code></td>
</tr>
<tr>
<td><code>F</code></td>
<td>FullDateTimePattern</td>
<td><code>dddd, MMMM dd, yyyy h:mm:ss tt</code></td>
</tr>
<tr>
<td><code>g</code></td>
<td><em>(combination of&nbsp;<code>d</code>&nbsp;and&nbsp;<code>t</code>)</em></td>
<td><code>M/d/yyyy h:mm tt</code></td>
</tr>
<tr>
<td><code>G</code></td>
<td><em>(combination of&nbsp;<code>d</code>&nbsp;and&nbsp;<code>T</code>)</em></td>
<td><code>M/d/yyyy h:mm:ss tt</code></td>
</tr>
<tr>
<td><code>m</code>,&nbsp;<code>M</code></td>
<td>MonthDayPattern</td>
<td><code>MMMM dd</code></td>
</tr>
<tr>
<td><code>y</code>,&nbsp;<code>Y</code></td>
<td>YearMonthPattern</td>
<td><code>MMMM, yyyy</code></td>
</tr>
<tr>
<td><code>r</code>,&nbsp;<code>R</code></td>
<td>RFC1123Pattern</td>
<td><code>ddd, dd MMM yyyy HH':'mm':'ss 'GMT'</code>&nbsp;<em>(*)</em></td>
</tr>
<tr>
<td><code>s</code></td>
<td>SortableDateTi&shy;mePattern</td>
<td><code>yyyy'-'MM'-'dd'T'HH':'mm':'ss</code>&nbsp;<em>(*)</em></td>
</tr>
<tr>
<td><code>u</code></td>
<td>UniversalSorta&shy;bleDateTimePat&shy;tern</td>
<td><code>yyyy'-'MM'-'dd HH':'mm':'ss'Z'</code>&nbsp;<em>(*)</em></td>
</tr>
<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td><em>(*) = culture independent</em></td>
</tr>
</tbody>
</table>
<p>Following examples show usage of&nbsp;<strong>standard format specifiers</strong>&nbsp;in&nbsp;<a href="http://msdn2.microsoft.com/en-us/library/system.string.format.aspx">String.Format</a>&nbsp;method and the resulting output.</p>
<div class="cnblogs_code">
<pre>String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:t}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "4:05 PM"                         ShortTime</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:d}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "3/9/2008"                        ShortDate</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:T}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "4:05:07 PM"                      LongTime</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:D}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "Sunday, March 09, 2008"          LongDate</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:f}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "Sunday, March 09, 2008 4:05 PM"  LongDate+ShortTime</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:F}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "Sunday, March 09, 2008 4:05:07 PM" FullDateTime</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:g}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "3/9/2008 4:05 PM"                ShortDate+ShortTime</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:G}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "3/9/2008 4:05:07 PM"             ShortDate+LongTime</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:m}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "March 09"                        MonthDay</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:y}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "March, 2008"                     YearMonth</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:r}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "Sun, 09 Mar 2008 16:05:07 GMT"   RFC1123</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:s}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "2008-03-09T16:05:07"             SortableDateTime</span>
String.Format(<span style="color: #800000;">"</span><span style="color: #800000;">{0:u}</span><span style="color: #800000;">"</span>, dt);  <span style="color: #008000;">//</span><span style="color: #008000;"> "2008-03-09 16:05:07Z"            UniversalSortableDateTime</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>C#实现程序自重启</title><link>http://www.cnblogs.com/eastson/archive/2015/10/20/4894363.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 20 Oct 2015 03:54:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/10/20/4894363.html</guid><description><![CDATA[<p>方法1：</p>
<div class="cnblogs_code">
<pre>System.Diagnostics.Process.Start(System.Reflection.Assembly.GetExecutingAssembly().Location);  <span style="color: #008000;">//</span><span style="color: #008000;">重新开启当前程序</span>
Close();<span style="color: #008000;">//</span><span style="color: #008000;">关闭当前程序</span></pre>
</div>
<p>方法2：</p>
<div class="cnblogs_code">
<pre>System.Windows.Forms.Application.Restart(); <span style="color: #008000;">//</span><span style="color: #008000;">重启当前程序</span></pre>
</div>]]></description></item><item><title>C# 文件压缩与解压(ZIP格式)</title><link>http://www.cnblogs.com/eastson/archive/2015/10/14/4877468.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 14 Oct 2015 06:58:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/10/14/4877468.html</guid><description><![CDATA[<p>在企业开发过程中经常会遇到文件的压缩与解压，虽然网上很多流行的压缩文件格式都是RAR的，但是由于RAR不是一个开放的标准，因此ZIP成了更多人的选择。如果你不想自己开发的话可以选择开源的项目，比如<a href="http://www.icsharpcode.net/OpenSource/SharpZipLib/">SharpZipLib</a>就是一个不错的选择。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">using</span><span style="color: #000000;"> System;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Collections.Generic;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Text;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.IO;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> ICSharpCode.SharpZipLib.Zip;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Diagnostics;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> ICSharpCode.SharpZipLib.Core;

</span><span style="color: #0000ff;">namespace</span><span style="color: #000000;"> TestConsole
{
    </span><span style="color: #0000ff;">class</span><span style="color: #000000;"> Program
    {
        </span><span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> Main()
        {
            </span><span style="color: #008000;">//</span><span style="color: #008000;">CreateZipFile(@"d:\", @"d:\a.zip");</span>
            UnZipFile(<span style="color: #800000;">@"</span><span style="color: #800000;">d:\a.zip</span><span style="color: #800000;">"</span><span style="color: #000000;">);

            Console.Read();
        }

        </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span> CreateZipFile(<span style="color: #0000ff;">string</span> filesPath, <span style="color: #0000ff;">string</span><span style="color: #000000;"> zipFilePath)
        {

            </span><span style="color: #0000ff;">if</span> (!<span style="color: #000000;">Directory.Exists(filesPath))
            {
                Console.WriteLine(</span><span style="color: #800000;">"</span><span style="color: #800000;">Cannot find directory '{0}'</span><span style="color: #800000;">"</span><span style="color: #000000;">, filesPath);
                </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
            }

            </span><span style="color: #0000ff;">try</span><span style="color: #000000;">
            {
                </span><span style="color: #0000ff;">string</span>[] filenames =<span style="color: #000000;"> Directory.GetFiles(filesPath);
                </span><span style="color: #0000ff;">using</span> (ZipOutputStream s = <span style="color: #0000ff;">new</span><span style="color: #000000;"> ZipOutputStream(File.Create(zipFilePath)))
                {

                    s.SetLevel(</span><span style="color: #800080;">9</span>); <span style="color: #008000;">//</span><span style="color: #008000;"> 压缩级别 0-9
                    </span><span style="color: #008000;">//</span><span style="color: #008000;">s.Password = "123"; </span><span style="color: #008000;">//</span><span style="color: #008000;">Zip压缩文件密码</span>
                    <span style="color: #0000ff;">byte</span>[] buffer = <span style="color: #0000ff;">new</span> <span style="color: #0000ff;">byte</span>[<span style="color: #800080;">4096</span>]; <span style="color: #008000;">//</span><span style="color: #008000;">缓冲区大小</span>
                    <span style="color: #0000ff;">foreach</span> (<span style="color: #0000ff;">string</span> file <span style="color: #0000ff;">in</span><span style="color: #000000;"> filenames)
                    {
                        ZipEntry entry </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> ZipEntry(Path.GetFileName(file));
                        entry.DateTime </span>=<span style="color: #000000;"> DateTime.Now;
                        s.PutNextEntry(entry);
                        </span><span style="color: #0000ff;">using</span> (FileStream fs =<span style="color: #000000;"> File.OpenRead(file))
                        {
                            </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> sourceBytes;
                            </span><span style="color: #0000ff;">do</span><span style="color: #000000;">
                            {
                                sourceBytes </span>= fs.Read(buffer, <span style="color: #800080;">0</span><span style="color: #000000;">, buffer.Length);
                                s.Write(buffer, </span><span style="color: #800080;">0</span><span style="color: #000000;">, sourceBytes);
                            } </span><span style="color: #0000ff;">while</span> (sourceBytes &gt; <span style="color: #800080;">0</span><span style="color: #000000;">);
                        }
                    }
                    s.Finish();
                    s.Close();
                }
            }
            </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception ex)
            {
                Console.WriteLine(</span><span style="color: #800000;">"</span><span style="color: #800000;">Exception during processing {0}</span><span style="color: #800000;">"</span><span style="color: #000000;">, ex);
            }
        }

        </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span> UnZipFile( <span style="color: #0000ff;">string</span><span style="color: #000000;"> zipFilePath)
        {
            </span><span style="color: #0000ff;">if</span> (!<span style="color: #000000;">File.Exists(zipFilePath))
            {
                Console.WriteLine(</span><span style="color: #800000;">"</span><span style="color: #800000;">Cannot find file '{0}'</span><span style="color: #800000;">"</span><span style="color: #000000;">, zipFilePath);
                </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
            }

            </span><span style="color: #0000ff;">using</span> (ZipInputStream s = <span style="color: #0000ff;">new</span><span style="color: #000000;"> ZipInputStream(File.OpenRead(zipFilePath)))
            {

                ZipEntry theEntry;
                </span><span style="color: #0000ff;">while</span> ((theEntry = s.GetNextEntry()) != <span style="color: #0000ff;">null</span><span style="color: #000000;">)
                {

                    Console.WriteLine(theEntry.Name);

                    </span><span style="color: #0000ff;">string</span> directoryName =<span style="color: #000000;"> Path.GetDirectoryName(theEntry.Name);
                    </span><span style="color: #0000ff;">string</span> fileName =<span style="color: #000000;"> Path.GetFileName(theEntry.Name);

                    </span><span style="color: #008000;">//</span><span style="color: #008000;"> create directory</span>
                    <span style="color: #0000ff;">if</span> (directoryName.Length &gt; <span style="color: #800080;">0</span><span style="color: #000000;">)
                    {
                        Directory.CreateDirectory(directoryName);
                    }

                    </span><span style="color: #0000ff;">if</span> (fileName !=<span style="color: #000000;"> String.Empty)
                    {
                        </span><span style="color: #0000ff;">using</span> (FileStream streamWriter =<span style="color: #000000;"> File.Create(theEntry.Name))
                        {

                            </span><span style="color: #0000ff;">int</span> size = <span style="color: #800080;">2048</span><span style="color: #000000;">;
                            </span><span style="color: #0000ff;">byte</span>[] data = <span style="color: #0000ff;">new</span> <span style="color: #0000ff;">byte</span>[<span style="color: #800080;">2048</span><span style="color: #000000;">];
                            </span><span style="color: #0000ff;">while</span> (<span style="color: #0000ff;">true</span><span style="color: #000000;">)
                            {
                                size </span>= s.Read(data, <span style="color: #800080;">0</span><span style="color: #000000;">, data.Length);
                                </span><span style="color: #0000ff;">if</span> (size &gt; <span style="color: #800080;">0</span><span style="color: #000000;">)
                                {
                                    streamWriter.Write(data, </span><span style="color: #800080;">0</span><span style="color: #000000;">, size);
                                }
                                </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
                                {
                                    </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}</span></pre>
</div>]]></description></item><item><title>.NET连接池的配置 【转】</title><link>http://www.cnblogs.com/eastson/archive/2015/10/14/4877039.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 14 Oct 2015 03:49:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/10/14/4877039.html</guid><description><![CDATA[<p>ADO.Net 在数据库操作过程中默认打开了连接池，不需要再进行手工配置。这个特性可以使数据库操作时效率提高，但也要有相应的代码配合,才能真正提高程序效率。</p>
<p>1、连接字符串</p>
<p>&nbsp;&nbsp;&nbsp; ADO.Net 中的连接池大小可以通过数据库连接字符串来控制，例如：</p>
<p>&nbsp;&nbsp;&nbsp; string cs =</p>
<p>&nbsp;&nbsp;&nbsp; "server=.;uid=sa;pwd=tcaccp;database=pubs;pooling=true;min pool size=5;max pool size=10"</p>
<p>&nbsp;&nbsp;&nbsp; 其中 pooling 表示是否打开连接池，默认为打开，关掉时需要 pooling = false；</p>
<p>&nbsp;&nbsp;&nbsp; min pool size 表示连接池最少保存几个连接对象；</p>
<p>&nbsp;&nbsp;&nbsp; max pool size 表示连接池最多保存几个连接对象。(最大值不能为 0，也不能小于最小值)</p>
<p>&nbsp;&nbsp;&nbsp; 配置好以后，通过 SqlConnection con = new SqlConnection(cs); 即可得到一个属于连接池的连接对象。</p>
<p>&nbsp;&nbsp;&nbsp; 但一定要注意，连接字符串的任何改动，系统都会认为是另一个完全不同的数据库连接，将会创建新的连接池，这必然会造成更大的系统开销。所以，为了保证某些连接对象属于一个连接池，连接字符串不能有任何变化，包括大小写，包括空格，都不能有任何变化。&nbsp;&nbsp;&nbsp;</p>
<p>2、程序中的改动</p>
<p>&nbsp;&nbsp;&nbsp; 普通的数据库操作：</p>
<p>&nbsp;&nbsp;&nbsp; SqlConnection con = new SqlConnection(cs);</p>
<p>&nbsp;&nbsp;&nbsp; try</p>
<p>&nbsp;&nbsp;&nbsp; {</p>
<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; con.Open();</p>
<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; //进行各种数据库操作</p>
<p>&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp; catch(Exception ex){ Console.WriteLine(ex.Message); }</p>
<p>&nbsp;&nbsp;&nbsp; finally</p>
<p>&nbsp;&nbsp;&nbsp; {</p>
<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; con.Close();</p>
<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; con.Dispose();</p>
<p>&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp; 这个过程很繁琐，每次都要在操作完毕后保证连接对象的关闭和资源释放。在打开连接池特性以后，finally 中的内容，其实是将连接对象的状态置为关闭，然后放回到连接池中。既然系统知道要放回连接池，那有没有什么更好的方法呢？</p>
<p>&nbsp;&nbsp;&nbsp; using(SqlConnection con = new SqlConnection(cs))</p>
<p>&nbsp;&nbsp;&nbsp; {</p>
<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; try</p>
<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; {</p>
<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; con.Open();</p>
<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; // Do Something......</p>
<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; catch(Exception ex){ Console.WriteLine(ex.Message); }<br />&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp; .Net 中的 using 语句，不光能导入命名空间，还能在程序体内，局部使用某个对象。像上边代码，con 
的作用域只有 using 对应的大括弧这么大。更神奇的是，using 可以在对象作用域结束时，自动调用 
con.Dispose()将对象释放，所以以上代码中，没有 con.Close() 和 con.Dispose()，同样可以释放资源，放回连接池，省了 
finally 和手工关闭的麻烦。但同时需要注意，using 既然是在结束作用域时是自动调用对象的 Dispose()方法，那就是说不是什么类型的对象都可以用 
using 的方式自动释放，必须要实现 IDispose 接口。</p>
<p>3、监控连接池的状态</p>
<p>&nbsp;&nbsp;&nbsp; 连接池在工作状态下，是完全由系统来进行控制的，那如何监控连接池中连接对象的信息呢？</p>
<p>&nbsp;&nbsp;&nbsp; 从两方面入手：数据库服务器 和 数据库驱动程序。</p>
<p>&nbsp;&nbsp;&nbsp; 数据库服务器是连接对象的目的地，通过服务器状态的查询，就能够看到连接池对服务器的访问信息。拿 SQL Server 
2005 为例，执行 sp_who 或者 sp_who2 两个系统存储过程，就可以看到所有访问数据库的连接的列表。比如 min pool size 设置为 
5，表示连接池中至少要维护 5 个数据库对象，程序启动以后，执行 exec sp_who2 就可以发现，数据库中有 5 
个对应数据库名的连接，如果没有操作，其状态就会处于 sleeping 状态。</p>
<p>&nbsp;&nbsp;&nbsp; 另一方面，程序的数据库操作都需要有数据库驱动程序，既然 ADO.Net 
中能够自动管理连接池，那驱动程序肯定起着相当重要的作用。对驱动程序进行监控，靠得是 Windows 系统中的&ldquo;性能计数器&rdquo;功能。</p>
<p>&nbsp;&nbsp;&nbsp; 
在我的电脑(右键)--&gt;管理--&gt;系统工具--&gt;性能日志和警报--&gt;计数器日志上点击右键，新建日志设置，随便起名 
abc，出现设置对话框，&ldquo;添加对象&rdquo;，下拉列表中选 &ldquo;.NET Data Provider for SqlServer&rdquo;，添加，关闭。</p>
<p>&nbsp;&nbsp;&nbsp; 下边是数据采样间隔，比如 1 
秒采集一次。切换到&ldquo;日志文件&rdquo;选项卡，将日志文件类型设置为&ldquo;文本文件（逗号分隔）&rdquo;，日志就会默认记录在&ldquo;C:\PerfLogs\abc_000001.csv&rdquo;里，点确定关闭窗体。</p>
<p>&nbsp;&nbsp;&nbsp; 回到&ldquo;计数器日志&rdquo;窗口，保证刚刚设置的 abc 处于绿色运行状态，如果是红色，可以点中 abc 
，然后在工具栏中点播放按钮（黑色的三角）让其启动。</p>
<p>&nbsp;&nbsp;&nbsp; 
设置好后，就可以让程序运行，其数据库连接池状态，连接对象数量，就会在&ldquo;C:\PerfLogs\abc_000001.csv&rdquo;里记录，需要查看时直接双击，用 
Excel 打开即可。打开的文件，左侧是记录时间，上方有我们关心的：</p>
<p>&nbsp;&nbsp;&nbsp; NumberOfPooledConnections ：放入池中的连接对象数</p>
<p>&nbsp;&nbsp;&nbsp; NumberOfActiveConnectionPoolGroups ：活动的连接池组的数量</p>
<p>&nbsp;&nbsp;&nbsp; NumberOfInactiveConnectionPoolGroups ：不活动的连接池组的数量</p>
<p>&nbsp;&nbsp;&nbsp; NumberOfActiveConnectionPools ：活动的连接池数量</p>
<p>&nbsp;&nbsp;&nbsp; NumberOfInactiveConnectionPools ：不活动的连接池数量</p>
<p>&nbsp;&nbsp;&nbsp; 根据这些日志数据，我们就可以在程序运行时监控连接池状态，并根据这些数据，来调整连接池的相关设置。</p>
<p>&nbsp;</p>
<p>原文地址：<a href="http://www.cnblogs.com/jxnclyk/archive/2010/04/27/1722007.html" target="_blank">http://www.cnblogs.com/jxnclyk/archive/2010/04/27/1722007.html</a></p>]]></description></item><item><title>如何在组件(Component中)模拟用户控件(UserControl)中FindForm()？</title><link>http://www.cnblogs.com/eastson/archive/2015/10/08/4861641.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 08 Oct 2015 09:31:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/10/08/4861641.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #0000ff;">using</span><span style="color: #000000;"> System;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Collections.Generic;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.ComponentModel;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.ComponentModel.Design;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Windows.Forms;

</span><span style="color: #0000ff;">namespace</span><span style="color: #000000;"> Samples
{
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">partial</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> Controller : Component
    {
        </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> Controller()
        {
            InitializeComponent();
        }

        </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> Controller(IContainer container)
        {
            container.Add(</span><span style="color: #0000ff;">this</span><span style="color: #000000;">);

            InitializeComponent();
        }

        [Browsable(</span><span style="color: #0000ff;">false</span><span style="color: #000000;">)]
        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">virtual</span><span style="color: #000000;"> Form OwnerForm
        {
            </span><span style="color: #0000ff;">get</span> { <span style="color: #0000ff;">return</span><span style="color: #000000;"> _ownerForm; }
            </span><span style="color: #0000ff;">set</span> { _ownerForm =<span style="color: #000000;"> value; }
        }
        Form _ownerForm </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;

        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">override</span><span style="color: #000000;"> ISite Site
        {
            </span><span style="color: #0000ff;">get</span> { <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">base</span><span style="color: #000000;">.Site; }
            </span><span style="color: #0000ff;">set</span><span style="color: #000000;">
            {
                </span><span style="color: #0000ff;">base</span>.Site =<span style="color: #000000;"> value;
                </span><span style="color: #0000ff;">this</span>.OwnerForm =<span style="color: #000000;"> FindForm();
            }
        }

        Form FindForm()
        {
             IReferenceService referenceService </span>= (IReferenceService)GetService(<span style="color: #0000ff;">typeof</span><span style="color: #000000;">(IReferenceService));
             </span><span style="color: #0000ff;">if</span> (referenceService != <span style="color: #0000ff;">null</span><span style="color: #000000;">)
             {
                 </span><span style="color: #008000;">//</span><span style="color: #008000;"> 取得组件所在的窗体对象</span>
                 <span style="color: #0000ff;">object</span>[] parent = referenceService.GetReferences(<span style="color: #0000ff;">typeof</span><span style="color: #000000;">(Form));
                 Form form </span>= parent[<span style="color: #800080;">0</span>] <span style="color: #0000ff;">as</span><span style="color: #000000;"> Form;
                 </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> form;
             }

             </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">null</span><span style="color: #000000;">;
        }
    }
}</span></pre>
</div>]]></description></item><item><title>xxx</title><link>http://www.cnblogs.com/eastson/archive/2015/08/28/4768042.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Aug 2015 14:23:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/08/28/4768042.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> getList() 
    </span><span style="color: #800080;">$params</span> = <span style="color: #800080;">$this</span>-&gt;_listParams(<span style="color: #0000ff;">array</span><span style="color: #000000;">(
        </span>'order_id' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
            </span>'field' =&gt; 'c.order_id',
            'order' =&gt; 'c.order_id',
            'where' =&gt; 'c.order_id = {0}'<span style="color: #000000;">
        )</span>,
        'order_status' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
            </span>'where' =&gt; 'c.order_id = {0}'<span style="color: #000000;">
        )</span>,
        'order_amt' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
            </span>'where' =&gt; 'c.order_id = {0}'<span style="color: #000000;">
        )</span>,<span style="color: #000000;">
    )</span>, 'order_id', 'ASC', 15, 'index'<span style="color: #000000;">);
    
    </span><span style="color: #800080;">$order_total</span> = <span style="color: #800080;">$this</span>-&gt;model_sale_order-&gt;getTotalOrders(<span style="color: #800080;">$params</span>['query'<span style="color: #000000;">]);
}

</span><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">function</span> _listParams(<span style="color: #0000ff;">Array</span> <span style="color: #800080;">$array</span>, 
    <span style="color: #800080;">$sort</span> = <span style="color: #0000ff;">null</span>, <span style="color: #800080;">$order</span> = <span style="color: #0000ff;">null</span>, <span style="color: #800080;">$limit</span> = <span style="color: #0000ff;">null</span>, <span style="color: #800080;">$route</span> = 'index'<span style="color: #000000;">) {
    
    </span><span style="color: #800080;">$filter</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
    
    </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$array</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$name</span> =&gt; <span style="color: #800080;">$info</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">if</span> (is_number(<span style="color: #800080;">$name</span><span style="color: #000000;">)) {
            </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">is_string</span>(<span style="color: #800080;">$info</span><span style="color: #000000;">)) {
                </span><span style="color: #800080;">$name</span> = <span style="color: #800080;">$info</span><span style="color: #000000;">;
                </span><span style="color: #800080;">$info</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
            } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
                </span><span style="color: #0000ff;">continue</span><span style="color: #000000;">;
            }
        }        
        
        </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$info</span>['field'<span style="color: #000000;">])) {
            </span><span style="color: #800080;">$info</span>['field'] = <span style="color: #800080;">$name</span><span style="color: #000000;">;
        }
        
        </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$info</span>['order'<span style="color: #000000;">])) {
            </span><span style="color: #800080;">$info</span>['order'] = <span style="color: #800080;">$info</span>['field'<span style="color: #000000;">];
        }        
        
        </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$info</span>['where'<span style="color: #000000;">])) {
            </span><span style="color: #800080;">$info</span>['where'] = <span style="color: #800080;">$info</span>['field'] . ' = {0}'<span style="color: #000000;">;
        }
        
        </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$this</span>-&gt;request-&gt;get['filter_' . <span style="color: #800080;">$name</span><span style="color: #000000;">])) {
            </span><span style="color: #800080;">$info</span>['value'] = <span style="color: #800080;">$this</span>-&gt;request-&gt;get['filter_' . <span style="color: #800080;">$name</span><span style="color: #000000;">]];
        } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
            </span><span style="color: #800080;">$info</span>['value'] = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
        }
        
        </span><span style="color: #800080;">$filter</span>[<span style="color: #800080;">$name</span>] = <span style="color: #800080;">$info</span><span style="color: #000000;">;
    }
    
    </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$this</span>-&gt;request-&gt;get['sort'<span style="color: #000000;">])) {
        </span><span style="color: #800080;">$sort</span> = <span style="color: #800080;">$this</span>-&gt;request-&gt;get['sort'<span style="color: #000000;">];
    } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$sort</span> == <span style="color: #0000ff;">null</span> &amp;&amp; <span style="color: #008080;">count</span>(<span style="color: #800080;">$filter</span>) &gt; 0<span style="color: #000000;">) {
        </span><span style="color: #800080;">$sort</span> = <span style="color: #008080;">array_keys</span>(<span style="color: #800080;">$filter</span>)[0<span style="color: #000000;">];
    }

    </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$this</span>-&gt;request-&gt;get['order'<span style="color: #000000;">])) {
        </span><span style="color: #800080;">$order</span> = <span style="color: #800080;">$this</span>-&gt;request-&gt;get['order'<span style="color: #000000;">];
    } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$order</span> == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        </span><span style="color: #800080;">$order</span> = 'ASC'<span style="color: #000000;">;
    }

    </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$this</span>-&gt;request-&gt;get['page'<span style="color: #000000;">])) {
        </span><span style="color: #800080;">$page</span> = <span style="color: #800080;">$this</span>-&gt;request-&gt;get['page'<span style="color: #000000;">];
    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        </span><span style="color: #800080;">$page</span> = 1<span style="color: #000000;">;
    }
    
    </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$this</span>-&gt;request-&gt;get['limit'<span style="color: #000000;">])) {
        </span><span style="color: #800080;">$limit</span> = <span style="color: #800080;">$this</span>-&gt;request-&gt;get['limit'<span style="color: #000000;">];
    </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$limit</span> == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        </span><span style="color: #800080;">$limit</span> = <span style="color: #800080;">$this</span>-&gt;config-&gt;get('config_admin_limit'<span style="color: #000000;">);
    }
    
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$route</span> != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">foreach</span> (<span style="color: #008080;">array_keys</span>(<span style="color: #800080;">$filter</span>) <span style="color: #0000ff;">as</span> <span style="color: #800080;">$name</span><span style="color: #000000;">) {
            </span><span style="color: #800080;">$filter</span>[<span style="color: #800080;">$name</span>]['link] = $this-&gt;_actionLink($route, $name, 'asc'<span style="color: #000000;">);
        }
    }
    
    $query = array(
        </span>'<span style="color: #008080;">sort</span>'<span style="color: #000000;">        =&gt; $sort,
        </span>'order'<span style="color: #000000;">     =&gt; $order,
        </span>'start'<span style="color: #000000;">     =&gt; ($page - 1) * $limit,
        </span>'limit'<span style="color: #000000;">        =&gt; $limit
    );
    
    foreach ($filter as $name =&gt; $info) {
        $query[</span>'filter_' . $name] = $info['<span style="color: #000000;">value];
    }
        
    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">array</span><span style="color: #000000;">(
        </span>'sort'        =&gt; <span style="color: #800080;">$sort</span>,
        'order'        = &gt; <span style="color: #800080;">$order</span>,
        'page'         =&gt; <span style="color: #800080;">$page</span>,
        'limit'     =&gt; <span style="color: #800080;">$limit</span>,
        'filter'     =&gt; <span style="color: #800080;">$filter</span>,
        'query'     =&gt; <span style="color: #800080;">$query</span><span style="color: #000000;">
    );
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>PHP中$_FILES的使用及注意事项</title><link>http://www.cnblogs.com/eastson/archive/2015/08/08/4712677.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 08 Aug 2015 02:30:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/08/08/4712677.html</guid><description><![CDATA[<p>$_FILES: 经由 HTTP POST 文件上传而提交至脚本的变量。类似于旧数组 $HTTP_POST_FILES 数组（依然有效，但反对使用）。<br />$_FILES数组内容如下:<br />&nbsp;$_FILES['myFile']['name'] &nbsp; &nbsp;客户端文件的原名称。<br />&nbsp;$_FILES['myFile']['type'] &nbsp; &nbsp; 文件的 MIME 类型，需要浏览器提供该信息的支持，例如"image/gif"。<br />&nbsp;$_FILES['myFile']['size'] &nbsp; &nbsp; &nbsp;已上传文件的大小，单位为字节。<br />&nbsp;$_FILES['myFile']['tmp_name']&nbsp;&nbsp;&nbsp;文件被上传后在服务端储存的临时文件名，一般是系统默认。可以在php.ini的upload_tmp_dir 指定，但用 putenv() 函数设置是不起作用的。<br />&nbsp;$_FILES['myFile']['error'] &nbsp; 该文件上传相关的错误代码。['error'] 是在 PHP 4.2.0 版本中增加的。下面是它的说明：(它们在PHP3.0以后成了常量)<br />&nbsp;&nbsp;UPLOAD_ERR_OK &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;值：0; 没有错误发生，文件上传成功。<br />&nbsp;&nbsp;UPLOAD_ERR_INI_SIZE &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;值：1; 上传的文件超过了 php.ini 中 upload_max_filesize 选项限制的值。<br />&nbsp;&nbsp;UPLOAD_ERR_FORM_SIZE &nbsp; &nbsp; 值：2; 上传文件的大小超过了 HTML 表单中 MAX_FILE_SIZE 选项指定的值。<br />&nbsp;&nbsp;UPLOAD_ERR_PARTIAL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;值：3; 文件只有部分被上传。<br />&nbsp;&nbsp;UPLOAD_ERR_NO_FILE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;值：4; 没有文件被上传。&nbsp;&nbsp;&nbsp;&nbsp;值：5; 上传文件大小为0.<br />&nbsp;<br />注:<br />1. 文件被上传结束后，默认地被存储在了临时目录中，这时必须将它从临时目录中删除或移动到其它地方，如果没有，则会被删除。也就是不管是否上传成功，脚本执行完后临时目录里的文件肯定会被删除。所以在删除之前要用PHP的 copy() 函数将它复制到其它位置，此时，才算完成了上传文件过程。<br />2. 在 PHP 4.1.0 版本以前该数组的名称为 $HTTP_POST_FILES，它并不像 $_FILES 一样是自动全局变量。PHP 3 不支持 $HTTP_POST_FILES 数组。<br />3. 用form上传文件时，一定要加上属性内容 enctype="multipart/form-data"，否则用$_FILES[filename]获取文件信息时会报异常。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form </span><span style="color: #ff0000;">enctype</span><span style="color: #0000ff;">="multipart/form-data"</span><span style="color: #ff0000;"> action</span><span style="color: #0000ff;">="URL"</span><span style="color: #ff0000;"> method</span><span style="color: #0000ff;">="post"</span><span style="color: #0000ff;">&gt;</span>
 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="myFile"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="file"</span><span style="color: #0000ff;">&gt;</span>
 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="submit"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="上传文件"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">form</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>上传一个$_FILES的截图，供参考：<br /><img src="http://images0.cnblogs.com/blog2015/111826/201508/081045020029940.png" alt="" /><br />&nbsp;</p>]]></description></item><item><title>用JSON方式回调服务器</title><link>http://www.cnblogs.com/eastson/archive/2015/08/08/4712527.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 08 Aug 2015 01:06:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/08/08/4712527.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">script </span><span style="color: #ff0000;">language</span><span style="color: #0000ff;">="javascript"</span><span style="color: #0000ff;">&gt;</span><span style="background-color: #f5f5f5; color: #000000;">
$(</span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;">(){
    $.getJSON(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">http://xxx/system/ecmall_install.php?update=xxx</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">,</span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;">(){});
    $.getJSON(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">http://xxx/system/notice2.php?charset=sc-utf-8</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">,</span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;">(data){
        </span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> message</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;">''</span><span style="background-color: #f5f5f5; color: #000000;">;
        $.each(data,</span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;">(i){
            message </span><span style="background-color: #f5f5f5; color: #000000;">+=</span> <span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">&lt;li&gt;</span><span style="background-color: #f5f5f5; color: #000000;">'</span> <span style="background-color: #f5f5f5; color: #000000;">+</span><span style="background-color: #f5f5f5; color: #000000;"> data[i] </span><span style="background-color: #f5f5f5; color: #000000;">+</span> <span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">&lt;/li&gt;</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">;
        });
        $(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">#news</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">).html(message);
    });
});
</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dt</span><span style="color: #0000ff;">&gt;</span>ECMall 动态<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dt</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dd</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">ul </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="news"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">ul</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dd</span><span style="color: #0000ff;">&gt;</span></pre>
</div>]]></description></item><item><title>ecmall数据字典</title><link>http://www.cnblogs.com/eastson/archive/2015/08/06/4707583.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 06 Aug 2015 03:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/08/06/4707583.html</guid><description><![CDATA[<p>ecm_acategory //文章分类表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>cate_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>自增ID号,分类ID号</p>
</td>
</tr>
<tr>
<td>
<p>cate_name</p>
</td>
<td>
<p>varchar(100)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>分类的名称</p>
</td>
</tr>
<tr>
<td>
<p>parent_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>分类的父级ID</p>
</td>
</tr>
<tr>
<td>
<p>sort_order</p>
</td>
<td>
<p>Tinyint(3)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>分类排序数字标识</p>
</td>
</tr>
<tr>
<td>
<p>code</p>
</td>
<td>
<p>varchar(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>分类的代码标识</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_address //用户地址表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>addr_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>自增ID号</p>
</td>
</tr>
<tr>
<td>
<p>user_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>用户ID</p>
</td>
</tr>
<tr>
<td>
<p>consignee</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>收货人姓名</p>
</td>
</tr>
<tr>
<td>
<p>region_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>收货地区编号</p>
</td>
</tr>
<tr>
<td>
<p>region_name</p>
</td>
<td>
<p>varchar(255)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>收货地区名</p>
</td>
</tr>
<tr>
<td>
<p>address</p>
</td>
<td>
<p>varcha(255)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>收货地址</p>
</td>
</tr>
<tr>
<td>
<p>zipcode</p>
</td>
<td>
<p>varchar(20)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>邮政编码</p>
</td>
</tr>
<tr>
<td>
<p>phone_tel</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>固话</p>
</td>
</tr>
<tr>
<td>
<p>phone_mob</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>移动电话</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_article //文章表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>article_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>文章自增id</p>
</td>
</tr>
<tr>
<td>
<p>code</p>
</td>
<td>
<p>varchar(20)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>文章分类编码</p>
</td>
</tr>
<tr>
<td>
<p>title</p>
</td>
<td>
<p>varchar(100)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>文章标题</p>
</td>
</tr>
<tr>
<td>
<p>cate_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>广告高度</p>
</td>
</tr>
<tr>
<td>
<p>store_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>商铺ID</p>
</td>
</tr>
<tr>
<td>
<p>link</p>
</td>
<td>
<p>varchar(255)</p>
</td>
<td>
<p>是</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>外部链接地址</p>
</td>
</tr>
<tr>
<td>
<p>content</p>
</td>
<td>
<p>text</p>
</td>
<td>
<p>是</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>文章内容</p>
</td>
</tr>
<tr>
<td>
<p>sort_order</p>
</td>
<td>
<p>tinyint(3)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>排序的数字编号</p>
</td>
</tr>
<tr>
<td>
<p>If_show</p>
</td>
<td>
<p>tinyint(3)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>是否显示</p>
</td>
</tr>
<tr>
<td>
<p>add_time</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>是</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>文章添加时间戳</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>ecm_attribute //属性表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>attr_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>属性自增id</p>
</td>
</tr>
<tr>
<td>
<p>attr_name</p>
</td>
<td>
<p>varchar(20)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>属性名称</p>
</td>
</tr>
<tr>
<td>
<p>input_mode</p>
</td>
<td>
<p>varchar(100)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>模式</p>
</td>
</tr>
<tr>
<td>
<p>def_value</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>缺省值</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_brand //品牌表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>brand_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>品牌自增id</p>
</td>
</tr>
<tr>
<td>
<p>brand_name</p>
</td>
<td>
<p>varchar(20)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>品牌名称</p>
</td>
</tr>
<tr>
<td>
<p>brand_logo</p>
</td>
<td>
<p>varchar(100)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>品牌的LOGO</p>
</td>
</tr>
<tr>
<td>
<p>Sort_order</p>
</td>
<td>
<p>tinyint(3)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>品牌排序</p>
</td>
</tr>
<tr>
<td>
<p>recommended</p>
</td>
<td>
<p>tinyint(3)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>是否推荐</p>
</td>
</tr>
<tr>
<td>
<p>store_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>是</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>商铺ID(标识哪个商铺拥有此品牌)</p>
</td>
</tr>
<tr>
<td>
<p>If_show</p>
</td>
<td>
<p>tinyint(2)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>是否显示</p>
</td>
</tr>
<tr>
<td>
<p>tag</p>
</td>
<td>
<p>varchar(100)</p>
</td>
<td>
<p>是</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>品牌标签</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_cart //&nbsp;购物车表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>rec_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>订单ID</p>
</td>
</tr>
<tr>
<td>
<p>User_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>用户ID</p>
</td>
</tr>
<tr>
<td>
<p>Session_id</p>
</td>
<td>
<p>varchar(32)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>Session的ID</p>
</td>
</tr>
<tr>
<td>
<p>Store_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>店铺ID(标识哪个商铺的订单)</p>
</td>
</tr>
<tr>
<td>
<p>Goods_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>商品ID</p>
</td>
</tr>
<tr>
<td>
<p>Goods_name</p>
</td>
<td>
<p>Varchar(255)</p>
</td>
<td>
<p>是</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>商品名</p>
</td>
</tr>
<tr>
<td>
<p>Spec_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
</tr>
<tr>
<td>
<p>specification</p>
</td>
<td>
<p>varchar(255)</p>
</td>
<td>
<p>是</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>详细说明</p>
</td>
</tr>
<tr>
<td>
<p>price</p>
</td>
<td>
<p>Decimal(10,2)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>价格</p>
</td>
</tr>
<tr>
<td>
<p>quantity</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>数量</p>
</td>
</tr>
<tr>
<td>
<p>Goods_image</p>
</td>
<td>
<p>Varchar(255)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>商品图片地址</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_category_goods//&nbsp;商品分类中间表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Cate_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>分类ID</p>
</td>
</tr>
<tr>
<td>
<p>goods_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>商品ID</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_category_store//&nbsp;商铺分类中间表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Cate_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>分类ID</p>
</td>
</tr>
<tr>
<td>
<p>store_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>商铺ID</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_collect//&nbsp;会员收藏表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>user_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>会员ID号</p>
</td>
</tr>
<tr>
<td>
<p>type</p>
</td>
<td>
<p>varchar(100)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>类型(标识是商品收藏还是店铺收藏)</p>
</td>
</tr>
<tr>
<td>
<p>Item_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>收藏的ID</p>
</td>
</tr>
<tr>
<td>
<p>keyword</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>描述的关键字</p>
</td>
</tr>
<tr>
<td>
<p>add_time</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>添加收藏的时间戳记</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_coupon//&nbsp;优惠券表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>coupon_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>优惠券自增ID</p>
</td>
</tr>
<tr>
<td>
<p>Store_id</p>
</td>
<td>
<p>varchar(100)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>优惠券的店铺号</p>
</td>
</tr>
<tr>
<td>
<p>Coupon_name</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>优惠券名</p>
</td>
</tr>
<tr>
<td>
<p>Coupon_value</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>优惠券内容</p>
</td>
</tr>
<tr>
<td>
<p>Use_times</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>使用时间戳记</p>
</td>
</tr>
<tr>
<td>
<p>Start_time</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>开始时间戳记</p>
</td>
</tr>
<tr>
<td>
<p>End_time</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>结束时间戳记</p>
</td>
</tr>
<tr>
<td>
<p>Min_amount</p>
</td>
<td>
<p>Decimal(10,2)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>最小使用金额</p>
</td>
</tr>
<tr>
<td>
<p>If_issue</p>
</td>
<td>
<p>Tinyint(3)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>是否可用</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_coupon_sn//&nbsp;优惠券号表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Coupon_sn</p>
</td>
<td>
<p>varchar(20)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>优惠券号码</p>
</td>
</tr>
<tr>
<td>
<p>Coupon_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>优惠券ID</p>
</td>
</tr>
<tr>
<td>
<p>Remain_times</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>优惠券有效期</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>ecm_friend//&nbsp;好友表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Owner_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>加入者</p>
</td>
</tr>
<tr>
<td>
<p>friend_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>被加入者</p>
</td>
</tr>
<tr>
<td>
<p>add_time</p>
</td>
<td>
<p>varcha(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>加入好友的时间戳</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;&nbsp;</p>
<p>ecm_function//&nbsp;功能模块表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Func_code</p>
</td>
<td>
<p>varchar(20)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;功能标识代码</p>
</td>
</tr>
<tr>
<td>
<p>func_name</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;功能模块名</p>
</td>
</tr>
<tr>
<td>
<p>privileges</p>
</td>
<td>
<p>varchar(255)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>&nbsp;功能模块权限</p>
</td>
</tr>
</tbody>
</table>
<p>ecm_gcategory//&nbsp;商品分类表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Cate_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;分类自增ID</p>
</td>
</tr>
<tr>
<td>
<p>Store_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>&nbsp;商家ID</p>
</td>
</tr>
<tr>
<td>
<p>Cate_name</p>
</td>
<td>
<p>varchar(100)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;分类名称</p>
</td>
</tr>
<tr>
<td>
<p>Parent_id</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>分类父级ID</p>
</td>
</tr>
<tr>
<td>
<p>Sort_order</p>
</td>
<td>
<p>Tinyint(3)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>255</p>
</td>
<td>
<p>排序号</p>
</td>
</tr>
<tr>
<td>
<p>If_show</p>
</td>
<td>
<p>Tinyint(3)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>1</p>
</td>
<td>
<p>是否显示（1显示，0不显示）</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_goods//&nbsp;商品表【important】</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Goods_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>商品ID</p>
</td>
</tr>
<tr>
<td>
<p>Store_id</p>
</td>
<td>
<p>int(100)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>店铺ID</p>
</td>
</tr>
<tr>
<td>
<p>type</p>
</td>
<td>
<p>varchar(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>商品类型</p>
</td>
</tr>
<tr>
<td>
<p>Goods_name</p>
</td>
<td>
<p>Varchar(255)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>商品名</p>
</td>
</tr>
<tr>
<td>
<p>description</p>
</td>
<td>
<p>text</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>商品描述</p>
</td>
</tr>
<tr>
<td>
<p>Cate_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>商品所属分类ID</p>
</td>
</tr>
<tr>
<td>
<p>Cate_name</p>
</td>
<td>
<p>Varchar(255)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>商品分类名</p>
</td>
</tr>
<tr>
<td>
<p>Brand</p>
</td>
<td>
<p>varchar(100)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>商品品牌名</p>
</td>
</tr>
<tr>
<td>
<p>Spec_qty</p>
</td>
<td>
<p>Tinyint(4)</p>
</td>
<td>
<p>是</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>属性的数量数目</p>
</td>
</tr>
<tr>
<td>
<p>Spe_name_1</p>
</td>
<td>
<p>Varchar(60)</p>
</td>
<td>
<p>是</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>第一属性名（比如颜色）</p>
</td>
</tr>
<tr>
<td>
<p>Spe_name_2</p>
</td>
<td>
<p>Varchar(60)</p>
</td>
<td>
<p>是</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>第二属性名（比如尺码）</p>
</td>
</tr>
<tr>
<td>
<p>If_show</p>
</td>
<td>
<p>Tinyint(3)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>1</p>
</td>
<td>
<p>是否显示（默认为1显示）</p>
</td>
</tr>
<tr>
<td>
<p>closed</p>
</td>
<td>
<p>Tinyint(3)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>是否处于关闭状态（默认为0不关闭）</p>
</td>
</tr>
<tr>
<td>
<p>Close_reason</p>
</td>
<td>
<p>Varchar(255)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>状态关闭原因</p>
</td>
</tr>
<tr>
<td>
<p>Add_time</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>添加时间戳</p>
</td>
</tr>
<tr>
<td>
<p>Last_update</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>最新修改时间戳</p>
</td>
</tr>
<tr>
<td>
<p>Default_spec</p>
</td>
<td>
<p>Int(11)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>默认属性ID</p>
</td>
</tr>
<tr>
<td>
<p>Default_image</p>
</td>
<td>
<p>Varchar(255)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>默认商品图片地址</p>
</td>
</tr>
<tr>
<td>
<p>recommended</p>
</td>
<td>
<p>Tinyint(4)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>是否推荐</p>
</td>
</tr>
<tr>
<td>
<p>Cate_id_1</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>该商品第一级分类ID</p>
</td>
</tr>
<tr>
<td>
<p>Cate_id_2</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>该商品第二级分类ID</p>
</td>
</tr>
<tr>
<td>
<p>Cate_id_3</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>该商品第三级分类ID</p>
</td>
</tr>
<tr>
<td>
<p>Cate_id_4</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>该商品第四级分类ID</p>
</td>
</tr>
<tr>
<td>
<p>price</p>
</td>
<td>
<p>Decimal(10,2)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>商品价格</p>
</td>
</tr>
<tr>
<td>
<p>tag</p>
</td>
<td>
<p>Varchar(102)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>检索标签</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_goods_attr//&nbsp;商品属性表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Gattr_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;商品属性自增ID</p>
</td>
</tr>
<tr>
<td>
<p>Goods_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>商品ID</p>
</td>
</tr>
<tr>
<td>
<p>Attr_name</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;属性名称</p>
</td>
</tr>
<tr>
<td>
<p>Attr_value</p>
</td>
<td>
<p>varchar(255)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>&nbsp;属性值</p>
</td>
</tr>
<tr>
<td>
<p>Attr_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>255</p>
</td>
<td>
<p>属性ID</p>
</td>
</tr>
<tr>
<td>
<p>Sort_order</p>
</td>
<td>
<p>Tinyint(3)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>排序号</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_goods_image//&nbsp;商品图片表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Image_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;图片自增ID</p>
</td>
</tr>
<tr>
<td>
<p>Goods_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>商品ID</p>
</td>
</tr>
<tr>
<td>
<p>Image_url</p>
</td>
<td>
<p>varchar(255)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;图片地址</p>
</td>
</tr>
<tr>
<td>
<p>Thumbnail</p>
</td>
<td>
<p>varchar(255)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>&nbsp;缩略图地址</p>
</td>
</tr>
<tr>
<td>
<p>Sort_order</p>
</td>
<td>
<p>tinyint(4)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>255</p>
</td>
<td>
<p>排序号</p>
</td>
</tr>
<tr>
<td>
<p>File_id</p>
</td>
<td>
<p>int(11)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>文件ID</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_goods_qa//&nbsp;商品咨询表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Ques_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;图片自增ID</p>
</td>
</tr>
<tr>
<td>
<p>Question_content</p>
</td>
<td>
<p>varchar(255)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>商品ID</p>
</td>
</tr>
<tr>
<td>
<p>user_id</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;图片地址</p>
</td>
</tr>
<tr>
<td>
<p>&nbsp;Store_id</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>&nbsp;缩略图地址</p>
</td>
</tr>
<tr>
<td>
<p>Email</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>电子邮件</p>
</td>
</tr>
<tr>
<td>
<p>Item_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>咨询类型ID</p>
</td>
</tr>
<tr>
<td>
<p>Item_name</p>
</td>
<td>
<p>Varchar(255)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>咨询类型名</p>
</td>
</tr>
<tr>
<td>
<p>Reply_content</p>
</td>
<td>
<p>Varchar(255)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>回复内容</p>
</td>
</tr>
<tr>
<td>
<p>Time_post</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>提交时间</p>
</td>
</tr>
<tr>
<td>
<p>Time_reply</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>回复时间</p>
</td>
</tr>
<tr>
<td>
<p>If_new</p>
</td>
<td>
<p>Tinyint(3)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>是否已读</p>
</td>
</tr>
<tr>
<td>
<p>type</p>
</td>
<td>
<p>Varchar(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>类型</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_goods_spec //&nbsp;商品规格表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Spec_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;规格自增ID</p>
</td>
</tr>
<tr>
<td>
<p>Goods_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>商品ID</p>
</td>
</tr>
<tr>
<td>
<p>Spec_1</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;规格第一名称</p>
</td>
</tr>
<tr>
<td>
<p>Spec_2</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>&nbsp;规格第二名称</p>
</td>
</tr>
<tr>
<td>
<p>Color_rgb</p>
</td>
<td>
<p>varchar(7)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>255</p>
</td>
<td>
<p>颜色RGB值</p>
</td>
</tr>
<tr>
<td>
<p>Price</p>
</td>
<td>
<p>decimal(10,2)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>价格</p>
</td>
</tr>
<tr>
<td>
<p>Stock</p>
</td>
<td>
<p>Int(11)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>库存数量</p>
</td>
</tr>
<tr>
<td>
<p>sku</p>
</td>
<td>
<p>Varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>库存号</p>
</td>
</tr>
</tbody>
</table>
<p>ecm_goods_statistics //&nbsp;商品信息统计表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Goods_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;商品自增ID</p>
</td>
</tr>
<tr>
<td>
<p>Views</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>商品被浏览次数</p>
</td>
</tr>
<tr>
<td>
<p>Collects</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;商品被收藏次数</p>
</td>
</tr>
<tr>
<td>
<p>Carts</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>&nbsp;添加到购物车次数</p>
</td>
</tr>
<tr>
<td>
<p>Orders</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>255</p>
</td>
<td>
<p>添加到订单次数</p>
</td>
</tr>
<tr>
<td>
<p>Sales</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>被售出的次数</p>
</td>
</tr>
<tr>
<td>
<p>comments</p>
</td>
<td>
<p>Int(11)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>被评论的次数</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_groupbuy //&nbsp;&nbsp;商品团购活动表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Group_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;团购自增ID</p>
</td>
</tr>
<tr>
<td>
<p>Group_name</p>
</td>
<td>
<p>varchar(255)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>团购名</p>
</td>
</tr>
<tr>
<td>
<p>Group_desc</p>
</td>
<td>
<p>varchar(255)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;团购简介</p>
</td>
</tr>
<tr>
<td>
<p>Start_time</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>&nbsp;团购开始时间</p>
</td>
</tr>
<tr>
<td>
<p>end_time</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>255</p>
</td>
<td>
<p>团购结束时间</p>
</td>
</tr>
<tr>
<td>
<p>Goods_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>团购商品ID</p>
</td>
</tr>
<tr>
<td>
<p>Store_id</p>
</td>
<td>
<p>Int(11)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>团购商家ID</p>
</td>
</tr>
<tr>
<td>
<p>Spec_price</p>
</td>
<td>
<p>text</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>规格价格</p>
</td>
</tr>
<tr>
<td>
<p>Min_quantity</p>
</td>
<td>
<p>Smallint(5)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>完成团购期望订购件数</p>
</td>
</tr>
<tr>
<td>
<p>Max_pre_user</p>
</td>
<td>
<p>Smallint(5)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>每人限制的购买数</p>
</td>
</tr>
<tr>
<td>
<p>State</p>
</td>
<td>
<p>Tinyint(3)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>团购状态</p>
</td>
</tr>
<tr>
<td>
<p>Recommended</p>
</td>
<td>
<p>Tinyint(3)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>是否推荐团购</p>
</td>
</tr>
<tr>
<td>
<p>views</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>查看数</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_groupbuy_log//&nbsp;商品团购日志表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Group_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;团购自增ID</p>
</td>
</tr>
<tr>
<td>
<p>User_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>参与团购用户ID</p>
</td>
</tr>
<tr>
<td>
<p>User_name</p>
</td>
<td>
<p>Varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;参与团购用户名称</p>
</td>
</tr>
<tr>
<td>
<p>Quantity</p>
</td>
<td>
<p>smallint(5)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;团购商品的数量</p>
</td>
</tr>
<tr>
<td>
<p>Spec_quantity</p>
</td>
<td>
<p>Text</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>&nbsp;规格的数量</p>
</td>
</tr>
<tr>
<td>
<p>likeman</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>255</p>
</td>
<td>
<p>团购联系人</p>
</td>
</tr>
<tr>
<td>
<p>Tel</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>团购联系电话</p>
</td>
</tr>
<tr>
<td>
<p>Order_id</p>
</td>
<td>
<p>Int(11)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>订单号</p>
</td>
</tr>
<tr>
<td>
<p>Add_time</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>团购添加时间</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_mail_queue//&nbsp;邮件队列表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>queue_id</p>
</td>
<td>
<p>int(11)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;邮件自增ID</p>
</td>
</tr>
<tr>
<td>
<p>Mail_to</p>
</td>
<td>
<p>Varchar(150)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>接受方地址</p>
</td>
</tr>
<tr>
<td>
<p>Mail_encoding</p>
</td>
<td>
<p>Varchar(50)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;邮件编码格式</p>
</td>
</tr>
<tr>
<td>
<p>Mail_subject</p>
</td>
<td>
<p>varchar(255)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;邮件标题</p>
</td>
</tr>
<tr>
<td>
<p>Mail_body</p>
</td>
<td>
<p>Text</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>&nbsp;邮件正文</p>
</td>
</tr>
<tr>
<td>
<p>priority</p>
</td>
<td>
<p>tinyint(1)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>255</p>
</td>
<td>
<p>优先级</p>
</td>
</tr>
<tr>
<td>
<p>Err_num</p>
</td>
<td>
<p>tinyint(1)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>错误数</p>
</td>
</tr>
<tr>
<td>
<p>Add_time</p>
</td>
<td>
<p>Int(11)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>发送时间</p>
</td>
</tr>
<tr>
<td>
<p>Lock_expiry</p>
</td>
<td>
<p>Int(11)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;锁定</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_member//&nbsp;会员表【important】</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>User_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;会员ID</p>
</td>
</tr>
<tr>
<td>
<p>User_name</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>会员名称</p>
</td>
</tr>
<tr>
<td>
<p>email</p>
</td>
<td>
<p>Varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;会员电子邮箱</p>
</td>
</tr>
<tr>
<td>
<p>password</p>
</td>
<td>
<p>varchar(32)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;会员密码</p>
</td>
</tr>
<tr>
<td>
<p>Real_name</p>
</td>
<td>
<p>Varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>0</p>
</td>
<td>
<p>&nbsp;会员真实姓名</p>
</td>
</tr>
<tr>
<td>
<p>gender</p>
</td>
<td>
<p>tinyint(3)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>255</p>
</td>
<td>
<p>性别</p>
</td>
</tr>
<tr>
<td>
<p>Birthday</p>
</td>
<td>
<p>date</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>生日</p>
</td>
</tr>
<tr>
<td>
<p>Photo_tel</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>座机号码</p>
</td>
</tr>
<tr>
<td>
<p>Photo_mob</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>手机号码</p>
</td>
</tr>
<tr>
<td>
<p>Im_qq</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>QQ好</p>
</td>
</tr>
<tr>
<td>
<p>Im_msn</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>MSN号</p>
</td>
</tr>
<tr>
<td>
<p>Im_skype</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>SKYPE号</p>
</td>
</tr>
<tr>
<td>
<p>Im_yahoo</p>
</td>
<td>
<p>varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>YAHOO号</p>
</td>
</tr>
<tr>
<td>
<p>Im_aliww</p>
</td>
<td>
<p>Varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>ALIWW号</p>
</td>
</tr>
<tr>
<td>
<p>Reg_time</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>注册时间</p>
</td>
</tr>
<tr>
<td>
<p>Last_login</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>最后登录时间</p>
</td>
</tr>
<tr>
<td>
<p>Last_ip</p>
</td>
<td>
<p>Varchar(15)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>最后登录IP</p>
</td>
</tr>
<tr>
<td>
<p>logins</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>登录次数</p>
</td>
</tr>
<tr>
<td>
<p>ugrade</p>
</td>
<td>
<p>Tinyint(3)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>是否升级</p>
</td>
</tr>
<tr>
<td>
<p>portrait</p>
</td>
<td>
<p>Varchar(255)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>头像照片地址</p>
</td>
</tr>
<tr>
<td>
<p>Outer_id</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>外部ID</p>
</td>
</tr>
<tr>
<td>
<p>activation</p>
</td>
<td>
<p>Varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>是否激活</p>
</td>
</tr>
<tr>
<td>
<p>Feed_config</p>
</td>
<td>
<p>text</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>推送事件配置</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_message //&nbsp;站内信息表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Msg_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;站内信息自增ID</p>
</td>
</tr>
<tr>
<td>
<p>From_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>发送者ID</p>
</td>
</tr>
<tr>
<td>
<p>To_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;接受者ID</p>
</td>
</tr>
<tr>
<td>
<p>title</p>
</td>
<td>
<p>varchar(100)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;信息标题</p>
</td>
</tr>
<tr>
<td>
<p>Content</p>
</td>
<td>
<p>Text</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;信息内容</p>
</td>
</tr>
<tr>
<td>
<p>Add_time</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>信息发送时间</p>
</td>
</tr>
<tr>
<td>
<p>Last_update</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>最后更新时间</p>
</td>
</tr>
<tr>
<td>
<p>New</p>
</td>
<td>
<p>tinyint(3)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>是否已读</p>
</td>
</tr>
<tr>
<td>
<p>Parent_id</p>
</td>
<td>
<p>Int(10)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>上级关联ID</p>
</td>
</tr>
<tr>
<td>
<p>status</p>
</td>
<td>
<p>Tinyint(3)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>状态</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_module//&nbsp;调用模块表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>module_id</p>
</td>
<td>
<p>varchar(30)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;模块自增ID</p>
</td>
</tr>
<tr>
<td>
<p>Module_name</p>
</td>
<td>
<p>varchar(100)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>模块名称</p>
</td>
</tr>
<tr>
<td>
<p>Module_version</p>
</td>
<td>
<p>varchar(5)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;模块版本号</p>
</td>
</tr>
<tr>
<td>
<p>Module_desc</p>
</td>
<td>
<p>Text</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;模块内容介绍</p>
</td>
</tr>
<tr>
<td>
<p>Module_config</p>
</td>
<td>
<p>Text</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>模块设置内容</p>
</td>
</tr>
<tr>
<td>
<p>enabled</p>
</td>
<td>
<p>Tinyint(1)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>是否可用</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>ecm_navigation //&nbsp;商城导航信息表</p>
<table border="1" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td>
<p><strong>字段</strong></p>
</td>
<td>
<p><strong>类型</strong></p>
</td>
<td>
<p><strong>Null</strong></p>
</td>
<td>
<p><strong>默认</strong></p>
</td>
<td>
<p><strong>注释</strong></p>
</td>
</tr>
<tr>
<td>
<p>Nav_id</p>
</td>
<td>
<p>int(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;导航自增ID</p>
</td>
</tr>
<tr>
<td>
<p>Type</p>
</td>
<td>
<p>Varchar(10)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>导航类型</p>
</td>
</tr>
<tr>
<td>
<p>Title</p>
</td>
<td>
<p>Varchar(60)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;标题</p>
</td>
</tr>
<tr>
<td>
<p>Link</p>
</td>
<td>
<p>varchar(255)</p>
</td>
<td>
<p>否</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;链接地址</p>
</td>
</tr>
<tr>
<td>
<p>Sort_order</p>
</td>
<td>
<p>Tinyint(3)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;排序号</p>
</td>
</tr>
<tr>
<td>
<p>Open_new</p>
</td>
<td>
<p>tinyint(3)</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>&nbsp;</p>
</td>
<td>
<p>是否在新页面打开</p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<ul id="other_link"></ul>]]></description></item><item><title>ecmall程序结构图与常用数据库表</title><link>http://www.cnblogs.com/eastson/archive/2015/08/06/4707575.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 06 Aug 2015 03:48:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/08/06/4707575.html</guid><description><![CDATA[<p><img src="http://images0.cnblogs.com/blog2015/111826/201508/061147249085900.png" alt="" /><br />ecm_acategory：存放的是商城的文章分类。<br />ecm_address：存放的是店长的地址<br />ecm_article：存放的是商城的相关文章<br />ecm_brand：存放的是商城的品牌分类（注意与表ecm_scategory的区别）比如耐克，阿迪等等<br />ecm_cart；存放的是购物车的商品<br />ecm_gcategory：存放的是每个店的商品分类<br />ecm_goods；存放的是每个店里的商品，里面有该商品的ID，属于哪个店（店的ID）<br />ecm_goods_image：存放的是商城中所有商品的图片。<br />ecm_goods_spec：存放的是商品的规格，比如颜色、尺码、库存、货号等，里面有该商品的id<br />ecm_goods_statistics；存放的是每个商品的一些信息，比如被人浏览次数、被人收藏次数、顾客评论等等。<br />ecm_groupbuy；存放的是团购的信息<br />ecm_member；存放的是每个店长的信息资料<br />ecm_module；存放的是模块的信息（模块管理）<br />ecm_navigation：存放的是商城首页的导航信息<br />ecm_order：存放的是商城的订单<br />ecm_payment：存放的是各个店铺的付款方式信息<br />ecm_region：存放的是地区（地区设置&mdash;国家、省份、市区、县）<br />ecm_recommended_goods:存放的是被推荐的商品<br />ecm_recommend:存放的是推荐类型<br />ecm_scategory：存放的是商城的商品分类，比如鞋子，上衣，裤子等等。<br />ecm_sessions：存放的是商城登录session信息，session过时时间好像是1440s<br />ecm_sgrade；存放的是店铺等级信息。比如一年多少钱、允许发布的商品数等<br />ecm_shipping：存放的是每个店铺的配送方式<br />ecm_store：存放的是商城中所有店铺的信息<br />ecm_uploaded_file：存放的是商城中所有文件的信息，包括图片</p>]]></description></item><item><title>Need help with design ReadOnlyListBase (Insert, Update, Delete from ReadOnlyListBase)</title><link>http://www.cnblogs.com/eastson/archive/2015/06/29/4607606.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 29 Jun 2015 07:35:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/06/29/4607606.html</guid><description><![CDATA[<p>原文地址：<a href="http://forums.lhotka.net/forums/p/3166/21214.aspx" target="_blank">http://forums.lhotka.net/forums/p/3166/21214.aspx</a></p>
<p>My&nbsp;task is:<span class="Apple-converted-space">&nbsp;<br />For select client, I have a modal form (frmSelectClient) with grid. Datasourse for grid is root readonly list of Clients (ReadOnlyListBase). If user can't find client in the list, he would like to add new. I create and show a modal form (frmEditClient) with editable root (BusinessBase) for add a new Client to DB. This frmEditClient can reuse also to edit existing Client.<span class="Apple-converted-space">&nbsp;<br /><br />My question:<span class="Apple-converted-space">&nbsp;<br />What is the best solution to update readonly clients list on frmSelectClient, that a user can see their newly inserted clients or updated clients info. Now I make "fullrefresh" data in root readonly list of Clients, but think that is a bad approach :-(<span class="Apple-converted-space">&nbsp;</span></span></span></span></p>
<p><br />Answer：<br />The general answer is to use the Observer design pattern.</p>
<p>Set up an Observer to watch for new items being added. The new item is, by definition, an editable root, or was saved through an editable root, which means that a Saved event is raised when the object is saved.</p>
<p>The Observer handles that event, and relays the information to anyone who cares - such as your ROL.</p>
<p>The ROL can then just add that one new item.</p>
<p>The easiest way to do this is to use .NET events as the "Observer".</p>
<p>In your editable root:</p>
<div class="cnblogs_code">
<pre> <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">event</span><span style="color: #000000;"> EventHandler ProjectSaved;

    </span><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> OnProjectSaved(Project project)
    {
      </span><span style="color: #0000ff;">if</span> (ProjectSaved != <span style="color: #0000ff;">null</span><span style="color: #000000;">)
        ProjectSaved(project, EventArgs.Empty);
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">override</span><span style="color: #000000;"> Project Save()
    {
      Project result </span>= <span style="color: #0000ff;">base</span><span style="color: #000000;">.Save();
      OnProjectSaved(result);
      </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> result;
    }</span></pre>
</div>
<p>The Save() override raises the static event any time any Project object is inserted or&nbsp;updated.<br />And in your ROL you handle that event:</p>
<div class="cnblogs_code">
<pre> <span style="color: #0000ff;">private</span><span style="color: #000000;"> ProjectList()
    {
      Project.ProjectSaved </span>+= <span style="color: #0000ff;">new</span><span style="color: #000000;"> EventHandler(Project_ProjectSaved);
    }

    </span><span style="color: #0000ff;">void</span> Project_ProjectSaved(<span style="color: #0000ff;">object</span><span style="color: #000000;"> sender, EventArgs e)
    {
      Project project </span>= sender <span style="color: #0000ff;">as</span><span style="color: #000000;"> Project;
      </span><span style="color: #0000ff;">if</span> (project != <span style="color: #0000ff;">null</span><span style="color: #000000;">)
      {
        IsReadOnly </span>= <span style="color: #0000ff;">false</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">try</span><span style="color: #000000;">
        {
          </span><span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = <span style="color: #800080;">0</span>; i &lt; <span style="color: #0000ff;">this</span>.Count -<span style="color: #800080;">1</span>; i++<span style="color: #000000;">)
          {
            </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (thisIdea [I].Id.Equals(project.Id))
            {
              </span><span style="color: #008000;">//</span><span style="color: #008000;"> item exists - update with new data</span>
              thisIdea [I] = <span style="color: #0000ff;">new</span><span style="color: #000000;"> ProjectInfo(project.Id, project.Name);
              </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
            }
          }
          </span><span style="color: #008000;">//</span><span style="color: #008000;"> insert item</span>
          <span style="color: #0000ff;">this</span>.Add(<span style="color: #0000ff;">new</span><span style="color: #000000;"> ProjectInfo(project.Id, project.Name));
        }
        </span><span style="color: #0000ff;">finally</span><span style="color: #000000;">
        {
          IsReadOnly </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }
      }
    }</span></pre>
</div>
<p>When the event is handled, sender is the new item. You can search the current list to see if that item already exists, and then replace it with an updated version. If it doesn't exist you simply add a new item.</p>]]></description></item><item><title>如何让Form窗体接收KeyDown事件？</title><link>http://www.cnblogs.com/eastson/archive/2015/06/24/4597444.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 24 Jun 2015 05:20:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/06/24/4597444.html</guid><description><![CDATA[<p>在使用.Net Framework编写窗体应用程序的时候，有时有需要响应窗体的按键消息。当窗体上没有任何其他控件的时候，窗体是可以直接响应这些消息的。</p>
<p>但是当窗体上有其他控件时，会发现窗体再也不会响应这些消息了，因为这些消息都由其上的控件所处理掉并且不再发给父窗体。</p>
<p>响应窗体上的按键消息是很有必要的。Form类有一个KeyPreview的属性，可以让它接收得到按键消息。</p>
<p>该值指示在将键事件传递到具有焦点的控件前，窗体是否将接收此键事件。如果窗体将接收所有键事件，则为true；如果窗体上当前选定控件接收键事件，则为false。默认为alse。</p>
<p>当此属性设置为true 时，窗体将接收所有KeyPress、KeyDown 和 KeyUp 事件。在窗体的事件处理程序处理完该击键后，然后将该击键分配给具有焦点的控件。例如，如果KeyPreview 属性设置为true，而且当前选定的控件是TextBox，则在窗体的事件处理程序处理了击键后，TextBox 控件将接收所按的键。要仅在窗体级别处理键盘事件并且不允许控件接收键盘事件，请将窗体的KeyPress 事件处理程序中的KeyPressEventArgs.Handled 属性设置为 true。</p>
<p>可以使用此属性处理应用程序中的大部分击键事件，并可以处理击键事件或调用适当的控件来处理击键事件。例如，当应用程序使用功能键时，可能希望在窗体级别处理这些击键，而不是为可能接收击键事件的每个控件编写代码。</p>
<p>注意，如果窗体没有可见或启用的控件，则该窗体自动接收所有键盘事件。</p>]]></description></item><item><title>SQL SERVER常用函数</title><link>http://www.cnblogs.com/eastson/archive/2015/05/26/4530434.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 26 May 2015 05:43:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/05/26/4530434.html</guid><description><![CDATA[<p>只做常用部分简单介绍，详细内容见T-SQL联机丛书。</p>
<p><strong>1，统计函数 avg, count, max, min, sum</strong></p>
<p>多数聚会不统计值为null的行。可以与distinct一起使用去掉重复的行。可以与group by 来分组</p>
<p><strong>2， 数学函数</strong></p>
<p>SQRT(n)返回一个数的平方根</p>
<p>Square(n)返回一个数的平方<br />ceiling（n) 返回大于或者等于n的最小整数<br />floor(n), 返回小于或者是等于n的最大整数<br />round(m,n), 四舍五入,n是保留小数的位数<br />abs(n)<br />sign(n), 当n&gt;0, 返回1，n=0,返回0，n&lt;0, 返回-1<br />PI(), 3.1415....<br />rand(),rand(n), 返回0-1之间的一个随机数</p>
<p><strong>3，字符串函数</strong></p>
<p>ascii(), 将字符转换为ASCII码, ASCII('abc') = 97<br />char(), ASCII 码 转换为 字符<br />low()，upper()<br />str(a,b,c)转换数字为字符串。 a,是要转换的字符串。b是转换以后的长度，c是小数位数。str(123.456,8,2) = 123.46<br />ltrim(), rtrim() 去空格<br />left(n), right(n), substring(str, start,length) 截取字符串<br />charindex(子串，母串），查找是否包含。 返回第一次出现的位置，没有返回0<br />patindex('%pattern%', expression) 功能同上，可是使用通配符<br />replicate('char', rep_time), 重复字符串<br />reverse(char),颠倒字符串<br />replace(str, strold, strnew) 替换字符串<br />space(n), 产生n个空行<br />stuff(), SELECT STUFF('abcdef', 2, 3, 'ijklmn') ='aijklmnef', 2是开始位置，3是要从原来串中删除的字符长度，ijlmn是要插入的字符串。</p>
<p><strong>3，类型转换函数:</strong></p>
<p>cast, cast( expression as data_type), Example:<br />SELECT SUBSTRING(title, 1, 30) AS Title, ytd_sales FROM titles WHERE CAST(ytd_sales AS char(20)) LIKE '3%'<br />convert(data_type, expression)</p>
<p><strong>4,日期函数</strong></p>
<p>day(), month(), year()<br />dateadd(datepart, number, date), datapart指定对那一部分加，number知道加多少，date指定在谁的基础上加。datepart的取值包括，year,quarter,month,dayofyear,day,week,hour,minute,second,比如明天dateadd(day,1, getdate())<br />datediff(datepart,date1,date2). datapart和上面一样。整个函数结果是date2 - date1<br />datename(datepart, date) 取那一部分，返回字符串。<br />datepart(datepart, date) 取一部分，返回整数。<br />getdate()当前时间</p>
<p><strong>5，系统函数</strong></p>
<p>col_length('tablename','colname')<br />col_name, SELECT COL_NAME(OBJECT_ID('Employees'), 1) = EmployeeID<br />datalength, example: datalenght('abc') =3, datalength(pub_name)</p>]]></description></item><item><title>SQL SERVER系统表</title><link>http://www.cnblogs.com/eastson/archive/2015/05/26/4530425.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 26 May 2015 05:40:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/05/26/4530425.html</guid><description><![CDATA[<p>sysaltfiles 主数据库&nbsp;保存数据库的文件&nbsp;<br />syscharsets 主数据库 字符集与排序顺序<br />sysconfigures 主数据库 配置选项<br />syscurconfigs 主数据库 当前配置选项<br />sysdatabases 主数据库 服务器中的数据库<br />syslanguages 主数据库 语言<br />syslogins 主数据库 登陆帐号信息<br />sysoledbusers 主数据库 链接服务器登陆信息<br />sysprocesses 主数据库 进程&nbsp;<br />sysremotelogins主数据库 远程登录帐号<br />syscolumns 每个数据库 列<br />sysconstrains 每个数据库 限制<br />sysfilegroups 每个数据库 文件组<br />sysfiles 每个数据库 文件<br />sysforeignkeys 每个数据库 外部关键字<br />sysindexs 每个数据库 索引<br />sysmembers 每个数据库 角色成员<br />sysobjects 每个数据库 所有数据库对象<br />syspermissions 每个数据库 权限<br />systypes 每个数据库 用户定义数据类型<br />sysusers 每个数据库 用户</p>
<p><strong>sysaltfiles</strong></p>
<p>在特殊情况下，包含与数据库中的文件相对应的行。该表存储在<strong>master</strong>数据库中。</p>
<table style="width: 595px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="32%">列名</th><th class="label" width="22%">数据类型</th><th class="label" width="46%">描述</th></tr>
<tr valign="top">
<td width="32%"><strong>fileid</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="46%">每个数据库的唯一文件标识号。</td>


</tr>
<tr valign="top">
<td width="32%"><strong>groupid</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="46%">文件组标识号。</td>


</tr>
<tr valign="top">
<td width="32%"><strong>size</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="46%">文件大小（以 8 KB 页为单位）。</td>


</tr>
<tr valign="top">
<td width="32%"><strong>maxsize</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="46%">最大文件大小（以 8 KB 页为单位）。0 值表示不增长，&ndash;1 值表示文件应一直增长到磁盘已满。</td>


</tr>
<tr valign="top">
<td width="32%"><strong>growth</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="46%">数据库的增长大小。0 值表示不增长。根据状态的值，可以是页数或文件大小的百分比。如果<strong>status</strong>为 0x100000，则<strong>growth</strong>是文件大小的百分比；否则是页数。</td>


</tr>
<tr valign="top">
<td width="32%"><strong>status</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="46%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="32%"><strong>perf</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="46%">保留。</td>


</tr>
<tr valign="top">
<td width="32%"><strong>dbid</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="46%">该文件所属数据库的数据库标识号。</td>


</tr>
<tr valign="top">
<td width="32%"><strong>name</strong></td>
<td width="22%"><strong>nchar(128)</strong></td>
<td width="46%">文件的逻辑名称。</td>


</tr>
<tr valign="top">
<td width="32%"><strong>filename</strong></td>
<td width="22%"><strong>nchar(260)</strong></td>
<td width="46%">物理设备的名称，包括文件的完整路径。</td>


</tr>


</tbody>


</table>
<p><strong>syscharsets</strong></p>
<p>每个字符集在表中各占一行，表中还包含定义供 Microsoft&nbsp;<a href="http://www.cr173.com/k/sqlserver/" target="_blank">sql server</a>&nbsp;使用的排序次序。排序次序中的一个在<strong>sysconfigures</strong>中标记为默认排序次序，该次序是实际使用的唯一次序。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="22%">列名</th><th class="label" width="21%">数据类型</th><th class="label" width="57%">描述</th></tr>
<tr valign="top">
<td width="22%"><strong>type</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="57%">该行表示的实体类型。1001 是字符集；2001 是排序次序。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>id</strong></td>
<td width="21%"><strong>tinyint</strong></td>
<td width="57%">字符集或排序次序的唯一 ID。注意排序次序和字符集不能共享相同的 ID 号。保留从 1 到 240 的 ID 范围供 SQL Server 使用。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>csid</strong></td>
<td width="21%"><strong>tinyint</strong></td>
<td width="57%">如果该行表示字符集，则不使用该字段。如果该行表示排序次序，则该字段是在其上生成排序次序的字符集 ID。假设具有该 ID 的字符集行存在于该表中。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>status</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="57%">内部系统状态信息位。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>name</strong></td>
<td width="21%"><strong>sysname</strong></td>
<td width="57%">字符集或排序次序的唯一名称。该字段必须只包含字母 A-Z 或 a-z、数字 0 &ndash; 9 和下划线 (_)。必须以字母开头。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>description</strong></td>
<td width="21%"><strong>nvarchar(255)</strong></td>
<td width="57%">字符集或排序次序功能的可选描述。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>binarydefinition</strong></td>
<td width="21%"><strong>varbinary(255)</strong></td>
<td width="57%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>definition</strong></td>
<td width="21%"><strong>image</strong></td>
<td width="57%">字符集或排序次序的内部定义。该字段中的数据结构取决于类型。</td>


</tr>


</tbody>


</table>
<p><strong>sysconfigures</strong></p>
<p>用户设置的每个配置选项在表中各占一行。<strong>sysconfigures</strong>包含最近启动 Microsoft SQL Server 前定义的配置选项，还包含最近启动后设置的所有动态配置选项。该表只位于<strong>master</strong>数据库中。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="21%">列名</th><th class="label" width="22%">数据类型</th><th class="label" width="57%">描述</th></tr>
<tr valign="top">
<td width="21%"><strong>value</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="57%">变量的用户可修改值（仅在已执行 RECONFIGURE 后由 SQL Server 使用）。</td>


</tr>
<tr valign="top">
<td width="21%"><strong>config</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="57%">配置变量号。</td>


</tr>
<tr valign="top">
<td width="21%"><strong>comment</strong></td>
<td width="22%"><strong>nvarchar(255)</strong></td>
<td width="57%">对配置选项的解释。</td>


</tr>
<tr valign="top">
<td width="21%"><strong>status</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="57%">表示选项状态的位图。可能的值包括：<br />0 = 静态（该设置在服务器重新启动时生效）。<br />1 = 动态（该变量在 RECONFIGURE 语句执行时生效）。<br />2 = 高级（仅当设置了显示高级选项时才显示该变量）。<br />3 = 动态和高级。</td>


</tr>


</tbody>


</table>
<p><strong>syscurconfigs</strong></p>
<p>每个当前配置选项各占一项。另外，该表还包含四个描述配置结构的项。<strong>syscurconfigs</strong>在由用户查询时动态生成。有关更多信息，请参见sysconfigures。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="21%">列名</th><th class="label" width="21%">数据类型</th><th class="label" width="58%">描述</th></tr>
<tr valign="top">
<td width="21%"><strong>value</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="58%">用户可修改的变量值（仅在已执行 RECONFIGURE 的情况下由 Microsoft? SQL Server? 使用）。</td>


</tr>
<tr valign="top">
<td width="21%"><strong>config</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="58%">配置变量号。</td>


</tr>
<tr valign="top">
<td width="21%"><strong>comment</strong></td>
<td width="21%"><strong>nvarchar(255)</strong></td>
<td width="58%">对配置选项的解释。</td>


</tr>
<tr valign="top">
<td width="21%"><strong>status</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="58%">表示选项状态的位图。可能的值包括：<br />0 = 静态（该设置在服务器重新启动时生效）。<br />1 = 动态（该变量在 RECONFIGURE 语句执行时生效）。<br />2 = 高级（仅当设置了显示高级选项时才显示该变量）。<br />3 = 动态和高级。</td>


</tr>


</tbody>


</table>
<p><strong>sysdatabases</strong></p>
<p>Microsoft SQL Server 上的每个数据库在表中占一行。最初安装 SQL Server 时，<strong>sysdatabases</strong>包含<strong>master</strong>、<strong>model</strong>、<strong>msdb</strong>、<strong>mssqlweb</strong>和<strong>tempdb</strong>数据库的项。该表只存储在<strong>master</strong>数据库中。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="26%">列名</th><th class="label" width="24%">数据类型</th><th class="label" width="50%">描述</th></tr>
<tr valign="top">
<td width="26%"><strong>name</strong></td>
<td width="24%"><strong>sysname</strong></td>
<td width="50%">数据库的名称。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>dbid</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="50%">数据库 ID。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>sid</strong></td>
<td width="24%"><strong>varbinary(85)</strong></td>
<td width="50%">数据库创建者的系统 ID。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>mode</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="50%">用于创建数据库时在内部锁定该数据库。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>status</strong></td>
<td width="24%"><strong>int</strong></td>
<td width="50%">状态位，其中某些状态位可由用户使用<strong>sp_dboption</strong>（<strong>read only</strong>、<strong>dbo use only</strong>、<strong>single user</strong>等）进行设置：<br />1 =<strong>autoclose</strong>；使用<strong>sp_dboption</strong>设置。<br />4 =<strong>select into/bulkcopy</strong>；使用<strong>sp_dboption</strong>设置。<br />8 =<strong>trunc. log on chkpt</strong>；使用<strong>sp_dboption</strong>设置。<br />16 =<strong>torn page detection</strong>，使用<strong>sp_dboption</strong>设置。<br />32 =<strong>loading</strong>。<br />64 =<strong>pre&nbsp;<a href="http://www.cr173.com/k/recovery/" target="_blank">recovery</a></strong>。<br />128 =<strong>recovering</strong>。<br />256 =<strong>not recovered</strong>。<br />512 =<strong>offline</strong>；使用<strong>sp_dboption</strong>设置。<br />1024 =<strong>read only</strong>；使用<strong>sp_dboption</strong>设置。<br />2048 =<strong>dbo use only</strong>；使用<br /><strong>sp_dboption</strong>设置。<br />4096 =<strong>single user</strong>；使用<strong>sp_dboption</strong>设置。<br />32768 =<strong>emergency mode</strong>。<strong><br /></strong>4194304 =<strong>autoshrink</strong>。<strong><br /></strong>1073741824 =<strong>cleanly shutdown</strong>。<br />可以同时打开多个位。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>status2</strong></td>
<td width="24%"><strong>int</strong></td>
<td width="50%">16384 =<strong>ANSI null default</strong>；使用<strong>sp_dboption</strong>设置。<br />65536 =<strong>concat null yields null</strong>，使用<strong>sp_dboption</strong>设置。<br />131072 =<strong>recursive triggers</strong>，使用<strong>sp_dboption</strong>设置。<br />1048576 =<strong>default to local cursor</strong>，使用<strong>sp_dboption</strong>设置。<br />8388608 =<strong>quoted identifier</strong>，使用<br /><strong>sp_dboption</strong>设置。<br />33554432 =<strong>cursor close on commit</strong>，使用<strong>sp_dboption</strong>设置。<br />67108864 =<strong>ANSI nulls</strong>，使用<strong>sp_dboption</strong>设置。<br />268435456 =<strong>ANSI warnings</strong>，使用<strong>sp_dboption</strong>设置。<br />536870912 =<strong>full text enabled</strong>，使用<strong><br />sp_fulltext_database</strong>设置。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>crdate</strong></td>
<td width="24%"><strong>datetime</strong></td>
<td width="50%">创建日期。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>reserved</strong></td>
<td width="24%"><strong>datetime</strong></td>
<td width="50%">留作以后使用。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>category</strong></td>
<td width="24%"><strong>int</strong></td>
<td width="50%">包含用于复制的信息位图：<br />1 = 已发布。<br />2 = 已订阅。<br />4 = 合并已发布。<br />8 = 合并已订阅。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>cmptlevel</strong></td>
<td width="24%"><strong>tinyint</strong></td>
<td width="50%">数据库的兼容级别。有关更多信息，请参见sp_dbcmptlevel。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>filename</strong></td>
<td width="24%"><strong>nvarchar(260)</strong></td>
<td width="50%">数据库主文件的操作系统路径和名称。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>version</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="50%">创建数据库时使用的 SQL Server 代码内部版本号。仅供 SQL Server 工具在内部用于升级处理。</td>


</tr>


</tbody>


</table>
<p><strong>syslanguages</strong></p>
<p>出现在 Microsoft SQL Server 中的每种语言在表中各占一行。虽然美国英语不在<strong>syslanguages</strong>内，但该表始终可由 SQL Server 使用。该表只存储在<strong>master</strong>数据库中。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="24%">列名</th><th class="label" width="22%">数据类型</th><th class="label" width="54%">描述</th></tr>
<tr valign="top">
<td width="24%"><strong>langid</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="54%">唯一语言 ID。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>dateformat</strong></td>
<td width="22%"><strong>nchar(3)</strong></td>
<td width="54%">日期顺序（如 DMY）。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>datefirst</strong></td>
<td width="22%"><strong>tinyint</strong></td>
<td width="54%">一周的第一天：1 表示星期一，2 表示星期二，依此类推，直到 7 表示星期日。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>upgrade</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="54%">留作系统使用。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>name</strong></td>
<td width="22%"><strong>sysname</strong></td>
<td width="54%">正式语言名称（例如，fran?ais）。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>alias</strong></td>
<td width="22%"><strong>sysname</strong></td>
<td width="54%">备用语言名称（如 French）。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>months</strong></td>
<td width="22%"><strong>nvarchar(372)</strong></td>
<td width="54%">按从一月到十二月的顺序排列的用逗号分隔的月份全称列表，每个名称最多包含 20 个字符。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>shortmonths</strong></td>
<td width="22%"><strong>varchar(132)</strong></td>
<td width="54%">按从一月到十二月的顺序排列的用逗号分隔的缩写月份名称列表，每个名称最多包含 9 个字符。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>days</strong></td>
<td width="22%"><strong>nvarchar(217)</strong></td>
<td width="54%">按从一月到十二月的顺序排列的用逗号分隔的天名称列表，每个名称最多包含 30 个字符。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>lcid</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="54%">此种语言的 Microsoft Windows NT? 区域设置 ID。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>mslangid</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="54%">SQL Server 消息组 ID。</td>


</tr>


</tbody>


</table>
<p>安装了 SQL Server 提供的三十三种语言。下面是语言列表。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="23%">用英语表示的名称</th><th class="label" width="23%">NT LCID</th><th class="label" width="54%">SQL Server 消息组 ID</th></tr>
<tr valign="top">
<td width="23%">English</td>
<td width="23%">1033</td>
<td width="54%">1033</td>


</tr>
<tr valign="top">
<td width="23%">German</td>
<td width="23%">1031</td>
<td width="54%">1031</td>


</tr>
<tr valign="top">
<td width="23%">French</td>
<td width="23%">1036</td>
<td width="54%">1036</td>


</tr>
<tr valign="top">
<td width="23%">Japanese</td>
<td width="23%">1041</td>
<td width="54%">1041</td>


</tr>
<tr valign="top">
<td width="23%">Danish</td>
<td width="23%">1030</td>
<td width="54%">1030</td>


</tr>
<tr valign="top">
<td width="23%">Spanish</td>
<td width="23%">3082</td>
<td width="54%">3082</td>


</tr>
<tr valign="top">
<td width="23%">Italian</td>
<td width="23%">1040</td>
<td width="54%">1040</td>


</tr>
<tr valign="top">
<td width="23%">Dutch</td>
<td width="23%">1043</td>
<td width="54%">1043</td>


</tr>
<tr valign="top">
<td width="23%">Norwegian</td>
<td width="23%">2068</td>
<td width="54%">2068</td>


</tr>
<tr valign="top">
<td width="23%">Portuguese</td>
<td width="23%">2070</td>
<td width="54%">2070</td>


</tr>
<tr valign="top">
<td width="23%">Finnish</td>
<td width="23%">1035</td>
<td width="54%">1035</td>


</tr>
<tr valign="top">
<td width="23%">Swedish</td>
<td width="23%">1053</td>
<td width="54%">1053</td>


</tr>
<tr valign="top">
<td width="23%">Czech</td>
<td width="23%">1029</td>
<td width="54%">1029</td>


</tr>
<tr valign="top">
<td width="23%">Hungarian</td>
<td width="23%">1038</td>
<td width="54%">1038</td>


</tr>
<tr valign="top">
<td width="23%">Polish</td>
<td width="23%">1045</td>
<td width="54%">1045</td>


</tr>
<tr valign="top">
<td width="23%">Romanian</td>
<td width="23%">1048</td>
<td width="54%">1048</td>


</tr>
<tr valign="top">
<td width="23%">Croatian</td>
<td width="23%">1050</td>
<td width="54%">1050</td>


</tr>
<tr valign="top">
<td width="23%">Slovak</td>
<td width="23%">1051</td>
<td width="54%">1051</td>


</tr>
<tr valign="top">
<td width="23%">Slovene</td>
<td width="23%">1060</td>
<td width="54%">1060</td>


</tr>
<tr valign="top">
<td width="23%">Greek</td>
<td width="23%">1032</td>
<td width="54%">1032</td>


</tr>
<tr valign="top">
<td width="23%">Bulgarian</td>
<td width="23%">1026</td>
<td width="54%">1026</td>


</tr>
<tr valign="top">
<td width="23%">Russian</td>
<td width="23%">1049</td>
<td width="54%">1049</td>


</tr>
<tr valign="top">
<td width="23%">Turkish</td>
<td width="23%">1055</td>
<td width="54%">1055</td>


</tr>
<tr valign="top">
<td width="23%">British English</td>
<td width="23%">2057</td>
<td width="54%">1033</td>


</tr>
<tr valign="top">
<td width="23%">Estonian</td>
<td width="23%">1061</td>
<td width="54%">1061</td>


</tr>
<tr valign="top">
<td width="23%">Latvian</td>
<td width="23%">1062</td>
<td width="54%">1062</td>


</tr>
<tr valign="top">
<td width="23%">Lithuanian</td>
<td width="23%">1063</td>
<td width="54%">1063</td>


</tr>
<tr valign="top">
<td width="23%">Brazilian</td>
<td width="23%">1046</td>
<td width="54%">1046</td>


</tr>
<tr valign="top">
<td width="23%">Traditional Chinese</td>
<td width="23%">1028</td>
<td width="54%">1028</td>


</tr>
<tr valign="top">
<td width="23%">Korean</td>
<td width="23%">1042</td>
<td width="54%">1042</td>


</tr>
<tr valign="top">
<td width="23%">Simplified Chinese</td>
<td width="23%">2052</td>
<td width="54%">2052</td>


</tr>
<tr valign="top">
<td width="23%">Arabic</td>
<td width="23%">1025</td>
<td width="54%">1025</td>


</tr>
<tr valign="top">
<td width="23%">Thai</td>
<td width="23%">1054</td>
<td width="54%">1054</td>


</tr>


</tbody>


</table>
<p><strong>syslogins</strong></p>
<p>每个登录帐户在表中占一行。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="23%">列名</th><th class="label" width="23%">数据类型</th><th class="label" width="54%">描述</th></tr>
<tr valign="top">
<td width="23%"><strong>sid</strong></td>
<td width="23%"><strong>varbinary(85)</strong></td>
<td width="54%">安全标识符。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>status</strong></td>
<td width="23%"><strong>smallint</strong></td>
<td width="54%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>createdate</strong></td>
<td width="23%"><strong>datetime</strong></td>
<td width="54%">添加登录的日期。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>updatedate</strong></td>
<td width="23%"><strong>datetime</strong></td>
<td width="54%">更新登录的日期。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>accdate</strong></td>
<td width="23%"><strong>datetime</strong></td>
<td width="54%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>totcpu</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>totio</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>spacelimit</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>timelimit</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>resultlimit</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>name</strong></td>
<td width="23%"><strong>varchar(30)</strong></td>
<td width="54%">用户的登录 ID。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>dbname</strong></td>
<td width="23%"><strong>nvarchar(128)</strong></td>
<td width="54%">建立连接时，用户的默认数据库名。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>password</strong></td>
<td width="23%"><strong>nvarchar(128)</strong></td>
<td width="54%">用户的加密密码（可以是 NULL）。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>language</strong></td>
<td width="23%"><strong>nvarchar(128)</strong></td>
<td width="54%">用户的默认语言。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>denylogin</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">如果登录是 Microsoft? Windows NT? 用户或组且已被拒绝访问，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>hasaccess</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">如果已授权登录访问服务器，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>isntname</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">如果登录是 Windows NT 用户或组，则为 1；如果登录是 Microsoft SQL Server? 登录，则为 0。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>isntgroup</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">如果登录是 Windows NT 组，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>isntuser</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">如果登录是 Windows NT 用户，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>sysadmin</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">如果登录是<strong>sysadmin</strong>服务器角色成员，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>securityadmin</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">如果登录是<strong>securityadmin</strong>服务器角色成员，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>serveradmin</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">如果登录是<strong>serveradmin</strong>固定服务器角色成员，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>setupadmin</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">如果登录是<strong>setupadmin</strong>固定服务器角色成员，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>processadmin</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">如果登录是<strong>processadmin</strong>固定服务器角色成员，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>diskadmin</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">如果登录是<strong>diskadmin</strong>固定服务器角色成员，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>dbcreator</strong></td>
<td width="23%"><strong>int</strong></td>
<td width="54%">如果登录是<strong>dbcreator</strong>固定服务器角色成员，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>loginname</strong></td>
<td width="23%"><strong>nvarchar(128)</strong></td>
<td width="54%">登录的实际名称，该名称可能不同于 SQL Server 所使用的登录名。</td>


</tr>


</tbody>


</table>
<p><strong>sysoledbusers</strong></p>
<p>每个指定的链接服务器的用户和密码映射在表中占一行。该表存储在<strong>master</strong>数据库中。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="24%">列名</th><th class="label" width="22%">数据类型</th><th class="label" width="54%">描述</th></tr>
<tr valign="top">
<td width="24%"><strong>rmtsrvid</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="54%">服务器的 SID（安全标识号）。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>rmtloginame</strong></td>
<td width="22%"><strong>nvarchar(128)</strong></td>
<td width="54%"><strong>loginsid</strong>映射到的链接<strong>rmtservid</strong>的远程登录名。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>rmtpassword</strong></td>
<td width="22%"><strong>nvarchar(128)</strong></td>
<td width="54%">链接<strong>rmtsrvid</strong>内的指定远程登录的加密密码。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>loginsid</strong></td>
<td width="22%"><strong>varbinary(85)</strong></td>
<td width="54%">要映射的本地登录 SID。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>status</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="54%">如果该值为 1，映射应使用用户自己的凭据。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>changedate</strong></td>
<td width="22%"><strong>datetime</strong></td>
<td width="54%">上次更改映射信息的日期。</td>


</tr>


</tbody>


</table>
<p><strong>sysprocesses</strong></p>
<p><strong>sysprocesses</strong>表中保存关于运行在 Microsoft SQL Server 上的进程的信息。这些进程可以是客户端进程或系统进程。<strong>sysprocesses</strong>只存储在<strong>master</strong>数据库中。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="24%">列名</th><th class="label" width="24%">数据类型</th><th class="label" width="52%">描述</th></tr>
<tr valign="top">
<td width="24%"><strong>spid</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="52%">SQL Server 进程 ID。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>kpid</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="52%">Microsoft Windows NT 4.0? 线程 ID。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>blocked</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="52%">分块进程的进程 ID (<strong>spid</strong>)。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>waittype</strong></td>
<td width="24%"><strong>binary(2)</strong></td>
<td width="52%">保留。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>waittime</strong></td>
<td width="24%"><strong>int</strong></td>
<td width="52%">当前等待时间（以毫秒为单位）。当进程不处于等待时，为 0。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>lastwaittype</strong></td>
<td width="24%"><strong>nchar(32)</strong></td>
<td width="52%">表示上次或当前等待类型名称的字符串。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>waitresource</strong></td>
<td width="24%"><strong>nchar(32)</strong></td>
<td width="52%">锁资源的文本化表示法。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>dbid</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="52%">当前正由进程使用的数据库 ID。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>uid</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="52%">执行命令的用户 ID。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>cpu</strong></td>
<td width="24%"><strong>int</strong></td>
<td width="52%">进程的累计 CPU 时间。无论 SET STATISTICS TIME ON 选项是 ON 还是 OFF，都为所有进程更新该条目。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>physical_io</strong></td>
<td width="24%"><strong>int</strong></td>
<td width="52%">进程的累计磁盘读取和写入。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>memusage</strong></td>
<td width="24%"><strong>int</strong></td>
<td width="52%">当前分配给该进程的过程高速缓存中的页数。一个负数，表示进程正在释放由另一个进程分配的内存。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>login_time</strong></td>
<td width="24%"><strong>datetime</strong></td>
<td width="52%">客户端进程登录到服务器的时间。对于系统进程，是存储 SQL Server 启动发生的时间。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>last_batch</strong></td>
<td width="24%"><strong>datetime</strong></td>
<td width="52%">客户端进程上次执行远程存储过程调用或 EXECUTE 语句的时间。对于系统进程，是存储 SQL Server 启动发生的时间。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>ecid</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="52%">用于唯一标识代表单个进程进行操作的子线程的执行上下文 ID。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>open_tran</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="52%">进程的打开事务数。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>status</strong></td>
<td width="24%"><strong>nchar(30)</strong></td>
<td width="52%">进程 ID 状态（如运行、休眠等）。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>sid</strong></td>
<td width="24%"><strong>binary(85)</strong></td>
<td width="52%">用户的全局唯一标识符 (GUID)。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>hostname</strong></td>
<td width="24%"><strong>nchar(128)</strong></td>
<td width="52%">工作站的名称。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>program_name</strong></td>
<td width="24%"><strong>nchar(128)</strong></td>
<td width="52%">应用程序的名称。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>hostprocess</strong></td>
<td width="24%"><strong>nchar(8)</strong></td>
<td width="52%">工作站进程 ID 号。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>cmd</strong></td>
<td width="24%"><strong>nchar(16)</strong></td>
<td width="52%">当前正在执行的命令。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>nt_domain</strong></td>
<td width="24%"><strong>nchar(128)</strong></td>
<td width="52%">客户端的 Windows NT 4.0 域（如果使用 Windows 身份验证）或信任连接的 Windows NT 4.0 域。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>nt_username</strong></td>
<td width="24%"><strong>nchar(128)</strong></td>
<td width="52%">进程的 Windows NT 4.0用户名（如果使用 Windows 身份验证）或信任连接的 Windows NT 4.0 用户名。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>net_address</strong></td>
<td width="24%"><strong>nchar(12)</strong></td>
<td width="52%">指派给每个用户工作站上的网络接口卡唯一标识符。当用户登录时，该标识符插入<strong>net_address</strong>列。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>net_library</strong></td>
<td width="24%"><strong>nchar(12)</strong></td>
<td width="52%">用于存储客户端网络库的列。每个客户端进程都在网络连接上进入。网络连接有一个与这些进程关联的网络库，该网络库使得这些进程可以建立连接。有关更多信息，请参见客户端和服务器 Net-Library。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>loginame</strong></td>
<td width="24%"><strong>nchar(128)</strong></td>
<td width="52%">登录名。</td>


</tr>


</tbody>


</table>
<p><strong>sysremotelogins</strong></p>
<p>每个允许调用 Microsoft SQL Server 上的远程存储过程的远程用户占一行。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="24%">列名</th><th class="label" width="24%">数据类型</th><th class="label" width="52%">描述</th></tr>
<tr valign="top">
<td width="24%"><strong>remoteserverid</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="52%">远程服务器标识。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>remoteusername</strong></td>
<td width="24%"><strong>nvarchar(128)</strong></td>
<td width="52%">远程服务器上的用户登录名。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>status</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="52%">选项的位图。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>sid</strong></td>
<td width="24%"><strong>varbinary(85)</strong></td>
<td width="52%">Microsoft Windows NT? 用户安全 ID。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>changedate</strong></td>
<td width="24%"><strong>datetime</strong></td>
<td width="52%">添加远程用户的日期和时间。</td>


</tr>


</tbody>


</table>
<p><strong>syscolumns</strong></p>
<p>每个表和视图中的每列在表中占一行，存储过程中的每个参数在表中也占一行。该表位于每个数据库中。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="22%">列名</th><th class="label" width="21%">数据类型</th><th class="label" width="57%">描述</th></tr>
<tr valign="top">
<td width="22%"><strong>name</strong></td>
<td width="21%"><strong>sysname</strong></td>
<td width="57%">列名或过程参数的名称。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>id</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="57%">该列所属的表对象 ID，或与该参数关联的存储过程 ID。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>xtype</strong></td>
<td width="21%"><strong>tinyint</strong></td>
<td width="57%"><strong>systypes</strong>中的物理存储类型。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>typestat</strong></td>
<td width="21%"><strong>tinyint</strong></td>
<td width="57%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>xusertype</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="57%">扩展的用户定义数据类型 ID。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>length</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="57%"><strong>systypes</strong>中的最大物理存储长度。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>xprec</strong></td>
<td width="21%"><strong>tinyint</strong></td>
<td width="57%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>xscale</strong></td>
<td width="21%"><strong>tinyint</strong></td>
<td width="57%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>colid</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="57%">列或参数 ID。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>xoffset</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="57%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>bitpos</strong></td>
<td width="21%"><strong>tinyint</strong></td>
<td width="57%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>reserved</strong></td>
<td width="21%"><strong>tinyint</strong></td>
<td width="57%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>colstat</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="57%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>cdefault</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="57%">该列的默认值 ID。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>domain</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="57%">该列的规则或 CHECK 约束 ID。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>number</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="57%">过程分组时（0 表示非过程项）的子过程号。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>colorder</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="57%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>autoval</strong></td>
<td width="21%"><strong>varbinary(255)</strong></td>
<td width="57%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>offset</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="57%">该列所在行的偏移量；如果为负，表示可变长度行。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>status</strong></td>
<td width="21%"><strong>tinyint</strong></td>
<td width="57%">用于描述列或参数属性的位图：<br />0x08 = 列允许空值。<br />0x10 = 当添加<strong>varchar</strong>或<strong>varbinary</strong>列时，ANSI 填充生效。保留<strong>varchar</strong>列的尾随空格，保留<strong>varbinary</strong>列的尾随零。<br />0x40 = 参数为 OUTPUT 参数。<br />0x80 = 列为标识列。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>type</strong></td>
<td width="21%"><strong>tinyint</strong></td>
<td width="57%"><strong>systypes</strong>中的物理存储类型。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>usertype</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="57%"><strong>systypes</strong>中的用户定义数据类型 ID。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>printfmt</strong></td>
<td width="21%"><strong>varchar(255)</strong></td>
<td width="57%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>prec</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="57%">该列的精度级别。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>scale</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="57%">该列的小数位数。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>iscomputed</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="57%">表示是否已计算该列的标志：<br />0 = 未计算。<br />1 = 已计算。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>isoutparam</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="57%">表示该过程参数是否是输出参数：<br />1 = 真。<br />0 = 假。</td>


</tr>
<tr valign="top">
<td width="22%"><strong>isnullable</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="57%">表示该列是否允许空值：<br />1 = 真。<br />0 = 假。</td>


</tr>


</tbody>


</table>
<p><strong>sysconstraints</strong></p>
<p>包含约束映射，映射到拥有该约束的对象。该系统目录存储在每个数据库中。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="21%">列名</th><th class="label" width="21%">数据类型</th><th class="label" width="58%">描述</th></tr>
<tr valign="top">
<td width="21%"><strong>constid</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="58%">约束号。</td>


</tr>
<tr valign="top">
<td width="21%"><strong>id</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="58%">拥有该约束的表 ID。</td>


</tr>
<tr valign="top">
<td width="21%"><strong>colid</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="58%">在其上定义约束的列 ID，如果是表约束则为 0。</td>


</tr>
<tr valign="top">
<td width="21%"><strong>spare1</strong></td>
<td width="21%"><strong>tinyint</strong></td>
<td width="58%">保留。</td>


</tr>
<tr valign="top">
<td width="21%"><strong>status</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="58%">位图指示状态。可能的值包括：<br />1 = PRIMARY KEY 约束。<br />2 = UNIQUE KEY 约束。<br />3 = FOREIGN KEY 约束。<br />4 = CHECK 约束。<br />5 = DEFAULT 约束。<br />16 = 列级约束。<br />32 = 表级约束。</td>


</tr>
<tr valign="top">
<td width="21%"><strong>actions</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="58%">保留。</td>


</tr>
<tr valign="top">
<td width="21%"><strong>error</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="58%">保留。</td>


</tr>


</tbody>


</table>
<p><strong>sysfilegroups</strong></p>
<p>数据库中的每个文件组在表中占一行。该表存储在每个数据库中。在该表中至少有一项用于主文件组。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="20%">列名</th><th class="label" width="21%">数据类型</th><th class="label" width="59%">描述</th></tr>
<tr valign="top">
<td width="20%"><strong>groupid</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="59%">每个数据库的唯一组标识号。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>allocpolicy</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="59%">保留。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>status</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="59%">0x8 = READ ONLY<br />0x10 = DEFAULT</td>


</tr>
<tr valign="top">
<td width="20%"><strong>groupname</strong></td>
<td width="21%"><strong>sysname</strong></td>
<td width="59%">文件组的名称。</td>


</tr>


</tbody>


</table>
<p><strong>sysfiles</strong></p>
<p>数据库中的每个文件在表中占一行。该系统表是虚拟表，不能直接更新或修改。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="20%">列名</th><th class="label" width="21%">数据类型</th><th class="label" width="59%">描述</th></tr>
<tr valign="top">
<td width="20%"><strong>fileid</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="59%">每个数据库的唯一文件标识号。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>groupid</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="59%">文件组标识号。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>size</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="59%">文件大小（以 8 KB 页为单位）。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>maxsize</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="59%">最大文件大小（以 8 KB 页为单位）。0 值表示不增长，&ndash;1 值表示文件应一直增长到磁盘已满。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>growth</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="59%">数据库的增长大小。0 值表示不增长。根据状态的值，可以是页数或文件大小的百分比。如果<strong>status</strong>包含 0x100000，则<strong>growth</strong>是文件大小的百分比；否则，它是页数。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>status</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="59%"><strong>growth</strong>值（以兆字节 (MB) 或千字节 (KB) 为单位）的状态位。<br />0x1 = 默认设备。<br />0x2 = 磁盘文件。<br />0x40 = 日志设备。<br />0x80 = 自上次备份后已写入文件。<br />0x4000 = 由 CREATE DATABASE 语句<br />隐性创建的设备。<br />0x8000 = 在数据库创建过程中创建的设备。<br />0x100000 = 按百分比而不是按页数增长。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>perf</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="59%">保留。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>name</strong></td>
<td width="21%"><strong>nchar(128)</strong></td>
<td width="59%">文件的逻辑名称。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>filename</strong></td>
<td width="21%"><strong>nchar(260)</strong></td>
<td width="59%">物理设备的名称，包括文件的完整路径。</td>


</tr>


</tbody>


</table>
<p><strong>sysforeignkeys</strong></p>
<p>包含关于表定义中的 FOREIGN KEY 约束的信息。该表存储在每个数据库中。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="20%">列名</th><th class="label" width="21%">数据类型</th><th class="label" width="59%">描述</th></tr>
<tr valign="top">
<td width="20%"><strong>constid</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="59%">FOREIGN KEY 约束的 ID。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>fkeyid</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="59%">具有 FOREIGN KEY 约束的表对象 ID。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>rkeyid</strong></td>
<td width="21%"><strong>int</strong></td>
<td width="59%">在 FOREIGN KEY 约束中引用的表对象 ID。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>fkey</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="59%">正在引用的列 ID。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>rkey</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="59%">已引用的列 ID。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>keyno</strong></td>
<td width="21%"><strong>smallint</strong></td>
<td width="59%">该列在引用列列表中的位置。</td>


</tr>


</tbody>


</table>
<p><strong>sysindexes</strong></p>
<p>数据库中的每个索引和表在表中各占一行。该表存储在每个数据库中。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="20%">列名</th><th class="label" width="22%">数据类型</th><th class="label" width="58%">描述</th></tr>
<tr valign="top">
<td width="20%"><strong>id</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="58%">表 ID（如果<strong>indid</strong>= 0 或 255）。否则为索引所属表的 ID。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>status</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="58%">内部系统状态信息。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>first</strong></td>
<td width="22%"><strong>binary(6)</strong></td>
<td width="58%">指向第一页或根页的指针。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>indid</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="58%">索引 ID：<br />1 = 聚集索引<br />&gt;1 = 非聚集<br />255 = 具有<strong>text</strong>或<strong>image</strong>数据的表条目</td>


</tr>
<tr valign="top">
<td width="20%"><strong>root</strong></td>
<td width="22%"><strong>binary(6)</strong></td>
<td width="58%">如果<strong>indid</strong>&gt;= 1 和 &lt; 255，<strong>root</strong>是指向根页的指针。如果<strong>indid</strong>= 0 或<strong>indid</strong>= 255，<strong>root</strong>是指向最后一页的指针。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>minlen</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="58%">最小行大小。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>keycnt</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="58%">键的数目。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>groupid</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="58%">在其上创建对象的文件组 ID。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>dpages</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="58%">如果<strong>indid</strong>= 0 或<strong>indid</strong>= 1，<strong>dpages</strong>是已用数据页的计数。如果<strong>indid</strong>= 255，其设置为 0。否则是已用索引页的计数。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>reserved</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="58%">如果<strong>indid</strong>= 0 或<strong>indid</strong>= 1，<strong>reserved</strong>是分配给所有索引和表数据的页计数。如果<strong>indid</strong>= 255，<strong>reserved</strong>是分配给<strong>text</strong>或<strong>image</strong>数据的页计数。否则是分配给索引的页计数。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>used</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="58%">如果<strong>indid</strong>= 0 或<strong>indid</strong>= 1，<strong>used</strong>是用于所有索引和表数据的总页数。如果<strong>indid</strong>= 255，<strong>used</strong>是用于<strong>text</strong>或<strong>image</strong>数据的页计数。否则是用于索引的页计数。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>rowcnt</strong></td>
<td width="22%"><strong>bigint</strong></td>
<td width="58%">基于<strong>indid</strong>= 0 和<strong>indid</strong>= 1 的数据级行计数。如果<strong>indid</strong>= 255，<strong>rowcnt</strong>设置为 0。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>rowmodctr</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="58%">对自上次更新表的统计后插入、删除或更新行的总数进行计数。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>xmaxlen</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="58%">最大行大小。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>maxirow</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="58%">最大非叶索引行大小。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>OrigFillFactor</strong></td>
<td width="22%"><strong>tinyint</strong></td>
<td width="58%">创建索引时使用的起始填充因子值。不保留该值；然而，如果需要重新创建索引但记不住当初使用的填充因子，则该值可能很有帮助。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>reserved1</strong></td>
<td width="22%"><strong>tinyint</strong></td>
<td width="58%">保留。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>reserved2</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="58%">保留。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>FirstIAM</strong></td>
<td width="22%"><strong>binary(6)</strong></td>
<td width="58%">保留。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>impid</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="58%">保留。索引实现标志。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>lockflags</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="58%">用于约束经过考虑的索引锁粒度。例如，对于本质上是只读的查找表，可以将其设置为仅进行表级锁定以使锁定成本减到最小。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>pgmodctr</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="58%">保留。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>keys</strong></td>
<td width="22%"><strong>varbinary(816)</strong></td>
<td width="58%">组成索引键的列 ID 列表。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>name</strong></td>
<td width="22%"><strong>sysname</strong></td>
<td width="58%">表名（如果<strong>indid</strong>= 0 或 255）。否则为索引的名称。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>statblob</strong></td>
<td width="22%"><strong>image</strong></td>
<td width="58%">统计 BLOB。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>maxlen</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="58%">保留。</td>


</tr>
<tr valign="top">
<td width="20%"><strong>rows</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="58%">基于<strong>indid</strong>= 0 和<strong>indid</strong>= 1的数据级行数，该值对于<strong>indid</strong>&gt;1 重复。如果<strong>indid</strong>= 255，<strong>rows</strong>设置为 0。提供该列是为了向后兼容。</td>


</tr>


</tbody>


</table>
<p><strong>sysmembers</strong></p>
<p>每个数据库角色成员在表中占一行。该表存储在每个数据库中。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="24%">列名</th><th class="label" width="23%">数据类型</th><th class="label" width="53%">描述</th></tr>
<tr valign="top">
<td width="24%"><strong>memberuid</strong></td>
<td width="23%"><strong>smallint</strong></td>
<td width="53%">角色成员的用户 ID。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>groupuid</strong></td>
<td width="23%"><strong>smallint</strong></td>
<td width="53%">角色的用户 ID。</td>


</tr>


</tbody>


</table>
<p><strong>sysobjects</strong></p>
<p>在数据库内创建的每个对象（约束、默认值、日志、规则、存储过程等）在表中占一行。只有在<strong>tempdb</strong>内，每个临时对象才在该表中占一行。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="24%">列名</th><th class="label" width="22%">数据类型</th><th class="label" width="54%">描述</th></tr>
<tr valign="top">
<td width="24%"><strong>name</strong></td>
<td width="22%"><strong>sysname</strong></td>
<td width="54%">对象名。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>Id</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="54%">对象标识号。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>xtype</strong></td>
<td width="22%"><strong>char(2)</strong></td>
<td width="54%">对象类型。可以是下列对象类型中的一种：<br />C = CHECK 约束<br />D = 默认值或 DEFAULT 约束<br />F = FOREIGN KEY 约束<br />L = 日志<br />FN = 标量函数<br />IF = 内嵌表函数<br />P = 存储过程<br />PK = PRIMARY KEY 约束（类型是 K）<br />RF = 复制筛选存储过程<br />S = 系统表<br />TF = 表函数<br />TR = 触发器<br />U = 用户表<br />UQ = UNIQUE 约束（类型是 K）<br />V = 视图<br />X = 扩展存储过程</td>


</tr>
<tr valign="top">
<td width="24%"><strong>uid</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="54%">所有者对象的用户 ID。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>info</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="54%">保留。仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>status</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="54%">保留。仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>base_schema_<br />ver</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="54%">保留。仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>replinfo</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="54%">保留。供复制使用。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>parent_obj</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="54%">父对象的对象标识号（例如，对于触发器或约束，该标识号为表 ID）。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>crdate</strong></td>
<td width="22%"><strong>datetime</strong></td>
<td width="54%">对象的创建日期。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>ftcatid</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="54%">为全文索引注册的所有用户表的全文目录标识符，对于没有注册的所有用户表则为 0。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>schema_ver</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="54%">版本号，该版本号在每次表的架构更改时都增加。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>stats_schema_<br />ver</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="54%">保留。仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>type</strong></td>
<td width="22%"><strong>char(2)</strong></td>
<td width="54%">对象类型。可以是下列值之一：<br />C = CHECK 约束<br />D = 默认值或 DEFAULT 约束<br />F = FOREIGN KEY 约束<br />FN = 标量函数<br />IF = 内嵌表函数<br />K = PRIMARY KEY 或 UNIQUE 约束<br />L = 日志<br />P = 存储过程<br />R = 规则<br />RF = 复制筛选存储过程<br />S = 系统表<br />TF = 表函数<br />TR = 触发器<br />U = 用户表<br />V = 视图<br />X = 扩展存储过程</td>


</tr>
<tr valign="top">
<td width="24%"><strong>userstat</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="54%">保留。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>sysstat</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="54%">内部状态信息。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>indexdel</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="54%">保留。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>refdate</strong></td>
<td width="22%"><strong>datetime</strong></td>
<td width="54%">留作以后使用。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>version</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="54%">留作以后使用。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>deltrig</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="54%">保留。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>instrig</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="54%">保留。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>updtrig</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="54%">保留。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>seltrig</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="54%">保留。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>category</strong></td>
<td width="22%"><strong>int</strong></td>
<td width="54%">用于发布、约束和标识。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>cache</strong></td>
<td width="22%"><strong>smallint</strong></td>
<td width="54%">保留。</td>


</tr>


</tbody>


</table>
<p><strong>syspermissions</strong></p>
<p>包含有关对数据库内的用户、组和角色授予和拒绝的权限的信息。该表存储在每个数据库中。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="24%">列名</th><th class="label" width="24%">数据类型</th><th class="label" width="52%">描述</th></tr>
<tr valign="top">
<td width="24%"><strong>id</strong></td>
<td width="24%"><strong>int</strong></td>
<td width="52%">对象权限的对象 ID；0 表示语句权限。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>grantee</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="52%">受权限影响的用户、组或角色的 ID。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>grantor</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="52%">被授予或废除权限的用户、组或角色的 ID。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>actadd</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="52%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>actmod</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="52%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>seladd</strong></td>
<td width="24%"><strong>varbinary(4000)</strong></td>
<td width="52%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>selmod</strong></td>
<td width="24%"><strong>varbinary(4000)</strong></td>
<td width="52%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>updadd</strong></td>
<td width="24%"><strong>varbinary(4000)</strong></td>
<td width="52%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>updmod</strong></td>
<td width="24%"><strong>varbinary(4000)</strong></td>
<td width="52%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>refadd</strong></td>
<td width="24%"><strong>varbinary(4000)</strong></td>
<td width="52%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="24%"><strong>refmod</strong></td>
<td width="24%"><strong>varbinary(4000)</strong></td>
<td width="52%">仅限内部使用。</td>


</tr>


</tbody>


</table>
<p><strong>systypes</strong></p>
<p>对于每种系统提供数据类型和用户定义数据类型，均包含一行信息。该表存储在每个数据库中。</p>
<p>这些是系统提供的数据类型及其 ID 号。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="26%">列名</th><th class="label" width="24%">数据类型</th><th class="label" width="50%">描述</th></tr>
<tr valign="top">
<td width="26%"><strong>name</strong></td>
<td width="24%"><strong>sysname</strong></td>
<td width="50%">数据类型名称。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>xtype</strong></td>
<td width="24%"><strong>tinyint</strong></td>
<td width="50%">物理存储类型。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>status</strong></td>
<td width="24%"><strong>tinyint</strong></td>
<td width="50%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>xusertype</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="50%">扩展用户类型。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>length</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="50%">数据类型的物理长度。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>xprec</strong></td>
<td width="24%"><strong>tinyint</strong></td>
<td width="50%">服务器所使用的内部精度。（不能在查询中使用。）</td>


</tr>
<tr valign="top">
<td width="26%"><strong>xscale</strong></td>
<td width="24%"><strong>tinyint</strong></td>
<td width="50%">服务器所使用的内部小数位数。（不能在查询中使用。）</td>


</tr>
<tr valign="top">
<td width="26%"><strong>tdefault</strong></td>
<td width="24%"><strong>int</strong></td>
<td width="50%">对此数据类型进行完整性检查的存储过程的 ID。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>domain</strong></td>
<td width="24%"><strong>int</strong></td>
<td width="50%">对此数据类型进行完整性检查的存储过程的 ID。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>uid</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="50%">数据类型创建者的用户 ID。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>reserved</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="50%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>usertype</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="50%">用户类型 ID。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>variable</strong></td>
<td width="24%"><strong>bit</strong></td>
<td width="50%">可变长度数据类型为 1；否则为 0。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>allownulls</strong></td>
<td width="24%"><strong>bit</strong></td>
<td width="50%">指出此数据类型的默认为空性。如果 CREATE 或 ALTER TABLE 指定了为空性，那么该值将替代此数据类型的默认为空性。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>type</strong></td>
<td width="24%"><strong>tinyint</strong></td>
<td width="50%">物理存储数据类型。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>printfmt</strong></td>
<td width="24%"><strong>varchar(255)</strong></td>
<td width="50%">保留。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>prec</strong></td>
<td width="24%"><strong>smallint</strong></td>
<td width="50%">此数据类型的精度级别。</td>


</tr>
<tr valign="top">
<td width="26%"><strong>scale</strong></td>
<td width="24%"><strong>tinyint</strong></td>
<td width="50%">此数据类型的小数位数（根据精度）。</td>


</tr>


</tbody>


</table>
<p><strong>sysusers</strong></p>
<p>数据库中每个 Microsoft Windows 用户、Windows 组、Microsoft SQL Server 用户或 SQL Server 角色在表中占一行。</p>
<table style="width: 587px;" border="1" frame="box" rules="all" cellpadding="2">
<tbody>
<tr valign="top"><th class="label" width="23%">列名</th><th class="label" width="25%">数据类型</th><th class="label" width="52%">描述</th></tr>
<tr valign="top">
<td width="23%"><strong>uid</strong></td>
<td width="25%"><strong>smallint</strong></td>
<td width="52%">用户 ID，在此数据库中是唯一的。1 是数据库所有者。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>status</strong></td>
<td width="25%"><strong>smallint</strong></td>
<td width="52%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>Name</strong></td>
<td width="25%"><strong>sysname</strong></td>
<td width="52%">用户名或组名，在此数据库中是唯一的。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>sid</strong></td>
<td width="25%"><strong>varbinary(85)</strong></td>
<td width="52%">此条目的安全性标识符。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>roles</strong></td>
<td width="25%"><strong>varbinary(2048)</strong></td>
<td width="52%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>createdate</strong></td>
<td width="25%"><strong>datetime</strong></td>
<td width="52%">帐户的添加日期。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>updatedate</strong></td>
<td width="25%"><strong>datetime</strong></td>
<td width="52%">帐户的上次修改日期。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>altuid</strong></td>
<td width="25%"><strong>smallint</strong></td>
<td width="52%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>password</strong></td>
<td width="25%"><strong>varbinary(256)</strong></td>
<td width="52%">仅限内部使用。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>gid</strong></td>
<td width="25%"><strong>smallint</strong></td>
<td width="52%">此用户所属的组 ID。如果<strong>uid</strong>=<strong>gid</strong>，那么此条目就定义一个组。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>environ</strong></td>
<td width="25%"><strong>varchar(255)</strong></td>
<td width="52%">保留。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>hasdbaccess</strong></td>
<td width="25%"><strong>int</strong></td>
<td width="52%">如果该帐户有数据库访问权限，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>islogin</strong></td>
<td width="25%"><strong>int</strong></td>
<td width="52%">如果该帐户是有登录帐户的 Windows 组、Windows 用户或 SQL Server 用户，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>isntname</strong></td>
<td width="25%"><strong>int</strong></td>
<td width="52%">如果该帐户是 Windows 组或 Windows 用户，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>isntgroup</strong></td>
<td width="25%"><strong>int</strong></td>
<td width="52%">如果该帐户是 Windows 组，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>isntuser</strong></td>
<td width="25%"><strong>int</strong></td>
<td width="52%">如果该帐户是 Windows 用户，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>issqluser</strong></td>
<td width="25%"><strong>int</strong></td>
<td width="52%">如果该帐户是 SQL Server 用户，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>isaliased</strong></td>
<td width="25%"><strong>int</strong></td>
<td width="52%">如果该帐户以另一个用户为别名，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>issqlrole</strong></td>
<td width="25%"><strong>int</strong></td>
<td width="52%">如果该帐户是 SQL Server 角色，则为 1。</td>


</tr>
<tr valign="top">
<td width="23%"><strong>isapprole</strong></td>
<td width="25%"><strong>int</strong></td>
<td width="52%">如果该帐户是应用程序角色，则为 1。</td>


</tr>


</tbody>


</table>]]></description></item><item><title>How do I implement a cancelable event?</title><link>http://www.cnblogs.com/eastson/archive/2015/04/29/4465241.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 29 Apr 2015 02:31:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/04/29/4465241.html</guid><description><![CDATA[<p>n System.ComponentModel, there's a class called CancelEventArgs which contains a Cancel member that can be set in event listeners. The documentation on MSDN explains how to use that to cancel events from within a listener, but how do I use it to implement my own cancelable events? Is there a way to check the Cancel member after each listener fires, or do I have to wait until after the event has fired all its listeners?</p>
<p>To check each listener in turn, you need to manually get the handlers via GetInvocationList:</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">class</span><span style="color: #000000;"> Foo
{
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">event</span><span style="color: #000000;"> CancelEventHandler Bar;

    </span><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> OnBar()
    {
        </span><span style="color: #0000ff;">bool</span> cancel = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
        CancelEventHandler handler </span>=<span style="color: #000000;"> Bar;
        </span><span style="color: #0000ff;">if</span> (handler != <span style="color: #0000ff;">null</span><span style="color: #000000;">)
        {
            CancelEventArgs args </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> CancelEventArgs(cancel);
            </span><span style="color: #0000ff;">foreach</span> (CancelEventHandler tmp <span style="color: #0000ff;">in</span><span style="color: #000000;"> handler.GetInvocationList())
            {
                tmp(</span><span style="color: #0000ff;">this</span><span style="color: #000000;">, args);
                </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (args.Cancel)
                {
                    cancel </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
                    </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
                }
            }
        }
        </span><span style="color: #0000ff;">if</span>(!cancel) { <span style="color: #008000;">/*</span><span style="color: #008000;"> ... </span><span style="color: #008000;">*/</span><span style="color: #000000;"> }
    }
}</span></pre>
</div>
<p><a href="http://stackoverflow.com/questions/295254/how-do-i-implement-a-cancelable-event" target="_blank">http://stackoverflow.com/questions/295254/how-do-i-implement-a-cancelable-event</a></p>]]></description></item><item><title>sql之left join、right join、inner join的区别</title><link>http://www.cnblogs.com/eastson/archive/2015/04/16/4431430.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 16 Apr 2015 03:00:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/04/16/4431430.html</guid><description><![CDATA[<p>left join(左联接) 返回包括左表中的所有记录和右表中联结字段相等的记录&nbsp;<br />right join(右联接) 返回包括右表中的所有记录和左表中联结字段相等的记录<br />inner join(等值连接) 只返回两个表中联结字段相等的行</p>
<p>举例如下：&nbsp;<br />--------------------------------------------<br />表A记录如下：<br />aID　　　　　aNum<br />1　　　　　a20050111<br />2　　　　　a20050112<br />3　　　　　a20050113<br />4　　　　　a20050114<br />5　　　　　a20050115</p>
<p>表B记录如下:<br />bID　　　　　bName<br />1　　　　　2006032401<br />2　　　　　2006032402<br />3　　　　　2006032403<br />4　　　　　2006032404<br />8　　　　　2006032408</p>
<p>--------------------------------------------<br />1.left join<br />sql语句如下:&nbsp;<br />select * from A<br />left join B&nbsp;<br />on A.aID = B.bID</p>
<p>结果如下:<br />aID　　　　　aNum　　　　　bID　　　　　bName<br />1　　　　　a20050111　　　　1　　　　　2006032401<br />2　　　　　a20050112　　　　2　　　　　2006032402<br />3　　　　　a20050113　　　　3　　　　　2006032403<br />4　　　　　a20050114　　　　4　　　　　2006032404<br />5　　　　　a20050115　　　　NULL　　　　　NULL</p>
<p>（所影响的行数为 5 行）<br />结果说明:<br />left join是以A表的记录为基础的,A可以看成左表,B可以看成右表,left join是以左表为准的.<br />换句话说,左表(A)的记录将会全部表示出来,而右表(B)只会显示符合搜索条件的记录(例子中为: A.aID = B.bID).<br />B表记录不足的地方均为NULL.<br />--------------------------------------------<br />2.right join<br />sql语句如下:&nbsp;<br />select * from A<br />right join B&nbsp;<br />on A.aID = B.bID</p>
<p>结果如下:<br />aID　　　　　aNum　　　　　bID　　　　　bName<br />1　　　　　a20050111　　　　1　　　　　2006032401<br />2　　　　　a20050112　　　　2　　　　　2006032402<br />3　　　　　a20050113　　　　3　　　　　2006032403<br />4　　　　　a20050114　　　　4　　　　　2006032404<br />NULL　　　　　NULL　　　　　8　　　　　2006032408</p>
<p>（所影响的行数为 5 行）<br />结果说明:<br />仔细观察一下,就会发现,和left join的结果刚好相反,这次是以右表(B)为基础的,A表不足的地方用NULL填充.<br />--------------------------------------------<br />3.inner join<br />sql语句如下:&nbsp;<br />select * from A<br />innerjoin B&nbsp;<br />on A.aID = B.bID</p>
<p>结果如下:<br />aID　　　　　aNum　　　　　bID　　　　　bName<br />1　　　　　a20050111　　　　1　　　　　2006032401<br />2　　　　　a20050112　　　　2　　　　　2006032402<br />3　　　　　a20050113　　　　3　　　　　2006032403<br />4　　　　　a20050114　　　　4　　　　　2006032404</p>
<p>结果说明:<br />很明显,这里只显示出了 A.aID = B.bID的记录.这说明inner join并不以谁为基础,它只显示符合条件的记录.</p>]]></description></item><item><title>Inno Setup设置NT服务</title><link>http://www.cnblogs.com/eastson/archive/2015/04/09/4409889.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 09 Apr 2015 07:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/04/09/4409889.html</guid><description><![CDATA[<p>原文地址：<a href="http://stackoverflow.com/questions/16922272/unknown-identifier-and-wpselectdir" target="_blank">http://stackoverflow.com/questions/16922272/unknown-identifier-and-wpselectdir</a></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Variables Globales</span>
<span style="color: #0000ff;">var</span><span style="color: #000000;">
    TimeZone: String;
    </span><span style="color: #0000ff;">type</span><span style="color: #000000;">
        SERVICE_STATUS </span>= <span style="color: #0000ff;">record</span><span style="color: #000000;">
            dwServiceType               : cardinal;
            dwCurrentState              : cardinal;
            dwControlsAccepted          : cardinal;
            dwWin32ExitCode             : cardinal;
            dwServiceSpecificExitCode   : cardinal;
            dwCheckPoint                : cardinal;
            dwWaitHint                  : cardinal;
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
    HANDLE </span>=<span style="color: #000000;"> cardinal;

</span><span style="color: #0000ff;">const</span><span style="color: #000000;">
    SERVICE_QUERY_CONFIG        </span>= $<span style="color: #800080;">1</span><span style="color: #000000;">;
    SERVICE_CHANGE_CONFIG       </span>= $<span style="color: #800080;">2</span><span style="color: #000000;">;
    SERVICE_QUERY_STATUS        </span>= $<span style="color: #800080;">4</span><span style="color: #000000;">;
    SERVICE_START               </span>= $<span style="color: #800080;">10</span><span style="color: #000000;">;
    SERVICE_STOP                </span>= $<span style="color: #800080;">20</span><span style="color: #000000;">;
    SERVICE_ALL_ACCESS          </span>=<span style="color: #000000;"> $f01ff;
    SC_MANAGER_ALL_ACCESS       </span>=<span style="color: #000000;"> $f003f;
    SERVICE_WIN32_OWN_PROCESS   </span>= $<span style="color: #800080;">10</span><span style="color: #000000;">;
    SERVICE_WIN32_SHARE_PROCESS </span>= $<span style="color: #800080;">20</span><span style="color: #000000;">;
    SERVICE_WIN32               </span>= $<span style="color: #800080;">30</span><span style="color: #000000;">;
    SERVICE_INTERACTIVE_PROCESS </span>= $<span style="color: #800080;">100</span><span style="color: #000000;">;
    SERVICE_BOOT_START          </span>= $<span style="color: #800080;">0</span><span style="color: #000000;">;
    SERVICE_SYSTEM_START        </span>= $<span style="color: #800080;">1</span><span style="color: #000000;">;
    SERVICE_AUTO_START          </span>= $<span style="color: #800080;">2</span><span style="color: #000000;">;
    SERVICE_DEMAND_START        </span>= $<span style="color: #800080;">3</span><span style="color: #000000;">;
    SERVICE_DISABLED            </span>= $<span style="color: #800080;">4</span><span style="color: #000000;">;
    SERVICE_DELETE              </span>= $<span style="color: #800080;">10000</span><span style="color: #000000;">;
    SERVICE_CONTROL_STOP        </span>= $<span style="color: #800080;">1</span><span style="color: #000000;">;
    SERVICE_CONTROL_PAUSE       </span>= $<span style="color: #800080;">2</span><span style="color: #000000;">;
    SERVICE_CONTROL_CONTINUE    </span>= $<span style="color: #800080;">3</span><span style="color: #000000;">;
    SERVICE_CONTROL_INTERROGATE </span>= $<span style="color: #800080;">4</span><span style="color: #000000;">;
    SERVICE_STOPPED             </span>= $<span style="color: #800080;">1</span><span style="color: #000000;">;
    SERVICE_START_PENDING       </span>= $<span style="color: #800080;">2</span><span style="color: #000000;">;
    SERVICE_STOP_PENDING        </span>= $<span style="color: #800080;">3</span><span style="color: #000000;">;
    SERVICE_RUNNING             </span>= $<span style="color: #800080;">4</span><span style="color: #000000;">;
    SERVICE_CONTINUE_PENDING    </span>= $<span style="color: #800080;">5</span><span style="color: #000000;">;
    SERVICE_PAUSE_PENDING       </span>= $<span style="color: #800080;">6</span><span style="color: #000000;">;
    SERVICE_PAUSED              </span>= $<span style="color: #800080;">7</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> #######################################################################################</span><span style="color: #008000;">
//</span><span style="color: #008000;"> nt based service utilities</span><span style="color: #008000;">
//</span><span style="color: #008000;"> #######################################################################################</span>

<span style="color: #0000ff;">function</span> OpenSCManager(lpMachineName, lpDatabaseName: <span style="color: #0000ff;">string</span><span style="color: #000000;">; dwDesiredAccess :cardinal): HANDLE;
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">OpenSCManagerA@advapi32.dll stdcall</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span> OpenService(hSCManager :HANDLE;lpServiceName: <span style="color: #0000ff;">string</span><span style="color: #000000;">; dwDesiredAccess :cardinal): HANDLE;
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">OpenServiceA@advapi32.dll stdcall</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> CloseServiceHandle(hSCObject :HANDLE): boolean;
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">CloseServiceHandle@advapi32.dll stdcall</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span> CreateService(hSCManager :HANDLE;lpServiceName, lpDisplayName: <span style="color: #0000ff;">string</span>;dwDesiredAccess,dwServiceType,dwStartType,dwErrorControl: cardinal;lpBinaryPathName,lpLoadOrderGroup: String; lpdwTagId : cardinal;lpDependencies,lpServiceStartName,lpPassword :<span style="color: #0000ff;">string</span><span style="color: #000000;">): cardinal;
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">CreateServiceA@advapi32.dll stdcall</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> DeleteService(hService :HANDLE): boolean;
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">DeleteService@advapi32.dll stdcall</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> StartNTService(hService :HANDLE;dwNumServiceArgs : cardinal;lpServiceArgVectors : cardinal) : boolean;
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">StartServiceA@advapi32.dll stdcall</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span> ControlService(hService :HANDLE; dwControl :cardinal;<span style="color: #0000ff;">var</span><span style="color: #000000;"> ServiceStatus :SERVICE_STATUS) : boolean;
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">ControlService@advapi32.dll stdcall</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span> QueryServiceStatus(hService :HANDLE;<span style="color: #0000ff;">var</span><span style="color: #000000;"> ServiceStatus :SERVICE_STATUS) : boolean;
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">QueryServiceStatus@advapi32.dll stdcall</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> QueryServiceStatusEx(hService :HANDLE;ServiceStatus :SERVICE_STATUS) : boolean;
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">QueryServiceStatus@advapi32.dll stdcall</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> OpenServiceManager() : HANDLE;
</span><span style="color: #0000ff;">begin</span>
    <span style="color: #0000ff;">if</span> UsingWinNT() = true <span style="color: #0000ff;">then</span>
    <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        Result :</span>= OpenSCManager(<span style="color: #800000;">''</span>,<span style="color: #800000;">'</span><span style="color: #800000;">ServicesActive</span><span style="color: #800000;">'</span><span style="color: #000000;">,SC_MANAGER_ALL_ACCESS);
        </span><span style="color: #0000ff;">if</span> Result = <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span><span style="color: #000000;">
            MsgBox(</span><span style="color: #800000;">'</span><span style="color: #800000;">the servicemanager is not available</span><span style="color: #800000;">'</span><span style="color: #000000;">, mbError, MB_OK)
    </span><span style="color: #0000ff;">end</span>
    <span style="color: #0000ff;">else</span>
    <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        MsgBox(</span><span style="color: #800000;">'</span><span style="color: #800000;">only nt based systems support services</span><span style="color: #800000;">'</span><span style="color: #000000;">, mbError, MB_OK)
        Result :</span>= <span style="color: #800080;">0</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">end</span>
<span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span> IsServiceInstalled(ServiceName: <span style="color: #0000ff;">string</span><span style="color: #000000;">) : boolean;
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    hSCM    : HANDLE;
    hService: HANDLE;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    hSCM :</span>=<span style="color: #000000;"> OpenServiceManager();
    Result :</span>=<span style="color: #000000;"> false;
    </span><span style="color: #0000ff;">if</span> hSCM &lt;&gt; <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        hService :</span>=<span style="color: #000000;"> OpenService(hSCM,ServiceName,SERVICE_QUERY_CONFIG);
        </span><span style="color: #0000ff;">if</span> hService &lt;&gt; <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
            Result :</span>=<span style="color: #000000;"> true;
            CloseServiceHandle(hService)
        </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
        CloseServiceHandle(hSCM)
    </span><span style="color: #0000ff;">end</span>
<span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span> InstallService(FileName, ServiceName, DisplayName, Description : <span style="color: #0000ff;">string</span><span style="color: #000000;">;ServiceType,StartType :cardinal) : boolean;
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    hSCM    : HANDLE;
    hService: HANDLE;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    hSCM :</span>=<span style="color: #000000;"> OpenServiceManager();
    Result :</span>=<span style="color: #000000;"> false;
    </span><span style="color: #0000ff;">if</span> hSCM &lt;&gt; <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        hService :</span>= CreateService(hSCM,ServiceName,DisplayName,SERVICE_ALL_ACCESS,ServiceType,StartType,<span style="color: #800080;">0</span>,FileName,<span style="color: #800000;">''</span>,<span style="color: #800080;">0</span>,<span style="color: #800000;">''</span>,<span style="color: #800000;">''</span>,<span style="color: #800000;">''</span><span style="color: #000000;">);
        </span><span style="color: #0000ff;">if</span> hService &lt;&gt; <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
            Result :</span>=<span style="color: #000000;"> true;
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> Win2K &amp; WinXP supports aditional description text for services</span>
            <span style="color: #0000ff;">if</span> Description&lt;&gt; <span style="color: #800000;">''</span> <span style="color: #0000ff;">then</span><span style="color: #000000;">
                RegWriteStringValue(HKLM,</span><span style="color: #800000;">'</span><span style="color: #800000;">System\CurrentControlSet\Services</span><span style="color: #800000;">'</span> + ServiceName,<span style="color: #800000;">'</span><span style="color: #800000;">Description</span><span style="color: #800000;">'</span><span style="color: #000000;">,Description);
            CloseServiceHandle(hService)
        </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
        CloseServiceHandle(hSCM)
    </span><span style="color: #0000ff;">end</span>
<span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span> RemoveService(ServiceName: <span style="color: #0000ff;">string</span><span style="color: #000000;">) : boolean;
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    hSCM    : HANDLE;
    hService: HANDLE;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    hSCM :</span>=<span style="color: #000000;"> OpenServiceManager();
    Result :</span>=<span style="color: #000000;"> false;
    </span><span style="color: #0000ff;">if</span> hSCM &lt;&gt; <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        hService :</span>=<span style="color: #000000;"> OpenService(hSCM,ServiceName,SERVICE_DELETE);
        </span><span style="color: #0000ff;">if</span> hService &lt;&gt; <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
            Result :</span>=<span style="color: #000000;"> DeleteService(hService);
            CloseServiceHandle(hService)
        </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
        CloseServiceHandle(hSCM)
    </span><span style="color: #0000ff;">end</span>
<span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span> StartService(ServiceName: <span style="color: #0000ff;">string</span><span style="color: #000000;">) : boolean;
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    hSCM    : HANDLE;
    hService: HANDLE;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    hSCM :</span>=<span style="color: #000000;"> OpenServiceManager();
    Result :</span>=<span style="color: #000000;"> false;
    </span><span style="color: #0000ff;">if</span> hSCM &lt;&gt; <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        hService :</span>=<span style="color: #000000;"> OpenService(hSCM,ServiceName,SERVICE_START);
        </span><span style="color: #0000ff;">if</span> hService &lt;&gt; <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
            Result :</span>= StartNTService(hService,<span style="color: #800080;">0</span>,<span style="color: #800080;">0</span><span style="color: #000000;">);
            CloseServiceHandle(hService)
        </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
        CloseServiceHandle(hSCM)
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span> StopService(ServiceName: <span style="color: #0000ff;">string</span><span style="color: #000000;">) : boolean;
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    hSCM    : HANDLE;
    hService: HANDLE;
    Status  : SERVICE_STATUS;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    hSCM :</span>=<span style="color: #000000;"> OpenServiceManager();
    Result :</span>=<span style="color: #000000;"> false;
    </span><span style="color: #0000ff;">if</span> hSCM &lt;&gt; <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        hService :</span>=<span style="color: #000000;"> OpenService(hSCM,ServiceName,SERVICE_STOP);
        </span><span style="color: #0000ff;">if</span> hService &lt;&gt; <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
            Result :</span>=<span style="color: #000000;"> ControlService(hService,SERVICE_CONTROL_STOP,Status);
            CloseServiceHandle(hService)
        </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
        CloseServiceHandle(hSCM)
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span> IsServiceRunning(ServiceName: <span style="color: #0000ff;">string</span><span style="color: #000000;">) : boolean;
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    hSCM    : HANDLE;
    hService: HANDLE;
    Status  : SERVICE_STATUS;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    hSCM :</span>=<span style="color: #000000;"> OpenServiceManager();
    Result :</span>=<span style="color: #000000;"> false;
    </span><span style="color: #0000ff;">if</span> hSCM &lt;&gt; <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        hService :</span>=<span style="color: #000000;"> OpenService(hSCM,ServiceName,SERVICE_QUERY_STATUS);
        </span><span style="color: #0000ff;">if</span> hService &lt;&gt; <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span>
            <span style="color: #0000ff;">if</span> QueryServiceStatus(hService,Status) <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
                Result :</span>=(Status.dwCurrentState =<span style="color: #000000;"> SERVICE_RUNNING)
            </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
            CloseServiceHandle(hService)
            </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
        CloseServiceHandle(hSCM)
    </span><span style="color: #0000ff;">end</span>
<span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> #######################################################################################</span><span style="color: #008000;">
//</span><span style="color: #008000;"> create an entry in the services file</span><span style="color: #008000;">
//</span><span style="color: #008000;"> #######################################################################################</span>
<span style="color: #0000ff;">function</span> SetupService(service, port, comment: <span style="color: #0000ff;">string</span><span style="color: #000000;">) : boolean;
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    filename    : </span><span style="color: #0000ff;">string</span><span style="color: #000000;">;
    s           : </span><span style="color: #0000ff;">string</span><span style="color: #000000;">;
    lines       : TArrayOfString;
    n           : longint;
    i           : longint;
    errcode     : integer;
    servnamlen  : integer;
    error       : boolean;
</span><span style="color: #0000ff;">begin</span>
    <span style="color: #0000ff;">if</span> UsingWinNT() = true <span style="color: #0000ff;">then</span><span style="color: #000000;">
        filename :</span>= ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">{sys}\drivers\etc\services</span><span style="color: #800000;">'</span><span style="color: #000000;">)
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
        filename :</span>= ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">{win}\services</span><span style="color: #800000;">'</span><span style="color: #000000;">);

    </span><span style="color: #0000ff;">if</span> LoadStringsFromFile(filename,lines) = true <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        Result      :</span>=<span style="color: #000000;"> true;
        n           :</span>= GetArrayLength(lines) - <span style="color: #800080;">1</span><span style="color: #000000;">;
        servnamlen  :</span>=<span style="color: #000000;"> Length(service);
        error       :</span>=<span style="color: #000000;"> false;

        </span><span style="color: #0000ff;">for</span> i:=<span style="color: #800080;">0</span> <span style="color: #0000ff;">to</span> n <span style="color: #0000ff;">do</span> <span style="color: #0000ff;">begin</span>
            <span style="color: #0000ff;">if</span> Copy(lines[i],<span style="color: #800080;">1</span>,<span style="color: #800080;">1</span>) &lt;&gt; <span style="color: #800000;">'</span><span style="color: #800000;">#</span><span style="color: #800000;">'</span> <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
                s :</span>= Copy(lines[i],<span style="color: #800080;">1</span><span style="color: #000000;">,servnamlen);
                </span><span style="color: #0000ff;">if</span> CompareText(s,service) = <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span><span style="color: #000000;">
                    exit; </span><span style="color: #008000;">//</span><span style="color: #008000;"> found service-entry</span>

                <span style="color: #0000ff;">if</span> Pos(port,lines[i]) &gt; <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
                    error :</span>=<span style="color: #000000;"> true;
                    lines[i] :</span>= <span style="color: #800000;">'</span><span style="color: #800000;">#</span><span style="color: #800000;">'</span> + lines[i] + <span style="color: #800000;">'</span><span style="color: #800000;">   # disabled because collision with  </span><span style="color: #800000;">'</span> + service + <span style="color: #800000;">'</span><span style="color: #800000;"> service</span><span style="color: #800000;">'</span><span style="color: #000000;">;
                </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
            </span><span style="color: #0000ff;">end</span>
            <span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> CompareText(Copy(lines[i],<span style="color: #800080;">2</span>,servnamlen),service) = <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span>
                <span style="color: #008000;">//</span><span style="color: #008000;"> service-entry was disabled</span>
                Delete(lines[i],<span style="color: #800080;">1</span>,<span style="color: #800080;">1</span><span style="color: #000000;">);
                Result :</span>=<span style="color: #000000;"> SaveStringsToFile(filename,lines,false);
                exit;
            </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

        </span><span style="color: #0000ff;">if</span> error = true <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span>
            <span style="color: #008000;">//</span><span style="color: #008000;"> save disabled entries</span>
            <span style="color: #0000ff;">if</span> SaveStringsToFile(filename,lines,false) = false <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
                Result :</span>=<span style="color: #000000;"> false;
                exit;
            </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> create new service entry</span>
        s := service + <span style="color: #800000;">'</span>       <span style="color: #800000;">'</span> + port + <span style="color: #800000;">'</span><span style="color: #800000;">           # </span><span style="color: #800000;">'</span> + comment + #<span style="color: #800080;">13</span>#<span style="color: #800080;">10</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">if</span> SaveStringToFile(filename,s,true) = false <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
            Result :</span>=<span style="color: #000000;"> false;
            exit;
        </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

        </span><span style="color: #0000ff;">if</span> error = true <span style="color: #0000ff;">then</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
            MsgBox(</span><span style="color: #800000;">'</span><span style="color: #800000;">the </span><span style="color: #800000;">'</span> + service + <span style="color: #800000;">'</span><span style="color: #800000;"> port was already used. The old service is disabled now. You should check the services file manually now.</span><span style="color: #800000;">'</span><span style="color: #000000;">,mbInformation,MB_OK);
            </span><span style="color: #008000;">//</span><span style="color: #008000;">InstExec('notepad.exe',filename,GetCurrentDir(),true,false,SW_SHOWNORMAL,errcode);</span>
        <span style="color: #0000ff;">end</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">end</span>
    <span style="color: #0000ff;">else</span><span style="color: #000000;">
        Result :</span>=<span style="color: #000000;"> false;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> #######################################################################################</span><span style="color: #008000;">
//</span><span style="color: #008000;"> version functions</span><span style="color: #008000;">
//</span><span style="color: #008000;"> #######################################################################################</span>
<span style="color: #0000ff;">function</span> CheckVersion(Filename : <span style="color: #0000ff;">string</span><span style="color: #000000;">;hh,hl,lh,ll : integer) : boolean;
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    VersionMS   : cardinal;
    VersionLS   : cardinal;
    CheckMS     : cardinal;
    CheckLS     : cardinal;
</span><span style="color: #0000ff;">begin</span>
    <span style="color: #0000ff;">if</span> GetVersionNumbers(Filename,VersionMS,VersionLS) = false <span style="color: #0000ff;">then</span><span style="color: #000000;">
        Result :</span>=<span style="color: #000000;"> false
    </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        CheckMS :</span>= (hh <span style="color: #0000ff;">shl</span> $<span style="color: #800080;">10</span>) <span style="color: #0000ff;">or</span><span style="color: #000000;"> hl;
        CheckLS :</span>= (lh <span style="color: #0000ff;">shl</span> $<span style="color: #800080;">10</span>) <span style="color: #0000ff;">or</span><span style="color: #000000;"> ll;
        Result :</span>= (VersionMS &gt; CheckMS) <span style="color: #0000ff;">or</span> ((VersionMS = CheckMS) <span style="color: #0000ff;">and</span> (VersionLS &gt;=<span style="color: #000000;"> CheckLS));
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> Some examples for version checking</span>
<span style="color: #0000ff;">function</span><span style="color: #000000;"> NeedShellFolderUpdate() : boolean;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    Result :</span>= CheckVersion(<span style="color: #800000;">'</span><span style="color: #800000;">ShFolder.dll</span><span style="color: #800000;">'</span>,<span style="color: #800080;">5</span>,<span style="color: #800080;">50</span>,<span style="color: #800080;">4027</span>,<span style="color: #800080;">300</span>) =<span style="color: #000000;"> false;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> NeedVCRedistUpdate() : boolean;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    Result :</span>= (CheckVersion(<span style="color: #800000;">'</span><span style="color: #800000;">mfc42.dll</span><span style="color: #800000;">'</span>,<span style="color: #800080;">6</span>,<span style="color: #800080;">0</span>,<span style="color: #800080;">8665</span>,<span style="color: #800080;">0</span>) =<span style="color: #000000;"> false)
        </span><span style="color: #0000ff;">or</span> (CheckVersion(<span style="color: #800000;">'</span><span style="color: #800000;">msvcrt.dll</span><span style="color: #800000;">'</span>,<span style="color: #800080;">6</span>,<span style="color: #800080;">0</span>,<span style="color: #800080;">8797</span>,<span style="color: #800080;">0</span>) =<span style="color: #000000;"> false)
        </span><span style="color: #0000ff;">or</span> (CheckVersion(<span style="color: #800000;">'</span><span style="color: #800000;">comctl32.dll</span><span style="color: #800000;">'</span>,<span style="color: #800080;">5</span>,<span style="color: #800080;">80</span>,<span style="color: #800080;">2614</span>,<span style="color: #800080;">3600</span>) =<span style="color: #000000;"> false);
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> NeedHTMLHelpUpdate() : boolean;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    Result :</span>= CheckVersion(<span style="color: #800000;">'</span><span style="color: #800000;">hh.exe</span><span style="color: #800000;">'</span>,<span style="color: #800080;">4</span>,<span style="color: #800080;">72</span>,<span style="color: #800080;">0</span>,<span style="color: #800080;">0</span>) =<span style="color: #000000;"> false;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> NeedWinsockUpdate() : boolean;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    Result :</span>= (UsingWinNT() = false) <span style="color: #0000ff;">and</span> (CheckVersion(<span style="color: #800000;">'</span><span style="color: #800000;">mswsock.dll</span><span style="color: #800000;">'</span>,<span style="color: #800080;">4</span>,<span style="color: #800080;">10</span>,<span style="color: #800080;">0</span>,<span style="color: #800080;">1656</span>) =<span style="color: #000000;"> false);
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> NeedDCOMUpdate() : boolean;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    Result :</span>= (UsingWinNT() = false) <span style="color: #0000ff;">and</span> (CheckVersion(<span style="color: #800000;">'</span><span style="color: #800000;">oleaut32.dll</span><span style="color: #800000;">'</span>,<span style="color: #800080;">2</span>,<span style="color: #800080;">30</span>,<span style="color: #800080;">0</span>,<span style="color: #800080;">0</span>) =<span style="color: #000000;"> false);
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> #######################################################################################</span><span style="color: #008000;">
//</span><span style="color: #008000;"> Replace substring in a string functions</span><span style="color: #008000;">
//</span><span style="color: #008000;"> #######################################################################################</span>
<span style="color: #0000ff;">procedure</span><span style="color: #000000;"> FileReplace(SrcFile, sFrom, sTo: String);
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    FileContent: String;
</span><span style="color: #0000ff;">begin</span>
    <span style="color: #008000;">//</span><span style="color: #008000;">Load srcfile to a string</span>
<span style="color: #000000;">    LoadStringFromFile(SrcFile, FileContent);
    </span><span style="color: #008000;">//</span><span style="color: #008000;">Replace Fraomstring by toString in file string content</span>
    StringChange (sTo,<span style="color: #800000;">'</span><span style="color: #800000;">/</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">\</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    StringChange (FileContent, sFrom, sTo);
    </span><span style="color: #008000;">//</span><span style="color: #008000;">Replace old content srcfile by the new content</span>
<span style="color: #000000;">    DeleteFile(SrcFile);
    SaveStringToFile(SrcFile,FileContent, True);
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> #######################################################################################</span><span style="color: #008000;">
//</span><span style="color: #008000;"> Replace in file functions</span><span style="color: #008000;">
//</span><span style="color: #008000;"> #######################################################################################</span>
<span style="color: #0000ff;">procedure</span><span style="color: #000000;"> FileWrite(SrcFile, sFrom, sTo: String);
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    FileContent: String;
</span><span style="color: #0000ff;">begin</span>
    <span style="color: #008000;">//</span><span style="color: #008000;">Load srcfile to a string</span>
<span style="color: #000000;">    LoadStringFromFile(SrcFile, FileContent);
    </span><span style="color: #008000;">//</span><span style="color: #008000;">Replace Fraomstring by toString in file string content</span>
    <span style="color: #008000;">//</span><span style="color: #008000;">StringChange (sTo,'/', '\');</span>
<span style="color: #000000;">    StringChange (FileContent, sFrom, sTo);
    </span><span style="color: #008000;">//</span><span style="color: #008000;">Replace old content srcfile by the new content</span>
<span style="color: #000000;">    DeleteFile(SrcFile);
    SaveStringToFile(SrcFile,FileContent, True);
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> #######################################################################################</span><span style="color: #008000;">
//</span><span style="color: #008000;"> Custumized page for apache config</span><span style="color: #008000;">
//</span><span style="color: #008000;"> #######################################################################################</span>
<span style="color: #0000ff;">procedure</span><span style="color: #000000;"> CreateTheWizardPages;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> variables locales</span>
<span style="color: #0000ff;">var</span><span style="color: #000000;">
    Lbl: TLabel;
    Page: TWizardPage;
    Edit: TEdit;
    PortNbr: String;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> boites</span>
<span style="color: #0000ff;">begin</span><span style="color: #000000;">
    Page :</span>= CreateCustomPage(wpSelectComponents, <span style="color: #800000;">'</span><span style="color: #800000;">Apache configuration</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">Please enter your parameter for the apache server (Default is 80)</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    Lbl :</span>=<span style="color: #000000;"> TLabel.Create(Page);
    Lbl.Top :</span>= ScaleY(<span style="color: #800080;">11</span><span style="color: #000000;">);
    Lbl.Caption :</span>= <span style="color: #800000;">'</span><span style="color: #800000;">Apache server port :</span><span style="color: #800000;">'</span><span style="color: #000000;">;
    Lbl.AutoSize :</span>=<span style="color: #000000;"> True;
    Lbl.Parent :</span>=<span style="color: #000000;"> Page.Surface;

    Edit :</span>=<span style="color: #000000;"> TEdit.Create(Page);
    Edit.Top :</span>= ScaleY(<span style="color: #800080;">8</span><span style="color: #000000;">);
    Edit.Left :</span>= Lbl.Left + ScaleX(<span style="color: #800080;">70</span><span style="color: #000000;">);
    Edit.Width :</span>= Page.SurfaceWidth <span style="color: #0000ff;">div</span> <span style="color: #800080;">2</span> - ScaleX(<span style="color: #800080;">8</span><span style="color: #000000;">);
    Edit.Text :</span>=<span style="color: #000000;"> PortNbr;
    Edit.Text :</span>= <span style="color: #800000;">'</span><span style="color: #800000;">80</span><span style="color: #800000;">'</span><span style="color: #000000;">;
    Edit.Parent :</span>=<span style="color: #000000;"> Page.Surface;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> #######################################################################################</span><span style="color: #008000;">
//</span><span style="color: #008000;"> Custumized page for Password enter</span><span style="color: #008000;">
//</span><span style="color: #008000;"> #######################################################################################</span>
<span style="color: #0000ff;">procedure</span><span style="color: #000000;"> CreateTheWizardPagesPwd;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> variables locales</span>
<span style="color: #0000ff;">var</span><span style="color: #000000;">
    PasWd: TLabel;
    PagePwd: TWizardPage;
    EditPw: TEdit;
    </span><span style="color: #008000;">//</span><span style="color: #008000;">MailHostName: String;</span><span style="color: #008000;">
//</span><span style="color: #008000;"> boites</span>
<span style="color: #0000ff;">begin</span><span style="color: #000000;">
    PagePwd :</span>= CreateCustomPage(wpSelectComponents, <span style="color: #800000;">'</span><span style="color: #800000;">Password for the data base user</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">Please enter the password for the data base</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    PasWd :</span>=<span style="color: #000000;"> TLabel.Create(PagePwd);
    PasWd.Top :</span>= ScaleY(<span style="color: #800080;">11</span><span style="color: #000000;">);
    PasWd.Caption :</span>= <span style="color: #800000;">'</span><span style="color: #800000;">PassWord : </span><span style="color: #800000;">'</span><span style="color: #000000;">;
    PasWd.AutoSize :</span>=<span style="color: #000000;"> True;
    PasWd.Parent :</span>=<span style="color: #000000;"> PagePwd.Surface;

    EditPw :</span>=<span style="color: #000000;"> TEdit.Create(PagePwd);
    EditPw.Top :</span>= ScaleY(<span style="color: #800080;">8</span><span style="color: #000000;">);
    EditPw.Left :</span>= PasWd.Left + ScaleX(<span style="color: #800080;">70</span><span style="color: #000000;">);
    EditPw.Width :</span>= PagePwd.SurfaceWidth <span style="color: #0000ff;">div</span> <span style="color: #800080;">2</span> - ScaleX(<span style="color: #800080;">8</span><span style="color: #000000;">);
    EditPw.Parent :</span>=<span style="color: #000000;"> PagePwd.Surface;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> #######################################################################################</span><span style="color: #008000;">
//</span><span style="color: #008000;"> Custumized page for Enter the path of the backup file</span><span style="color: #008000;">
//</span><span style="color: #008000;"> #######################################################################################</span>
<span style="color: #0000ff;">procedure</span><span style="color: #000000;"> CreateTheWizardPagesBkpDir;
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    PageBkpDir: TInputDirWizardPage;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> boites</span>
<span style="color: #0000ff;">begin</span><span style="color: #000000;">
    PageBkpDir :</span>= CreateInputDirPage(wpSelectDir,<span style="color: #800000;">'</span><span style="color: #800000;">Select Backup Data Directory</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">Where should Backup data files be installed?</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">Select the folder in which Setup should copy backup data files, then click Next.</span><span style="color: #800000;">'</span>, False, <span style="color: #800000;">''</span><span style="color: #000000;">);
    PageBkpDir.Add(</span><span style="color: #800000;">''</span><span style="color: #000000;">);
    PageBkpDir.Values[</span><span style="color: #800080;">0</span>] := ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">{userdesktop}\dbBackup</span><span style="color: #800000;">'</span><span style="color: #000000;">);
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> #######################################################################################</span><span style="color: #008000;">
//</span><span style="color: #008000;"> Custumized page for Time zone enter</span><span style="color: #008000;">
//</span><span style="color: #008000;"> #######################################################################################</span>
<span style="color: #0000ff;">procedure</span><span style="color: #000000;"> CreateTheWizardPagesTimeZone;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> variables locales</span>
<span style="color: #0000ff;">var</span><span style="color: #000000;">
    Panel: TPanel;
    PageTimeZone: TWizardPage;
    ListBTimeZone: TNewListBox;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> boites</span>
<span style="color: #0000ff;">begin</span><span style="color: #000000;">
    PageTimeZone :</span>= CreateCustomPage(wpWelcome, <span style="color: #800000;">'</span><span style="color: #800000;">Time zone of your location</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">Please choose your time zone</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    Panel :</span>=<span style="color: #000000;"> TPanel.Create(PageTimeZone);
    Panel.Width :</span>= PageTimeZone.SurfaceWidth <span style="color: #0000ff;">div</span> <span style="color: #800080;">2</span> - ScaleX(<span style="color: #800080;">8</span><span style="color: #000000;">);
    Panel.Left :</span>=  PageTimeZone.SurfaceWidth -<span style="color: #000000;"> Panel.Width;
    Panel.Caption :</span>= <span style="color: #800000;">'</span><span style="color: #800000;">TPanel</span><span style="color: #800000;">'</span><span style="color: #000000;">;
    Panel.Color :</span>=<span style="color: #000000;"> clWindow;
    Panel.ParentBackground :</span>=<span style="color: #000000;"> False;
    Panel.Parent :</span>=<span style="color: #000000;"> PageTimeZone.Surface;

    ListBTimeZone :</span>=<span style="color: #000000;"> TNewListBox.Create(PageTimeZone);
    ListBTimeZone.Width :</span>=<span style="color: #000000;"> PageTimeZone.SurfaceWidth;
    ListBTimeZone.Height :</span>= ScaleY(<span style="color: #800080;">200</span><span style="color: #000000;">);
    ListBTimeZone.Parent :</span>=<span style="color: #000000;"> PageTimeZone.Surface;
    ListBTimeZone.Items.Add(</span><span style="color: #800000;">'</span><span style="color: #800000;">Etc/UTC</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    ListBTimeZone.Items.Add(</span><span style="color: #800000;">'</span><span style="color: #800000;">Europe/Paris</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    ListBTimeZone.ItemIndex :</span>= <span style="color: #800080;">2</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> Initialisation</span>
<span style="color: #0000ff;">procedure</span><span style="color: #000000;"> InitializeWizard();
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    CreateTheWizardPages;
    CreateTheWizardPagesTimeZone;
    CreateTheWizardPagesPwd;
    CreateTheWizardPagesBkpDir;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> #######################################################################################</span><span style="color: #008000;">
//</span><span style="color: #008000;"> Function to stop and delete de service by uninstallation procedur</span><span style="color: #008000;">
//</span><span style="color: #008000;"> #######################################################################################</span>
<span style="color: #0000ff;">procedure</span><span style="color: #000000;"> CurUninstallStepChanged(CurStep: TUninstallStep);
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    ErrorCode: Integer;
</span><span style="color: #0000ff;">begin</span>
    <span style="color: #0000ff;">if</span> CurStep = usUninstall <span style="color: #0000ff;">then</span>
    <span style="color: #0000ff;">begin</span>
        <span style="color: #008000;">//</span><span style="color: #008000;">Uninstall process</span>
        ShellExec(<span style="color: #800000;">'</span><span style="color: #800000;">open</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">taskkill.exe</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">/f /im MyApplicationService.exe</span><span style="color: #800000;">'</span>,<span style="color: #800000;">''</span><span style="color: #000000;">,SW_HIDE,ewNoWait,ErrorCode);
        ShellExec(</span><span style="color: #800000;">'</span><span style="color: #800000;">open</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">taskkill.exe</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">/f /im httpd.exe</span><span style="color: #800000;">'</span>,<span style="color: #800000;">''</span><span style="color: #000000;">,SW_HIDE,ewNoWait,ErrorCode);
        ShellExec(</span><span style="color: #800000;">'</span><span style="color: #800000;">open</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">taskkill.exe</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">/f /im mysqld.exe</span><span style="color: #800000;">'</span>,<span style="color: #800000;">''</span><span style="color: #000000;">,SW_HIDE,ewNoWait,ErrorCode);

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> stop all affected services</span>
        StopService(<span style="color: #800000;">'</span><span style="color: #800000;">MyApplicationService</span><span style="color: #800000;">'</span><span style="color: #000000;">);
        StopService(</span><span style="color: #800000;">'</span><span style="color: #800000;">MySqld</span><span style="color: #800000;">'</span><span style="color: #000000;">);
        StopService(</span><span style="color: #800000;">'</span><span style="color: #800000;">Apache</span><span style="color: #800000;">'</span><span style="color: #000000;">);

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> remove all affected services</span>
        RemoveService(<span style="color: #800000;">'</span><span style="color: #800000;">MyApplicationService</span><span style="color: #800000;">'</span><span style="color: #000000;">);
        RemoveService(</span><span style="color: #800000;">'</span><span style="color: #800000;">MySqld</span><span style="color: #800000;">'</span><span style="color: #000000;">);
        RemoveService(</span><span style="color: #800000;">'</span><span style="color: #800000;">Apache</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> #######################################################################################</span><span style="color: #008000;">
//</span><span style="color: #008000;"> Function to check and replace the string in the file at the end of the installation</span><span style="color: #008000;">
//</span><span style="color: #008000;"> #######################################################################################</span>
<span style="color: #0000ff;">procedure</span><span style="color: #000000;"> CurStepChanged(CurStep: TSetupStep);
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    ErrorCode: Integer;
    WorkingDir:   String;
    PathOfDir: String;
</span><span style="color: #0000ff;">begin</span>
    <span style="color: #008000;">//</span><span style="color: #008000;">juste apr&eacute;s installation</span>
    <span style="color: #0000ff;">if</span> CurStep = ssPostInstall <span style="color: #0000ff;">then</span>
    <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        PathOfDir :</span>=<span style="color: #000000;"> GetShortName(PathOfDir2);
        FileReplace(ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{app}\create_db.sql</span><span style="color: #800000;">'</span>), <span style="color: #800000;">'</span><span style="color: #800000;">@@Pwd@@</span><span style="color: #800000;">'</span><span style="color: #000000;">, EditPw.Text);

        FileReplace(ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{app}\webserver\bin\apache\Apache2.2.22\conf\httpd.conf</span><span style="color: #800000;">'</span>), <span style="color: #800000;">'</span><span style="color: #800000;">@@Port@@</span><span style="color: #800000;">'</span><span style="color: #000000;">, PortNbr);
        FileReplace(ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{app}\webserver\bin\apache\Apache2.2.22\conf\httpd.conf</span><span style="color: #800000;">'</span>), <span style="color: #800000;">'</span><span style="color: #800000;">@@Path@@</span><span style="color: #800000;">'</span>, PathOfDir+<span style="color: #800000;">'</span><span style="color: #800000;">\webserver</span><span style="color: #800000;">'</span><span style="color: #000000;">);
        FileReplace(ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{app}\webserver\bin\apache\Apache2.2.22\bin\php.ini</span><span style="color: #800000;">'</span>), <span style="color: #800000;">'</span><span style="color: #800000;">@@Path@@</span><span style="color: #800000;">'</span>, PathOfDir+<span style="color: #800000;">'</span><span style="color: #800000;">\webserver</span><span style="color: #800000;">'</span><span style="color: #000000;">);
        FileWrite(ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{app}\webserver\bin\apache\Apache2.2.22\bin\php.ini</span><span style="color: #800000;">'</span>), <span style="color: #800000;">'</span><span style="color: #800000;">@@TimeZone@@</span><span style="color: #800000;">'</span><span style="color: #000000;">, TimeZone);

        FileReplace(ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{app}\webserver\bin\mysql\mysql5.5.24\my.ini</span><span style="color: #800000;">'</span>), <span style="color: #800000;">'</span><span style="color: #800000;">@@Path@@</span><span style="color: #800000;">'</span>, PathOfDir+<span style="color: #800000;">'</span><span style="color: #800000;">\webserver</span><span style="color: #800000;">'</span><span style="color: #000000;">);
        FileReplace(ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{app}\webserver\bin\mysql\mysql5.5.24\bin\dbexport.bat</span><span style="color: #800000;">'</span>), <span style="color: #800000;">'</span><span style="color: #800000;">@@Path@@</span><span style="color: #800000;">'</span><span style="color: #000000;">, PathOfBackupDir);
        FileReplace(ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{app}\webserver\bin\mysql\mysql5.5.24\bin\create_db.bat</span><span style="color: #800000;">'</span>), <span style="color: #800000;">'</span><span style="color: #800000;">@@Path@@</span><span style="color: #800000;">'</span>, PathOfDir + <span style="color: #800000;">'</span><span style="color: #800000;">\webserver\bin\mysql\mysql5.5.24</span><span style="color: #800000;">'</span><span style="color: #000000;">);
        FileReplace(ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{app}\webserver\bin\mysql\mysql5.5.24\bin\create_db.bat</span><span style="color: #800000;">'</span>), <span style="color: #800000;">'</span><span style="color: #800000;">@@PathOfDir@@</span><span style="color: #800000;">'</span><span style="color: #000000;">, PathOfDir);

        FileReplace(ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{app}\webserver\bin\php\php5.4.3\php.ini</span><span style="color: #800000;">'</span>), <span style="color: #800000;">'</span><span style="color: #800000;">@@Path@@</span><span style="color: #800000;">'</span>, PathOfDir+<span style="color: #800000;">'</span><span style="color: #800000;">\webserver</span><span style="color: #800000;">'</span><span style="color: #000000;">);
        FileReplace(ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{app}\webserver\bin\php\php5.4.3\phpForApache.ini</span><span style="color: #800000;">'</span>), <span style="color: #800000;">'</span><span style="color: #800000;">@@Path@@</span><span style="color: #800000;">'</span>, PathOfDir+<span style="color: #800000;">'</span><span style="color: #800000;">\webserver</span><span style="color: #800000;">'</span><span style="color: #000000;">);

        </span><span style="color: #0000ff;">if</span> InstallService(ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">"{app}\webserver\bin\mysql\mysql5.5.24\bin\mysqld.exe" MySqld</span><span style="color: #800000;">'</span>),<span style="color: #800000;">'</span><span style="color: #800000;">MySqld</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">MySqld</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">The mysql service</span><span style="color: #800000;">'</span>,SERVICE_WIN32_OWN_PROCESS,SERVICE_AUTO_START) = true <span style="color: #0000ff;">then</span>
        <span style="color: #0000ff;">begin</span><span style="color: #000000;">
            StartService(</span><span style="color: #800000;">'</span><span style="color: #800000;">MySqld</span><span style="color: #800000;">'</span><span style="color: #000000;">);
            Sleep(</span><span style="color: #800080;">8000</span><span style="color: #000000;">);
        </span><span style="color: #0000ff;">end</span>
        <span style="color: #0000ff;">else</span><span style="color: #000000;">
            MsgBox(</span><span style="color: #800000;">'</span><span style="color: #800000;">MySqld service could not be installed</span><span style="color: #800000;">'</span><span style="color: #000000;">,mbInformation, MB_OK);

        </span><span style="color: #0000ff;">if</span> InstallService(ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">"{app}\webserver\bin\apache\apache2.2.22\bin\httpd.exe" -k runservice</span><span style="color: #800000;">'</span>),<span style="color: #800000;">'</span><span style="color: #800000;">Apache</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">Apache</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">The apache service</span><span style="color: #800000;">'</span>,SERVICE_WIN32_OWN_PROCESS,SERVICE_AUTO_START) = true <span style="color: #0000ff;">then</span>
        <span style="color: #0000ff;">begin</span><span style="color: #000000;">
            StartService(</span><span style="color: #800000;">'</span><span style="color: #800000;">Apache</span><span style="color: #800000;">'</span><span style="color: #000000;">);
            Sleep(</span><span style="color: #800080;">5000</span><span style="color: #000000;">);
        </span><span style="color: #0000ff;">end</span>
        <span style="color: #0000ff;">else</span><span style="color: #000000;">
            MsgBox(</span><span style="color: #800000;">'</span><span style="color: #800000;">Apache service could not be installed</span><span style="color: #800000;">'</span><span style="color: #000000;">,mbInformation, MB_OK);

        </span><span style="color: #0000ff;">if</span> InstallService(ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">"{app}\MyApplicationService.exe"</span><span style="color: #800000;">'</span>),<span style="color: #800000;">'</span><span style="color: #800000;">MyApplicationService</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">MyApplicationService</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">The server</span><span style="color: #800000;">'</span>,SERVICE_WIN32_OWN_PROCESS,SERVICE_AUTO_START) = true <span style="color: #0000ff;">then</span>
        <span style="color: #0000ff;">begin</span><span style="color: #000000;">
            StartService(</span><span style="color: #800000;">'</span><span style="color: #800000;">MyApplicationService</span><span style="color: #800000;">'</span><span style="color: #000000;">);
            Sleep(</span><span style="color: #800080;">5000</span><span style="color: #000000;">);
        </span><span style="color: #0000ff;">end</span>
        <span style="color: #0000ff;">else</span><span style="color: #000000;">
            MsgBox(</span><span style="color: #800000;">'</span><span style="color: #800000;">The MyApplicationService service could not be installed</span><span style="color: #800000;">'</span><span style="color: #000000;">,mbInformation, MB_OK);

    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

    </span><span style="color: #0000ff;">if</span> CurStep = ssInstall <span style="color: #0000ff;">then</span>
    <span style="color: #0000ff;">begin</span>
        <span style="color: #008000;">//</span><span style="color: #008000;">Uninstall process</span>
        ShellExec(<span style="color: #800000;">'</span><span style="color: #800000;">open</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">taskkill.exe</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">/f /im MyApplicationService.exe</span><span style="color: #800000;">'</span>,<span style="color: #800000;">''</span><span style="color: #000000;">,SW_HIDE,ewNoWait,ErrorCode);
        ShellExec(</span><span style="color: #800000;">'</span><span style="color: #800000;">open</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">taskkill.exe</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">/f /im httpd.exe</span><span style="color: #800000;">'</span>,<span style="color: #800000;">''</span><span style="color: #000000;">,SW_HIDE,ewNoWait,ErrorCode);
        ShellExec(</span><span style="color: #800000;">'</span><span style="color: #800000;">open</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">taskkill.exe</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">/f /im mysqld.exe</span><span style="color: #800000;">'</span>,<span style="color: #800000;">''</span><span style="color: #000000;">,SW_HIDE,ewNoWait,ErrorCode);

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> stop all affected services</span>
        StopService(<span style="color: #800000;">'</span><span style="color: #800000;">MyApplicationService</span><span style="color: #800000;">'</span><span style="color: #000000;">);
        StopService(</span><span style="color: #800000;">'</span><span style="color: #800000;">MySqld</span><span style="color: #800000;">'</span><span style="color: #000000;">);
        StopService(</span><span style="color: #800000;">'</span><span style="color: #800000;">Apache</span><span style="color: #800000;">'</span><span style="color: #000000;">);  

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> remove all affected services</span>
        RemoveService(<span style="color: #800000;">'</span><span style="color: #800000;">MyApplicationService</span><span style="color: #800000;">'</span><span style="color: #000000;">);
        RemoveService(</span><span style="color: #800000;">'</span><span style="color: #800000;">MySqld</span><span style="color: #800000;">'</span><span style="color: #000000;">);
        RemoveService(</span><span style="color: #800000;">'</span><span style="color: #800000;">Apache</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

    </span><span style="color: #0000ff;">if</span> CurStep = ssDone <span style="color: #0000ff;">then</span>
    <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        Exec(ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{app}\webserver\bin\mysql\mysql5.5.24\bin\create_db.bat</span><span style="color: #800000;">'</span>),<span style="color: #800000;">''</span>,<span style="color: #800000;">''</span><span style="color: #000000;">, SW_SHOW, ewWaitUntilTerminated, ErrorCode);
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> #######################################################################################</span><span style="color: #008000;">
//</span><span style="color: #008000;"> Function to check the values entered</span><span style="color: #008000;">
//</span><span style="color: #008000;"> #######################################################################################</span>
<span style="color: #0000ff;">function</span><span style="color: #000000;"> NextButtonClick(CurPageID: Integer): Boolean;
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    ErrorCode: Integer;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    Result :</span>=<span style="color: #000000;"> True;
    </span><span style="color: #0000ff;">case</span> CurPageID <span style="color: #0000ff;">of</span><span style="color: #000000;">
        Page.ID:
        </span><span style="color: #0000ff;">begin</span>
            <span style="color: #0000ff;">if</span> (Edit.Text = <span style="color: #800000;">''</span>) <span style="color: #0000ff;">then</span>
            <span style="color: #0000ff;">begin</span><span style="color: #000000;">
                MsgBox(</span><span style="color: #800000;">'</span><span style="color: #800000;">Port number check:</span><span style="color: #800000;">'</span>#<span style="color: #800080;">13</span>#<span style="color: #800080;">13</span> <span style="color: #800000;">'</span><span style="color: #800000;">The port number is empty. The default port &lt;&lt; 80 &gt;&gt; will be applied. Please click on the back button to change if needed </span><span style="color: #800000;">'</span><span style="color: #000000;">, mbError, MB_OK);
                Edit.Text :</span>= <span style="color: #800000;">'</span><span style="color: #800000;">80</span><span style="color: #800000;">'</span><span style="color: #000000;">;
            </span><span style="color: #0000ff;">end</span>
            <span style="color: #0000ff;">else</span>
            <span style="color: #0000ff;">begin</span><span style="color: #000000;">
                Result :</span>=<span style="color: #000000;"> True;
                PortNbr :</span>=<span style="color: #000000;"> Edit.Text;
            </span><span style="color: #0000ff;">end</span>
        <span style="color: #0000ff;">end</span><span style="color: #000000;">;
        </span><span style="color: #008000;">//</span><span style="color: #008000;">End page.id</span>
<span style="color: #000000;">
        PagesEmailSt.ID:
        </span><span style="color: #0000ff;">begin</span>
            <span style="color: #0000ff;">if</span> (EditPwd.Text = EditPwd2.Text) <span style="color: #0000ff;">then</span>
            <span style="color: #0000ff;">begin</span><span style="color: #000000;">
                MailHostName :</span>=<span style="color: #000000;"> EditMailHostName.Text;
                MailUserName :</span>=<span style="color: #000000;"> EditUserName.Text;
                MailPwd :</span>=<span style="color: #000000;"> EditPwd.Text;
                MailFrom :</span>=<span style="color: #000000;"> EditFromMail.Text;
                MailSmtpPort :</span>=<span style="color: #000000;"> EditSmtpPort.Text;
            </span><span style="color: #0000ff;">end</span>
            <span style="color: #0000ff;">else</span>
            <span style="color: #0000ff;">begin</span><span style="color: #000000;">
                MsgBox(</span><span style="color: #800000;">'</span><span style="color: #800000;">Password check:</span><span style="color: #800000;">'</span>#<span style="color: #800080;">13</span>#<span style="color: #800080;">13</span> <span style="color: #800000;">'</span><span style="color: #800000;">The password entered is not the same. Please click on back and check </span><span style="color: #800000;">'</span><span style="color: #000000;">, mbError, MB_OK);
                Result :</span>=<span style="color: #000000;"> false;
            </span><span style="color: #0000ff;">end</span>
        <span style="color: #0000ff;">end</span><span style="color: #000000;">;
        </span><span style="color: #008000;">//</span><span style="color: #008000;">End PagesEmailSt.id</span>

        <span style="color: #008000;">//</span><span style="color: #008000;">Time zone add beginn</span>
<span style="color: #000000;">        PageTimeZone.ID:
        </span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
            Result :</span>=<span style="color: #000000;"> false;
            TimeZone :</span>=<span style="color: #000000;"> ListBTimeZone.Items.Strings[ListBTimeZone.ItemIndex];
        </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
        </span><span style="color: #008000;">//</span><span style="color: #008000;">End time zone add</span>

        <span style="color: #008000;">//</span><span style="color: #008000;">Beginn dir selector</span>
<span style="color: #000000;">        PageBkpDir.ID:
        </span><span style="color: #0000ff;">begin</span>
            <span style="color: #008000;">//</span><span style="color: #008000;">PageBkpDir.Values[0] := ExpandConstant('{userdesktop}\dbBackup');</span>
            PathOfBackupDir := PageBkpDir.Values[<span style="color: #800080;">0</span><span style="color: #000000;">];
        </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

        wpSelectDir:
        </span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
            PathOfDir2 :</span>=<span style="color: #000000;"> WizardDirValue;
            </span><span style="color: #008000;">//</span><span style="color: #008000;">MsgBox('NextButtonClick:' #13#13 'You selected: ''' + PathOfDir + '''.', mbInformation, MB_OK);</span>
        <span style="color: #0000ff;">end</span><span style="color: #000000;">;
        </span><span style="color: #008000;">//</span><span style="color: #008000;">End dir selector</span>
    <span style="color: #0000ff;">end</span>; <span style="color: #008000;">//</span><span style="color: #008000;">End case</span>
    Result :=<span style="color: #000000;"> True;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> GetDataDir(Param: String): String;
</span><span style="color: #0000ff;">begin</span>
    <span style="color: #008000;">//</span><span style="color: #008000;">Return the selected DataDir</span>
    Result := PageBkpDir.Values[<span style="color: #800080;">0</span><span style="color: #000000;">];
</span><span style="color: #0000ff;">end</span>;</pre>
</div>]]></description></item><item><title>inno setup脚本,涵盖了自定义安装界面,调用dll等等应用</title><link>http://www.cnblogs.com/eastson/archive/2015/04/09/4409830.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 09 Apr 2015 07:37:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/04/09/4409830.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #000000;">; Script generated by the Inno Setup 脚本向导.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

; 为1的时候表示定义成试用版本
#define VERSION_TYPE ReadIni(</span><span style="color: #800000;">'</span><span style="color: #800000;">Setup.ini</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">SetupType</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">type</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">0</span><span style="color: #800000;">'</span><span style="color: #000000;">)

#</span><span style="color: #0000ff;">if</span> VERSION_TYPE == "<span style="color: #800080;">2</span><span style="color: #000000;">"
    #define LIVE_VERSION
    #define MyAppName "流媒体系统(PMS)"
    #define MyAppId "1954A698</span>-<span style="color: #800080;">2322</span>-46F1-B732-<span style="color: #000000;">8DDF96693DA5"
    #define MyOutputBaseFilename "live_server_setup"
#elif VERSION_TYPE </span>== "<span style="color: #800080;">1</span><span style="color: #000000;">"
    #define VOD_VERSION
    #define MyAppName "流媒体系统(PMS)"
    #define MyAppId "DA255679</span>-F103-<span style="color: #800080;">4170</span>-8B75-<span style="color: #000000;">B9A7EF4CBC1B"
    #define MyOutputBaseFilename "vod_server_setup"
#</span><span style="color: #0000ff;">else</span><span style="color: #000000;">
    #define FULL_VERSION
    #define MyAppName "流媒体系统(PMS)"
    #define MyAppId "4AC618B5</span>-8C69-4D47-918A-<span style="color: #000000;">261AA895B6D7"
    #define MyOutputBaseFilename "full_server_setup"
#endif

#define RegUrl "http:</span><span style="color: #008000;">//</span><span style="color: #008000;">www.xxx.net"</span>
#define MyAppVersion "<span style="color: #800080;">1.0</span><span style="color: #000000;">"
#define MyAppPublisher "XXX科技有限公司"
#define MyAppURL "http:</span><span style="color: #008000;">//</span><span style="color: #008000;">www.xxx.net"</span>
<span style="color: #000000;">#define MyAppExeName "InstanceConfig.exe"

[Setup]
; NOTE: The value </span><span style="color: #0000ff;">of</span><span style="color: #000000;"> AppId uniquely identifies this application.
; Do </span><span style="color: #0000ff;">not</span> use the same AppId value <span style="color: #0000ff;">in</span> installers <span style="color: #0000ff;">for</span><span style="color: #000000;"> other applications.
; (To generate a new GUID, click Tools </span>|<span style="color: #000000;"> Generate GUID inside the IDE.)
AppId</span>=<span style="color: #008000;">{</span><span style="color: #008000;">{{#MyAppId</span><span style="color: #008000;">}</span><span style="color: #000000;">}
AppMutex</span>=<span style="color: #008000;">{</span><span style="color: #008000;">{{#MyAppId</span><span style="color: #008000;">}</span><span style="color: #000000;">}
AppName</span>=<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppName</span><span style="color: #008000;">}</span><span style="color: #000000;">
AppVersion</span>=<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppVersion</span><span style="color: #008000;">}</span><span style="color: #000000;">
AppPublisher</span>=<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppPublisher</span><span style="color: #008000;">}</span><span style="color: #000000;">
AppPublisherURL</span>=<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppURL</span><span style="color: #008000;">}</span><span style="color: #000000;">
AppSupportURL</span>=<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppURL</span><span style="color: #008000;">}</span><span style="color: #000000;">
AppUpdatesURL</span>=<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppURL</span><span style="color: #008000;">}</span><span style="color: #000000;">
DefaultDirName</span>=<span style="color: #008000;">{</span><span style="color: #008000;">pf</span><span style="color: #008000;">}</span><span style="color: #000000;">\xxx\media server
DefaultGroupName</span>=<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppName</span><span style="color: #008000;">}</span><span style="color: #000000;">
AllowNoIcons</span>=<span style="color: #000000;">yes
LicenseFile</span>=<span style="color: #000000;">license.txt
OutputDir</span>=<span style="color: #000000;">output
OutputBaseFilename</span>=<span style="color: #008000;">{</span><span style="color: #008000;">#MyOutputBaseFilename</span><span style="color: #008000;">}</span><span style="color: #000000;">
SetupIconFile</span>=<span style="color: #000000;">setup.ico
Compression</span>=<span style="color: #000000;">lzma
SolidCompression</span>=<span style="color: #000000;">yes

VersionInfoVersion</span>=<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppVersion</span><span style="color: #008000;">}</span><span style="color: #000000;">
VersionInfoCompany</span>=<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppPublisher</span><span style="color: #008000;">}</span><span style="color: #000000;">
VersionInfoCopyright</span>=Copyright (C) <span style="color: #800080;">2010</span>-<span style="color: #800080;">2013</span><span style="color: #000000;">
VersionInfoProductName</span>=<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppName</span><span style="color: #008000;">}</span><span style="color: #000000;">
VersionInfoProductVersion</span>=<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppVersion</span><span style="color: #008000;">}</span><span style="color: #000000;">

[Languages]
Name: cn; MessagesFile: compiler:Languages\chinese.isl

[Files]
; NOTE: Don</span><span style="color: #800000;">'</span><span style="color: #800000;">t use "Flags: ignoreversion" on any shared system files</span>
<span style="color: #000000;">; 用来检测安装程序中输入的注册码是否有效
Source: ..\build\</span><span style="color: #0000ff;">register</span><span style="color: #000000;">_help.dll; Flags: dontcopy
Source: ..\build\libeay32.dll; Flags: dontcopy
Source: ..\build\vcredist2008_x86.exe; Flags: dontcopy

#ifdef FULL_VERSION
Source: ..\build\server.conf; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
Source: ..\build\media_service.exe; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
Source: ..\build\libmysql.dll; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
Source: ..\build\libeay32.dll; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
Source: ..\build\zlib1.dll; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
Source: ..\build\</span><span style="color: #0000ff;">register</span>_check.exe; DestDir: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
Source: ..\build\QtCore4.dll; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
Source: ..\build\QtGui4.dll; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
Source: ..\build\mglobal.dll; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
Source: ..\build\msvcp100.dll; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
Source: ..\build\msvcr100.dll; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
Source: ..\build\initconfig.exe; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
Source: ..\build\InstanceConfig.exe; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
;Source: ..\build\php</span>-fpm.exe; DestDir: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
Source: ..\build\管理统计页面.url; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
Source: ..\build\示例页面.url; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">

Source: ..\build\launchlist; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">
;Source: ..\build\phpcgi; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">

Source: ..\build\lighttpd.conf; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">\lmp\lighttpd\conf; Flags: ignoreversion
Source: ..\build\my.ini; DestDir: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">\lmp\mysql; Flags: ignoreversion

; web服务器整套目录
Source: ..\build\lmp\</span>*; DestDir: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">\lmp; Flags: recursesubdirs createallsubdirs
; doc文档目录
Source: ..\doc\</span>*; DestDir: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">\help; Flags: recursesubdirs createallsubdirs
; 播放器相关目录
Source: ..\build\swfs\</span>*; DestDir: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">\swfs; Flags: recursesubdirs createallsubdirs
; 播放器SDK相关目录
Source: ..\build\scriptlib\</span>*; DestDir: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">\scriptlib; Flags: recursesubdirs createallsubdirs

#endif

[Dirs]
Name: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">\videos

[Tasks]
Name: desktopicon; Description: </span><span style="color: #008000;">{</span><span style="color: #008000;">cm:CreateDesktopIcon</span><span style="color: #008000;">}</span>; GroupDescription: <span style="color: #008000;">{</span><span style="color: #008000;">cm:AdditionalIcons</span><span style="color: #008000;">}</span><span style="color: #000000;">

[Icons]
Name: </span><span style="color: #008000;">{</span><span style="color: #008000;">group</span><span style="color: #008000;">}</span>\sample\示例页面; Filename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">\示例页面.url

Name: </span><span style="color: #008000;">{</span><span style="color: #008000;">group</span><span style="color: #008000;">}</span>\help\安装说明; Filename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">\help\安装说明.pdf
Name: </span><span style="color: #008000;">{</span><span style="color: #008000;">group</span><span style="color: #008000;">}</span>\help\功能说明; Filename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">\help\功能说明.pdf
Name: </span><span style="color: #008000;">{</span><span style="color: #008000;">group</span><span style="color: #008000;">}</span>\help\开发说明; Filename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">\help\开发说明.pdf
Name: </span><span style="color: #008000;">{</span><span style="color: #008000;">group</span><span style="color: #008000;">}</span>\help\配置说明; Filename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">\help\配置说明.pdf
Name: </span><span style="color: #008000;">{</span><span style="color: #008000;">group</span><span style="color: #008000;">}</span>\help\统计模块; Filename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span><span style="color: #000000;">\help\统计模块.pdf

Name: </span><span style="color: #008000;">{</span><span style="color: #008000;">group</span><span style="color: #008000;">}</span>\流媒体系统(PMS)系统配置; Filename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span>\<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppExeName</span><span style="color: #008000;">}</span><span style="color: #000000;">
Name: </span><span style="color: #008000;">{</span><span style="color: #008000;">group</span><span style="color: #008000;">}</span>\<span style="color: #008000;">{</span><span style="color: #008000;">cm:UninstallProgram, PMS系统配置</span><span style="color: #008000;">}</span>; Filename: <span style="color: #008000;">{</span><span style="color: #008000;">uninstallexe</span><span style="color: #008000;">}</span><span style="color: #000000;">
Name: </span><span style="color: #008000;">{</span><span style="color: #008000;">group</span><span style="color: #008000;">}</span>\流媒体系统(PMS)统计管理; Filename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span>\管理统计页面.url; IconFilename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span>\<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppExeName</span><span style="color: #008000;">}</span><span style="color: #000000;">;
Name: </span><span style="color: #008000;">{</span><span style="color: #008000;">commondesktop</span><span style="color: #008000;">}</span>\流媒体系统(PMS)统计管理; Filename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span>\管理统计页面.url; Tasks: desktopicon; IconFilename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span>\<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppExeName</span><span style="color: #008000;">}</span><span style="color: #000000;">;
Name: </span><span style="color: #008000;">{</span><span style="color: #008000;">commondesktop</span><span style="color: #008000;">}</span>\流媒体系统(PMS)系统配置; Filename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span>\<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppExeName</span><span style="color: #008000;">}</span><span style="color: #000000;">; Tasks: desktopicon
Name: </span><span style="color: #008000;">{</span><span style="color: #008000;">commondesktop</span><span style="color: #008000;">}</span>\开启PMS服务; Filename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span>\media_service.exe; Parameters: -r; IconFilename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span>\<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppExeName</span><span style="color: #008000;">}</span><span style="color: #000000;">; Tasks: desktopicon
Name: </span><span style="color: #008000;">{</span><span style="color: #008000;">commondesktop</span><span style="color: #008000;">}</span>\停止PMS服务; Filename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span>\media_service.exe; Parameters: -s; IconFilename: <span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span>\<span style="color: #008000;">{</span><span style="color: #008000;">#MyAppExeName</span><span style="color: #008000;">}</span><span style="color: #000000;">; Tasks: desktopicon

[Run]
; 删除服务
Filename: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span>\media_service.exe; Parameters: -<span style="color: #000000;">u; Flags: runhidden
; 安装服务
Filename: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span>\media_service.exe; Parameters: -<span style="color: #000000;">i; Flags: runhidden

[UninstallRun]
; 停止服务
Filename: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span>\media_service.exe; Parameters: -<span style="color: #000000;">s; Flags: runhidden
; 删除服务
Filename: </span><span style="color: #008000;">{</span><span style="color: #008000;">app</span><span style="color: #008000;">}</span>\media_service.exe; Parameters: -<span style="color: #000000;">u; Flags: runhidden

[CustomMessages]
Key_Form_Caption</span>=<span style="color: #000000;">注册向导
Key_Form_Description</span>=<span style="color: #000000;">将序列号提交给xxx以获取注册码
Key_Form_codeLabel_Caption0</span>=<span style="color: #000000;">序列号:
Key_Form_keyLabel_Caption0</span>=<span style="color: #000000;">注册码:

Domain_Form_Caption</span>=<span style="color: #000000;">域名设置
Domain_Form_Description</span>=<span style="color: #000000;">配置当前服务器域名

[Messages]
BeveledLabel</span>=<span style="color: #000000;">xxx网络科技

[Code]
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    codeLabel: TLabel;
    keyLabel: TLabel;
    key: TMemo;
    code: TMemo;
  keyPage: TWizardPage;
  domainEdit: TNewEdit;
  domainPage: TWizardPage;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 获取序列号</span>
<span style="color: #0000ff;">function</span><span style="color: #000000;"> getCode(szCode: PChar; inLen: Integer): Integer;
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">getCode@files:register_help.dll,libeay32.dll,msvcr100.dll stdcall setuponly delayload loadwithalteredsearchpath</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 进行检查</span>
<span style="color: #0000ff;">function</span> regCheck(<span style="color: #0000ff;">const</span><span style="color: #000000;"> regKey: PChar): Boolean;
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">regCheck@files:register_help.dll,libeay32.dll,msvcr100.dll stdcall setuponly delayload loadwithalteredsearchpath</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 进行注册</span>
<span style="color: #0000ff;">function</span> regSave(<span style="color: #0000ff;">const</span><span style="color: #000000;"> regKey, regPath: PChar): Boolean;
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">regSave@files:register_help.dll,libeay32.dll,msvcr100.dll stdcall setuponly delayload loadwithalteredsearchpath</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 清理注册</span>
<span style="color: #0000ff;">procedure</span> regClear(<span style="color: #0000ff;">const</span><span style="color: #000000;"> regPath: PChar);
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">regClear@files:register_help.dll,libeay32.dll,msvcr100.dll stdcall setuponly delayload loadwithalteredsearchpath</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span> OpenSCManager(<span style="color: #0000ff;">const</span> machine: LongInt; <span style="color: #0000ff;">const</span><span style="color: #000000;"> dbName: LongInt;  access: Dword):LongInt;
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">OpenSCManagerA@Advapi32.dll stdcall</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span> OpenService(svcMgr: LongInt; <span style="color: #0000ff;">const</span><span style="color: #000000;"> svcName: pchar;  access: Dword):LongInt;
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">OpenServiceA@Advapi32.dll stdcall</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> CloseServiceHandle(svc: LongInt):Boolean;
</span><span style="color: #0000ff;">external</span> <span style="color: #800000;">'</span><span style="color: #800000;">CloseServiceHandle@Advapi32.dll stdcall</span><span style="color: #800000;">'</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;">/判定服务是否存在</span>
<span style="color: #0000ff;">function</span>  serviceExists(name: <span style="color: #0000ff;">string</span><span style="color: #000000;">): boolean;
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    SvcMgr, Svc: LongInt;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    Result :</span>=<span style="color: #000000;"> False;
    SvcMgr :</span>= OpenSCManager(<span style="color: #800080;">0</span>,<span style="color: #800080;">0</span>,<span style="color: #800080;">1</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> SvcMgr = <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span><span style="color: #000000;"> Exit;
    Svc :</span>= OpenService(SvcMgr, PChar(name), <span style="color: #800080;">4</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> Svc = <span style="color: #800080;">0</span> <span style="color: #0000ff;">then</span>
    <span style="color: #0000ff;">begin</span><span style="color: #000000;">
      CloseServiceHandle(SvcMgr);
      Exit;
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
    CloseServiceHandle(Svc);
    CloseServiceHandle(SvcMgr);
    Result :</span>=<span style="color: #000000;"> true;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;">/停止服务</span>
<span style="color: #0000ff;">procedure</span><span style="color: #000000;"> stopService;
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
  ResultCode: Integer;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
  Exec(ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{tmp}\media_service.exe</span><span style="color: #800000;">'</span>), <span style="color: #800000;">'</span><span style="color: #800000;">-s</span><span style="color: #800000;">'</span>, <span style="color: #800000;">''</span><span style="color: #000000;">, SW_HIDE, ewWaitUntilTerminated, ResultCode);
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">{</span><span style="color: #008000;"> Key_Form_ShouldSkipPage </span><span style="color: #008000;">}</span>

<span style="color: #0000ff;">function</span><span style="color: #000000;"> Key_Form_ShouldSkipPage(Page: TWizardPage): Boolean;
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
    codeStr: String;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    SetLength(codeStr, </span><span style="color: #800080;">1024</span><span style="color: #000000;">);
    getCode(PChar(codeStr), </span><span style="color: #800080;">1024</span><span style="color: #000000;">);
    code.Text :</span>=<span style="color: #000000;"> codeStr;
    Result :</span>=<span style="color: #000000;"> False;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 注册码编辑框改变事件</span>
<span style="color: #0000ff;">procedure</span><span style="color: #000000;"> Key_Form_KeyChange(Sender: TObject);
</span><span style="color: #0000ff;">begin</span>
<span style="color: #008000;">//</span><span style="color: #008000;"> 检测注册码</span>
    <span style="color: #0000ff;">if</span> regCheck(PChar(key.Text)) <span style="color: #0000ff;">then</span><span style="color: #000000;">
        WizardForm.NextButton.Enabled :</span>=<span style="color: #000000;"> True
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
        WizardForm.NextButton.Enabled :</span>=<span style="color: #000000;"> False;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">procedure</span><span style="color: #000000;"> RegURLLabelOnClick(Sender: TObject);
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
  ErrorCode: Integer;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
  ShellExec(</span><span style="color: #800000;">'</span><span style="color: #800000;">open</span><span style="color: #800000;">'</span>, ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">{#RegURL}</span><span style="color: #800000;">'</span>), <span style="color: #800000;">''</span>, <span style="color: #800000;">''</span><span style="color: #000000;">, SW_SHOWNORMAL, ewNoWait, ErrorCode);
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">{</span><span style="color: #008000;"> Key_Form_CreatePage </span><span style="color: #008000;">}</span>
<span style="color: #0000ff;">function</span><span style="color: #000000;"> Key_Form_CreatePage(PreviousPageId: Integer): Integer;
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
  URLLabel: TNewStaticText;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    keyPage :</span>=<span style="color: #000000;"> CreateCustomPage(
              PreviousPageId,
              ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{cm:Key_Form_Caption}</span><span style="color: #800000;">'</span><span style="color: #000000;">),
              ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{cm:Key_Form_Description}</span><span style="color: #800000;">'</span><span style="color: #000000;">)
          );

  </span><span style="color: #008000;">{</span><span style="color: #008000;"> codeLabel </span><span style="color: #008000;">}</span><span style="color: #000000;">
    codeLabel :</span>=<span style="color: #000000;"> TLabel.Create(keyPage);
    </span><span style="color: #0000ff;">with</span> codeLabel <span style="color: #0000ff;">do</span>
    <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        Parent :</span>=<span style="color: #000000;"> keyPage.Surface;
        Caption :</span>= ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">{cm:Key_Form_codeLabel_Caption0}</span><span style="color: #800000;">'</span><span style="color: #000000;">);
        Left :</span>= ScaleX(<span style="color: #800080;">0</span><span style="color: #000000;">);
        Top :</span>= ScaleY(<span style="color: #800080;">0</span><span style="color: #000000;">);
        Width :</span>= ScaleX(<span style="color: #800080;">40</span><span style="color: #000000;">);
        Height :</span>= ScaleY(<span style="color: #800080;">13</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

  </span><span style="color: #008000;">{</span><span style="color: #008000;"> keyLabel </span><span style="color: #008000;">}</span><span style="color: #000000;">
    keyLabel :</span>=<span style="color: #000000;"> TLabel.Create(keyPage);
    </span><span style="color: #0000ff;">with</span> keyLabel <span style="color: #0000ff;">do</span>
    <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        Parent :</span>=<span style="color: #000000;"> keyPage.Surface;
        Caption :</span>= ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">{cm:Key_Form_keyLabel_Caption0}</span><span style="color: #800000;">'</span><span style="color: #000000;">);
        Left :</span>= ScaleX(<span style="color: #800080;">0</span><span style="color: #000000;">);
        Top :</span>= ScaleY(<span style="color: #800080;">82</span><span style="color: #000000;">);
        Width :</span>= ScaleX(<span style="color: #800080;">40</span><span style="color: #000000;">);
        Height :</span>= ScaleY(<span style="color: #800080;">13</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

  </span><span style="color: #008000;">{</span><span style="color: #008000;"> key </span><span style="color: #008000;">}</span><span style="color: #000000;">
    key :</span>=<span style="color: #000000;"> TMemo.Create(keyPage);
    </span><span style="color: #0000ff;">with</span> key <span style="color: #0000ff;">do</span>
    <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        Parent :</span>=<span style="color: #000000;"> keyPage.Surface;
        Left :</span>= ScaleX(<span style="color: #800080;">0</span><span style="color: #000000;">);
        Top :</span>= ScaleY(<span style="color: #800080;">98</span><span style="color: #000000;">);
        Width :</span>= ScaleX(<span style="color: #800080;">410</span><span style="color: #000000;">);
        Height :</span>= ScaleY(<span style="color: #800080;">106</span><span style="color: #000000;">);
        ScrollBars :</span>=<span style="color: #000000;"> ssVertical;
        TabOrder :</span>= <span style="color: #800080;">0</span><span style="color: #000000;">;
    OnChange :</span>=<span style="color: #000000;"> @Key_Form_KeyChange;
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

  </span><span style="color: #008000;">{</span><span style="color: #008000;"> code </span><span style="color: #008000;">}</span><span style="color: #000000;">
    code :</span>=<span style="color: #000000;"> TMemo.Create(keyPage);
    </span><span style="color: #0000ff;">with</span> code <span style="color: #0000ff;">do</span>
    <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        Parent :</span>=<span style="color: #000000;"> keyPage.Surface;
        Left :</span>= ScaleX(<span style="color: #800080;">0</span><span style="color: #000000;">);
        Top :</span>= ScaleY(<span style="color: #800080;">16</span><span style="color: #000000;">);
        Width :</span>= ScaleX(<span style="color: #800080;">410</span><span style="color: #000000;">);
        Height :</span>= ScaleY(<span style="color: #800080;">60</span><span style="color: #000000;">);
        ReadOnly :</span>=<span style="color: #000000;"> True;
        ScrollBars :</span>=<span style="color: #000000;"> ssVertical;
        TabOrder :</span>= <span style="color: #800080;">1</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

    </span><span style="color: #0000ff;">with</span> keyPage <span style="color: #0000ff;">do</span>
    <span style="color: #0000ff;">begin</span><span style="color: #000000;">
        OnShouldSkipPage :</span>=<span style="color: #000000;"> @Key_Form_ShouldSkipPage;
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

    Result :</span>=<span style="color: #000000;"> keyPage.ID;

  URLLabel :</span>=<span style="color: #000000;"> TNewStaticText.Create(keyPage);
  </span><span style="color: #0000ff;">with</span> URLLabel <span style="color: #0000ff;">do</span>
  <span style="color: #0000ff;">begin</span><span style="color: #000000;">
    Caption :</span>= <span style="color: #800000;">'</span><span style="color: #800000;">获取注册码</span><span style="color: #800000;">'</span><span style="color: #000000;">;
    Cursor :</span>=<span style="color: #000000;"> crHand;
    OnClick :</span>=<span style="color: #000000;"> @RegURLLabelOnClick;
    Parent :</span>=<span style="color: #000000;"> keyPage.Surface;
    Font.Style :</span>= URLLabel.Font.Style +<span style="color: #000000;"> [fsUnderline];
    Font.Color :</span>=<span style="color: #000000;"> clBlue;
    Left :</span>= ScaleX(<span style="color: #800080;">350</span><span style="color: #000000;">);
    Top :</span>= ScaleY(<span style="color: #800080;">210</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">{</span><span style="color: #008000;"> 设置域名页面相关代码 </span><span style="color: #008000;">}</span>
<span style="color: #0000ff;">procedure</span><span style="color: #000000;"> Domain_Form_EditChange(sender: TObject);
</span><span style="color: #0000ff;">begin</span>
  <span style="color: #0000ff;">if</span> domainEdit.Text = <span style="color: #800000;">''</span> <span style="color: #0000ff;">then</span><span style="color: #000000;">
    WizardForm.NextButton.Enabled :</span>=<span style="color: #000000;"> False
  </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
    WizardForm.NextButton.Enabled :</span>=<span style="color: #000000;"> True;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> Domain_Form_CreatePage(PreviousPageId: Integer): Integer;
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
  domainLabel: TNewStaticText;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    domainPage :</span>=<span style="color: #000000;"> CreateCustomPage(
              PreviousPageId,
              ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{cm:Domain_Form_Caption}</span><span style="color: #800000;">'</span><span style="color: #000000;">),
              ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{cm:Domain_Form_Description}</span><span style="color: #800000;">'</span><span style="color: #000000;">)
          );

  domainLabel :</span>=<span style="color: #000000;"> TNewStaticText.Create(domainPage);
  </span><span style="color: #0000ff;">with</span> domainLabel <span style="color: #0000ff;">do</span>
  <span style="color: #0000ff;">begin</span><span style="color: #000000;">
    Parent :</span>=<span style="color: #000000;"> domainPage.Surface;
    Caption :</span>= <span style="color: #800000;">'</span><span style="color: #800000;">请确保输入的域名是有效的，并指向当前服务器IP，否则可以直接填写本机</span><span style="color: #800000;">'</span> + #<span style="color: #800080;">13</span>#<span style="color: #800080;">10</span> + <span style="color: #800000;">'</span><span style="color: #800000;">IP地址，或者保持默认值不变</span><span style="color: #800000;">'</span><span style="color: #000000;">;
        Left :</span>= ScaleX(<span style="color: #800080;">0</span><span style="color: #000000;">);
        Top :</span>= ScaleY(<span style="color: #800080;">60</span><span style="color: #000000;">);
        Width :</span>= ScaleX(<span style="color: #800080;">400</span><span style="color: #000000;">);
        Height :</span>= ScaleY(<span style="color: #800080;">28</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
  
  domainEdit :</span>=<span style="color: #000000;"> TNewEdit.Create(domainPage);
  </span><span style="color: #0000ff;">with</span> domainEdit <span style="color: #0000ff;">do</span>
  <span style="color: #0000ff;">begin</span><span style="color: #000000;">
    Parent :</span>=<span style="color: #000000;"> domainPage.Surface;
    Text :</span>=<span style="color: #000000;"> GetComputerNameString;
        Left :</span>= ScaleX(<span style="color: #800080;">0</span><span style="color: #000000;">);
        Top :</span>= ScaleY(<span style="color: #800080;">90</span><span style="color: #000000;">);
        Width :</span>= ScaleX(<span style="color: #800080;">400</span><span style="color: #000000;">);
        Height :</span>= ScaleY(<span style="color: #800080;">13</span><span style="color: #000000;">);
    OnChange :</span>=<span style="color: #000000;"> @Domain_Form_EditChange;
  </span><span style="color: #0000ff;">end</span><span style="color: #000000;">; 
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">procedure</span><span style="color: #000000;"> URLLabelOnClick(Sender: TObject);
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
  ErrorCode: Integer;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
  ShellExec(</span><span style="color: #800000;">'</span><span style="color: #800000;">open</span><span style="color: #800000;">'</span>, ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">{#MyAppURL}</span><span style="color: #800000;">'</span>), <span style="color: #800000;">''</span>, <span style="color: #800000;">''</span><span style="color: #000000;">, SW_SHOWNORMAL, ewNoWait, ErrorCode);
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 安装初始化</span>
<span style="color: #0000ff;">function</span><span style="color: #000000;"> InitializeSetup(): Boolean;
</span><span style="color: #0000ff;">begin</span>
  <span style="color: #0000ff;">if</span> serviceExists(<span style="color: #800000;">'</span><span style="color: #800000;">MediaSrv</span><span style="color: #800000;">'</span>) <span style="color: #0000ff;">then</span>
  <span style="color: #0000ff;">begin</span> <span style="color: #008000;">//</span><span style="color: #008000;">服务存在，先停止它</span>
    <span style="color: #0000ff;">if</span> MsgBox(<span style="color: #800000;">'</span><span style="color: #800000;">服务已经存在，要继续吗?</span><span style="color: #800000;">'</span>, mbConfirmation, MB_YESNO) = IDNO <span style="color: #0000ff;">then</span>
    <span style="color: #0000ff;">begin</span><span style="color: #000000;">
      Result :</span>=<span style="color: #000000;"> False;
      Exit;
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
    ExtractTemporaryFile(</span><span style="color: #800000;">'</span><span style="color: #800000;">media_service.exe</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    ExtractTemporaryFile(</span><span style="color: #800000;">'</span><span style="color: #800000;">msvcr100.dll</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    ExtractTemporaryFile(</span><span style="color: #800000;">'</span><span style="color: #800000;">msvcp100.dll</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    stopService;
  </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
    result :</span>=<span style="color: #000000;"> True;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">procedure</span><span style="color: #000000;"> InitializeWizard();
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
  URLLabel: TNewStaticText;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
    Key_Form_CreatePage(wpSelectDir);
  Domain_Form_CreatePage(keyPage.ID);

  URLLabel :</span>=<span style="color: #000000;"> TNewStaticText.Create(WizardForm);
  </span><span style="color: #0000ff;">with</span> URLLabel <span style="color: #0000ff;">do</span>
  <span style="color: #0000ff;">begin</span><span style="color: #000000;">
    Caption :</span>= ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">{#MyAppURL}</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    Cursor :</span>=<span style="color: #000000;"> crHand;
    OnClick :</span>=<span style="color: #000000;"> @URLLabelOnClick;
    Parent :</span>=<span style="color: #000000;"> WizardForm;
    Font.Style :</span>= URLLabel.Font.Style +<span style="color: #000000;"> [fsUnderline];
    Font.Color :</span>=<span style="color: #000000;"> clBlue;
    Left :</span>= ScaleX(<span style="color: #800080;">20</span><span style="color: #000000;">);
    Top :</span>= WizardForm.ClientHeight - ScaleY(<span style="color: #800080;">30</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 页面切换事件</span>
<span style="color: #0000ff;">procedure</span><span style="color: #000000;"> CurPageChanged(CurPageID: Integer);
</span><span style="color: #0000ff;">var</span><span style="color: #000000;">
  ResultCode: Integer;
  </span><span style="color: #0000ff;">file</span><span style="color: #000000;">: String;
  buf: String;
</span><span style="color: #0000ff;">begin</span><span style="color: #000000;">
  WizardForm.BackButton.Enabled :</span>=<span style="color: #000000;"> True;

  </span><span style="color: #0000ff;">if</span> CurPageID = keyPage.ID <span style="color: #0000ff;">then</span><span style="color: #000000;">
    WizardForm.NextButton.Enabled :</span>=<span style="color: #000000;"> False
  </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> CurPageID = wpFinished <span style="color: #0000ff;">then</span>
  <span style="color: #0000ff;">begin</span>
    <span style="color: #008000;">//</span><span style="color: #008000;">/////////////////////////////////////////////////////////</span>
    <span style="color: #008000;">//</span><span style="color: #008000;"> 帮助设置HOST_NAME为用户设置的域名</span>
    <span style="color: #0000ff;">file</span> := ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">{app}\lmp\htdocs\sample\config.php</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> LoadStringFromFile(<span style="color: #0000ff;">file</span>, buf) <span style="color: #0000ff;">then</span>
    <span style="color: #0000ff;">begin</span><span style="color: #000000;">
      StringChangeEx(buf, </span><span style="color: #800000;">'</span><span style="color: #800000;">%HOST_NAME%</span><span style="color: #800000;">'</span><span style="color: #000000;">, domainEdit.Text, False);
      SaveStringToFile(</span><span style="color: #0000ff;">file</span><span style="color: #000000;">, buf, False);
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

    </span><span style="color: #0000ff;">file</span> := ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">{app}\管理统计页面.url</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> LoadStringFromFile(<span style="color: #0000ff;">file</span>, buf) <span style="color: #0000ff;">then</span>
    <span style="color: #0000ff;">begin</span><span style="color: #000000;">
      StringChangeEx(buf, </span><span style="color: #800000;">'</span><span style="color: #800000;">%HOST_NAME%</span><span style="color: #800000;">'</span><span style="color: #000000;">, domainEdit.Text, False);
      SaveStringToFile(</span><span style="color: #0000ff;">file</span><span style="color: #000000;">, buf, False);
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

    </span><span style="color: #0000ff;">file</span> := ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">{app}\示例页面.url</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> LoadStringFromFile(<span style="color: #0000ff;">file</span>, buf) <span style="color: #0000ff;">then</span>
    <span style="color: #0000ff;">begin</span><span style="color: #000000;">
      StringChangeEx(buf, </span><span style="color: #800000;">'</span><span style="color: #800000;">%HOST_NAME%</span><span style="color: #800000;">'</span><span style="color: #000000;">, domainEdit.Text, False);
      SaveStringToFile(</span><span style="color: #0000ff;">file</span><span style="color: #000000;">, buf, False);
    </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
    </span><span style="color: #008000;">//</span><span style="color: #008000;">/////////////////////////////////////////////////////////</span>

    <span style="color: #008000;">//</span><span style="color: #008000;"> 禁用完成按钮</span>
    WizardForm.NextButton.Enabled :=<span style="color: #000000;"> False;
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 正式写入注册文件</span>
<span style="color: #000000;">    regSave(PChar(key.Text), WizardDirValue);
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 执行自动初始化</span>
    Exec(ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">{app}\initconfig.exe</span><span style="color: #800000;">'</span>), <span style="color: #800000;">''</span>, <span style="color: #800000;">''</span><span style="color: #000000;">, SW_HIDE, ewWaitUntilTerminated, ResultCode);
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 执行配置设置</span>
    Exec(ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">{app}\InstanceConfig.exe</span><span style="color: #800000;">'</span>), <span style="color: #800000;">'</span><span style="color: #800000;">-r</span><span style="color: #800000;">'</span>, <span style="color: #800000;">''</span><span style="color: #000000;">, SW_SHOW, ewWaitUntilTerminated, ResultCode);
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 启动服务</span>
    Exec(ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">{app}\media_service.exe</span><span style="color: #800000;">'</span>), <span style="color: #800000;">'</span><span style="color: #800000;">-r</span><span style="color: #800000;">'</span>, <span style="color: #800000;">''</span><span style="color: #000000;">, SW_HIDE, ewWaitUntilTerminated, ResultCode);
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 启用完成按钮</span>
    WizardForm.NextButton.Enabled :=<span style="color: #000000;"> True;
  </span><span style="color: #0000ff;">end</span>
  <span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> CurPageID = wpInstalling <span style="color: #0000ff;">then</span>
  <span style="color: #0000ff;">begin</span>
    <span style="color: #008000;">//</span><span style="color: #008000;"> 安装运行时库</span>
    ExtractTemporaryFile(<span style="color: #800000;">'</span><span style="color: #800000;">vcredist2008_x86.exe</span><span style="color: #800000;">'</span><span style="color: #000000;">);
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 执行2008库安装</span>
    Exec(ExpandConstant(<span style="color: #800000;">'</span><span style="color: #800000;">{tmp}\vcredist2008_x86.exe</span><span style="color: #800000;">'</span>), <span style="color: #800000;">'</span><span style="color: #800000;">/q</span><span style="color: #800000;">'</span>, <span style="color: #800000;">''</span><span style="color: #000000;">, SW_HIDE, ewWaitUntilTerminated, ResultCode);
  </span><span style="color: #0000ff;">end</span>
  <span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> CurPageID = domainPage.ID <span style="color: #0000ff;">then</span>
  <span style="color: #0000ff;">begin</span><span style="color: #000000;">
    WizardForm.BackButton.Enabled :</span>=<span style="color: #000000;"> False;
  </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 卸载</span>
<span style="color: #0000ff;">procedure</span><span style="color: #000000;"> CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
</span><span style="color: #0000ff;">begin</span>
  <span style="color: #0000ff;">if</span> CurUninstallStep = usUninstall <span style="color: #0000ff;">then</span>
  <span style="color: #0000ff;">begin</span><span style="color: #000000;">
    DeleteFile(ExpandConstant(</span><span style="color: #800000;">'</span><span style="color: #800000;">{app}\lsc</span><span style="color: #800000;">'</span><span style="color: #000000;">));
  </span><span style="color: #0000ff;">end</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">end</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 检查重启逻辑</span>
<span style="color: #0000ff;">function</span><span style="color: #000000;"> UninstallNeedRestart(): Boolean;
</span><span style="color: #0000ff;">begin</span>
  <span style="color: #0000ff;">if</span> serviceExists(<span style="color: #800000;">'</span><span style="color: #800000;">MediaSrv</span><span style="color: #800000;">'</span>) <span style="color: #0000ff;">then</span><span style="color: #000000;">
    result :</span>=<span style="color: #000000;"> True
  </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
    result :</span>=<span style="color: #000000;"> False;
</span><span style="color: #0000ff;">end</span>;</pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>MS SQL SERVER 数据库日志压缩方法与代码</title><link>http://www.cnblogs.com/eastson/archive/2015/03/27/4372255.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 27 Mar 2015 08:42:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/03/27/4372255.html</guid><description><![CDATA[<p>MS&nbsp;SQL性能是很不错的，但是数据库用了一段时间之后，数据库却变得很大，实际的数据量不大。一般都是数据库日志引起的！数据库日志的增长可以达到好几百M。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">DUMP</span> <span style="color: #0000ff;">TRANSACTION</span> <span style="color: #ff0000;">[</span><span style="color: #ff0000;">数据库名</span><span style="color: #ff0000;">]</span> <span style="color: #0000ff;">WITH</span><span style="color: #000000;">  NO_LOG  
</span><span style="color: #0000ff;">BACKUP</span> <span style="color: #ff00ff;">LOG</span> <span style="color: #ff0000;">[</span><span style="color: #ff0000;">数据库名</span><span style="color: #ff0000;">]</span> <span style="color: #0000ff;">WITH</span><span style="color: #000000;"> NO_LOG  
</span><span style="color: #0000ff;">DBCC</span> SHRINKDATABASE(<span style="color: #ff0000;">[</span><span style="color: #ff0000;">数据库名</span><span style="color: #ff0000;">]</span>) </pre>
</div>
<p>点击执行！这样子数据库就操作成功了。 <br />程序里面的方法： <br />压缩数据库日志 <br />--1.清空日志 
<br />exec('DUMP&nbsp;TRANSACTION&nbsp;['+@dbname+']&nbsp;WITH&nbsp;&nbsp;NO_LOG')&nbsp; <br />--2.截断事务日志： 
<br />exec('BACKUP&nbsp;LOG&nbsp;['+@dbname+']&nbsp;WITH&nbsp;NO_LOG') 
<br />--3.收缩数据库文件(如果不压缩,数据库的文件不会减小 <br />exec('DBCC&nbsp;SHRINKDATABASE(['+@dbname+'])') &nbsp;&nbsp;</p>]]></description></item><item><title>SQLSERVER：计算数据库中各个表的数据量和每行记录所占用空间</title><link>http://www.cnblogs.com/eastson/archive/2015/03/27/4372074.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 27 Mar 2015 08:00:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/03/27/4372074.html</guid><description><![CDATA[<p>转：<a href="http://www.cnblogs.com/lyhabc/p/3828496.html" target="_blank">http://www.cnblogs.com/lyhabc/p/3828496.html<br /></a></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">CREATE</span> <span style="color: #0000ff;">TABLE</span><span style="color: #000000;"> #tablespaceinfo
    (
      nameinfo </span><span style="color: #0000ff;">VARCHAR</span>(<span style="color: #800000; font-weight: bold;">500</span><span style="color: #000000;">) ,
      rowsinfo </span><span style="color: #0000ff;">BIGINT</span><span style="color: #000000;"> ,
      reserved </span><span style="color: #0000ff;">VARCHAR</span>(<span style="color: #800000; font-weight: bold;">20</span><span style="color: #000000;">) ,
      datainfo </span><span style="color: #0000ff;">VARCHAR</span>(<span style="color: #800000; font-weight: bold;">20</span><span style="color: #000000;">) ,
      index_size </span><span style="color: #0000ff;">VARCHAR</span>(<span style="color: #800000; font-weight: bold;">20</span><span style="color: #000000;">) ,
      unused </span><span style="color: #0000ff;">VARCHAR</span>(<span style="color: #800000; font-weight: bold;">20</span><span style="color: #000000;">)
    )  
 
</span><span style="color: #0000ff;">DECLARE</span> <span style="color: #008000;">@tablename</span> <span style="color: #0000ff;">VARCHAR</span>(<span style="color: #800000; font-weight: bold;">255</span><span style="color: #000000;">);  
 
</span><span style="color: #0000ff;">DECLARE</span> Info_cursor <span style="color: #0000ff;">CURSOR</span>
<span style="color: #0000ff;">FOR</span>
    <span style="color: #0000ff;">SELECT</span>  <span style="color: #ff0000;">'</span><span style="color: #ff0000;">[</span><span style="color: #ff0000;">'</span> <span style="color: #808080;">+</span> <span style="color: #ff0000;">[</span><span style="color: #ff0000;">name</span><span style="color: #ff0000;">]</span> <span style="color: #808080;">+</span> <span style="color: #ff0000;">'</span><span style="color: #ff0000;">]</span><span style="color: #ff0000;">'</span>
    <span style="color: #0000ff;">FROM</span><span style="color: #000000;">    sysobjects
    </span><span style="color: #0000ff;">WHERE</span>   type <span style="color: #808080;">=</span> <span style="color: #ff0000;">'</span><span style="color: #ff0000;">U</span><span style="color: #ff0000;">'</span><span style="color: #000000;">;  
 
</span><span style="color: #0000ff;">OPEN</span><span style="color: #000000;"> Info_cursor  
</span><span style="color: #0000ff;">FETCH</span> <span style="color: #0000ff;">NEXT</span> <span style="color: #0000ff;">FROM</span> Info_cursor <span style="color: #0000ff;">INTO</span> <span style="color: #008000;">@tablename</span>  
 
<span style="color: #0000ff;">WHILE</span> <span style="color: #008000; font-weight: bold;">@@FETCH_STATUS</span> <span style="color: #808080;">=</span> <span style="color: #800000; font-weight: bold;">0</span>
    <span style="color: #0000ff;">BEGIN</span> 
        <span style="color: #0000ff;">INSERT</span>  <span style="color: #0000ff;">INTO</span><span style="color: #000000;"> #tablespaceinfo
                </span><span style="color: #0000ff;">EXEC</span> sp_spaceused <span style="color: #008000;">@tablename</span>  
        <span style="color: #0000ff;">FETCH</span> <span style="color: #0000ff;">NEXT</span> <span style="color: #0000ff;">FROM</span><span style="color: #000000;"> Info_cursor  
    </span><span style="color: #0000ff;">INTO</span> <span style="color: #008000;">@tablename</span>  
    <span style="color: #0000ff;">END</span> 
 
<span style="color: #0000ff;">CLOSE</span><span style="color: #000000;"> Info_cursor  
</span><span style="color: #0000ff;">DEALLOCATE</span><span style="color: #000000;"> Info_cursor  
 
</span><span style="color: #008080;">--</span><span style="color: #008080;">创建临时表</span>
<span style="color: #0000ff;">CREATE</span> <span style="color: #0000ff;">TABLE</span> <span style="color: #ff0000;">[</span><span style="color: #ff0000;">#tmptb</span><span style="color: #ff0000;">]</span><span style="color: #000000;">
    (
      TableName </span><span style="color: #0000ff;">VARCHAR</span>(<span style="color: #800000; font-weight: bold;">50</span><span style="color: #000000;">) ,
      DataInfo </span><span style="color: #0000ff;">BIGINT</span><span style="color: #000000;"> ,
      RowsInfo </span><span style="color: #0000ff;">BIGINT</span><span style="color: #000000;"> ,
      Spaceperrow  </span><span style="color: #0000ff;">AS</span> ( <span style="color: #ff00ff;">CASE</span><span style="color: #000000;"> RowsInfo
                         </span><span style="color: #0000ff;">WHEN</span> <span style="color: #800000; font-weight: bold;">0</span> <span style="color: #0000ff;">THEN</span> <span style="color: #800000; font-weight: bold;">0</span>
                         <span style="color: #0000ff;">ELSE</span> <span style="color: #ff00ff;">CAST</span>(DataInfo <span style="color: #0000ff;">AS</span> <span style="color: #0000ff;">decimal</span>(<span style="color: #800000; font-weight: bold;">18</span>,<span style="color: #800000; font-weight: bold;">2</span>))<span style="color: #808080;">/</span><span style="color: #ff00ff;">CAST</span>(RowsInfo <span style="color: #0000ff;">AS</span> <span style="color: #0000ff;">decimal</span>(<span style="color: #800000; font-weight: bold;">18</span>,<span style="color: #800000; font-weight: bold;">2</span><span style="color: #000000;">))
                       </span><span style="color: #0000ff;">END</span><span style="color: #000000;"> ) 
    )

</span><span style="color: #008080;">--</span><span style="color: #008080;">插入数据到临时表</span>
<span style="color: #0000ff;">INSERT</span>  <span style="color: #0000ff;">INTO</span> <span style="color: #ff0000;">[</span><span style="color: #ff0000;">#tmptb</span><span style="color: #ff0000;">]</span><span style="color: #000000;">
        ( </span><span style="color: #ff0000;">[</span><span style="color: #ff0000;">TableName</span><span style="color: #ff0000;">]</span><span style="color: #000000;"> ,
          </span><span style="color: #ff0000;">[</span><span style="color: #ff0000;">DataInfo</span><span style="color: #ff0000;">]</span><span style="color: #000000;"> ,
          </span><span style="color: #ff0000;">[</span><span style="color: #ff0000;">RowsInfo</span><span style="color: #ff0000;">]</span><span style="color: #000000;">
        )
        </span><span style="color: #0000ff;">SELECT</span>  <span style="color: #ff0000;">[</span><span style="color: #ff0000;">nameinfo</span><span style="color: #ff0000;">]</span><span style="color: #000000;"> ,
                </span><span style="color: #ff00ff;">CAST</span>(<span style="color: #ff00ff;">REPLACE</span>(<span style="color: #ff0000;">[</span><span style="color: #ff0000;">datainfo</span><span style="color: #ff0000;">]</span>, <span style="color: #ff0000;">'</span><span style="color: #ff0000;">KB</span><span style="color: #ff0000;">'</span>, <span style="color: #ff0000;">''</span>) <span style="color: #0000ff;">AS</span> <span style="color: #0000ff;">BIGINT</span>) <span style="color: #0000ff;">AS</span> <span style="color: #ff0000;">'</span><span style="color: #ff0000;">datainfo</span><span style="color: #ff0000;">'</span><span style="color: #000000;"> ,
                </span><span style="color: #ff0000;">[</span><span style="color: #ff0000;">rowsinfo</span><span style="color: #ff0000;">]</span>
        <span style="color: #0000ff;">FROM</span><span style="color: #000000;">    #tablespaceinfo
        </span><span style="color: #0000ff;">ORDER</span> <span style="color: #0000ff;">BY</span> <span style="color: #ff00ff;">CAST</span>(<span style="color: #ff00ff;">REPLACE</span>(reserved, <span style="color: #ff0000;">'</span><span style="color: #ff0000;">KB</span><span style="color: #ff0000;">'</span>, <span style="color: #ff0000;">''</span>) <span style="color: #0000ff;">AS</span> <span style="color: #0000ff;">INT</span>) <span style="color: #0000ff;">DESC</span>  


<span style="color: #008080;">--</span><span style="color: #008080;">汇总记录</span>
<span style="color: #0000ff;">SELECT</span>  <span style="color: #ff0000;">[</span><span style="color: #ff0000;">tbspinfo</span><span style="color: #ff0000;">]</span>.<span style="color: #808080;">*</span><span style="color: #000000;"> ,
        </span><span style="color: #ff0000;">[</span><span style="color: #ff0000;">tmptb</span><span style="color: #ff0000;">]</span>.<span style="color: #ff0000;">[</span><span style="color: #ff0000;">Spaceperrow</span><span style="color: #ff0000;">]</span> <span style="color: #0000ff;">AS</span> <span style="color: #ff0000;">'</span><span style="color: #ff0000;">每行记录大概占用空间（KB）</span><span style="color: #ff0000;">'</span>
<span style="color: #0000ff;">FROM</span>    <span style="color: #ff0000;">[</span><span style="color: #ff0000;">#tablespaceinfo</span><span style="color: #ff0000;">]</span> <span style="color: #0000ff;">AS</span><span style="color: #000000;"> tbspinfo ,
        </span><span style="color: #ff0000;">[</span><span style="color: #ff0000;">#tmptb</span><span style="color: #ff0000;">]</span> <span style="color: #0000ff;">AS</span><span style="color: #000000;"> tmptb
</span><span style="color: #0000ff;">WHERE</span>   <span style="color: #ff0000;">[</span><span style="color: #ff0000;">tbspinfo</span><span style="color: #ff0000;">]</span>.<span style="color: #ff0000;">[</span><span style="color: #ff0000;">nameinfo</span><span style="color: #ff0000;">]</span> <span style="color: #808080;">=</span> <span style="color: #ff0000;">[</span><span style="color: #ff0000;">tmptb</span><span style="color: #ff0000;">]</span>.<span style="color: #ff0000;">[</span><span style="color: #ff0000;">TableName</span><span style="color: #ff0000;">]</span>
<span style="color: #0000ff;">ORDER</span> <span style="color: #0000ff;">BY</span> <span style="color: #ff00ff;">CAST</span>(<span style="color: #ff00ff;">REPLACE</span>(<span style="color: #ff0000;">[</span><span style="color: #ff0000;">tbspinfo</span><span style="color: #ff0000;">]</span>.<span style="color: #ff0000;">[</span><span style="color: #ff0000;">reserved</span><span style="color: #ff0000;">]</span>, <span style="color: #ff0000;">'</span><span style="color: #ff0000;">KB</span><span style="color: #ff0000;">'</span>, <span style="color: #ff0000;">''</span>) <span style="color: #0000ff;">AS</span> <span style="color: #0000ff;">INT</span>) <span style="color: #0000ff;">DESC</span>  

<span style="color: #0000ff;">DROP</span> <span style="color: #0000ff;">TABLE</span> <span style="color: #ff0000;">[</span><span style="color: #ff0000;">#tablespaceinfo</span><span style="color: #ff0000;">]</span>
<span style="color: #0000ff;">DROP</span> <span style="color: #0000ff;">TABLE</span> <span style="color: #ff0000;">[</span><span style="color: #ff0000;">#tmptb</span><span style="color: #ff0000;">]</span></pre>
</div>
<p><a href="http://www.cnblogs.com/lyhabc/p/3828496.html" target="_blank">&nbsp;</a></p>]]></description></item><item><title>using inno setup uninstall default icon</title><link>http://www.cnblogs.com/eastson/archive/2015/03/26/4368057.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 26 Mar 2015 03:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/03/26/4368057.html</guid><description><![CDATA[<p>If you set&nbsp;<code>SetupIconFile</code>&nbsp;then the Uninstall Exe File (e.g. unins000.exe) will have exactly same icon implemented. One way to override displaying of this icon is setting custom&nbsp;<code>UninstallDisplayIcon</code>&nbsp;in&nbsp;<code>[Setup]</code>&nbsp;section for Control Panel Add/Remove list and&nbsp;<code>IconFileName</code>&nbsp;in&nbsp;<code>[Icons]</code>&nbsp;section for shortcuts placed on Desktop, Start Menu, etc. In both cases you have to have your custom Icon file which has to be installed with your app.</p>
<pre><code>[Setup]
SetupIconFile=C:\mysourcedir\mysetup.ico
UninstallDisplayIcon={app}\myuninstall.ico 
                        //overrides icon on Add/Remove List in Control Panel

[Files]
Source: "C:\mysourcedir\myuninstall.ico"; DestDir: "{app}"

[Icons]
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}";
 IconFilename: "{app}\myuninstall.ico" 
                       //overrides icon in Start Menu shortcut
</code></pre>
<p>The second one is to have precompiled unins000.exe with specific icon implemented. It can be tricky though in some cases (multiple install with unins001, unins002, etc.; custom code features)<br /><br /><a href="http://stackoverflow.com/questions/15845226/using-inno-setup-uninstall-default-icon" target="_blank">http://stackoverflow.com/questions/15845226/using-inno-setup-uninstall-default-icon</a></p>]]></description></item><item><title>VB6的命令行参数</title><link>http://www.cnblogs.com/eastson/archive/2015/03/20/4353369.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 20 Mar 2015 05:04:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/03/20/4353369.html</guid><description><![CDATA[<p>在DOS窗口下执行如下命令：</p>
<div class="cnblogs_code">
<pre>C:\Program Files\Microsoft Visual Studio\VB98&gt;vb6 /?</pre>
</div>
<p><img src="http://images.cnitblog.com/blog2015/111826/201503/201303167044177.png" alt="" /></p>]]></description></item><item><title>DevExpress某些控件继承后的可编辑性</title><link>http://www.cnblogs.com/eastson/archive/2015/02/06/4276435.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 06 Feb 2015 01:46:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/02/06/4276435.html</guid><description><![CDATA[<p>今天在使用DevExpress的BarManager菜单控件时，发现在进行继承时无法在继承的子类窗体中对其进行编辑与修改，另外像GridView也有类似的情形，后来查阅资料后，现在可通过DevExpress的设置解决此问题，方法为：</p>
<p>开始-&gt;DevExpress X.XX-&gt;tools-&gt;WinForms X.XX Design-Time Settings</p>
<p>选中Enable visual...，如下图所示，即可。<br /><img src="http://images.cnitblog.com/blog/111826/201502/060945539689195.jpg" alt="" /></p>]]></description></item><item><title>GridControl 继承写法修改自己的GridControl</title><link>http://www.cnblogs.com/eastson/archive/2015/02/06/4276371.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 06 Feb 2015 01:17:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/02/06/4276371.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #0000ff;">namespace</span><span style="color: #000000;"> GridControlDemo
{
    </span><span style="color: #0000ff;">class</span><span style="color: #000000;"> MyGridControl : GridControl
    {
        </span><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">override</span><span style="color: #000000;"> BaseView CreateDefaultView()
        {
            </span><span style="color: #0000ff;">return</span> CreateView(<span style="color: #800000;">"</span><span style="color: #800000;">MyGridView</span><span style="color: #800000;">"</span><span style="color: #000000;">);
        }
        </span><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">override</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> RegisterAvailableViewsCore(InfoCollection collection)
        {
            </span><span style="color: #0000ff;">base</span><span style="color: #000000;">.RegisterAvailableViewsCore(collection);
            collection.Add(</span><span style="color: #0000ff;">new</span><span style="color: #000000;"> MyGridViewInfoRegistrator());
        }
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> MyGridViewInfoRegistrator : GridInfoRegistrator
    {
        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">override</span> <span style="color: #0000ff;">string</span> ViewName { <span style="color: #0000ff;">get</span> { <span style="color: #0000ff;">return</span> <span style="color: #800000;">"</span><span style="color: #800000;">MyGridView</span><span style="color: #800000;">"</span><span style="color: #000000;">; } }
        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">override</span><span style="color: #000000;"> BaseView CreateView(GridControl grid)
        {
            </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">new</span> MyGridView(grid <span style="color: #0000ff;">as</span><span style="color: #000000;"> GridControl);
        }
    }


    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> MyGridView : GridView
    {
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
        <span style="color: #808080;">///</span><span style="color: #008000;">函数
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="ownerGrid"&gt;&lt;/param&gt;</span>
        <span style="color: #0000ff;">public</span> MyGridView(GridControl ownerGrid) : <span style="color: #0000ff;">base</span><span style="color: #000000;">(ownerGrid) { }

        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
        <span style="color: #808080;">///</span><span style="color: #008000;"> 函数
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
        <span style="color: #0000ff;">public</span><span style="color: #000000;"> MyGridView()
        {

        }

        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
        <span style="color: #808080;">///</span><span style="color: #008000;"> 初始化一些默认值
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">override</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> BeginInit()
        {
            </span><span style="color: #0000ff;">base</span><span style="color: #000000;">.BeginInit();
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 设置为多选</span>
            <span style="color: #0000ff;">this</span>.OptionsSelection.MultiSelect = <span style="color: #0000ff;">true</span><span style="color: #000000;">;
            </span><span style="color: #0000ff;">this</span>.OptionsSelection.MultiSelectMode =<span style="color: #000000;"> DevExpress.XtraGrid.Views.Grid.GridMultiSelectMode.RowSelect;
            </span><span style="color: #0000ff;">this</span>.FocusedRowHandle = <span style="color: #800080;">0</span><span style="color: #000000;">;
            </span><span style="color: #0000ff;">this</span><span style="color: #000000;">.Focus(); 
            </span><span style="color: #008000;">//</span><span style="color: #008000;">显示筛选</span>
            <span style="color: #0000ff;">this</span>.OptionsView.ShowAutoFilterRow = <span style="color: #0000ff;">true</span><span style="color: #000000;">;
            </span><span style="color: #008000;">//</span><span style="color: #008000;">隐藏提示</span>
            <span style="color: #0000ff;">this</span>.OptionsView.ShowGroupPanel = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
            </span><span style="color: #008000;">//</span><span style="color: #008000;">禁止编辑</span>
            <span style="color: #0000ff;">this</span>.OptionsBehavior.Editable = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
            </span><span style="color: #0000ff;">this</span>.OptionsView.EnableAppearanceEvenRow = <span style="color: #0000ff;">false</span>; <span style="color: #008000;">//</span><span style="color: #008000;">是否启用偶数行外观</span>
            <span style="color: #0000ff;">this</span>.OptionsView.EnableAppearanceOddRow = <span style="color: #0000ff;">false</span>; <span style="color: #008000;">//</span><span style="color: #008000;">是否启用奇数行外观</span>
            <span style="color: #0000ff;">this</span>.OptionsView.ShowFilterPanelMode = ShowFilterPanelMode.Never; <span style="color: #008000;">//</span><span style="color: #008000;">是否显示过滤面板</span>

            <span style="color: #0000ff;">this</span>.OptionsCustomization.AllowColumnMoving = <span style="color: #0000ff;">false</span>; <span style="color: #008000;">//</span><span style="color: #008000;">是否允许移动列</span>
            <span style="color: #0000ff;">this</span>.OptionsCustomization.AllowColumnResizing = <span style="color: #0000ff;">false</span>; <span style="color: #008000;">//</span><span style="color: #008000;">是否允许调整列宽</span>
            <span style="color: #0000ff;">this</span>.OptionsCustomization.AllowGroup = <span style="color: #0000ff;">false</span>; <span style="color: #008000;">//</span><span style="color: #008000;">是否允许分组</span>
            <span style="color: #0000ff;">this</span>.OptionsCustomization.AllowFilter = <span style="color: #0000ff;">false</span>; <span style="color: #008000;">//</span><span style="color: #008000;">是否允许过滤</span>
            <span style="color: #0000ff;">this</span>.OptionsCustomization.AllowSort = <span style="color: #0000ff;">true</span>; <span style="color: #008000;">//</span><span style="color: #008000;">是否允许排序  </span>
<span style="color: #000000;">        }

        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">override</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> EndInit()
        {
            </span><span style="color: #0000ff;">base</span><span style="color: #000000;">.EndInit();
            </span><span style="color: #0000ff;">this</span>.SelectionChanged +=<span style="color: #000000;"> MyGridView_SelectionChanged;
        }

        </span><span style="color: #0000ff;">void</span> MyGridView_SelectionChanged(<span style="color: #0000ff;">object</span><span style="color: #000000;"> sender, DevExpress.Data.SelectionChangedEventArgs e)
        {
            </span><span style="color: #0000ff;">int</span>[] grvarry = <span style="color: #0000ff;">this</span><span style="color: #000000;">.GetSelectedRows();
            </span><span style="color: #0000ff;">if</span> (grvarry.Length &gt; <span style="color: #800080;">1</span><span style="color: #000000;">)
            {
               </span><span style="color: #008000;">/*</span><span style="color: #008000;"> for (int i = 0; i &lt; grvarry.Length; i++)
                {
                    GetDataRowList[i] = this.GetDataRow(grvarry[i]);
                }</span><span style="color: #008000;">*/</span><span style="color: #000000;">
                GetList </span>=<span style="color: #000000;"> grvarry;

            }
            </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
            {
                GetDataRowInfo </span>= <span style="color: #0000ff;">this</span><span style="color: #000000;">.GetFocusedDataRow();
            }
            </span><span style="color: #008000;">//</span><span style="color: #008000;">GetDataRowInfo = this.GetFocusedDataRow();</span>
<span style="color: #000000;">        } 

        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
        <span style="color: #808080;">///</span><span style="color: #008000;"> 获取用户选择行数据
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
        <span style="color: #0000ff;">public</span> DataRow GetDataRowInfo { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
        <span style="color: #808080;">///</span><span style="color: #008000;"> 返回选择行数组
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
        <span style="color: #0000ff;">public</span> DataRow[] GetDataRowList { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
        <span style="color: #808080;">///</span><span style="color: #008000;"> 返回用户选择行索引
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">int</span>[] GetList { <span style="color: #0000ff;">get</span>; <span style="color: #0000ff;">set</span><span style="color: #000000;">; }
    }
}</span></pre>
</div>]]></description></item><item><title>Prevent Adding Component More than once</title><link>http://www.cnblogs.com/eastson/archive/2015/02/05/4273953.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 05 Feb 2015 01:30:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/02/05/4273953.html</guid><description><![CDATA[<p>Question:&nbsp;I'm developing a C# component, I want to prevent the user from adding this component to the Form if the Form already has an instance of the component.</p>
<div>Answer:&nbsp;You can create a custom ComponentDesigner for your component, override its InitializeNewComponent() method to judge wether there's already an instance existes, if so, just return from this method. I write the following sample for your information:<br />
<div class="cnblogs_code">
<pre>[Designer(<span style="color: #0000ff;">typeof</span><span style="color: #000000;">(myComponentDesigner))]
</span><span style="color: #0000ff;">class</span><span style="color: #000000;"> myComponent : Component
{
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> myComponent(IContainer container)
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Add object to container's list so that
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> we get notified when the container goes away</span>
        container.Add(<span style="color: #0000ff;">this</span><span style="color: #000000;">);
    }
}

</span><span style="color: #0000ff;">class</span><span style="color: #000000;"> myComponentDesigner : ComponentDesigner
{
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">override</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> InitializeNewComponent(System.Collections.IDictionary defaultValues)
    {
        IDesignerHost service </span>= <span style="color: #0000ff;">this</span>.GetService(<span style="color: #0000ff;">typeof</span>(IDesignerHost)) <span style="color: #0000ff;">as</span><span style="color: #000000;"> IDesignerHost;
        </span><span style="color: #0000ff;">if</span> (service == <span style="color: #0000ff;">null</span>) <span style="color: #0000ff;">return</span><span style="color: #000000;">;
        ComponentCollection cc </span>=<span style="color: #000000;"> service.Container.Components;

        </span><span style="color: #0000ff;">int</span> count = <span style="color: #800080;">0</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">foreach</span> (Component c <span style="color: #0000ff;">in</span><span style="color: #000000;"> cc)
        {
            </span><span style="color: #0000ff;">if</span> (c.GetType() == <span style="color: #0000ff;">this</span><span style="color: #000000;">.Component.GetType() )
            {
                count</span>++<span style="color: #000000;">;
                </span><span style="color: #0000ff;">if</span> (count &gt; <span style="color: #800080;">1</span><span style="color: #000000;">)
                {
                    service.Container.Remove(</span><span style="color: #0000ff;">this</span><span style="color: #000000;">.Component);
                    MessageBox.Show(
                       </span><span style="color: #800000;">"</span><span style="color: #800000;">You cannot add more than one instance of the myComponet!</span><span style="color: #800000;">"</span><span style="color: #000000;">);
                    </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
                }
            }
        }

        </span><span style="color: #0000ff;">base</span><span style="color: #000000;">.InitializeNewComponent(defaultValues);
    }
}</span></pre>
</div>
</div>
<div>&nbsp;</div>]]></description></item><item><title>Apahce映射网络路径</title><link>http://www.cnblogs.com/eastson/archive/2015/01/07/4208035.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 07 Jan 2015 03:42:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/01/07/4208035.html</guid><description><![CDATA[<p>要点有两个：</p>
<p>1. 要使用全路径，不要使用映射的网络驱动器。<br />2. 路径之间用斜杠/，不要用反斜杠\。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">Alias /weili.mobile "//vmware-host/Shared Folders/X/dev/weili.mobile"
</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">Directory </span><span style="color: #ff0000;">"//vmware-host/Shared Folders/X/dev/weili.mobile"</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">
    Order allow,deny
    Allow from all
</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">Directory</span><span style="color: #0000ff;">&gt;</span></pre>
</div>]]></description></item><item><title>限制窗口重复开启</title><link>http://www.cnblogs.com/eastson/archive/2015/01/06/4205142.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 06 Jan 2015 00:37:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/01/06/4205142.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span> companyToolStripMenuItem1_Click(<span style="color: #0000ff;">object</span><span style="color: #000000;"> sender, EventArgs e)
{
    Master.CompanyMasterForm cmpnymasterform </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">bool</span> isFormOpen = IsAlreadyOpen(<span style="color: #0000ff;">typeof</span><span style="color: #000000;">(Master.CompanyMasterForm));
    </span><span style="color: #0000ff;">if</span> (isFormOpen == <span style="color: #0000ff;">false</span><span style="color: #000000;">)
    {
        cmpnymasterform </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> Master.CompanyMasterForm();
        cmpnymasterform.StartPosition </span>=<span style="color: #000000;"> FormStartPosition.CenterScreen;

        cmpnymasterform.MdiParent </span>= <span style="color: #0000ff;">this</span><span style="color: #000000;">;
        cmpnymasterform.Show();
    }
}

</span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">bool</span><span style="color: #000000;"> IsAlreadyOpen(Type formType)
{
    </span><span style="color: #0000ff;">bool</span> isOpen = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">foreach</span> (Form f <span style="color: #0000ff;">in</span><span style="color: #000000;"> Application.OpenForms)
    {
        </span><span style="color: #0000ff;">if</span> (f.GetType() ==<span style="color: #000000;"> formType)
        {
            f.BringToFront();
            f.WindowState </span>=<span style="color: #000000;"> FormWindowState.Normal;
            isOpen </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }
    }
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> isOpen;
}</span></pre>
</div>]]></description></item><item><title>判断Windows操作系统的版本</title><link>http://www.cnblogs.com/eastson/archive/2015/01/06/4205118.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 06 Jan 2015 00:15:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/01/06/4205118.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span> Form1_Load(<span style="color: #0000ff;">object</span><span style="color: #000000;"> sender, EventArgs e)
{
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #000000;">IsWin7())
    {
        Application.Exit();
    }
}
</span><span style="color: #0000ff;">bool</span><span style="color: #000000;"> IsWin7()
{
    </span><span style="color: #0000ff;">return</span> Environment.OSVersion.Version.Major == <span style="color: #800080;">6</span> &amp;&amp; Environment.OSVersion.Version.Minor == <span style="color: #800080;">1</span><span style="color: #000000;">;
}
</span><span style="color: #0000ff;">bool</span><span style="color: #000000;"> IsWinVista()
{
    </span><span style="color: #0000ff;">return</span> Environment.OSVersion.Version.Major == <span style="color: #800080;">6</span> &amp;&amp; Environment.OSVersion.Version.Minor == <span style="color: #800080;">0</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>其它一些Windows系统：</p>
<p>Windows Server 2008 R2<br />Major=6<br />Minor=1<br /> <br />Windows Server 2008<br />Major=6<br />Minor=0<br /> <br />Windows Server 2003<br />Major=5<br />Minor=2<br /> <br />Windows XP<br />Major=5<br />Minor=1<br /> <br />Windows 2000<br />Major=5<br />Minor=0<br /> <br />Windows NT4<br />Major=4<br />Minor=0<br /> <br />Windows ME<br />Major=4<br />Minor=90<br /> <br />Windows 98<br />Major=4<br />Minor=10</p>]]></description></item><item><title>隐藏任务管理器里面的程序？</title><link>http://www.cnblogs.com/eastson/archive/2015/01/05/4203994.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 05 Jan 2015 08:50:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/01/05/4203994.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #0000ff;">private</span>  <span style="color: #0000ff;">void</span> SetKey(<span style="color: #0000ff;">bool</span><span style="color: #000000;"> enableTaskManager)
{
  </span><span style="color: #0000ff;">using</span><span style="color: #000000;"> (
      </span><span style="color: #0000ff;">var</span> mKey =<span style="color: #000000;">
          Registry.CurrentUser.CreateSubKey(</span><span style="color: #800000;">"</span><span style="color: #800000;">Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System</span><span style="color: #800000;">"</span><span style="color: #000000;">))
  {
      </span><span style="color: #0000ff;">if</span> (mKey != <span style="color: #0000ff;">null</span><span style="color: #000000;">)
      {
          mKey.SetValue(</span><span style="color: #800000;">"</span><span style="color: #800000;">DisableTaskMgr</span><span style="color: #800000;">"</span>, enableTaskManager ? <span style="color: #800080;">0</span> : <span style="color: #800080;">1</span><span style="color: #000000;">);
      }
  }
}</span></pre>
</div>]]></description></item><item><title>如何判断VS.NET设计时？</title><link>http://www.cnblogs.com/eastson/archive/2015/01/05/4203939.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 05 Jan 2015 08:32:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/01/05/4203939.html</guid><description><![CDATA[<p>方法一：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (System.Diagnostics.Process.GetCurrentProcess().ProcessName == <span style="color: #800000;">"</span><span style="color: #800000;">devenv</span><span style="color: #800000;">"</span><span style="color: #000000;">)
</span><span style="color: #008000;">//</span><span style="color: #008000;">...Then Continue</span></pre>
</div>
<p>方法二：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span>(System.ComponentModel.LicenseManager.UsageMode ==<span style="color: #000000;"> System.ComponentModel.LicenseUsageMode.Designtime)
</span><span style="color: #008000;">//</span><span style="color: #008000;">... Then Continue</span></pre>
</div>
<p>没有测试过，感觉可行。</p>]]></description></item><item><title>Enterprise Library 5.0 系列教程</title><link>http://www.cnblogs.com/eastson/archive/2015/01/03/4199134.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 03 Jan 2015 01:19:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2015/01/03/4199134.html</guid><description><![CDATA[<p>1.　<a id="homepage1_HomePageDays_DaysList_ctl11_DayItem_DayList_ctl00_TitleUrl" href="http://www.cnblogs.com/huangcong/archive/2010/05/27/1744843.html">Microsoft Enterprise Library 5.0 系列教程(一) Caching Application Block (初级)</a></p>
<p>2.　<a id="homepage1_HomePageDays_DaysList_ctl10_DayItem_DayList_ctl01_TitleUrl" href="http://www.cnblogs.com/huangcong/archive/2010/05/28/1745909.html">Microsoft Enterprise Library 5.0 系列教程(一) Caching Application Block (高级)</a></p>
<p>3.　<a id="homepage1_HomePageDays_DaysList_ctl10_DayItem_DayList_ctl00_TitleUrl" href="http://www.cnblogs.com/huangcong/archive/2010/05/28/1746634.html">Microsoft Enterprise Library 5.0 系列教程(二) Cryptography Application Block (初级)</a></p>
<p>4.　<a id="homepage1_HomePageDays_DaysList_ctl09_DayItem_DayList_ctl00_TitleUrl" href="http://www.cnblogs.com/huangcong/archive/2010/05/29/1747015.html">Microsoft Enterprise Library 5.0 系列教程(二) Cryptography Application Block (高级)</a></p>
<p>5.　<a id="homepage1_HomePageDays_DaysList_ctl08_DayItem_DayList_ctl00_TitleUrl" href="http://www.cnblogs.com/huangcong/archive/2010/05/30/1747612.html">Microsoft Enterprise Library 5.0 系列教程(三) Validation Application Block (初级)</a></p>
<p>6.　<a id="homepage1_HomePageDays_DaysList_ctl07_DayItem_DayList_ctl00_TitleUrl" href="http://www.cnblogs.com/huangcong/archive/2010/05/31/1748255.html">Microsoft Enterprise Library 5.0 系列教程(三) Validation Application Block (高级)</a></p>
<p>7.　<a id="homepage1_HomePageDays_DaysList_ctl06_DayItem_DayList_ctl00_TitleUrl" href="http://www.cnblogs.com/huangcong/archive/2010/06/01/1748672.html">Microsoft Enterprise Library 5.0 系列教程(四) Logging Application Block</a></p>
<p>8.　<a id="homepage1_HomePageDays_DaysList_ctl05_DayItem_DayList_ctl00_TitleUrl" href="http://www.cnblogs.com/huangcong/archive/2010/06/02/1748699.html">Microsoft Enterprise Library 5.0 系列教程(五) Data Access Application Block</a></p>
<p>9.　<a id="homepage1_HomePageDays_DaysList_ctl04_DayItem_DayList_ctl00_TitleUrl" href="http://www.cnblogs.com/huangcong/archive/2010/06/03/1749634.html">Microsoft Enterprise Library 5.0 系列教程(六) Security Application Block</a></p>
<p>10.&nbsp;<a id="homepage1_HomePageDays_DaysList_ctl03_DayItem_DayList_ctl00_TitleUrl" href="http://www.cnblogs.com/huangcong/archive/2010/06/04/1751087.html">Microsoft Enterprise Library 5.0 系列教程(七) Exception Handling Application Block</a></p>
<p>11.&nbsp;<a id="homepage1_HomePageDays_DaysList_ctl02_DayItem_DayList_ctl00_TitleUrl" href="http://www.cnblogs.com/huangcong/archive/2010/06/05/1751807.html">Microsoft Enterprise Library 5.0 系列教程(八) Unity Dependency Injection and Interception</a></p>
<p>12.&nbsp;<a id="homepage1_HomePageDays_DaysList_ctl01_DayItem_DayList_ctl00_TitleUrl" href="http://www.cnblogs.com/huangcong/archive/2010/06/06/1752491.html">Microsoft Enterprise Library 5.0 系列教程(九) Policy Injection Application Block</a></p>
<p>13.&nbsp;<a id="homepage1_HomePageDays_DaysList_ctl00_DayItem_DayList_ctl00_TitleUrl" href="http://www.cnblogs.com/huangcong/archive/2010/06/08/1753966.html">Microsoft Enterprise Library 5.0 系列教程(十) Configuration Application Bloc</a></p>]]></description></item><item><title>加载网络映射盘中的assembly失败</title><link>http://www.cnblogs.com/eastson/archive/2014/12/15/4164279.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 15 Dec 2014 02:28:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/12/15/4164279.html</guid><description><![CDATA[<p>我有一个网络映射盘，盘符是Z:。在Z盘下面，放了一个assembly，名为test.dll。然后，我在VS2010中建立了一个.NET 4.0的工程，程序中有下面一段代码：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">string</span> dll = <span style="color: #800000;">@"</span><span style="color: #800000;">Z:\test.dll</span><span style="color: #800000;">"</span><span style="color: #000000;">;  
Assembly a </span>= Assembly.LoadFrom(dll);  </pre>
</div>
<p><span style="line-height: 1.5;">执行代码，抛出FileLoadException异常：Could not load file or assembly 'file:///Y:\bb\nvo_cas.dll' or one of its dependencies. Operation is not supported. (Exception from HRESULT: 0x80131515)。</span></p>
<p>深入到内部异常：An attempt was made to load an assembly from a network location which would have caused the assembly to be sandboxed in previous versions of the .NET Framework. This release of the .NET Framework does not enable CAS policy by default, so this load may be dangerous. If this load is not intended to sandbox the assembly, please enable the loadFromRemoteSources switch. See http://go.microsoft.com/fwlink/?LinkId=155569 for more information.。</p>
<p>看来是.NET的安全机制阻止加载一个网络上（本地网或者互联网）的assembly。</p>
<p>【办法一】</p>
<p>根据提示，找到了MSDN的一篇文章。文章给出的解决办法是：在程序的配置文件中加入下面的xml片段：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">configuration</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">  
  ......  
  </span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">runtime</span><span style="color: #0000ff;">&gt;</span>  
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> WARNING: will load assemblies from remote locations as fully trusted! </span><span style="color: #008000;">--&gt;</span>  
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">loadFromRemoteSources </span><span style="color: #ff0000;">enabled</span><span style="color: #0000ff;">="true"</span> <span style="color: #0000ff;">/&gt;</span>  
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">runtime</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">  
  ......  
</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">configuration</span><span style="color: #0000ff;">&gt;</span>  </pre>
</div>
<p><span style="line-height: 1.5;">按照这个解决办法，程序运行正确。</span></p>
<p>MSDN链接：<a href="http://msdn.microsoft.com/en-us/library/dd409252(VS.100).aspx">http://msdn.microsoft.com/en-us/library/dd409252(VS.100).aspx</a>。</p>
<p><span style="line-height: 1.5;">【办法二】</span></p>
<p>Assembly类有一个静态函数UnsafeLoadFrom，这个函数在加载一个assembly的时候，不会进行一些安全检查。将原先的代码修改如下即可：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">string</span> dll = <span style="color: #800000;">@"</span><span style="color: #800000;">Z:\test.dll</span><span style="color: #800000;">"</span><span style="color: #000000;">;  
Assembly a </span>= Assembly.UnsafeLoadFrom(dll);  </pre>
</div>
<p><span style="line-height: 1.5;">【办法三】</span></p>
<p>Assembly的load方法有很多的重载，可以使用其中的一个参数为byte[]的load函数。代码如下:</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">string</span> dll = <span style="color: #800000;">@"</span><span style="color: #800000;">Z:\test.dll</span><span style="color: #800000;">"</span><span style="color: #000000;">; ;  
</span><span style="color: #0000ff;">byte</span>[] assemblyBuffer =<span style="color: #000000;"> File.ReadAllBytes(dll);  
Assembly a </span>= Assembly.Load(assemblyBuffer);  </pre>
</div>
<p>转载：<a href="http://blog.csdn.net/studying/article/details/6663627">http://blog.csdn.net/studying/article/details/6663627</a></p>]]></description></item><item><title>c# WinForm加载焦点</title><link>http://www.cnblogs.com/eastson/archive/2014/12/01/4135110.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 01 Dec 2014 07:11:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/12/01/4135110.html</guid><description><![CDATA[<p>1.c# WinForm在加载时把焦点设在按钮上</p>
<div class="pump_con">
<p>this.AcceptButton = button1;</p>
<p>这样在WinForm窗口中,</p>
<p>按钮的状态会变成窗口的默认按钮,</p>
<p>只要按下Enter键,就会触发按钮的单击事件</p>
<p>这种效果与按钮获得焦点类似.</p>
<p>&nbsp;当然,加个button1.Focus();更好。</p>
<p>2.c# WinForm在加载时把焦点设在textBox上</p>
<div class="postBody">
<div id="cnblogs_post_body">
<p>两种方法：</p>
<p>1 在Load中设置&nbsp;<br />this.ActiveControl = this.textBox;</p>
<p>2 this.textBox.Focus();&nbsp;<br />但在Form_Load设置会无效，可在Form_Paint（）中设置．<img src="http://www.cnblogs.com/libiao/aggbug/1583331.html?type=1&amp;webview=1" alt="" width="1" height="1" /></p>

</div>

</div>

</div>]]></description></item><item><title>DataSet,DataTable与DataRow的复制方法</title><link>http://www.cnblogs.com/eastson/archive/2014/11/15/4098789.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 15 Nov 2014 00:44:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/11/15/4098789.html</guid><description><![CDATA[<p>DataSet 对象是支持 ADO.NET的断开式、分布式数据方案的核心对象 ，用途非常广泛.我们很多时候需要使用其中的数据，比如取得一个DataTable的数据或者复制另一个DataTabe中的数据或者是DataRow的数据，但是只有DataSet和DataTable的复制是支持深层复制的，就是说不仅能复制元素的结构，而且能复制元素的数据，而DatatDataRow没有相关的复制的方法，下面将简单介绍下这些数据元素的复制问题。<br />复制DataSet：</p>
<div class="cnblogs_code">
<pre>DataSet <span style="color: #0000ff;">object</span> = souceDataSet.Copy();<span style="color: #008000;">//</span><span style="color: #008000;">深复制</span>
DataSet <span style="color: #0000ff;">object</span> = souceDataSet.Clone();<span style="color: #008000;">//</span><span style="color: #008000;">浅复制，只复制架构</span></pre>
</div>
<p>复制DataTable：</p>
<div class="cnblogs_code">
<pre>objectTable  = sourceTable .Copy();<span style="color: #008000;">//</span><span style="color: #008000;">深复制</span>
objectTable  = sourceTable .Clone();<span style="color: #008000;">//</span><span style="color: #008000;">浅复制，只复制架构 </span></pre>
</div>
<p>复制DataRow。项目开发中经常遇到这种错误-&ldquo;此行已属于另一个表&rdquo; 。导致这个错误的语句如下：</p>
<div class="cnblogs_code">
<pre>objectTable .Rows.Add(SourceDataRow);</pre>
</div>
<p>分析了一下原因，因为DataRow DataTable&nbsp;都是传引用调用的。所以一个行在一个表中了，就不能再增加到另外一个表。&nbsp;</p>
<p>具体方法：<br />1&nbsp;&nbsp;<strong>ImportRow方法</strong>: public void ImportRow( DataRow DataRow);</p>
<div class="cnblogs_code">
<pre>objectTable = sourceTable.clone();<span style="color: #008000;">//</span><span style="color: #008000;">必须先复制表的架构，使具有相同的的列或关系！</span>
<span style="color: #0000ff;">foreach</span> (DataRow oRow <span style="color: #0000ff;">in</span><span style="color: #000000;"> sourceTable)
{ 

       objectTable.ImportRow(oRow);</span><span style="color: #008000;">//</span><span style="color: #008000;">在objectTable中添加一个新行，并将sourceRow的值复制进去,要求表的结构一样！</span>
<span style="color: #000000;">
}</span></pre>
</div>
<p><strong>2. 循环DataTable的每个列</strong></p>
<div class="cnblogs_code">
<pre>DataRow aDataRow =<span style="color: #000000;"> objectTable.NewRow();
</span><span style="color: #0000ff;">foreach</span>(DataColumn aDataColumn <span style="color: #0000ff;">in</span><span style="color: #000000;"> sourceTable.Columns)
 {
     aDataRow [aDataColumn.ColumnName] </span>=<span style="color: #000000;"> sourceTable[i][aDataColumn.ColumnName];
}
objectTable.Rows.Add(aDataRow);</span></pre>
</div>
<p>3.&nbsp;<strong>自定义复制</strong></p>
<div class="cnblogs_code">
<pre>objectTable.Columns.Add (&rdquo;id&rdquo;);<span style="color: #008000;">//</span><span style="color: #008000;">不需要有一样的架构,只复制自己需要的列! </span>
Object [] myArry = <span style="color: #0000ff;">new</span> Object [<span style="color: #800080;">1</span><span style="color: #000000;">]; 
   </span><span style="color: #0000ff;">foreach</span> (DataRow oRow <span style="color: #0000ff;">in</span><span style="color: #000000;"> sourceTable)
{ 

  tempRow </span>= objectTable.NewRow();<span style="color: #008000;">//</span><span style="color: #008000;">此方法必须调用!</span>
  myArry[<span style="color: #800080;">0</span>] = oRow[<span style="color: #800000;">"</span><span style="color: #800000;">id</span><span style="color: #800000;">"</span>];<span style="color: #008000;">//</span><span style="color: #008000;">如果myArry中没有源表中的id列的话就会报错！</span>
  tempRow.ItemArray = myArry;<span style="color: #008000;">//</span><span style="color: #008000;">ItemArray属性为Object类型数组,根据程序的需要需要可自行复制多个列的数据!</span>
  objectTable.Rows.Add(tempRow); <span style="color: #008000;">//</span><span style="color: #008000;">此方法必须调用，否则DataRow中的数据将不能显示!</span>
<span style="color: #000000;">
}</span></pre>
</div>
<p>4.&nbsp;<strong>LoadDataRow方法</strong>:public DataRow LoadDataRow(Object[] values,bool fAcceptChanges);</p>
<div class="cnblogs_code">
<pre>Object[] newRow = <span style="color: #0000ff;">new</span> Object[<span style="color: #800080;">3</span><span style="color: #000000;">];
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 设置对象数组的值</span>
newRow[<span style="color: #800080;">0</span>] =<span style="color: #000000;"> &ldquo;Hello&rdquo;;
newRow[</span><span style="color: #800080;">1</span>] =<span style="color: #000000;"> &ldquo;World&rdquo;;
newRow[</span><span style="color: #800080;">2</span>] =<span style="color: #000000;"> &ldquo;two&rdquo;;
DataRow myRow;
ObjectTable.BeginLoadData();
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 将新行添加到表中</span>
myRow = ObjectTable.LoadDataRow(newRow, <span style="color: #0000ff;">true</span>);<span style="color: #008000;">//</span><span style="color: #008000;">标志要设置为true,表示添加新行</span>
ObjectTable.EndLoadData();</pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>解决WinForm(C#)中MDI子窗体最大化的问题</title><link>http://www.cnblogs.com/eastson/archive/2014/11/07/4080391.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 07 Nov 2014 00:22:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/11/07/4080391.html</guid><description><![CDATA[<p>&ldquo;用MDI方式打开一个子窗口体后，总是不能最大化显示，明明子窗口体的WindowState设置为Maximized？&rdquo;，相信有很多人会遇到这的样问题，请按下面的方法设置即可使MDI子窗体最大化：</p>
<p>1、把父窗体的IsMdiContainer设置为True；<br />2、把子窗体的WindowState设置为Normal；<br />3、在父窗体中用下面的方法打开子窗体：<br />private void menuItemsMdiForm_Click(object sender, EventArgs e)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp; MyChildForm childForm = new MyChildForm();<br />&nbsp;&nbsp;&nbsp;&nbsp; childForm .MdiParent = this;<br />&nbsp;&nbsp;&nbsp;&nbsp; childForm .WindowState = FormWindowState.Maximized;<br />&nbsp;&nbsp;&nbsp;&nbsp; childForm .Show();<br />}</p>]]></description></item><item><title>Net文章汇总帖</title><link>http://www.cnblogs.com/eastson/archive/2014/11/06/4077787.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 06 Nov 2014 00:10:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/11/06/4077787.html</guid><description><![CDATA[<p><a href="https://documentation.devexpress.com/#WindowsForms/CustomDocument3000" target="_blank">DevExpress：Data Grid Examples<br /></a><a href="https://documentation.devexpress.com/#WindowsForms/CustomDocument3068" target="_blank">How to: Initialize Cells in Newly Created Rows&nbsp;</a><br /><a style="line-height: 1.5;" href="https://documentation.devexpress.com/#WindowsForms/CustomDocument3039" target="_blank"><span style="color: #000000; line-height: 1.5;">How to: Set a Cell Value When Another Column Value is Changed</span></a></p>
<pre>&nbsp;</pre>
<p><a href="http://blog.csdn.net/huangjf_1983/article/details/3983448">NET 中关于ImageList 图片锯齿问题<br /></a><a id="cb_post_title_url" class="singleposttitle" style="line-height: 1.5;" href="http://www.cnblogs.com/eastson/p/4080391.html">解决WinForm(C#)中MDI子窗体最大化的问题</a><a href="http://blog.csdn.net/huangjf_1983/article/details/3983448">&nbsp;<br /></a><a style="line-height: 1.5;" href="http://www.codeproject.com/Articles/9142/Adding-and-using-bit-alphablended-images-and-ic" target="_blank">CodeProject：Adding and using 32 bit alphablended images and icons to the imagelist control<br /></a></p>
<p>&nbsp;</p>
<div class="ColumnTypeSubTitle"><a href="http://msdn.microsoft.com/en-us/magazine/cc164048.aspx" target="_blank">Custom Design-time Control Features in Visual Studio .NET</a></div>]]></description></item><item><title>DataRow对象的行状态(RowState)和行版本(DataRowVersion)属性</title><link>http://www.cnblogs.com/eastson/archive/2014/11/04/4073263.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 04 Nov 2014 03:39:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/11/04/4073263.html</guid><description><![CDATA[<p>DataRow对象有两个比较重要的属性，分别是行状态(RowState)和行版本(DataRowVersion)，通过这两个属性能够有效的管理表中的行。下面简要的介绍一下行状态和行版本的特点和关系。</p>
<p>行状态(RowState):</p>
<ul>
<li>UnChanged状态：指表中的行自创建之后没有做过任何改动的状态，或则是行在上次接受修改之后，至今未做过任何改动的状态。</li>
<li>Added状态：该状态是指已经将行添加到表中，但是尚未调用表对象的AcceptChanged方法。调用AcceptChanged方法时，所有处在Added状态的行都变为Unchanged状态。</li>
<li>Modified状态：该状态表示该行已经被修改。调用AcceptChanged方法时，所有处在Modified状态的行都变为Unchanged状态</li>
<li>Deleted状态：该状态表示该行已经从表中删除，但是尚未调用表对象的AcceptChanged方法</li>
<li>Detached状态：该状态表示该行不属于任何表，或则已经从表中分离出去了，不再属于任何表的DataRow对象。</li>
</ul>
<p>下面举例说行的变化状态。新建的行（DataRow对象）处于Detached状态，把它添加到DataTable对象之后，该DataRow对象的状态变为Added状态。如果对该DataRow进行了修改，则该行处于Modified状态。如果使用Remove方法从表中移除该DataRow对象，或则使用Delete方法和AcceptChanged方法移除该行，则该行处于Detached状态。</p>
<p>行版本(DataRowVersion)</p>
<p>行(DataRow)对象有四种不同的行版本，分别是Current，Original，proposed和default。下面对这些行版本进行简要的说明。</p>
<ul>
<li>Current：表示行的当前值。处于deleted状态的行不存在该行版本。</li>
<li>Original：表示行的原始值。处于Added状态的行不存在该行版本</li>
<li>Proposed：表示行的建议值。不属于表的行，即处于Detached状态的行存在该行版本；对于正在进行编辑的行，也存在该行版本。</li>
<li>Default：表示行的默认版本。处于Added，Modified或则Unchanged状态的行的默认行版本是current；处于deleted状态的行的默认行版本是original。处于Detached状态的行的默认版本是proposed。</li>
</ul>
<p>下面举例说明行状态和行版本的变化。当调用AcceptChanged方法，所有处于deleted状态的行将变为Detached状态，即被移除。其余的行会变为Unchanged状态，<strong>并且</strong><strong>Original</strong><strong>版本中的值会改写为current</strong><strong>行版本的值。</strong></p>]]></description></item><item><title>C# Winform常见的Editor</title><link>http://www.cnblogs.com/eastson/archive/2014/11/03/4071047.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 03 Nov 2014 05:51:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/11/03/4071047.html</guid><description><![CDATA[<p>常见Editor：</p>
<p>1）ArrayEditor，继承自CollectionEditor</p>
<p>2）BinaryEditor</p>
<p>3）CollectionEditor</p>
<p>4）DateTimeEditor</p>
<p>5）MultilineStringEditor</p>
<p>6）BitmapEditor，继承自ImageEditor</p>
<p>7）ColorEditor</p>
<p>8）ContentAlignmentEditor</p>
<p>9）CursorEditor</p>
<p>10）FontEditor</p>
<p>11）FontNameEditor</p>
<p>12）IconEditor</p>
<p>13）ImageEditor</p>
<p>14）MetafileEditor</p>
<p>15）UITypeEditor，所有这些的基类，他们能继承自它</p>
<p>16）QueuePathEditor</p>
<p>17）DataControlReferenceCollectionEditor，继承自CollectionEditor</p>
<p>18）AppSettingsExpressionEditor，继承自ExpressionEditor</p>
<p>19）CollectionEditorBase，继承自CollectionEditor</p>
<p>20）ConnectionStringEditor</p>
<p>21）ConnectionStringsExpressionEditor，继承自ExpressionEditor</p>
<p>22）DataBindingCollectionEditor</p>
<p>23）ExpressionEditor</p>
<p>24）ExpressionCollectionEditor</p>
<p>25）ImageUrlEditor，继承自UrlEditor</p>
<p>26）MailFileEditor，继承自UrlEditor</p>
<p>27）MdbDataFileEditor，继承自UrlEditor</p>
<p>28）ResourceExpressionEditor，继承自ExpressionEditor</p>
<p>29）RouteUrlEditor，继承自ExpressionEditor</p>
<p>30）RouteValueExpressionEditor，继承自ExpressionEditor</p>
<p>31）ServiceReferenceCollectionEditor，继承自CollectionEditorBase</p>
<p>32）UpdatePanelTriggerCollectionEditor，继承自CollectionEditorBase</p>
<p>33）UrlEditor</p>
<p>34）UserControlFileEditor，继承自UrlEditor</p>
<p>35）AnchorEditor</p>
<p>36）BorderSidesEditor</p>
<p>37）DockEditor</p>
<p>38）FileNameEditor</p>
<p>39）FolderNameEditor</p>
<p>40）FormatStringEditor</p>
<p>41）ImageListImageEditor</p>
<p>42）ShortcutKeysEditor</p>
<p>43）BindingUIEditor</p>
<p>44）TypeBrowserEditor</p>]]></description></item><item><title>FreeMarker中List排序</title><link>http://www.cnblogs.com/eastson/archive/2014/10/15/4025717.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 15 Oct 2014 01:59:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/10/15/4025717.html</guid><description><![CDATA[<p>有时候需要在页面上对list排序，虽然也可以在后台代码中完成，但这个可能要看具体情况。<br />排序的样本代码如下:</p>
<div class="cnblogs_code">
<pre>&lt;#list resultMap.topViewList?sort_by("monthlyViewedCount") as tvl&gt;<span style="color: #000000;">
.............................................
</span>&lt;/#list&gt;</pre>
</div>
<p><span style="line-height: 1.5;">monthlyViewedCount是list中对象的属性。</span>默认情况下是升序，如果你要降序：</p>
<div class="cnblogs_code">
<pre>&lt;#list resultMap.topViewList?sort_by("monthlyViewedCount")?reverse as tvl&gt;<span style="color: #000000;">
.............................................
</span>&lt;/#list&gt;</pre>
</div>]]></description></item><item><title>Mingyang.net：为什么不将Bean定义在Action参数中？</title><link>http://www.cnblogs.com/eastson/archive/2014/10/13/4022700.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 13 Oct 2014 09:40:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/10/13/4022700.html</guid><description><![CDATA[<p>Spring MVC提供了一种方便的Bean填充方式：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">@Controller
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> CmsChannelController <span style="color: #0000ff;">extends</span><span style="color: #000000;"> AbstractController
{

    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> String saveAction(Model model,
            <span style="color: #ff0000;">CmsChannel cmsChannel</span>) </span><span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception
    {
        updateEntity(cmsChannel);
        getCurrentSession().flush();
        
        </span><span style="color: #0000ff;">return</span> "redirect:" +<span style="color: #000000;"> getIndexUrl();
    }
    
}</span></pre>
</div>
<p>通过这种映射，SpringMVC可以自动地将请求中的参数更新到CmsChannel。<br />我想说得问题是这种方式有一个弊端：不管是new或是edit，都要求将Bean的所有属性放到请求中提交。对于edit，通常的处理方式是根据传入的id读取出对应的Bean，然后再根据请求做更新。</p>]]></description></item><item><title>Hibernate注解：一对多外键关联</title><link>http://www.cnblogs.com/eastson/archive/2014/09/26/3994157.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 26 Sep 2014 01:22:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/09/26/3994157.html</guid><description><![CDATA[<p>情形：两个表，cms_mode是主表，cms_model_field是子表，cms_model_field的model_id字段关联到cms_model的主键。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">#
# Source </span><span style="color: #0000ff;">for</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> cms_model
#

</span><span style="color: #0000ff;">DROP</span> <span style="color: #0000ff;">TABLE</span> <span style="color: #0000ff;">IF</span> <span style="color: #808080;">EXISTS</span><span style="color: #000000;"> `cms_model`;
</span><span style="color: #0000ff;">CREATE</span> <span style="color: #0000ff;">TABLE</span><span style="color: #000000;"> `cms_model` (
  `model_id` </span><span style="color: #0000ff;">int</span>(<span style="color: #800000; font-weight: bold;">11</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
  `name` </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">50</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span> <span style="color: #0000ff;">DEFAULT</span> <span style="color: #ff0000;">''</span><span style="color: #000000;">,
  `title` </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">100</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span> <span style="color: #0000ff;">DEFAULT</span> <span style="color: #ff0000;">''</span> COMMENT <span style="color: #ff0000;">'</span><span style="color: #ff0000;">名称</span><span style="color: #ff0000;">'</span><span style="color: #000000;">,</span><span style="color: #000000;">
) ENGINE</span><span style="color: #808080;">=</span>MyISAM <span style="color: #0000ff;">DEFAULT</span> CHARSET<span style="color: #808080;">=</span>utf8 ROW_FORMAT<span style="color: #808080;">=</span>COMPACT COMMENT<span style="color: #808080;">=</span><span style="color: #ff0000;">'</span><span style="color: #ff0000;">CMS模型表</span><span style="color: #ff0000;">'</span><span style="color: #000000;">;

#
# Source </span><span style="color: #0000ff;">for</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> cms_model_field
#

</span><span style="color: #0000ff;">DROP</span> <span style="color: #0000ff;">TABLE</span> <span style="color: #0000ff;">IF</span> <span style="color: #808080;">EXISTS</span><span style="color: #000000;"> `cms_model_field`;
</span><span style="color: #0000ff;">CREATE</span> <span style="color: #0000ff;">TABLE</span><span style="color: #000000;"> `cms_model_field` (
  `field_id` </span><span style="color: #0000ff;">int</span>(<span style="color: #800000; font-weight: bold;">11</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;"> AUTO_INCREMENT,
  <span style="color: #ff0000;"><strong>`model_id` </strong></span></span><span style="color: #ff0000;"><strong>int(11)</strong></span> <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span> <span style="color: #0000ff;">DEFAULT</span> <span style="color: #ff0000;">'</span><span style="color: #ff0000;">0</span><span style="color: #ff0000;">'</span> COMMENT <span style="color: #ff0000;">'</span><span style="color: #ff0000;">模型ID</span><span style="color: #ff0000;">'</span><span style="color: #000000;">,
  `name` </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">50</span>) <span style="color: #0000ff;">DEFAULT</span> <span style="color: #0000ff;">NULL</span> COMMENT <span style="color: #ff0000;">'</span><span style="color: #ff0000;">名称</span><span style="color: #ff0000;">'</span><span style="color: #000000;">,
  `title` </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">250</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span> <span style="color: #0000ff;">DEFAULT</span> <span style="color: #ff0000;">''</span> COMMENT <span style="color: #ff0000;">'</span><span style="color: #ff0000;">标题</span><span style="color: #ff0000;">'</span><span style="color: #000000;">,
  `priority` </span><span style="color: #0000ff;">int</span>(<span style="color: #800000; font-weight: bold;">11</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span> <span style="color: #0000ff;">DEFAULT</span> <span style="color: #ff0000;">'</span><span style="color: #ff0000;">0</span><span style="color: #ff0000;">'</span> COMMENT <span style="color: #ff0000;">'</span><span style="color: #ff0000;">权重</span><span style="color: #ff0000;">'</span><span style="color: #000000;">,
  `data_type` </span><span style="color: #0000ff;">char</span>(<span style="color: #800000; font-weight: bold;">1</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span> <span style="color: #0000ff;">DEFAULT</span> <span style="color: #ff0000;">'</span><span style="color: #ff0000;">1</span><span style="color: #ff0000;">'</span> COMMENT <span style="color: #ff0000;">'</span><span style="color: #ff0000;">数据类型(S-字符,N-数值,D-日期,T-备注)</span><span style="color: #ff0000;">'</span><span style="color: #000000;">,
  `is_reserved` </span><span style="color: #0000ff;">tinyint</span>(<span style="color: #800000; font-weight: bold;">1</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span> <span style="color: #0000ff;">DEFAULT</span> <span style="color: #ff0000;">'</span><span style="color: #ff0000;">0</span><span style="color: #ff0000;">'</span> COMMENT <span style="color: #ff0000;">'</span><span style="color: #ff0000;">是否保留</span><span style="color: #ff0000;">'</span><span style="color: #000000;">,
  </span><span style="color: #0000ff;">PRIMARY</span> <span style="color: #0000ff;">KEY</span><span style="color: #000000;"> (`field_id`)
) ENGINE</span><span style="color: #808080;">=</span>MyISAM AUTO_INCREMENT<span style="color: #808080;">=</span><span style="color: #800000; font-weight: bold;">4</span> <span style="color: #0000ff;">DEFAULT</span> CHARSET<span style="color: #808080;">=</span>utf8 COMMENT<span style="color: #808080;">=</span><span style="color: #ff0000;">'</span><span style="color: #ff0000;">CMS模型字段表</span><span style="color: #ff0000;">'</span>;;</pre>
</div>
<p>CmsModel.java：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">@Entity
@Table(name </span>= "cms_model"<span style="color: #000000;">)
@SuppressWarnings(</span>"serial"<span style="color: #000000;">)
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> CmsModel <span style="color: #0000ff;">implements</span><span style="color: #000000;"> Serializable
{ 
    @Id
    @GeneratedValue
    @Column(name </span>= "model_id"<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Integer id;
    
    @Column(name </span>= "name"<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String name;
    
    @Column(name </span>= "title"<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String title;
    
    <span style="color: #ff0000;">@OneToMany(mappedBy </span></span><span style="color: #ff0000;">= "model", 
            fetch = FetchType.LAZY)
    </span><span style="color: #0000ff;">private</span> List&lt;CmsModelField&gt;<span style="color: #000000;"> fieldList;
}</span></pre>
</div>
<p>CmsModelField.java：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">@Entity
@Table(name </span>= "cms_model_field"<span style="color: #000000;">)
@SuppressWarnings(</span>"serial"<span style="color: #000000;">)
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> CmsModelField <span style="color: #0000ff;">implements</span><span style="color: #000000;"> Serializable
{ 
    @Id
    @GeneratedValue
    @Column(name </span>= "field_id"<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Integer id;
    
    @Column(name </span>= "name"<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String name;
    
    @Column(name </span>= "title"<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String title;
    
    @Column(name </span>= "data_type"<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String dataType;
    
    @Column(name </span>= "priority"<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Integer priority;
    
    @Column(name </span>= "is_reserved"<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Boolean reserved;
    
    <span style="color: #ff0000;">@ManyToOne(fetch </span></span><span style="color: #ff0000;">= FetchType.LAZY)
    @JoinColumn(name = "model_id")
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> CmsModel model;
}</span></pre>
</div>
<p><span style="color: #ff0000;">@OneToMany Default: FetchType.LAZY默认是延迟抓取，不需要左联接。如果是FetchType.EAGER即时抓取，就会是左联接查询。</span><br /><span style="color: #ff0000;">@ManyToOne Default: FetchType.EAGER默认是即时抓取，做连接。如果fetch=FetchType.LAZY不是左联接，在需要One的时候直接select。</span></p>]]></description></item><item><title>List和List</title><link>http://www.cnblogs.com/eastson/archive/2014/09/23/3987724.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 23 Sep 2014 02:13:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/09/23/3987724.html</guid><description><![CDATA[<p>下面的代码在JAVA中是不可以的：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">import</span> java.util.*<span style="color: #000000;">;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> Test {

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> main(String[] args) {
        List</span>&lt;String&gt; str = <span style="color: #0000ff;">new</span> ArrayList&lt;&gt;<span style="color: #000000;">();
        printList(<strong><span style="color: #ff0000;">str</span></strong>);
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span> printList(<span style="color: #ff0000;"><strong>List&lt;Object&gt;</strong></span><span style="color: #000000;"><span style="color: #ff0000;"><strong> str</strong></span>) {
        Iterator it </span>=<span style="color: #000000;"> str.iterator();
        </span><span style="color: #0000ff;">while</span><span style="color: #000000;">(it.hasNext()){
                System.out.println(it.next());
        }
    }
}</span></pre>
</div>
<p>可以将printList()修改成printList(List&lt;? extends Object&gt;)。因为继承自Object，可以简写为List&lt;?&gt;。</p>]]></description></item><item><title>Eclipse设置模板代码</title><link>http://www.cnblogs.com/eastson/archive/2014/09/20/3983133.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 20 Sep 2014 03:52:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/09/20/3983133.html</guid><description><![CDATA[<p>1. 打开preferences，找到Java &gt; Editor &gt; Templates。<br /><img src="http://images.cnitblog.com/blog/111826/201409/201147556286806.png" alt="" /><br />2. 点击"New"，新建一个模版：<br /><img src="http://images.cnitblog.com/blog/111826/201409/201148593936559.png" alt="" /></p>
<p>3. 打开Java文件，输入模版名称的前面两个字母xs，然后按ALT+/，就可以看到模版提示：<br /><img src="http://images.cnitblog.com/blog/111826/201409/201151333932045.png" alt="" /></p>]]></description></item><item><title>Hibernate注解：一对一主键关联</title><link>http://www.cnblogs.com/eastson/archive/2014/09/19/3981670.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 19 Sep 2014 08:12:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/09/19/3981670.html</guid><description><![CDATA[<p>情形：两个表，my_site和my_site_company，通过主键site_id唯一关联。my_site的主键是自动增加，my_site_company的主键依赖于my_site。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">#
# Source </span><span style="color: #0000ff;">for</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> my_site
#

</span><span style="color: #0000ff;">DROP</span> <span style="color: #0000ff;">TABLE</span> <span style="color: #0000ff;">IF</span> <span style="color: #808080;">EXISTS</span><span style="color: #000000;"> `my_site`;
</span><span style="color: #0000ff;">CREATE</span> <span style="color: #0000ff;">TABLE</span><span style="color: #000000;"> `my_site` (
  <span style="color: #ff0000;">`site_id` </span></span><span style="color: #ff0000;">int(<span style="font-weight: bold;">11</span>) NOT NULL</span><span style="color: #000000;"><span style="color: #ff0000;"> AUTO_INCREMENT</span>,
  `site_name` </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">100</span>) <span style="color: #0000ff;">DEFAULT</span> <span style="color: #0000ff;">NULL</span> COMMENT <span style="color: #ff0000;">'</span><span style="color: #ff0000;">站点名称</span><span style="color: #ff0000;">'</span><span style="color: #000000;">,
  `short_name` </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">100</span>) <span style="color: #0000ff;">DEFAULT</span> <span style="color: #0000ff;">NULL</span> COMMENT <span style="color: #ff0000;">'</span><span style="color: #ff0000;">简短名称</span><span style="color: #ff0000;">'</span><span style="color: #000000;">,
  </span><span style="color: #0000ff;">PRIMARY</span> <span style="color: #0000ff;">KEY</span><span style="color: #000000;"> (`site_id`)
) ENGINE</span><span style="color: #808080;">=</span>MyISAM AUTO_INCREMENT<span style="color: #808080;">=</span><span style="color: #800000; font-weight: bold;">2</span> <span style="color: #0000ff;">DEFAULT</span> CHARSET<span style="color: #808080;">=</span><span style="color: #000000;">utf8;

#
# Source </span><span style="color: #0000ff;">for</span> <span style="color: #0000ff;">table</span><span style="color: #000000;"> my_site_company
#

</span><span style="color: #0000ff;">DROP</span> <span style="color: #0000ff;">TABLE</span> <span style="color: #0000ff;">IF</span> <span style="color: #808080;">EXISTS</span><span style="color: #000000;"> `my_site_company`;
</span><span style="color: #0000ff;">CREATE</span> <span style="color: #0000ff;">TABLE</span><span style="color: #000000;"> `my_site_company` (
  <span style="color: #ff0000;">`site_id` </span></span><span style="color: #ff0000;">int(<span style="font-weight: bold;">11</span>) NOT NULL DEFAULT '0'</span><span style="color: #000000;">,
  `name` </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">255</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span> COMMENT <span style="color: #ff0000;">'</span><span style="color: #ff0000;">公司名称</span><span style="color: #ff0000;">'</span><span style="color: #000000;">,
  `scale` </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">255</span>) <span style="color: #0000ff;">DEFAULT</span> <span style="color: #0000ff;">NULL</span> COMMENT <span style="color: #ff0000;">'</span><span style="color: #ff0000;">公司规模</span><span style="color: #ff0000;">'</span><span style="color: #000000;">,
  `industry` </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">1000</span>) <span style="color: #0000ff;">DEFAULT</span> <span style="color: #0000ff;">NULL</span> COMMENT <span style="color: #ff0000;">'</span><span style="color: #ff0000;">公司行业</span><span style="color: #ff0000;">'</span><span style="color: #000000;">,
  `contact` </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">500</span>) <span style="color: #0000ff;">DEFAULT</span> <span style="color: #0000ff;">NULL</span> COMMENT <span style="color: #ff0000;">'</span><span style="color: #ff0000;">联系方式</span><span style="color: #ff0000;">'</span><span style="color: #000000;">,
  `address` </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">500</span>) <span style="color: #0000ff;">DEFAULT</span> <span style="color: #0000ff;">NULL</span> COMMENT <span style="color: #ff0000;">'</span><span style="color: #ff0000;">公司地址</span><span style="color: #ff0000;">'</span><span style="color: #000000;">,
  </span><span style="color: #0000ff;">PRIMARY</span> <span style="color: #0000ff;">KEY</span><span style="color: #000000;"> (`site_id`)
) ENGINE</span><span style="color: #808080;">=</span>MyISAM <span style="color: #0000ff;">DEFAULT</span> CHARSET<span style="color: #808080;">=</span>utf8;</pre>
</div>
<p>Site.java：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">@Entity
@Table(name </span>= "my_site"<span style="color: #000000;">)
@SuppressWarnings(</span>"serial"<span style="color: #000000;">)
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> Site <span style="color: #0000ff;">implements</span><span style="color: #000000;"> Serializable
{ 

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Site的主键是自动递增</span>
<span style="color: #000000;">    @Id
    @GeneratedValue
    @Column(name </span>= "site_id"<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Integer siteId;
    
    @Column(name </span>= "site_name"<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String siteName;
    
    @Column(name </span>= "short_name"<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String shortName;
    
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Site通过主键一对一关联到Company, 
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 在主键自动递增的对象这边写</span>
    @OneToOne(cascade =<span style="color: #000000;"> CascadeType.ALL)
    @PrimaryKeyJoinColumn
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Company company; 
}</span></pre>
</div>
<p>Company.java：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">@Entity
@Table(name </span>= "my_site_company"<span style="color: #000000;">)
@SuppressWarnings(</span>"serial"<span style="color: #000000;">)
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> Company <span style="color: #0000ff;">implements</span><span style="color: #000000;"> Serializable
{ 
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Company的主键来源于site的主键</span>
<span style="color: #000000;">    @Id
    @Column(name </span>= "site_id"<span style="color: #000000;">)
    @GenericGenerator(name </span>= "pkGenerator"<span style="color: #000000;">,
        strategy </span>= "foreign"<span style="color: #000000;"> ,
        parameters </span>= {@Parameter(name = "property", value = "site"<span style="color: #000000;">)})  
    @GeneratedValue(generator </span>= "pkGenerator"<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Integer siteId;
    
    @Column
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String name;
    
    @Column
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String scale;
    
    @Column
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String industry;
    
    @Column
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String address;
    
    @Column
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String contact;

    @OneToOne(cascade </span>=<span style="color: #000000;"> CascadeType.ALL, 
             mappedBy </span>= "company"<span style="color: #000000;">)  
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Site site;
}</span></pre>
</div>
<p>CompanyController.java：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> CompanyController <span style="color: #0000ff;">extends</span><span style="color: #000000;"> SimpleController
{
    @Autowired
    SiteDao siteDao;
    
    @Autowired
    CompanyDao companyDao;
    
    @RequestMapping
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> String indexAction(Model model,
            HttpServletRequest request) </span><span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception
    {
       <span style="color: #ff0000;"> Site site </span></span><span style="color: #ff0000;">= siteDao.fetchOne(1);
        Company company = site.getCompany();
        if (company == null)
            company = new Company();
        
        </span><span style="color: #0000ff;">if</span> (request.getMethod() != "POST"<span style="color: #000000;">)
        {
            model.addAttribute(</span>"entity"<span style="color: #000000;">, company);
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> redirectDefaultView();
        }
        
        RequestUtils.copyBeanProperties(company);
        <span style="color: #ff0000;">company.setSite(site);
        site.setCompany(company);
        companyDao.update(company);
        
        </span></span><span style="color: #0000ff;">return</span><span style="color: #000000;"> redirectIndex(SUCCESS_SAVE);
    }
    
}</span></pre>
</div>]]></description></item><item><title>解决tomcat默认45s启动超时的问题</title><link>http://www.cnblogs.com/eastson/archive/2014/09/04/3955769.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 04 Sep 2014 03:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/09/04/3955769.html</guid><description><![CDATA[<p>进入工作空间目录下的.metadata\.plugins\org.eclipse.wst.server.core子目录，找到servers.xml文件，编辑它，找到start-timeout这一行，把45改成你想要的值，单位是秒。<br /><img src="http://images.cnitblog.com/blog/111826/201409/041154131726495.jpg" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201409/041154241104386.jpg" alt="" />&nbsp;</p>]]></description></item><item><title>ContextLoaderListener与DispatcherServlet所加载的applicationContext的区别</title><link>http://www.cnblogs.com/eastson/archive/2014/09/03/3953571.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 03 Sep 2014 06:07:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/09/03/3953571.html</guid><description><![CDATA[<p>spring通过在web.xml 中配置ContextLoaderListener 来加载context配置文件，在DispatcherServlet中也可以来加载spring context配置文件，那么这两个有什么区别呢。<br /><br />ContextLoaderListener中加载的context成功后，spring 将 applicationContext存放在ServletContext中key值为"org.springframework.web.context.WebApplicationContext.ROOT"的attribute中。</p>
<div class="cnblogs_code">
<pre>servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, <span style="color: #0000ff;">this</span>.context);</pre>
</div>
<p><span style="line-height: 1.5;">可以通过WebApplicationContextUtils.getRequiredWebApplicationContext(servletContext)或WebApplicationContextUtils.getWebApplicationContext(servletContext)方法来获取对应的applicationContext。<br /><br /></span><span style="line-height: 1.5;">DispatcherServlet加载的context成功后，如果 publishContext属性的值设置为true的话(缺省为true) 会将applicationContext存放在org.springframework.web.servlet.FrameworkServlet.CONTEXT. + (servletName)的attribute中。<br /></span><span style="line-height: 1.5;">例如 web.xml中配置如下：<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">servlet</span><span style="color: #0000ff;">&gt;</span>  
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">servlet-name</span><span style="color: #0000ff;">&gt;</span>mvcServlet<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">servlet-name</span><span style="color: #0000ff;">&gt;</span>  
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">servlet-class</span><span style="color: #0000ff;">&gt;</span>org.springframework.web.servlet.DispatcherServlet<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">servlet-class</span><span style="color: #0000ff;">&gt;</span>  
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;</span>  
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>contextConfigLocation<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>  
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>classpath*:/spring/config/applicationContextMVC.xml<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>  
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;</span>  
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-on-startup</span><span style="color: #0000ff;">&gt;</span>1<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">load-on-startup</span><span style="color: #0000ff;">&gt;</span>  
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">servlet</span><span style="color: #0000ff;">&gt;</span> </pre>
</div>
<p><span style="line-height: 1.5;">则对应的applicationContext的attribute key值为org.springframework.web.servlet.FrameworkServlet.CONTEXT.mvcServlet。<br /></span><span style="line-height: 1.5;">在每次request请求时，DispatcherServlet会将此applicationContext存放在request中attribute值为 org.springframework.web.servlet.DispatcherServlet.CONTEXT中：<br /></span></p>
<div class="cnblogs_code">
<pre>request.setAttribute(WEB_APPLICATION_CONTEXT_ATTRIBUTE,getWebApplicationContext());</pre>
</div>
<p><span style="line-height: 1.5;">可以通过 RequestContextUtils.getWebApplicationContext 或 WebApplicationContextUtils.getWebApplicationContext(servletContext,attrname)方法 来获取对应的applicationContext。<br /><br /></span><span style="line-height: 1.5;">从上面的分析可以看出,DispatcherServlet所加载的applicationContext可以认为是mvc私有的context，由于保存在servletContext中的key值与通过ContextLoaderListener加载进来的applicationContext使用的key值不相同，因此如果只使用DispatcherServlet加载context的话，如果程序中有地方使用WebApplicationContextUtils.getRequiredWebApplicationContext(servletContext) 来试图获取applicationContext时，就会抛出"No WebApplicationContext found: no ContextLoaderListener registered?"的exception。</span></p>]]></description></item><item><title>Spring配置项说明</title><link>http://www.cnblogs.com/eastson/archive/2014/09/03/3953359.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 03 Sep 2014 03:58:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/09/03/3953359.html</guid><description><![CDATA[<p>配置applicationContext.xml时经常会看到：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">context:annotation-config</span><span style="color: #0000ff;">/&gt;</span></pre>
</div>
<p>它的作用是隐式地向Spring容器注册AutowiredAnnotationBeanPostProcessor、CommonAnnotationBeanPostProcessor、PersistenceAnnotationBeanPostProcessor和RequiredAnnotationBeanPostProcessor这&nbsp;4&nbsp;个BeanPostProcessor。<br /><br /><span style="line-height: 1.5;">例如：</span>如果你想使用@Autowired注解，那么就必须事先在&nbsp;Spring&nbsp;容器中声明&nbsp;AutowiredAnnotationBeanPostProcessor。传统声明方式如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="org.springframework.beans.factory.annotation. AutowiredAnnotationBeanPostProcessor "</span><span style="color: #0000ff;">/&gt;</span></pre>
</div>
<p><span style="line-height: 1.5;">如果想使用@ Resource&nbsp;、@ PostConstruct、@ PreDestroy等注解就必须声明CommonAnnotationBeanPostProcessor。<br /></span><span style="line-height: 1.5;">如果想使用@PersistenceContext注解，就必须声明PersistenceAnnotationBeanPostProcessor的Bean。<br /></span><span style="line-height: 1.5;">如果想使用&nbsp;@Required的注解，就必须声明RequiredAnnotationBeanPostProcessor的Bean。<br /><br /></span><span style="line-height: 1.5;">一般来说，这些注解我们还是比较常用，尤其是Antowired的注解，在自动注入的时候更是经常使用，所以如果总是需要按照传统的方式一条一条配置显得有些繁琐和没有必要，于是spring给我们提供&lt;context:annotation-config/&gt;的简化配置方式，自动帮你完成声明。</span></p>]]></description></item><item><title>Hibernate 实体关联关系映射【转】</title><link>http://www.cnblogs.com/eastson/archive/2014/09/02/3951646.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 02 Sep 2014 08:06:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/09/02/3951646.html</guid><description><![CDATA[<p>Hibernate关联关系映射目录<br />│&nbsp;<br />├─单向关联<br />│&nbsp; ├─&nbsp;&nbsp;<a href="http://lavasoft.blog.51cto.com/62575/39279" target="_blank"><span style="color: #000000;">一对一外键单向关联<br /></span></a>│&nbsp; ├─&nbsp;&nbsp;<a href="http://lavasoft.blog.51cto.com/62575/39304" target="_blank"><span style="color: #000000;">一对一主键单向关联</span></a><br />│&nbsp; ├─&nbsp;&nbsp;<a href="http://lavasoft.blog.51cto.com/62575/39312" target="_blank"><span style="color: #000000;">一对一连接表单向关联<br /></span></a>│&nbsp; ├─&nbsp;&nbsp;<a href="http://lavasoft.blog.51cto.com/62575/39317" target="_blank"><span style="color: #000000;">一对多外键单向关联</span></a><br />│&nbsp; ├─&nbsp;&nbsp;<a href="http://lavasoft.blog.51cto.com/62575/39318" target="_blank"><span style="color: #000000;">一对多连接表单向关联</span></a><br />│&nbsp; ├─&nbsp;&nbsp;<a href="http://lavasoft.blog.51cto.com/62575/39321" target="_blank"><span style="color: #000000;">多对一外键单向关联</span></a><br />│&nbsp; ├─&nbsp;&nbsp;<a href="http://lavasoft.blog.51cto.com/62575/39322" target="_blank"><span style="color: #000000;">多对一连接表单向关联</span></a><br />│&nbsp; └─&nbsp;&nbsp;<a href="http://lavasoft.blog.51cto.com/62575/39324" target="_blank"><span style="color: #000000;">多对多单向关联</span></a><br />└─双向关联<br />&nbsp;&nbsp;&nbsp; ├─&nbsp;&nbsp;<a href="http://lavasoft.blog.51cto.com/62575/39329" target="_blank"><span style="color: #000000;">一对一外键双向关联</span></a><br />&nbsp;&nbsp;&nbsp; ├─&nbsp;&nbsp;<a href="http://lavasoft.blog.51cto.com/62575/39333" target="_blank"><span style="color: #000000;">一对一主键双向关联<br /></span></a>&nbsp;&nbsp;&nbsp; ├─&nbsp;&nbsp;<a href="http://lavasoft.blog.51cto.com/62575/39335" target="_blank"><span style="color: #000000;">一对一连接表双向关联</span></a><br />&nbsp;&nbsp;&nbsp; ├─&nbsp;&nbsp;<a href="http://lavasoft.blog.51cto.com/62575/39336" target="_blank"><span style="color: #000000;">一对多外键双向关联</span></a><br />&nbsp;&nbsp;&nbsp; ├─&nbsp;&nbsp;<a href="http://lavasoft.blog.51cto.com/62575/39337" target="_blank"><span style="color: #000000;">一对多连接表双向关联</span></a><br />&nbsp;&nbsp;&nbsp; └─&nbsp;&nbsp;<span style="color: #000000;"><a href="http://lavasoft.blog.51cto.com/62575/39344" target="_blank">多对多双向关联<br /><br /></a>原文地址：<a href="http://lavasoft.blog.51cto.com/62575/39398/">http://lavasoft.blog.51cto.com/62575/39398/</a></span></p>]]></description></item><item><title>freemarker中使用shiro标签</title><link>http://www.cnblogs.com/eastson/archive/2014/09/02/3951143.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 02 Sep 2014 03:49:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/09/02/3951143.html</guid><description><![CDATA[<p>地址：<a href="https://github.com/jagregory/shiro-freemarker-tags">https://github.com/jagregory/shiro-freemarker-tags</a><br />下载该jar包 或者源代码文件复制到自己工程的lib下或者package中&nbsp;<br /><img src="http://images.cnitblog.com/blog/111826/201409/021147219229173.png" alt="" /><br /><br />如果使用spring MVC，请看<a href="http://www.woxplife.com/articles/473.html%20" target="_blank">http://www.woxplife.com/articles/473.html&nbsp;</a><br />如果单独使用Freemarker 比如使用模板生成静态页,&nbsp;在相关的类中加入如下代码：&nbsp;</p>
<div class="cnblogs_code">
<pre>Configuration cfg = <span style="color: #0000ff;">new</span><span style="color: #000000;"> Configuration(); 
cfg.setDefaultEncoding(&ldquo;UTF</span>-8<span style="color: #000000;">&rdquo;); 
cfg.setSharedVariable(</span>"shiro", <span style="color: #0000ff;">new</span> ShiroTags()); </pre>
</div>
<p><span style="line-height: 1.5;">然后在ftl页面中使用tag：&nbsp;<br /></span></p>
<div class="cnblogs_code">
<pre>&lt;@shiro.hasRole name=&rdquo;admin&rdquo;&gt;Hello admin!&lt;/@shiro.hasRole&gt; </pre>
</div>]]></description></item><item><title>FreeMarker页面中获得contextPath</title><link>http://www.cnblogs.com/eastson/archive/2014/09/01/3948802.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 01 Sep 2014 02:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/09/01/3948802.html</guid><description><![CDATA[<p>要在ftl页面中使用contextPath，需要在viewResolver中做如下配置(红色部分)：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="viewResolver"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="cache"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="true"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="prefix"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">=""</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="suffix"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">=".ftl"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="exposeSpringMacroHelpers"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="true"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #ff0000;"><strong>&lt;property name="requestContextAttribute" value="rc" /&gt; </strong> </span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">bean</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><span style="line-height: 1.5;">这样，在页面中使用${rc.contextPath} 就可获得contextPath。注意，这里的rc对应的是<a href="http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/web/servlet/support/RequestContext.html" target="_blank">org.springframework.web.servlet.support.RequestContext</a>类的实例。<br /></span></p>]]></description></item><item><title>巧用Freemarker的自定义方法</title><link>http://www.cnblogs.com/eastson/archive/2014/08/15/3914485.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 15 Aug 2014 03:43:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/15/3914485.html</guid><description><![CDATA[<p>要想使用Freemarker支持的自定义方法，需要实现freemarker.template.TemplateMethodModel接口，然后将方法对象放入到Freemarker的数据模型中，这样在ftl文件中便可以像使用Freemarker内置方法一样使用该方法了。&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.List;  
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletResponse;  
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> freemarker.template.TemplateMethodModel;  
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> freemarker.template.TemplateModelException;  
  
</span><span style="color: #008000;">/**</span><span style="color: #008000;"> 
 * Freemarker自定义方法 
 * 实现response.encodeURL(url)功能 
 </span><span style="color: #008000;">*/</span>  
<span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> EncodeURLMethod <span style="color: #0000ff;">implements</span><span style="color: #000000;"> TemplateMethodModel {  
      
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> HttpServletResponse response;  
      
    </span><span style="color: #008000;">/**</span><span style="color: #008000;"> 
     * 带参数的构造函数 
     * </span><span style="color: #808080;">@param</span><span style="color: #008000;"> response HttpServletResponse对象 
     </span><span style="color: #008000;">*/</span>  
    <span style="color: #0000ff;">public</span><span style="color: #000000;"> EncodeURLMethod(HttpServletResponse response)  
    {  
        </span><span style="color: #0000ff;">this</span>.response=<span style="color: #000000;">response;  
    }  
  
    </span><span style="color: #008000;">/**</span><span style="color: #008000;"> 
     * 执行方法 
     * </span><span style="color: #808080;">@param</span><span style="color: #008000;"> argList 方法参数列表 
     * </span><span style="color: #808080;">@return</span><span style="color: #008000;"> Object 方法返回值 
     * </span><span style="color: #808080;">@throws</span><span style="color: #008000;"> TemplateModelException 
     </span><span style="color: #008000;">*/</span>  
    <span style="color: #0000ff;">public</span> Object exec(List argList) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> TemplateModelException {  
        </span><span style="color: #0000ff;">if</span>(argList.size()!=1)   <span style="color: #008000;">//</span><span style="color: #008000;">限定方法中必须且只能传递一个参数  </span>
<span style="color: #000000;">        {  
            </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> TemplateModelException("Wrong arguments!"<span style="color: #000000;">);  
        }  
        </span><span style="color: #008000;">//</span><span style="color: #008000;">返回response.encodeURL执行结果  </span>
        <span style="color: #0000ff;">return</span> response.encodeURL((String)argList.get(0<span style="color: #000000;">));  
    }  
}  </span></pre>
</div>
<p>输出模版数据模型时，将EncodeURLMethod的实例对象放入模型中：</p>
<div class="cnblogs_code">
<pre>dataMap.put("encodeURL", <span style="color: #0000ff;">new</span> EncodeURLMethod(context.getResponse()));  </pre>
</div>
<p>在Freemarker模版文件中这样使用：</p>
<div class="cnblogs_code">
<pre>${encodeURL("/news/showNews.sf?id=123456")}  </pre>
</div>
<p>输出结果实际就是使用response.encodeURL输出的结果。</p>]]></description></item><item><title>freemarker空值的多种处理方法</title><link>http://www.cnblogs.com/eastson/archive/2014/08/15/3914138.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 15 Aug 2014 02:29:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/15/3914138.html</guid><description><![CDATA[<p>默认情况下，freemarker的变量必须有值，如果没有被赋值的变量在页面上使用就会抛出异常，出错的信息都会显示在页面上。&nbsp;<br /><span style="font-family: Tahoma;">解决办法：</span></p>
<div><br />
<div><span style="font-family: Tahoma;">方法一、我们可以在页面上使用freemarker变量时 以&nbsp;</span>${xxx?if_exists} 来处理空值的情况，或采用默认值的方法避免此类问题。但每个freemarker变量都这样处理确实比较让人心烦，请看以下方法。</div>
<div>&nbsp;</div>
<div><span style="font-family: Tahoma;">方法二、在类路径下 加入&nbsp;</span>freemarker.properties 文件，里面配置&nbsp;classic_compatible=true。</div>
<div>&nbsp;</div>
<div><span style="font-family: Tahoma;">方法三、通过freemarker.template.Configuration的&nbsp;config.setClassicCompatible(true);通过源码我们看到，其实方法二、方法三是思想是一致的，只是实现方法不同而已。如果应用中已经存在了&nbsp;</span>freemarker.properties 并配置了其他的属性，可以在这里配置，否则推荐使用方法三，毕竟没有每个应用的配置文件实在是都够多了。</div>
<div>&nbsp;</div>
<div>方法四、在ftl文件内引入&nbsp;&lt;!--#setting classic_compatible=true--&gt;。</div>
<div>&nbsp;</div>
<div><span style="font-family: verdana, sans-serif;">其他关于在spring中的配置这里就省略。现在的项目中没有用到。</span></div>
<div>&nbsp;</div>
<div><span style="font-family: verdana, sans-serif;">总结：方法四是需要在每个需要这样处理的页面都要引入的，比较麻烦，、还是选择使用 方法二、方法三好了。但是方法二、方法三也不是万能的。例如我在action中定义一个MyBean类的对象为 myBean，MyBean中有Comp属性。在页面上就要 用如下语句使用：</span>${myBean.comp}，这里myBean可能为null，comp也可能为null。这时候 就要使用方法一了，${(myBean.comp)!} 或&nbsp;${(myBean.comp)?if_exists}。</div>

</div>]]></description></item><item><title>FreeMarker语法知识</title><link>http://www.cnblogs.com/eastson/archive/2014/08/11/3904829.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 11 Aug 2014 07:27:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/11/3904829.html</guid><description><![CDATA[<p>FreeMarker的模板文件并不比HTML页面复杂多少,FreeMarker模板文件主要由如下4个部分组成:<br /><strong>1,文本:直接输出的部分<br />2,注释:&lt;#-- ... --&gt;格式部分,不会输出<br />3,插值:即${...}或#{...}格式的部分,将使用数据模型中的部分替代输出<br />4,FTL指令:FreeMarker指定,和HTML标记类似,名字前加#予以区分,不会输出</strong></p>
<p>下面是一个FreeMarker模板的例子,包含了以上所说的4个部分<br />&lt;html&gt;&lt;br&gt;<br />&lt;head&gt;&lt;br&gt;<br />&lt;title&gt;Welcome!&lt;/title&gt;&lt;br&gt;<br />&lt;/head&gt;&lt;br&gt;<br />&lt;body&gt;&lt;br&gt;<br />&lt;#-- 注释部分 --&gt;&lt;br&gt;<br />&lt;#-- 下面使用插值 --&gt;<br />&lt;h1&gt;Welcome ${user} !&lt;/h1&gt;&lt;br&gt;<br />&lt;p&gt;We have these animals:&lt;br&gt;<br />&lt;u1&gt;&lt;br&gt;<br />&lt;#-- 使用FTL指令 --&gt;<br />&lt;#list animals as being&gt;&lt;br&gt;<br />&nbsp;&nbsp; &lt;li&gt;${being.name} for ${being.price} Euros&lt;br&gt;<br />&lt;#list&gt;&lt;br&gt;<br />&lt;u1&gt;&lt;br&gt;<br />&lt;/body&gt;&lt;br&gt;<br />&lt;/html&gt;</p>
<p><strong>1, FTL指令规则</strong></p>
<p>在FreeMarker中,使用FTL标签来使用指令,FreeMarker有3种FTL标签,这和HTML标签是完全类似的.<br />1,开始标签:&lt;#directivename parameter&gt;<br />2,结束标签:&lt;/#directivename&gt;<br />3,空标签:&lt;#directivename parameter/&gt;</p>
<p>实际上,使用标签时前面的符号#也可能变成@,如果该指令是一个用户指令而不是系统内建指令时,应将#符号改成@符号.<br />使用FTL标签时,应该有正确的嵌套,而不是交叉使用,这和XML标签的用法完全一样.如果全用不存在的指令,FreeMarker不会使用模板输出,而是产生一个错误消息.FreeMarker会忽略FTL标签中的空白字符.值得注意的是&lt; , /&gt; 和指令之间不允许有空白字符.</p>
<p><strong>2, 插值规则</strong></p>
<p>FreeMarker的插值有如下两种类型:1,通用插值${expr};2,数字格式化插值:#{expr}或#{expr;format}</p>
<p><strong>2.1 通用插值</strong></p>
<p>对于通用插值,又可以分为以下4种情况:<br />1,插值结果为字符串值:直接输出表达式结果<br />2,插值结果为数字值:根据默认格式(由#setting指令设置)将表达式结果转换成文本输出.可以使用内建的字符串函数格式化单个插值,如下面的例子:<br />&lt;#settion number_format="currency"/&gt;<br />&lt;#assign answer=42/&gt;<br />${answer}<br />${answer?string} &lt;#-- the same as ${answer} --&gt;<br />${answer?string.number}<br />${answer?string.currency}<br />${answer?string.percent}<br />${answer}<br />输出结果是:<br />$42.00<br />$42.00<br />42<br />$42.00<br />4,200%<br />3,插值结果为日期值:根据默认格式(由#setting指令设置)将表达式结果转换成文本输出.可以使用内建的字符串函数格式化单个插值,如下面的例子:<br />${lastUpdated?string("yyyy-MM-dd HH:mm:ss zzzz")}<br />${lastUpdated?string("EEE, MMM d, ''yy")}<br />${lastUpdated?string("EEEE, MMMM dd, yyyy, hh:mm:ss a '('zzz')'")}<br />输出结果是:<br />2008-04-08 08:08:08 Pacific Daylight Time<br />Tue, Apr 8, '03<br />Tuesday, April 08, 2003, 08:08:08 PM (PDT)<br />4,插值结果为布尔值:根据默认格式(由#setting指令设置)将表达式结果转换成文本输出.可以使用内建的字符串函数格式化单个插值,如下面的例子:<br />&lt;#assign foo=true/&gt;<br />${foo?string("yes", "no")}<br />输出结果是:<br />yes</p>
<p><strong>2.2 数字格式化插值</strong></p>
<p>数字格式化插值可采用#{expr;format}形式来格式化数字,其中format可以是:<br />mX:小数部分最小X位<br />MX:小数部分最大X位<br />如下面的例子:<br />&lt;#assign x=2.582/&gt;<br />&lt;#assign y=4/&gt;<br />#{x; M2} &lt;#-- 输出2.58 --&gt;<br />#{y; M2} &lt;#-- 输出4 --&gt;<br />#{x; m2} &lt;#-- 输出2.6 --&gt;<br />#{y; m2} &lt;#-- 输出4.0 --&gt;<br />#{x; m1M2} &lt;#-- 输出2.58 --&gt;<br />#{x; m1M2} &lt;#-- 输出4.0 --&gt;</p>
<p><strong>3, 表达式</strong></p>
<p>表达式是FreeMarker模板的核心功能,表达式放置在插值语法${}之中时,表明需要输出表达式的值;表达式语法也可与FreeMarker标签结合,用于控制输出.实际上FreeMarker的表达式功能非常强大,它不仅支持直接指定值,输出变量值,也支持字符串格式化输出和集合访问等功能.</p>
<p><strong>3.1 直接指定值</strong></p>
<p>使用直接指定值语法让FreeMarker直接输出插值中的值,而不是输出变量值.直接指定值可以是字符串,数值,布尔值,集合和MAP对象.</p>
<p>1,字符串<br />直接指定字符串值使用单引号或双引号限定,如果字符串值中包含特殊字符需要转义,看下面的例子:<br />${"我的文件保存在C:\\盘"}<br />${'我名字是\"annlee\"'}<br />输出结果是:&nbsp;<br />我的文件保存在C:\盘<br />我名字是"annlee"</p>
<p>FreeMarker支持如下转义字符:<br />\";双引号(u0022)<br />\';单引号(u0027)<br />\\;反斜杠(u005C)<br />\n;换行(u000A)<br />\r;回车(u000D)<br />\t;Tab(u0009)<br />\b;退格键(u0008)<br />\f;Form feed(u000C)<br />\l;&lt;<br />\g;&gt;<br />\a;&amp;<br />\{;{<br />\xCode;直接通过4位的16进制数来指定Unicode码,输出该unicode码对应的字符.</p>
<p>如果某段文本中包含大量的特殊符号,FreeMarker提供了另一种特殊格式:可以在指定字符串内容的引号前增加r标记,在r标记后的文件将会直接输出.看如下代码:<br />${r"${foo}"}<br />${r"C:\foo\bar"}<br />输出结果是:<br />${foo}<br />C:\foo\bar</p>
<p>2,数值<br />表达式中的数值直接输出,不需要引号.小数点使用"."分隔,不能使用分组","符号.FreeMarker目前还不支持科学计数法,所以"1E3"是错误的.在FreeMarker表达式中使用数值需要注意以下几点:<br />1,数值不能省略小数点前面的0,所以".5"是错误的写法<br />2,数值8 , +8 , 8.00都是相同的</p>
<p>3,布尔值<br />直接使用true和false,不使用引号.</p>
<p>4,集合<br />集合以方括号包括,各集合元素之间以英文逗号","分隔,看如下的例子:<br />&lt;#list ["星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期天"] as x&gt;<br />${x}<br />&lt;/#list&gt;<br />输出结果是:<br />星期一<br />星期二<br />星期三<br />星期四<br />星期五<br />星期六<br />星期天</p>
<p>除此之外,集合元素也可以是表达式,例子如下:<br />[2 + 2, [1, 2, 3, 4], "whatnot"]</p>
<p>还可以使用数字范围定义数字集合,如2..5等同于[2, 3, 4, 5],但是更有效率.注意,使用数字范围来定义集合时无需使用方括号,数字范围也支持反递增的数字范围,如5..2</p>
<p>5,Map对象<br />Map对象使用花括号包括,Map中的key-value对之间以英文冒号":"分隔,多组key-value对之间以英文逗号","分隔.下面是一个例子:<br />{"语文":78, "数学":80}<br />Map对象的key和value都是表达式,但是key必须是字符串</p>
<p><strong>3.2 输出变量值</strong></p>
<p>FreeMarker的表达式输出变量时,这些变量可以是顶层变量,也可以是Map对象中的变量,还可以是集合中的变量,并可以使用点(.)语法来访问Java对象的属性.下面分别讨论这些情况</p>
<p>1,顶层变量<br />所谓顶层变量就是直接放在数据模型中的值,例如有如下数据模型:<br />Map root = new HashMap();&nbsp;&nbsp; //创建数据模型<br />root.put("name","annlee");&nbsp;&nbsp; //name是一个顶层变量</p>
<p>对于顶层变量,直接使用${variableName}来输出变量值,变量名只能是字母,数字,下划线,$,@和#的组合,且不能以数字开头号.为了输出上面的name的值,可以使用如下语法:<br />${name}</p>
<p>2,输出集合元素<br />如果需要输出集合元素,则可以根据集合元素的索引来输出集合元素,集合元素的索引以方括号指定.假设有索引:<br />["星期一","星期二","星期三","星期四","星期五","星期六","星期天"].该索引名为week,如果需要输出星期三,则可以使用如下语法:<br />${week[2]}&nbsp;&nbsp; //输出第三个集合元素</p>
<p>此外,FreeMarker还支持返回集合的子集合,如果需要返回集合的子集合,则可以使用如下语法:<br />week[3..5]&nbsp;&nbsp; //返回week集合的子集合,子集合中的元素是week集合中的第4-6个元素</p>
<p>3,输出Map元素<br />这里的Map对象可以是直接HashMap的实例,甚至包括JavaBean实例,对于JavaBean实例而言,我们一样可以把其当成属性为key,属性值为value的Map实例.为了输出Map元素的值,可以使用点语法或方括号语法.假如有下面的数据模型:<br />Map root = new HashMap();<br />Book book = new Book();<br />Author author = new Author();<br />author.setName("annlee");<br />author.setAddress("gz");<br />book.setName("struts2");<br />book.setAuthor(author);<br />root.put("info","struts");<br />root.put("book", book);</p>
<p>为了访问数据模型中名为struts2的书的作者的名字,可以使用如下语法:<br />book.author.name&nbsp;&nbsp;&nbsp; //全部使用点语法<br />book["author"].name<br />book.author["name"]&nbsp;&nbsp;&nbsp; //混合使用点语法和方括号语法<br />book["author"]["name"]&nbsp;&nbsp; //全部使用方括号语法</p>
<p>使用点语法时,变量名字有顶层变量一样的限制,但方括号语法没有该限制,因为名字可以是任意表达式的结果.</p>
<p><strong>3.3, 字符串操作</strong></p>
<p>FreeMarker的表达式对字符串操作非常灵活,可以将字符串常量和变量连接起来,也可以返回字符串的子串等.</p>
<p>字符串连接有两种语法:<br />1,使用${..}或#{..}在字符串常量部分插入表达式的值,从而完成字符串连接.<br />2,直接使用连接运算符+来连接字符串</p>
<p>例如有如下数据模型:<br />Map root = new HashMap(); root.put("user","annlee");<br />下面将user变量和常量连接起来:<br />${"hello, ${user}!"}&nbsp;&nbsp; //使用第一种语法来连接<br />${"hello, " + user + "!"} //使用+号来连接<br />上面的输出字符串都是hello,annlee!,可以看出这两种语法的效果完全一样.</p>
<p>值得注意的是,${..}只能用于文本部分,不能用于表达式,下面的代码是错误的:<br />&lt;#if ${isBig}&gt;Wow!&lt;/#if&gt;<br />&lt;#if "${isBig}"&gt;Wow!&lt;/#if&gt;<br />应该写成:&lt;#if isBig&gt;Wow!&lt;/#if&gt;</p>
<p>截取子串可以根据字符串的索引来进行,截取子串时如果只指定了一个索引值,则用于取得字符串中指定索引所对应的字符;如果指定两个索引值,则返回两个索引中间的字符串子串.假如有如下数据模型:<br />Map root = new HashMap(); root.put("book","struts2,freemarker");<br />可以通过如下语法来截取子串:<br />${book[0]}${book[4]}&nbsp;&nbsp; //结果是su<br />${book[1..4]}&nbsp;&nbsp;&nbsp;&nbsp; //结果是tru</p>
<p><strong>3.4 集合连接运算符</strong></p>
<p>这里所说的集合运算符是将两个集合连接成一个新的集合,连接集合的运算符是+,看如下的例子:<br />&lt;#list ["星期一","星期二","星期三"] + ["星期四","星期五","星期六","星期天"] as x&gt;<br />${x}<br />&lt;/#list&gt;<br />输出结果是:星期一 星期二 星期三 星期四 星期五 星期六 星期天</p>
<p><strong>3.5 Map连接运算符</strong></p>
<p>Map对象的连接运算符也是将两个Map对象连接成一个新的Map对象,Map对象的连接运算符是+,如果两个Map对象具有相同的key,则右边的值替代左边的值.看如下的例子:<br />&lt;#assign scores = {"语文":86,"数学":78} + {"数学":87,"Java":93}&gt;<br />语文成绩是${scores.语文}<br />数学成绩是${scores.数学}<br />Java成绩是${scores.Java}<br />输出结果是:<br />语文成绩是86<br />数学成绩是87<br />Java成绩是93</p>
<p><strong>3.6 算术运算符</strong></p>
<p>FreeMarker表达式中完全支持算术运算,FreeMarker支持的算术运算符包括:+, - , * , / , % 看如下的代码:<br />&lt;#assign x=5&gt;<br />${ x * x - 100 }<br />${ x /2 }<br />${ 12 %10 }<br />输出结果是:<br />-75&nbsp;&nbsp; 2.5&nbsp;&nbsp; 2</p>
<p>在表达式中使用算术运算符时要注意以下几点:<br />1,运算符两边的运算数字必须是数字<br />2,使用+运算符时,如果一边是数字,一边是字符串,就会自动将数字转换为字符串再连接,如:${3 + "5"},结果是:35</p>
<p>使用内建的int函数可对数值取整,如:<br />&lt;#assign x=5&gt;<br />${ (x/2)?int }<br />${ 1.1?int }<br />${ 1.999?int }<br />${ -1.1?int }<br />${ -1.999?int }<br />结果是:2 1 1 -1 -1</p>
<p><strong>3.7 比较运算符</strong></p>
<p>表达式中支持的比较运算符有如下几个:<br />1,=或者==:判断两个值是否相等.<br />2,!=:判断两个值是否不等.<br />3,&gt;或者gt:判断左边值是否大于右边值<br />4,&gt;=或者gte:判断左边值是否大于等于右边值<br />5,&lt;或者lt:判断左边值是否小于右边值<br />6,&lt;=或者lte:判断左边值是否小于等于右边值</p>
<p>注意:=和!=可以用于字符串,数值和日期来比较是否相等,但=和!=两边必须是相同类型的值,否则会产生错误,而且FreeMarker是精确比较,"x","x ","X"是不等的.其它的运行符可以作用于数字和日期,但不能作用于字符串,大部分的时候,使用gt等字母运算符代替&gt;会有更好的效果,因为FreeMarker会把&gt;解释成FTL标签的结束字符,当然,也可以使用括号来避免这种情况,如:&lt;#if (x&gt;y)&gt;</p>
<p><strong>3.8 逻辑运算符</strong></p>
<p>逻辑运算符有如下几个:<br />逻辑与:&amp;&amp;<br />逻辑或:||<br />逻辑非:!<br />逻辑运算符只能作用于布尔值,否则将产生错误</p>
<p><strong>3.9 内建函数</strong></p>
<p>FreeMarker还提供了一些内建函数来转换输出,可以在任何变量后紧跟?,?后紧跟内建函数,就可以通过内建函数来轮换输出变量.下面是常用的内建的字符串函数:<br />html:对字符串进行HTML编码<br />cap_first:使字符串第一个字母大写<br />lower_case:将字符串转换成小写<br />upper_case:将字符串转换成大写<br />trim:去掉字符串前后的空白字符</p>
<p>下面是集合的常用内建函数<br />size:获取序列中元素的个数</p>
<p>下面是数字值的常用内建函数<br />int:取得数字的整数部分,结果带符号</p>
<p>例如:<br />&lt;#assign test="Tom &amp; Jerry"&gt;<br />${test?html}<br />${test?upper_case?html}<br />结果是:Tom &amp;amp; Jerry&nbsp;&nbsp; TOM &amp;amp; JERRY</p>
<p><strong>3.10 空值处理运算符</strong></p>
<p>FreeMarker对空值的处理非常严格,FreeMarker的变量必须有值,没有被赋值的变量就会抛出异常,因为FreeMarker未赋值的变量强制出错可以杜绝很多潜在的错误,如缺失潜在的变量命名,或者其他变量错误.这里所说的空值,实际上也包括那些并不存在的变量,对于一个Java的null值而言,我们认为这个变量是存在的,只是它的值为null,但对于FreeMarker模板而言,它无法理解null值,null值和不存在的变量完全相同.</p>
<p>为了处理缺失变量,FreeMarker提供了两个运算符:<br />!:指定缺失变量的默认值<br />??:判断某个变量是否存在</p>
<p>其中,!运算符的用法有如下两种:<br />variable!或variable!defaultValue,第一种用法不给缺失的变量指定默认值,表明默认值是空字符串,长度为0的集合,或者长度为0的Map对象.</p>
<p>使用!指定默认值时,并不要求默认值的类型和变量类型相同.使用??运算符非常简单,它总是返回一个布尔值,用法为:variable??,如果该变量存在,返回true,否则返回false</p>
<p><strong>3.11 运算符的优先级</strong></p>
<p>FreeMarker中的运算符优先级如下(由高到低排列):<br />1,一元运算符:!<br />2,内建函数:?<br />3,乘除法:*, / , %<br />4,加减法:- , +<br />5,比较:&gt; , &lt; , &gt;= , &lt;= (lt , lte , gt , gte)<br />6,相等:== , = , !=<br />7,逻辑与:&amp;&amp;<br />8,逻辑或:||<br />9,数字范围:..</p>
<p>实际上,我们在开发过程中应该使用括号来严格区分,这样的可读性好,出错少</p>
<p><strong>4 FreeMarker的常用指令</strong></p>
<p>FreeMarker的FTL指令也是模板的重要组成部分,这些指令可实现对数据模型所包含数据的抚今迭代,分支控制.除此之外,还有一些重要的功能,也是通过FTL指令来实现的.</p>
<p><strong>4.1 if指令</strong></p>
<p>这是一个典型的分支控制指令,该指令的作用完全类似于Java语言中的if,if指令的语法格式如下:<br />&lt;#if condition&gt;...<br />&lt;#elseif condition&gt;...<br />&lt;#elseif condition&gt;...<br />&lt;#else&gt; ...<br />&lt;/#if&gt;</p>
<p>例子如下:<br />&lt;#assign age=23&gt;<br />&lt;#if (age&gt;60)&gt;老年人<br />&lt;#elseif (age&gt;40)&gt;中年人<br />&lt;#elseif (age&gt;20)&gt;青年人<br />&lt;#else&gt; 少年人<br />&lt;/#if&gt;<br />输出结果是:青年人<br />上面的代码中的逻辑表达式用括号括起来主要是因为里面有&gt;符号,由于FreeMarker会将&gt;符号当成标签的结束字符,可能导致程序出错,为了避免这种情况,我们应该在凡是出现这些符号的地方都使用括号.</p>
<p><strong>4.2 switch , case , default , break指令</strong></p>
<p>这些指令显然是分支指令,作用类似于Java的switch语句,switch指令的语法结构如下:<br />&lt;#switch value&gt;<br />&lt;#case refValue&gt;...&lt;#break&gt;<br />&lt;#case refValue&gt;...&lt;#break&gt;<br />&lt;#default&gt;...<br />&lt;/#switch&gt;</p>
<p><strong>4.3 list, break指令</strong></p>
<p>list指令是一个迭代输出指令,用于迭代输出数据模型中的集合,list指令的语法格式如下:<br />&lt;#list sequence as item&gt;<br />...<br />&lt;/#list&gt;<br />上面的语法格式中,sequence就是一个集合对象,也可以是一个表达式,但该表达式将返回一个集合对象,而item是一个任意的名字,就是被迭代输出的集合元素.此外,迭代集合对象时,还包含两个特殊的循环变量:<br />item_index:当前变量的索引值<br />item_has_next:是否存在下一个对象<br />也可以使用&lt;#break&gt;指令跳出迭代</p>
<p>例子如下:<br />&lt;#list ["星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期天"] as x&gt;<br />${x_index + 1}.${x}&lt;#if x_has_next&gt;,&lt;/if&gt;<br />&lt;#if x="星期四"&gt;&lt;#break&gt;&lt;/#if&gt;<br />&lt;/#list&gt;</p>
<p><strong>4.4 include指令</strong></p>
<p>include指令的作用类似于JSP的包含指令,用于包含指定页.include指令的语法格式如下:<br />&lt;#include filename [options]&gt;<br />在上面的语法格式中,两个参数的解释如下:<br />filename:该参数指定被包含的模板文件<br />options:该参数可以省略,指定包含时的选项,包含encoding和parse两个选项,其中encoding指定包含页面时所用的解码集,而parse指定被包含文件是否作为FTL文件来解析,如果省略了parse选项值,则该选项默认是true.</p>
<p><strong>4.5 import指令</strong></p>
<p>该指令用于导入FreeMarker模板中的所有变量,并将该变量放置在指定的Map对象中,import指令的语法格式如下:<br />&lt;#import "/lib/common.ftl" as com&gt;<br />上面的代码将导入/lib/common.ftl模板文件中的所有变量,交将这些变量放置在一个名为com的Map对象中.</p>
<p><strong>4.6 noparse指令</strong></p>
<p>noparse指令指定FreeMarker不处理该指定里包含的内容,该指令的语法格式如下:<br />&lt;#noparse&gt;...&lt;/#noparse&gt;</p>
<p>看如下的例子:<br />&lt;#noparse&gt;<br />&lt;#list books as book&gt;<br />&nbsp;&nbsp; &lt;tr&gt;&lt;td&gt;${book.name}&lt;td&gt;作者:${book.author}<br />&lt;/#list&gt;<br />&lt;/#noparse&gt;<br />输出如下:<br />&lt;#list books as book&gt;<br />&nbsp;&nbsp; &lt;tr&gt;&lt;td&gt;${book.name}&lt;td&gt;作者:${book.author}<br />&lt;/#list&gt;</p>
<p><strong>4.7 escape , noescape指令</strong></p>
<p>escape指令导致body区的插值都会被自动加上escape表达式,但不会影响字符串内的插值,只会影响到body内出现的插值,使用escape指令的语法格式如下:<br />&lt;#escape identifier as expression&gt;...<br />&lt;#noescape&gt;...&lt;/#noescape&gt;<br />&lt;/#escape&gt;</p>
<p>看如下的代码:<br />&lt;#escape x as x?html&gt;<br />First name:${firstName}<br />Last name:${lastName}<br />Maiden name:${maidenName}<br />&lt;/#escape&gt;<br />上面的代码等同于:<br />First name:${firstName?html}<br />Last name:${lastName?html}<br />Maiden name:${maidenName?html}</p>
<p>escape指令在解析模板时起作用而不是在运行时起作用,除此之外,escape指令也嵌套使用,子escape继承父escape的规则,如下例子:<br />&lt;#escape x as x?html&gt;<br />Customer Name:${customerName}<br />Items to ship;<br />&lt;#escape x as itemCodeToNameMap[x]&gt;<br />&nbsp;&nbsp; ${itemCode1}<br />&nbsp;&nbsp; ${itemCode2}<br />&nbsp;&nbsp; ${itemCode3}<br />&nbsp;&nbsp; ${itemCode4}<br />&lt;/#escape&gt;<br />&lt;/#escape&gt;<br />上面的代码类似于:<br />Customer Name:${customerName?html}<br />Items to ship;<br />${itemCodeToNameMap[itemCode1]?html}<br />${itemCodeToNameMap[itemCode2]?html}<br />${itemCodeToNameMap[itemCode3]?html}<br />${itemCodeToNameMap[itemCode4]?html}</p>
<p>对于放在escape指令中所有的插值而言,这此插值将被自动加上escape表达式,如果需要指定escape指令中某些插值无需添加escape表达式,则应该使用noescape指令,放在noescape指令中的插值将不会添加escape表达式.</p>
<p><strong>4.8 assign指令</strong></p>
<p>assign指令在前面已经使用了多次,它用于为该模板页面创建或替换一个顶层变量,assign指令的用法有多种,包含创建或替换一个顶层变量,或者创建或替换多个变量等,它的最简单的语法如下:&lt;#assign name=value [in namespacehash]&gt;,这个用法用于指定一个名为name的变量,该变量的值为value,此外,FreeMarker允许在使用assign指令里增加in子句,in子句用于将创建的name变量放入namespacehash命名空间中.</p>
<p>assign指令还有如下用法:&lt;#assign name1=value1 name2=value2 ... nameN=valueN [in namespacehash]&gt;,这个语法可以同时创建或替换多个顶层变量,此外,还有一种复杂的用法,如果需要创建或替换的变量值是一个复杂的表达式,则可以使用如下语法格式:&lt;#assign name [in namespacehash]&gt;capture this&lt;/#assign&gt;,在这个语法中,是指将assign指令的内容赋值给name变量.如下例子:<br />&lt;#assign x&gt;<br />&lt;#list ["星期一", "星期二", "星期三", "星期四", "星期五", "星期六", "星期天"] as n&gt;<br />${n}<br />&lt;/#list&gt;<br />&lt;/#assign&gt;<br />${x}<br />上面的代码将产生如下输出:星期一 星期二 星期三 星期四 星期五 星期六 星期天</p>
<p>虽然assign指定了这种复杂变量值的用法,但是我们也不要滥用这种用法,如下例子:&lt;#assign x&gt;Hello ${user}!&lt;/#assign&gt;,以上代码改为如下写法更合适:&lt;#assign x="Hello ${user}!"&gt;</p>
<p><strong>4.9 setting指令</strong></p>
<p>该指令用于设置FreeMarker的运行环境,该指令的语法格式如下:&lt;#setting name=value&gt;,在这个格式中,name的取值范围包含如下几个:<br />locale:该选项指定该模板所用的国家/语言选项<br />number_format:指定格式化输出数字的格式<br />boolean_format:指定两个布尔值的语法格式,默认值是true,false<br />date_format,time_format,datetime_format:指定格式化输出日期的格式<br />time_zone:设置格式化输出日期时所使用的时区</p>
<p><strong>4.10 macro , nested , return指令</strong></p>
<p>macro可以用于实现自定义指令,通过使用自定义指令,可以将一段模板片段定义成一个用户指令,使用macro指令的语法格式如下:<br />&lt;#macro name param1 param2 ... paramN&gt;<br />...<br />&lt;#nested loopvar1, loopvar2, ..., loopvarN&gt;<br />...<br />&lt;#return&gt;<br />...<br />&lt;/#macro&gt;<br />在上面的格式片段中,包含了如下几个部分:<br />name:name属性指定的是该自定义指令的名字,使用自定义指令时可以传入多个参数<br />paramX:该属性就是指定使用自定义指令时报参数,使用该自定义指令时,必须为这些参数传入值<br />nested指令:nested标签输出使用自定义指令时的中间部分<br />nested指令中的循环变量:这此循环变量将由macro定义部分指定,传给使用标签的模板<br />return指令:该指令可用于随时结束该自定义指令.</p>
<p>看如下的例子:<br />&lt;#macro book&gt;&nbsp;&nbsp; //定义一个自定义指令<br />j2ee<br />&lt;/#macro&gt;<br />&lt;@book /&gt;&nbsp;&nbsp;&nbsp; //使用刚才定义的指令<br />上面的代码输出结果为:j2ee</p>
<p>在上面的代码中,可能很难看出自定义标签的用处,因为我们定义的book指令所包含的内容非常简单,实际上,自定义标签可包含非常多的内容,从而可以实现更好的代码复用.此外,还可以在定义自定义指令时,为自定义指令指定参数,看如下代码:<br />&lt;#macro book booklist&gt;&nbsp;&nbsp;&nbsp;&nbsp; //定义一个自定义指令booklist是参数<br />&lt;#list booklist as book&gt;<br />&nbsp;&nbsp; ${book}<br />&lt;/#list&gt;<br />&lt;/#macro&gt;<br />&lt;@book booklist=["spring","j2ee"] /&gt;&nbsp;&nbsp; //使用刚刚定义的指令<br />上面的代码为book指令传入了一个参数值,上面的代码的输出结果为:spring j2ee</p>
<p>不仅如此,还可以在自定义指令时使用nested指令来输出自定义指令的中间部分,看如下例子:<br />&lt;#macro page title&gt;<br />&lt;html&gt;<br />&lt;head&gt;<br />&nbsp;&nbsp; &lt;title&gt;FreeMarker示例页面 - ${title?html}&lt;/title&gt;<br />&lt;/head&gt;<br />&lt;body&gt;<br />&nbsp;&nbsp; &lt;h1&gt;${title?html}&lt;/h1&gt;<br />&nbsp;&nbsp; &lt;#nested&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //用于引入用户自定义指令的标签体<br />&lt;/body&gt;<br />&lt;/html&gt;<br />&lt;/#macro&gt;<br />上面的代码将一个HTML页面模板定义成一个page指令,则可以在其他页面中如此page指令:<br />&lt;#import "/common.ftl" as com&gt;&nbsp;&nbsp;&nbsp;&nbsp; //假设上面的模板页面名为common.ftl,导入页面<br />&lt;@com.page title="book list"&gt;<br />&lt;u1&gt;<br />&lt;li&gt;spring&lt;/li&gt;<br />&lt;li&gt;j2ee&lt;/li&gt;<br />&lt;/ul&gt;<br />&lt;<a rel="nofollow">/@com.page</a>&gt;</p>
<p>从上面的例子可以看出,使用macro和nested指令可以非常容易地实现页面装饰效果,此外,还可以在使用nested指令时,指定一个或多个循环变量,看如下代码:<br />&lt;#macro book&gt;<br />&lt;#nested 1&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //使用book指令时指定了一个循环变量值<br />&lt;#nested 2&gt;<br />&lt;/#macro&gt;<br />&lt;@book ;x&gt; ${x} .图书&lt;<a rel="nofollow">/@book</a>&gt;<br />当使用nested指令传入变量值时,在使用该自定义指令时,就需要使用一个占位符(如book指令后的;x).上面的代码输出文本如下:<br />1 .图书&nbsp;&nbsp;&nbsp; 2 .图书</p>
<p>在nested指令中使用循环变量时,可以使用多个循环变量,看如下代码:<br />&lt;#macro repeat count&gt;<br />&lt;#list 1..count as x&gt;&nbsp;&nbsp;&nbsp;&nbsp; //使用nested指令时指定了三个循环变量<br />&nbsp;&nbsp; &lt;#nested x, x/2, x==count&gt;<br />&lt;/#list&gt;<br />&lt;/#macro&gt;<br />&lt;@repeat count=4 ; c halfc last&gt;<br />${c}. ${halfc}&lt;#if last&gt; Last! &lt;/#if&gt;<br />&lt;<a rel="nofollow">/@repeat</a>&gt;<br />上面的输出结果为:<br />1. 0.5&nbsp;&nbsp; 2. 1&nbsp;&nbsp; 3. 1.5&nbsp;&nbsp; 4. 2 Last;</p>
<p>return指令用于结束macro指令,一旦在macro指令中执行了return指令,则FreeMarker不会继续处理macro指令里的内容,看如下代码:<br />&lt;#macro book&gt;<br />spring<br />&lt;#return&gt;<br />j2ee<br />&lt;/#macro&gt;<br />&lt;@book /&gt;<br />上面的代码输出:spring,而j2ee位于return指令之后,不会输出.</p>]]></description></item><item><title>ContextLoaderListener与DispatcherServlet所加载的applicationContext的区别</title><link>http://www.cnblogs.com/eastson/archive/2014/08/11/3904713.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 11 Aug 2014 06:43:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/11/3904713.html</guid><description><![CDATA[<p>spring通过在web.xml 中配置ContextLoaderListener 来加载context配置文件，在DispatcherServlet中也可以来加载spring context配置文件，那么这两个有什么区别呢。<br /><br />ContextLoaderListener中加载的context成功后，spring 将 applicationContext存放在ServletContext中key值为"org.springframework.web.context.WebApplicationContext.ROOT"的attribute 中。 (servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, this.context));可以通过 WebApplicationContextUtils.getRequiredWebApplicationContext(servletContext) 或WebApplicationContextUtils.getWebApplicationContext(servletContext)方法来获取对应的applicationContext。<br /><br />DispatcherServlet加载的context成功后，如果 publishContext属性的值设置为true的话(缺省为true) 会将applicationContext存放在 org.springframework.web.servlet.FrameworkServlet.CONTEXT. + (servletName)的attribute中。<br /><br />例如 web.xml中配置如下&nbsp;</p>
<div id="">Xml代码 &nbsp;</div>
<p>
&nbsp;&nbsp;&nbsp; &lt;servlet&gt;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;servlet-name&gt;mvcServlet&lt;/servlet-name&gt;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;init-param&gt;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;param-value&gt;classpath*:/spring/config/applicationContextMVC.xml&lt;/param-value&gt;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/init-param&gt;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp; &lt;/servlet&gt;&nbsp;<br /><br />则对应的applicationContext的attribute key值为org.springframework.web.servlet.FrameworkServlet.CONTEXT.mvcServlet。<br /><br />&nbsp; 在每次request请求时，DispatcherServlet会将此applicationContext存放在request中attribute 值为 org.springframework.web.servlet.DispatcherServlet.CONTEXT中 (request.setAttribute(WEB_APPLICATION_CONTEXT_ATTRIBUTE,getWebApplicationContext());)。可以通过 RequestContextUtils.getWebApplicationContext 或 WebApplicationContextUtils.getWebApplicationContext(servletContext,attrname) 方法 来获取对应的applicationContext。<br /><br />&nbsp; 从上面的分析可以看出,DispatcherServlet所加载的applicationContext可以认为是mvc私有的context，由于保存在servletContext中的key值与通过ContextLoaderListener加载进来的applicationContext使用的 key值不相同，因此如果只使用DispatcherServlet加载context的话，如果程序中有地方使用 WebApplicationContextUtils.getRequiredWebApplicationContext(servletContext) 来试图获取applicationContext时，就会抛出"No WebApplicationContext found: no ContextLoaderListener registered?"的exception。</p>]]></description></item><item><title>Mingyang.net：自定义FreeMarkerView</title><link>http://www.cnblogs.com/eastson/archive/2014/08/08/3899617.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 08 Aug 2014 08:09:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/08/3899617.html</guid><description><![CDATA[<p>自定义FreeMarkerView的目的是为了放一些公共的变量到FreeMarker模版里面.<br />spring-context.xml：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> ********************************************************************** 
     ** FreeMaker解析器                                                      ** 
     ********************************************************************** </span><span style="color: #008000;">--&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"</span><span style="color: #0000ff;">&gt;</span>
    <em><strong><span style="color: #ff0000;">&lt;!--&lt;property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" /&gt;--&gt;
    &lt;property name="viewClass" value="net.mingyang.cms.util.FtlView" /&gt;</span></strong>  </em> 
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="contentType"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="text/html;charset=UTF-8"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="exposeRequestAttributes"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="true"</span> <span style="color: #0000ff;">/&gt;</span>  
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="exposeSessionAttributes"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="true"</span> <span style="color: #0000ff;">/&gt;</span>  
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="exposeSpringMacroHelpers"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="true"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> &lt;property name="suffix" value=".ftl" /&gt; </span><span style="color: #008000;">--&gt;</span>  
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="order"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="0"</span> <span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">bean</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"</span><span style="color: #0000ff;">&gt;</span> 
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="templateLoaderPath"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="/WEB-INF/views/"</span> <span style="color: #0000ff;">/&gt;</span> 
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="freemarkerSettings"</span><span style="color: #0000ff;">&gt;</span> 
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">props</span><span style="color: #0000ff;">&gt;</span> 
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">prop </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="template_update_delay"</span><span style="color: #0000ff;">&gt;</span>0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">prop</span><span style="color: #0000ff;">&gt;</span> 
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">prop </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="default_encoding"</span><span style="color: #0000ff;">&gt;</span>UTF-8<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">prop</span><span style="color: #0000ff;">&gt;</span> 
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">prop </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="number_format"</span><span style="color: #0000ff;">&gt;</span>0.##########<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">prop</span><span style="color: #0000ff;">&gt;</span> 
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">prop </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="datetime_format"</span><span style="color: #0000ff;">&gt;</span>yyyy-MM-dd HH:mm:ss<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">prop</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">prop </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="date_format"</span><span style="color: #0000ff;">&gt;</span>yyyy-MM-dd<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">prop</span><span style="color: #0000ff;">&gt;</span> 
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">prop </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="classic_compatible"</span><span style="color: #0000ff;">&gt;</span>true<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">prop</span><span style="color: #0000ff;">&gt;</span> 
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">prop </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="template_exception_handler"</span><span style="color: #0000ff;">&gt;</span>ignore<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">prop</span><span style="color: #0000ff;">&gt;</span> 
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">props</span><span style="color: #0000ff;">&gt;</span> 
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">property</span><span style="color: #0000ff;">&gt;</span> 
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">bean</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>FtlView.java：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> net.mingyang.cms.util;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.Map;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequest;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.web.servlet.view.freemarker.FreeMarkerView;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> FtlView <span style="color: #0000ff;">extends</span><span style="color: #000000;"> FreeMarkerView
{
    @Override
    </span><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">void</span> exposeHelpers(Map&lt;String, Object&gt;<span style="color: #000000;"> model,
            HttpServletRequest request) </span><span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception
    {
        model.put(</span>"contextPath"<span style="color: #000000;">, request.getContextPath());
        </span><span style="color: #0000ff;">super</span><span style="color: #000000;">.exposeHelpers(model, request);
    }
    
}</span></pre>
</div>]]></description></item><item><title>hibernate one-to-many many-to-one 双向注解</title><link>http://www.cnblogs.com/eastson/archive/2014/08/08/3899047.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 08 Aug 2014 04:00:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/08/3899047.html</guid><description><![CDATA[<p>建表语句：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">DROP</span> <span style="color: #0000ff;">TABLE</span> <span style="color: #0000ff;">IF</span> <span style="color: #808080;">EXISTS</span><span style="color: #000000;"> `t_company`;
</span><span style="color: #0000ff;">CREATE</span> <span style="color: #0000ff;">TABLE</span><span style="color: #000000;"> `t_company` (
  `companyId` </span><span style="color: #0000ff;">int</span>(<span style="color: #800000; font-weight: bold;">10</span>) unsigned <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;"> AUTO_INCREMENT,
  `companyName` </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">30</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
  </span><span style="color: #0000ff;">PRIMARY</span> <span style="color: #0000ff;">KEY</span><span style="color: #000000;"> (`companyId`)
) ENGINE</span><span style="color: #808080;">=</span>InnoDB AUTO_INCREMENT<span style="color: #808080;">=</span><span style="color: #800000; font-weight: bold;">3</span> <span style="color: #0000ff;">DEFAULT</span> CHARSET<span style="color: #808080;">=</span><span style="color: #000000;">gb2312;

</span><span style="color: #0000ff;">INSERT</span> <span style="color: #0000ff;">INTO</span> `t_company` <span style="color: #0000ff;">VALUES</span> (<span style="color: #ff0000;">'</span><span style="color: #ff0000;">1</span><span style="color: #ff0000;">'</span>, <span style="color: #ff0000;">'</span><span style="color: #ff0000;">Sun</span><span style="color: #ff0000;">'</span><span style="color: #000000;">);
</span><span style="color: #0000ff;">INSERT</span> <span style="color: #0000ff;">INTO</span> `t_company` <span style="color: #0000ff;">VALUES</span> (<span style="color: #ff0000;">'</span><span style="color: #ff0000;">2</span><span style="color: #ff0000;">'</span>, <span style="color: #ff0000;">'</span><span style="color: #ff0000;">Apache</span><span style="color: #ff0000;">'</span><span style="color: #000000;">);

</span><span style="color: #0000ff;">DROP</span> <span style="color: #0000ff;">TABLE</span> <span style="color: #0000ff;">IF</span> <span style="color: #808080;">EXISTS</span><span style="color: #000000;"> `t_employee`;
</span><span style="color: #0000ff;">CREATE</span> <span style="color: #0000ff;">TABLE</span><span style="color: #000000;"> `t_employee` (
  `employeeId` </span><span style="color: #0000ff;">int</span>(<span style="color: #800000; font-weight: bold;">10</span>) unsigned <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;"> AUTO_INCREMENT,
  `employeeName` </span><span style="color: #0000ff;">varchar</span>(<span style="color: #800000; font-weight: bold;">15</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
  `cid` </span><span style="color: #0000ff;">int</span>(<span style="color: #800000; font-weight: bold;">10</span>) unsigned <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
  </span><span style="color: #0000ff;">PRIMARY</span> <span style="color: #0000ff;">KEY</span><span style="color: #000000;"> (`employeeId`)
) ENGINE</span><span style="color: #808080;">=</span>InnoDB AUTO_INCREMENT<span style="color: #808080;">=</span><span style="color: #800000; font-weight: bold;">6</span> <span style="color: #0000ff;">DEFAULT</span> CHARSET<span style="color: #808080;">=</span><span style="color: #000000;">gb2312;

</span><span style="color: #0000ff;">INSERT</span> <span style="color: #0000ff;">INTO</span> `t_employee` <span style="color: #0000ff;">VALUES</span> (<span style="color: #ff0000;">'</span><span style="color: #ff0000;">1</span><span style="color: #ff0000;">'</span>, <span style="color: #ff0000;">'</span><span style="color: #ff0000;">Tom</span><span style="color: #ff0000;">'</span>, <span style="color: #ff0000;">'</span><span style="color: #ff0000;">1</span><span style="color: #ff0000;">'</span><span style="color: #000000;">);
</span><span style="color: #0000ff;">INSERT</span> <span style="color: #0000ff;">INTO</span> `t_employee` <span style="color: #0000ff;">VALUES</span> (<span style="color: #ff0000;">'</span><span style="color: #ff0000;">2</span><span style="color: #ff0000;">'</span>, <span style="color: #ff0000;">'</span><span style="color: #ff0000;">Summ</span><span style="color: #ff0000;">'</span>, <span style="color: #ff0000;">'</span><span style="color: #ff0000;">1</span><span style="color: #ff0000;">'</span><span style="color: #000000;">);
</span><span style="color: #0000ff;">INSERT</span> <span style="color: #0000ff;">INTO</span> `t_employee` <span style="color: #0000ff;">VALUES</span> (<span style="color: #ff0000;">'</span><span style="color: #ff0000;">3</span><span style="color: #ff0000;">'</span>, <span style="color: #ff0000;">'</span><span style="color: #ff0000;">Cat</span><span style="color: #ff0000;">'</span>, <span style="color: #ff0000;">'</span><span style="color: #ff0000;">2</span><span style="color: #ff0000;">'</span><span style="color: #000000;">);
</span><span style="color: #0000ff;">INSERT</span> <span style="color: #0000ff;">INTO</span> `t_employee` <span style="color: #0000ff;">VALUES</span> (<span style="color: #ff0000;">'</span><span style="color: #ff0000;">4</span><span style="color: #ff0000;">'</span>, <span style="color: #ff0000;">'</span><span style="color: #ff0000;">Vinylon</span><span style="color: #ff0000;">'</span>, <span style="color: #ff0000;">'</span><span style="color: #ff0000;">1</span><span style="color: #ff0000;">'</span><span style="color: #000000;">);
</span><span style="color: #0000ff;">INSERT</span> <span style="color: #0000ff;">INTO</span> `t_employee` <span style="color: #0000ff;">VALUES</span> (<span style="color: #ff0000;">'</span><span style="color: #ff0000;">5</span><span style="color: #ff0000;">'</span>, <span style="color: #ff0000;">'</span><span style="color: #ff0000;">Dog</span><span style="color: #ff0000;">'</span>, <span style="color: #ff0000;">'</span><span style="color: #ff0000;">2</span><span style="color: #ff0000;">'</span>);</pre>
</div>
<p><br />Employee.java</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> com.fancy.po;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.persistence.CascadeType;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.persistence.Entity;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.persistence.FetchType;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.persistence.GeneratedValue;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.persistence.GenerationType;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.persistence.Id;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.persistence.JoinColumn;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.persistence.ManyToOne;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.persistence.Table;

@Entity
@Table(name </span>= "t_employee"<span style="color: #000000;">)
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> Employee {

    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Integer employeeId;
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String  employeeName;
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Company company;
    
    @Id
    @GeneratedValue(strategy </span>=<span style="color: #000000;"> GenerationType.AUTO)
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> Integer getEmployeeId() {
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> employeeId;
    }
    </span><span style="color: #008000;">/**</span><span style="color: #008000;">
     * @ManyToOne：多对一,cascade：级联,请参考上一篇
      * fetch = FetchType.LAZY,延迟加载策略,如果不想延迟加载可以用FetchType.EAGER
     </span><span style="color: #008000;">*/</span><span style="color: #ff0000;">
    @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE, CascadeType.REFRESH},fetch = FetchType.LAZY)
    @JoinColumn(name = "cid")
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> Company getCompany() {
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> company;
    }
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> String getEmployeeName() {
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> employeeName;
    }
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> setEmployeeId(Integer employeeId) {
        </span><span style="color: #0000ff;">this</span>.employeeId =<span style="color: #000000;"> employeeId;
    }
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> setEmployeeName(String employeeName) {
        </span><span style="color: #0000ff;">this</span>.employeeName =<span style="color: #000000;"> employeeName;
    }
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> setCompany(Company company) {
        </span><span style="color: #0000ff;">this</span>.company =<span style="color: #000000;"> company;
    }
}</span></pre>
</div>
<p><br />Company.java</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> com.fancy.po;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.Set;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.persistence.Entity;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.persistence.GeneratedValue;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.persistence.GenerationType;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.persistence.Id;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.persistence.OneToMany;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.persistence.Table;

@Entity
@Table(name </span>= "t_company"<span style="color: #000000;">)
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> Company {

    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Integer companyId;
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String  companyName;
    </span><span style="color: #0000ff;">private</span> Set&lt;Employee&gt;<span style="color: #000000;"> employees;
    
    @Id
    @GeneratedValue(strategy </span>=<span style="color: #000000;"> GenerationType.AUTO)
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> Integer getCompanyId() {
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> companyId;
    }
    </span><span style="color: #008000;">/**</span><span style="color: #008000;">
     * @OneToMany 与 OneToOne相似的也用mappedBy,参考了Employee
     </span><span style="color: #008000;">*/</span><span style="color: #ff0000;">
    @OneToMany(mappedBy = "company")
    </span><span style="color: #0000ff;">public</span> Set&lt;Employee&gt;<span style="color: #000000;"> getEmployees() {
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> employees;
    }
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> String getCompanyName() {
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> companyName;
    }
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> setCompanyId(Integer companyId) {
        </span><span style="color: #0000ff;">this</span>.companyId =<span style="color: #000000;"> companyId;
    }
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> setCompanyName(String companyName) {
        </span><span style="color: #0000ff;">this</span>.companyName =<span style="color: #000000;"> companyName;
    }
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> setEmployees(Set&lt;Employee&gt;<span style="color: #000000;"> employees) {
        </span><span style="color: #0000ff;">this</span>.employees =<span style="color: #000000;"> employees;
    }
}</span></pre>
</div>
<p><br />Test.java</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> com.fancy.test;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.Iterator;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.Set;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.hibernate.Session;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.hibernate.SessionFactory;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.hibernate.cfg.AnnotationConfiguration;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.hibernate.cfg.Configuration;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> com.fancy.po.Company;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> com.fancy.po.Employee;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> Test {

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> main(String[] args) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;">读取hibernate配置,默认读取classpath下的hibernate.cfg.xml</span>
        Configuration conf = <span style="color: #0000ff;">new</span><span style="color: #000000;"> AnnotationConfiguration();    
        </span><span style="color: #008000;">//</span><span style="color: #008000;">构建session工厂</span>
         SessionFactory sessionFactory =<span style="color: #000000;"> conf.configure().buildSessionFactory();
        </span><span style="color: #008000;">//</span><span style="color: #008000;">打开session</span>
        Session session =<span style="color: #000000;"> sessionFactory.openSession();
        </span><span style="color: #008000;">//</span><span style="color: #008000;">开始事务</span>
<span style="color: #000000;">         session.beginTransaction();
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        </span><span style="color: #008000;">//</span><span style="color: #008000;">test1(session);   </span><span style="color: #008000;">//</span><span style="color: #008000;">测试 1
        </span><span style="color: #008000;">//</span><span style="color: #008000;">test2(session);  </span><span style="color: #008000;">//</span><span style="color: #008000;">测试  2</span>
        test3(session);   <span style="color: #008000;">//</span><span style="color: #008000;">测试   3
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> * * * * * * * * * * * * * * * * * * * * * * * * * * * *
        </span><span style="color: #008000;">//</span><span style="color: #008000;">提交事务</span>
<span style="color: #000000;">         session.getTransaction().commit();
        </span><span style="color: #008000;">//</span><span style="color: #008000;">关闭session工厂</span>
<span style="color: #000000;">         sessionFactory.close();
        </span><span style="color: #008000;">//</span><span style="color: #008000;">关闭session</span>
<span style="color: #000000;">        session.close();
    }
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> test1(Session session){
        Company company </span>= (Company)session.get(Company.<span style="color: #0000ff;">class</span>, 1); <span style="color: #008000;">//</span><span style="color: #008000;">发出Company的select语句</span>
         Set&lt;Employee&gt; employee = company.getEmployees();         <span style="color: #008000;">//</span><span style="color: #008000;">不发出Employee的select语句</span>
         System.out.println("Company ：" +<span style="color: #000000;"> company.getCompanyName());
        System.out.println(</span>"CountSum：" + employee.size()); <span style="color: #008000;">//</span><span style="color: #008000;">Employee初次被使用,发出select语句</span>
         Iterator&lt;Employee&gt; it = employee.iterator(); <span style="color: #008000;">//</span><span style="color: #008000;">Employee不再发出select语句</span>
         <span style="color: #0000ff;">while</span><span style="color: #000000;">(it.hasNext()){
          System.out.println(</span>"EmployeeName：" +<span style="color: #000000;"> it.next().getEmployeeName());
        }
    }
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> test2(Session session){
       Company company </span>= (Company)session.get(Company.<span style="color: #0000ff;">class</span>, 2);<span style="color: #008000;">//</span><span style="color: #008000;">发出Company的select语句</span>
        Set&lt;Employee&gt; employee = company.getEmployees();        <span style="color: #008000;">//</span><span style="color: #008000;">不发出Employee的select语句</span>
        Iterator&lt;Employee&gt; it = employee.iterator(); <span style="color: #008000;">//</span><span style="color: #008000;">发出Employee的select语句</span>
        Employee e = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
       Boolean first </span>= <span style="color: #0000ff;">false</span><span style="color: #000000;">;
       </span><span style="color: #0000ff;">while</span><span style="color: #000000;">(it.hasNext()){
          e </span>=<span style="color: #000000;"> it.next();
          </span><span style="color: #0000ff;">if</span>(!<span style="color: #000000;">first){
              System.out.println(</span>"EmployeeId：[" + e.getEmployeeId() + "] information will be change"<span style="color: #000000;">);
              e.setEmployeeName(</span>"fancy"); <span style="color: #008000;">//</span><span style="color: #008000;">更改雇员名字
            </span><span style="color: #008000;">//</span><span style="color: #008000;">  session.save(e);  </span><span style="color: #008000;">//</span><span style="color: #008000;">发出Employee的update语句,不发出Company的update语句</span>
                session.save(company);    <span style="color: #008000;">//</span><span style="color: #008000;">发出Employee的update语句,不发出Company的update语句</span>
                first = <span style="color: #0000ff;">true</span><span style="color: #000000;">;
            }
            System.out.println(</span>"EmployeeName：" +<span style="color: #000000;"> e.getEmployeeName());
        }
    }
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> test3(Session session){
        Employee employee </span>= (Employee)session.get(Employee.<span style="color: #0000ff;">class</span>, 1);<span style="color: #008000;">//</span><span style="color: #008000;">发出Employee的select语句</span>
         Company  company  = (Company)session.get(Company.<span style="color: #0000ff;">class</span>, 1);<span style="color: #008000;">//</span><span style="color: #008000;">发出Company的select语句</span>
         company.setCompanyName("Oracle"); <span style="color: #008000;">//</span><span style="color: #008000;">更改公司名字
    </span><span style="color: #008000;">//</span><span style="color: #008000;">  session.save(company);</span><span style="color: #008000;">//</span><span style="color: #008000;">发出Company的update语句,不发出Employee的update语句</span>
         session.save(employee);<span style="color: #008000;">//</span><span style="color: #008000;">发出Company的update语句,不发出Employee的update语句</span>
<span style="color: #000000;">    }
}</span></pre>
</div>
<p><br />原文地址：<a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/fancyzero/archive/2012/06/10/hibernate-many-to-one_one-to-many-annotation.html">hibernate one-to-many many-to-one 双向注解<br /></a>参考：</p>
<p><a id="CategoryEntryList1_EntryStoryList_Entries_ctl05_TitleUrl" href="http://www.blogjava.net/fancydeepin/archive/2012/10/12/hibernate_annotation.html">hibernate annotation 之 注解声明</a></p>
<p><a id="CategoryEntryList1_EntryStoryList_Entries_ctl04_TitleUrl" href="http://www.blogjava.net/fancydeepin/archive/2012/10/12/hibernate_annotation_pk_strategy.html">hibernate annotation 之 主键生成策略</a></p>
<p><a id="CategoryEntryList1_EntryStoryList_Entries_ctl03_TitleUrl" href="http://www.blogjava.net/fancydeepin/archive/2012/10/13/hibernate_annotation_unidirectional_OneToOne.html">hibernate annotation 之 一对一 单/双 向外键关联</a></p>
<p><a id="CategoryEntryList1_EntryStoryList_Entries_ctl02_TitleUrl" href="http://www.blogjava.net/fancydeepin/archive/2012/10/21/hibernate-one-to-many-annotation.html">hibernate annotation 之 一对多单向外键关联</a></p>
<p><a id="CategoryEntryList1_EntryStoryList_Entries_ctl01_TitleUrl" href="http://www.blogjava.net/fancydeepin/archive/2012/10/21/hibernate-many-to-one-annotation.html">hibernate annotation 之 多对一单向外键关联</a></p>
<p><a id="CategoryEntryList1_EntryStoryList_Entries_ctl00_TitleUrl" href="http://www.blogjava.net/fancydeepin/archive/2012/10/21/hibernate-one-to-many-many-to-one-annotation.html">hibernate annotation 之 一对多、多对一双向外键关联</a></p>]]></description></item><item><title>Mingyang.net：Controller必需是public吗？</title><link>http://www.cnblogs.com/eastson/archive/2014/08/08/3898728.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 08 Aug 2014 02:08:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/08/3898728.html</guid><description><![CDATA[<p>通常定义Controller时一般都定义成public：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> net.mingyang.modules.system;

@Controller
@RequestMapping(</span>"/control/system/config"<span style="color: #000000;">)
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> ConfigController
{
    ......
}</span></pre>
</div>
<p>经测试，这个public不是必需的，定义成class也是可以的：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">class</span><span style="color: #000000;"> ConfigController
{
    ......
}</span></pre>
</div>
<p>同理，Service、Dao还有Model也没有必要都定义成public。但是要放到一个jar里面，否则其他jar访问不到。</p>]]></description></item><item><title>Mingyang.net：org.springframework.context.annotation.ConflictingBeanDefinitionException</title><link>http://www.cnblogs.com/eastson/archive/2014/08/08/3898653.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 08 Aug 2014 01:38:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/08/3898653.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>org.springframework.context.annotation.ConflictingBeanDefinitionException: <span style="color: #ff0000;">Annotation-specified bean name 'configController' for bean class <span style="font-weight: bold;">[</span>net.mingyang.modules.system.ConfigController<span style="font-weight: bold;">]</span> conflicts with existing, non-compatible bean definition of same name and class <span style="font-weight: bold;">[</span>net.mingyang.cms.controller.ConfigController<span style="font-weight: bold;">]</span></span><span style="color: #000000;">
    org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:</span>314<span style="color: #000000;">)
    org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:</span>253<span style="color: #000000;">)
    org.springframework.context.annotation.ComponentScanBeanDefinitionParser.parse(ComponentScanBeanDefinitionParser.java:</span>85<span style="color: #000000;">)
    org.springframework.beans.factory.xml.NamespaceHandlerSupport.parse(NamespaceHandlerSupport.java:</span>74<span style="color: #000000;">)
    org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:</span>1424<span style="color: #000000;">)
    org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseCustomElement(BeanDefinitionParserDelegate.java:</span>1414<span style="color: #000000;">)
    org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.parseBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:</span>187<span style="color: #000000;">)
    org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.doRegisterBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:</span>141<span style="color: #000000;">)
    org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:</span>110<span style="color: #000000;">)
    org.springframework.beans.factory.xml.XmlBeanDefinitionReader.registerBeanDefinitions(XmlBeanDefinitionReader.java:</span>508<span style="color: #000000;">)
    org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:</span>391<span style="color: #000000;">)
    org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:</span>335<span style="color: #000000;">)
    org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:</span>303<span style="color: #000000;">)
    ... ...</span></pre>
</div>
<p>问题的根源是我在两个不同的package里面定义两个ConfigController。默认的，Spring以类名作为Bean名，两个不同包里面的ConfigController就变成了相同的名字。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> net.mingyang.modules.system;

@Controller
@RequestMapping(</span>"/control/system/config"<span style="color: #000000;">)
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> ConfigController
{
    ......
}

</span><span style="color: #008000;">//</span><span style="color: #008000;">-----------------------------------------------------</span>

<span style="color: #0000ff;">package</span><span style="color: #000000;"> net.mingyang.cms.controller;

@Controller
@RequestMapping(</span>"/control/cms/config"<span style="color: #000000;">)
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> ConfigController
{
    ......
}</span></pre>
</div>
<p>解决方法是为两个@Controller指定名字：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> net.mingyang.modules.system;

@Controller(</span>"/control/system/config"<span style="color: #000000;">)
@RequestMapping(</span>"/control/system/config"<span style="color: #000000;">)
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> ConfigController
{
    ......
}

</span><span style="color: #008000;">//</span><span style="color: #008000;">-----------------------------------------------------</span>

<span style="color: #0000ff;">package</span><span style="color: #000000;"> net.mingyang.cms.controller;

@Controller(</span>"/control/cms/config"<span style="color: #000000;">)
@RequestMapping(</span>"/control/cms/config"<span style="color: #000000;">)
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> ConfigController
{
    ......
}</span></pre>
</div>]]></description></item><item><title>Mingyang.net：No identifier specified for entity</title><link>http://www.cnblogs.com/eastson/archive/2014/08/08/3898572.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 08 Aug 2014 00:58:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/08/3898572.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #000000;">org.hibernate.AnnotationException: No identifier specified for entity: net.mingyang.modules.system.ConfigGroup
    org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:</span>277<span style="color: #000000;">)
    org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:</span>224<span style="color: #000000;">)
    org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:</span>775<span style="color: #000000;">)
    org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:</span>3788<span style="color: #000000;">)
    org.hibernate.cfg.Configuration$MetadataSourceQueue.processMetadata(Configuration.java:</span>3742<span style="color: #000000;">)
    org.hibernate.cfg.Configuration.secondPassCompile(Configuration.java:</span>1410<span style="color: #000000;">)
    org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:</span>1844<span style="color: #000000;">)
    org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:</span>1928<span style="color: #000000;">)
    ......</span></pre>
</div>
<p>原来是没有定义@Id。</p>]]></description></item><item><title>jQuery：find()及children()的区别</title><link>http://www.cnblogs.com/eastson/archive/2014/08/06/3894224.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 06 Aug 2014 03:58:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/06/3894224.html</guid><description><![CDATA[<p>1：children及find方法都用是用来获得element的子elements的，两者都不会返回 text node，就像大多数的jQuery方法一样。 <br />2：children方法获得的仅仅是元素一下级的子元素，即：immediate children。 
<br />3：find方法获得所有下级元素，即：descendants of these elements in the DOM tree 
<br />4：children方法的参数selector 是可选的（optionally），用来过滤子元素，但find方法的参数selector方法是必选的。 
<br />5：find方法事实上可以通过使用 jQuery( selector, context )来实现：英语如是说：Selector context is 
implemented with the .find() method; therefore, $('li.item-ii').find('li') is 
equivalent to $('li', 'li.item-ii').&nbsp;</p>]]></description></item><item><title>Eclispe 安装PropertiesEditor插件</title><link>http://www.cnblogs.com/eastson/archive/2014/08/01/3884922.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 01 Aug 2014 06:29:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/01/3884922.html</guid><description><![CDATA[<p>一个不错的编写properties文件的Eclipse插件（plugin），有了它我们在编辑一些简体中文、繁体中文等Unicode文本时，就不必再使用native2ascii编码了。您可以通过Eclipse中的软件升级（Software Update）安装此插件，步骤如下：</p>
<div>1、展开Eclipse的Help菜单，将鼠标移到Software Update子项，在出现的子菜单中点击Find and Install；<br />2、在Install/Update对话框中选择Search for new features to install，点击Next；<br />3、在Install对话框中点击New Remote Site；<br /><strong><span>4、在New Update Site对话框的Name填入&ldquo;PropEdit&rdquo;或其它任意非空字符串，在URL中填入http://propedit.sourceforge.jp/eclipse/updates/；</span></strong><br />5、在Site to include to search列表中，除上一步加入的site外的其它选项去掉，点击Finsih；<br />6、在弹出的Updates对话框中的Select the features to install列表中将所有结尾为&ldquo;3.1.x&rdquo;的选项去掉（适用于Eclipse 3.2版本的朋友）；<br />7、点击Finish关闭对话框；<br />8、在下载后，同意安装，再按提示重启Eclipse，在工具条看到形似vi的按钮表示安装成功，插件可用。此时，Eclpise中所有properties文件的文件名前有绿色的P的图标作为标识。</div>]]></description></item><item><title>Mingyang.net：java.lang.NoSuchMethodError: javax.el.ExpressionFactory.newInstance()</title><link>http://www.cnblogs.com/eastson/archive/2014/08/01/3884864.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 01 Aug 2014 06:05:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/01/3884864.html</guid><description><![CDATA[<p>使用hibernate-validator校验数据模型时报出如下异常：</p>
<div class="cnblogs_code">
<pre>java.lang.NoSuchMethodError: javax.el.ExpressionFactory.newInstance()Ljavax/el/ExpressionFactory<span style="color: #008000;">;
</span>    at org.hibernate.validator.internal.engine.messageinterpolation.InterpolationTerm.&lt;clinit&gt;(InterpolationTerm.java:59<span style="color: #000000;">)
    at org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator.interpolateExpression(ResourceBundleMessageInterpolator.java:</span>341<span style="color: #000000;">)
    at org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator.interpolateMessage(ResourceBundleMessageInterpolator.java:</span>279<span style="color: #000000;">)
    at org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator.interpolate(ResourceBundleMessageInterpolator.java:</span>194<span style="color: #000000;">)
    at org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator.interpolate(LocaleContextMessageInterpolator.java:</span>50<span style="color: #000000;">)
    at org.hibernate.validator.internal.engine.ValidationContext.interpolate(ValidationContext.java:</span>362<span style="color: #000000;">)
    at org.hibernate.validator.internal.engine.ValidationContext.createConstraintViolation(ValidationContext.java:</span>271<span style="color: #000000;">)
    at org.hibernate.validator.internal.engine.ValidationContext.createConstraintViolations(ValidationContext.java:</span>232<span style="color: #000000;">)
    at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateSingleConstraint(ConstraintTree.java:</span>291<span style="color: #000000;">)
    at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:</span>133<span style="color: #000000;">)
    at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateComposingConstraints(ConstraintTree.java:</span>233<span style="color: #000000;">)
    at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:</span>102<span style="color: #000000;">)
    at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:</span>91<span style="color: #000000;">)
    at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:</span>83<span style="color: #000000;">)
    at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraint(ValidatorImpl.java:</span>547<span style="color: #000000;">)
    at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:</span>487<span style="color: #000000;">)
    at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:</span>451<span style="color: #000000;">)
    at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:</span>403<span style="color: #000000;">)
    at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:</span>206<span style="color: #000000;">)
    at org.springframework.validation.beanvalidation.SpringValidatorAdapter.validate(SpringValidatorAdapter.java:</span>108<span style="color: #000000;">)
    at org.springframework.validation.DataBinder.validate(DataBinder.java:</span>760<span style="color: #000000;">)
    ......</span></pre>
</div>
<p>原因是如果想在消息中使用EL表达式，请确保EL表达式版本是&nbsp;2.2或以上。我用的是Tomcat6，lib目录下的el-api.jar是2.1版本的，可以到Tomcat7拷贝一个。</p>]]></description></item><item><title>Mingyang.net：用注解校验数据</title><link>http://www.cnblogs.com/eastson/archive/2014/08/01/3884569.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 01 Aug 2014 03:33:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/01/3884569.html</guid><description><![CDATA[<p>注解校验依赖的是javax.validation和hibernate-validaton。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>javax.validation<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>validation-api<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>1.1.0.Final<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>org.hibernate<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>hibernate-validator<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>5.0.1.Final<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><br />激活Spring的注解驱动：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">mvc:annotation-driven </span><span style="color: #0000ff;">/&gt;</span></pre>
</div>
<p><br />定义数据模型：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> Subscriber {
 
    @Size(min</span>=2, max=30<span style="color: #000000;">) 
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String name;
     
    @NotEmpty @Email
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String email;
     
    @NotNull @Min(</span>13) @Max(110<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Integer age;
     
    @Size(min</span>=10<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String phone;
     
    @NotNull
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Gender gender;
     
    @DateTimeFormat(pattern</span>="MM/dd/yyyy"<span style="color: #000000;">)
    @NotNull @Past
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Date birthday;
 
    ...
}</span></pre>
</div>
<p><br />在控制器中用@Valid定义数据模型：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">@Controller
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> FormController {
     
    ...
     
    @RequestMapping(value</span>="form", method=<span style="color: #000000;">RequestMethod.POST)
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> String submitForm(@Valid Subscriber subscriber, BindingResult result, Model m) {
        </span><span style="color: #0000ff;">if</span><span style="color: #000000;">(result.hasErrors()) {
            </span><span style="color: #0000ff;">return</span> "formPage"<span style="color: #000000;">;
        }
         
        m.addAttribute(</span>"message", "Successfully saved person: " +<span style="color: #000000;"> subscriber.toString());
        </span><span style="color: #0000ff;">return</span> "formPage"<span style="color: #000000;">;
    }
}</span></pre>
</div>
<p><br />在视图中用&lt;form:errors&gt;显示错误信息：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:form </span><span style="color: #ff0000;">action</span><span style="color: #0000ff;">="/form"</span><span style="color: #ff0000;"> modelattribute</span><span style="color: #0000ff;">="subscriber"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">label </span><span style="color: #ff0000;">for</span><span style="color: #0000ff;">="nameInput"</span><span style="color: #0000ff;">&gt;</span>Name: <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">label</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:input </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="name"</span><span style="color: #ff0000;"> id</span><span style="color: #0000ff;">="nameInput"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">form:input</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:errors </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="name"</span><span style="color: #ff0000;"> cssclass</span><span style="color: #0000ff;">="error"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">form:errors</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;</span>
     
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">label </span><span style="color: #ff0000;">for</span><span style="color: #0000ff;">="ageInput"</span><span style="color: #0000ff;">&gt;</span>Age: <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">label</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:input </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="age"</span><span style="color: #ff0000;"> id</span><span style="color: #0000ff;">="ageInput"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">form:input</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:errors </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="age"</span><span style="color: #ff0000;"> cssclass</span><span style="color: #0000ff;">="error"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">form:errors</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;</span>
     
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">label </span><span style="color: #ff0000;">for</span><span style="color: #0000ff;">="phoneInput"</span><span style="color: #0000ff;">&gt;</span>Phone: <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">label</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:input </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="phone"</span><span style="color: #ff0000;"> id</span><span style="color: #0000ff;">="phoneInput"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">form:input</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:errors </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="phone"</span><span style="color: #ff0000;"> cssclass</span><span style="color: #0000ff;">="error"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">form:errors</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;</span>
     
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">label </span><span style="color: #ff0000;">for</span><span style="color: #0000ff;">="emailInput"</span><span style="color: #0000ff;">&gt;</span>Email: <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">label</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:input </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="email"</span><span style="color: #ff0000;"> id</span><span style="color: #0000ff;">="emailInput"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">form:input</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:errors </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="email"</span><span style="color: #ff0000;"> cssclass</span><span style="color: #0000ff;">="error"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">form:errors</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;</span>
     
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">label </span><span style="color: #ff0000;">for</span><span style="color: #0000ff;">="birthdayInput"</span><span style="color: #0000ff;">&gt;</span>Birthday: <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">label</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:input </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="birthday"</span><span style="color: #ff0000;"> id</span><span style="color: #0000ff;">="birthdayInput"</span><span style="color: #ff0000;"> placeholder</span><span style="color: #0000ff;">="MM/DD/YYYY"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:errors </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="birthday"</span><span style="color: #ff0000;"> cssclass</span><span style="color: #0000ff;">="error"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">form:errors</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;</span>
     
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">label </span><span style="color: #ff0000;">for</span><span style="color: #0000ff;">="genderOptions"</span><span style="color: #0000ff;">&gt;</span>Gender: <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">label</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:select </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="gender"</span><span style="color: #ff0000;"> id</span><span style="color: #0000ff;">="genderOptions"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:option </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">=""</span><span style="color: #0000ff;">&gt;</span>Select Gender<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">form:option</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:option </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="MALE"</span><span style="color: #0000ff;">&gt;</span>Male<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">form:option</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:option </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="FEMALE"</span><span style="color: #0000ff;">&gt;</span>Female<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">form:option</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">form:select</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:errors </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="gender"</span><span style="color: #ff0000;"> cssclass</span><span style="color: #0000ff;">="error"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">form:errors</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;</span>
     
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">label </span><span style="color: #ff0000;">for</span><span style="color: #0000ff;">="newsletterCheckbox"</span><span style="color: #0000ff;">&gt;</span>Newsletter? <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">label</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:checkbox </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="receiveNewsletter"</span><span style="color: #ff0000;"> id</span><span style="color: #0000ff;">="newsletterCheckbox"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">form:checkbox</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form:errors </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="receiveNewsletter"</span><span style="color: #ff0000;"> cssclass</span><span style="color: #0000ff;">="error"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">form:errors</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="submit"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="Submit"</span> <span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">form:input</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">form:form</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><img src="http://images.cnitblog.com/i/111826/201408/011126232583466.png" alt="" /><br /><br />如何定义校验信息？最简单的方式是用message参数：</p>
<div class="cnblogs_code">
<pre>@Size(min=10, message="Phone number must be at least 10 characters")</pre>
</div>
<p>但是这不能实现国际化文字处理。用messageSource可以实现国际化文字：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="messageSource"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.springframework.context.support.ResourceBundleMessageSource"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="basename"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="messages"</span><span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">bean</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>然后在src/main/resources下建立messages.properties，用下面的格式覆盖默认的校验信息：</p>
<div class="cnblogs_code">
<pre>{ValidationClass}.{modelObjectName}.{field}</pre>
</div>
<p>例如：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">Size=the {0} field must be between {2} and {1} characters long
Size.subscriber.name=Name must be between {2} and {1} characters
Size.subscriber.phone=Phone must be at least {2} characters
 
Min.subscriber.age=You must be older than {1}
Max.subscriber.age= Sorry, you have to be younger than {1}
 
Email=Email address not valid
Past=Date must be in the past
 
NotEmpty=Field cannot be left blank
NotNull=Field cannot be left blank
 
typeMismatch=Invalid format
methodInvocation.myRequest.amount=Invalid format</span></pre>
</div>
<p>注意下面这段话，说明了搜索校验信息的顺序：</p>
<div class="cnblogs_code">
<pre>For example, <span style="color: #ff0000;">if the age field of our &ldquo;subscriber&rdquo; model object fails the &ldquo;NotNull&rdquo; validation, the &ldquo;NotNull.subscriber.age&rdquo; message would be looked up. If the message isn&rsquo;t found, &ldquo;NotNull.subscriber&rdquo; would be looked for. Finally, if not found, &ldquo;NotNull&rdquo; message would be looked for. If that also isn&rsquo;t found, the default message (what we saw above) would be rendered.</span> </pre>
</div>
<p><br /><a href="http://codetutr.com/2013/05/28/spring-mvc-form-validation/">http://codetutr.com/2013/05/28/spring-mvc-form-validation/</a></p>]]></description></item><item><title>Mingyang.net：如何获取所有的请求参数？</title><link>http://www.cnblogs.com/eastson/archive/2014/08/01/3884459.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 01 Aug 2014 03:03:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/01/3884459.html</guid><description><![CDATA[<p><span style="line-height: 1.5;">第一种方法：用@RequestParam。</span></p>
<div class="cnblogs_code">
<pre>@RequestMapping(params="m=update", method=<span style="color: #000000;">RequestMethod.POST)
</span><span style="color: #0000ff;">public</span><span style="color: #000000;"> String updateAction(Model model,
        <span style="color: #ff0000;">@RequestParam Map</span></span><span style="color: #ff0000;">&lt;String,String&gt;</span><span style="color: #000000;"><span style="color: #ff0000;"> allRequestParams</span>)
{
    ......
}</span></pre>
</div>
<p><span style="line-height: 1.5;">第二种方法：用request.getParameterMap()。<br /></span></p>
<div class="cnblogs_code">
<pre>@RequestMapping(params="m=update", method=<span style="color: #000000;">RequestMethod.POST)
</span><span style="color: #0000ff;">public</span><span style="color: #000000;"> String updateAction(Model model)
{
    <span style="color: #ff0000;">Map</span></span><span style="color: #ff0000;">&lt;String, String[]&gt; allRequestParams =</span><span style="color: #000000;"><span style="color: #ff0000;"> getRequest().getParameterMap();</span>
    ......
}</span></pre>
</div>]]></description></item><item><title>采用p6spy完整显示hibernate的SQL语句</title><link>http://www.cnblogs.com/eastson/archive/2014/08/01/3884135.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 01 Aug 2014 00:45:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/01/3884135.html</guid><description><![CDATA[<p>虽然在hibernate中有show_sql选项，但是显示出来的语句大多类似</p>
<div class="cnblogs_code">
<pre>select * from xxx where value=?</pre>
</div>
<p><span style="line-height: 1.5;">但是有时候我们需要得到完整的SQL语句，怎么办呢？使用P6SPY就可以完成这个任务<br /><br /></span></p>
<p>p6spy是一个开源软件，它可以跟踪任何使用jdbc的应用产生的数据库操作。特别适合于监控ejb服务器产生的 sql statements。<br />官方网址：<a href="http://www.p6spy.com/%20">http://www.p6spy.com/ </a><br />目前p6spy 适用的应用服务器包括jboss, atg, orion, jonas, iplanet, weblogic, websphere, resin and tomcat.</p>
<p>下面我介绍一下p6spy在tomcat应用程序上安装的步骤：<br />（1）http://www.p6spy.com/download.html ，下载zip包<br />（2）解压出p6spy.jar spy.properties两个文件<br />（3）将p6spy.jar 放入应用程序的WEB-INF/lib目录，将spy.properties放入WEB-INF/classes目录<br />（4）修改spy.properties</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">realdriver =com.mysql.jdbc.Driver 将这行前面的#去掉
logfile = c:/spy.log 修改一个你需要的日志文件名</span></pre>
</div>
<p><span style="line-height: 1.5;">（5）修改hibernate.xml，修改connection.driver_class的值为com.p6spy.engine.spy.P6SpyDriver<br /></span><span style="line-height: 1.5;">（6）重启tomcat<br /></span><span style="line-height: 1.5;">（7）这样在c:/下的spy.log记录了数据库的访问情况。</span></p>
<p>&nbsp;</p>
<p>驱动程序加载先后的问题解决 <br />如果spy.log里出现 <br />你的程序的数据库驱动名称 is a real driver in spy.properties, but it has been loaded before p6spy . p6spy will not wrap these connections. Either prevent the driver from loading, or try setting 'deregisterdrivers' to true in spy.properties <br />请把spy.properties文件里的deregisterdrivers=false改为deregisterdrivers=true，重新运行即可。<br /><br /></p>
<p>5.在spring 配置文件中配置如下:</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> P6SPY dataSource target </span><span style="color: #008000;">--&gt;</span> 
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">id </span><span style="color: #0000ff;">= "dataSourceTarget"</span><span style="color: #ff0000;"> class </span><span style="color: #0000ff;">= "org.spring framework.jdbc.datasource.DriverManagerDataSource"</span> <span style="color: #0000ff;">&gt;</span> 
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name </span><span style="color: #0000ff;">= "driverClassName"</span><span style="color: #ff0000;"> value </span><span style="color: #0000ff;">= "oracle.jdbc.OracleDriver"</span> <span style="color: #0000ff;">/&gt;</span> 
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name </span><span style="color: #0000ff;">= "url"</span><span style="color: #ff0000;"> value </span><span style="color: #0000ff;">= "jdbc:oracle:thin:@localhost:1521:testdb"</span> <span style="color: #0000ff;">/&gt;</span> 
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name </span><span style="color: #0000ff;">= "username"</span><span style="color: #ff0000;"> value </span><span style="color: #0000ff;">= "tet"</span> <span style="color: #0000ff;">/&gt;</span> 
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name </span><span style="color: #0000ff;">= "password"</span><span style="color: #ff0000;"> value </span><span style="color: #0000ff;">= "test"</span> <span style="color: #0000ff;">/&gt;</span> 
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">bean </span><span style="color: #0000ff;">&gt;</span> 

<span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> dataSource </span><span style="color: #008000;">--&gt;</span> 
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">id </span><span style="color: #0000ff;">= "dataSource4develop"</span><span style="color: #ff0000;"> class </span><span style="color: #0000ff;">= "com.p6spy .engine.spy.P6DataSource"</span><span style="color: #ff0000;"> destroy-method </span><span style="color: #0000ff;">= "close"</span> <span style="color: #0000ff;">&gt;</span> 
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">constructor-arg </span><span style="color: #0000ff;">&gt;</span> 
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">ref </span><span style="color: #ff0000;">local </span><span style="color: #0000ff;">= "dataSourceTarget"</span> <span style="color: #0000ff;">/&gt;</span> 
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">constructor-arg </span><span style="color: #0000ff;">&gt;</span> 
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">bean </span><span style="color: #0000ff;">&gt;</span></pre>
</div>]]></description></item><item><title>Mingyang.net：格式化Hibernate的SQL输出语句</title><link>http://www.cnblogs.com/eastson/archive/2014/08/01/3884131.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 01 Aug 2014 00:36:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/01/3884131.html</guid><description><![CDATA[<p>在sping与hibernate整合中可以这样的设置</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="hibernateProperties"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">props</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">prop </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="hibernate.dialect"</span><span style="color: #0000ff;">&gt;</span>org.hibernate.dialect.MySQLDialect<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">prop</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">prop </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="hibernate.show_sql"</span><span style="color: #0000ff;">&gt;</span>true<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">prop</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">prop </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="hibernate.format_sql"</span><span style="color: #0000ff;">&gt;</span>true<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">prop</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">prop </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="hibernate.use_sql_comments"</span><span style="color: #0000ff;">&gt;</span>true<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">prop</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">props</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">property</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><span style="line-height: 1.5;">在hibernate中这样设置<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="format_sql"</span><span style="color: #0000ff;">&gt;</span>true<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">property</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><span style="line-height: 1.5;">这样格式化的作用是为了Hibernate在输出sql语句的时候让格式更好看一点 不然会是一行&nbsp; 很难看。</span></p>]]></description></item><item><title>Mingyang.net：hibernate.hbm2ddl.auto配置详解【转】</title><link>http://www.cnblogs.com/eastson/archive/2014/08/01/3884128.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 01 Aug 2014 00:19:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/08/01/3884128.html</guid><description><![CDATA[<p>原文地址：<a href="http://www.cnblogs.com/feilong3540717/archive/2011/12/19/2293038.html">http://www.cnblogs.com/feilong3540717/archive/2011/12/19/2293038.html</a><br /><br /></p>
<p>hibernate.cfg.xml 中hibernate.hbm2ddl.auto配置节点如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">properties</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="hibernate.show_sql"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="true"</span> <span style="color: #0000ff;">/&gt;</span> 
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="hibernate.hbm2ddl.auto"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="create"</span> <span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">properties</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>Hibernate Reference Documentation 3.3.1解释如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">Automatically validate or export schema DDL to the database when the SessionFactory is created.
With create-drop</span>,<span style="color: #000000;"> the database schema will be dropped when the SessionFactory is closed explicitly.
eg. validate | update | create | create-drop</span></pre>
</div>
<p>&nbsp;</p>
<p>其实这个hibernate.hbm2ddl.auto参数的作用主要用于：自动创建|更新|验证数据库表结构。如果不是此方面的需求建议set value="none"。<br />create：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。<br />create-drop ：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。<br />update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。<br />validate ：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。<br /><br /></p>
<p>再说点&ldquo;废话&rdquo;：<br />当我们把hibernate.hbm2ddl.auto=create时hibernate先用hbm2ddl来生成数据库schema。<br />当我们把hibernate.cfg.xml文件中hbm2ddl属性注释掉，这样我们就取消了在启动时用hbm2ddl来生成数据库schema。通常 只有在不断重复进行单元测试的时候才需要打开它，但再次运行hbm2ddl会把你保存的一切都删除掉（drop）---- create配置的含义是：&ldquo;在创建SessionFactory的时候，从scema中drop掉所以的表，再重新创建它们&rdquo;。<br />注意，很多Hibernate新手在这一步会失败，我们不时看到关于Table not found错误信息的提问。但是，只要你根据上面描述的步骤来执行，就不会有这个问题，因为hbm2ddl会在第一次运行的时候创建数据库schema， 后续的应用程序重启后还能继续使用这个schema。假若你修改了映射，或者修改了数据库schema,你必须把hbm2ddl重新打开一次。<br /><br /></p>
<p>***********************************************************</p>
<p>这两天在整理Spring + JPA（Hibernate实现），从网上copy了一段Hibernate连接参数的配置。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">properties</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="hibernate.show_sql"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="true"</span> <span style="color: #0000ff;">/&gt;</span> 
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="hibernate.hbm2ddl.auto"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="create"</span> <span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">properties</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><span style="line-height: 1.5;">结果在测试时，老是发现数据库表数据丢失。这个参数以前没怎么用，查了一圈其它的东东，最后才定位到这个上面。赶紧查了一下Hibernate的参数配置，解释如下：<br /></span></p>
<div class="cnblogs_code">
<pre>hibernate.hbm2ddl.auto Automatically validate or export schema DDL to the database when the SessionFactory is created. With create-drop, the database schema will be dropped when the SessionFactory is closed explicitly. eg. validate | update | create | create-drop</pre>
</div>
<p><span style="line-height: 1.5;">其实这个参数的作用主要用于：自动创建|更新|验证数据库表结构。如果不是此方面的需求建议set value="none".</span></p>
<p>其它几个参数的意思，我解释一下：</p>
<p>validate 加载hibernate时，验证创建数据库表结构<br />create 每次加载hibernate，重新创建数据库表结构，这就是导致数据库表数据丢失的原因。<br />create-drop 加载hibernate时创建，退出是删除表结构<br />update 加载hibernate自动更新数据库结构</p>
<p>以上4个属性对同一配置文件下所用有的映射表都起作用</p>
<p>&nbsp;</p>
<p>总结：</p>
<p>1.请慎重使用此参数，没必要就不要随便用。</p>
<p>2.如果发现数据库表丢失，请检查hibernate.hbm2ddl.auto的配置</p>]]></description></item><item><title>Mingyang.net：注解配置Hibernate时报错Unknown Entity</title><link>http://www.cnblogs.com/eastson/archive/2014/07/30/3877440.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 30 Jul 2014 02:40:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/07/30/3877440.html</guid><description><![CDATA[<p>注解配置时报错：org.hibernate.MappingException: Unknown entity: net.mingyang.cms.bean.User</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">org.hibernate.MappingException: Unknown entity: net.mingyang.cms.bean.User
    at org.hibernate.internal.SessionFactoryImpl.getEntityPersister(SessionFactoryImpl.java:</span>1096<span style="color: #000000;">)
    at org.hibernate.internal.SessionImpl.getEntityPersister(SessionImpl.java:</span>1443<span style="color: #000000;">)
    at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:</span>242<span style="color: #000000;">)
    at org.hibernate.event.internal.AbstractSaveEventListener.getEntityState(AbstractSaveEventListener.java:</span>511<span style="color: #000000;">)
    at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:</span>100<span style="color: #000000;">)
    at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:</span>90<span style="color: #000000;">)
    at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:</span>684<span style="color: #000000;">)
    at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:</span>676<span style="color: #000000;">)
    at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:</span>671<span style="color: #000000;">)
    at net.mingyang.cms.dao.hibernate.UserDaoHibernate.updateUser(UserDaoHibernate.java:</span>34<span style="color: #000000;">)
    at net.mingyang.cms.service.impl.UserServiceImpl.updateUser(UserServiceImpl.java:</span>50<span style="color: #000000;">)
    at net.mingyang.cms.controller.UserController.indexAction(UserController.java:</span>61<span style="color: #000000;">)
    . . . . . .</span></pre>
</div>
<p>可能的原因： <br />1、配置实体类时为@Entity导包时错误的导入了 rg.hibernate.annotations.Entity ，应该更改为import javax.persistence.Entity; <br />2、applicationContext.xml中配置实体扫描时路径出错， 比如：实体类存放在net.mingyang.cms.bean包下，则路径就要配为 </p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="packagesToScan"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="net.mingyang.cms.*"</span><span style="color: #0000ff;">/&gt;</span></pre>
</div>
<p><span style="line-height: 1.5;">而不是&nbsp;<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="packagesToScan"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="net.mingyang.cms.bean.*"</span><span style="color: #0000ff;">/&gt;</span></pre>
</div>
<p><span style="line-height: 1.5;">也就是说配置映射目录要比实际少一层。&nbsp;<br /></span><span style="line-height: 1.5;">或者直接使用&nbsp;<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="annotatedClasses"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">list</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">value</span><span style="color: #0000ff;">&gt;</span>net.mingyang.cms.bean.User<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">value</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">
        ......
    </span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">list</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">property</span><span style="color: #0000ff;">&gt;</span> </pre>
</div>
<p><span style="line-height: 1.5;">指定相应的实体类（实体类较少时）。</span></p>]]></description></item><item><title>Spring MVC 中的基于注解的 Controller【转】</title><link>http://www.cnblogs.com/eastson/archive/2014/07/29/3875183.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 29 Jul 2014 04:02:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/07/29/3875183.html</guid><description><![CDATA[<p>原文地址：<a href="http://my.oschina.net/abian/blog/128028">http://my.oschina.net/abian/blog/128028</a><br /><br /></p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 终于来到了基于注解的 Spring MVC 了。之前我们所讲到的 handler，需要根据 url 并通过 HandlerMapping 来映射出相应的 handler 并调用相应的方法以响应请求。实际上，ControllerClassNameHandlerMapping, MultiActionController 和选择恰当的 methodNameResolver(如 InternalPathMethodNameResolver) 就已经可以在很大程度上帮助我们省去不少的 XML 配置，谁让 ControllerClassNameHandlerMapping 极度的拥抱了 Convention Over Configuration 呢。&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 那为什么还要用基于注解的 Controller 呢？Spring MVC 在 Spring 2.5 发布中新添加了一种基于注解的 Controller 形式。借助于与 Spring 2.5 一同发布的容器内 &lt;context:component-scan&gt; 功能支持，基于注解的 Controller 几乎可以达到 XML 零配置，进而极大地提高我们的开发效率。&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 和其它 Controller 一样，基于注解的 Controller 同样有相应的 HandlerMapping，那就是 DefaultAnnotationHandlerMapping。同样，也有相应的 HandlerAdapter，那就是 AnnotationMethodHandlerAdapter。甚至，我们都可以不把 Controller 注册到容器里，那么肯定需要一种机制来帮助我们完成这点，这就是 &lt;context:component-scan&gt;。开发基于注解的 Controller，我们需要做以下准备工作：&nbsp;<br /><br /><strong>● &lt;context:compnent-scan&gt;</strong>&nbsp;</p>
<div>
<div>
<div>Xml代码&nbsp;&nbsp;<a href="http://my.oschina.net/js/ke/themes/common/blank.gif" target="_blank"><img src="http://my.oschina.net/js/ke/themes/common/blank.gif" alt="" /></a>&nbsp;&nbsp;</div>


</div>
<ol>
<li>&lt;!--&nbsp;切记，这不是必需的！除非你把注解的&nbsp;Controller&nbsp;一个个的注册到容器中。相信大家还是喜欢用&nbsp;context:compnent-scan&nbsp;吧。不要认为在&nbsp;Spring&nbsp;MVC&nbsp;中才提到&nbsp;context:component-scan，就认为它只能扫描&nbsp;@Controller。component-scan&nbsp;默认扫描的注解类型是&nbsp;@Component，不过，在&nbsp;@Component&nbsp;语义基础上细化后的&nbsp;@Repository,&nbsp;@Service&nbsp;和&nbsp;@Controller&nbsp;也同样可以获得&nbsp;component-scan&nbsp;的青睐&nbsp;--&gt;&nbsp;&nbsp;</li>
<li>&lt;context:component-scan&nbsp;base-package="org.zachary.spring3.anno.web"&nbsp;/&gt;&nbsp;&nbsp;</li>


</ol></div>
<div>
<div>&nbsp;</div>


</div>
<p>
<br /><strong>● HandlerMapping</strong>&nbsp;&nbsp;&nbsp;</p>
<div>
<div>
<div>Xml代码&nbsp;&nbsp;<a href="http://my.oschina.net/js/ke/themes/common/blank.gif" target="_blank"><img src="http://my.oschina.net/js/ke/themes/common/blank.gif" alt="" /></a>&nbsp;&nbsp;</div>


</div>
<ol>
<li>&lt;bean&nbsp;class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"&gt;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&lt;description&gt;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;这点是必需的还是非必需的呢？&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;如果定义了&nbsp;DefaultAnnotationHandlerMapping，它就可以将请求来的&nbsp;url&nbsp;和被注解了&nbsp;@RequesMapping&nbsp;的指进行匹配。当然，说这句话的前提是定义&nbsp;DefaultAnnotationHandlerMapping&nbsp;的优先级比定义了其它的&nbsp;HandlerMapping&nbsp;的优先级要高(如果定义了其它的话)。&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;如果没有定义&nbsp;DefaultAnnotationHandlerMapping，并不代表不能映射到相应的&nbsp;handler&nbsp;上。因为如果你定义了其它的&nbsp;HandlerMapping，请求过来的&nbsp;url&nbsp;和注解了的&nbsp;@RequestMapping&nbsp;里的值正好能匹配上，那么没有&nbsp;DefaultAnnotationHandlerMapping，@Controller&nbsp;一样可以如鱼得水的被捕获到。&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;当然，如果你要使用基于注解的&nbsp;@Controller，最好还是老老实实地注册&nbsp;DefaultAnnotationHandlerMapping。&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&lt;/description&gt;&nbsp;&nbsp;</li>
<li>&lt;/bean&gt;&nbsp;&nbsp;</li>


</ol></div>
<p>
<br /><strong>● HandlerAdaptor</strong>&nbsp;&nbsp;&nbsp;</p>
<div>
<div>
<div>Xml代码&nbsp;&nbsp;<a href="http://my.oschina.net/js/ke/themes/common/blank.gif" target="_blank"><img src="http://my.oschina.net/js/ke/themes/common/blank.gif" alt="" /></a>&nbsp;&nbsp;</div>


</div>
<ol>
<li>&lt;bean&nbsp;class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"&gt;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&lt;description&gt;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;和上面的&nbsp;HandlerMapping&nbsp;一样，是必需的还是非必需的呢？&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;Spring&nbsp;MVC&nbsp;中，如果我们没有注册任何&nbsp;HandlerAdaptor&nbsp;到容器中，注意，我说的是任何。那么&nbsp;DispatcherServlet&nbsp;将启用后备的几个默认使用的&nbsp;HandlerAdaptor&nbsp;实现，包括：&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;org.springframework.web.servlet.mvc.AnnotationMethodHandlerAdaptor&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;看见没，如果我们没有注册任何的&nbsp;HandlerAdaptor，框架会准备&nbsp;AnnotationMethodHandlerAdaptor&nbsp;的。可是由于某些原因，我们需要为某些&nbsp;HandlerAdaptoer&nbsp;进行一些定制化，即在容器中注册了某个&nbsp;HandlerAdaptor，那么很抱歉，框架只会启用你注册的那个，而框架本身准备的不会被启用。所以，你一旦为某个&nbsp;HandlerMapping&nbsp;进行了定制化，请别忘了把其它的&nbsp;HandlerAdaptor&nbsp;也注册进来，即便这些不需要定制化。否则的话，后果你是可以想象的。当然，除非你确保你真的只需要那一个你注册进容器的&nbsp;HandlerAdaptor，否则，我再啰嗦一遍，别忘了把其它的&nbsp;HandlerAdaptor&nbsp;也注册进来。&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&lt;/description&gt;&nbsp;&nbsp;</li>
<li>&lt;/bean&gt;&nbsp;&nbsp;</li>


</ol></div>
<div>
<div>&nbsp;</div>


</div>
<p>
<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 好了，有了以上几点准备工作，我们就可以开始基于注解的 Controller 之旅了。下面我们来一个一个注解的来讲解。&nbsp;&nbsp;&nbsp;<br /><br /><strong>● @Controller</strong>&nbsp;&nbsp;&nbsp;</p>
<div>
<div>
<div>Java代码&nbsp;&nbsp;<a href="http://my.oschina.net/js/ke/themes/common/blank.gif" target="_blank"><img src="http://my.oschina.net/js/ke/themes/common/blank.gif" alt="" /></a>&nbsp;&nbsp;</div>


</div>
<ol>
<li>/**&nbsp;</li>
<li>&nbsp;*&nbsp;@Controller，类级别上的注解。我们定义的类可以只是一个&nbsp;javabean，不需要实现任何接口。标注了&nbsp;</li>
<li>&nbsp;*&nbsp;@Controller，借助&nbsp;&lt;context:component-scan&gt;，框架能自动识别到这就是一个&nbsp;Controller&nbsp;</li>
<li>&nbsp;*/&nbsp;&nbsp;</li>
<li>@Controller&nbsp;&nbsp;</li>
<li>public&nbsp;class&nbsp;MyController&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;//&nbsp;......&nbsp;&nbsp;</li>
<li>}&nbsp;&nbsp;</li>


</ol></div>
<div>
<div>&nbsp;</div>


</div>
<p>
<br /><strong>● @RequestMapping</strong>&nbsp;&nbsp;&nbsp;</p>
<div>
<div>
<div>Java代码&nbsp;&nbsp;<a href="http://my.oschina.net/js/ke/themes/common/blank.gif" target="_blank"><img src="http://my.oschina.net/js/ke/themes/common/blank.gif" alt="" /></a>&nbsp;&nbsp;</div>


</div>
<ol>
<li>/**&nbsp;</li>
<li>&nbsp;*&nbsp;@RequestMapping&nbsp;可以出现在类级别上，也可以出现在方法上。如果出现在类级别上，那请求的&nbsp;url&nbsp;为&nbsp;类级别&nbsp;</li>
<li>&nbsp;*&nbsp;上的&nbsp;@RequestMapping&nbsp;+&nbsp;方法级别上的&nbsp;@RequestMapping，否则直接取方法级上的&nbsp;@RequestMapping。&nbsp;</li>
<li>&nbsp;*&nbsp;类级别的&nbsp;@RequestMapping&nbsp;不是必需的。&nbsp;</li>
<li>&nbsp;*/&nbsp;&nbsp;</li>
<li>@Controller&nbsp;&nbsp;</li>
<li>@RequestMapping("/my")&nbsp;&nbsp;</li>
<li>public&nbsp;class&nbsp;MyController&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;/**&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;由于类级别上定义了&nbsp;@RequestMapping，那么想匹配到这个方法来处理请求，url&nbsp;必须为&nbsp;/my/somelist。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;如果没有定义类级别上的&nbsp;@RequestMapping，url&nbsp;为&nbsp;/somelist&nbsp;即可。同时，请求方法必须为&nbsp;POST&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;@RequestMapping(value="/somelist",&nbsp;method=RequestMethod.POST);&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;public&nbsp;String&nbsp;getSomeList()&nbsp;{...}&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;在方法级别使用&nbsp;@RequestMapping&nbsp;来限定请求处理的时候，可以指定两个属性。除了我们在上面刚使用过的&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;method&nbsp;属性，还有一个&nbsp;params&nbsp;属性。使用&nbsp;params&nbsp;属性，可以达到与使用&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;ParameterMethodNameResolver&nbsp;作为&nbsp;MethodResolver的&nbsp;MultiActionController&nbsp;类似的功能。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;params&nbsp;有两种表达形式，这里先说第一种："parameterName=parameterValue"&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;请求方法为&nbsp;GET&nbsp;或&nbsp;POST，且具有&nbsp;hello&nbsp;参数，且值为&nbsp;world&nbsp;的请求才能匹配到该方法，如：&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;/my?hello=world&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(params="hello=world",&nbsp;method={RequestMethod.GET,&nbsp;RequestMethod.POST})&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;helloworld()&nbsp;{...}&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;请求方法为&nbsp;GET&nbsp;或&nbsp;POST，且具有&nbsp;hello&nbsp;参数，且值为&nbsp;java&nbsp;的请求才能匹配到该方法，如：&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;/my?hello=java&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(params="hello=java",&nbsp;method={RequestMethod.GET,&nbsp;RequestMethod.POST})&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;hellojava()&nbsp;{...}&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;params&nbsp;属性的另外一种表达形式为："parameter"&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;请求方法为&nbsp;GET，且具有请求参数&nbsp;java&nbsp;即匹配此方法，而不管&nbsp;java&nbsp;参数的值是什么，如：&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;/my?java=anything&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(params="java",&nbsp;method={RequestMethod.GET})&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;java()&nbsp;{...}&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;请求方法为&nbsp;GET，且具有请求参数&nbsp;cplusplus&nbsp;即匹配此方法，而不管&nbsp;cplusplus&nbsp;参数的值是什么，如：&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;/my?cplusplus=anything&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(params="cplusplus",&nbsp;method={RequestMethod.GET})&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;cplusplus()&nbsp;{...}&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;@RequestMapping&nbsp;还有一个参数化&nbsp;headers，它和&nbsp;params&nbsp;非常相似，也有两种表达式，只不过它是对&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;请求头做限制罢了。大家可以通过&nbsp;telnet&nbsp;或&nbsp;http-client&nbsp;来发类似的请求以检验。以&nbsp;telnet&nbsp;为例：&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;telnet&nbsp;localhost&nbsp;8080&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;POST&nbsp;/contextPath/my&nbsp;HTTP/1.1&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Host:&nbsp;localhost&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;hello:&nbsp;world&nbsp;#&nbsp;这个就是自定义请求头，和标准的请求头的写法别无二致&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;【回车】&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;【回车】&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(headers="hello=world",&nbsp;method={RequestMethod.POST})&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;cplusplus()&nbsp;{...}&nbsp;&nbsp;</li>
<li>}&nbsp;&nbsp;</li>


</ol></div>
<div>
<div>&nbsp;</div>


</div>
<p>
<br /><strong>● @RequestParam(将请求参数绑定到方法参数)</strong>&nbsp;&nbsp;&nbsp;</p>
<div>
<div>
<div>Java代码&nbsp;&nbsp;<a href="http://my.oschina.net/js/ke/themes/common/blank.gif" target="_blank"><img src="http://my.oschina.net/js/ke/themes/common/blank.gif" alt="" /></a>&nbsp;&nbsp;</div>


</div>
<ol>
<li>@Controller&nbsp;&nbsp;</li>
<li>@RequestMapping("/my")&nbsp;&nbsp;</li>
<li>public&nbsp;class&nbsp;MyController&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;/**&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;注意，这里的方法有一个参数。若请求&nbsp;url&nbsp;为&nbsp;/my/test，会匹配此方法。这里的方法的参数名为&nbsp;userId，&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;那么请求参数中一定有名为&nbsp;userId&nbsp;的参数，且值为整数。这也是默认的绑定行为，它是根据名称匹配原则进行&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;的数据绑定。当请求中的参数名与方法名一致的时候，相应的参数值将被绑定到相应的方法参数上。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;如果没有传递&nbsp;userId&nbsp;参数，框架会传入&nbsp;null。可是这里我们定义的是&nbsp;primitive&nbsp;type，异常伺候！若&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;要解决此问题，需要将&nbsp;primitive&nbsp;type&nbsp;定义成相应的&nbsp;wrapper&nbsp;type&nbsp;即可，这里使用&nbsp;Integer&nbsp;就行了。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;如果传递了&nbsp;userId&nbsp;参数，但值不是整数，你叫&nbsp;test&nbsp;怎么办呢？这种情况下，框架借助&nbsp;PropertyEditor&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;数据类型转换失败，ExceptionResolver&nbsp;会接手处理，请求是不会进入&nbsp;test&nbsp;方法的。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;这种方式下，默认的绑定行为需要我们严格遵守命名一致性原则。如果我们对此不满，想自定义绑定关系，可以求&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;助于&nbsp;@RequestParam。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;@RequestMapping("/test")&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;public&nbsp;String&nbsp;test(int&nbsp;userId)&nbsp;{&nbsp;...&nbsp;}&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;/**&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;当我们不想使用&nbsp;userId&nbsp;作为方法的参数名，即不想使用默认的数据绑定方式。如果我们要使用&nbsp;id&nbsp;作为方法&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;的参数，为了保证名称为&nbsp;userId&nbsp;的请求参数可以绑定到新的名称为&nbsp;id&nbsp;的方法参数上，我们就可以使用&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;@RequestParam&nbsp;对这一参数进行标注。@RequestParam&nbsp;只可以标注于方法参数上。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;如果请求参数中有&nbsp;age，和方法的参数名称一致，故&nbsp;age&nbsp;参数不需要&nbsp;@RequestParam&nbsp;标注。如果没有传递&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;age，我们又不想定义成&nbsp;Integer，很显然框架会注入&nbsp;null&nbsp;值，报错是必然的。这是由于&nbsp;@RequestParam&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;的&nbsp;required&nbsp;属性决定的，默认就是&nbsp;true。如果我们定义成&nbsp;false，&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;即&nbsp;@RequestParam(required=false)&nbsp;int&nbsp;age&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;这个时候定义成&nbsp;int&nbsp;型的&nbsp;age，即便请求参数没有&nbsp;age&nbsp;参数，也是没问题的。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;同时，这里还能绑定&nbsp;Date&nbsp;类型，User&nbsp;对象类型等等。如&nbsp;date=2011-01-01&amp;userName=Tom&amp;userAge=18&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;这里，User&nbsp;类的属性需要为&nbsp;userName&nbsp;和&nbsp;userAge，以免和&nbsp;age，name&nbsp;混淆。所以，Spring&nbsp;MVC&nbsp;对对象&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;的数据绑定就没有&nbsp;Struts2&nbsp;做的那么好了，Strtus2&nbsp;可以这样：user.age=18&amp;user.name=Tom&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;@RequestMapping("/test2")&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;public&nbsp;String&nbsp;test2(@RequestParam("userId")&nbsp;int&nbsp;id,&nbsp;int&nbsp;age,&nbsp;Date&nbsp;date,&nbsp;User&nbsp;user)&nbsp;{&nbsp;...&nbsp;}&nbsp;&nbsp;</li>
<li>}&nbsp;&nbsp;</li>


</ol></div>
<div>
<div>&nbsp;</div>


</div>
<p>
<br /><strong>● @PathVariable(将 url template 里的参数绑定到方法参数)</strong>&nbsp;&nbsp;&nbsp;</p>
<p>&nbsp;</p>
<div>
<div>Java代码&nbsp;&nbsp;<a href="http://my.oschina.net/js/ke/themes/common/blank.gif" target="_blank"><img src="http://my.oschina.net/js/ke/themes/common/blank.gif" alt="" /></a>&nbsp;&nbsp;</div>


</div>
<ol>
<li>@Controller&nbsp;&nbsp;</li>
<li>@RequestMapping("/my")&nbsp;&nbsp;</li>
<li>public&nbsp;class&nbsp;MyController&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;/**&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;@PathVariable&nbsp;是&nbsp;url&nbsp;模板，需要和&nbsp;@RequestMapping&nbsp;配合起来使用，这是&nbsp;Spring&nbsp;3.0&nbsp;之后引入的。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;在这个例子中，请求的&nbsp;url&nbsp;必须满足类似&nbsp;/my/user/zhangsan/18&nbsp;这样的格式才能匹配方法。url&nbsp;模板里&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;的参数名和方法参数名的绑定规则和&nbsp;@RequestParam&nbsp;类似，这里就不再赘述了。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;@PathVariable&nbsp;和&nbsp;@RequestParam&nbsp;的区别在于：&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;@PathVariable&nbsp;的&nbsp;url：/my//user/zhangsan/18&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;@RequestParam&nbsp;的&nbsp;url：/my//user?nickname=zhangsan&amp;age=18&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;@RequestMapping("/user/{nickname}/{age}");&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;public&nbsp;String&nbsp;getUserInfo(@PathVariable("nickname")&nbsp;String&nbsp;name,&nbsp;@PathVariable&nbsp;int&nbsp;age)&nbsp;{...}&nbsp;&nbsp;</li>
<li>} &nbsp;</li>
<li></li>


</ol>
<p>&nbsp;</p>
<p>
<strong>● @RequestBody(将请求正文绑定到方法参数)</strong>&nbsp;&nbsp;&nbsp;</p>
<div>
<div>
<div>Java代码&nbsp;&nbsp;<a href="http://my.oschina.net/js/ke/themes/common/blank.gif" target="_blank"><img src="http://my.oschina.net/js/ke/themes/common/blank.gif" alt="" /></a>&nbsp;&nbsp;</div>


</div>
<ol>
<li>/**&nbsp;</li>
<li>&nbsp;*&nbsp;来看一个&nbsp;http&nbsp;请求：&nbsp;</li>
<li>&nbsp;*&nbsp;(请求行)&nbsp;POST&nbsp;/my&nbsp;HTTP/1.1&nbsp;</li>
<li>&nbsp;*&nbsp;(请求头)&nbsp;Host:&nbsp;localhost&nbsp;</li>
<li>&nbsp;*&nbsp;(请求头)&nbsp;Content-Type:&nbsp;text/plain&nbsp;</li>
<li>&nbsp;*&nbsp;(请求头)&nbsp;Content-Length:&nbsp;5&nbsp;</li>
<li>&nbsp;*&nbsp;</li>
<li>&nbsp;*&nbsp;(请求体)&nbsp;hello&nbsp;</li>
<li>&nbsp;*&nbsp;</li>
<li>&nbsp;*&nbsp;这里的&nbsp;hello，就是请求体，也称&nbsp;request&nbsp;message。若有请求体，则必须提供请求体的类型和长度，这些信&nbsp;</li>
<li>&nbsp;*&nbsp;息是写在请求头里的，即&nbsp;Content-Type&nbsp;和&nbsp;Content-Length&nbsp;</li>
<li>&nbsp;*/&nbsp;&nbsp;</li>
<li>@Controller&nbsp;&nbsp;</li>
<li>@RequestMapping("/my")&nbsp;&nbsp;</li>
<li>public&nbsp;class&nbsp;MyController&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;/**&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;我们定义的&nbsp;body&nbsp;的数据类型是&nbsp;String，请求体嘛，肯定是&nbsp;String。实际上，@RequestBody&nbsp;是用于将请&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;求体的内容绑定到方法参数上，数据类型不一定是&nbsp;String。Spring&nbsp;MVC&nbsp;是通过&nbsp;HttpMessageConverter&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;来完成这种转换的。AnnotationMethodHandlerAdapter&nbsp;默认注册了一些&nbsp;HttpMessageConverters：&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;ByteArrayHttpMessageConverter&nbsp;-&nbsp;converts&nbsp;byte&nbsp;arrays&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;StringHttpMessageConverter&nbsp;-&nbsp;converts&nbsp;strings&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;FormHttpMessageConverter&nbsp;-&nbsp;converts&nbsp;form&nbsp;data&nbsp;to/from&nbsp;MultiValueMap&lt;String,String&gt;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;SourceHttpMessageConverter&nbsp;-&nbsp;convert&nbsp;to/from&nbsp;a&nbsp;javax.xml.transform.Source&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;MappingJacksonHttpMessageConverter&nbsp;-&nbsp;converts&nbsp;json&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;MarshallingHttpMessageConverter&nbsp;-&nbsp;convert&nbsp;to/from&nbsp;an&nbsp;object&nbsp;using&nbsp;the&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;org.springframework.oxm&nbsp;package.&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;正如上所述，HttpMessageConverter&nbsp;用于从请求正文绑定到对象和把对象序列化成&nbsp;String&nbsp;予客户端响应。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;即&nbsp;HttpMessageConverter&nbsp;is&nbsp;responsible&nbsp;for&nbsp;converting&nbsp;from&nbsp;the&nbsp;HTTP&nbsp;request&nbsp;message&nbsp;to&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;an&nbsp;object&nbsp;and&nbsp;converting&nbsp;from&nbsp;an&nbsp;object&nbsp;to&nbsp;the&nbsp;HTTP&nbsp;response&nbsp;body&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;我们可以在&nbsp;AnnotationMethodHandlerAdapter&nbsp;定义任意多的&nbsp;HttpMessageConverters。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;既然&nbsp;HttpMessageConverter&nbsp;可以用于双向&nbsp;convert，这里讨论的是&nbsp;@RequestBody，那这部分我们只讲&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;converting&nbsp;from&nbsp;the&nbsp;HTTP&nbsp;request&nbsp;message&nbsp;to&nbsp;an&nbsp;object。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;假设我们只向&nbsp;AnnotationMethodHandlerAdapter&nbsp;注入了&nbsp;MappingJacksonHttpMessageConverter&nbsp;和&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;MarshallingHttpMessageConverter。处理请求的方法有如下签名：&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;test(@RequestBody&nbsp;User&nbsp;user)&nbsp;{&nbsp;...&nbsp;}&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;不管请求正文的内容是什么，对于客户端和服务器而言，它们只是用文本来互相通信。把字符串转为&nbsp;User&nbsp;对&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;象，该用哪个&nbsp;HttpMessageConverter&nbsp;来完成此项工作呢？&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;在定义&nbsp;HttpMessageConverters&nbsp;时，我们可以为其指定&nbsp;supportedMediaTypes。对于将请求正文转为对象&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;这个方向的操作，HttpMessageConverters&nbsp;会从请求头得到&nbsp;Content-Type&nbsp;头信息，看其是否隶属于其定义&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;的&nbsp;supportedMediaTypes。若没有匹配上，则会使用下一个&nbsp;HttpMessageConverter&nbsp;做同样的判断。只要&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;某个&nbsp;HttpMessageConverter&nbsp;支持请求头中的&nbsp;Content-Type，那么就会应用此&nbsp;HttpMessageConverter&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;来将&nbsp;String&nbsp;转为&nbsp;Object。当然，若请求正文并没有按照&nbsp;Content-Type&nbsp;所规定的格式来编写，必然要收到&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;500&nbsp;的响应。同时请注意，请求头中还必须提供&nbsp;Content-Length，否则拿不到请求正文。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;如果所有的&nbsp;HttpMessageConverters&nbsp;中定义的&nbsp;supportedMediaTypes&nbsp;均不能匹配上&nbsp;Content-Type&nbsp;请&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;求头中的类型，那么就会收到&nbsp;415&nbsp;Unsupported&nbsp;Media&nbsp;Type&nbsp;响应。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;@RequestMapping("/user/body");&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;public&nbsp;String&nbsp;getBody(@RequestBody&nbsp;String&nbsp;body)&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;这里的&nbsp;body&nbsp;的内容就是&nbsp;hello&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(body);&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;}&nbsp;&nbsp;</li>
<li>}&nbsp;&nbsp;</li>


</ol></div>
<div>
<div>&nbsp;</div>


</div>
<p>
<br /><strong>● @ResponseBody(将处理完请求后返回的对象绑定到响应正文)</strong>&nbsp;&nbsp;&nbsp;</p>
<div>
<div>
<div>Java代码&nbsp;&nbsp;<a href="http://my.oschina.net/js/ke/themes/common/blank.gif" target="_blank"><img src="http://my.oschina.net/js/ke/themes/common/blank.gif" alt="" /></a>&nbsp;&nbsp;</div>


</div>
<ol>
<li>/**&nbsp;</li>
<li>&nbsp;*&nbsp;上面的&nbsp;@RequestBody&nbsp;讲了&nbsp;HttpMessageConverter&nbsp;从请求正文到对象转换的方向，现在来讲讲另外一个方&nbsp;</li>
<li>&nbsp;*&nbsp;向，@ResponseBody，此时，HttpMessageConverter&nbsp;用于将处理完请求后返回的对象序列化成字符串，即&nbsp;</li>
<li>&nbsp;*&nbsp;converting&nbsp;from&nbsp;an&nbsp;object&nbsp;to&nbsp;the&nbsp;HTTP&nbsp;response&nbsp;body.&nbsp;</li>
<li>&nbsp;*/&nbsp;&nbsp;</li>
<li>@Controller&nbsp;&nbsp;</li>
<li>@RequestMapping("/my")&nbsp;&nbsp;</li>
<li>public&nbsp;class&nbsp;MyController&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;/**&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;该方法的返回类型是&nbsp;User，并不符合含有&nbsp;@RequestMapping&nbsp;的注解所需的签名方式。但它仍然是合法的，因&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;为在返回类型前有&nbsp;@ResponseBody&nbsp;注解，此注解将告知框架，将&nbsp;User&nbsp;对象作为影响正文返回？什么？对象&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;作为响应正文！所以，HttpMessageConverter&nbsp;在这里就起到作用了。这里讨论的是&nbsp;@ResponseBody，所以&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;这里我们只讲&nbsp;converting&nbsp;from&nbsp;an&nbsp;object&nbsp;to&nbsp;the&nbsp;HTTP&nbsp;response&nbsp;body。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;User&nbsp;对象要转成什么样的&nbsp;String，或者说要转成什么格式的&nbsp;String？这个时候需要从请求头中获得此信息&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;了，这里，就是请求头的&nbsp;Accept&nbsp;头。Accept&nbsp;头可以使用逗号分隔定义多个类型，用以告知服务器我只接受&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;哪些类型的响应。AnnotationMethodHandlerAdapter&nbsp;中同样注入了多个&nbsp;HttpMessageConverter，每个&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;HttpMessageConverter&nbsp;都可以定义各自的&nbsp;supportedMediaTypes。这个时候该用哪个&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;HttpMessageConverter&nbsp;来完成对象到文本的序列化操作呢？&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;遍历&nbsp;Accept&nbsp;头中的每种媒体类型，在定义的多个&nbsp;HttpMessageConverters&nbsp;中依次去匹配，若匹配上，就使&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;用该&nbsp;HttpMessageConverter&nbsp;来完成序列化操作，并且响应头的&nbsp;Content-Type&nbsp;并不是请求头&nbsp;Accept&nbsp;头&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;的诸多类型中第一个被匹配的类型，而是匹配到的&nbsp;HttpMessageConverter&nbsp;定义的&nbsp;supportedMediaTypes&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;中的第一个类型。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;如果所有的&nbsp;HttpMessageConverters&nbsp;中定义的&nbsp;supportedMediaTypes&nbsp;均不能匹配上&nbsp;Accept&nbsp;请求头中&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;的诸多的类型，那么就会收到&nbsp;406&nbsp;Not&nbsp;Acceptable&nbsp;响应。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;@RequestMapping("/user")&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;public&nbsp;@ResponseBody&nbsp;User&nbsp;getUser()&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;User(18,&nbsp;"Jack",&nbsp;"计算机");&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;}&nbsp;&nbsp;</li>
<li>}&nbsp;&nbsp;</li>


</ol></div>
<div>
<div>&nbsp;</div>


</div>
<p>
<br /><strong>● @ModelAttribute</strong>&nbsp;&nbsp;&nbsp;</p>
<div>
<div>
<div>Java代码&nbsp;&nbsp;<a href="http://my.oschina.net/js/ke/themes/common/blank.gif" target="_blank"><img src="http://my.oschina.net/js/ke/themes/common/blank.gif" alt="" /></a>&nbsp;&nbsp;</div>


</div>
<ol>
<li>/**&nbsp;</li>
<li>&nbsp;*&nbsp;@ModelAttribute&nbsp;可以为视图渲染提供更多的模型数据，而不需要在处理请求的方法里添加&nbsp;ModelMap&nbsp;或&nbsp;</li>
<li>&nbsp;*&nbsp;Model&nbsp;类型的参数。&nbsp;</li>
<li>&nbsp;*&nbsp;</li>
<li>&nbsp;*&nbsp;@ModelAttribute&nbsp;可以标注在方法(存数据)上，也可以标注在方法参数(取数据)上。&nbsp;</li>
<li>&nbsp;*/&nbsp;&nbsp;</li>
<li>@Controller&nbsp;&nbsp;</li>
<li>@RequestMapping("/my")&nbsp;&nbsp;</li>
<li>public&nbsp;class&nbsp;MyController&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;/**&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;在处理该请求时，方法的返回类型是&nbsp;User，貌似不符合返回类型的规范。由于这里使用了&nbsp;@ModelAttribute&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;注解，表示将返回的对象以&nbsp;"user"&nbsp;为&nbsp;key&nbsp;放入模型数据里。这里的&nbsp;key&nbsp;值默认值是返回的数据类型首字母&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;小写的结果。如果想自定义&nbsp;key，可以写成&nbsp;@ModelAttribute("myAttribute")，那么模型数据将会将&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;User&nbsp;对象绑定到&nbsp;key&nbsp;为&nbsp;"myAttribute"&nbsp;上。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;jsp&nbsp;里可以这样访问模型里的数据：&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;age:&nbsp;${user.age}&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;name:&nbsp;${user.name}&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;&nbsp;job:&nbsp;${user.job}&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;当然，这里只是提到了&nbsp;@ModelAttribute&nbsp;存数据的操作。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;@RequestMapping("/user")&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;@ModelAttribute&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;public&nbsp;User&nbsp;getUser()&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;new&nbsp;User(18,&nbsp;"Jack",&nbsp;"计算机");&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;}&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;/**&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;这里将&nbsp;@ModelAttribute&nbsp;标注在方法参数上，表示要从模型数据里取&nbsp;key&nbsp;为&nbsp;"user"&nbsp;的对象，绑定在方法&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;参数上。如果这样做的话，其实你是得不到上面的那个请求放入的&nbsp;User&nbsp;对象，得到的是另外一个对象。其实&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;也好理解，这是两个互相独立的请求，作用域不一样。要想达到我们的目的，即能够从模型数据里取数据，需要&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;求助于&nbsp;@SessionAttributes&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;@RequestMapping("/user2")&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;public&nbsp;String&nbsp;showUser(@ModelAttribute&nbsp;User&nbsp;user)&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(user);&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;}&nbsp;&nbsp;</li>
<li>}&nbsp;&nbsp;</li>


</ol></div>
<div>
<div>&nbsp;</div>


</div>
<p>
<br /><strong>● @SessionAttributes</strong>&nbsp;&nbsp;&nbsp;</p>
<div>
<div>
<div>Java代码&nbsp;&nbsp;<a href="http://my.oschina.net/js/ke/themes/common/blank.gif" target="_blank"><img src="http://my.oschina.net/js/ke/themes/common/blank.gif" alt="" /></a>&nbsp;&nbsp;</div>


</div>
<ol>
<li>/**&nbsp;</li>
<li>&nbsp;*&nbsp;@SessionAttributes&nbsp;和&nbsp;@ModelAttribute&nbsp;类似，只不过&nbsp;@SessionAttributes&nbsp;是将数据存放于&nbsp;session&nbsp;&nbsp;</li>
<li>&nbsp;*&nbsp;中或从&nbsp;session&nbsp;中取数据。&nbsp;</li>
<li>&nbsp;*&nbsp;</li>
<li>&nbsp;*&nbsp;@SessionAttributes&nbsp;只能应用在类型声明上。比如下面的类的声明中，只有属性名为&nbsp;"the-attribute"&nbsp;的数&nbsp;</li>
<li>&nbsp;*&nbsp;据才会纳入到&nbsp;session&nbsp;的管理。&nbsp;</li>
<li>&nbsp;*&nbsp;</li>
<li>&nbsp;*&nbsp;@SessionAttributes&nbsp;允许以属性名名称或者类型两种方法，来表明将哪些数据通过&nbsp;session&nbsp;进行管理。这里&nbsp;</li>
<li>&nbsp;*&nbsp;我们使用的是指定属性名称的方式，但通过类型来指定也是可行的，如：&nbsp;</li>
<li>&nbsp;*&nbsp;&nbsp;&nbsp;@SessionAttributes(types=User.class)&nbsp;</li>
<li>&nbsp;*/&nbsp;&nbsp;</li>
<li>@Controller&nbsp;&nbsp;</li>
<li>@RequestMapping("/my")&nbsp;&nbsp;</li>
<li>@SessionAttributes("the-attribute")&nbsp;&nbsp;</li>
<li>public&nbsp;class&nbsp;MyController&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;@RequestMapping("/getUser")&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;public&nbsp;String&nbsp;getUser(int&nbsp;userId,&nbsp;Model&nbsp;model)&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;/**&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;注意，这里将&nbsp;User&nbsp;对象添加到属性名为&nbsp;"the-attribute"&nbsp;上，所以&nbsp;User&nbsp;对象将纳入到&nbsp;session&nbsp;的&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;管理。如果这里添加的对象的属性名不是&nbsp;"the-attribute"，那么它只会作用于当前请求，而不会纳入到&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;session&nbsp;的管理中。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;User&nbsp;user&nbsp;=&nbsp;userService.getUserById(userId);&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;model.addAtrribute("the-attribute",&nbsp;user);&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;"userinfo";&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;}&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;/**&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;将模型里的&nbsp;"the-attribute"&nbsp;为&nbsp;key&nbsp;的对象绑定到&nbsp;User&nbsp;类上。由于在类级别上声明了只有&nbsp;"the-&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;attribute"&nbsp;的属性名才会纳入到&nbsp;session&nbsp;的管理，所以就解决了在&nbsp;@ModelAttribute&nbsp;注解中讲解中最&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;后提到的问题。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;另外，这个方法还有两个参数，BindingResult&nbsp;和&nbsp;SessionStatus。由于这里有绑定数据的动作，我们可以&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;根据&nbsp;BindingResult&nbsp;对象获得数据绑定结果以决定后继流程该如何处理。SessionStatus&nbsp;在这里用于处理&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*&nbsp;完请求后，清空&nbsp;session&nbsp;里的数据。&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;*/&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;@RequestMapping("/updateUser")&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;public&nbsp;String&nbsp;updateUser(@ModelAttribute("the-attribute")&nbsp;User&nbsp;user,&nbsp;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BindingResult&nbsp;result,&nbsp;SessionStatus&nbsp;status)&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(result.hasErrors)&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;"error";&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;userService.updateUser(user);&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;我们通过调用&nbsp;status.setComplete()&nbsp;方法，该&nbsp;Controller&nbsp;所有放在&nbsp;session&nbsp;级别的模型属性数据&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;将从&nbsp;session&nbsp;中清空&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;status.setComplete();&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;"redirect:getUser?userId="&nbsp;+&nbsp;user.getId();&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;}&nbsp;&nbsp;</li>
<li>}&nbsp;&nbsp;</li>


</ol></div>
<div>
<div>&nbsp;</div>


</div>
<p>
<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Spring MVC 里的大部分的注解，这里基本上都讲到了。日后随着 Spring 的升级，我也会逐一补充新加的注解。其实，仅凭以上的注解，是可以构建一个足够强大的 RESTFul Webservices 的了。&nbsp;&nbsp;&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这里，补充讲下被标注了 @RequestMapping 注解的请求方法的签名。使用 @RequestMapping 标注的 web 请求处理方法的签名比较灵活，我们几乎可以声明并使用任何类型的方法参数。不过，以下几种类型的方法参数将拥有更多语义，它们均来自框架内部(或者说 AnnotationMethodHandlerAdapter)所管理的对象引用：&nbsp;&nbsp;&nbsp;</p>
<ul>
<li><strong>request/response/session</strong></li>
<li><strong>org.springframework.web.context.request.WebRequest</strong>。当前处理方法中获得可用的 WebRequest 实例。</li>
<li><strong>java.util.Locale</strong>。通过相应的 LocalResolver 所返回的对应当前 web 请求的 Locale。</li>
<li><strong>java.io.InputStream/java.io.Reader</strong>。相当于 request.getInputStream() 或 request.getReader() 所获得的对象引用。</li>
<li><strong>java.io.OutputStream/java.io.Writer</strong>。相当于 response.getOutputStream() 或 response.getWriter() 所获得的对象引用。</li>
<li><strong>java.util.Map/org.springframework.ui.ModelMap</strong>。你现在可用对模型数据为所欲为了。</li>
<li><strong>org.springframework.validation.Errors/org.springframework.validation.BindingResult</strong>。用于对 Command 对象进行数据验证的 Errors 或者 BindingResult 对象。声明这两种类型的方法参数有一个限制，它们的声明必须紧跟着 Command 对象的定义。其它类型的方法参数是没有任何顺序限制的。</li>
<li><strong>org.springframework.web.bind.supportt.SessionStatus</strong>。SessionStatus 主要用于管理请求处理之后 Session 的状态，比如清除 Session 中的指定的数据。</li>


</ul>
<p>
<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 基于注解的 Controller 的请求处理方法返回类型可以有如下 4 种形式(当然，前面提到的 @ResponseBody 和 @ModelAttribute 并没下面所描述的返回类型，具体参见上面对各自注解的讲解)：&nbsp;&nbsp;&nbsp;</p>
<ul>
<li><strong>org.springframework.web.servlet.ModelAndView</strong>。这个不用多说，视图信息和模型信息都能通过它返回。</li>
<li><strong>java.lang.String</strong>。该类型返回值代表逻辑视图名，模型数据需要以其它形式提供，比如为处理方法声明一个 ModelMap 类型的参数。<strong>注意，如果返回 null，并不代表向客户端输出空页面(定向思维惹的祸)，这种情况下，框架会从请求路径中提取视图信息。如果返回 null 就是要表示方法内部已处理完请求，也不需要通知页面，就是想仅仅返回空白页面，唉，我还没有想出来咋整。。。反正 writer.write("") 这样写可以，还得声明一个 Writer 类型的方法参数。</strong></li>
<li><strong>org.springframework.ui.ModelMap</strong>。ModelMap 类型返回值只包含了模型数据信息而没有视图信息，框架将根据请求的路径来提取视图信息。</li>
<li><strong>void</strong>。没有任何返回值，视图信息将从请求路径中提取，模型数据需要通过其它形式提供。</li>


</ul>
<p>
<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String 类型的返回值为 null, 还有返回类型为 ModelMap 和 void，从请求路径中如何提取视图信息呢？框架将截取请求路径中的最后一个 / 后面的内容，并去掉后缀名，剩下来的内容就是视图名。如请求路径为 /spring3/user/welcome，那么视图名是 welcome，/spring3/user/welcome.action 的视图名也是 welcome。&nbsp;&nbsp;&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 接下来来讲最后一个部分，请求参数到方法参数的绑定。这个在 @RequestParam 中已经讲过，不过，这里要讲的是绑定复杂的对象。在 @RequestParam 中，我们这样请求，date=2011-01-01 其实是绑定不到 Date 对象的。因为不同的 Locale 处理日期的字符串的表达方式不一样。总之，这部分涉及到字符串到对象的转换，这很像 PropertyEditor，对吧？Spring MVC 中，可以为某个 Controller 定制数据绑定，即在被标注了 @InitBinder 的方法里写绑定逻辑，方法名可以随意，如：&nbsp;&nbsp;&nbsp;</p>
<div>
<div>
<div>Java代码&nbsp;&nbsp;<a href="http://my.oschina.net/js/ke/themes/common/blank.gif" target="_blank"><img src="http://my.oschina.net/js/ke/themes/common/blank.gif" alt="" /></a>&nbsp;&nbsp;</div>


</div>
<ol>
<li>/**&nbsp;</li>
<li>&nbsp;*&nbsp;初始化方法不能有返回值，而且至少应该有一个类型为&nbsp;org.springframework.web.bind.WebDataBinder&nbsp;的&nbsp;</li>
<li>&nbsp;*&nbsp;方法参数。同时，一个典型的基于注解的&nbsp;Controller&nbsp;的处理方法可以使用的方法参数中，除了&nbsp;Command&nbsp;对象&nbsp;</li>
<li>&nbsp;*&nbsp;以及相关的&nbsp;Errors/BindingResult&nbsp;对象作为方法的参数外，都可以作为初始化方法的参数。&nbsp;</li>
<li>&nbsp;*&nbsp;</li>
<li>&nbsp;*&nbsp;这里，我们没有必要为日期再定制自定义绑定规则，Spring&nbsp;已经为我们提供了&nbsp;CustomDateEditor，这里只是演&nbsp;</li>
<li>&nbsp;*&nbsp;示如何提供自定义数据绑定规则。&nbsp;</li>
<li>&nbsp;*&nbsp;</li>
<li>&nbsp;*&nbsp;这里的&nbsp;WebDataBinder，是不是很像&nbsp;PropertyEditorRegistry？&nbsp;</li>
<li>&nbsp;*/&nbsp;&nbsp;</li>
<li>@InitBinder&nbsp;&nbsp;</li>
<li>public&nbsp;void&nbsp;initBinder(WebDataBinder&nbsp;binder)&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;binder.registerCustomEditor(Date.class,&nbsp;new&nbsp;PropertyEditorSupport()&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;SimpleDateFormat&nbsp;sf&nbsp;=&nbsp;new&nbsp;SimpleDateFormat("yyyy-MM-dd");&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;@Override&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;setAsText(String&nbsp;text)&nbsp;throws&nbsp;IllegalArgumentException&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date&nbsp;date&nbsp;=&nbsp;sf.parse(text);&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setValue(date);&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch&nbsp;(ParseException&nbsp;e)&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Date&nbsp;data&nbsp;=&nbsp;sf.parse(text);&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw&nbsp;new&nbsp;IllegalArgumentException(e);&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;})&nbsp;&nbsp;</li>
<li>}&nbsp;&nbsp;</li>


</ol></div>
<div>
<div>&nbsp;</div>


</div>
<p>
<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在 Controller 里使用 @InitBinder 标注的初始化方法只能对一个 Controller 对应的 WebBinder 做定制。如果想在整个应用中共享绑定规则，可以为 AnnotationMethodHandlerAdapter 指定一个自定义的 org.springframework.web.bind.support.WebBindingInitializer 实例，这样可以避免在每个 Controller 中都重复定义几乎相同逻辑的 @InitBinder 的初始化方法。&nbsp;&nbsp;&nbsp;</p>
<div>
<div>
<div>Java代码&nbsp;&nbsp;<a href="http://my.oschina.net/js/ke/themes/common/blank.gif" target="_blank"><img src="http://my.oschina.net/js/ke/themes/common/blank.gif" alt="" /></a>&nbsp;&nbsp;</div>


</div>
<ol>
<li>public&nbsp;class&nbsp;MyBindingInitializer&nbsp;implements&nbsp;WebBindingInitializer&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;public&nbsp;void&nbsp;initBinder(WebBinder&nbsp;binder,&nbsp;WebRequest&nbsp;request)&nbsp;{&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;binder.registerCustomEditor(SomeDataType.class,&nbsp;somePropertyEditor)&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;如果需要，这里可以继续注册更多的&nbsp;propertyEditor&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;......&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;}&nbsp;&nbsp;</li>
<li>}&nbsp;&nbsp;</li>


</ol></div>
<div>
<div>&nbsp;</div>


</div>
<p>&nbsp;</p>
<div>
<div>
<div>Xml代码&nbsp;&nbsp;<a href="http://my.oschina.net/js/ke/themes/common/blank.gif" target="_blank"><img src="http://my.oschina.net/js/ke/themes/common/blank.gif" alt="" /></a>&nbsp;&nbsp;</div>


</div>
<ol>
<li>&lt;bean&nbsp;class=""org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter&gt;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&lt;property&nbsp;name="webBindingInitializer"&gt;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&nbsp;&nbsp;&lt;bean&nbsp;class="...MyBindingInitializer"&nbsp;/&gt;&nbsp;&nbsp;</li>
<li>&nbsp;&nbsp;&lt;/property&gt;&nbsp;&nbsp;</li>
<li>&lt;/bean&gt;&nbsp;&nbsp;</li>


</ol></div>
<div>
<div>&nbsp;</div>


</div>
<p>
<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 结束该篇文章前，我们来看几个容易混淆的用于简化开发的配置： &lt;mvc:annotation-driven /&gt;, &lt;context:annotation-config/&gt;, &lt;context:component-scan /&gt;。&nbsp;&nbsp;&nbsp;<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>&lt;mvc:annotation-driven /&gt;</strong>&nbsp;会做以下几件事：&nbsp;&nbsp;&nbsp;</p>
<ol>
<li>向 spring 容器中注册 DefaultAnnotationHandlerMapping。</li>
<li>向 spring 容器中注册 AnnotationMethodHandlerAdapter。</li>
<li>配置一些 messageconverter。</li>
<li><strong>解决了 @Controller 注解的使用前提配置，即 HandlerMapping 能够知道谁来处理请求。</strong></li>


</ol>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>&lt;context:annotation-config /&gt;</strong>&nbsp;会做以下几件事：&nbsp;&nbsp;&nbsp;</p>
<ol>
<li>向 spring 容器中注册 AutowiredAnnotationBeanPostProcessor。</li>
<li>向 spring 容器中注册 CommonAnnotationBeanPostProcessor。</li>
<li>向 spring 容器中注册 PersistenceAnnotationBeanPostProcessor。</li>
<li>向 spring 容器中注册 RequiredAnnotationBeanPostProcessor。</li>
<li><strong>使用 &lt;context:annotationconfig /&gt;之前，必须在 &lt;beans&gt; 元素中声明 context 命名空间 &lt;context:component-scan /&gt;。&lt;context:component-scan /&gt; 对包进行扫描，实现注解驱动 Bean 定义。即，将 @Controller 标识的类的 bean 注册到容器中。</strong></li>


</ol>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>&lt;context:component-scan/&gt;</strong>，不但启用了对类包进行扫描以实施注解驱动 Bean 定义的功能，同时还启用了注解驱动自动注入的功能（即还隐式地在内部注册了 AutowiredAnnotationBeanPostProcessor 和 CommonAnnotationBeanPostProcessor）。因此当使用 &lt;context:component-scan /&gt; 后，除非需要使用PersistenceAnnotationBeanPostProcessor 和 RequiredAnnotationBeanPostProcessor 两个 Processor 的功能（例如 JPA 等），否则就可以将 &lt;context:annotation-config /&gt; 移除了。</p>]]></description></item><item><title>如何用Maven创建web项目（具体步骤）</title><link>http://www.cnblogs.com/eastson/archive/2014/07/28/3872713.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 28 Jul 2014 03:26:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/07/28/3872713.html</guid><description><![CDATA[<p>原文地址：<a href="http://blog.csdn.net/chuyuqing/article/details/28879477">http://blog.csdn.net/chuyuqing/article/details/28879477</a><br /><br /></p>
<h1>使用eclipse插件创建一个web project</h1>
<h2><a name="t1"></a>首先创建一个Maven的Project如下图&nbsp;</h2>
<p><img src="http://pic002.cnblogs.com/images/2012/267998/2012010700411184.png" alt="" /></p>
<p>&nbsp;</p>
<h2><a name="t2"></a>我们勾选上Create a simple project （不使用骨架）&nbsp;</h2>
<p><img src="http://pic002.cnblogs.com/images/2012/267998/2012010700412147.png" alt="" /></p>
<p>&nbsp;</p>
<h2><a name="t3"></a>这里的Packing 选择 war的形式&nbsp;</h2>
<p><img src="http://pic002.cnblogs.com/images/2012/267998/2012010700413460.png" alt="" /></p>
<p>&nbsp;</p>
<h2><a name="t4"></a>由于packing是war包，那么下面也就多出了webapp的目录</h2>
<p><img src="http://pic002.cnblogs.com/images/2012/267998/2012010700414522.png" alt="" /></p>
<p>&nbsp;</p>
<h2><a name="t5"></a>由于我们的项目要使用eclipse发布到tomcat下面，这里我们需要先把项目转成dynamic web project</h2>
<p>&nbsp;</p>
<h2><a name="t6"></a>在我们的项目上点击右键，选择properties 并找到 Project Facets ，并点击Convert to faceted form&hellip;&nbsp;&nbsp; 如下图：&nbsp;</h2>
<p><img src="http://pic002.cnblogs.com/images/2012/267998/2012010700434179.png" alt="" /></p>
<p>&nbsp;&nbsp;</p>
<h2><a name="t7"></a>然后勾选Dynamic Web Module 并点击ok&nbsp; 如下图：(3.0只有tomcat7才支持)</h2>
<p><img src="http://pic002.cnblogs.com/images/2012/267998/2012010700421281.png" alt="" /></p>
<p>&nbsp;&nbsp;</p>
<h2><a name="t8"></a>接下来观察我们的项目结构，多了一个web content目录</h2>
<p><img src="http://pic002.cnblogs.com/images/2012/267998/2012010700424114.png" alt="" /></p>
<p>&nbsp;&nbsp;</p>
<h2><a name="t9"></a>虽然此时我们可以发布到tomcat中，但这不符合maven的结构，我们还要做如下修改</h2>
<h2><a name="t10"></a>把上图WebContent下面两个目录 META-INF ，WEB-INF 直接剪切到src/main/webapp目录下，并删掉WebContent目录，那么现在的项目结构如下图：</h2>
<p>&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/267998/2012010700441165.png" alt="" /></p>
<p>&nbsp;&nbsp;</p>
<h2><a name="t11"></a>然后我们要修改发布规则，右键点击项目， 选择 Deployment Assembly</h2>
<p>&nbsp;<img src="http://pic002.cnblogs.com/images/2012/267998/2012010700442041.png" alt="" /></p>
<p>&nbsp;</p>
<h2><a name="t12"></a>选择WebContent，把它remove掉，测试类我们也不需要发布，test的两个目录页可以remove&nbsp;</h2>
<p><img src="http://pic002.cnblogs.com/images/2012/267998/2012010700444441.png" alt="" /></p>
<p>&nbsp;&nbsp;</p>
<h2><a name="t13"></a>接着重新指定一个web的路径，点击add，选择Folder -- 〉&nbsp; next&nbsp;</h2>
<p><img src="http://pic002.cnblogs.com/images/2012/267998/2012010700461080.png" alt="" /></p>
<p>&nbsp;&nbsp;</p>
<h2><a name="t14"></a>在src下找到webapp目录，然后finish&nbsp;</h2>
<p><img src="http://pic002.cnblogs.com/images/2012/267998/2012010700462539.png" alt="" /></p>
<p>&nbsp;&nbsp;</p>
<h2><a name="t15"></a>最后一步，我们要把当前的build path 指向 Maven Dependency， 直接点击add，选择Java Build Path Entries 然后next&nbsp;</h2>
<p><img src="http://pic002.cnblogs.com/images/2012/267998/2012010700474667.png" alt="" /></p>
<p>&nbsp;&nbsp;</p>
<h2><a name="t16"></a>然后再点击finish完成</h2>
<p><img src="http://pic002.cnblogs.com/images/2012/267998/2012010700480487.png" alt="" /></p>
<p>&nbsp;&nbsp;</p>
<h2><a name="t17"></a>完成后如下图：&nbsp;</h2>
<p><img src="http://pic002.cnblogs.com/images/2012/267998/2012010700485637.png" alt="" /></p>
<p>&nbsp;&nbsp;</p>
<h2><a name="t18"></a>至此一个基于maven的webapp就建立好了，并可以直接从eclipse中发布到tomcat中&nbsp;</h2>
<p>补充：我们需要在src/main/webapp/WEB-INF下面创建一个web.xml</p>
<p>&nbsp;&nbsp;</p>
<h1><a name="t19"></a>导入我们的Spring mvc依赖jar包</h1>
<p>&lt;dependencies&gt;</p>
<p>&nbsp;&nbsp; &nbsp; &lt;dependency&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;groupId&gt;org.springframework&lt;/groupId&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;artifactId&gt;spring-core&lt;/artifactId&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;version&gt;3.0.7.RELEASE&lt;/version&gt;</p>
<p>&nbsp;&nbsp;&nbsp; &lt;/dependency&gt;</p>
<p>&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp; &lt;dependency&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;groupId&gt;org.springframework&lt;/groupId&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;artifactId&gt;spring-web&lt;/artifactId&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;version&gt;3.0.7.RELEASE&lt;/version&gt;</p>
<p>&nbsp;&nbsp;&nbsp; &lt;/dependency&gt;</p>
<p>&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp; &lt;dependency&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;groupId&gt;org.springframework&lt;/groupId&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;version&gt;3.0.7.RELEASE&lt;/version&gt;</p>
<p>&nbsp;&nbsp;&nbsp; &lt;/dependency&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp; &lt;dependency&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;groupId&gt;org.codehaus.jackson&lt;/groupId&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;artifactId&gt;jackson-mapper-asl&lt;/artifactId&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;version&gt;1.7.1&lt;/version&gt;</p>
<p>&nbsp;&nbsp;&nbsp; &lt;/dependency&gt;</p>
<p>&lt;/dependencies&gt;</p>
<p>&nbsp;</p>
<h1><a name="t20"></a>直接保存，maven就会自动为我们下载所需jar文件</h1>]]></description></item><item><title>Mingyang.net：Eclipse定义Maven安装</title><link>http://www.cnblogs.com/eastson/archive/2014/07/28/3872677.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 28 Jul 2014 03:13:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/07/28/3872677.html</guid><description><![CDATA[<p>Eclipse默认会使用内置的Maven安装，这样就可能在导致Eclipse编译时下载一次依赖库，用CMD编译时再下载一次依赖库。打开Ecclipse -&gt; Windows -&gt; Preferences, 找到Maven -&gt; Installations，这里可以设置已经安装的Maven：<br /><img src="http://images.cnitblog.com/i/111826/201407/281113061809690.png" alt="" /></p>]]></description></item><item><title>DX：神奇的LayoutControl.BestFit()</title><link>http://www.cnblogs.com/eastson/archive/2014/07/24/3865086.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 24 Jul 2014 03:08:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/07/24/3865086.html</guid><description><![CDATA[<p>自动生成LayoutControl后，界面总是不对：<br /><img src="http://images.cnitblog.com/i/111826/201407/241105052449608.png" alt="" /><br />在LayoutControl中找到一个BestFit()方法，调用后神奇的结果出现了，这不正是我想要的吗？<br /><img src="http://images.cnitblog.com/i/111826/201407/241106434631437.png" alt="" /><br />测试代码：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">partial</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> TEST2 : Form
{
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> TEST2()
    {
        InitializeComponent();
    }

    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span> TEST2_Load(<span style="color: #0000ff;">object</span><span style="color: #000000;"> sender, EventArgs e)
    {
        layoutControl1.Root.Clear();

        LayoutControlItem billDateItem </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> LayoutControlItem();
        billDateItem.Control </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> TextEdit();
        billDateItem.Text </span>= <span style="color: #800000;">"</span><span style="color: #800000;">日期</span><span style="color: #800000;">"</span><span style="color: #000000;">;
        billDateItem.AppearanceItemCaption.TextOptions.HAlignment </span>=<span style="color: #000000;"> DevExpress.Utils.HorzAlignment.Far;
        layoutControl1.Root.AddItem(billDateItem);

        LayoutControlItem billCodeItem </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> LayoutControlItem();
        billCodeItem.Control </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> TextEdit();
        billCodeItem.Text </span>= <span style="color: #800000;">"</span><span style="color: #800000;">单号</span><span style="color: #800000;">"</span><span style="color: #000000;">;
        billCodeItem.AppearanceItemCaption.TextOptions.HAlignment </span>=<span style="color: #000000;"> DevExpress.Utils.HorzAlignment.Far;
        layoutControl1.Root.AddItem(billCodeItem, billDateItem, InsertType.Right);

        LayoutControlItem billStateItem </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> LayoutControlItem();
        billStateItem.Control </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> TextEdit();
        billStateItem.Text </span>= <span style="color: #800000;">"</span><span style="color: #800000;">状态</span><span style="color: #800000;">"</span><span style="color: #000000;">;
        billStateItem.AppearanceItemCaption.TextOptions.HAlignment </span>=<span style="color: #000000;"> DevExpress.Utils.HorzAlignment.Far;
        layoutControl1.Root.AddItem(billStateItem, billDateItem, InsertType.Right);

        LayoutControlItem iotypeItem </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> LayoutControlItem();
        iotypeItem.Control </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> TextEdit();
        iotypeItem.Text </span>= <span style="color: #800000;">"</span><span style="color: #800000;">出入库类型</span><span style="color: #800000;">"</span><span style="color: #000000;">;
        iotypeItem.AppearanceItemCaption.TextOptions.HAlignment </span>=<span style="color: #000000;"> DevExpress.Utils.HorzAlignment.Far;
        layoutControl1.Root.AddItem(iotypeItem);

        LayoutControlItem workshopItem </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> LayoutControlItem();
        workshopItem.Control </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> TextEdit();
        workshopItem.Text </span>= <span style="color: #800000;">"</span><span style="color: #800000;">生产车间</span><span style="color: #800000;">"</span><span style="color: #000000;">;
        workshopItem.AppearanceItemCaption.TextOptions.HAlignment </span>=<span style="color: #000000;"> DevExpress.Utils.HorzAlignment.Far;
        layoutControl1.Root.AddItem(workshopItem, iotypeItem, InsertType.Right);

        LayoutControlItem warehouseItem </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> LayoutControlItem();
        warehouseItem.Control </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> TextEdit();
        warehouseItem.Text </span>= <span style="color: #800000;">"</span><span style="color: #800000;">仓库</span><span style="color: #800000;">"</span><span style="color: #000000;">;
        warehouseItem.AppearanceItemCaption.TextOptions.HAlignment </span>=<span style="color: #000000;"> DevExpress.Utils.HorzAlignment.Far;
        layoutControl1.Root.AddItem(warehouseItem, iotypeItem, InsertType.Right);

        <strong><span style="color: #ff0000;">layoutControl1.BestFit();</span></strong>
    }
}</span></pre>
</div>]]></description></item><item><title>DevExpress.XtraLayout.LayoutControl 动态添加控件</title><link>http://www.cnblogs.com/eastson/archive/2014/07/19/3854710.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 19 Jul 2014 03:09:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/07/19/3854710.html</guid><description><![CDATA[<p>// Create an item within a specified group,<br />// bound to a specified data field with the specified editor<br />private LayoutControlItem CreateItemWithBoundEditor(BaseEdit editor, object dataSource,<br />&nbsp;&nbsp; string dataMember, LayoutControlGroup parentGroup) {<br />&nbsp;&nbsp; editor.DataBindings.Add("EditValue", dataSource, dataMember);<br />&nbsp;&nbsp; LayoutControlItem item = parentGroup.AddItem(dataMember, editor) as LayoutControlItem;<br />&nbsp;&nbsp; return item;<br />}<br />private void CreateLayout() {<br />&nbsp;&nbsp; //Add First Name and Last Name items<br />&nbsp;&nbsp; LayoutControlItem itemFirstName = CreateItemWithBoundEditor(new TextEdit(), employeesSource,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "FirstName", layoutControl1.Root);<br />&nbsp;&nbsp; LayoutControlItem itemLastName = CreateItemWithBoundEditor(new TextEdit(), employeesSource,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "LastName", layoutControl1.Root);<br />&nbsp;&nbsp; // Move the Last Name to the right of the First Name<br />&nbsp;&nbsp; itemLastName.Move(itemFirstName, InsertTypes.Right);</p>
<p>&nbsp;&nbsp; // Add the Birthday group with a birthday editor inside<br />&nbsp;&nbsp; LayoutControlGroup birthdayGroup = layoutControl1.AddGroup("Birthday Information");<br />&nbsp;&nbsp; CreateItemWithBoundEditor(new DateEdit(), employeesSource, "BirthDate", birthdayGroup);</p>
<p>&nbsp;&nbsp; // Add a tab with three address fields<br />&nbsp;&nbsp; TabbedControlGroup tabbedGroup = layoutControl1.AddTabbedGroup();<br />&nbsp;&nbsp; LayoutControlGroup addressGroup = tabbedGroup.AddTabPage("Address Details");<br />&nbsp;&nbsp; string[] dataFields = new string[] { "Country", "City", "Address" };<br />&nbsp;&nbsp; foreach (string dataField in dataFields)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CreateItemWithBoundEditor(new TextEdit(), employeesSource, dataField, addressGroup);</p>
<p>&nbsp;&nbsp; // Add a tab with a photo<br />&nbsp;&nbsp; LayoutControlGroup groupPhoto = tabbedGroup.AddTabPage("Photo");<br />&nbsp;&nbsp; CreateItemWithBoundEditor(new PictureEdit(), employeesSource, "Photo", groupPhoto);<br />}</p>
<p>&nbsp;</p>
<p>再次添加的时候如果需要先清除之前的item，代码如下</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; layoutControlSelectBusiness.BeginUpdate();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; layoutControlSelectBusiness.Controls.Clear();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; layoutControlSelectBusiness.Root.Items.Clear();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 再次添加item的代码</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; layoutControlSelectBusiness.EndUpdate();</p>
<p>&nbsp;</p>
<p>谢谢你提供的这篇代码，帮我解决了layoutControl多列自动排版的问题， 关键代码：&nbsp;<br />// Move the Last Name to the right of the First Name<br />itemLastName.Move(itemFirstName, DevExpress.XtraLayout.Utils.InsertType.Right);<br />再次表示感谢！</p>]]></description></item><item><title>C#：定义窗口快捷键</title><link>http://www.cnblogs.com/eastson/archive/2014/07/15/3845198.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 15 Jul 2014 09:09:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/07/15/3845198.html</guid><description><![CDATA[<p>事情的关键是要设置Form的KeyPreview属性，然后再在KeyDown事件中检查按键。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> TEST : Form
{
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> TEST()
    {
        InitializeComponent();
    }

    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span> TEST_Load(<span style="color: #0000ff;">object</span><span style="color: #000000;"> sender, EventArgs e)
    {
        </span><span style="color: #0000ff;">this</span>.KeyPreview = <span style="color: #0000ff;">true</span><span style="color: #000000;">;
    }

    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span> TEST_KeyDown(<span style="color: #0000ff;">object</span><span style="color: #000000;"> sender, KeyEventArgs e)
    {
        </span><span style="color: #0000ff;">if</span> (e.KeyCode == Keys.F1 &amp;&amp;<span style="color: #000000;"> e.Control)
        {
            MessageBox.Show(</span><span style="color: #800000;">"</span><span style="color: #800000;">Hello!</span><span style="color: #800000;">"</span><span style="color: #000000;">); 
        }
    }
}</span></pre>
</div>
<p>参考：<a href="http://www.cnblogs.com/Asa-Zhu/archive/2012/11/08/2761086.html">http://www.cnblogs.com/Asa-Zhu/archive/2012/11/08/2761086.html</a></p>]]></description></item><item><title>DevExpress添加Winform窗体到DockPanel</title><link>http://www.cnblogs.com/eastson/archive/2014/07/09/3834005.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 09 Jul 2014 09:13:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/07/09/3834005.html</guid><description><![CDATA[<p>在使用DevExpress过程中，原先已经创建好的导航窗体，如何添加到DockPanel中进行展示？</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FormX frmX = new FormX();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;frmX.Show(this.DockPanel1); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>　　　　frmX.Dock = DockStyle.Fill; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp; 　　&nbsp; frmX.TopLevel = false; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>　　　　frmX.FormBorderStyle = FormBorderStyle.None; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>　　　　this.DockPanel1.Text = frmX.Text; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>　　　　this.DockPanel1.TabText = frmX.Text; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>　　　　this.DockPanel1.Controls.Add(frmX);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>这样处理即可，如果DockPanel是动态创建的。需要这样来写：</p>
<p>DockPanel panelX = new DockPanel();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>panelX = this.DockManager1.AddPanel(DockingStyle.Left);</p>
<p>然后将上面的DockPanel1替换成panelX即可。</p>]]></description></item><item><title>DevExpress GridControl使用方法</title><link>http://www.cnblogs.com/eastson/archive/2014/07/09/3833990.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 09 Jul 2014 09:09:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/07/09/3833990.html</guid><description><![CDATA[<p><code class="csharp plain">原文地址：<a href="http://www.cnblogs.com/zeroone/p/3525423.html">http://www.cnblogs.com/zeroone/p/3525423.html</a><br /><br />一、如何解决单击记录整行选中的问题</code></p>
<div class="line number2 index1 alt1">&nbsp;</div>
<div class="line number3 index2 alt2"><code class="csharp plain">View-&gt;OptionsBehavior-&gt;EditorShowMode 设置为：Click</code></div>
<div class="line number4 index3 alt1">&nbsp;</div>
<div class="line number5 index4 alt2">&nbsp;</div>
<div class="line number6 index5 alt1"><code class="csharp plain">二、如何新增一条记录</code></div>
<div class="line number7 index6 alt2">&nbsp;</div>
<div class="line number8 index7 alt1"><code class="csharp plain">(1)、gridView.AddNewRow()</code></div>
<div class="line number9 index8 alt2">&nbsp;</div>
<div class="line number10 index9 alt1"><code class="csharp plain">(2)、实现gridView_InitNewRow事件</code></div>
<div class="line number11 index10 alt2">&nbsp;</div>
<div class="line number12 index11 alt1"><code class="csharp plain">三、如何解决GridControl记录能获取而没有显示出来的问题</code></div>
<div class="line number13 index12 alt2">&nbsp;</div>
<div class="line number14 index13 alt1"><code class="csharp plain">gridView.populateColumns();</code></div>
<div class="line number15 index14 alt2">&nbsp;</div>
<div class="line number16 index15 alt1"><code class="csharp plain">四、如何让行只能选择而不能编辑（或编辑某一单元格）</code></div>
<div class="line number17 index16 alt2">&nbsp;</div>
<div class="line number18 index17 alt1"><code class="csharp plain">(1)、View-&gt;OptionsBehavior-&gt;EditorShowMode 设置为：Click</code></div>
<div class="line number19 index18 alt2">&nbsp;</div>
<div class="line number20 index19 alt1"><code class="csharp plain">(2)、View-&gt;OptionsBehavior-&gt;Editable 设置为：</code><code class="csharp keyword">false</code></div>
<div class="line number21 index20 alt2">&nbsp;</div>
<div class="line number22 index21 alt1"><code class="csharp plain">五、如何禁用GridControl中单击列弹出右键菜单</code></div>
<div class="line number23 index22 alt2">&nbsp;</div>
<div class="line number24 index23 alt1"><code class="csharp plain">设置Run Design-&gt;OptionsMenu-&gt;EnableColumnMenu 设置为：</code><code class="csharp keyword">false</code></div>
<div class="line number25 index24 alt2">&nbsp;</div>
<div class="line number26 index25 alt1"><code class="csharp plain">六、如何隐藏GridControl的GroupPanel表头</code></div>
<div class="line number27 index26 alt2">&nbsp;</div>
<div class="line number28 index27 alt1"><code class="csharp plain">设置Run Design-&gt;OptionsView-&gt;ShowGroupPanel 设置为：</code><code class="csharp keyword">false</code></div>
<div class="line number29 index28 alt2">&nbsp;</div>
<div class="line number30 index29 alt1"><code class="csharp plain">七、如何禁用GridControl中列头的过滤器</code></div>
<div class="line number31 index30 alt2">&nbsp;</div>
<div class="line number32 index31 alt1"><code class="csharp plain">过滤器如下图所示：</code></div>
<div class="line number33 index32 alt2">&nbsp;</div>
<div class="line number34 index33 alt1"><code class="csharp plain">DevExpress GridControl使用方法总结</code></div>
<div class="line number35 index34 alt2">&nbsp;</div>
<div class="line number36 index35 alt1"><code class="csharp plain">设置 Run Design-&gt;OptionsCustomization-&gt;AllowFilter 设置为：</code><code class="csharp keyword">false</code></div>
<div class="line number37 index36 alt2">&nbsp;</div>
<div class="line number38 index37 alt1"><code class="csharp plain">八、如何在查询得到0条记录时显示自定义的字符提示/显示</code></div>
<div class="line number39 index38 alt2">&nbsp;</div>
<div class="line number40 index39 alt1"><code class="csharp plain">如图所示：</code></div>
<div class="line number41 index40 alt2">&nbsp;</div>
<div class="line number42 index41 alt1"><code class="csharp plain">DevExpress GridControl使用方法总结</code></div>
<div class="line number43 index42 alt2">&nbsp;</div>
<div class="line number44 index43 alt1"><code class="csharp plain">方法如下：</code></div>
<div class="line number45 index44 alt2">&nbsp;</div>
<div class="line number46 index45 alt1"><code class="csharp comments">//When no Records Are Being Displayed</code></div>
<div class="line number47 index46 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gridView1_CustomDrawEmptyForeground(</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">sender, CustomDrawEventArgs e)</code></div>
<div class="line number48 index47 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number49 index48 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp comments">//方法一（此方法为GridView设置了数据源绑定时，可用） </code></div>
<div class="line number50 index49 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">ColumnView columnView = sender </code><code class="csharp keyword">as</code>&nbsp;<code class="csharp plain">ColumnView;</code></div>
<div class="line number51 index50 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">BindingSource bindingSource = </code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.DataSource </code><code class="csharp keyword">as</code>&nbsp;<code class="csharp plain">BindingSource;</code></div>
<div class="line number52 index51 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code><code class="csharp plain">(bindingSource.Count == 0)</code></div>
<div class="line number53 index52 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number54 index53 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">string</code>&nbsp;<code class="csharp plain">str = </code><code class="csharp string">"没有查询到你所想要的数据!"</code><code class="csharp plain">;</code></div>
<div class="line number55 index54 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Font f = </code><code class="csharp keyword">new</code>&nbsp;<code class="csharp plain">Font(</code><code class="csharp string">"宋体"</code><code class="csharp plain">, 10, FontStyle.Bold);</code></div>
<div class="line number56 index55 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Rectangle r = </code><code class="csharp keyword">new</code>&nbsp;<code class="csharp plain">Rectangle(e.Bounds.Top + 5, e.Bounds.Left + 5, e.Bounds.Right - 5, e.Bounds.Height - 5);</code></div>
<div class="line number57 index56 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.Graphics.DrawString(str, f, Brushes.Black, r);</code></div>
<div class="line number58 index57 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number59 index58 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp comments">//方法二（此方法为GridView没有设置数据源绑定时，使用，一般使用此种方法）&nbsp; </code></div>
<div class="line number60 index59 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(</code><code class="csharp keyword">this</code><code class="csharp plain">._flag)</code></div>
<div class="line number61 index60 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number62 index61 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.RowCount == 0)</code></div>
<div class="line number63 index62 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number64 index63 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">string</code>&nbsp;<code class="csharp plain">str = </code><code class="csharp string">"没有查询到你所想要的数据!"</code><code class="csharp plain">;</code></div>
<div class="line number65 index64 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Font f = </code><code class="csharp keyword">new</code>&nbsp;<code class="csharp plain">Font(</code><code class="csharp string">"宋体"</code><code class="csharp plain">, 10, FontStyle.Bold);</code></div>
<div class="line number66 index65 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Rectangle r = </code><code class="csharp keyword">new</code>&nbsp;<code class="csharp plain">Rectangle(e.Bounds.Left + 5, e.Bounds.Top + 5, e.Bounds.Width - 5, e.Bounds.Height - 5);</code></div>
<div class="line number67 index66 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.Graphics.DrawString(str, f, Brushes.Black, r);</code></div>
<div class="line number68 index67 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number69 index68 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number70 index69 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number71 index70 alt2">&nbsp;</div>
<div class="line number72 index71 alt1"><code class="csharp plain">九、如何显示水平滚动条？</code></div>
<div class="line number73 index72 alt2">&nbsp;</div>
<div class="line number74 index73 alt1"><code class="csharp plain">设置</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView.OptionsView.ColumnAutoWidth = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div>
<div class="line number75 index74 alt2">&nbsp;</div>
<div class="line number76 index75 alt1"><code class="csharp plain">十、如何定位到第一条数据/记录？</code></div>
<div class="line number77 index76 alt2">&nbsp;</div>
<div class="line number78 index77 alt1"><code class="csharp plain">设置 </code><code class="csharp keyword">this</code><code class="csharp plain">.gridView.MoveFirst()</code></div>
<div class="line number79 index78 alt2">&nbsp;</div>
<div class="line number80 index79 alt1"><code class="csharp plain">十一、如何定位到下一条数据/记录？</code></div>
<div class="line number81 index80 alt2">&nbsp;</div>
<div class="line number82 index81 alt1"><code class="csharp plain">设置 </code><code class="csharp keyword">this</code><code class="csharp plain">.gridView.MoveNext()</code></div>
<div class="line number83 index82 alt2">&nbsp;</div>
<div class="line number84 index83 alt1"><code class="csharp plain">十二、如何定位到最后一条数据/记录？</code></div>
<div class="line number85 index84 alt2">&nbsp;</div>
<div class="line number86 index85 alt1"><code class="csharp plain">设置 </code><code class="csharp keyword">this</code><code class="csharp plain">.gridView.MoveLast()</code></div>
<div class="line number87 index86 alt2">&nbsp;</div>
<div class="line number88 index87 alt1"><code class="csharp plain">十三、设置成一次选择一行，并且不能被编辑</code></div>
<div class="line number89 index88 alt2">&nbsp;</div>
<div class="line number90 index89 alt1"><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.FocusRectStyle = DevExpress.XtraGrid.Views.Grid.DrawFocusRectStyle.RowFocus;</code></div>
<div class="line number91 index90 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.OptionsBehavior.Editable = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div>
<div class="line number92 index91 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.OptionsSelection.EnableAppearanceFocusedCell = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div>
<div class="line number93 index92 alt2">&nbsp;</div>
<div class="line number94 index93 alt1"><code class="csharp plain">十四、如何显示行号？</code></div>
<div class="line number95 index94 alt2">&nbsp;</div>
<div class="line number96 index95 alt1"><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.IndicatorWidth = 40; </code></div>
<div class="line number97 index96 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp comments">//显示行的序号 </code></div>
<div class="line number98 index97 alt1"><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gridView1_CustomDrawRowIndicator(</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">sender, RowIndicatorCustomDrawEventArgs e)</code></div>
<div class="line number99 index98 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number100 index99 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(e.Info.IsRowIndicator &amp;&amp; e.RowHandle&gt;=0)</code></div>
<div class="line number101 index100 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number102 index101 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.Info.DisplayText = (e.RowHandle + 1).ToString();</code></div>
<div class="line number103 index102 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number104 index103 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number105 index104 alt2">&nbsp;</div>
<div class="line number106 index105 alt1"><code class="csharp plain">十五、如何让各列头禁止移动？</code></div>
<div class="line number107 index106 alt2">&nbsp;</div>
<div class="line number108 index107 alt1"><code class="csharp plain">设置gridView1.OptionsCustomization.AllowColumnMoving = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div>
<div class="line number109 index108 alt2">&nbsp;</div>
<div class="line number110 index109 alt1"><code class="csharp plain">十六、如何让各列头禁止排序？</code></div>
<div class="line number111 index110 alt2">&nbsp;</div>
<div class="line number112 index111 alt1"><code class="csharp plain">设置gridView1.OptionsCustomization.AllowSort = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div>
<div class="line number113 index112 alt2">&nbsp;</div>
<div class="line number114 index113 alt1"><code class="csharp plain">十七、如何禁止各列头改变列宽？</code></div>
<div class="line number115 index114 alt2">&nbsp;</div>
<div class="line number116 index115 alt1"><code class="csharp plain">设置gridView1.OptionsCustomization.AllowColumnResizing = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div>
<div class="line number117 index116 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">Normal 0 7.8 磅 0 2 </code><code class="csharp keyword">false</code>&nbsp;<code class="csharp keyword">false</code>&nbsp;<code class="csharp keyword">false</code>&nbsp;<code class="csharp plain">EN-US ZH-CN X-NONE </code></div>
<div class="line number118 index117 alt1">&nbsp;</div>
<div class="line number119 index118 alt2"><code class="csharp plain">DEV控件：gridControl常用属性设置 </code></div>
<div class="line number120 index119 alt1">&nbsp;</div>
<div class="line number121 index120 alt2"><code class="csharp plain">2011-01-19 09:50</code></div>
<div class="line number122 index121 alt1">&nbsp;</div>
<div class="line number123 index122 alt2"><code class="csharp plain">1.隐藏最上面的GroupPanel</code></div>
<div class="line number124 index123 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gridView1.OptionsView.ShowGroupPanel=</code><code class="csharp keyword">false</code><code class="csharp plain">; </code></div>
<div class="line number125 index124 alt2">&nbsp;</div>
<div class="line number126 index125 alt1"><code class="csharp plain">2.得到当前选定记录某字段的值</code></div>
<div class="line number127 index126 alt2"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">sValue=Table.Rows[gridView1.FocusedRowHandle][FieldName].ToString();</code></div>
<div class="line number128 index127 alt1">&nbsp;</div>
<div class="line number129 index128 alt2"><code class="csharp plain">3.数据只读</code></div>
<div class="line number130 index129 alt1"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">gridView1.OptionsBehavior.Editable=</code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div>
<div class="line number131 index130 alt2">&nbsp;</div>
<div class="line number132 index131 alt1"><code class="csharp plain">4.不显示MasterDetailView</code></div>
<div class="line number133 index132 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gridView1.OptionsDetail.EnableMasterViewMode=</code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div>
<div class="line number134 index133 alt1">&nbsp;</div>
<div class="line number135 index134 alt2"><code class="csharp plain">5.修改最上面的GroupPanel内容</code></div>
<div class="line number136 index135 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gridView1.GroupPanelText=</code><code class="csharp string">"柳生飘絮"</code><code class="csharp plain">;</code></div>
<div class="line number137 index136 alt2">&nbsp;</div>
<div class="line number138 index137 alt1"><code class="csharp plain">6.设置数据源:</code></div>
<div class="line number139 index138 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gridControl1.DataSource = dt;</code></div>
<div class="line number140 index139 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">绑定每一列的FiledName--属性</code></div>
<div class="line number141 index140 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">对于Oracle数据库,所有的在设计器里写的程序中的字段名必须大写,否则可能绑定不上字段,sqlserver没有这个限制.</code></div>
<div class="line number142 index141 alt1">&nbsp;</div>
<div class="line number143 index142 alt2"><code class="csharp plain">7.读写拷贝权限设置</code></div>
<div class="line number144 index143 alt1"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">只读不可拷贝：</code></div>
<div class="line number145 index144 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">ColumnViewOptionsBehavior.Editable = False</code></div>
<div class="line number146 index145 alt1">&nbsp;</div>
<div class="line number147 index146 alt2"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">只读可拷贝:</code></div>
<div class="line number148 index147 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">ColumnViewOptionsBehavior.Editable = True</code></div>
<div class="line number149 index148 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">OptionsColumn.AllowEdit = True</code></div>
<div class="line number150 index149 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">OptionsColumn.ReadOnly = True</code></div>
<div class="line number151 index150 alt2">&nbsp;</div>
<div class="line number152 index151 alt1"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">可编辑:</code></div>
<div class="line number153 index152 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">ColumnViewOptionsBehavior.Editable = True</code></div>
<div class="line number154 index153 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">OptionsColumn.AllowEdit = True</code></div>
<div class="line number155 index154 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">OptionsColumn.ReadOnly = False</code></div>
<div class="line number156 index155 alt1">&nbsp;</div>
<div class="line number157 index156 alt2"><code class="csharp plain">8.模板列的设置:</code></div>
<div class="line number158 index157 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">到Columns中，在他的属性中找到ColumnEdit.</code></div>
<div class="line number159 index158 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">以LookUpEdit为例：</code></div>
<div class="line number160 index159 alt1"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">首先从Designer左边菜单In-PlaceEditor Repository中添加LookUpEdit.取名为Re1.然后.在他的Columns属性中添加3列.Caption依次为:编号,姓名,性别.FieldName依次为:FID,FNAME,FSEX.然后将Re1的NullText设置成空.</code></div>
<div class="line number161 index160 alt2"><code class="csharp plain">　　AutoSearchColumnIndex属性设置为2.ImmediatePopup属性设置为True.</code></div>
<div class="line number162 index161 alt1"><code class="csharp plain">　　SearchMode设置为OnlyInPopup.</code></div>
<div class="line number163 index162 alt2"><code class="csharp plain">　　然后将这个模板列附加到我们上面提到的列1(也就是将列1的ColumnEdit属性设成Re1)</code></div>
<div class="line number164 index163 alt1"><code class="csharp plain">　　最后我们还要在代码里面给Re1绑定数据源和显示项.</code></div>
<div class="line number165 index164 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Re1.DataSource =DALUse.Query(</code><code class="csharp string">"select fid,fname,fsex from dual"</code><code class="csharp plain">).Tables[0];</code></div>
<div class="line number166 index165 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Re1.DisplayMember =</code><code class="csharp string">"FSEX"</code><code class="csharp plain">;</code></div>
<div class="line number167 index166 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Re1.ValueMember =</code><code class="csharp string">"FNAME"</code><code class="csharp plain">;</code></div>
<div class="line number168 index167 alt1">&nbsp;</div>
<div class="line number169 index168 alt2"><code class="csharp spaces">&nbsp;</code>&nbsp;</div>
<div class="line number170 index169 alt1">&nbsp;</div>
<div class="line number171 index170 alt2"><code class="csharp plain">9.设某一列文字和标题局中显示&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div>
<div class="line number172 index171 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gridView1.Columns[0].AppearanceHeader.TextOptions.HAlignment =DevExpress.Utils.HorzAlignment.Center;</code></div>
<div class="line number173 index172 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gridView1.Columns[0].AppearanceCell.TextOptions.HAlignment =DevExpress.Utils.HorzAlignment.Center;</code></div>
<div class="line number174 index173 alt1">&nbsp;</div>
<div class="line number175 index174 alt2"><code class="csharp spaces">&nbsp;</code>&nbsp;</div>
<div class="line number176 index175 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">10.去掉某一列上面的自动筛选功能(Filter)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div>
<div class="line number177 index176 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gridView1.Columns[0].OptionsFilter.AllowAutoFilter = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div>
<div class="line number178 index177 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gridView1.Columns[0].OptionsFilter.AllowFilter =</code><code class="csharp keyword">false</code><code class="csharp plain">;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div>
<div class="line number179 index178 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gridView1.Columns[0].OptionsFilter.ImmediateUpdateAutoFilter =</code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div>
<div class="line number180 index179 alt1">&nbsp;</div>
<div class="line number181 index180 alt2"><code class="csharp spaces">&nbsp;</code>&nbsp;</div>
<div class="line number182 index181 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">11.设置冻结列(左冻结)</code></div>
<div class="line number183 index182 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gridView1.Columns[0].Fixed= DevExpress.XtraGrid.Columns.FixedStyle.Left;</code></div>
<div class="line number184 index183 alt1">&nbsp;</div>
<div class="line number185 index184 alt2"><code class="csharp spaces">&nbsp;</code>&nbsp;</div>
<div class="line number186 index185 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">12.得到单元格数据(0行0列)</code></div>
<div class="line number187 index186 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">string</code>&nbsp;<code class="csharp plain">ss=gridView1.GetRowCellDisplayText(0,gridView1.Columns[0]);</code></div>
<div class="line number188 index187 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">string</code>&nbsp;<code class="csharp plain">ss = gridView1.GetRowCellValue(0, gridView1.Columns[0]);</code></div>
<div class="line number189 index188 alt2">&nbsp;</div>
<div class="line number190 index189 alt1"><code class="csharp spaces">&nbsp;</code>&nbsp;</div>
<div class="line number191 index190 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">13.设置单元格数据(将0行0列的单元格赋值123)</code></div>
<div class="line number192 index191 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gridView1.SetRowCellValue(0, gridView1.Columns[0],</code><code class="csharp string">"123"</code><code class="csharp plain">);</code></div>
<div class="line number193 index192 alt2">&nbsp;</div>
<div class="line number194 index193 alt1"><code class="csharp spaces">&nbsp;</code>&nbsp;</div>
<div class="line number195 index194 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">13.手动添加dev的列</code></div>
<div class="line number196 index195 alt1"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">DevExpress.XtraGrid.Columns.GridColumn Col1=newDevExpress.XtraGrid.Columns.GridColumn ();</code></div>
<div class="line number197 index196 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Col1.FieldName=</code><code class="csharp string">"FID"</code><code class="csharp plain">;</code></div>
<div class="line number198 index197 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Col1.Visible=</code><code class="csharp keyword">true</code><code class="csharp plain">;</code></div>
<div class="line number199 index198 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Col1.VisibleIndex=gridView1.Columns.Count;</code></div>
<div class="line number200 index199 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gridView1.Columns.Add(Col1);</code></div>
<div class="line number201 index200 alt2">&nbsp;</div>
<div class="line number202 index201 alt1">&nbsp;</div>
<div class="line number203 index202 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">14.设置自动增加的行号,需要先添加给gridview添加事件CustomDrawRowIndicator</code></div>
<div class="line number204 index203 alt1">&nbsp;</div>
<div class="line number205 index204 alt2"><code class="csharp spaces">&nbsp;</code>&nbsp;</div>
<div class="line number206 index205 alt1">&nbsp;</div>
<div class="line number207 index206 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gridview_CustomDrawRowIndicator(objectsender,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DevExpress.XtraGrid.Views.Grid.RowIndicatorCustomDrawEventArgs e)</code></div>
<div class="line number208 index207 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number209 index208 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(e.Info.IsRowIndicator &amp;&amp;e.RowHandle &gt;= 0)</code></div>
<div class="line number210 index209 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.Info.DisplayText = (e.RowHandle + 1).ToString();</code></div>
<div class="line number211 index210 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number212 index211 alt1">&nbsp;</div>
<div class="line number213 index212 alt2"><code class="csharp plain">15.删除: (修改了dgvdel里的datagridviewdel方法)</code></div>
<div class="line number214 index213 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">public</code>&nbsp;<code class="csharp keyword">static</code>&nbsp;<code class="csharp plain">voiddatagridviewdel_Dev(DevExpress.XtraGrid.Views.Grid.GridView Mydgv)</code></div>
<div class="line number215 index214 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number216 index215 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(MessageBox.Show(</code><code class="csharp string">"你确定要删除选中的记录吗？"</code><code class="csharp plain">, </code><code class="csharp string">"删除提示"</code><code class="csharp plain">,MessageBoxButtons.YesNo,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MessageBoxIcon.Warning, MessageBoxDefaultButton.Button2, 0, </code><code class="csharp keyword">false</code><code class="csharp plain">) == DialogResult.Yes)</code></div>
<div class="line number217 index216 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number218 index217 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">intiSelectRowCount = Mydgv.SelectedRowsCount;</code></div>
<div class="line number219 index218 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code><code class="csharp plain">(iSelectRowCount &gt; 0)</code></div>
<div class="line number220 index219 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number221 index220 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Mydgv.DeleteSelectedRows();</code></div>
<div class="line number222 index221 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number223 index222 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number224 index223 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number225 index224 alt2"><code class="csharp spaces">&nbsp;&nbsp;</code>&nbsp;</div>
<div class="line number226 index225 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">16. 新增: (对于新增,其本身的AddNewRow方法就可以做到)</code></div>
<div class="line number227 index226 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">btn_add_Click(</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">sender, EventArgs e)</code></div>
<div class="line number228 index227 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{&nbsp; </code></div>
<div class="line number229 index228 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gridView1.AddNewRow();&nbsp;&nbsp; </code></div>
<div class="line number230 index229 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number231 index230 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">具体如果对于新加行还有什么特别的设置,可以在它gridView1_InitNewRow事件中填写:</code></div>
<div class="line number232 index231 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gridView1_InitNewRow(</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">sender,DevExpress.XtraGrid.Views.Grid.InitNewRowEventArgs e)</code></div>
<div class="line number233 index232 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number234 index233 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">ColumnView View = sender </code><code class="csharp keyword">as</code>&nbsp;<code class="csharp plain">ColumnView;</code></div>
<div class="line number235 index234 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">View.SetRowCellValue(e.RowHandle,View.Columns[0],gridView1.GetRowCellValue(gridView1.GetRowHandle(gridView1.RowCount - 2),gridView1.Columns[0])); </code><code class="csharp comments">//复制最后一行的数据到新行</code></div>
<div class="line number236 index235 alt1">&nbsp;</div>
<div class="line number237 index236 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">View.SetRowCellValue(e.RowHandle, View.Columns[1],gridView1.GetRowCellValue(gridView1.GetRowHandle(gridView1.RowCount - 2),gridView1.Columns[1])); </code><code class="csharp comments">//复制最后一行的数据到新行</code></div>
<div class="line number238 index237 alt1">&nbsp;</div>
<div class="line number239 index238 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number240 index239 alt1">&nbsp;</div>
<div class="line number241 index240 alt2"><code class="csharp spaces">&nbsp;</code>&nbsp;</div>
<div class="line number242 index241 alt1"><code class="csharp plain">17. 保存 (第三方控件提供的RefreshData和RefreshDataSource方法对于保存数据都不好使,最后还是使用了Dgvsave的datagridviewsave方法,用这个方法就可以)</code></div>
<div class="line number243 index242 alt2">&nbsp;</div>
<div class="line number244 index243 alt1">&nbsp;</div>
<div class="line number245 index244 alt2"><code class="csharp plain">18.特效：gridcontrol中有5种view 型式，普通的是gridview，然后分别为cardview、BandedView、AdvancedBandedView、LayoutView；共5种。</code></div>
<div class="line number246 index245 alt1"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">1）、view组中把OptionView下的viewmode 设置成&ldquo;Carousel&rdquo;就达到这种&ldquo;旋转木马&rdquo;式的gridcontrolview 特效了</code></div>
<div class="line number247 index246 alt2"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">2）、layoutView1.OptionsCarouselMode.PitchAngle 这个属性决定&ldquo;旋转木马&rdquo;的pitch angle 螺距角; 螺旋角; 螺旋升角; 俯仰角; 倾角; 节锥半角 </code></div>
<div class="line number248 index247 alt1"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">3）、Roll Angle 属性决定着 倾侧角度</code></div>
<div class="line number249 index248 alt2"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">4）、指定数据源，显示数据：</code></div>
<div class="line number250 index249 alt1"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp comments">//显示数据</code></div>
<div class="line number251 index250 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp plain">voidshowData(List&lt;Employee &gt; list)</code></div>
<div class="line number252 index251 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number253 index252 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">DataTable dt= </code><code class="csharp keyword">new</code>&nbsp;<code class="csharp plain">DataTable(</code><code class="csharp string">"OneEmployee"</code><code class="csharp plain">);</code></div>
<div class="line number254 index253 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">dt.Columns.Add(</code><code class="csharp string">"Caption"</code><code class="csharp plain">, System.Type.GetType(</code><code class="csharp string">"System.String"</code><code class="csharp plain">));</code></div>
<div class="line number255 index254 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">dt.Columns.Add(</code><code class="csharp string">"Department"</code><code class="csharp plain">,System.Type.GetType(</code><code class="csharp string">"System.String"</code><code class="csharp plain">));</code></div>
<div class="line number256 index255 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">dt.Columns.Add(</code><code class="csharp string">"PhotoName"</code><code class="csharp plain">,System.Type.GetType(</code><code class="csharp string">"System.Byte[]"</code><code class="csharp plain">));</code></div>
<div class="line number257 index256 alt2">&nbsp;</div>
<div class="line number258 index257 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">for</code><code class="csharp plain">(</code><code class="csharp keyword">int</code>&nbsp;<code class="csharp plain">i = 0; i &lt; list.Count; i++)</code></div>
<div class="line number259 index258 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number260 index259 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">DataRow dr = dt.NewRow();</code></div>
<div class="line number261 index260 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">dr[</code><code class="csharp string">"Caption"</code><code class="csharp plain">] = list[i].Name;</code></div>
<div class="line number262 index261 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">dr[</code><code class="csharp string">"Department"</code><code class="csharp plain">] = list[i].Department;</code></div>
<div class="line number263 index262 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">string</code>&nbsp;<code class="csharp plain">imagePath = </code><code class="csharp string">@"D:\C#\photos\"</code>&nbsp;<code class="csharp plain">+ list[i].PhotoPath;</code></div>
<div class="line number264 index263 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">dr[</code><code class="csharp string">"PhotoName"</code><code class="csharp plain">] = getImageByte(imagePath);</code></div>
<div class="line number265 index264 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">dt.Rows.Add(dr);</code></div>
<div class="line number266 index265 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number267 index266 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gridControl1.DataSource = dt;</code></div>
<div class="line number268 index267 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number269 index268 alt2">&nbsp;</div>
<div class="line number270 index269 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp comments">//返回图片的字节流byte[]</code></div>
<div class="line number271 index270 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">byte</code><code class="csharp plain">[] getImageByte(stringimagePath)</code></div>
<div class="line number272 index271 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number273 index272 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">FileStreamfiles = </code><code class="csharp keyword">new</code>&nbsp;<code class="csharp plain">FileStream(imagePath, FileMode.Open);</code></div>
<div class="line number274 index273 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">byte</code><code class="csharp plain">[]imgByte = </code><code class="csharp keyword">new</code>&nbsp;<code class="csharp keyword">byte</code>&nbsp;<code class="csharp plain">[files.Length ];</code></div>
<div class="line number275 index274 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">files.Read(imgByte, 0, imgByte.Length);</code></div>
<div class="line number276 index275 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">files.Close();</code></div>
<div class="line number277 index276 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">returnimgByte;</code></div>
<div class="line number278 index277 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number279 index278 alt2">&nbsp;</div>
<div class="line number280 index279 alt1"><code class="csharp plain">19.检查数据的有效性</code></div>
<div class="line number281 index280 alt2"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">在gridview的ValidateRow事件中加入检查代码：</code></div>
<div class="line number282 index281 alt1"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp preprocessor">#region 检查数据</code></div>
<div class="line number283 index282 alt2"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gridView1_ValidateRow(</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">sender, ValidateRowEventArgse)</code></div>
<div class="line number284 index283 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number285 index284 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">GridView view = sender </code><code class="csharp keyword">as</code>&nbsp;<code class="csharp plain">GridView;</code></div>
<div class="line number286 index285 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">view.ClearColumnErrors();</code></div>
<div class="line number287 index286 alt2">&nbsp;</div>
<div class="line number288 index287 alt1"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(view.GetRowCellValue(e.RowHandle, </code><code class="csharp string">"ReceiveDate"</code><code class="csharp plain">) ==DBNull.Value)</code></div>
<div class="line number289 index288 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number290 index289 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.Valid = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div>
<div class="line number291 index290 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">view.SetColumnError(view.Columns[</code><code class="csharp string">"ReceiveDate"</code><code class="csharp plain">], </code><code class="csharp string">"必须指定日期"</code><code class="csharp plain">);</code></div>
<div class="line number292 index291 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number293 index292 alt2">&nbsp;</div>
<div class="line number294 index293 alt1"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number295 index294 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp preprocessor">#endregion</code></div>
<div class="line number296 index295 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">调用gridview.UpdateCurrentRow()方法执行检查</code></div>
<div class="line number297 index296 alt2">&nbsp;</div>
<div class="line number298 index297 alt1">&nbsp;</div>
<div class="line number299 index298 alt2"><code class="csharp plain">最常用的DevExpress Winform 4个代码片段：</code></div>
<div class="line number300 index299 alt1">&nbsp;</div>
<div class="line number301 index300 alt2"><code class="csharp plain">一 、GridControl的删除操作</code></div>
<div class="line number302 index301 alt1">&nbsp;</div>
<div class="line number303 index302 alt2"><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">rILinkEditInfoDel_Click(</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">sender, EventArgs e)</code></div>
<div class="line number304 index303 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number305 index304 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(XtraMessageBox.Show(</code><code class="csharp string">"请确定是否删除当前记录？"</code><code class="csharp plain">, </code><code class="csharp string">"警告"</code><code class="csharp plain">,MessageBoxButtons.YesNo, MessageBoxIcon.Warning) == DialogResult.Yes)</code></div>
<div class="line number306 index305 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number307 index306 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">DataRow row =gvInfos.GetDataRow(gvInfos.FocusedRowHandle);</code></div>
<div class="line number308 index307 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">delByCode(row[</code><code class="csharp string">"Code"</code><code class="csharp plain">].ToString());</code></div>
<div class="line number309 index308 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">XtraMessageBox.Show(</code><code class="csharp string">"操作成功！"</code><code class="csharp plain">);</code></div>
<div class="line number310 index309 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number311 index310 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number312 index311 alt1">&nbsp;</div>
<div class="line number313 index312 alt2"><code class="csharp plain">二、绑定非数据表中列</code></div>
<div class="line number314 index313 alt1">&nbsp;</div>
<div class="line number315 index314 alt2"><code class="csharp plain">Hashtable ht = </code><code class="csharp keyword">new</code>&nbsp;<code class="csharp plain">Hashtable();</code></div>
<div class="line number316 index315 alt1">&nbsp;</div>
<div class="line number317 index316 alt2"><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gridView6_CustomUnboundColumnData(</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">sender, DevExpress.XtraGrid.Views.Base.CustomColumnDataEventArgse)</code></div>
<div class="line number318 index317 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number319 index318 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">GridView View = sender </code><code class="csharp keyword">as</code>&nbsp;<code class="csharp plain">GridView;</code></div>
<div class="line number320 index319 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(e.RowHandle &gt;= 0)</code></div>
<div class="line number321 index320 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number322 index321 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">needAlert =View.GetRowCellValue(e.RowHandle, View.Columns[</code><code class="csharp string">"needAlert"</code><code class="csharp plain">]);</code></div>
<div class="line number323 index322 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(needAlert != </code><code class="csharp keyword">null</code>&nbsp;<code class="csharp plain">&amp;needAlert != DBNull.Value &amp;&amp; needAlert.ToString().Trim() !=</code><code class="csharp string">"0"</code>&nbsp;<code class="csharp plain">&amp; View.GetRowCellValue(e.RowHandle,View.Columns[</code><code class="csharp string">"Value"</code><code class="csharp plain">]) != DBNull.Value)</code></div>
<div class="line number324 index323 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number325 index324 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">decimal</code>&nbsp;<code class="csharp plain">AverValue = Convert.ToDecimal(View.GetRowCellValue(e.RowHandle,View.Columns[</code><code class="csharp string">"Value"</code><code class="csharp plain">]));</code></div>
<div class="line number326 index325 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">objectMinValue = View.GetRowCellValue(e.RowHandle,View.Columns[</code><code class="csharp string">"MinValue"</code><code class="csharp plain">]);</code></div>
<div class="line number327 index326 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">objectMaxVlaue = View.GetRowCellValue(e.RowHandle,View.Columns[</code><code class="csharp string">"MaxValue"</code><code class="csharp plain">]);</code></div>
<div class="line number328 index327 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code><code class="csharp plain">(MinValue != DBNull.Value &amp; MinValue != </code><code class="csharp keyword">null</code>&nbsp;<code class="csharp plain">&amp; MaxVlaue.ToString() !=</code><code class="csharp string">""</code>&nbsp;<code class="csharp plain">&amp; MaxVlaue != DBNull.Value &amp;&amp; MaxVlaue != </code><code class="csharp keyword">null</code>&nbsp;<code class="csharp plain">&amp;MaxVlaue.ToString() != </code><code class="csharp string">""</code><code class="csharp plain">)</code></div>
<div class="line number329 index328 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number330 index329 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">decimal</code>&nbsp;<code class="csharp plain">gridColumn2 = Convert.ToDecimal(View.GetRowCellValue(e.RowHandle,View.Columns[</code><code class="csharp string">"MinValue"</code><code class="csharp plain">]));</code></div>
<div class="line number331 index330 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">decimal</code>&nbsp;<code class="csharp plain">gridColumn1 = Convert.ToDecimal(View.GetRowCellValue(e.RowHandle,View.Columns[</code><code class="csharp string">"MaxValue"</code><code class="csharp plain">]));</code></div>
<div class="line number332 index331 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(gridColumn2 &gt; AverValue || AverValue &gt; gridColumn1)</code></div>
<div class="line number333 index332 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number334 index333 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(!ht.ContainsKey(</code><code class="csharp string">"pic"</code><code class="csharp plain">))</code></div>
<div class="line number335 index334 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">ht.Add(</code><code class="csharp string">"pic"</code><code class="csharp plain">, GetImage(1));</code></div>
<div class="line number336 index335 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.Value = ht[</code><code class="csharp string">"pic"</code><code class="csharp plain">];</code></div>
<div class="line number337 index336 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number338 index337 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number339 index338 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number340 index339 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number341 index340 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number342 index341 alt1">&nbsp;</div>
<div class="line number343 index342 alt2"><code class="csharp color1">/// &lt;summary&gt;</code></div>
<div class="line number344 index343 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp color1">/// 由资源文件获取图片</code></div>
<div class="line number345 index344 alt2"><code class="csharp color1">/// &lt;/summary&gt;</code></div>
<div class="line number346 index345 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp color1">/// &lt;param name="key"&gt;&lt;/param&gt;</code></div>
<div class="line number347 index346 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp color1">/// &lt;returns&gt;&lt;/returns&gt;</code></div>
<div class="line number348 index347 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp keyword">byte</code><code class="csharp plain">[] GetImage(</code><code class="csharp keyword">int</code>&nbsp;<code class="csharp plain">key)</code></div>
<div class="line number349 index348 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number350 index349 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Image img =DevExpress.Utils.Controls.ImageHelper.CreateImageFromResources(</code><code class="csharp keyword">string</code><code class="csharp plain">.Format(</code><code class="csharp string">"RiverSys.Resources.{0}.gif"</code><code class="csharp plain">,key.ToString()), </code><code class="csharp keyword">typeof</code><code class="csharp plain">(RiverInfos).Assembly);</code></div>
<div class="line number351 index350 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">returnDevExpress.XtraEditors.Controls.ByteImageConverter.ToByteArray(img,ImageFormat.Gif);</code></div>
<div class="line number352 index351 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number353 index352 alt2">&nbsp;</div>
<div class="line number354 index353 alt1"><code class="csharp color1">/// &lt;summary&gt;</code></div>
<div class="line number355 index354 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp color1">/// 动态根据条件设置行样式</code></div>
<div class="line number356 index355 alt1"><code class="csharp color1">/// &lt;/summary&gt;</code></div>
<div class="line number357 index356 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp color1">/// &lt;param name="sender"&gt;&lt;/param&gt;</code></div>
<div class="line number358 index357 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp color1">/// &lt;param name="e"&gt;&lt;/param&gt;</code></div>
<div class="line number359 index358 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gridView6_RowStyle(</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">sender,DevExpress.XtraGrid.Views.Grid.RowStyleEventArgs e)</code></div>
<div class="line number360 index359 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number361 index360 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">GridView View = sender </code><code class="csharp keyword">as</code>&nbsp;<code class="csharp plain">GridView;</code></div>
<div class="line number362 index361 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(e.RowHandle &gt;= 0)</code></div>
<div class="line number363 index362 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number364 index363 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">needAlert =View.GetRowCellValue(e.RowHandle, View.Columns[</code><code class="csharp string">"needAlert"</code><code class="csharp plain">]);</code></div>
<div class="line number365 index364 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(needAlert != </code><code class="csharp keyword">null</code>&nbsp;<code class="csharp plain">&amp;needAlert != DBNull.Value &amp;&amp; needAlert.ToString().Trim() !=</code><code class="csharp string">"0"</code>&nbsp;<code class="csharp plain">&amp; View.GetRowCellValue(e.RowHandle,View.Columns[</code><code class="csharp string">"Value"</code><code class="csharp plain">]) != DBNull.Value)</code></div>
<div class="line number366 index365 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number367 index366 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">decimal</code>&nbsp;<code class="csharp plain">AverValue = Convert.ToDecimal(View.GetRowCellValue(e.RowHandle, View.Columns[</code><code class="csharp string">"Value"</code><code class="csharp plain">]));</code></div>
<div class="line number368 index367 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">objectMinValue = View.GetRowCellValue(e.RowHandle,View.Columns[</code><code class="csharp string">"MinValue"</code><code class="csharp plain">]);</code></div>
<div class="line number369 index368 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">objectMaxVlaue = View.GetRowCellValue(e.RowHandle,View.Columns[</code><code class="csharp string">"MaxValue"</code><code class="csharp plain">]);</code></div>
<div class="line number370 index369 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code><code class="csharp plain">(MinValue != DBNull.Value &amp; MinValue != </code><code class="csharp keyword">null</code>&nbsp;<code class="csharp plain">&amp; MaxVlaue.ToString() !=</code><code class="csharp string">""</code>&nbsp;<code class="csharp plain">&amp; MaxVlaue != DBNull.Value &amp;&amp; MaxVlaue != </code><code class="csharp keyword">null</code>&nbsp;<code class="csharp plain">&amp;MaxVlaue.ToString() != </code><code class="csharp string">""</code><code class="csharp plain">)</code></div>
<div class="line number371 index370 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number372 index371 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">decimal</code>&nbsp;<code class="csharp plain">gridColumn2 = Convert.ToDecimal(MinValue);</code></div>
<div class="line number373 index372 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">decimal</code>&nbsp;<code class="csharp plain">gridColumn1 = Convert.ToDecimal(MaxVlaue);</code></div>
<div class="line number374 index373 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(gridColumn2 &gt; AverValue || AverValue &gt; gridColumn1)</code></div>
<div class="line number375 index374 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number376 index375 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.Appearance.ForeColor = Color.Red;</code></div>
<div class="line number377 index376 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.Appearance.BackColor = Color.LightGray;</code></div>
<div class="line number378 index377 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number379 index378 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number380 index379 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number381 index380 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number382 index381 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number383 index382 alt2">&nbsp;</div>
<div class="line number384 index383 alt1"><code class="csharp plain">三、GridControl 中颜色选择控件</code></div>
<div class="line number385 index384 alt2">&nbsp;</div>
<div class="line number386 index385 alt1"><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gvMapColor_CustomUnboundColumnData(</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">sender,DevExpress.XtraGrid.Views.Base.CustomColumnDataEventArgs e)</code></div>
<div class="line number387 index386 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number388 index387 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">GridView view = sender </code><code class="csharp keyword">as</code>&nbsp;<code class="csharp plain">GridView;</code></div>
<div class="line number389 index388 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">DataView dv = view.DataSource </code><code class="csharp keyword">as</code>&nbsp;<code class="csharp plain">DataView;</code></div>
<div class="line number390 index389 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(e.IsGetData)</code></div>
<div class="line number391 index390 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number392 index391 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">string</code>&nbsp;<code class="csharp plain">strVal =dv[e.ListSourceRowIndex][</code><code class="csharp string">"Color"</code><code class="csharp plain">].ToString();</code></div>
<div class="line number393 index392 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(strVal != </code><code class="csharp string">""</code><code class="csharp plain">)</code></div>
<div class="line number394 index393 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number395 index394 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp comments">//e.Value = DevExpress.Utils.StyleLayout.ColorFromString(strVal);</code></div>
<div class="line number396 index395 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.Value = Common.HexToColor(strVal);</code></div>
<div class="line number397 index396 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number398 index397 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number399 index398 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">else</code></div>
<div class="line number400 index399 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number401 index400 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp comments">//Color colorVal =DevExpress.Utils.StyleLayout.ColorFromString(e.Value.ToString());</code></div>
<div class="line number402 index401 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Color colorVal =(Color)e.Value;</code></div>
<div class="line number403 index402 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">dv[e.ListSourceRowIndex][</code><code class="csharp string">"Color"</code><code class="csharp plain">] =Common.RGB_HEX(colorVal.ToArgb());</code></div>
<div class="line number404 index403 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number405 index404 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number406 index405 alt1">&nbsp;</div>
<div class="line number407 index406 alt2"><code class="csharp plain">四、关于 GridControl 验证示例</code></div>
<div class="line number408 index407 alt1">&nbsp;</div>
<div class="line number409 index408 alt2"><code class="csharp comments">/**/</code><code class="csharp plain">/// &lt;summary&gt;</code></div>
<div class="line number410 index409 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp color1">/// 初始化GridView，绑定数据</code></div>
<div class="line number411 index410 alt2"><code class="csharp color1">/// &lt;/summary&gt;</code></div>
<div class="line number412 index411 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp color1">/// &lt;param name="parentId"&gt;&lt;/param&gt;</code></div>
<div class="line number413 index412 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">GridViewBindData(</code><code class="csharp keyword">string</code>&nbsp;<code class="csharp plain">parentId)</code></div>
<div class="line number414 index413 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number415 index414 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns.Clear();</code></div>
<div class="line number416 index415 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.FDs= areaSetupActionHelper.getDsRegionByParentId(parentId);</code></div>
<div class="line number417 index416 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridCArea.DataSource =</code><code class="csharp keyword">this</code><code class="csharp plain">.FDs.Tables[0].DefaultView;</code></div>
<div class="line number418 index417 alt1">&nbsp;</div>
<div class="line number419 index418 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns[</code><code class="csharp string">"id"</code><code class="csharp plain">].VisibleIndex =-1;</code></div>
<div class="line number420 index419 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns[</code><code class="csharp string">"childCounts"</code><code class="csharp plain">].VisibleIndex= -1;</code></div>
<div class="line number421 index420 alt2">&nbsp;</div>
<div class="line number422 index421 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns[</code><code class="csharp string">"reg_id"</code><code class="csharp plain">].Caption =</code><code class="csharp string">"区划编号"</code><code class="csharp plain">;</code></div>
<div class="line number423 index422 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns[</code><code class="csharp string">"reg_name"</code><code class="csharp plain">].Caption =</code><code class="csharp string">"区划名称"</code><code class="csharp plain">;</code></div>
<div class="line number424 index423 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns[</code><code class="csharp string">"parent_id"</code><code class="csharp plain">].Caption =</code><code class="csharp string">"父区划编号"</code><code class="csharp plain">;</code></div>
<div class="line number425 index424 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns[</code><code class="csharp string">"reg_desc"</code><code class="csharp plain">].Caption =</code><code class="csharp string">"区划描述"</code><code class="csharp plain">;</code></div>
<div class="line number426 index425 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns[</code><code class="csharp string">"parent_id"</code><code class="csharp plain">].ImageIndex =1;</code></div>
<div class="line number427 index426 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns[</code><code class="csharp string">"reg_desc"</code><code class="csharp plain">].ImageIndex = 0;</code></div>
<div class="line number428 index427 alt1">&nbsp;</div>
<div class="line number429 index428 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RepositoryItemTextEdit textEditReg_Id = newRepositoryItemTextEdit();</code></div>
<div class="line number430 index429 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">textEditReg_Id.Mask.EditMask =parentId+</code><code class="csharp string">"\\d{2,3}"</code><code class="csharp plain">;</code></div>
<div class="line number431 index430 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">textEditReg_Id.Mask.MaskType =DevExpress.XtraEditors.Mask.MaskType.Regular;</code></div>
<div class="line number432 index431 alt1">&nbsp;</div>
<div class="line number433 index432 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns[</code><code class="csharp string">"reg_id"</code><code class="csharp plain">].ColumnEdit =textEditReg_Id;</code></div>
<div class="line number434 index433 alt1">&nbsp;</div>
<div class="line number435 index434 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns[</code><code class="csharp string">"reg_desc"</code><code class="csharp plain">].ColumnEdit= </code><code class="csharp keyword">new</code>&nbsp;<code class="csharp plain">RepositoryItemMemoExEdit();</code></div>
<div class="line number436 index435 alt1">&nbsp;</div>
<div class="line number437 index436 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">TreeListNode node =</code><code class="csharp keyword">this</code><code class="csharp plain">.treelArea.FocusedNode.ParentNode;</code></div>
<div class="line number438 index437 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">string</code>&nbsp;<code class="csharp plain">fid =node==</code><code class="csharp keyword">null</code><code class="csharp plain">?</code><code class="csharp string">"0"</code><code class="csharp plain">:node.GetValue(</code><code class="csharp string">"RegID"</code><code class="csharp plain">).ToString().Trim();</code></div>
<div class="line number439 index438 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">DataSet ds =areaSetupActionHelper.getDsRegionByParentId(fid);</code></div>
<div class="line number440 index439 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">RepositoryItemLookUpEdit lookUEParent_Id = newRepositoryItemLookUpEdit();</code></div>
<div class="line number441 index440 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">lookUEParent_Id.Columns.Add(newLookUpColumnInfo(</code><code class="csharp string">"reg_id"</code><code class="csharp plain">, 40, </code><code class="csharp string">"区划编号"</code><code class="csharp plain">));</code></div>
<div class="line number442 index441 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">lookUEParent_Id.Columns.Add(newLookUpColumnInfo(</code><code class="csharp string">"reg_name"</code><code class="csharp plain">, 40, </code><code class="csharp string">"区划名称"</code><code class="csharp plain">));</code></div>
<div class="line number443 index442 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">lookUEParent_Id.DataSource = ds.Tables[0].DefaultView;</code></div>
<div class="line number444 index443 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">lookUEParent_Id.ValueMember = </code><code class="csharp string">"reg_id"</code><code class="csharp plain">;</code></div>
<div class="line number445 index444 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">lookUEParent_Id.DisplayMember = </code><code class="csharp string">"reg_id"</code><code class="csharp plain">;</code></div>
<div class="line number446 index445 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns[</code><code class="csharp string">"parent_id"</code><code class="csharp plain">].ColumnEdit =lookUEParent_Id;</code></div>
<div class="line number447 index446 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number448 index447 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp comments">/**/</code><code class="csharp plain">/// &lt;summary&gt;</code></div>
<div class="line number449 index448 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp color1">/// gridView单元格验证的相关处理程序</code></div>
<div class="line number450 index449 alt1"><code class="csharp color1">/// &lt;/summary&gt;</code></div>
<div class="line number451 index450 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp color1">/// &lt;param name="sender"&gt;&lt;/param&gt;</code></div>
<div class="line number452 index451 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp color1">/// &lt;param name="e"&gt;&lt;/param&gt;</code></div>
<div class="line number453 index452 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gridView1_ValidatingEditor(objectsender, DevExpress.XtraEditors.Controls.BaseContainerValidateEditorEventArgs e)</code></div>
<div class="line number454 index453 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number455 index454 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(e.Valid == </code><code class="csharp keyword">false</code><code class="csharp plain">&amp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.FocusedColumn.FieldName ==</code><code class="csharp string">"reg_id"</code><code class="csharp plain">)</code></div>
<div class="line number456 index455 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number457 index456 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.ErrorText = </code><code class="csharp string">"区划编号不合法！\n应为父区划编号加2～3位数据组成！"</code><code class="csharp plain">;&nbsp;&nbsp; </code></div>
<div class="line number458 index457 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number459 index458 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.FocusedColumn.FieldName ==</code><code class="csharp string">"reg_name"</code><code class="csharp plain">)</code></div>
<div class="line number460 index459 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{&nbsp;&nbsp;&nbsp;&nbsp; </code></div>
<div class="line number461 index460 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Regex reg=</code><code class="csharp keyword">new</code>&nbsp;<code class="csharp plain">Regex(</code><code class="csharp string">@"[\u4e00-\u9fa5]{1,20}"</code><code class="csharp plain">);</code></div>
<div class="line number462 index461 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">Match m=reg.Match(e.Value.ToString().Trim());</code></div>
<div class="line number463 index462 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(m.Length != e.Value.ToString().Trim().Length)</code></div>
<div class="line number464 index463 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number465 index464 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.Valid = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div>
<div class="line number466 index465 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.ErrorText = </code><code class="csharp string">"区划名称应为汉字\n长度为1至20"</code><code class="csharp plain">;</code></div>
<div class="line number467 index466 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number468 index467 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number469 index468 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number470 index469 alt1">&nbsp;</div>
<div class="line number471 index470 alt2"><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gridView1_InvalidValueException(objectsender, InvalidValueExceptionEventArgs e)</code></div>
<div class="line number472 index471 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number473 index472 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(MyDialog.Alert(</code><code class="csharp string">"　您所填写的内容不符合规则\n　要放弃您刚才对此项所做的更改吗？"</code><code class="csharp plain">, </code><code class="csharp string">"您所编辑的内容不符合规则"</code><code class="csharp plain">, MessageBoxButtons.YesNo, MessageBoxIcon.Warning) ==DialogResult.Yes)</code></div>
<div class="line number474 index473 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number475 index474 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.ExceptionMode = ExceptionMode.Ignore;</code></div>
<div class="line number476 index475 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number477 index476 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number478 index477 alt1">&nbsp;</div>
<div class="line number479 index478 alt2"><code class="csharp comments">/**/</code><code class="csharp plain">/// &lt;summary&gt;</code></div>
<div class="line number480 index479 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp color1">/// gridView行验证的相关处理程序</code></div>
<div class="line number481 index480 alt2"><code class="csharp color1">/// &lt;/summary&gt;</code></div>
<div class="line number482 index481 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gridView1_ValidateRow(objectsender, DevExpress.XtraGrid.Views.Base.ValidateRowEventArgs e)</code></div>
<div class="line number483 index482 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number484 index483 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp keyword">string</code>&nbsp;<code class="csharp plain">regid = </code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.GetRowCellValue(e.RowHandle,</code><code class="csharp string">"reg_id"</code><code class="csharp plain">).ToString().Trim();</code></div>
<div class="line number485 index484 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp keyword">string</code>&nbsp;<code class="csharp plain">regName = </code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.GetRowCellValue(e.RowHandle,</code><code class="csharp string">"reg_name"</code><code class="csharp plain">).ToString().Trim();</code></div>
<div class="line number486 index485 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">( regid.Length &lt; 1)</code></div>
<div class="line number487 index486 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number488 index487 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.Valid = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div>
<div class="line number489 index488 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.SetColumnError(</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns[</code><code class="csharp string">"reg_id"</code><code class="csharp plain">],</code><code class="csharp string">"请填写区划编号!"</code><code class="csharp plain">,DevExpress.XtraEditors.DXErrorProvider.ErrorType.Default);</code></div>
<div class="line number490 index489 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp comments">// e.ErrorText = "区划名称不能为空!";</code></div>
<div class="line number491 index490 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number492 index491 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(regName.Length &lt; 1)</code></div>
<div class="line number493 index492 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number494 index493 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.Valid = </code><code class="csharp keyword">false</code><code class="csharp plain">;</code></div>
<div class="line number495 index494 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.SetColumnError(</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns[</code><code class="csharp string">"reg_name"</code><code class="csharp plain">],</code><code class="csharp string">"区划名称不能为空!"</code><code class="csharp plain">,DevExpress.XtraEditors.DXErrorProvider.ErrorType.Default);</code></div>
<div class="line number496 index495 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number497 index496 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number498 index497 alt1">&nbsp;</div>
<div class="line number499 index498 alt2"><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gridView1_InvalidRowException(</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">sender,DevExpress.XtraGrid.Views.Base.InvalidRowExceptionEventArgs e)</code></div>
<div class="line number500 index499 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number501 index500 alt2">&nbsp;</div>
<div class="line number502 index501 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(e.RowHandle &gt;= 0)</code></div>
<div class="line number503 index502 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number504 index503 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.GetRowCellValue(e.RowHandle,</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns[</code><code class="csharp string">"reg_id"</code><code class="csharp plain">]).ToString().Trim() == </code><code class="csharp string">""</code><code class="csharp plain">|| </code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.GetRowCellValue(e.RowHandle,</code><code class="csharp keyword">this</code><code class="csharp plain">.gridView1.Columns[</code><code class="csharp string">"reg_name"</code><code class="csharp plain">]).ToString().Trim() ==</code><code class="csharp string">""</code><code class="csharp plain">)</code></div>
<div class="line number505 index504 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number506 index505 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(MyDialog.Alert(</code><code class="csharp string">" 　您所填写的内容不符合规则\n　要放弃您刚才对此项所做的更改吗？"</code><code class="csharp plain">,</code><code class="csharp string">"您所编辑的内容不符合规则"</code><code class="csharp plain">, MessageBoxButtons.YesNo,MessageBoxIcon.Warning) == DialogResult.Yes)</code></div>
<div class="line number507 index506 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number508 index507 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.ExceptionMode = ExceptionMode.Ignore;</code></div>
<div class="line number509 index508 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number510 index509 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">else</code></div>
<div class="line number511 index510 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number512 index511 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.ExceptionMode = ExceptionMode.NoAction;</code></div>
<div class="line number513 index512 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number514 index513 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number515 index514 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number516 index515 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">else</code></div>
<div class="line number517 index516 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number518 index517 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">e.ExceptionMode = ExceptionMode.Ignore;</code></div>
<div class="line number519 index518 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number520 index519 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number521 index520 alt2">&nbsp;</div>
<div class="line number522 index521 alt1"><code class="csharp spaces">&nbsp;</code>&nbsp;</div>
<div class="line number523 index522 alt2">&nbsp;</div>
<div class="line number524 index523 alt1"><code class="csharp plain">关于XtraGrid的使用（GridControl小结）来源：51编程网发布时间：2010-04-19Hits：146</code></div>
<div class="line number525 index524 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">DevExpress XtraGrid的使用（AspxGridControl小结） 收藏 </code></div>
<div class="line number526 index525 alt1">&nbsp;</div>
<div class="line number527 index526 alt2"><code class="csharp plain">自定义焦点行的方法： gridView_bcode.FocusedRowHandle = focuseRowInt; </code><code class="csharp comments">//通过设置GridView 的FocusedRowHandle属性</code></div>
<div class="line number528 index527 alt1"><code class="csharp spaces">&nbsp;</code>&nbsp;</div>
<div class="line number529 index528 alt2"><code class="csharp plain">view plaincopy to clipboardprint?</code></div>
<div class="line number530 index529 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp comments">//获取焦点行任意单元格的数据&nbsp;&nbsp;&nbsp; </code></div>
<div class="line number531 index530 alt2"><code class="csharp plain">ColumnView cv = (ColumnView)gridControl_Gongzi.FocusedView;</code><code class="csharp comments">//重新获取此ID 否则无法从表头连删获取不到id&nbsp;&nbsp; </code></div>
<div class="line number532 index531 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code>&nbsp;<code class="csharp plain">focusedhandle = cv.FocusedRowHandle;&nbsp;&nbsp; </code></div>
<div class="line number533 index532 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">rowIdObj = gridView1.GetRowCellValue(focusedhandle,</code><code class="csharp string">"id"</code><code class="csharp plain">);&nbsp;&nbsp; </code></div>
<div class="line number534 index533 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(DBNull.Value != rowIdObj)&nbsp;&nbsp; </code></div>
<div class="line number535 index534 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{&nbsp;&nbsp; </code></div>
<div class="line number536 index535 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">FocusedRow_id = Convert.ToInt32(rowIdObj);&nbsp;&nbsp; </code></div>
<div class="line number537 index536 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}&nbsp; </code></div>
<div class="line number538 index537 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp comments">//获取焦点行任意单元格的数据 </code></div>
<div class="line number539 index538 alt2"><code class="csharp plain">ColumnView cv = (ColumnView)gridControl_Gongzi.FocusedView;</code><code class="csharp comments">//重新获取此ID 否则无法从表头连删获取不到id</code></div>
<div class="line number540 index539 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code>&nbsp;<code class="csharp plain">focusedhandle = cv.FocusedRowHandle;</code></div>
<div class="line number541 index540 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">rowIdObj = gridView1.GetRowCellValue(focusedhandle, </code><code class="csharp string">"id"</code><code class="csharp plain">);</code></div>
<div class="line number542 index541 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(DBNull.Value != rowIdObj)</code></div>
<div class="line number543 index542 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number544 index543 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">FocusedRow_id = Convert.ToInt32(rowIdObj);</code></div>
<div class="line number545 index544 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number546 index545 alt1"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">view plaincopy to clipboardprint?</code></div>
<div class="line number547 index546 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp comments">//当数据发生变化时执行&nbsp;&nbsp;&nbsp; </code></div>
<div class="line number548 index547 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gridView1_CellValueChanged(</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">sender,CellValueChangedEventArgs e)&nbsp;&nbsp; </code></div>
<div class="line number549 index548 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{&nbsp;&nbsp; </code></div>
<div class="line number550 index549 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code>&nbsp;<code class="csharp plain">intRowHandle =e.RowHandle;&nbsp;&nbsp; </code></div>
<div class="line number551 index550 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">FocusedRow_bumen =Convert.ToString(gridView1.GetRowCellValue(intRowHandle,</code><code class="csharp string">"bumen"</code><code class="csharp plain">));&nbsp;&nbsp; </code></div>
<div class="line number552 index551 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">FocusedRow_xingming =Convert.ToString(gridView1.GetRowCellValue(intRowHandle,</code><code class="csharp string">"xingming"</code><code class="csharp plain">));&nbsp;&nbsp; </code></div>
<div class="line number553 index552 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp comments">//FocusedRow_jibengongzi =Convert.ToDecimal(gridView1.GetRowCellValue(intRowHandle,"jibengongzi"));&nbsp;&nbsp; </code></div>
<div class="line number554 index553 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">rowJibengongziObj =gridView1.GetRowCellValue(intRowHandle, </code><code class="csharp string">"jibengongzi"</code><code class="csharp plain">);&nbsp;&nbsp; </code></div>
<div class="line number555 index554 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(DBNull.Value !=rowJibengongziObj)&nbsp;&nbsp; </code></div>
<div class="line number556 index555 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{&nbsp;&nbsp; </code></div>
<div class="line number557 index556 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">FocusedRow_jibengongzi = Convert.ToDecimal(rowJibengongziObj);&nbsp;&nbsp; </code></div>
<div class="line number558 index557 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}&nbsp;&nbsp; </code></div>
<div class="line number559 index558 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}&nbsp; </code></div>
<div class="line number560 index559 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp comments">//当数据发生变化时执行 </code></div>
<div class="line number561 index560 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp plain">voidgridView1_CellValueChanged(</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">sender, CellValueChangedEventArgs e)</code></div>
<div class="line number562 index561 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number563 index562 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code>&nbsp;<code class="csharp plain">intRowHandle= e.RowHandle;</code></div>
<div class="line number564 index563 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">FocusedRow_bumen = Convert.ToString(gridView1.GetRowCellValue(intRowHandle,</code><code class="csharp string">"bumen"</code><code class="csharp plain">));</code></div>
<div class="line number565 index564 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">FocusedRow_xingming = Convert.ToString(gridView1.GetRowCellValue(intRowHandle,</code><code class="csharp string">"xingming"</code><code class="csharp plain">));</code></div>
<div class="line number566 index565 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp comments">//FocusedRow_jibengongzi =Convert.ToDecimal(gridView1.GetRowCellValue(intRowHandle,"jibengongzi"));</code></div>
<div class="line number567 index566 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">objectrowJibengongziObj = gridView1.GetRowCellValue(intRowHandle,</code><code class="csharp string">"jibengongzi"</code><code class="csharp plain">);</code></div>
<div class="line number568 index567 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code><code class="csharp plain">(DBNull.Value != rowJibengongziObj)</code></div>
<div class="line number569 index568 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number570 index569 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">FocusedRow_jibengongzi = Convert.ToDecimal(rowJibengongziObj);</code></div>
<div class="line number571 index570 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number572 index571 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">} view plaincopy toclipboardprint?</code></div>
<div class="line number573 index572 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp comments">//设置焦点行的焦点单元格的位置&nbsp;&nbsp; </code></div>
<div class="line number574 index573 alt1"><code class="csharp plain">ColumnView view = (ColumnView)gridControl_Gongzi.FocusedView;&nbsp;&nbsp; </code></div>
<div class="line number575 index574 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">view.FocusedColumn = view.Columns[</code><code class="csharp string">"bumen"</code><code class="csharp plain">];&nbsp; </code></div>
<div class="line number576 index575 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp comments">//设置焦点行的焦点单元格的位置</code></div>
<div class="line number577 index576 alt2"><code class="csharp plain">ColumnView view = (ColumnView)gridControl_Gongzi.FocusedView;</code></div>
<div class="line number578 index577 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">view.FocusedColumn = view.Columns[</code><code class="csharp string">"bumen"</code><code class="csharp plain">]; view plaincopy toclipboardprint?</code></div>
<div class="line number579 index578 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp comments">//当焦点行发生改变时执行 获取选中焦点行id&nbsp;&nbsp; </code></div>
<div class="line number580 index579 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gridView1_FocusedRowChanged(</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgse)&nbsp;&nbsp; </code></div>
<div class="line number581 index580 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{&nbsp;&nbsp; </code></div>
<div class="line number582 index581 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">int</code>&nbsp;<code class="csharp plain">intRowHandle =e.FocusedRowHandle;&nbsp;&nbsp; </code></div>
<div class="line number583 index582 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>
<div class="line number584 index583 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">rowIdObj =gridView1.GetRowCellValue(intRowHandle, </code><code class="csharp string">"id"</code><code class="csharp plain">);&nbsp;&nbsp; </code></div>
<div class="line number585 index584 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>
<div class="line number586 index585 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(DBNull.Value!= rowIdObj)</code><code class="csharp comments">//做个判断否则获取不到id后报错&nbsp; </code></div>
<div class="line number587 index586 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{&nbsp;&nbsp; </code></div>
<div class="line number588 index587 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">FocusedRow_id = Convert.ToInt32(rowIdObj);&nbsp;&nbsp; </code></div>
<div class="line number589 index588 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}&nbsp;&nbsp; </code></div>
<div class="line number590 index589 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}&nbsp; </code></div>
<div class="line number591 index590 alt2"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp comments">//当焦点行发生改变时执行 获取选中焦点行id</code></div>
<div class="line number592 index591 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gridView1_FocusedRowChanged(</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">sender,DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)</code></div>
<div class="line number593 index592 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number594 index593 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">intintRowHandle = e.FocusedRowHandle;</code></div>
<div class="line number595 index594 alt2"><code class="csharp spaces">&nbsp;&nbsp;</code>&nbsp;</div>
<div class="line number596 index595 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">objectrowIdObj = gridView1.GetRowCellValue(intRowHandle, </code><code class="csharp string">"id"</code><code class="csharp plain">);</code></div>
<div class="line number597 index596 alt2"><code class="csharp spaces">&nbsp;&nbsp;</code>&nbsp;</div>
<div class="line number598 index597 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code><code class="csharp plain">(DBNull.Value != rowIdObj)</code><code class="csharp comments">//做个判断否则获取不到id后报错</code></div>
<div class="line number599 index598 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{</code></div>
<div class="line number600 index599 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">FocusedRow_id = Convert.ToInt32(rowIdObj);</code></div>
<div class="line number601 index600 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}</code></div>
<div class="line number602 index601 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">}&nbsp;&nbsp; </code></div>
<div class="line number603 index602 alt2"><code class="csharp spaces">&nbsp;&nbsp;</code>&nbsp;</div>
<div class="line number604 index603 alt1"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">view plaincopy to clipboardprint?</code></div>
<div class="line number605 index604 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp comments">//焦点行的FocusedHandle为：&nbsp; </code></div>
<div class="line number606 index605 alt1"><code class="csharp spaces">&nbsp;&nbsp;</code><code class="csharp plain">FocuseRow_Handle = -999998;&nbsp;&nbsp; </code></div>
<div class="line number607 index606 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp comments">//获取焦点行的handle&nbsp;&nbsp; </code></div>
<div class="line number608 index607 alt1"><code class="csharp spaces">&nbsp;</code><code class="csharp plain">ColumnView newview = (ColumnView)gridControl_Gongzi.FocusedView;&nbsp;&nbsp; </code></div>
<div class="line number609 index608 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>
<div class="line number610 index609 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">FocuseRow_Handle = newview.FocusedRowHandle;&nbsp;&nbsp; </code></div>
<div class="line number611 index610 alt2"><code class="csharp spaces">&nbsp;</code><code class="csharp comments">//回车添加新行&nbsp;&nbsp; </code></div>
<div class="line number612 index611 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">private</code>&nbsp;<code class="csharp keyword">void</code>&nbsp;<code class="csharp plain">gridView1_KeyPress(</code><code class="csharp keyword">object</code>&nbsp;<code class="csharp plain">sender, KeyPressEventArgse)&nbsp;&nbsp; </code></div>
<div class="line number613 index612 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>
<div class="line number614 index613 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{&nbsp;&nbsp; </code></div>
<div class="line number615 index614 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code><code class="csharp plain">(e.KeyChar == 13)&nbsp;&nbsp; </code></div>
<div class="line number616 index615 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{&nbsp;&nbsp; </code></div>
<div class="line number617 index616 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">ColumnView view = (ColumnView)gridControl_Gongzi.FocusedView;&nbsp;&nbsp; </code></div>
<div class="line number618 index617 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code><code class="csharp plain">(view.IsLastRow)&nbsp;&nbsp; </code></div>
<div class="line number619 index618 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{&nbsp;&nbsp; </code></div>
<div class="line number620 index619 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp keyword">if</code>&nbsp;<code class="csharp plain">(FocuseRow_Handle == 0)&nbsp;&nbsp; </code></div>
<div class="line number621 index620 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">{&nbsp;&nbsp; </code></div>
<div class="line number622 index621 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">gridView1.AddNewRow();&nbsp;&nbsp; </code></div>
<div class="line number623 index622 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>
<div class="line number624 index623 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">ColumnView newview = (ColumnView)gridControl_Gongzi.FocusedView;&nbsp;&nbsp; </code></div>
<div class="line number625 index624 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>
<div class="line number626 index625 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">newview.FocusedColumn = newview.Columns[</code><code class="csharp string">"bumen"</code><code class="csharp plain">];</code><code class="csharp comments">//定位焦点网格的位置&nbsp;&nbsp; </code></div>
<div class="line number627 index626 alt2"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>
<div class="line number628 index627 alt1"><code class="csharp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="csharp plain">FocuseRow_Handle = newview.FocusedRowHandle;</code><code class="csharp comments">//获取新焦点行的FocuseRowHandle并初始化全局变量FocuseRow_Handle供保存操作时判断是update还是insert&nbsp;</code></div>]]></description></item><item><title>C# Enum,Int,String的互相转换</title><link>http://www.cnblogs.com/eastson/archive/2014/06/28/3813028.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 28 Jun 2014 01:49:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/06/28/3813028.html</guid><description><![CDATA[<p>&nbsp;Enum为枚举提供基类，其<strong>基础类型</strong>可以是除 Char 外的任何整型。如果没有显式声明基础类型，则使用Int32。编程语言通常提供语法来声明由一组已命名的常数和它们的值组成的枚举。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;<strong>注意：枚举类型的基类型是除 Char 外的任何整型，所以枚举类型的值是整型值。</strong></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Enum&nbsp;提供一些实用的静态方法：</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;(1)比较枚举类的实例的方法</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;(2)将实例的值转换为其字符串表示形式的方法</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;(3)将数字的字符串表示形式转换为此类的实例的方法</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;(4)创建指定枚举和值的实例的方法。</p>
<p>&nbsp;</p>
<p>举例：enum Colors { Red, Green, Blue, Yellow };</p>
<p>&nbsp;</p>
<p><strong>Enum--&gt;String</strong></p>
<p>(1)利用Object.ToString()方法：如Colors.Green.ToString()的值是"Green"字符串；</p>
<p>(2)利用Enum的静态方法GetName与GetNames：</p>
<p>&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;<a href="http://blog.csdn.net/pzhtpf/article/details/9419191">string</a>&nbsp;GetName(<a href="http://blog.csdn.net/pzhtpf/article/details/9419191">Type</a>&nbsp;enumType,<a href="http://blog.csdn.net/pzhtpf/article/details/9419191">Object</a>&nbsp;value)</p>
<p>&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;<a href="http://blog.csdn.net/pzhtpf/article/details/9419191">string</a>[]&nbsp;GetNames(<a href="http://blog.csdn.net/pzhtpf/article/details/9419191">Type</a>&nbsp;enumType)</p>
<p>&nbsp;&nbsp;&nbsp;例如：Enum.GetName(typeof(Colors),3))与Enum.GetName(typeof(Colors), Colors.Blue))的值都是"Blue"</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Enum.GetNames(typeof(Colors))将返回枚举字符串数组。</p>
<p>&nbsp;</p>
<p><strong>String--&gt;Enum</strong></p>
<p>(1)利用Enum的静态方法Parse：</p>
<p>&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;<a href="http://blog.csdn.net/pzhtpf/article/details/9419191">Object</a>&nbsp;Parse(<a href="http://blog.csdn.net/pzhtpf/article/details/9419191">Type</a>&nbsp;enumType,<a href="http://blog.csdn.net/pzhtpf/article/details/9419191">string</a>&nbsp;value)</p>
<p>&nbsp;&nbsp;&nbsp;例如：(Colors)Enum.Parse(typeof(Colors),&nbsp;"Red")</p>
<p>&nbsp;</p>
<p><strong>Enum--&gt;Int</strong></p>
<p>(1)因为枚举的基类型是除 Char 外的整型，所以可以进行强制转换。</p>
<p>&nbsp;&nbsp;&nbsp;例如：(int)Colors.Red, (byte)Colors.Green</p>
<p>&nbsp;</p>
<p><strong>Int--&gt;Enum</strong></p>
<p>(1)可以强制转换将整型转换成枚举类型。</p>
<p>&nbsp;&nbsp;&nbsp;例如：Colors color = (Colors)2 ，那么color即为Colors.Blue</p>
<p>(2)利用Enum的静态方法ToObject。</p>
<p>&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;<a href="http://blog.csdn.net/pzhtpf/article/details/9419191">Object</a>&nbsp;ToObject(<a href="http://blog.csdn.net/pzhtpf/article/details/9419191">Type</a>&nbsp;enumType,<a href="http://blog.csdn.net/pzhtpf/article/details/9419191">int</a>&nbsp;value)</p>
<p>&nbsp;&nbsp;&nbsp;例如：Colors color = (Colors)Enum.ToObject(typeof(Colors), 2)，那么color即为Colors.Blue</p>
<p>&nbsp;</p>
<p><strong>判断某个整型是否定义在枚举中的方法：Enum.IsDefined</strong></p>
<p dir="ltr">public&nbsp;static&nbsp;<a href="http://blog.csdn.net/pzhtpf/article/details/9419191">bool</a>&nbsp;IsDefined(<a href="http://blog.csdn.net/pzhtpf/article/details/9419191">Type</a>&nbsp;enumType,<a href="http://blog.csdn.net/pzhtpf/article/details/9419191">Object</a>&nbsp;value)</p>
<p>例如：Enum.IsDefined(typeof(Colors), n))</p>]]></description></item><item><title>在C#中判断某个类是否实现了某个接口</title><link>http://www.cnblogs.com/eastson/archive/2014/06/28/3813024.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 28 Jun 2014 01:46:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/06/28/3813024.html</guid><description><![CDATA[<p class="first-para">有时我们需要判断某个类是否实现了某个接口（Interface），比如在使用反射机制（Reflection）来查找特定类型的时候。</p>
<p>简单来说，可以使用Type.IsAssignableFrom方法：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">typeof</span><span style="color: #000000;">(IFoo).IsAssignableFrom(bar.GetType());
</span><span style="color: #0000ff;">typeof</span>(IFoo).IsAssignableFrom(<span style="color: #0000ff;">typeof</span>(BarClass));</pre>
</div>
<p>从字面意思可以看出，IsAssignableFrom表示BarClass类型能否赋值给IFoo接口，所以它返回true的条件就是BarClass直接或间接实现了IFoo接口。Type类型中还有一个方法是IsSubclassOf，它只能用于判断类的继承关系，比如[csharp light="true"]typeof(FooClass).IsSubclassOf(typeof(BarClass)) == true[/csharp]表示FooClass是继承自BarClass。</p>
<p>当然IsAssignableFrom也可以用来判断继承关系。<br />于是，对于以下的代码：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">interface</span> I { <span style="color: #008000;">/*</span><span style="color: #008000;"> ... </span><span style="color: #008000;">*/</span><span style="color: #000000;"> }
</span><span style="color: #0000ff;">class</span> A : I { <span style="color: #008000;">/*</span><span style="color: #008000;"> ... </span><span style="color: #008000;">*/</span><span style="color: #000000;"> }
</span><span style="color: #0000ff;">class</span> B : A { <span style="color: #008000;">/*</span><span style="color: #008000;"> ... </span><span style="color: #008000;">*/</span> }</pre>
</div>
<p>IsSubclassOf和IsAssignableFrom的返回值为：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">typeof</span>(A).isAssignableFrom(<span style="color: #0000ff;">typeof</span>(I)); <span style="color: #008000;">//</span><span style="color: #008000;"> false</span>
<span style="color: #0000ff;">typeof</span>(A).isSubClassOf(<span style="color: #0000ff;">typeof</span>(I)); <span style="color: #008000;">//</span><span style="color: #008000;"> false</span>
 
<span style="color: #0000ff;">typeof</span>(I).isAssignableFrom(<span style="color: #0000ff;">typeof</span>(A)); <span style="color: #008000;">//</span><span style="color: #008000;"> true</span>
<span style="color: #0000ff;">typeof</span>(I).isAssignableFrom(<span style="color: #0000ff;">typeof</span>(B)); <span style="color: #008000;">//</span><span style="color: #008000;"> true</span>
<span style="color: #0000ff;">typeof</span>(B).isSubClassOf(<span style="color: #0000ff;">typeof</span>(I)); <span style="color: #008000;">//</span><span style="color: #008000;"> false</span>
 
<span style="color: #0000ff;">typeof</span>(A).isAssignableFrom(<span style="color: #0000ff;">typeof</span>(A)); <span style="color: #008000;">//</span><span style="color: #008000;"> true</span>
<span style="color: #0000ff;">typeof</span>(A).isSubClassof(<span style="color: #0000ff;">typeof</span>(A)); <span style="color: #008000;">//</span><span style="color: #008000;"> false</span>
 
<span style="color: #0000ff;">typeof</span>(A).isAssignableFrom(<span style="color: #0000ff;">typeof</span>(B)); <span style="color: #008000;">//</span><span style="color: #008000;"> true</span>
<span style="color: #0000ff;">typeof</span>(A).isSubClassof(<span style="color: #0000ff;">typeof</span>(B)); <span style="color: #008000;">//</span><span style="color: #008000;"> false</span>
 
<span style="color: #0000ff;">typeof</span>(B).isAssignableFrom(<span style="color: #0000ff;">typeof</span>(A)); <span style="color: #008000;">//</span><span style="color: #008000;"> false</span>
<span style="color: #0000ff;">typeof</span>(B).isSubClassof(<span style="color: #0000ff;">typeof</span>(A)); <span style="color: #008000;">//</span><span style="color: #008000;"> true</span></pre>
</div>]]></description></item><item><title>C#：确保绑定到同一数据源的多个控件保持同步</title><link>http://www.cnblogs.com/eastson/archive/2014/06/27/3811239.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 27 Jun 2014 01:04:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/06/27/3811239.html</guid><description><![CDATA[<p>下面的代码示例演示如何使用&nbsp;<a id="ctl00_ContentPlaceHolder1_ctl45_ctl00_ctl00" href="http://technet.microsoft.com/zh-cn/magazine/system.windows.forms.bindingsource(VS.90).aspx">BindingSource</a>&nbsp;组件，将三个控件（两个文本框控件和一个&nbsp;<a id="ctl00_ContentPlaceHolder1_ctl45_ctl00_ctl01" href="http://technet.microsoft.com/zh-cn/magazine/system.windows.forms.datagridview(VS.90).aspx">DataGridView</a>&nbsp;控件）绑定到&nbsp;<a id="ctl00_ContentPlaceHolder1_ctl45_ctl00_ctl02" href="http://technet.microsoft.com/zh-cn/magazine/system.data.dataset(VS.90).aspx">DataSet</a>&nbsp;中的同一列。该示例演示如何处理<a id="ctl00_ContentPlaceHolder1_ctl45_ctl00_ctl03" href="http://technet.microsoft.com/zh-cn/magazine/system.windows.forms.bindingsource.bindingcomplete(VS.90).aspx">BindingComplete</a>&nbsp;事件，并确保当一个文本框的文本值更改时，会用正确的值更新其他文本框和&nbsp;<a id="ctl00_ContentPlaceHolder1_ctl45_ctl00_ctl04" href="http://technet.microsoft.com/zh-cn/magazine/system.windows.forms.datagridview(VS.90).aspx">DataGridView</a>&nbsp;控件。</p>
<p>该示例使用&nbsp;<a id="ctl00_ContentPlaceHolder1_ctl45_ctl00_ctl05" href="http://technet.microsoft.com/zh-cn/magazine/system.windows.forms.bindingsource(VS.90).aspx">BindingSource</a>&nbsp;来绑定数据源和控件。或者，可以直接将控件绑定到数据源，并从窗体的&nbsp;<a id="ctl00_ContentPlaceHolder1_ctl45_ctl00_ctl06" href="http://technet.microsoft.com/zh-cn/magazine/system.windows.forms.control.bindingcontext(VS.90).aspx">BindingContext</a>&nbsp;检索用于绑定的&nbsp;<a id="ctl00_ContentPlaceHolder1_ctl45_ctl00_ctl07" href="http://technet.microsoft.com/zh-cn/magazine/system.windows.forms.bindingmanagerbase(VS.90).aspx">BindingManagerBase</a>，然后为<a id="ctl00_ContentPlaceHolder1_ctl45_ctl00_ctl08" href="http://technet.microsoft.com/zh-cn/magazine/system.windows.forms.bindingmanagerbase(VS.90).aspx">BindingManagerBase</a>&nbsp;处理&nbsp;<a id="ctl00_ContentPlaceHolder1_ctl45_ctl00_ctl09" href="http://technet.microsoft.com/zh-cn/magazine/system.windows.forms.bindingmanagerbase.bindingcomplete(VS.90).aspx">BindingComplete</a>&nbsp;事件。有关如何进行此操作的示例，请参见&nbsp;<a id="ctl00_ContentPlaceHolder1_ctl45_ctl00_ctl10" href="http://technet.microsoft.com/zh-cn/magazine/system.windows.forms.bindingmanagerbase(VS.90).aspx">BindingManagerBase</a>&nbsp;的&nbsp;<a id="ctl00_ContentPlaceHolder1_ctl45_ctl00_ctl11" href="http://technet.microsoft.com/zh-cn/magazine/system.windows.forms.bindingmanagerbase.bindingcomplete(VS.90).aspx">BindingComplete</a>&nbsp;事件的相关帮助页。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Declare the controls to be used.</span>
<span style="color: #0000ff;">private</span><span style="color: #000000;"> BindingSource bindingSource1;
</span><span style="color: #0000ff;">private</span><span style="color: #000000;"> TextBox textBox1;
</span><span style="color: #0000ff;">private</span><span style="color: #000000;"> TextBox textBox2;
</span><span style="color: #0000ff;">private</span><span style="color: #000000;"> DataGridView dataGridView1;

</span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> InitializeControlsAndDataSource()
{
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Initialize the controls and set location, size and 
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> other basic properties.</span>
    <span style="color: #0000ff;">this</span>.dataGridView1 = <span style="color: #0000ff;">new</span><span style="color: #000000;"> DataGridView();
    </span><span style="color: #0000ff;">this</span>.bindingSource1 = <span style="color: #0000ff;">new</span><span style="color: #000000;"> BindingSource();
    </span><span style="color: #0000ff;">this</span>.textBox1 = <span style="color: #0000ff;">new</span><span style="color: #000000;"> TextBox();
    </span><span style="color: #0000ff;">this</span>.textBox2 = <span style="color: #0000ff;">new</span><span style="color: #000000;"> TextBox();
    </span><span style="color: #0000ff;">this</span>.dataGridView1.ColumnHeadersHeightSizeMode =<span style="color: #000000;">
        DataGridViewColumnHeadersHeightSizeMode.AutoSize;
    </span><span style="color: #0000ff;">this</span>.dataGridView1.Dock =<span style="color: #000000;"> DockStyle.Top;
    </span><span style="color: #0000ff;">this</span>.dataGridView1.Location = <span style="color: #0000ff;">new</span> Point(<span style="color: #800080;">0</span>, <span style="color: #800080;">0</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">this</span>.dataGridView1.Size = <span style="color: #0000ff;">new</span> Size(<span style="color: #800080;">292</span>, <span style="color: #800080;">150</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">this</span>.textBox1.Location = <span style="color: #0000ff;">new</span> Point(<span style="color: #800080;">132</span>, <span style="color: #800080;">156</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">this</span>.textBox1.Size = <span style="color: #0000ff;">new</span> Size(<span style="color: #800080;">100</span>, <span style="color: #800080;">20</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">this</span>.textBox2.Location = <span style="color: #0000ff;">new</span> Point(<span style="color: #800080;">12</span>, <span style="color: #800080;">156</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">this</span>.textBox2.Size = <span style="color: #0000ff;">new</span> Size(<span style="color: #800080;">100</span>, <span style="color: #800080;">20</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">this</span>.ClientSize = <span style="color: #0000ff;">new</span> Size(<span style="color: #800080;">292</span>, <span style="color: #800080;">266</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">this</span>.Controls.Add(<span style="color: #0000ff;">this</span><span style="color: #000000;">.textBox2);
    </span><span style="color: #0000ff;">this</span>.Controls.Add(<span style="color: #0000ff;">this</span><span style="color: #000000;">.textBox1);
    </span><span style="color: #0000ff;">this</span>.Controls.Add(<span style="color: #0000ff;">this</span><span style="color: #000000;">.dataGridView1);

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Declare the DataSet and add a table and column.</span>
    DataSet set1 = <span style="color: #0000ff;">new</span><span style="color: #000000;"> DataSet();
    set1.Tables.Add(</span><span style="color: #800000;">"</span><span style="color: #800000;">Menu</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    set1.Tables[</span><span style="color: #800080;">0</span>].Columns.Add(<span style="color: #800000;">"</span><span style="color: #800000;">Beverages</span><span style="color: #800000;">"</span><span style="color: #000000;">);

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Add some rows to the table.</span>
    set1.Tables[<span style="color: #800080;">0</span>].Rows.Add(<span style="color: #800000;">"</span><span style="color: #800000;">coffee</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    set1.Tables[</span><span style="color: #800080;">0</span>].Rows.Add(<span style="color: #800000;">"</span><span style="color: #800000;">tea</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    set1.Tables[</span><span style="color: #800080;">0</span>].Rows.Add(<span style="color: #800000;">"</span><span style="color: #800000;">hot chocolate</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    set1.Tables[</span><span style="color: #800080;">0</span>].Rows.Add(<span style="color: #800000;">"</span><span style="color: #800000;">milk</span><span style="color: #800000;">"</span><span style="color: #000000;">);
    set1.Tables[</span><span style="color: #800080;">0</span>].Rows.Add(<span style="color: #800000;">"</span><span style="color: #800000;">orange juice</span><span style="color: #800000;">"</span><span style="color: #000000;">);

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Set the data source to the DataSet.</span>
    bindingSource1.DataSource =<span style="color: #000000;"> set1;

    </span><span style="color: #008000;">//</span><span style="color: #008000;">Set the DataMember to the Menu table.</span>
    bindingSource1.DataMember = <span style="color: #800000;">"</span><span style="color: #800000;">Menu</span><span style="color: #800000;">"</span><span style="color: #000000;">;

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Add the control data bindings.</span>
    dataGridView1.DataSource =<span style="color: #000000;"> bindingSource1;
    textBox1.DataBindings.Add(</span><span style="color: #800000;">"</span><span style="color: #800000;">Text</span><span style="color: #800000;">"</span><span style="color: #000000;">, bindingSource1, 
        </span><span style="color: #800000;">"</span><span style="color: #800000;">Beverages</span><span style="color: #800000;">"</span>, <span style="color: #0000ff;">true</span><span style="color: #000000;">, DataSourceUpdateMode.OnPropertyChanged);
    textBox2.DataBindings.Add(</span><span style="color: #800000;">"</span><span style="color: #800000;">Text</span><span style="color: #800000;">"</span><span style="color: #000000;">, bindingSource1, 
        </span><span style="color: #800000;">"</span><span style="color: #800000;">Beverages</span><span style="color: #800000;">"</span>, <span style="color: #0000ff;">true</span><span style="color: #000000;">, DataSourceUpdateMode.OnPropertyChanged);
    bindingSource1.BindingComplete </span>+= 
        <span style="color: #0000ff;">new</span><span style="color: #000000;"> BindingCompleteEventHandler(bindingSource1_BindingComplete);
}

</span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span> bindingSource1_BindingComplete(<span style="color: #0000ff;">object</span><span style="color: #000000;"> sender, BindingCompleteEventArgs e)
{
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Check if the data source has been updated, and that no error has occured.</span>
    <span style="color: #0000ff;">if</span> (e.BindingCompleteContext ==<span style="color: #000000;"> 
        BindingCompleteContext.DataSourceUpdate </span>&amp;&amp; e.Exception == <span style="color: #0000ff;">null</span><span style="color: #000000;">)

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> If not, end the current edit.</span>
<span style="color: #000000;">        e.Binding.BindingManagerBase.EndCurrentEdit();
}</span></pre>
</div>]]></description></item><item><title>Visual Studio安装卸载模板</title><link>http://www.cnblogs.com/eastson/archive/2014/06/20/3798870.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 20 Jun 2014 03:03:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/06/20/3798870.html</guid><description><![CDATA[<p>Visual Studio安装卸载模板</p>
<p>Visual Studio中有两种类型的模板：项目模板和项模板</p>
<p>一、已安装模板：</p>
<p>默认情况下，与产品一起安装的模板位于以下位置：</p>
<p>①\&lt;Visual Studio 安装目录&gt;\Common7\IDE\ItemTemplates\语言\</p>
<p>②\&lt;Visual Studio 安装目录&gt;\Common7\IDE\ProjectTemplates\语言\</p>
<p>例：C:\Program Files\Microsoft Visual Studio 9.0\Common7\IDE\ItemTemplates\</p>
<p>二、自定义模板<br />默认情况下，自定义模板位于以下位置：</p>
<p>①\My Documents\Visual Studio 2008\Templates\ProjectTemplates\语言\</p>
<p>②\My Documents\Visual Studio 2008\Templates\ItemTemplates\语言\</p>
<p>例 C:\Documents and Settings\UserName\My Documents\Visual Studio 2008\ProjectTemplates\Visual C#\</p>
<p>三、安装或卸载模板（重置Visual Studio 模板）命令<br />①、如要安装一个新的模板，请将准备好的模板放到相应目录。<br />②、如要删除一个旧的模板，请将其在对应目录删除掉。</p>
<p>然后执行以下命令：</p>
<p>1.关闭 Visual Studio 的所有实例。</p>
<p>2.在&ldquo;开始&rdquo;菜单上单击&ldquo;运行&rdquo;，键入&ldquo;cmd&rdquo;，再单击&ldquo;确定&rdquo;。</p>
<p>3.在命令提示符下，定位到包含 devenv.exe 的目录，然后键入&ldquo;devenv /setup&rdquo;。（执行速度很快，无任何反应）</p>
<p>4.（第3步执行完后需要等待几分钟时间，或者重启电脑后）再次运行 Visual Studio，就可以发现你的模板已经安装上或者卸载掉了</p>]]></description></item><item><title>C#：Use Form as Subform</title><link>http://www.cnblogs.com/eastson/archive/2014/06/20/3798807.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 20 Jun 2014 02:35:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/06/20/3798807.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #0000ff;">static</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> SubFormExtensions
{
    </span><span style="color: #0000ff;">internal</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">bool</span> AttachTo(<span style="color: #0000ff;">this</span><span style="color: #000000;"> Form subForm, Panel panel)
    {
        </span><span style="color: #0000ff;">if</span> (panel == <span style="color: #0000ff;">null</span> || subForm == <span style="color: #0000ff;">null</span>) <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
        subForm.FormBorderStyle </span>=<span style="color: #000000;"> FormBorderStyle.None;
        subForm.TopLevel </span>= <span style="color: #0000ff;">false</span><span style="color: #000000;">;
        subForm.ShowInTaskbar </span>= <span style="color: #0000ff;">false</span><span style="color: #000000;">;
        subForm.Show();
        subForm.Dock </span>=<span style="color: #000000;"> DockStyle.Fill;
        panel.Controls.Add(subForm);
    }
}</span></pre>
</div>]]></description></item><item><title>C#：设置焦点在最小的TabIndex控件上</title><link>http://www.cnblogs.com/eastson/archive/2014/06/19/3796486.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 19 Jun 2014 06:26:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/06/19/3796486.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> FocusFirstTabIndex(Control container)
{
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> init search result varialble</span>
    Control searchResult = <span style="color: #0000ff;">null</span><span style="color: #000000;">;

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> find the control with the lowest tab index</span>
    <span style="color: #0000ff;">foreach</span> (Control control <span style="color: #0000ff;">in</span><span style="color: #000000;"> container.Controls)
    {
        </span><span style="color: #0000ff;">if</span> (control.CanFocus &amp;&amp; (searchResult == <span style="color: #0000ff;">null</span> || control.TabIndex &lt;<span style="color: #000000;"> searchResult.TabIndex))
        {
            searchResult </span>=<span style="color: #000000;"> control;
        }
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> check if anything searchResult</span>
    <span style="color: #0000ff;">if</span> (searchResult != <span style="color: #0000ff;">null</span><span style="color: #000000;">)
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> focus found control</span>
<span style="color: #000000;">        searchResult.Focus();
    }
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> focus the container</span>
<span style="color: #000000;">        container.Focus();
    }
}</span></pre>
</div>]]></description></item><item><title>xtraTabbedMdiManager的标题上右鍵弹出关闭窗体菜单</title><link>http://www.cnblogs.com/eastson/archive/2014/06/11/3781197.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 11 Jun 2014 00:46:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/06/11/3781197.html</guid><description><![CDATA[<p><span>实现一个增值功能, 在xtraTabbedMdiManager组件TabPage标题上右鍵弹出关闭当前窗体的菜单.</span><br /><br /><br /><img src="http://www.csframework.com/upload/image/tabedmdi.png" alt="贴图图片" /><br /><br /><br /></p>
<div class="codearea"><strong><span style="color: #0000ff;">C# Code:</span></strong><br /><br /><span class="codekeyword">private</span>&nbsp;<span class="codekeyword">void</span>&nbsp;xtraTabbedMdiManager1_MouseUp(<span class="codekeyword">object</span>&nbsp;sender, MouseEventArgs e)<br />{<br />&nbsp;&nbsp;&nbsp;<span class="codecomment">//点左键无效, 必须是点右键弹出菜单</span><br />&nbsp;&nbsp;&nbsp;<span class="codekeyword">if</span>&nbsp;(e.Button != MouseButtons.Right)&nbsp;<span class="codekeyword">return</span>;<br />&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;BaseTabHitInfo hint = xtraTabbedMdiManager1.CalcHitInfo(e.Location);<br />&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;<span class="codecomment">//点击有效,且点击在TabPage标题上</span><br />&nbsp;&nbsp;&nbsp;<span class="codekeyword">if</span>&nbsp;(hint.IsValid &amp;&amp; (hint.Page !=&nbsp;<span class="codekeyword">null</span>))<br />&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="codecomment">//有效子窗体</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="codekeyword">if</span>&nbsp;(xtraTabbedMdiManager1.SelectedPage.MdiChild !=&nbsp;<span class="codekeyword">null</span>)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Point p = xtraTabbedMdiManager1.SelectedPage.MdiChild.PointToScreen(e.Location);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;menuStripCloseForm.Show(p);&nbsp;<span class="codecomment">//显示弹出菜单</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;}<br />}<br /><br /><span class="codecomment">//来源:C/S框架网(www.csframework.com) QQ:1980854898</span><br /><br /></div>
<p>
<br /><span>菜单事件:</span><br /><br /></p>
<div class="codearea"><strong><span style="color: #0000ff;">C# Code:</span></strong><br /><br /><span class="codekeyword">private</span>&nbsp;<span class="codekeyword">void</span>&nbsp;menuItemCloseWindow_Click(<span class="codekeyword">object</span>&nbsp;sender, EventArgs e)<br />{<br />&nbsp;&nbsp;&nbsp;xtraTabbedMdiManager1.SelectedPage.MdiChild.Close();<br />}</div>]]></description></item><item><title>DevExpress GridControl 动态创建字段及主细关系表过程</title><link>http://www.cnblogs.com/eastson/archive/2014/06/11/3781193.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 11 Jun 2014 00:44:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/06/11/3781193.html</guid><description><![CDATA[<p>原文地址：<a href="http://hi.baidu.com/qdseashore/item/38f1153e9d0143637d034b7a">http://hi.baidu.com/qdseashore/item/38f1153e9d0143637d034b7a</a></p>
<p>在做项目中，往往需要在查询基类模板窗口内做主细关系Grid，引用一下代码可减少工作量，只需给此过程传递主、细SQL语句以及关联的关键字段即可完成如图所示的效果:</p>
<p>#region 执行主细查询过程<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void ExeQuery(string sMSql,string sDSql,string RelaitionField)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int iMCountItemNum = 0; int iDCountItemNum = 0;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int iMSumItemNum = 0; int iDSumItemNum = 0;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //查询。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (sMSql == null || sMSql == "" || sDSql == null || sDSql == "")<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #region 根据SQL填充主、细表<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; using (OracleConnection connection = new OracleConnection(DbHelperOra.connectionString))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _dtQuery = new DataSet();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connection.Open();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OracleDataAdapter command = new OracleDataAdapter(sMSql, connection);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; command.Fill(_dtQuery, "MA");<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; command.SelectCommand.CommandText=sDSql;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; command.Fill(_dtQuery,"DE");<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; command.Dispose();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch (System.Data.OracleClient.OracleException ex)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; finally<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; connection.Close();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #endregion</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #region 主表动态构造字段。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //获取到表结构。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (_dtQuery.Tables["MA"].Rows.Count &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gvMainList.Columns.Clear();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gvMainList.GroupSummary.Clear();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gvMainList.ClearGrouping();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //gvMainList.OptionsBehavior.Editable = true;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int iVisible = 0;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //根据表结构动态加载到GridControl控件中。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (DataColumn _dcQuery in _dtQuery.Tables["MA"].Columns)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iVisible++;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //动态添加<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DevExpress.XtraGrid.Columns.GridColumn gcQueryList = new DevExpress.XtraGrid.Columns.GridColumn();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcQueryList.Name = "_dc" + _dcQuery.ColumnName.ToUpper();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcQueryList.Caption = _dcQuery.ColumnName;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcQueryList.FieldName = _dcQuery.ColumnName;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //数字类型<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ((_dcQuery.DataType.ToString().ToUpper() == "SYSTEM.DECIMAL" || _dcQuery.DataType.ToString().ToUpper() == "SYSTEM.DOUBLE") &amp;&amp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ((gcQueryList.Caption.IndexOf("金额") &gt;= 0) || (gcQueryList.Caption.IndexOf("价格") &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; || (gcQueryList.Caption.IndexOf("人民币") &gt;= 0) || (gcQueryList.Caption.IndexOf("美元") &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; || (gcQueryList.Caption.IndexOf("单价") &gt;= 0) || (gcQueryList.Caption.IndexOf("个") &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; || (gcQueryList.Caption.IndexOf("件") &gt;= 0) || (gcQueryList.Caption.IndexOf("箱") &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; || (gcQueryList.Caption.IndexOf("数量") &gt;= 0)) &amp;&amp; iMSumItemNum &lt; 1)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iMSumItemNum++;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcQueryList.SummaryItem.FieldName = _dcQuery.ColumnName;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcQueryList.SummaryItem.SummaryType = DevExpress.Data.SummaryItemType.Sum;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gvMainList.GroupSummary.Add(DevExpress.Data.SummaryItemType.Sum, _dcQuery.ColumnName, null, "&nbsp; 小计:{0}");</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else if ((_dcQuery.DataType.ToString().ToUpper() == "SYSTEM.DECIMAL" || _dcQuery.DataType.ToString().ToUpper() == "SYSTEM.STRING") &amp;&amp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ((gcQueryList.Caption.IndexOf("序号") &gt;= 0) || (gcQueryList.Caption.IndexOf("流水") &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; || (gcQueryList.Caption.IndexOf("ID") &gt;= 0) || (gcQueryList.Caption.IndexOf("编号") &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; || (gcQueryList.Caption.IndexOf("箱号") &gt;= 0) || (gcQueryList.Caption.IndexOf("尺寸") &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; || (gcQueryList.Caption.IndexOf("序") &gt;= 0) || (gcQueryList.Caption.IndexOf("单号") &gt;= 0)) &amp;&amp; iMCountItemNum &lt; 1)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iMCountItemNum++;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcQueryList.SummaryItem.FieldName = _dcQuery.ColumnName;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcQueryList.SummaryItem.SummaryType = DevExpress.Data.SummaryItemType.Count;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gvMainList.GroupSummary.Add(DevExpress.Data.SummaryItemType.Count, _dcQuery.ColumnName, null, "&nbsp; 小计:{0}");<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (gcQueryList.FieldName != null &amp;&amp; RelaitionField != null &amp;&amp; gcQueryList.FieldName.ToUpper() != RelaitionField.ToUpper())<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcQueryList.VisibleIndex = iVisible;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcQueryList.Visible = true;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcQueryList.VisibleIndex = -1;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcQueryList.Visible = false;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //gcQueryList.ColumnEdit.ReadOnly = true;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gvMainList.Columns.Add(gcQueryList);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcMainList.MainView = gvMainList;</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch (System.Exception ex)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox.ErrorMsg("执行查询失败! 失败原因:" + ex.Message);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #endregion</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #region 子表构造字段<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //获取到表结构。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (_dtQuery.Tables["DE"].Rows.Count &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DevExpress.XtraGrid.Views.Grid.GridView gvMainDetail = new DevExpress.XtraGrid.Views.Grid.GridView();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // gvMainDetail.Columns.Clear();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // gvMainDetail.GroupSummary.Clear();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // gvMainDetail.ClearGrouping();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // gvMainDetail.OptionsBehavior.Editable = true;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int iVisible = 0;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //根据表结构动态加载到GridControl控件中。<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (DataColumn _dcQueryDetail in _dtQuery.Tables["DE"].Columns)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iVisible++;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //动态添加<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DevExpress.XtraGrid.Columns.GridColumn gcDetialQueryList = new DevExpress.XtraGrid.Columns.GridColumn();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcDetialQueryList.Name = "_dcD" + _dcQueryDetail.ColumnName.ToUpper();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcDetialQueryList.Caption = _dcQueryDetail.ColumnName;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcDetialQueryList.FieldName = _dcQueryDetail.ColumnName;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //数字类型<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ((_dcQueryDetail.DataType.ToString().ToUpper() == "SYSTEM.DECIMAL" || _dcQueryDetail.DataType.ToString().ToUpper() == "SYSTEM.DOUBLE") &amp;&amp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ((gcDetialQueryList.Caption.IndexOf("金额") &gt;= 0) || (gcDetialQueryList.Caption.IndexOf("价格") &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; || (gcDetialQueryList.Caption.IndexOf("人民币") &gt;= 0) || (gcDetialQueryList.Caption.IndexOf("美元") &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; || (gcDetialQueryList.Caption.IndexOf("单价") &gt;= 0) || (gcDetialQueryList.Caption.IndexOf("个") &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; || (gcDetialQueryList.Caption.IndexOf("件") &gt;= 0) || (gcDetialQueryList.Caption.IndexOf("箱") &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; || (gcDetialQueryList.Caption.IndexOf("数量") &gt;= 0)) &amp;&amp; iDSumItemNum &lt; 1)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iDSumItemNum++;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcDetialQueryList.SummaryItem.FieldName = _dcQueryDetail.ColumnName;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcDetialQueryList.SummaryItem.SummaryType = DevExpress.Data.SummaryItemType.Sum;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gvMainDetail.GroupSummary.Add(DevExpress.Data.SummaryItemType.Sum, _dcQueryDetail.ColumnName, null, "&nbsp; 小计:{0}");</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else if ((_dcQueryDetail.DataType.ToString().ToUpper() == "SYSTEM.DECIMAL" || _dcQueryDetail.DataType.ToString().ToUpper() == "SYSTEM.STRING") &amp;&amp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ((gcDetialQueryList.Caption.IndexOf("序号") &gt;= 0) || (gcDetialQueryList.Caption.IndexOf("流水") &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; || (gcDetialQueryList.Caption.IndexOf("ID") &gt;= 0) || (gcDetialQueryList.Caption.IndexOf("编号") &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; || (gcDetialQueryList.Caption.IndexOf("箱号") &gt;= 0) || (gcDetialQueryList.Caption.IndexOf("尺寸") &gt;= 0)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; || (gcDetialQueryList.Caption.IndexOf("序") &gt;= 0) || (gcDetialQueryList.Caption.IndexOf("单号") &gt;= 0)) &amp;&amp; iDCountItemNum &lt; 1)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iDCountItemNum++;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcDetialQueryList.SummaryItem.FieldName = _dcQueryDetail.ColumnName;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcDetialQueryList.SummaryItem.SummaryType = DevExpress.Data.SummaryItemType.Count;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gvMainDetail.GroupSummary.Add(DevExpress.Data.SummaryItemType.Count, _dcQueryDetail.ColumnName, null, "&nbsp; 小计:{0}");<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (gcDetialQueryList.FieldName != null &amp;&amp; RelaitionField != null &amp;&amp; gcDetialQueryList.FieldName.ToUpper() != RelaitionField.ToUpper())<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcDetialQueryList.VisibleIndex = iVisible;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcDetialQueryList.Visible = true;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcDetialQueryList.VisibleIndex = -1;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcDetialQueryList.Visible = false;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //gcDetialQueryList.ColumnEdit.ReadOnly = true;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gvMainDetail.Columns.Add(gcDetialQueryList);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcMainList.ViewCollection.Add(gvMainDetail);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch (System.Exception ex)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox.ErrorMsg("执行查询失败! 失败原因:" + ex.Message);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #endregion</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #region 建立关系并填充数据源<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>_dtQuery.Relations.Add("RMD", _dtQuery.Tables["MA"].Columns[RelaitionField], _dtQuery.Tables["DE"].Columns[RelaitionField], false);<br /></strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gcMainList.DataSource = _dtQuery.Tables["MA"];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gvMainList.BestFitColumns();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #endregion<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #endregion</p>
<p>&nbsp;</p>
<p>效果如图:</p>
<p><img src="http://hiphotos.baidu.com/qdseashore/pic/item/3c32b719d245241f42a9ad27.jpg" alt="" /></p>]]></description></item><item><title>即时通讯软件openfire+spark+smack</title><link>http://www.cnblogs.com/eastson/archive/2014/06/04/3767873.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 04 Jun 2014 06:36:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/06/04/3767873.html</guid><description><![CDATA[<p>原文地址：<a href="http://blog.csdn.net/windone0109/article/details/4675944">http://blog.csdn.net/windone0109/article/details/4675944</a></p>
<p><span><strong>开发你自己的XMPP IM - [J2EE]</strong></span></p>
<p><span>这几天查国内外的资料，发现国内关于这方面间的软件资料太少了，就想在这里写几篇关于此类IM 软件开发的文章。不过别看东西小，涉及的模块可不少。</span></p>
<p><span>所以我基本上分为三篇文章来介绍此类软件的开发：</span></p>
<p><span>第一篇是关于XMPP 协议是啥，IM 是啥以及一个比较有名的开源实现，该开源实现包括三个部分（Spark、Smack和Openfire）；</span></p>
<p><span>第二篇讲如何开发基于Spark 的客户端IM 插件部分；</span></p>
<p><span>第三篇讲如何开发基于Openfire 服务器端的插件部分。</span></p>
<p><span>好了，进入正题吧。</span></p>
<p><span>&nbsp;</span></p>
<p><span>什么是XMPP？<br />Extensible Messaging and Presence Protocol，简单的来讲，它就是一个发送接收处理消息的协议，但是这个协议发送的消息，既不是二进制的东东也不是字符串，而是XML。正是因为使用了XML作为消息传递的中介，Extensible 才谈的上，不是么？嘿嘿。再详尽的东西，我也就不多介绍了，大家可以去百度百科里查看下。</span></p>
<p><span>什么是IM ？</span></p>
<p><span>Instant Messenger，及时通信软件，就是大家使用的QQ、MSN Messenger和Gtalk等等。其中Gtalk 就是基于XMPP 协议的一个实现，其他的则不是。当前IM 几乎作为每个上网者必然使用的工具，在国外的大型企业中有一些企业级的IM应用，但是其商业价值还没完全发挥出来。设想既然XMPP 协议是一个公开的协议，那么每个企业都可以利用它来开发适合本身企业工作，提高自身生产效率的IM；甚至，你还可以在网络游戏中集成这种通信软件，不但让你可以边游戏边聊天，也可以开发出适合游戏本身的IM 应用，比如说一些游戏关键场景提醒功能，团队语音交流等等都可以基于IM来实现。说了这么多，就是一个意思，其商业价值远远比你想的高！</span></p>
<p><span>Spark Smack 和 Openfire</span></p>
<p><span>开源界总是有许多有趣的东东，这三个合起来就是一个完整的XMPP IM 实现。包括服务器端&mdash;&mdash;Openfire，客户端&mdash;&mdash;Spark，XMPP 传输协议的实现&mdash;&mdash;Smack（记住，XMPP是一个协议，协议是需要实现的，Smack起到的就是这样的一个作用）。三者都是基于Java 语言的实现，因此对于熟悉Java 的开发者来说不是很难</span></p>
<p><br /><span>Spark 提供了客户端一个基本的实现，并提出了一个很好的插件架构，这对于开发者来说不能不说是一个福音。我强烈建议基于插件方式来实现你新增加的功能，而不是去改它的源代码，这样有利于你项目架构，把原始项目的影响降到最低，文章以后的部分也是基于这种插件体系进行开发的</span></p>
<p><span>Openfire 是基于XMPP 协议的IM 的服务器端的一个实现，虽然当两个用户连接后，可以通过点对点的方式来发送消息，但是用户还是需要连接到服务器来获取一些连接信息和通信信息的，所以服务器端是必须要实现的。Openfire 也提供了一些基本功能，但真的很基本的！庆幸的是，它也提供插件的扩展，像Spark 一样，我同样强烈建议使用插件扩展的方式来增加新的功能，而不是修改人家的源代码。</span></p>
<p><span>Smack 是一个XMPP 协议的Java 实现，提供一套可扩展的API，不过有些时候，你还是不得不使用自己定制发送的XML 文件内容的方式来实现自己的功能</span></p>
<p><span>下图展示了三者之间的关系：</span></p>
<p>&nbsp;</p>
<p><span>&nbsp;<img src="http://p.blog.csdn.net/images/p_blog_csdn_net/windone0109/EntryImages/20091015/1.png" alt="" /></span></p>
<p><span>从图上可以了解到，client 端和server端都可以通过插件的方式来进行扩展，smack是二者传递数据的媒介。</span></p>
<p>&nbsp;</p>
<ul>
<li><span><strong>开发你自己的XMPP IM 续 - Spark 插件开发 - [J2EE]</strong></span></li>

</ul>
<p><br /><span>继续3月18日介绍基于XMPP IM开发的那篇Blog，今天主要总结一下如何基于Spark 的插件架构来新增客户端的功能，这里列举出一个获取服务器端群组信息的实际例子，实现后的效果如下图所示：</span></p>
<p><span><span><strong><img src="http://p.blog.csdn.net/images/p_blog_csdn_net/windone0109/EntryImages/20091015/2.jpg" alt="" /></strong></span></span></p>
<p>&nbsp;</p>
<p><span>Spark 是一个基于XMPP 协议，用Java 实现的IM 客户端。它提供了一些API，可以采用插件机制进行扩展，上图中，&ldquo;部门&rdquo;部分就是使用插件机制扩展出来的新功能。要想实现你的扩展，首先要了解 Spark API的架构，其中最关键的是要了解它的工厂类，这些工厂类可以获得Spark 提供的诸如XMPPConnection、ChatContainer 等实例，从而你可以实现获取服务器的信息，与另外的Client 通信等功能。最核心的类是SparkManager，这个类是一系列工厂类的工厂类（呵呵，还真拗口）。它的getChatManager()、getSessionManager ()、getMainWindow() 、getConnection() 等方法分别可以获得聊天管理器、会话管理器、主窗口、与服务器的连接等等非常有用的实例。基本上可以说SparkManager 是你与Spark 打交道的衔接口。其实，每一个Manager 都使用了单例模式，你也可以不通过SparkManager 来获取它们，但笔者建议你从单一的入口着手，这样有利于代码的开发和维护。</span></p>
<p><span>接下来描述一下插件的开发流程：<br />1、创建插件配置文件 plugin.xml<br />2、实现你自己的Plugin 类的实现（如果你需要实现自己规定格式的XML 发送、接收和处理，那么你需要在这里注册你的IQProvider，关于IQProvider 你可以查询Smack API，简单的来讲是处理你自定义的IQ 处理器。）<br />3、打包你的插件（Spark 有自己的打包机制，我研究了半天才发现其中的玄机，后面介绍）<br />4、部署你的插件（其实3、4两步可以糅合在一起，当然要利用Ant 啦）</span></p>
<p><span>好滴，下面结合一个实际的例子讲述上面的四个步骤<br />1、plugin.xml</span></p>
<p><span>&lt;plugin&gt;<br />&nbsp;&nbsp;&nbsp; &lt;name&gt;Enterprise IM Client&lt;/name&gt;<br />&nbsp;&nbsp;&nbsp; &lt;version&gt;1.0&lt;/version&gt;<br />&nbsp;&nbsp;&nbsp; &lt;author&gt;Phoenix&lt;/author&gt;<br />&nbsp;&nbsp;&nbsp; &lt;homePage&gt;http://phoenixtoday.blogbus.com&lt;/homePage&gt;<br />&nbsp;&nbsp;&nbsp; &lt;email&gt;phoenixtoday@gmail.com&lt;/email&gt;<br />&nbsp;&nbsp;&nbsp; &lt;description&gt;Enterprise Client Plug-in&lt;/description&gt;<br />&nbsp;&nbsp;&nbsp; &lt;!-- 关键是这里，这里要定义你的Plugin 类 --&gt;<br />&nbsp;&nbsp;&nbsp; &lt;class&gt;com.im.plugin.IMPlugin&lt;/class&gt;<br />&nbsp;&nbsp;&nbsp; &lt;!-- 这里定义你使用的Spark 最低版本 --&gt;<br />&nbsp;&nbsp;&nbsp; &lt;minSparkVersion&gt;2.5.0&lt;/minSparkVersion&gt;<br />&nbsp;&nbsp;&nbsp; &lt;os&gt;Windows&lt;/os&gt;<br />&lt;/plugin&gt;</span></p>
<p><span>这是一个 plugin.xml 文件的内容，插件体系会自动调用你在此文件中定义的Plugin 类，从而完成你自己扩展的功能。最关键的部分我用红色标识出来了，要声明你的插件扩展类，采用完整的命名空间方式（包括包名），其余的部分结合我的注释，大家应该都能理解，就不做详细的描述了。要注意的是plugin.xml 文件要放在项目的根目录下，这是严格规定好的。</span></p>
<p><span>2、Plugin 类的实现<br />你的类首先要实现Spark 提供的Plugin 接口，然后实现它的一些方法。其中最主要的是实现initialize() 发放，在这里注册你的的IQProvider</span></p>
<p><span>ProviderManager providerManager = ProviderManager.getInstance();<br />providerManager.addIQProvider("groups", "com:im:group", //1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new GroupTreeIQProvider());<br />System.out.println("注册GroupTree IQ 提供者");<br />requestGroupTree();</span></p>
<p><span>上述的代码，就在该类就是我实现的IMPlugin.initialize() 方法中的一小段，大概的含义是，先获取ProviderManager（这个貌似不能从SparkManager 直接获取），然后注册一个GroupTreeIQProvider（自己创建的）这是一个IQProvider 的具体实现，它用于解析像下面这样的一个XML 文件：</span></p>
<p><span>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;iq type='result'&nbsp;</span><a href="mailto:to='domain@server.com'"><span>to='domain@server.com'</span></a><span>&nbsp;</span><a href="mailto:from='phoenixtoday@gmail.com'"><span>from='phoenixtoday@gmail.com'</span></a><span>&nbsp;id='request_1'&gt;<br />&nbsp;&nbsp;&nbsp; &lt;groups xmlns='com:im:group'&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;group&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;groupId&gt;1&lt;/groupId&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;name&gt;西安交通大学&lt;/name&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;upGroup&gt;ROOT&lt;/upGroup&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;isLeaf&gt;0&lt;/isLeaf&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;description&gt;xjtu&lt;/description&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;user&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;userGroupId&gt;1&lt;/userGroupId&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;userName&gt;phoenix_test&lt;/userName&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;role&gt;normal&lt;/role&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/user&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/group&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;group&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;groupId&gt;2&lt;/groupId&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;name&gt;电信学院&lt;/name&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;upGroup&gt;1&lt;/upGroup&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;isLeaf&gt;1&lt;/isLeaf&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;description&gt;xjtu info&lt;/description&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/group&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/groups&gt;<br />&lt;/iq&gt;</span></p>
<p><span>可以看到，在注册 IQProvider 的时候（代码中标注的1部分），需要你提供名称和命名空间，我的XML 文件中的iq 下的第一个子节点是&lt;groups&gt; 所以我的名称就写&ldquo;groups&rdquo;，命名空间对应于groups 节点的xmlns(XML Name Space)所以是&ldquo;com:im:group&rdquo;，其实IQProvider 中最关键的方法是parseIQ(XmlPullParser parser) 该方法就是解析XML，完成你的功能，并返回一个相应的IQ 实例（这里可以把IQ 看做一个回馈的Model 类）。说到底实现基于XMPP 协议的IM 就是解析XML 文件，而这正是客户端的IQProvider 和服务器端的IQHandler（下一篇文章会涉及到）所做的事情。</span></p>
<p><span>3、打包你的插件<br />现在该有的功能都实现了，那么就是打包了。这最好利用Ant 来完成，因为每次你都要打包，要部署，如果纯手动的话，那也太不敏捷了，大大影响开发效率。</span></p>
<p><span>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;project name="IM" default="release" basedir="."&gt;<br />&nbsp;&nbsp;&nbsp; &lt;property name="src.dir" value="src" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;property name="dest.dir" value="bin" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;property name="lib.dir" value="lib" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;property name="im.path"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; value="E:/workspace/europa/spark_new/doc/spark/target/build" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;target name="clean"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!--&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;delete dir="${dest.dir}" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;delete dir="${lib.dir}" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/target&gt;<br />&nbsp;&nbsp;&nbsp; &lt;target name="init" depends="clean"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!--&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;mkdir dir="${dest.dir}" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;mkdir dir="${lib.dir}" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/target&gt;<br />&nbsp;&nbsp;&nbsp; &lt;target name="build" depends="init"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!--<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;javac srcdir="${src.dir}" destdir="${dest.dir}" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/target&gt;<br />&nbsp;&nbsp;&nbsp; &lt;!-- 最重要的是这里，打两次包 --&gt;<br />&nbsp;&nbsp;&nbsp; &lt;target name="jar" depends="build"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;jar jarfile="${lib.dir}/eim.jar" basedir="${dest.dir}" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;jar jarfile="${im.path}/plugins/eim.jar"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;fileset dir="."&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;include name="lib/*.jar" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/fileset&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;fileset dir="."&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;include name="plugin.xml" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/fileset&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/jar&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/target&gt;<br />&nbsp;&nbsp;&nbsp; &lt;target name="release" depends="jar"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!--&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;exec executable="cmd.exe"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; failonerror="true"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;arg line="/c e:"/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;arg line="/c cd workspace/europa/spark_new/doc/spark/target/build/bin"/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;arg line="/c startup.bat"/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/exec&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/target&gt;<br />&lt;/project&gt;</span></p>
<p><span>这是我的这个项目的 build.xml 文件中的内容。因为Eclipse 其实帮我自动完成了编译的任务，所以我也就省去了这写编译的步骤，最重要的是大家要看到&ldquo;jar&rdquo; 部分，Spark 打包的神秘之处也就在此，打两次包首先把你的项目打包到本项目lib 文件夹下，比如说你的项目目录是MyPlugin 那么，你就将你的类打包到MyPlugin/lib 目录下，然后再次的打包，将所有的lib 文件夹下的内容打包起来，记得这次要包含plugin.xml。也就是说，最后Spark 插件体系会读取你的项目下的lib 文件夹下的内容。这里我也有个疑问，我本来想每次打包后自动执行bat 文件，启动插件，看看效果，为啥死都调用不了呢，那段代码在最后面，注释掉了，谁能帮我解决，我请他吃饭滴！</span></p>
<p><span>4、最后就是发布了</span></p>
<p><span>其实我的发布很简单，就是将这个打包好的jar 文件拷到Spark 本身的plugins 目录下，每次启动Spark 的时候，它会自动调用自定义的插件的。我这里用Ant 第二次jar 的时候，就自动拷贝过去了，这里用的是绝对路径，所以你不能直接拷贝就用滴呦（是不是很丑陋呀，这段Ant 代码）。</span></p>
<p><span>基本上客户端的实现原理就是这样的，只是有些地方需要特别注意，还有就是应该利用像Ant 这样的工具大大简化开发步骤，加快开发效率。还有就是，我建议你在开发自己的插件的时候，多利用MVC 模式，尤其是在IQProvider 解析后，生成的部分可以实例化Model，然后你可以编写自己的Manager 进行这些Model 的处理。多写Log，当然Log4j 貌似不太起作用，那就System.out.println() 吧，哈哈！今天就写到这里啦，偶有点累啦。</span></p>
<p>&nbsp;</p>
<ul>
<li><span><strong>开发你自己的XMPP IM 续 - Openfire 插件开发 - [J2EE]</strong></span></li>

</ul>
<p><br /><span>继续上一篇的内容，本篇文章介绍开发Openfire 的插件</span></p>
<p><span>这篇文章拖了很久了，呵呵，真是千呼万唤始出来呀。Openfire 服务器端是支持插件开发的，开发过程可能会涉及到数据库的操作，本篇文章专注于Openfire 插件的部分，对服务器端涉及到数据库的开发只做简单介绍。</span></p>
<p><span>Openfire 是一个用Java 实现的XMPP 服务器，客户端可以通过IQ 的方式与其进行通信（其实就是XML），客户端和服务器之间的通信是依靠底层Smack 库提供的各种功能来完成的。其实利用插件方式来扩展Openfire 服务器端主要有两种扩展方式，一种是对服务器控制台页面进行扩展（不是本文的主要内容），其实就是遵循Openfire 页面的布局方式，进行相应的页面扩展和功能扩展；另一种是对通信功能进行扩展。本文主要针对后者进行具体的描述</span></p>
<p><span>本篇文章的结构如下：</span></p>
<p><span>1、创建plugin.xml（这是整个插件最关键的文档）<br />2、创建服务器插件实例（实现Plugin 接口的一个类还有一批IQHandler）<br />3、打包插件（Openfire 插件也有自己的打包方式）和部署插件</span></p>
<p><span>好滴，实刀实枪的来动手做吧</span></p>
<p><span>1、创建plugin.xml</span></p>
<p><span>初次开发Openfire 和Spark 插件的时候，很容易把二者搞混，千万记得，这里是Openfire 的plugin.xml 不是第二篇文章说的那个啦！</span></p>
<p><span>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;plugin&gt;<br />&nbsp;&nbsp;&nbsp; &lt;!-- Main plugin class&nbsp; 这里是最重要滴--&gt;<br />&nbsp;&nbsp;&nbsp; &lt;class&gt;com.im.server.plugin.GroupTreePlugin&lt;/class&gt;</span></p>
<p><span>&nbsp;&nbsp;&nbsp; &lt;!-- Plugin meta-data --&gt;<br />&nbsp;&nbsp;&nbsp; &lt;name&gt;GroupTreePlugin&lt;/name&gt;<br />&nbsp;&nbsp;&nbsp; &lt;description&gt;This is the group plugin.&lt;/description&gt;<br />&nbsp;&nbsp;&nbsp; &lt;author&gt;Phoenix&lt;/author&gt;</span></p>
<p><span>&nbsp;&nbsp;&nbsp; &lt;version&gt;1.0&lt;/version&gt;<br />&nbsp;&nbsp;&nbsp; &lt;date&gt;14/03/2008&lt;/date&gt;<br />&nbsp;&nbsp;&nbsp; &lt;url&gt;http://localhost:9001/openfire/plugins.jsp&lt;/url&gt;<br />&nbsp;&nbsp;&nbsp; &lt;minServerVersion&gt;3.4.1&lt;/minServerVersion&gt;<br />&nbsp;&nbsp;&nbsp; &lt;licenseType&gt;gpl&lt;/licenseType&gt;</span></p>
<p><span>&nbsp;&nbsp;&nbsp; &lt;!-- Admin console entries --&gt;<br />&nbsp;&nbsp;&nbsp; &lt;adminconsole&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;!-- More on this below --&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/adminconsole&gt;<br />&lt;/plugin&gt;</span></p>
<p><span>最重要的那一行我已经标记出来啦，就是你这个插件的初始化和垃圾清理类，例子中是在com.im.server.plugin 包中的GroupTreePlugin 类，下文会对这个类进行详细描述。其余的都是描述信息，只要你提供了正确的描述信息，一般都不会出错。建议初次开发者，在写完plugin.xml 文件后，写一个简单的Plugin 实例，并打印出一些信息，如果重新启动Openfire 信息成功显示，恭喜你，你已经迈出一大步了！</span></p>
<p><span>2、实现Plugin 类和IQHandler</span></p>
<p><span>Plugin 类主要起到的作用是初始化和释放资源，在初始化的过程中，最重要的的注册一批IQHandler，IQHander 的作用有点类似于Spark 中的IQProvider，其实就是解析XML 文件之后，生成一些有用的实例，以供处理。下面分别给出一个Plugin 类的实例和IQProvider 的实例</span></p>
<p><span>GroupTreePlugin 类</span></p>
<p><span>/**<br />&nbsp;* 服务器端插件类<br />&nbsp;*&nbsp;<br />&nbsp;* @author Phoenix<br />&nbsp;*&nbsp;<br />&nbsp;* Mar 14, 2008 11:03:11 AM<br />&nbsp;*&nbsp;<br />&nbsp;* version 0.1<br />&nbsp;*/<br />public class GroupTreePlugin implements Plugin<br />{<br />&nbsp;&nbsp;&nbsp; private XMPPServer server;</span></p>
<p><span>&nbsp;&nbsp;&nbsp; /*<br />&nbsp;&nbsp;&nbsp;&nbsp; * (non-Javadoc)<br />&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp; * @see org.jivesoftware.openfire.container.Plugin#destroyPlugin()<br />&nbsp;&nbsp;&nbsp;&nbsp; */<br />&nbsp;&nbsp;&nbsp; public void destroyPlugin()<br />&nbsp;&nbsp;&nbsp; {</span></p>
<p><span>&nbsp;&nbsp;&nbsp; }</span></p>
<p><span>&nbsp;&nbsp;&nbsp; /*<br />&nbsp;&nbsp;&nbsp;&nbsp; * (non-Javadoc)<br />&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp; * @see org.jivesoftware.openfire.container.Plugin#initializePlugin(org.jivesoftware.openfire.container.PluginManager,<br />&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; java.io.File)<br />&nbsp;&nbsp;&nbsp;&nbsp; */<br />&nbsp;&nbsp;&nbsp; public void initializePlugin(PluginManager manager, File pluginDirectory)<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PluginLog.trace("注册群组树IQ处理器");<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; server = XMPPServer.getInstance();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; server.getIQRouter().addHandler(new GroupTreeIQHander()); //1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; server.getIQRouter().addHandler(new UserInfoIQHandler());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; server.getIQRouter().addHandler(new DelUserIQHandler());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; server.getIQRouter().addHandler(new CreateUserIQHandler());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; server.getIQRouter().addHandler(new AddGroupUserIQHandler());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; server.getIQRouter().addHandler(new SetRoleIQHandler());</span></p>
<p><span>&nbsp;&nbsp;&nbsp; }</span></p>
<p><span>}</span></p>
<p><span>上例所示，在初始化中先找到IQRouter，然后通过IQRouter 注册一批IQHandler，这些IQHander 会自动监听相应命名空间的IQ，然后进行处理；由于这个Plugin 不需要做资源释放的工作，所以在destroyPlugin() 方法中没有任何内容。具体的IQHander 类如下</span></p>
<p><span>GroupTreeIQHander</span></p>
<p><span>/**<br />&nbsp;* 处理客户端发来的IQ，并回送结果IQ<br />&nbsp;*&nbsp;<br />&nbsp;* @author Phoenix<br />&nbsp;*&nbsp;<br />&nbsp;* Mar 14, 2008 4:55:33 PM<br />&nbsp;*&nbsp;<br />&nbsp;* version 0.1<br />&nbsp;*/<br />public class GroupTreeIQHander extends IQHandler<br />{</span></p>
<p><span>&nbsp;&nbsp;&nbsp; private static final String MODULE_NAME = "group tree handler";</span></p>
<p><span>&nbsp;&nbsp;&nbsp; private static final String NAME_SPACE = "com:im:group";</span></p>
<p><span>&nbsp;&nbsp;&nbsp; private IQHandlerInfo info;</span></p>
<p><span>&nbsp;&nbsp;&nbsp; public GroupTreeIQHander()<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; super(MODULE_NAME);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; info = new IQHandlerInfo("gruops", NAME_SPACE);<br />&nbsp;&nbsp;&nbsp; }</span></p>
<p><span>&nbsp;&nbsp;&nbsp; /*<br />&nbsp;&nbsp;&nbsp;&nbsp; * (non-Javadoc)<br />&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp; * @see org.jivesoftware.openfire.handler.IQHandler#getInfo()<br />&nbsp;&nbsp;&nbsp;&nbsp; */<br />&nbsp;&nbsp;&nbsp; @Override<br />&nbsp;&nbsp;&nbsp; public IQHandlerInfo getInfo()<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return info;<br />&nbsp;&nbsp;&nbsp; }</span></p>
<p><span>&nbsp;&nbsp;&nbsp; /*<br />&nbsp;&nbsp;&nbsp;&nbsp; * (non-Javadoc)<br />&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp; * @see org.jivesoftware.openfire.handler.IQHandler#handleIQ(org.xmpp.packet.IQ)<br />&nbsp;&nbsp;&nbsp;&nbsp; */<br />&nbsp;&nbsp;&nbsp; @Override<br />&nbsp;&nbsp;&nbsp; public IQ handleIQ(IQ packet) throws UnauthorizedException<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IQ reply = IQ.createResultIQ(packet);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Element groups = packet.getChildElement();//1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!IQ.Type.get.equals(packet.getType()))<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("非法的请求类型");<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; reply.setChildElement(groups.createCopy());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; reply.setError(PacketError.Condition.bad_request);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return reply;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; String userName = StringUtils.substringBefore(packet.getFrom().toString(),"@");</span></p>
<p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GroupManager.getInstance().initElement(groups,userName);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; reply.setChildElement(groups.createCopy());//2</span></p>
<p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println("返回的最终XML" + reply.toXML());</span></p>
<p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return reply;<br />&nbsp;&nbsp;&nbsp; }</span></p>
<p><span>}</span></p>
<p><span>可以看到主要有两个方法，一个是getInfo() 这个方法的目的是提供要解析的命名空间，在本例中，这个IQHandler 对每个命名空间为"com:im:group" 的实例进行处理；还有一个最重要的方法：handleIQ() 该方法对包含指定命名空间的XML 进行解析，然后返回一个解析好的IQ。其实我认为，这个IQHandler 和IQ 的关系就是Controller 和Model 的关系（如果你了解MVC 的话，那么你一定知道我再说什么），只不过这里并没有指定什么View，你完全可以把IQ 当成Model 类进行理解。在这里，我用了GroupManager 进行了XML 的处理，因为我返回的IQ 内容中要从数据库读取所有群组信息，所以转交给GroupManager 进行处理，你完全可以在这个方法中进行具体的XML 处理，在这里，解析和创建新的XML 主要用到的是JDOM（如果你对Java 解析XML 有所了解，那真的太好了！）。程序//1 处主要是获取创建返回的IQ，并获取原来IQ 的子元素（用于创建我们返回的IQ）；程序//2 处很关键，如果你不调用createCopy 方法，程序会出错（程序会死锁还是什么，忘记咧，不好以西）。</span></p>
<p><span>这就是程序的主体部分，我在这里有一个建议，能不用Openfire 原始的程序函数，就不要用它们。我的提取数据库方式都是自己写的Bean，这样有利于你自己对程序的掌控，其实更有利于快速开发（这世道不是啥都讲究敏捷么，哇哈哈）</span></p>
<p><span>3、打包插件</span></p>
<p><span>打包依然遵循二次打包的原则（如果你不了解啥叫要二次打包，请看上一篇）<br />这是我的ant 文件，由于Eclipse 帮我做了build 等很多工作，实际我的ant 工作就是在打包，并放入插件目录下的plugin 文件夹下</span></p>
<p><span>&lt;?xml version="1.0" encoding="UTF-8"?&gt;<br />&lt;project name="IM" default="release" basedir="."&gt;</span></p>
<p><span>&nbsp;&nbsp;&nbsp; &lt;property name="openfire.path"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; value="E:/workspace/europa/openfire_src/target/openfire" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;property name="classes.dir" value="classes" /&gt;<br />&nbsp;&nbsp;&nbsp; &lt;property name="lib.dir" value="lib" /&gt;</span></p>
<p><span>&nbsp;&nbsp;&nbsp; &lt;target name="jar"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;jar jarfile="${lib.dir}/grouptreeplugin.jar" basedir="${classes.dir}" &gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;fileset dir="."&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;include name="*.jar"/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/fileset&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/jar&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;jar jarfile="${openfire.path}/plugins/groupTreePlugin.jar"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;fileset dir="."&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;include name="lib/*.jar" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;include name="plugin.xml" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;include name="logo_small.gif" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;include name="logo_large.gif" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;include name="readme.html" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;include name="changelog.html" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;include name="build.xml" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/fileset&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/jar&gt;</span></p>
<p><span>&nbsp;&nbsp;&nbsp; &lt;/target&gt;</span></p>
<p><span>&nbsp;&nbsp;&nbsp; &lt;target name="release" depends="jar"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/target&gt;</span></p>
<p><span>&lt;/project&gt;</span></p>
<p><span>好了，至此XMPP+Spark+Openfire 的插件开发三部曲彻底结束了，希望你们对这个开发流程有了系统的了解。</span></p>]]></description></item><item><title>openfire + spark 展示组织机构(客户端)</title><link>http://www.cnblogs.com/eastson/archive/2014/06/04/3767869.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 04 Jun 2014 06:34:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/06/04/3767869.html</guid><description><![CDATA[<p><span>在spark&nbsp;加一个插件用于展示组织机构,&nbsp;参考了好多人的代码&nbsp;</span><br /><br /><img src="http://images.cnitblog.com/i/111826/201406/041432248492156.png" alt="" /><br /><br /><span>插件主类增加一个&nbsp;TAB用于展示机构树</span><br /><br /></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;">  com.salesoa.orgtree;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.net.URL;

</span><span style="color: #008000;">//</span><span style="color: #008000;">展示OA的组织结构</span>
<span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> OrgTreePlugin <span style="color: #0000ff;">implements</span><span style="color: #000000;"> Plugin{

    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span> ImageIcon  organ_icon=<span style="color: #0000ff;">null</span><span style="color: #000000;">;
    
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> ImageIcon    getOrganIcon(){<span style="color: #008000;">//</span><span style="color: #008000;">机构图标</span>
        <span style="color: #0000ff;">if</span>(organ_icon==<span style="color: #0000ff;">null</span><span style="color: #000000;">){
            ClassLoader  cl</span>=OrgTreePlugin.<span style="color: #0000ff;">class</span><span style="color: #000000;">.getClassLoader();
            URL   imageURL</span>=cl.getResource("images/organ.gif"<span style="color: #000000;">);
            organ_icon</span>=<span style="color: #0000ff;">new</span><span style="color: #000000;">   ImageIcon(imageURL);
        }
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;">  organ_icon;
    }
    
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span> ImageIcon  user_icon=<span style="color: #0000ff;">null</span><span style="color: #000000;">;
    
    </span><span style="color: #0000ff;">public</span>          <span style="color: #0000ff;">static</span>    ImageIcon     getUserIcon(){<span style="color: #008000;">//</span><span style="color: #008000;">机构图标</span>
        <span style="color: #0000ff;">if</span>(user_icon==<span style="color: #0000ff;">null</span><span style="color: #000000;">){
            ClassLoader    cl</span>=OrgTreePlugin.<span style="color: #0000ff;">class</span><span style="color: #000000;">.getClassLoader();
            URL  imageURL</span>=cl.getResource("images/user.gif"<span style="color: #000000;">);
            user_icon</span>=<span style="color: #0000ff;">new</span><span style="color: #000000;">   ImageIcon(imageURL);
        }
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> user_icon;
    }
    
    @Override
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> initialize() {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> TODO Auto-generated method stub</span>
        Workspace  workspace=<span style="color: #000000;">SparkManager.getWorkspace();

        SparkTabbedPane   tabbedPane</span>=<span style="color: #000000;">workspace.getWorkspacePane();

        OrgTree   orgTreePanel</span>=newOrgTree();<span style="color: #008000;">//</span><span style="color: #008000;">机构树

        
        
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Add own Tab.</span>
        tabbedPane.addTab("组织架构"<span style="color: #000000;">,OrgTreePlugin.getOrganIcon(),orgTreePanel);
    }

    @Override
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> shutdown() {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> TODO Auto-generated method stub</span>
<span style="color: #000000;">
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 是否可关闭</span>
<span style="color: #000000;">    @Override
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">boolean</span><span style="color: #000000;"> canShutDown() {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> TODO Auto-generated method stub</span>
        <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 卸载</span>
<span style="color: #000000;">    @Override
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> uninstall() {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> TODO Auto-generated method stub</span>
<span style="color: #000000;">
    }

}</span></pre>
</div>
<p><br /><span>机构树类&nbsp;，根据openfire插件http过来数据展示</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> com.salesoa.orgtree;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.awt.BorderLayout;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.awt.Color;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.awt.GridBagConstraints;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.awt.GridBagLayout;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.awt.Insets;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.IOException;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.swing.BorderFactory;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.swing.JPanel;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.swing.JScrollPane;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.swing.SwingWorker;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.swing.event.TreeExpansionEvent;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.swing.event.TreeExpansionListener;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.swing.tree.DefaultTreeModel;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> net.sf.json.JSONArray;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> net.sf.json.JSONObject;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.apache.commons.httpclient.HttpClient;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.apache.commons.httpclient.HttpException;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.apache.commons.httpclient.methods.GetMethod;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.apache.commons.httpclient.params.HttpMethodParams;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.jivesoftware.spark.SparkManager;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.jivesoftware.spark.component.Tree;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.jivesoftware.spark.util.log.Log;

</span><span style="color: #008000;">//</span><span style="color: #008000;">组织机构树</span>
<span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> OrgTree <span style="color: #0000ff;">extends</span><span style="color: #000000;"> JPanel {
    </span><span style="color: #008000;">/**</span><span style="color: #008000;">
     * 
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">final</span> <span style="color: #0000ff;">long</span> serialVersionUID = 5238403584089521528L<span style="color: #000000;">;

    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">final</span> Tree orgTree;<span style="color: #008000;">//</span><span style="color: #008000;"> 机构树控件</span>
    <span style="color: #0000ff;">private</span> <span style="color: #0000ff;">final</span> OrgTreeNode rootNode = <span style="color: #0000ff;">new</span> OrgTreeNode("组织");<span style="color: #008000;">//</span><span style="color: #008000;"> 根节点</span>
    <span style="color: #0000ff;">private</span> <span style="color: #0000ff;">final</span> DefaultTreeModel treeModel;<span style="color: #008000;">//</span><span style="color: #008000;"> 树模型

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 初始化机构树</span>
    <span style="color: #0000ff;">public</span><span style="color: #000000;"> OrgTree() {

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 根节点</span>
        rootNode.setUnitid(<span style="color: #0000ff;">null</span><span style="color: #000000;">);
        rootNode.setSuperunitid1(</span><span style="color: #0000ff;">null</span><span style="color: #000000;">);
        rootNode.setVisited(</span><span style="color: #0000ff;">false</span><span style="color: #000000;">);
        rootNode.setAllowsChildren(</span><span style="color: #0000ff;">true</span>);<span style="color: #008000;">//</span><span style="color: #008000;"> 允许有子节点</span>
        rootNode.setIcon(OrgTreePlugin.getOrganIcon());<span style="color: #008000;">//</span><span style="color: #008000;"> 图标

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 机构树</span>
        orgTree = <span style="color: #0000ff;">new</span><span style="color: #000000;"> Tree(rootNode);
        orgTree.setShowsRootHandles(</span><span style="color: #0000ff;">true</span>); <span style="color: #008000;">//</span><span style="color: #008000;"> 显示根结点左边的控制手柄</span>
        orgTree.collapseRow(0); <span style="color: #008000;">//</span><span style="color: #008000;"> 初始时只显示根结点</span>
        orgTree.setCellRenderer(<span style="color: #0000ff;">new</span><span style="color: #000000;"> OrgTreeCellRenderer());
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 覆盖树展开事件,进行异步加载</span>
        orgTree.addTreeExpansionListener(<span style="color: #0000ff;">new</span><span style="color: #000000;"> TreeExpansionListener() {
            @Override
            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> treeExpanded(TreeExpansionEvent event) {
                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 首先获取展开的结点</span>
                <span style="color: #0000ff;">final</span> OrgTreeNode expandNode =<span style="color: #000000;"> (OrgTreeNode) event.getPath()
                        .getLastPathComponent();

                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 判断该节点是否已经被访问过
                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 是&mdash;&mdash;无需到数据库中读取、什么事也不做
                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 否&mdash;&mdash;开始异步加载</span>
                <span style="color: #0000ff;">if</span> (!<span style="color: #000000;">expandNode.getVisited()) {
                    expandNode.setVisited(</span><span style="color: #0000ff;">true</span>); <span style="color: #008000;">//</span><span style="color: #008000;"> 先改变visited字段的状态</span>
                    orgTree.setEnabled(<span style="color: #0000ff;">false</span>); <span style="color: #008000;">//</span><span style="color: #008000;"> 暂时禁用JTree

                    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 使用swingworker框架</span>
                    <span style="color: #0000ff;">new</span> SwingWorker&lt;Long, Void&gt;<span style="color: #000000;">() {
                        @Override
                        </span><span style="color: #0000ff;">protected</span> Long doInBackground() <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
                            </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> asynchLoad(expandNode);
                        }

                        @Override
                        </span><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> done() {
                            treeModel.removeNodeFromParent(expandNode
                                    .getFirstLeaf()); </span><span style="color: #008000;">//</span><span style="color: #008000;"> 加载完毕后要删除&ldquo;载入中...&rdquo;结点</span>
                            treeModel.nodeStructureChanged(expandNode); <span style="color: #008000;">//</span><span style="color: #008000;"> 通知视图结构改变</span>
<span style="color: #000000;">
                            orgTree.setEnabled(</span><span style="color: #0000ff;">true</span>);<span style="color: #008000;">//</span><span style="color: #008000;">重新启用JTree</span>
<span style="color: #000000;">                        }
                    }.execute();

                }
            }

            @Override
            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> treeCollapsed(TreeExpansionEvent event) {
            }
        });

        treeModel </span>= (DefaultTreeModel) orgTree.getModel();<span style="color: #008000;">//</span><span style="color: #008000;"> 树模型

        </span><span style="color: #008000;">//</span><span style="color: #008000;">排版</span>
        setLayout(<span style="color: #0000ff;">new</span><span style="color: #000000;"> BorderLayout());

        </span><span style="color: #0000ff;">final</span> JPanel panel = <span style="color: #0000ff;">new</span><span style="color: #000000;"> JPanel();
        panel.setLayout(</span><span style="color: #0000ff;">new</span><span style="color: #000000;"> GridBagLayout());
        panel.setBackground(Color.white);

        </span><span style="color: #0000ff;">final</span> JScrollPane treeScroller = <span style="color: #0000ff;">new</span> JScrollPane(orgTree);<span style="color: #008000;">//</span><span style="color: #008000;"> 滚动条</span>
<span style="color: #000000;">        treeScroller.setBorder(BorderFactory.createEmptyBorder());
        panel.add(treeScroller, </span><span style="color: #0000ff;">new</span> GridBagConstraints(0, 1, 1, 1, 1.0, 1.0<span style="color: #000000;">,
                GridBagConstraints.WEST, GridBagConstraints.BOTH, </span><span style="color: #0000ff;">new</span> Insets(5<span style="color: #000000;">,
                        </span>5, 5, 5), 0, 0));<span style="color: #008000;">//</span><span style="color: #008000;"> 设置边界</span>
<span style="color: #000000;">
        add(panel, BorderLayout.CENTER);

        rootNode.add(</span><span style="color: #0000ff;">new</span> OrgTreeNode("加载中..."));<span style="color: #008000;">//</span><span style="color: #008000;"> 用于显示正在加载</span>
<span style="color: #000000;">    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 从数据表中读取expandNode的子结点.返回值为处理时长</span>
    <span style="color: #0000ff;">private</span> <span style="color: #0000ff;">long</span><span style="color: #000000;"> asynchLoad(OrgTreeNode expandNode) {
        </span><span style="color: #0000ff;">long</span> handleTime = 0L; <span style="color: #008000;">//</span><span style="color: #008000;"> 本次异步加载的处理时长</span>
        <span style="color: #0000ff;">long</span> start = System.currentTimeMillis(); <span style="color: #008000;">//</span><span style="color: #008000;"> 开始处理的时刻</span>
        <span style="color: #0000ff;">try</span><span style="color: #000000;"> {
            Thread.sleep(</span>1000); <span style="color: #008000;">//</span><span style="color: #008000;"> sleep一段时间以便看清楚整个过程</span>
<span style="color: #000000;">
            JSONArray childJSON </span>= <span style="color: #0000ff;">this</span><span style="color: #000000;">.getOrgTreeJSON(expandNode.getUnitid());
            </span><span style="color: #0000ff;">if</span> (childJSON != <span style="color: #0000ff;">null</span> &amp;&amp; childJSON.size() &gt; 0<span style="color: #000000;">) {

                </span><span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = 0, s = childJSON.size(); i &lt; s; i++<span style="color: #000000;">) {
                    JSONObject u </span>=<span style="color: #000000;"> childJSON.getJSONObject(i);
                    OrgTreeNode node </span>= <span style="color: #0000ff;">new</span> OrgTreeNode(u.getString("unitname"<span style="color: #000000;">));
                    node.setUnitid(u.getString(</span>"unitid"<span style="color: #000000;">));
                    </span><span style="color: #0000ff;">if</span> (u.containsKey("superunitid1"<span style="color: #000000;">)) {
                        node.setSuperunitid1(u.getString(</span>"superunitid1"<span style="color: #000000;">));
                    }
                    node.setType(u.getString(</span>"type"<span style="color: #000000;">));
                    </span><span style="color: #0000ff;">if</span> ("unit"<span style="color: #000000;">.equals(node.getType())) {
                        node.setAllowsChildren(</span><span style="color: #0000ff;">true</span>);<span style="color: #008000;">//</span><span style="color: #008000;"> 机构</span>
                    } <span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> ("staff"<span style="color: #000000;">.equals(node.getType())) {
                        node.setAllowsChildren(</span><span style="color: #0000ff;">false</span>);<span style="color: #008000;">//</span><span style="color: #008000;"> 人员</span>
                        <span style="color: #0000ff;">if</span> (u.containsKey("loginid"<span style="color: #000000;">)) {
                            node.setLoginid(u.getString(</span>"loginid"));<span style="color: #008000;">//</span><span style="color: #008000;"> 登陆账号</span>
<span style="color: #000000;">                        }
                    }

                    node.setVisited(</span><span style="color: #0000ff;">false</span><span style="color: #000000;">);
                    node.setAllowsChildren(</span><span style="color: #0000ff;">true</span>);<span style="color: #008000;">//</span><span style="color: #008000;"> 允许有子节点</span>
                    <span style="color: #0000ff;">if</span> ("unit".equals(node.getType())) {<span style="color: #008000;">//</span><span style="color: #008000;"> 机构</span>
                        node.setIcon(OrgTreePlugin.getOrganIcon());<span style="color: #008000;">//</span><span style="color: #008000;"> 图标</span>
                    } <span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> ("staff".equals(node.getType())) {<span style="color: #008000;">//</span><span style="color: #008000;"> 人员</span>
                        node.setIcon(OrgTreePlugin.getUserIcon());<span style="color: #008000;">//</span><span style="color: #008000;"> 图标</span>
<span style="color: #000000;">                    }
                    expandNode.add(node);
                    </span><span style="color: #0000ff;">if</span> ("unit"<span style="color: #000000;">.equals(node.getType())) {
                        node.add(</span><span style="color: #0000ff;">new</span> OrgTreeNode("加载中..."));<span style="color: #008000;">//</span><span style="color: #008000;"> 用于显示正在加载</span>
<span style="color: #000000;">                    }
                }
            }

        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception ex) {
            Log.error(</span>""<span style="color: #000000;">, ex);
        } </span><span style="color: #0000ff;">finally</span><span style="color: #000000;"> {
            handleTime </span>= System.currentTimeMillis() - start; <span style="color: #008000;">//</span><span style="color: #008000;"> 计算出处理时长</span>
<span style="color: #000000;">        }
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> handleTime;

    }

    </span><span style="color: #0000ff;">private</span> JSONArray getOrgTreeJSON(String unitid) {<span style="color: #008000;">//</span><span style="color: #008000;"> 取得返回组织架构</span>
        JSONArray result = <span style="color: #0000ff;">new</span><span style="color: #000000;"> JSONArray();
        HttpClient httpClient </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> HttpClient();
        GetMethod getMethod </span>= <span style="color: #0000ff;">new</span> GetMethod(<span style="color: #0000ff;">this</span><span style="color: #000000;">.getOrgUrl(unitid));
        getMethod.getParams().setParameter(HttpMethodParams.RETRY_HANDLER,
                </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> DefaultHttpMethodRetryHandler());
        </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
            httpClient.executeMethod(getMethod);

            </span><span style="color: #0000ff;">byte</span>[] responseBody =<span style="color: #000000;"> getMethod.getResponseBody();
            String responseMsg </span>= <span style="color: #0000ff;">new</span> String(responseBody, "GBK"<span style="color: #000000;">);
            result </span>=<span style="color: #000000;"> JSONArray.fromObject(responseMsg);
        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (HttpException e) {
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> TODO Auto-generated catch block</span>
            Log.error(""<span style="color: #000000;">, e);
        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (IOException e) {
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> TODO Auto-generated catch block</span>
            Log.error(""<span style="color: #000000;">, e);
        } </span><span style="color: #0000ff;">finally</span><span style="color: #000000;"> {

            getMethod.releaseConnection();
        }

        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> result;
    }

    </span><span style="color: #0000ff;">private</span> String getOrgUrl(String unitid) {<span style="color: #008000;">//</span><span style="color: #008000;"> 取得返回组织架构的url</span>
        String host =<span style="color: #000000;"> SparkManager.getConnection().getHost();
        StringBuffer url </span>= <span style="color: #0000ff;">new</span> StringBuffer("http://"<span style="color: #000000;">);
        url.append(host);
        url.append(</span>":9090/plugins/orgtree/orgtreeservlet"<span style="color: #000000;">);
        </span><span style="color: #0000ff;">if</span> (unitid != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            url.append(</span>"?unitid="<span style="color: #000000;">);
            url.append(unitid);
        }
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> url.toString();
    }
}</span></pre>
</div>
<p><img src="http://images.cnitblog.com/i/111826/201406/041433327866934.png" alt="" /><br /><br /><br /><span>有时间继续研究与联系人&nbsp;，对话之类结合的问题</span><br /><br /></p>
<div class="cnblogs_code">
<pre>-----------------------<span style="color: #000000;">补充
</span><span style="color: #008000;">//</span><span style="color: #008000;">机构节点</span>
<span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> OrgTreeCellRenderer <span style="color: #0000ff;">extends</span><span style="color: #000000;"> DefaultTreeCellRenderer {

</span><span style="color: #008000;">/**</span><span style="color: #008000;">
* 
</span><span style="color: #008000;">*/</span>
<span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">final</span> <span style="color: #0000ff;">long</span> serialVersionUID = 1759820655239259659L<span style="color: #000000;">;
</span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Object value;

    </span><span style="color: #008000;">/**</span><span style="color: #008000;">
     * Empty Constructor.
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span><span style="color: #000000;"> OrgTreeCellRenderer() {
    }

    </span><span style="color: #0000ff;">public</span> Component getTreeCellRendererComponent(JTree tree, Object value, <span style="color: #0000ff;">boolean</span> selected, <span style="color: #0000ff;">boolean</span> expanded, <span style="color: #0000ff;">boolean</span> leaf, <span style="color: #0000ff;">int</span> row, <span style="color: #0000ff;">boolean</span><span style="color: #000000;"> hasFocus) {
        </span><span style="color: #0000ff;">this</span>.value =<span style="color: #000000;"> value;

        </span><span style="color: #0000ff;">final</span> Component c = <span style="color: #0000ff;">super</span><span style="color: #000000;">.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);


        </span><span style="color: #008000;">//</span><span style="color: #008000;">设置图标</span>
<span style="color: #000000;">        setIcon(getCustomIcon());

        </span><span style="color: #008000;">//</span><span style="color: #008000;">用中文字体解决乱码问题
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Root Nodes are always bold</span>
        JiveTreeNode node =<span style="color: #000000;"> (JiveTreeNode)value;
        </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (node.getAllowsChildren()) {
            setFont(</span><span style="color: #0000ff;">new</span> Font("宋体", Font.BOLD, 13<span style="color: #000000;">));
        }
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
            setFont(</span><span style="color: #0000ff;">new</span> Font("宋体", Font.PLAIN, 13<span style="color: #000000;">));
        }


        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> c;
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;">取得图标</span>
    <span style="color: #0000ff;">private</span><span style="color: #000000;"> Icon getCustomIcon() {
        </span><span style="color: #0000ff;">if</span> (value <span style="color: #0000ff;">instanceof</span><span style="color: #000000;"> JiveTreeNode) {
            JiveTreeNode node </span>=<span style="color: #000000;"> (JiveTreeNode)value;
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> node.getClosedIcon();
        }
        </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">null</span><span style="color: #000000;">;
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;">关闭的图标</span>
    <span style="color: #0000ff;">public</span><span style="color: #000000;"> Icon getClosedIcon() {
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> getCustomIcon();
    }

    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> Icon getDefaultClosedIcon() {
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> getCustomIcon();
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;">叶子的图标</span>
    <span style="color: #0000ff;">public</span><span style="color: #000000;"> Icon getDefaultLeafIcon() {
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> getCustomIcon();
    }

    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> Icon getDefaultOpenIcon() {
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> getCustomIcon();
    }

    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> Icon getLeafIcon() {
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> getCustomIcon();
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;">打开的图标</span>
    <span style="color: #0000ff;">public</span><span style="color: #000000;"> Icon getOpenIcon() {
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> getCustomIcon();
    }

}


</span><span style="color: #008000;">//</span><span style="color: #008000;">机构Node</span>
<span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> OrgTreeNode <span style="color: #0000ff;">extends</span> JiveTreeNode <span style="color: #0000ff;">implements</span><span style="color: #000000;"> java.io.Serializable{

</span><span style="color: #0000ff;">public</span><span style="color: #000000;"> OrgTreeNode(String unitname) {
</span><span style="color: #0000ff;">super</span><span style="color: #000000;">(unitname);
}

</span><span style="color: #008000;">/**</span><span style="color: #008000;">
* 
</span><span style="color: #008000;">*/</span>
<span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">final</span> <span style="color: #0000ff;">long</span> serialVersionUID = -5358854185627562145L<span style="color: #000000;">; 
</span><span style="color: #0000ff;">private</span> String unitid ;<span style="color: #008000;">//</span><span style="color: #008000;">机构ID</span>
<span style="color: #0000ff;">private</span> String unitname ; <span style="color: #008000;">//</span><span style="color: #008000;">机构名称</span>
<span style="color: #0000ff;">private</span> String superunitid1; <span style="color: #008000;">//</span><span style="color: #008000;">上一级机构名称</span>
<span style="color: #0000ff;">private</span> Boolean visited;<span style="color: #008000;">//</span><span style="color: #008000;">是否已访问</span>
<span style="color: #0000ff;">private</span> String type; <span style="color: #008000;">//</span><span style="color: #008000;">类型</span>
<span style="color: #0000ff;">private</span> String loginid;<span style="color: #008000;">//</span><span style="color: #008000;">登陆账号</span>
<span style="color: #0000ff;">public</span><span style="color: #000000;"> String getUnitid() {
</span><span style="color: #0000ff;">return</span><span style="color: #000000;"> unitid;
}

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> setUnitid(String unitid) {
</span><span style="color: #0000ff;">this</span>.unitid =<span style="color: #000000;"> unitid;
}

</span><span style="color: #0000ff;">public</span><span style="color: #000000;"> String getUnitname() {
</span><span style="color: #0000ff;">return</span><span style="color: #000000;"> unitname;
}

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> setUnitname(String unitname) {
</span><span style="color: #0000ff;">this</span>.unitname =<span style="color: #000000;"> unitname;
}

</span><span style="color: #0000ff;">public</span><span style="color: #000000;"> String getSuperunitid1() {
</span><span style="color: #0000ff;">return</span><span style="color: #000000;"> superunitid1;
}

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> setSuperunitid1(String superunitid1) {
</span><span style="color: #0000ff;">this</span>.superunitid1 =<span style="color: #000000;"> superunitid1;
}

</span><span style="color: #0000ff;">public</span><span style="color: #000000;"> Boolean getVisited() {
</span><span style="color: #0000ff;">return</span><span style="color: #000000;"> visited;
}

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> setVisited(Boolean visited) {
</span><span style="color: #0000ff;">this</span>.visited =<span style="color: #000000;"> visited;
}

</span><span style="color: #0000ff;">public</span><span style="color: #000000;"> String getType() {
</span><span style="color: #0000ff;">return</span><span style="color: #000000;"> type;
}

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> setType(String type) {
</span><span style="color: #0000ff;">this</span>.type =<span style="color: #000000;"> type;
}

</span><span style="color: #0000ff;">public</span><span style="color: #000000;"> String getLoginid() {
</span><span style="color: #0000ff;">return</span><span style="color: #000000;"> loginid;
}

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> setLoginid(String loginid) {
</span><span style="color: #0000ff;">this</span>.loginid =<span style="color: #000000;"> loginid;
}

}</span></pre>
</div>]]></description></item><item><title>PHP微信公众平台</title><link>http://www.cnblogs.com/eastson/archive/2014/06/04/3767392.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 04 Jun 2014 02:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/06/04/3767392.html</guid><description><![CDATA[<p><a href="http://kf.qq.com/product/weixinmp.html">微信公众平台客户中心</a><a href="http://www.php100.com/html/php/api/2013/0909/6125.html"><span style="line-height: 1.5;">&nbsp;<br /></span></a><a href="http://mp.weixin.qq.com/wiki/index.php">微信公众平台开发文档</a><a href="http://www.php100.com/html/php/api/2013/0909/6125.html"><br /></a><a style="line-height: 1.5;" href="http://www.php100.com/html/php/api/2013/0909/6114.html">微信公众平台自定义菜单</a><a href="http://www.php100.com/html/php/api/2013/0909/6125.html"><span style="line-height: 1.5;">&nbsp;</span><br /></a><a style="line-height: 1.5;" href="http://www.php100.com/html/php/api/2013/0909/6115.html">微信公众平台开发（一） 配置接口</a><a href="http://www.php100.com/html/php/api/2013/0909/6125.html"><span style="line-height: 1.5;">&nbsp;</span><br /></a><a href="http://www.php100.com/html/php/api/2013/0909/6124.html"><span style="line-height: 1.5;">微信公众平台开发（二） 微信公众平台示例代码分析</span></a><br /><a href="http://www.php100.com/html/php/api/2013/0909/6125.html"><span style="line-height: 1.5;">微信公众平台开发（三） 订阅事件（subscribe）处理</span><span style="line-height: 1.5;">&nbsp;</span></a><br /><a href="http://www.php100.com/html/php/api/2013/0909/6126.html"><span style="line-height: 1.5;">微信公众平台开发（四） 简单回复功能开发</span></a><span style="line-height: 1.5; color: #000000;"><span style="line-height: 1.5;"><a href="http://www.php100.com/html/php/api/2013/0909/6126.html">&nbsp;</a></span><a href="http://www.php100.com/html/php/api/2013/0909/6124.html"><br /></a></span><a href="http://www.php100.com/html/php/api/2013/0909/6127.html"><span style="line-height: 1.5;">微信公众平台开发（五） 天气预报功能开发</span></a><span style="line-height: 1.5;"><a href="http://www.php100.com/html/php/api/2013/0909/6127.html">&nbsp;</a><br /></span><a href="http://www.php100.com/html/php/api/2013/0909/6130.html">微信公众平台开发（六） 翻译功能开发</a><span style="line-height: 1.5;">&nbsp;<br /></span><a style="line-height: 1.5;" href="http://www.php100.com/html/php/api/2013/0909/6131.html">微信公众平台开发（七） 聊天机器人功能开发</a><span style="line-height: 1.5;">&nbsp;<br /></span><a style="line-height: 1.5;" href="http://www.php100.com/html/php/api/2013/0909/6132.html">微信公众平台开发（八） 自定义菜单功能开发</a></p>]]></description></item><item><title>nnCron LITE</title><link>http://www.cnblogs.com/eastson/archive/2014/05/31/3762101.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 31 May 2014 01:28:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/31/3762101.html</guid><description><![CDATA[<p><a href="http://www.nncron.ru/index.shtml">nnCron LITE</a> is a small, but full-featured scheduler that can start applications and open documents at a specified time or with specified frequency. nnCron LITE is a perfect freeware Windows clone of a well-known UNIX scheduler&nbsp;<em>Cron</em>&nbsp;(including all the useful&nbsp;<em>Anacron</em>&nbsp;features).</p>
<p>Here are the most important features of nnCron LITE:</p>
<ul>
<li>it can be started as a system service or as a regular standalone application</li>
<li>it understands cron table format (Unix) and is managed with easy-to-edit text crontab files that are fully compatible with Unix crontabs</li>
<li>it can handle and restart so called&nbsp;<em>missed</em>&nbsp;tasks</li>
<li>it can set and use environment variables</li>
<li>it can run applications authorized as currently logged user</li>
<li>it can be extended with plugins written in Forth language</li>
<li>it can be easy tuned up to answer your current needs</li>
<li>it is not resource demanding, and it can run even on&nbsp;<em>very&nbsp;</em>older PCs without any noticeable performance degradation. (We have never seen nnCron LITE service to allocate more than 150k of operative memory.)</li>
</ul>
<p>nnCron LITE is tiny, powerful and easy to use. And if you need not just a scheduler, but a full-blown automation manager, take a look at nnCron.</p>
<p>nnCron LITE is&nbsp;<em>FREE</em>!</p>]]></description></item><item><title>phpCAS library</title><link>http://www.cnblogs.com/eastson/archive/2014/05/31/3762081.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 31 May 2014 00:58:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/31/3762081.html</guid><description><![CDATA[<p>The <a href="https://wiki.jasig.org/display/CASC/phpCAS+examples">phpCAS</a>&nbsp;library provides a simple API for authenticating users against a CAS server. phpCAS is configured using the static API methods such as<code>phpCAS::client()</code>&nbsp;and&nbsp;<code>phpCAS::setCasServerCACert()</code>. After phpCAS has been configured, a call to&nbsp;<code>phpCAS::forceAuthentication()</code>&nbsp;executes the login process if the current user is not already authenticated, redirecting out to the CAS server's login page. After&nbsp;<code>phpCAS::forceAuthentication()</code>has been called, the current user's id is accessible via&nbsp;<code>phpCAS::getUser()</code>.<br /><img src="http://images.cnitblog.com/i/111826/201405/310856526811017.png" alt="" /><br /><br /></p>]]></description></item><item><title>SSO之CAS + LDAP</title><link>http://www.cnblogs.com/eastson/archive/2014/05/31/3757215.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 31 May 2014 00:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/31/3757215.html</guid><description><![CDATA[<p><span>本来主要详细是介绍CAS和LDAP整合实现单点登录的步骤。</span><br /><br />1. 依《<a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/p/3756784.html">SSO之安装CAS Server</a>》所述安装好CAS Server。<br /><span style="line-height: 1.5;">2. 安装ApacheDS。安装好ApacheDS后可以用Apache Directory Studio对其进行维护。<span style="color: #ff0000;">需要注意的是ApacheDS端口号是10389，默认用户uid=admin,ou=system，密码secret</span>。<br />3. 建立组织架构。所有人员建立在<span style="color: #ff0000;">ou=people,dc=comple,dc=com</span>下面，第一阶是部门，再下面可以是职员，也可以是子部门。<br /><img src="http://images.cnitblog.com/i/111826/201405/310806566347561.png" alt="" /><br /><span style="line-height: 1.5;">4. 打开tomcat/webapps/cas/WEB-INF/deployerConfigContext.xml，找到如下内容：</span></span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">
    | This is the authentication handler declaration that every CAS deployer will need to change before deploying CAS 
    | into production.  The default SimpleTestUsernamePasswordAuthenticationHandler authenticates UsernamePasswordCredentials
    | where the username equals the password.  You will need to replace this with an AuthenticationHandler that implements your
    | local authentication strategy.  You might accomplish this by coding a new such handler and declaring
    | edu.someschool.its.cas.MySpecialHandler here, or you might use one of the handlers provided in the adaptors modules.
    +</span><span style="color: #008000;">--&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean 
    </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="org.jasig.cas.authentication.handler.support.SimpleTestUsernamePasswordAuthenticationHandler"</span> <span style="color: #0000ff;">/&gt;</span></pre>
</div>
<p>修改成如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">
&lt;bean 
    class="org.jasig.cas.authentication.handler.support.SimpleTestUsernamePasswordAuthenticationHandler" /&gt;
</span><span style="color: #008000;">--&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="org.jasig.cas.adaptors.ldap.BindLdapAuthenticationHandler"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="filter"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="cn=%u"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="searchBase"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="ou=people,dc=example,dc=com"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="contextSource"</span><span style="color: #ff0000;"> ref</span><span style="color: #0000ff;">="contextSource"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="allowMultipleAccounts"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="true"</span> <span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">bean</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>还要在最后加上contextSource定义：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="contextSource"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.springframework.ldap.core.support.LdapContextSource"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="userDn"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="uid=admin,ou=system"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="password"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="secret"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="pooled"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="true"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="urls"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">list</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">value</span><span style="color: #0000ff;">&gt;</span>ldap://192.168.12.250:10389<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">value</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">list</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">property</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="baseEnvironmentProperties"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">map</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">entry </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="java.naming.security.authentication"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="simple"</span> <span style="color: #0000ff;">/&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">map</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">property</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">bean</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><span style="line-height: 1.5;">5. 将</span><span style="line-height: 1.5;">cas-server-3.5.2.1-release.zip里面的modules/</span><span style="line-height: 1.5;">cas-server-support-ldap-3.5.2.1.jar复制到cas/WEB-INF/lib。<span style="color: #ff0000;">下载spring-ldap-core和spring-ldap-core-tiger到cas/WEB-INF/lib，注意对当前cas server来说，最好用1.3.2的版本。</span>具体可以参考《</span><a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_0" href="http://www.cnblogs.com/eastson/p/3761441.html">Eclipse调试cas server 3.5.2.1</a><span style="line-height: 1.5;">》。</span></p>
<p><span style="line-height: 1.5;">6. 重启tomcat，登录cas/login测试。<br /><img src="http://images.cnitblog.com/i/111826/201405/310804332599996.png" alt="" /><br /><img src="http://images.cnitblog.com/i/111826/201405/310805332917422.png" alt="" /><br /><br /></span><span style="line-height: 1.5;">注意事项：</span><span style="line-height: 1.5;"><br /><span style="color: #ff0000;">1. CAS验证有问题时可以通过cas.log查询一下。</span><br /></span><span style="line-height: 1.5; color: #ff0000;">2. LDAP不需要uid属性，但一定需要userPassword属性。<br /><br /></span><em id="__mceDel"><span style="line-height: 1.5;"><em style="line-height: 1.5;">参考：<br /></em><em id="__mceDel" style="line-height: 1.5;"><em><a style="line-height: 1.5;" href="http://www.micmiu.com/enterprise-app/sso/sso-cas-ldap-auth/">SSO之CAS+LDAP实现单点登录认证</a>&nbsp;<br /></em><em id="__mceDel" style="line-height: 1.5;"><a href="http://www.micmiu.com/enterprise-app/sso/sso-cas-sample/">SSO之CAS单点登录实例演示<br /><em id="__mceDel" style="color: #000000; line-height: 1.5;"><a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_0" href="http://www.cnblogs.com/eastson/p/3761441.html">Eclipse调试cas server 3.5.2.1</a></em></a></em></em></span></em></p>]]></description></item><item><title>Eclipse调试cas server 3.5.2.1</title><link>http://www.cnblogs.com/eastson/archive/2014/05/30/3761441.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 May 2014 08:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/30/3761441.html</guid><description><![CDATA[<p>由于在配置CAS+LDAP总是报错，决定Eclipse调试cas server，跟踪问题出在哪里？</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">=============================================================
WHO: [username: aaaa]
WHAT: 'principal' cannot be null.
Check the correctness of @Audit annotation at the following audit point: execution(public abstract org.jasig.cas.authentication.Authentication org.jasig.cas.authentication.AuthenticationManager.authenticate(org.jasig.cas.authentication.principal.Credentials))
ACTION: TICKET_GRANTING_TICKET_NOT_CREATED
APPLICATION: CAS
WHEN: Thu May 29 17:04:41 CST 2014
CLIENT IP ADDRESS: 127.0.0.1
SERVER IP ADDRESS: 127.0.0.1
=============================================================</span></pre>
</div>
<p><br />这里以cas-server-3.5.2.1-release.zip说明如何配置调试环境：<br />1. 下载cas-server-3.5.2.1-release.zip，这里面包含了源码和打包后的文件。<br />2. 解压缩cas-server-3.5.2.1-release.zip，在modules子目录里面找到cas-server-webapp-3.5.2.1.war。<br />3. 解压缩cas-server-webapp-3.5.2.1.war到eclipse的workspace目录，这样可以让cas-server-webapp-3.5.2.1方便成为eclipse的一个项目。<br />4. 在cas-server-webapp-3.5.2.1下新建WebContent子目录。WebContent是eclipse web项目的网站根目录。<br />5. 将原来cas-server-webapp-3.5.2.1目录下的所有内容都移动到WebContent。<br />6. 删除WebContent/WEB-INF/classes目录下的org目录。这个目录对应的是cas-server-webapp的源码。<br />7. 将cas-server-3.5.2.1-releas/cas-server-core/src/main/java目录下的源码复制到cas-server-webapp-3.5.2.1/cas-server-core。只需要java目录就可以，其它都不要。<br />8. 重复第7步，将cas-server-webapp和cas-server-support-ldap目录下的源码都复制过来。最后的目录结构如下图：<br /><img src="http://images.cnitblog.com/i/111826/201405/301641270258001.png" alt="" /><br />9. 编译cas-server-support-ldap时需要用到spring-ldap-core和spring-ldap-core-tiger，注意要1.3.2的版本，不要用最新的2.0.2的版本。这两个文件不容易找到，可以用maven去自动下载。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">project </span><span style="color: #ff0000;">xmlns</span><span style="color: #0000ff;">="http://maven.apache.org/POM/4.0.0"</span><span style="color: #ff0000;"> xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;">
  xsi:schemaLocation</span><span style="color: #0000ff;">="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">modelVersion</span><span style="color: #0000ff;">&gt;</span>4.0.0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">modelVersion</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>com.mycompany.app<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>my-app<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">packaging</span><span style="color: #0000ff;">&gt;</span>jar<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">packaging</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>1.0-SNAPSHOT<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">name</span><span style="color: #0000ff;">&gt;</span>my-app<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">name</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">url</span><span style="color: #0000ff;">&gt;</span>http://maven.apache.org<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">url</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dependencies</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>org.springframework.ldap<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>spring-ldap-core<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>1.3.2.RELEASE<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>org.springframework.ldap<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>spring-ldap-core-tiger<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>1.3.2.RELEASE<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dependencies</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">project</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>10. 创建Dyanmic Web Project，注意源码目录的定义，不是默认的src。<br /><img src="http://images.cnitblog.com/i/111826/201405/301646556349643.png" alt="" /><br /><img src="http://images.cnitblog.com/i/111826/201405/301647055569477.png" alt="" /><br /><img src="http://images.cnitblog.com/i/111826/201405/301647207282610.png" alt="" /></p>
<p>11. 配置完毕，可以调试了。<br /><img src="http://images.cnitblog.com/i/111826/201405/301653396972600.png" alt="" /><br /><br /></p>]]></description></item><item><title>CAS连接微软活动目录的配置方法</title><link>http://www.cnblogs.com/eastson/archive/2014/05/29/3759382.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 29 May 2014 08:18:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/29/3759382.html</guid><description><![CDATA[<p>原文地址：<a href="http://blog.csdn.net/baozhengw/article/details/3857669">http://blog.csdn.net/baozhengw/article/details/3857669</a><br /><span>在微软活动目录中建立一个用户节点,帐号为wangzhenyu,cn为zhenyu wang,并设置登陆口令,这时候在cas中用wangzhenyu的帐号登陆失败,解决办法是:安装apache directory studio,建立一个到微软活动目录的连接,连接时使用微软活动目录所在的windows2003服务器的超级用户帐号,连接成功后,在LDAP树中找从ou=nsc下找i到CN=zhengyu wang这个节点,给这个节点手工添加一个uid属性，设置uid的值为wangzhenyu,添加成功后，在cas登陆页面中再使用wangzhenyu帐号及ad中设置的口令就可以成功登录了．</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="utf-8"</span><span style="color: #0000ff;">?&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">beans </span><span style="color: #ff0000;">xmlns</span><span style="color: #0000ff;">="http://www.springframework.org/schema/beans"</span><span style="color: #ff0000;"> xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;"> xmlns:p</span><span style="color: #0000ff;">="http://www.springframework.org/schema/p"</span><span style="color: #ff0000;"> xsi:schemaLocation</span><span style="color: #0000ff;">="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd"</span><span style="color: #0000ff;">&gt;</span>  
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="authenticationManager"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.jasig.cas.authentication.AuthenticationManagerImpl"</span><span style="color: #0000ff;">&gt;</span> 
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="credentialsToPrincipalResolvers"</span><span style="color: #0000ff;">&gt;</span> 
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">list</span><span style="color: #0000ff;">&gt;</span> 
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="org.jasig.cas.authentication.principal.UsernamePasswordCredentialsToPrincipalResolver"</span><span style="color: #0000ff;">/&gt;</span>  
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="org.jasig.cas.authentication.principal.HttpBasedServiceCredentialsToPrincipalResolver"</span><span style="color: #0000ff;">/&gt;</span> 
      <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">list</span><span style="color: #0000ff;">&gt;</span> 
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">property</span><span style="color: #0000ff;">&gt;</span>  
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="authenticationHandlers"</span><span style="color: #0000ff;">&gt;</span> 
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">list</span><span style="color: #0000ff;">&gt;</span> 
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="org.jasig.cas.authentication.handler.support.HttpBasedServiceCredentialsAuthenticationHandler"</span><span style="color: #ff0000;"> p:httpClient-ref</span><span style="color: #0000ff;">="httpClient"</span><span style="color: #0000ff;">/&gt;</span>  
        <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;bean
     class="org.jasig.cas.authentication.handler.support.SimpleTestUsernamePasswordAuthenticationHandler" /&gt;</span><span style="color: #008000;">--&gt;</span>  
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="org.jasig.cas.adaptors.ldap.BindLdapAuthenticationHandler"</span><span style="color: #0000ff;">&gt;</span> 
          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="filter"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="uid=%u"</span><span style="color: #0000ff;">/&gt;</span>  
          <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">seem must have ou node</span><span style="color: #008000;">--&gt;</span>  
          <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;property name="searchBase" value="ou=nsc,dc=nhncdev,dc=com" /&gt;  </span><span style="color: #008000;">--&gt;</span>  
          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="searchBase"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="ou=nsc,dc=nhncdev,dc=com"</span><span style="color: #0000ff;">/&gt;</span>  
          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="contextSource"</span><span style="color: #ff0000;"> ref</span><span style="color: #0000ff;">="contextSource"</span><span style="color: #0000ff;">/&gt;</span> 
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">bean</span><span style="color: #0000ff;">&gt;</span> 
      <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">list</span><span style="color: #0000ff;">&gt;</span> 
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">property</span><span style="color: #0000ff;">&gt;</span> 
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">bean</span><span style="color: #0000ff;">&gt;</span>  
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="userDetailsService"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.springframework.security.userdetails.memory.InMemoryDaoImpl"</span><span style="color: #0000ff;">&gt;</span> 
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="userMap"</span><span style="color: #0000ff;">&gt;</span> 
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">value</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">value</span><span style="color: #0000ff;">&gt;</span> 
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">property</span><span style="color: #0000ff;">&gt;</span> 
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">bean</span><span style="color: #0000ff;">&gt;</span>  
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="attributeRepository"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.jasig.services.persondir.support.StubPersonAttributeDao"</span><span style="color: #0000ff;">&gt;</span> 
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="backingMap"</span><span style="color: #0000ff;">&gt;</span> 
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">map</span><span style="color: #0000ff;">&gt;</span> 
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">entry </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="uid"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="uid"</span><span style="color: #0000ff;">/&gt;</span>  
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">entry </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="eduPersonAffiliation"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="eduPersonAffiliation"</span><span style="color: #0000ff;">/&gt;</span>  
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">entry </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="groupMembership"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="groupMembership"</span><span style="color: #0000ff;">/&gt;</span> 
      <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">map</span><span style="color: #0000ff;">&gt;</span> 
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">property</span><span style="color: #0000ff;">&gt;</span> 
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">bean</span><span style="color: #0000ff;">&gt;</span>  
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="serviceRegistryDao"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.jasig.cas.services.InMemoryServiceRegistryDaoImpl"</span><span style="color: #0000ff;">/&gt;</span>  
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="contextSource"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.jasig.cas.adaptors.ldap.util.AuthenticatedLdapContextSource"</span><span style="color: #0000ff;">&gt;</span> 
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="anonymousReadOnly"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="false"</span><span style="color: #0000ff;">/&gt;</span>  
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="userName"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="cn=zhenyu wang,ou=nsc,dc=nhncdev,dc=com"</span><span style="color: #0000ff;">/&gt;</span>  
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="password"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="Hello123"</span><span style="color: #0000ff;">/&gt;</span>  
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="pooled"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="true"</span><span style="color: #0000ff;">/&gt;</span>  
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="urls"</span><span style="color: #0000ff;">&gt;</span> 
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">list</span><span style="color: #0000ff;">&gt;</span> 
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">value</span><span style="color: #0000ff;">&gt;</span>ldap://10.34.114.54:389/<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">value</span><span style="color: #0000ff;">&gt;</span> 
      <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">list</span><span style="color: #0000ff;">&gt;</span> 
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">property</span><span style="color: #0000ff;">&gt;</span>  
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="baseEnvironmentProperties"</span><span style="color: #0000ff;">&gt;</span> 
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">map</span><span style="color: #0000ff;">&gt;</span> 
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">entry</span><span style="color: #0000ff;">&gt;</span> 
          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">key</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">value</span><span style="color: #0000ff;">&gt;</span>java.naming.security.authentication<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">value</span><span style="color: #0000ff;">&gt;</span>
          <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">key</span><span style="color: #0000ff;">&gt;</span>  
          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">value</span><span style="color: #0000ff;">&gt;</span>simple<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">value</span><span style="color: #0000ff;">&gt;</span> 
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">entry</span><span style="color: #0000ff;">&gt;</span> 
      <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">map</span><span style="color: #0000ff;">&gt;</span> 
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">property</span><span style="color: #0000ff;">&gt;</span> 
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">bean</span><span style="color: #0000ff;">&gt;</span> 
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">beans</span><span style="color: #0000ff;">&gt;</span></pre>
</div>]]></description></item><item><title>SSO之安装CAS Server</title><link>http://www.cnblogs.com/eastson/archive/2014/05/28/3756784.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 28 May 2014 07:40:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/28/3756784.html</guid><description><![CDATA[<p><a href="http://www.jasig.org/">JA-SIG CAS</a>（Central Authentication Service）为Web应用系统提供了单点登录服务。它的特性包括：一个开放和具有很好文档支持的协议；一个Java开源服务器组件；提供多种类型的客 户端包括Java、.Net、PHP、Perl、Apache、uPortal等；能够与uPortal、BlueSocket、TikiWiki、&nbsp;Mule、&nbsp;Liferay、Moodle集成使用。<br /><br />1. <span>由于 Client 与 CAS Server 之间的交互采用 Https 协议，因此部署 CAS Server 的服务器还需要支持 SSL 协议。</span>按照《<a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_0" href="http://www.cnblogs.com/eastson/p/3756727.html">Tomcat之配置HTTPS</a>》所述配置好Tomcat。<br /><br />2.&nbsp;<span>以cas-server-3.5.2.1-release.zip 为例，解压提取modules/cas-server-webapp-3.5.2.1.war文件，把改文件copy到tomcat/webapps目录下，并重命名为cas.war。<br /><br /></span>3.&nbsp;<span>启动tomcat，在浏览器地址栏输入：</span><span>https://web.demo.com:8443/cas/</span><span>&nbsp;，回车：<br /><img src="http://images.cnitblog.com/i/111826/201405/301611022138159.png" alt="" /><br /><span>CAS-server的默认验证规则：</span><span><span style="color: #0000ff;">只要用户名和密码相同就认证通过</span>（<span style="color: #ff0000;">仅仅用于测试，生成环境需要根据实际情况修改</span>）</span><span>，输入admin/admin 点击登录，就可以看到登录成功的页面：<br /></span></span><img src="http://images.cnitblog.com/i/111826/201405/301611426976957.png" alt="" /><br /><br />参考：<br /><a href="http://www.ibm.com/developerworks/cn/opensource/os-cn-cas/">使用 CAS 在 Tomcat 中实现单点登录</a>&nbsp;<br /><a href="http://www.micmiu.com/enterprise-app/sso/sso-cas-sample/">SSO之CAS单点登录实例演示</a></p>]]></description></item><item><title>Tomcat之配置HTTPS</title><link>http://www.cnblogs.com/eastson/archive/2014/05/28/3756727.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 28 May 2014 03:34:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/28/3756727.html</guid><description><![CDATA[<p>1. 在<span>C:\Windows\System32\drivers\etc\hosts文件中新增一条项目web.demo.com，让Tomcat可以通过域名访问：<br /></span></p>
<div class="cnblogs_code">
<pre>127.0.0.1        web.demo.com</pre>
</div>
<p><br />3. 生成证书：</p>
<div class="cnblogs_code">
<pre>keytool -genkey -alias casdemo -keyalg RSA -keysize 1024 -keypass casdemo -validity 365 -keystore c:\casdemo.keystore -storepass casdemo</pre>
</div>
<p><img src="http://images.cnitblog.com/i/111826/201405/301603141033535.png" alt="" /></p>
<p><br />4. 导出证书：</p>
<div class="cnblogs_code">
<pre>keytool -export -alias casdemo -file c:\casdemo.crt -keystore c:\casdemo.keystore -storepass casdemo</pre>
</div>
<p><img src="http://images.cnitblog.com/i/111826/201405/301604088383081.png" alt="" /><br /><br />5. 导入证书：</p>
<div class="cnblogs_code">
<pre>keytool -import -alias casdemo -file c:\casdemo.crt -keystore "%JAVA_HOME%\jre\lib\security\cacerts" -storepass changeit</pre>
</div>
<p><img src="http://images.cnitblog.com/i/111826/201405/301604365419817.png" alt="" /></p>
<p><br />6. 打开Tomcat目录下的conf/server.xml文件，找到8443的配置：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">&lt;!--</span><span style="color: #008000;">
&lt;Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true"
           maxThreads="150" scheme="https" secure="true"
           clientAuth="false" sslProtocol="TLS" /&gt;
</span><span style="color: #008000;">--&gt;</span></pre>
</div>
<p>按照下面方式修改：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">Connector </span><span style="color: #ff0000;">port</span><span style="color: #0000ff;">="8443"</span><span style="color: #ff0000;"> protocol</span><span style="color: #0000ff;">="org.apache.coyote.http11.Http11Protocol"</span><span style="color: #ff0000;"> SSLEnabled</span><span style="color: #0000ff;">="true"</span><span style="color: #ff0000;">
       maxThreads</span><span style="color: #0000ff;">="150"</span><span style="color: #ff0000;"> scheme</span><span style="color: #0000ff;">="https"</span><span style="color: #ff0000;"> secure</span><span style="color: #0000ff;">="true"</span><span style="color: #ff0000;">
       keystoreFile</span><span style="color: #0000ff;">="c:/casdemo.keystore"</span><span style="color: #ff0000;"> keystorePass</span><span style="color: #0000ff;">="casdemo"</span><span style="color: #ff0000;">
       clientAuth</span><span style="color: #0000ff;">="false"</span><span style="color: #ff0000;"> sslProtocol</span><span style="color: #0000ff;">="TLS"</span><span style="color: #ff0000;"> URIEncoding</span><span style="color: #0000ff;">="UTF-8"</span> <span style="color: #0000ff;">/&gt;</span></pre>
</div>
<p><br />7. 打开浏览器测试是否成功：<br /><img src="http://images.cnitblog.com/i/111826/201405/301607403694424.png" alt="" /><br /><br /><br /></p>
<p>参考：<br /><a href="http://www.micmiu.com/enterprise-app/sso/sso-cas-sample/">SSO之CAS单点登录实例演示</a><a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/p/3756442.html"><br />java keytool证书工具使用小结</a><a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_0" style="line-height: 1.5;" href="http://www.cnblogs.com/eastson/p/3756651.html"><br />Tomcat SSL配置 Connector attribute SSLCertificateFile must be defined when using SSL with APR解决</a>&nbsp;</p>]]></description></item><item><title>Tomcat SSL配置 Connector attribute SSLCertificateFile must be defined when using SSL with APR解决</title><link>http://www.cnblogs.com/eastson/archive/2014/05/28/3756651.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 28 May 2014 03:04:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/28/3756651.html</guid><description><![CDATA[<p>原文地址：<a href="http://blog.csdn.net/kissliux/article/details/17392003">http://blog.csdn.net/kissliux/article/details/17392003</a></p>
<p>Tomcat 6版本配置SSL过程有两步：</p>
<p>1、用JDK自带的keytool.exe来生成私有密钥和自签发的证书，如下：</p>
<div class="cnblogs_code">
<pre>keytool -genkey -keyalg RSA -alias tomcat</pre>
</div>
<p>按提示输入相关内容后，这条命令将在默认密钥库文件里新增一个别名为tomcat的私有密钥项及其自签发的证书。默认密钥库文件为：</p>
<div class="cnblogs_code">
<pre>%USERPROFILE%\.keystore</pre>
</div>
<p>2、修改Tomcat的conf\server.xml文件，即增加下面一段：</p>
<div class="cnblogs_code">
<pre>    <span>&lt;</span><span>Connector </span><span>port</span><span>="8443"</span><span> protocol</span><span>="HTTP/1.1"</span><span> SSLEnabled</span><span>="true"</span><span>
               maxThreads</span><span>="150"</span><span> scheme</span><span>="https"</span><span> secure</span><span>="true"</span><span>
               clientAuth</span><span>="false"</span><span> sslProtocol</span><span>="TLS"</span><span>
               keystoreFile</span><span>="${user.home}/.keystore"</span><span>
               keystorePass</span><span>="changeit"</span> <span>/&gt;</span></pre>
</div>
<p>这里的<span>${user.home}</span>就是上面的<span><span>%USERPROFILE%</span>，只是一个是Java语法，另一个是Windows语法。</span></p>
<p>设置好就能正常启动Tomcat了。</p>
<p>可是按同样的方法来配置Tomcat 7却启动不起来，报如下错误：&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">严重: Failed to initialize end point associated with ProtocolHandler ["http-apr-8443"]
java.lang.Exception: Connector attribute SSLCertificateFile must be defined when using SSL with APR</span></pre>
</div>
<p><span style="line-height: 1.5;">仔细看上面的异常信息发现这是APR报的错误。Tomcat 6也有APR包但我从来都没用过。为此查看了Tomcat的</span><a style="line-height: 1.5;" href="http://tomcat.apache.org/tomcat-7.0-doc/ssl-howto.html" target="_blank">ssl-how</a><span style="line-height: 1.5;">，在&ldquo;</span>Edit the Tomcat Configuration File&rdquo;一节中说到：</p>
<ul>
<li>Tomcat提供了两个SSL实现，一个是JSSE实现，另一个是APR实现。</li>
<li>Tomcat将自动选择使用哪个实现，即如果安装了APR则自动选择APR，否则选择JSSE。</li>
<li>如果不希望让Tomcat自动选择，而是我们自己指定一个实现则可通过<span>protocol</span>定义，如下：</li>
</ul>
<div class="cnblogs_code">
<pre><span>&lt;</span><span>Connector </span><span>protocol</span><span>="..."</span> <span>/&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>我又查看了<a href="http://tomcat.apache.org/tomcat-6.0-doc/ssl-howto.html" target="_blank">6.0的相同说明</a>，里面与7.0的说明一模一样。因此问题只可能是：是否安装了APR包。</p>
<p>以前只听说过APR但没弄过。APR是什么文件？后来才发现APR文件名为<span>tcnative-1.dll</span>。进一步检查6.0和7.0的安装目录，结果发现6.0里没这个dll文件，而7.0里有。换句话说，6.0默认使用JSSE实现，而7.0默认使用APR实现。</p>
<p>弄明白缘由就好办了。由于习惯使用6.0的配置方式（即JSEE实现），因此只要把上面conf\server.xml里的protocol修改一下就行了：</p>
<div class="cnblogs_code">
<pre>    <span>&lt;</span><span>Connector </span><span>port</span><span>="8443"</span><span> protocol</span><span>="<span>org.apache.coyote.http11.Http11Protocol</span>"</span><span> SSLEnabled</span><span>="true"</span><span>
               maxThreads</span><span>="150"</span><span> scheme</span><span>="https"</span><span> secure</span><span>="true"</span><span>
               clientAuth</span><span>="false"</span><span> sslProtocol</span><span>="TLS"</span><span>
               keystoreFile</span><span>="${user.home}/.keystore"</span><span>
               keystorePass</span><span>="changeit"</span> <span>/&gt;</span></pre>
</div>
<p>&nbsp;重新启动，一切正常。</p>]]></description></item><item><title>java keytool证书工具使用小结</title><link>http://www.cnblogs.com/eastson/archive/2014/05/28/3756442.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 28 May 2014 01:35:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/28/3756442.html</guid><description><![CDATA[<p>原文地址：<a href="http://www.micmiu.com/lang/java/keytool-start-guide/">http://www.micmiu.com/lang/java/keytool-start-guide/</a></p>
<p>Keytool 是一个Java数据证书的管理工具 ,Keytool将密钥（key）和证书（certificates）存在一个称为keystore的文件中在keystore里，包含两种数据:密钥实体（Key entity）-密钥（secret key）或者是私钥和配对公钥（采用非对称加密）可信任的证书实体（trusted certificate entries）-只包含公钥.<br /><span>JDK中keytool常用参数说明（<span>不同版本有差异，详细可参见【附录】中的官方文档链接</span>）:</span></p>
<ul>
<li>-genkey 在用户主目录中创建一个默认文件&rdquo;.keystore&rdquo;,还会产生一个mykey的别名，mykey中包含用户的公钥、私钥和证书(在没有指定生成位置的情况下,keystore会存在用户系统默认目录)</li>
<li>-alias 产生别名 每个keystore都关联这一个独一无二的alias，这个alias通常不区分大小写</li>
<li>-keystore 指定密钥库的名称(产生的各类信息将不在.keystore文件中)</li>
<li>-keyalg 指定密钥的算法 (如 RSA DSA，默认值为：DSA)</li>
<li>-validity 指定创建的证书有效期多少天(默认 90)</li>
<li>-keysize 指定密钥长度 （默认 1024）</li>
<li>-storepass 指定密钥库的密码(获取keystore信息所需的密码)</li>
<li>-keypass 指定别名条目的密码(私钥的密码)</li>
<li>-dname 指定证书发行者信息 其中： &ldquo;CN=名字与姓氏,OU=组织单位名称,O=组织名称,L=城市或区域名 称,ST=州或省份名称,C=单位的两字母国家代码&rdquo;</li>
<li>-list 显示密钥库中的证书信息 keytool -list -v -keystore 指定keystore -storepass 密码</li>
<li>-v 显示密钥库中的证书详细信息</li>
<li>-export 将别名指定的证书导出到文件 keytool -export -alias 需要导出的别名 -keystore 指定keystore -file 指定导出的证书位置及证书名称 -storepass 密码</li>
<li>-file 参数指定导出到文件的文件名</li>
<li>-delete 删除密钥库中某条目 keytool -delete -alias 指定需删除的别 -keystore 指定keystore &ndash; storepass 密码</li>
<li>-printcert 查看导出的证书信息 keytool -printcert -file g:\sso\michael.crt</li>
<li>-keypasswd 修改密钥库中指定条目口令 keytool -keypasswd -alias 需修改的别名 -keypass 旧密码 -new 新密码 -storepass keystore密码 -keystore sage</li>
<li>-storepasswd 修改keystore口令 keytool -storepasswd -keystore g:\sso\michael.keystore(需修改口令的keystore) -storepass pwdold(原始密码) -new pwdnew(新密码)</li>
<li>-import 将已签名数字证书导入密钥库 keytool -import -alias 指定导入条目的别名 -keystore 指定keystore -file 需导入的证书</li>

</ul>
<div><strong><span>目录说明：</span></strong></div>
<div><ol>
<li><span>生成证书</span></li>
<li><span>查看证书</span></li>
<li><span>证书导出</span></li>
<li><span>附录资料</span></li>

</ol></div>
<div><span>一、生成证书</span></div>
<div>&nbsp;按win键+R，弹出运行窗口，输入 cmd 回车，打开命令行窗户，输入如下命令：</div>
<div>
<div id="highlighter_105773" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table>
<tbody>
<tr>
<td class="number"><code>1</code></td>
<td class="content"><code class="plain">keytool -genkey -</code><code class="functions">alias</code>&nbsp;<code class="plain">michaelkey -keyalg RSA -keysize 1024 -keypass michaelpwd -validity 365 -keystore g:\sso\michael.keystore -storepass michaelpwd2</code></td>

</tr>

</tbody>

</table>

</div>

</div>

</div>

</div>
<div>截图如下：</div>
<div><a href="http://www.micmiu.com/wp-content/uploads/2012/05/keytool-01.jpg"><img class="alignnone size-full wp-image-600" title="keytool-01" src="http://www.micmiu.com/wp-content/uploads/2012/05/keytool-01.jpg" alt="" width="647" height="286" /></a></div>
<div><span>二、查看证书</span></div>
<div>
<p>缺省情况下，-list&nbsp;命令打印证书的&nbsp;MD5&nbsp;指纹。而如果指定了&nbsp;-v&nbsp;选项，将以可读格式打印证书，如果指定了&nbsp;-rfc&nbsp;选项，将以可打印的编码格式输出证书。</p>

</div>
<div><span>-v 命令如下：</span></div>
<div>
<div id="highlighter_166103" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table>
<tbody>
<tr>
<td class="number"><code>1</code></td>
<td class="content"><code class="plain">keytool -list&nbsp; -</code><code class="functions">v</code>&nbsp;<code class="plain">-keystore g:\sso\michael.keystore -storepass michaelpwd2</code></td>

</tr>

</tbody>

</table>

</div>

</div>

</div>

</div>
<div>回车看到的信息如下：</div>
<div><a href="http://www.micmiu.com/wp-content/uploads/2012/05/keytool-02.jpg"><img class="alignnone size-full wp-image-601" title="keytool-02" src="http://www.micmiu.com/wp-content/uploads/2012/05/keytool-02.jpg" alt="" width="647" height="429" /></a></div>
<div><span>-rfc 命令如下：</span></div>
<div>
<div id="highlighter_608926" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table>
<tbody>
<tr>
<td class="number"><code>1</code></td>
<td class="content"><code class="plain">keytool -list -rfc -keystore g:\sso\michael.keystore -storepass michaelpwd2</code></td>

</tr>

</tbody>

</table>

</div>

</div>

</div>

</div>
<div>回车看到的信息如下：</div>
<div><a href="http://www.micmiu.com/wp-content/uploads/2012/05/keytool-03.jpg"><img class="alignnone size-full wp-image-602" title="keytool-03" src="http://www.micmiu.com/wp-content/uploads/2012/05/keytool-03.jpg" alt="" width="649" height="491" /></a></div>
<div><span>三、证书的导出和查看：</span></div>
<div><span>导出证书命令</span>：</div>
<div>
<div id="highlighter_593943" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table>
<tbody>
<tr>
<td class="number"><code>1</code></td>
<td class="content"><code class="plain">keytool -</code><code class="functions">export</code>&nbsp;<code class="plain">-</code><code class="functions">alias</code>&nbsp;<code class="plain">michaelkey -keystore g:\sso\michael.keystore -</code><code class="functions">file</code><code class="plain">g:\sso\michael.crt -storepass michaelpwd2</code></td>

</tr>

</tbody>

</table>

</div>

</div>

</div>

</div>
<div>回车如下：</div>
<div><a href="http://www.micmiu.com/wp-content/uploads/2012/05/keytool-04.jpg"><img class="alignnone size-full wp-image-604" title="keytool-04" src="http://www.micmiu.com/wp-content/uploads/2012/05/keytool-04.jpg" alt="" width="645" height="80" /></a></div>
<div><span>查看导出的证书信息</span>：</div>
<div>
<div id="highlighter_912390" class="syntaxhighlighter  ">
<div class="lines">
<div class="line alt1">
<table>
<tbody>
<tr>
<td class="number"><code>1</code></td>
<td class="content"><code class="plain">keytool -printcert -</code><code class="functions">file</code>&nbsp;<code class="plain">g:\sso\michael.crt</code></td>

</tr>

</tbody>

</table>

</div>

</div>

</div>

</div>
<div>回车看到信息如下：</div>
<div><a href="http://www.micmiu.com/wp-content/uploads/2012/05/keytool-05.jpg"><img class="alignnone size-full wp-image-603" title="keytool-05" src="http://www.micmiu.com/wp-content/uploads/2012/05/keytool-05.jpg" alt="" width="642" height="181" /></a></div>
<div><span>四：附录</span></div>
<div>官方有关keytool命令的介绍文档：</div>
<div>
<ul>
<li><span>jdk1.4.2 ：http://docs.oracle.com/javase/1.4.2/docs/tooldocs/windows/keytool.html</span></li>
<li><span>jdk1.6 &nbsp; &nbsp;：http://docs.oracle.com/javase/6/docs/technotes/tools/windows/keytool.html</span></li>
<li><span>jdk1.7 &nbsp; &nbsp;：http://docs.oracle.com/javase/7/docs/technotes/tools/windows/keytool.html</span></li>

</ul>

</div>]]></description></item><item><title>CentOS 中文乱码</title><link>http://www.cnblogs.com/eastson/archive/2014/05/27/3754835.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 27 May 2014 04:31:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/27/3754835.html</guid><description><![CDATA[<p>同事刚装的一台CentOS服务器，SSH登录乱码：<br /><img src="http://images.cnitblog.com/i/111826/201405/271226512283636.png" alt="" /><br /><br />猜测应该是安装时选择的是简体中文，因为发现/etc/sysconfig/i18n文件里面是zh_CN。</p>
<div class="cnblogs_code">
<pre>LANG="zh_CN.UTF-8"</pre>
</div>
<p><br />修改/etc/sysconfig/i18n为<span>en_US，重新登录，测试OK。<br /></span></p>
<div class="cnblogs_code">
<pre>LANG="en_US.UTF-8"</pre>
</div>]]></description></item><item><title>Web在线文件管理器(web os) KODExplorer</title><link>http://www.cnblogs.com/eastson/archive/2014/05/27/3754346.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 27 May 2014 00:52:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/27/3754346.html</guid><description><![CDATA[<p><span>KODExplorer是款开源的Web在线文件管理、代码编辑器。它提供了类windows经典用户界面，一整套在线文件管理、文件预览、编辑、上传下载、在线解压缩、音乐播放功能。让你直接在浏览器端实现web开发、源码文件预览、网站部署的同时拥有与本地操作一样方便、快捷、安全的体验。<br /></span><img src="http://images.cnitblog.com/i/111826/201405/270851461663007.jpg" alt="" /></p>]]></description></item><item><title>Web文件管理、私有云存储管理工具 DzzOffice</title><link>http://www.cnblogs.com/eastson/archive/2014/05/27/3754342.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 27 May 2014 00:48:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/27/3754342.html</guid><description><![CDATA[<p><a href="http://www.dzzoffice.com/">DzzOffice-大桌子办公系统</a>本身是一款图形化，简单易用的网盘管理软件。可以实现将企业的局域网服务器、企业私有云存储、企业租用的公有云存储（如阿里云OSS）、企业员工的私有云存储（如百度网盘、DropBox）等进行综合管理。实现企业文档、文件统一管理的目的。然后通各类办公应用的接入（如文档在线查看编辑、图片在线查看编辑、讨论板、任务板等）实现企业在线协同办公、提高工作效率的目的。<br /><img src="http://images.cnitblog.com/i/111826/201405/270848551343691.jpg" alt="" /></p>]]></description></item><item><title>Drupal administration theme</title><link>http://www.cnblogs.com/eastson/archive/2014/05/23/3747369.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 23 May 2014 03:57:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/23/3747369.html</guid><description><![CDATA[<p>Drupal允许为管理后台设置独立的theme，保存在系统变量variable_get('admin_theme')。<br /><br />Drupal使用全局变量$theme来保存当前请求对应的主题。Drupal在启动时初始化$theme变量：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> _drupal_bootstrap_full() {
  </span>... ...<span style="color: #000000;">
  menu_set_custom_theme(); 
  drupal_theme_initialize();
  module_invoke_all(</span>'init'<span style="color: #000000;">);
}

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> menu_set_custom_theme() {
  menu_get_custom_theme(</span><span style="color: #0000ff;">TRUE</span><span style="color: #000000;">);
}

</span><span style="color: #0000ff;">function</span> menu_get_custom_theme(<span style="color: #800080;">$initialize</span> = <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$custom_theme</span> = &amp;drupal_static(<span style="color: #ff00ff;">__FUNCTION__</span><span style="color: #000000;">);
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Skip this if the site is offline or being installed or updated, since the
  // menu system may not be correctly initialized then.</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$initialize</span> &amp;&amp; !_menu_site_is_offline(<span style="color: #0000ff;">TRUE</span>) &amp;&amp; (!<span style="color: #008080;">defined</span>('MAINTENANCE_MODE') || (MAINTENANCE_MODE != 'update' &amp;&amp; MAINTENANCE_MODE != 'install'<span style="color: #000000;">))) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> First allow modules to dynamically set a custom theme for the current
    // page. Since we can only have one, the last module to return a valid
    // theme takes precedence.
    // 调用hook_custom_theme()获取自定义theme</span>
    <span style="color: #800080;">$custom_themes</span> = <span style="color: #008080;">array_filter</span>(module_invoke_all('custom_theme'), 'drupal_theme_access'<span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$custom_themes</span><span style="color: #000000;">)) {
      </span><span style="color: #800080;">$custom_theme</span> = <span style="color: #008080;">array_pop</span>(<span style="color: #800080;">$custom_themes</span><span style="color: #000000;">);
    }
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> If there is a theme callback function for the current page, execute it.
    // If this returns a valid theme, it will override any theme that was set
    // by a hook_custom_theme() implementation above.
    // 在hook_menu()定义时也可以用theme callback/theme arguments定义theme</span>
    <span style="color: #800080;">$router_item</span> =<span style="color: #000000;"> menu_get_item();
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$router_item</span>['access']) &amp;&amp; !<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$router_item</span>['theme_callback']) &amp;&amp; <span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$router_item</span>['theme_callback'<span style="color: #000000;">])) {
      </span><span style="color: #800080;">$theme_name</span> = <span style="color: #008080;">call_user_func_array</span>(<span style="color: #800080;">$router_item</span>['theme_callback'], <span style="color: #800080;">$router_item</span>['theme_arguments'<span style="color: #000000;">]);
      </span><span style="color: #0000ff;">if</span> (drupal_theme_access(<span style="color: #800080;">$theme_name</span><span style="color: #000000;">)) {
        </span><span style="color: #800080;">$custom_theme</span> = <span style="color: #800080;">$theme_name</span><span style="color: #000000;">;
      }
    }
  }
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$custom_theme</span><span style="color: #000000;">;
}

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> drupal_theme_initialize() {
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$theme</span>, <span style="color: #800080;">$user</span>, <span style="color: #800080;">$theme_key</span><span style="color: #000000;">;

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> If $theme is already set, assume the others are set, too, and do nothing</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$theme</span><span style="color: #000000;">)) {
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
  }

  drupal_bootstrap(DRUPAL_BOOTSTRAP_DATABASE);
  </span><span style="color: #800080;">$themes</span> =<span style="color: #000000;"> list_themes();

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Only select the user selected theme if it is available in the
  // list of themes that can be accessed.
  // 检查有没有设置用户主题?</span>
  <span style="color: #800080;">$theme</span> = !<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$user</span>-&gt;theme) &amp;&amp; drupal_theme_access(<span style="color: #800080;">$user</span>-&gt;theme) ? <span style="color: #800080;">$user</span>-&gt;theme : variable_get('theme_default', 'bartik'<span style="color: #000000;">);

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Allow modules to override the theme. Validation has already been performed
  // inside menu_get_custom_theme(), so we do not need to check it again here.
  // 检查有没有设置自定义主题？</span>
  <span style="color: #800080;">$custom_theme</span> =<span style="color: #000000;"> menu_get_custom_theme();
  </span><span style="color: #800080;">$theme</span> = !<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$custom_theme</span>) ? <span style="color: #800080;">$custom_theme</span> : <span style="color: #800080;">$theme</span><span style="color: #000000;">;

  </span>... ...<span style="color: #000000;">
}</span></pre>
</div>
<p><br />system模块实现了hook_custom_theme()钩子，检查当前请求menu是否属于admin：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> system_custom_theme() {
  </span><span style="color: #0000ff;">if</span> (user_access('view the administration theme') &amp;&amp;<span style="color: #000000;"> path_is_admin(current_path())) {
    </span><span style="color: #0000ff;">return</span> variable_get('admin_theme'<span style="color: #000000;">);
  }
}

</span><span style="color: #0000ff;">function</span> path_is_admin(<span style="color: #800080;">$path</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$path_map</span> = &amp;drupal_static(<span style="color: #ff00ff;">__FUNCTION__</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$path_map</span>['admin'][<span style="color: #800080;">$path</span><span style="color: #000000;">])) {
    </span><span style="color: #800080;">$patterns</span> =<span style="color: #000000;"> path_get_admin_paths();
    </span><span style="color: #800080;">$path_map</span>['admin'][<span style="color: #800080;">$path</span>] = drupal_match_path(<span style="color: #800080;">$path</span>, <span style="color: #800080;">$patterns</span>['admin'<span style="color: #000000;">]);
    </span><span style="color: #800080;">$path_map</span>['non_admin'][<span style="color: #800080;">$path</span>] = drupal_match_path(<span style="color: #800080;">$path</span>, <span style="color: #800080;">$patterns</span>['non_admin'<span style="color: #000000;">]);
  }
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$path_map</span>['admin'][<span style="color: #800080;">$path</span>] &amp;&amp; !<span style="color: #800080;">$path_map</span>['non_admin'][<span style="color: #800080;">$path</span><span style="color: #000000;">];
}</span></pre>
</div>
<p>system_custom_theme()调用path_is_admin()检查请求是否属于admin。path_is_admin()再调用path_get_admin_paths()返回哪些请求是admin，哪些请求是non_admin。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> path_get_admin_paths() {
  </span><span style="color: #800080;">$patterns</span> = &amp;drupal_static(<span style="color: #ff00ff;">__FUNCTION__</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$patterns</span><span style="color: #000000;">)) {
    </span><span style="color: #800080;">$paths</span> = module_invoke_all('admin_paths'<span style="color: #000000;">);
    drupal_alter(</span>'admin_paths', <span style="color: #800080;">$paths</span><span style="color: #000000;">);
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Combine all admin paths into one array, and likewise for non-admin paths,
    // for easier handling.</span>
    <span style="color: #800080;">$patterns</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
    </span><span style="color: #800080;">$patterns</span>['admin'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
    </span><span style="color: #800080;">$patterns</span>['non_admin'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
    </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$paths</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$path</span> =&gt; <span style="color: #800080;">$enabled</span><span style="color: #000000;">) {
      </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$enabled</span><span style="color: #000000;">) {
        </span><span style="color: #800080;">$patterns</span>['admin'][] = <span style="color: #800080;">$path</span><span style="color: #000000;">;
      }
      </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        </span><span style="color: #800080;">$patterns</span>['non_admin'][] = <span style="color: #800080;">$path</span><span style="color: #000000;">;
      }
    }
    </span><span style="color: #800080;">$patterns</span>['admin'] = <span style="color: #008080;">implode</span>("\n", <span style="color: #800080;">$patterns</span>['admin'<span style="color: #000000;">]);
    </span><span style="color: #800080;">$patterns</span>['non_admin'] = <span style="color: #008080;">implode</span>("\n", <span style="color: #800080;">$patterns</span>['non_admin'<span style="color: #000000;">]);
  }
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$patterns</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>path_get_admin_paths()如何判断请求是admin还是non_admin？这又要调用另外一个钩子hook_admin_paths()。system模块就实现了这个钩子：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> system_admin_paths() {
  </span><span style="color: #800080;">$paths</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'admin' =&gt; <span style="color: #0000ff;">TRUE</span>,
    'admin/*' =&gt; <span style="color: #0000ff;">TRUE</span>,
    'batch' =&gt; <span style="color: #0000ff;">TRUE</span>,
    <span style="color: #008000;">//</span><span style="color: #008000;"> This page should not be treated as administrative since it outputs its
    // own content (outside of any administration theme).</span>
    'admin/reports/status/php' =&gt; <span style="color: #0000ff;">FALSE</span>,<span style="color: #000000;">
  );
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$paths</span><span style="color: #000000;">;
}</span></pre>
</div>
<p><br />总结一下：<br />1. system模块通过实现hook_admin_paths()钩子定义了所有以admin/开头的请求都属于admin请求。<br />2. system模块通过实现hook_custom_theme()钩子定义了所有admin请求都使用admin_theme。</p>]]></description></item><item><title>Jenkins 构建JavaHelloWorld</title><link>http://www.cnblogs.com/eastson/archive/2014/05/23/3747065.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 23 May 2014 02:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/23/3747065.html</guid><description><![CDATA[<p>原文地址：<a href="http://www.cnblogs.com/itech/archive/2011/11/03/2234662.html">http://www.cnblogs.com/itech/archive/2011/11/03/2234662.html</a><br /><br /></p>
<p>注意：我们知道Jenkins通过master/slave来支持分布式的job运行，这里的JavaHelloworld运行在master，即Jenkins所在的机器。</p>
<p>&nbsp;</p>
<p>一 Java的HelloWorld程序&nbsp;</p>
<p>Ant构建脚本：c:\JavaHelloWorld\build.xml&nbsp;</p>
<div>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<div><span>&lt;</span><span>project&nbsp;</span><span>name</span><span>="HelloWorld"</span><span>&nbsp;basedir</span><span>="."</span><span>&nbsp;default</span><span>="main"</span><span>&gt;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>property&nbsp;</span><span>name</span><span>="src.dir"</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value</span><span>="src"</span><span>/&gt;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>property&nbsp;</span><span>name</span><span>="build.dir"</span><span>&nbsp;&nbsp;&nbsp;value</span><span>="build"</span><span>/&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>property&nbsp;</span><span>name</span><span>="classes.dir"</span><span>&nbsp;value</span><span>="${build.dir}/classes"</span><span>/&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>property&nbsp;</span><span>name</span><span>="jar.dir"</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value</span><span>="${build.dir}/jar"</span><span>/&gt;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>property&nbsp;</span><span>name</span><span>="main-class"</span><span>&nbsp;&nbsp;value</span><span>="oata.HelloWorld"</span><span>/&gt;</span><br /><br /><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>target&nbsp;</span><span>name</span><span>="clean"</span><span>&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>delete&nbsp;</span><span>dir</span><span>="${build.dir}"</span><span>/&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/</span><span>target</span><span>&gt;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>target&nbsp;</span><span>name</span><span>="compile"</span><span>&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>mkdir&nbsp;</span><span>dir</span><span>="${classes.dir}"</span><span>/&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>javac&nbsp;</span><span>srcdir</span><span>="${src.dir}"</span><span>&nbsp;destdir</span><span>="${classes.dir}"</span><span>/&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/</span><span>target</span><span>&gt;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>target&nbsp;</span><span>name</span><span>="jar"</span><span>&nbsp;depends</span><span>="compile"</span><span>&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>mkdir&nbsp;</span><span>dir</span><span>="${jar.dir}"</span><span>/&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>jar&nbsp;</span><span>destfile</span><span>="${jar.dir}/${ant.project.name}.jar"</span><span>&nbsp;basedir</span><span>="${classes.dir}"</span><span>&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>manifest</span><span>&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>attribute&nbsp;</span><span>name</span><span>="Main-Class"</span><span>&nbsp;value</span><span>="${main-class}"</span><span>/&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/</span><span>manifest</span><span>&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/</span><span>jar</span><span>&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/</span><span>target</span><span>&gt;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>target&nbsp;</span><span>name</span><span>="run"</span><span>&nbsp;depends</span><span>="jar"</span><span>&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>java&nbsp;</span><span>jar</span><span>="${jar.dir}/${ant.project.name}.jar"</span><span>&nbsp;fork</span><span>="true"</span><span>/&gt;</span><br />&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;/</span><span>target</span><span>&gt;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>target&nbsp;</span><span>name</span><span>="clean-build"</span><span>&nbsp;depends</span><span>="clean,jar"</span><span>/&gt;</span><br /><br />&nbsp;&nbsp;&nbsp;&nbsp;<span>&lt;</span><span>target&nbsp;</span><span>name</span><span>="main"</span><span>&nbsp;depends</span><span>="clean,run"</span><span>/&gt;</span><br /><br /><span>&lt;/</span><span>project</span><span>&gt;</span></div>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>

</div>

</div>
<p>&nbsp;</p>
<p>&nbsp;Java的helloworld： c:\JavaHelloWorld\src\oata\helloworld.java</p>
<div class="cnblogs_code">
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>
<div>package&nbsp;oata;<br /><br />public&nbsp;class&nbsp;HelloWorld&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println("Hello&nbsp;World");<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}</div>
<div class="cnblogs_code_toolbar"><span class="cnblogs_code_copy"><a title="复制代码"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" /></a></span></div>

</div>
<p>&nbsp;</p>
<p>二 启动Jenkins且创建job来运行JavaHelloWorld</p>
<p>1） 启动jenkins在8000端口：</p>
<p><img src="http://images.cnblogs.com/cnblogs_com/itech/build/jenkins2.png" alt="" width="668" height="517" />&nbsp;</p>
<p>&nbsp;</p>
<p>2） 创建JavaHelloWorld的job</p>
<p>在ie中打开http://localhost:8000，&nbsp;</p>
<p>单击new job链接，为javahelloworld新建job，且编译job的配置如下：</p>
<p>注意jenkins默认已经安装了svn的plugin了。&nbsp;</p>
<p><img src="http://images.cnblogs.com/cnblogs_com/itech/build/jenkins4.png" alt="" width="756" height="576" />&nbsp;</p>
<p>&nbsp;</p>
<p>3） 运行JavaHelloWorld的job</p>
<p>进入JavaHelloWorld的主页面，点击build now链接进行build，build后可以在此主页面上看到所有的build历史，如下：</p>
<p><img src="http://images.cnblogs.com/cnblogs_com/itech/build/jenkins5.png" alt="" width="765" height="568" />&nbsp;</p>
<p>然后还可以点击某个build的链接，查看某个build的详细日志，如下：</p>
<p><img src="http://images.cnblogs.com/cnblogs_com/itech/build/jenkins6.png" alt="" width="784" height="740" />&nbsp;</p>]]></description></item><item><title>Drupal的$messages是怎么显示的？</title><link>http://www.cnblogs.com/eastson/archive/2014/05/22/3746098.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 22 May 2014 09:15:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/22/3746098.html</guid><description><![CDATA[<p>Drupal的默认主题bartik会在页面顶部显示系统信息，例如警告、状态等。这个过程是如何实现的？<br /><br />首先，在bartik目录下找到page.tpl.php，这是bartik主题的页面显示模板。其中有一段是处理$messages的：</p>
<div class="cnblogs_code">
<pre>&lt;?php <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$messages</span>): ?&gt;
  &lt;div id="messages"&gt;&lt;div <span style="color: #0000ff;">class</span>="section clearfix"&gt;
    &lt;?php <span style="color: #0000ff;">print</span> <span style="color: #800080;">$messages</span>; ?&gt;
  &lt;/div&gt;&lt;/div&gt; &lt;!-- /.section, /<span style="color: #008000;">#</span><span style="color: #008000;">messages --&gt;</span>
&lt;?php <span style="color: #0000ff;">endif</span>; ?&gt;</pre>
</div>
<p><br />这里的$messages变量从哪里来的呢？在includes/theme.inc文件中找到system_process_page()函数，这是对page hook的处理函数，调用了theme('status_messages')输出系统信息HTML。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> template_process_page(&amp;<span style="color: #800080;">$variables</span><span style="color: #000000;">) {
  </span>... ...

  <span style="color: #008000;">//</span><span style="color: #008000;"> Generate messages last in order to capture as many as possible for the
  // current page.</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$variables</span>['messages'<span style="color: #000000;">])) {
    </span><span style="color: #800080;">$variables</span>['messages'] = <span style="color: #800080;">$variables</span>['show_messages'] ? theme('status_messages') : ''<span style="color: #000000;">;
  }
}</span></pre>
</div>
<p><br />status_messages是另外一个theme hook，在system模块的hook_theme钩子中定义：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> system_theme() {
  </span><span style="color: #0000ff;">return</span> <span style="color: #008080;">array_merge</span>(drupal_common_theme(), <span style="color: #0000ff;">array</span>(... ...<span style="color: #000000;">});
}

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> drupal_common_theme() {
  </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'status_messages' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>'variables' =&gt; <span style="color: #0000ff;">array</span>('display' =&gt; <span style="color: #0000ff;">NULL</span>),<span style="color: #000000;">
    )</span>,<span style="color: #000000;">
  };
}</span></pre>
</div>
<p>status_messages hook是用theme_status_messages()函数输出的，在theme.inc里面：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> theme_status_messages(<span style="color: #800080;">$variables</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$display</span> = <span style="color: #800080;">$variables</span>['display'<span style="color: #000000;">];
  </span><span style="color: #800080;">$output</span> = ''<span style="color: #000000;">;

  </span><span style="color: #800080;">$status_heading</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'status' =&gt; t('Status message'),
    'error' =&gt; t('Error message'),
    'warning' =&gt; t('Warning message'),<span style="color: #000000;">
  );
  </span><span style="color: #0000ff;">foreach</span> (drupal_get_messages(<span style="color: #800080;">$display</span>) <span style="color: #0000ff;">as</span> <span style="color: #800080;">$type</span> =&gt; <span style="color: #800080;">$messages</span><span style="color: #000000;">) {
    </span><span style="color: #800080;">$output</span> .= "&lt;div class=\"messages <span style="color: #800080;">$type</span>\"&gt;\n"<span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$status_heading</span>[<span style="color: #800080;">$type</span><span style="color: #000000;">])) {
      </span><span style="color: #800080;">$output</span> .= '&lt;h2 class="element-invisible"&gt;' . <span style="color: #800080;">$status_heading</span>[<span style="color: #800080;">$type</span>] . "&lt;/h2&gt;\n"<span style="color: #000000;">;
    }
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">count</span>(<span style="color: #800080;">$messages</span>) &gt; 1<span style="color: #000000;">) {
      </span><span style="color: #800080;">$output</span> .= " &lt;ul&gt;\n"<span style="color: #000000;">;
      </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$messages</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$message</span><span style="color: #000000;">) {
        </span><span style="color: #800080;">$output</span> .= '  &lt;li&gt;' . <span style="color: #800080;">$message</span> . "&lt;/li&gt;\n"<span style="color: #000000;">;
      }
      </span><span style="color: #800080;">$output</span> .= " &lt;/ul&gt;\n"<span style="color: #000000;">;
    }
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
      </span><span style="color: #800080;">$output</span> .= <span style="color: #800080;">$messages</span>[0<span style="color: #000000;">];
    }
    </span><span style="color: #800080;">$output</span> .= "&lt;/div&gt;\n"<span style="color: #000000;">;
  }
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$output</span><span style="color: #000000;">;
}</span></pre>
</div>
<p><br />theme_status_messages()函数调用drupal_get_message()获取系统信息，与此对应地设置系统信息的函数是drupal_set_message()。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_set_message(<span style="color: #800080;">$message</span> = <span style="color: #0000ff;">NULL</span>, <span style="color: #800080;">$type</span> = 'status', <span style="color: #800080;">$repeat</span> = <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$message</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_SESSION</span>['messages'][<span style="color: #800080;">$type</span><span style="color: #000000;">])) {
      </span><span style="color: #800080;">$_SESSION</span>['messages'][<span style="color: #800080;">$type</span>] = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
    }

    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$repeat</span> || !<span style="color: #008080;">in_array</span>(<span style="color: #800080;">$message</span>, <span style="color: #800080;">$_SESSION</span>['messages'][<span style="color: #800080;">$type</span><span style="color: #000000;">])) {
      </span><span style="color: #800080;">$_SESSION</span>['messages'][<span style="color: #800080;">$type</span>][] = <span style="color: #800080;">$message</span><span style="color: #000000;">;
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Mark this page as being uncacheable.</span>
    drupal_page_is_cacheable(<span style="color: #0000ff;">FALSE</span><span style="color: #000000;">);
  }

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Messages not set when DB connection fails.</span>
  <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_SESSION</span>['messages']) ? <span style="color: #800080;">$_SESSION</span>['messages'] : <span style="color: #0000ff;">NULL</span><span style="color: #000000;">;
}

</span><span style="color: #0000ff;">function</span> drupal_get_messages(<span style="color: #800080;">$type</span> = <span style="color: #0000ff;">NULL</span>, <span style="color: #800080;">$clear_queue</span> = <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$messages</span> =<span style="color: #000000;"> drupal_set_message()) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$type</span><span style="color: #000000;">) {
      </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$clear_queue</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">unset</span>(<span style="color: #800080;">$_SESSION</span>['messages'][<span style="color: #800080;">$type</span><span style="color: #000000;">]);
      }
      </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$messages</span>[<span style="color: #800080;">$type</span><span style="color: #000000;">])) {
        </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">array</span>(<span style="color: #800080;">$type</span> =&gt; <span style="color: #800080;">$messages</span>[<span style="color: #800080;">$type</span><span style="color: #000000;">]);
      }
    }
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
      </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$clear_queue</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">unset</span>(<span style="color: #800080;">$_SESSION</span>['messages'<span style="color: #000000;">]);
      }
      </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$messages</span><span style="color: #000000;">;
    }
  }
  </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">array</span><span style="color: #000000;">();
}</span></pre>
</div>
<p><br />从theme_status_messages()可知，系统信息有三类：status、error、warning。每一类系统信息对应一个css样式，在system.messages.css中定义。换句话说，不同类别的系统信息，显示的图标和字体都在system.messages.css中控制。</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">div.messages </span>{<span style="color: #ff0000;">
  background-position</span>:<span style="color: #0000ff;"> 8px 8px</span>; <span style="color: #008000;">/*</span><span style="color: #008000;"> LTR </span><span style="color: #008000;">*/</span><span style="color: #ff0000;">
  background-repeat</span>:<span style="color: #0000ff;"> no-repeat</span>;<span style="color: #ff0000;">
  border</span>:<span style="color: #0000ff;"> 1px solid</span>;<span style="color: #ff0000;">
  margin</span>:<span style="color: #0000ff;"> 6px 0</span>;<span style="color: #ff0000;">
  padding</span>:<span style="color: #0000ff;"> 10px 10px 10px 50px</span>; <span style="color: #008000;">/*</span><span style="color: #008000;"> LTR </span><span style="color: #008000;">*/</span>
}<span style="color: #800000;">

div.status </span>{<span style="color: #ff0000;">
  background-image</span>:<span style="color: #0000ff;"> url(../../misc/message-24-ok.png)</span>;<span style="color: #ff0000;">
  border-color</span>:<span style="color: #0000ff;"> #be7</span>;
}<span style="color: #800000;">

div.warning </span>{<span style="color: #ff0000;">
  background-image</span>:<span style="color: #0000ff;"> url(../../misc/message-24-warning.png)</span>;<span style="color: #ff0000;">
  border-color</span>:<span style="color: #0000ff;"> #ed5</span>;
}<span style="color: #800000;">

div.error </span>{<span style="color: #ff0000;">
  background-image</span>:<span style="color: #0000ff;"> url(../../misc/message-24-error.png)</span>;<span style="color: #ff0000;">
  border-color</span>:<span style="color: #0000ff;"> #ed541d</span>;
}</pre>
</div>]]></description></item><item><title>工作流和过程自动化框架 Camunda BPM</title><link>http://www.cnblogs.com/eastson/archive/2014/05/22/3744917.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 22 May 2014 00:43:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/22/3744917.html</guid><description><![CDATA[<p>Camunda BPM 是一个灵活的工作流和过程自动化框架，它的核心是一个在Java虚拟机内部运行的原生BPMN 2.0流程引擎，因此它可以嵌入到任何Java应用程序或运行时容器中。Camunda BPM与Java EE 6集成，并可以与Spring Framework完美匹配。</p>
<p><img src="http://images.cnitblog.com/i/111826/201405/220841594652618.jpg" alt="" /></p>
<p>Camunda BPM平台还提供了一套丰富的、围绕BPM生命周期的组件：</p>
<ul>
<li>流程实现和执行组件：camunda engine（负责执行BPMN 2.0流程）、REST API、Spring/CDI集成</li>
<li>流程设计组件：camunda modeler、camunda cycle</li>
<li>流程操作组件：camunda engine、camunda cockpit</li>
<li>人工任务管理组件：camunda tasklist</li>
<li>其他组件：<a href="https://github.com/camunda/camunda-bpmn.js" target="_blank">camunda-bpmn.js</a>（完整的BPMN工具包）、<a href="https://github.com/camunda/camunda-bpm-incubation" target="_blank">camunda BPM incubation</a>（新创意孵化器）</li>
</ul>
<p>Camunda BPM官方网站：<a href="http://camunda.org/">http://camunda.org/</a><br />Camunda BPM PHP SDK：<a href="http://camunda.github.io/camunda-bpm-php-sdk/">http://camunda.github.io/camunda-bpm-php-sdk/<br /></a>Camunda BPM Examples：<a href="https://github.com/camunda/camunda-bpm-examples">https://github.com/camunda/camunda-bpm-examples</a></p>]]></description></item><item><title>android开发中WebView的使用(附完整程序)</title><link>http://www.cnblogs.com/eastson/archive/2014/05/19/3736779.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 19 May 2014 06:32:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/19/3736779.html</guid><description><![CDATA[<p>原文地址：<a href="http://www.pocketdigi.com/20110216/176.html">http://www.pocketdigi.com/20110216/176.html<br /></a></p>
<p>WebView是个好东西，作用相当于一个迷你的浏览器，采用Webkit内核，因此完美支持html,javascript,css等。有时候，我们完全可以把UI甚至数据处理都交给WebView，配合PHP等服务端程序，这样Android开发就变成了网页开发，可以省很多精力。<br />下面是一个WebView的简单例子，如果用把所有功能都交给服务端脚本处理，这个程序已经很完整了，你只要写好网页，把URL填上，再编译，就是一个新软件。<br />程序功能介绍：打开网页同时显示一个ProgressDialog,网页载入完毕则隐藏，点击页面上链接时再次显示ProgressDialog,载入完隐藏，可用返回键返回上一页。<br />XML布局：&nbsp;</p>
<div class="wp_syntax">
<table>
<tbody>
<tr>
<td class="line_numbers">
<pre>1
2
3
4
5
6
7
8
9
10
</pre>
</td>
<td class="code">
<pre class="xml"><span><span>&lt;?xml</span> <span>version</span>=<span>"1.0"</span> <span>encoding</span>=<span>"UTF-8"</span><span>?&gt;</span></span>
<span><span>&lt;AbsoluteLayout</span> <span>android:orientation</span>=<span>"vertical"</span> <span>android:id</span>=<span>"@+id/tab1"</span> <span>android:layout_width</span>=<span>"fill_parent"</span> <span>android:layout_height</span>=<span>"fill_parent"</span></span>
<span>  <span>xmlns:android</span>=<span>"http://schemas.android.com/apk/res/android"</span><span>&gt;</span></span>
    <span><span>&lt;WebView</span> <span>android:id</span>=<span>"@+id/wv"</span></span>
<span>    	<span>android:layout_width</span>=<span>"fill_parent"</span></span>
<span>    	<span>android:layout_height</span>=<span>"fill_parent"</span></span>
<span>    	<span>android:layout_x</span>=<span>"0.0dip"</span></span>
<span>    	<span>android:layout_y</span>=<span>"0.0dip"</span></span>
<span>    	<span>android:layout_weight</span>=<span>"1.0"</span> <span>/&gt;</span></span>
<span><span>&lt;/AbsoluteLayout&gt;</span></span></pre>
</td>
</tr>
</tbody>
</table>
</div>
<p>&nbsp;</p>
<p>JAVA代码：&nbsp;</p>
<div class="wp_syntax">
<table>
<tbody>
<tr>
<td class="line_numbers">
<pre>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
</pre>
</td>
<td class="code">
<pre class="java"><span>package</span> <span>com.pocketdigi.webview</span><span>;</span>
&nbsp;
<span>import</span> <span>android.app.Activity</span><span>;</span>
<span>import</span> <span>android.app.AlertDialog</span><span>;</span>
<span>import</span> <span>android.app.ProgressDialog</span><span>;</span>
<span>import</span> <span>android.content.DialogInterface</span><span>;</span>
<span>import</span> <span>android.os.Bundle</span><span>;</span>
<span>import</span> <span>android.os.Handler</span><span>;</span>
<span>import</span> <span>android.os.Message</span><span>;</span>
<span>import</span> <span>android.view.KeyEvent</span><span>;</span>
<span>import</span> <span>android.webkit.WebChromeClient</span><span>;</span>
<span>import</span> <span>android.webkit.WebView</span><span>;</span>
<span>import</span> <span>android.webkit.WebViewClient</span><span>;</span>
&nbsp;
<span>public</span> <span>class</span> main <span>extends</span> Activity <span>{</span>
    <span>/** Called when the activity is first created. */</span>
	WebView wv<span>;</span>
	ProgressDialog pd<span>;</span>
	Handler handler<span>;</span>
    @Override
    <span>public</span> <span>void</span> onCreate<span>(</span>Bundle savedInstanceState<span>)</span> <span>{</span>
        <span>super</span>.<span>onCreate</span><span>(</span>savedInstanceState<span>)</span><span>;</span>
        setContentView<span>(</span>R.<span>layout</span>.<span>main</span><span>)</span><span>;</span>
        init<span>(</span><span>)</span><span>;</span><span>//执行初始化函数</span>
        loadurl<span>(</span>wv,<span>"http://www.pocketdigi.com"</span><span>)</span><span>;</span>
        handler<span>=</span><span>new</span> Handler<span>(</span><span>)</span><span>{</span>
        	<span>public</span> <span>void</span> handleMessage<span>(</span>Message msg<span>)</span>
    	    <span>{</span><span>//定义一个Handler，用于处理下载线程与UI间通讯</span>
    	      <span>if</span> <span>(</span><span>!</span><span>Thread</span>.<span>currentThread</span><span>(</span><span>)</span>.<span>isInterrupted</span><span>(</span><span>)</span><span>)</span>
    	      <span>{</span>
    	        <span>switch</span> <span>(</span>msg.<span>what</span><span>)</span>
    	        <span>{</span>
    	        <span>case</span> <span>0</span><span>:</span>
    	        	pd.<span>show</span><span>(</span><span>)</span><span>;</span><span>//显示进度对话框        	</span>
    	        	<span>break</span><span>;</span>
    	        <span>case</span> <span>1</span><span>:</span>
    	        	pd.<span>hide</span><span>(</span><span>)</span><span>;</span><span>//隐藏进度对话框，不可使用dismiss()、cancel(),否则再次调用show()时，显示的对话框小圆圈不会动。</span>
    	        	<span>break</span><span>;</span>
    	        <span>}</span>
    	      <span>}</span>
    	      <span>super</span>.<span>handleMessage</span><span>(</span>msg<span>)</span><span>;</span>
    	    <span>}</span>
        <span>}</span><span>;</span>
    <span>}</span>
    <span>public</span> <span>void</span> init<span>(</span><span>)</span><span>{</span><span>//初始化</span>
    	wv<span>=</span><span>(</span>WebView<span>)</span>findViewById<span>(</span>R.<span>id</span>.<span>wv</span><span>)</span><span>;</span>
        wv.<span>getSettings</span><span>(</span><span>)</span>.<span>setJavaScriptEnabled</span><span>(</span><span>true</span><span>)</span><span>;</span><span>//可用JS</span>
        wv.<span>setScrollBarStyle</span><span>(</span><span>0</span><span>)</span><span>;</span><span>//滚动条风格，为0就是不给滚动条留空间，滚动条覆盖在网页上</span>
        wv.<span>setWebViewClient</span><span>(</span><span>new</span> WebViewClient<span>(</span><span>)</span><span>{</span>   
            <span>public</span> <span>boolean</span> shouldOverrideUrlLoading<span>(</span><span>final</span> WebView view, <span>final</span> <span>String</span> url<span>)</span> <span>{</span>
            	loadurl<span>(</span>view,url<span>)</span><span>;</span><span>//载入网页</span>
                <span>return</span> <span>true</span><span>;</span>   
            <span>}</span><span>//重写点击动作,用webview载入</span>
&nbsp;
        <span>}</span><span>)</span><span>;</span>
        wv.<span>setWebChromeClient</span><span>(</span><span>new</span> WebChromeClient<span>(</span><span>)</span><span>{</span>
        	<span>public</span> <span>void</span> onProgressChanged<span>(</span>WebView view,<span>int</span> progress<span>)</span><span>{</span><span>//载入进度改变而触发 </span>
             	<span>if</span><span>(</span>progress<span>==</span><span>100</span><span>)</span><span>{</span>
            		handler.<span>sendEmptyMessage</span><span>(</span><span>1</span><span>)</span><span>;</span><span>//如果全部载入,隐藏进度对话框</span>
            	<span>}</span>   
                <span>super</span>.<span>onProgressChanged</span><span>(</span>view, progress<span>)</span><span>;</span>   
            <span>}</span>   
        <span>}</span><span>)</span><span>;</span>
&nbsp;
    	pd<span>=</span><span>new</span> ProgressDialog<span>(</span>main.<span>this</span><span>)</span><span>;</span>
        pd.<span>setProgressStyle</span><span>(</span>ProgressDialog.<span>STYLE_SPINNER</span><span>)</span><span>;</span>
        pd.<span>setMessage</span><span>(</span><span>"数据载入中，请稍候！"</span><span>)</span><span>;</span>
    <span>}</span>
    <span>public</span> <span>boolean</span> onKeyDown<span>(</span><span>int</span> keyCode, <span>KeyEvent</span> event<span>)</span> <span>{</span><span>//捕捉返回键</span>
        <span>if</span> <span>(</span><span>(</span>keyCode <span>==</span> <span>KeyEvent</span>.<span>KEYCODE_BACK</span><span>)</span> <span>&amp;&amp;</span> wv.<span>canGoBack</span><span>(</span><span>)</span><span>)</span> <span>{</span>   
            wv.<span>goBack</span><span>(</span><span>)</span><span>;</span>   
            <span>return</span> <span>true</span><span>;</span>   
        <span>}</span><span>else</span> <span>if</span><span>(</span>keyCode <span>==</span> <span>KeyEvent</span>.<span>KEYCODE_BACK</span><span>)</span><span>{</span>
        	ConfirmExit<span>(</span><span>)</span><span>;</span><span>//按了返回键，但已经不能返回，则执行退出确认</span>
        	<span>return</span> <span>true</span><span>;</span> 
        <span>}</span>   
        <span>return</span> <span>super</span>.<span>onKeyDown</span><span>(</span>keyCode, event<span>)</span><span>;</span>   
    <span>}</span>
    <span>public</span> <span>void</span> ConfirmExit<span>(</span><span>)</span><span>{</span><span>//退出确认</span>
    	AlertDialog.<span>Builder</span> ad<span>=</span><span>new</span> AlertDialog.<span>Builder</span><span>(</span>main.<span>this</span><span>)</span><span>;</span>
    	ad.<span>setTitle</span><span>(</span><span>"退出"</span><span>)</span><span>;</span>
    	ad.<span>setMessage</span><span>(</span><span>"是否退出软件?"</span><span>)</span><span>;</span>
    	ad.<span>setPositiveButton</span><span>(</span><span>"是"</span>, <span>new</span> DialogInterface.<span>OnClickListener</span><span>(</span><span>)</span> <span>{</span><span>//退出按钮</span>
			@Override
			<span>public</span> <span>void</span> onClick<span>(</span>DialogInterface dialog, <span>int</span> i<span>)</span> <span>{</span>
				<span>// TODO Auto-generated method stub</span>
				main.<span>this</span>.<span>finish</span><span>(</span><span>)</span><span>;</span><span>//关闭activity</span>
&nbsp;
			<span>}</span>
		<span>}</span><span>)</span><span>;</span>
    	ad.<span>setNegativeButton</span><span>(</span><span>"否"</span>,<span>new</span> DialogInterface.<span>OnClickListener</span><span>(</span><span>)</span> <span>{</span>
			@Override
			<span>public</span> <span>void</span> onClick<span>(</span>DialogInterface dialog, <span>int</span> i<span>)</span> <span>{</span>
				<span>//不退出不用执行任何操作</span>
			<span>}</span>
		<span>}</span><span>)</span><span>;</span>
    	ad.<span>show</span><span>(</span><span>)</span><span>;</span><span>//显示对话框</span>
    <span>}</span>
    <span>public</span> <span>void</span> loadurl<span>(</span><span>final</span> WebView view,<span>final</span> <span>String</span> url<span>)</span><span>{</span>
    	<span>new</span> <span>Thread</span><span>(</span><span>)</span><span>{</span>
        	<span>public</span> <span>void</span> run<span>(</span><span>)</span><span>{</span>
        		handler.<span>sendEmptyMessage</span><span>(</span><span>0</span><span>)</span><span>;</span>
        		view.<span>loadUrl</span><span>(</span>url<span>)</span><span>;</span><span>//载入网页</span>
        	<span>}</span>
        <span>}</span>.<span>start</span><span>(</span><span>)</span><span>;</span>
    <span>}</span>
&nbsp;
&nbsp;
<span>}</span></pre>
</td>
</tr>
</tbody>
</table>
</div>]]></description></item><item><title>Hybrid App 开发初探：使用 WebView 装载页面</title><link>http://www.cnblogs.com/eastson/archive/2014/05/19/3736692.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 19 May 2014 05:57:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/19/3736692.html</guid><description><![CDATA[<p>原文地址：<a href="http://www.cnblogs.com/lhb25/archive/2012/07/10/hybrid-app-developement.html">http://www.cnblogs.com/lhb25/archive/2012/07/10/hybrid-app-developement.html</a></p>
<p>Hybrid App 是混合模式应用的简称，兼具 Native App 和 Web App 两种模式应用的优势，开发成本低，拥有&nbsp;<a href="http://www.cnblogs.com/lhb25/tag/web/"><strong>Web</strong></a>&nbsp;技术跨平台特性。目前大家所知道的基于中间件的移动开发框架都是采用的 Hybrid 开发模式，例如国外的&nbsp;<a href="http://www.phonegapcn.com/" target="_blank"><strong>PhoneGap</strong></a>、Titanium、Sencha，还有国内的 <a href="http://www.appcan.cn/">AppCan</a>、<a href="http://www.rexsee.com/index.html">Rexsee</a>等等。Hybrid App 开发模式正在被越来越多的公司和开发者所认同，相信将来会成为主流的移动应用开发模式。</p>
<p>&nbsp;&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/36987/2012071017341758.jpg" alt="" /></p>
<p>&nbsp;</p>
<p>　　Hybrid App 融合 Web App 的原理就是嵌入一个WebView组件，可以在这个组件中载入页面，相当于内嵌的浏览器，代码如下：</p>
<div class="cnblogs_Highlighter">
<div>
<div id="highlighter_49738" class="syntaxhighlighter  java">
<table border="0" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="java keyword">import</code>&nbsp;<code class="java plain">android.app.Activity;</code></div>
<div class="line number2 index1 alt1"><code class="java keyword">import</code>&nbsp;<code class="java plain">android.os.Bundle;</code></div>
<div class="line number3 index2 alt2"><code class="java keyword">import</code>&nbsp;<code class="java plain">android.webkit.WebSettings;</code></div>
<div class="line number4 index3 alt1"><code class="java keyword">import</code>&nbsp;<code class="java plain">android.webkit.WebView;</code></div>
<div class="line number5 index4 alt2">&nbsp;</div>
<div class="line number6 index5 alt1"><code class="java keyword">public</code>&nbsp;<code class="java keyword">class</code>&nbsp;<code class="java plain">AActivity </code><code class="java keyword">extends</code>&nbsp;<code class="java plain">Activity{</code></div>
<div class="line number7 index6 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>
<div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Override</code></div>
<div class="line number9 index8 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code>&nbsp;<code class="java keyword">void</code>&nbsp;<code class="java plain">onCreate(Bundle savedInstanceState) {</code></div>
<div class="line number10 index9 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">super</code><code class="java plain">.onCreate(savedInstanceState);</code></div>
<div class="line number11 index10 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// 创建WebView</code></div>
<div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">WebView webView= </code><code class="java keyword">new</code>&nbsp;<code class="java plain">WebView(</code><code class="java keyword">this</code><code class="java plain">);</code></div>
<div class="line number13 index12 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// 切换到内容视图</code></div>
<div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">setContentView(webView);</code></div>
<div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// 获取WebView配置</code></div>
<div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">WebSettings ws = webView.getSettings();</code></div>
<div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// 启用JavaScript</code></div>
<div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">ws.setJavaScriptEnabled(</code><code class="java keyword">true</code><code class="java plain">);</code></div>
<div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// 载入assets目录下的一个页面</code></div>
<div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">webView.loadUrl(</code><code class="java string">"<a href="file:///android_asset/www/BoBox/index.html">file:///android_asset/www/BoBox/index.html</a>"</code><code class="java plain">);</code></div>
<div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div>
<div class="line number22 index21 alt1"><code class="java plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<p>　　还有另一种引入方式是在布局文件中添加 WebView 组件，代码如下：</p>
<div class="cnblogs_Highlighter">
<div>
<div id="highlighter_486311" class="syntaxhighlighter  javascript">
<table border="0" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="javascript plain">&lt;?xml version=</code><code class="javascript string">"1.0"</code>&nbsp;<code class="javascript plain">encoding=</code><code class="javascript string">"utf-8"</code><code class="javascript plain">?&gt;</code></div>
<div class="line number2 index1 alt1"><code class="javascript plain">&lt;LinearLayout xmlns:android=</code><code class="javascript string">"<a href="http://schemas.android.com/apk/res/android">http://schemas.android.com/apk/res/android</a>"</code></div>
<div class="line number3 index2 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">android:orientation=</code><code class="javascript string">"vertical"</code></div>
<div class="line number4 index3 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">android:layout_width=</code><code class="javascript string">"fill_parent"</code></div>
<div class="line number5 index4 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">android:layout_height=</code><code class="javascript string">"fill_parent"</code><code class="javascript plain">&gt;</code></div>
<div class="line number6 index5 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>
<div class="line number7 index6 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">&lt;WebView&nbsp; </code></div>
<div class="line number8 index7 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">android:layout_width=</code><code class="javascript string">"fill_parent"</code></div>
<div class="line number9 index8 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">android:layout_height=</code><code class="javascript string">"wrap_content"</code></div>
<div class="line number10 index9 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">android:id=</code><code class="javascript string">"@+id/webview"</code></div>
<div class="line number11 index10 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">/&gt;</code></div>
<div class="line number12 index11 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>
<div class="line number13 index12 alt2"><code class="javascript plain">&lt;/LinearLayout&gt;</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<div class="cnblogs_Highlighter">
<div>
<div id="highlighter_392153" class="syntaxhighlighter  java">
<table border="0" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="java keyword">import</code>&nbsp;<code class="java plain">android.app.Activity;</code></div>
<div class="line number2 index1 alt1"><code class="java keyword">import</code>&nbsp;<code class="java plain">android.os.Bundle;</code></div>
<div class="line number3 index2 alt2"><code class="java keyword">import</code>&nbsp;<code class="java plain">android.webkit.WebSettings;</code></div>
<div class="line number4 index3 alt1"><code class="java keyword">import</code>&nbsp;<code class="java plain">android.webkit.WebView;</code></div>
<div class="line number5 index4 alt2">&nbsp;</div>
<div class="line number6 index5 alt1"><code class="java keyword">public</code>&nbsp;<code class="java keyword">class</code>&nbsp;<code class="java plain">BActivity </code><code class="java keyword">extends</code>&nbsp;<code class="java plain">Activity{</code></div>
<div class="line number7 index6 alt2">&nbsp;</div>
<div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java color1">@Override</code></div>
<div class="line number9 index8 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code>&nbsp;<code class="java keyword">void</code>&nbsp;<code class="java plain">onCreate(Bundle savedInstanceState) {</code></div>
<div class="line number10 index9 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">super</code><code class="java plain">.onCreate(savedInstanceState);</code></div>
<div class="line number11 index10 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">setContentView(R.layout.webview);</code></div>
<div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// 查找WebView</code></div>
<div class="line number13 index12 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">WebView webView = (WebView) findViewById(R.id.webview);</code></div>
<div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// 获取WebView配置</code></div>
<div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">WebSettings ws = webView.getSettings();</code></div>
<div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// 启用JavaScript</code></div>
<div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">ws.setJavaScriptEnabled(</code><code class="java keyword">true</code><code class="java plain">);</code></div>
<div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">// 在载入assets目录下的一个页面</code></div>
<div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">webView.loadUrl(</code><code class="java string">"<a href="file:///android_asset/www/index.html">file:///android_asset/www/index.html</a>"</code><code class="java plain">);</code></div>
<div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div>
<div class="line number21 index20 alt2"><code class="java plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<p>　　WebView 还有一个非常重要的方法&mdash;&mdash;addJavascriptInterface，可以用来实现 Java 程序和 JavaScript 程序的相互调用，代码如下：</p>
<div class="cnblogs_Highlighter">
<div>
<div id="highlighter_613005" class="syntaxhighlighter  java">
<table border="0" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="java plain">webView.addJavascriptInterface(</code><code class="java keyword">new</code>&nbsp;<code class="java plain">Object(){</code></div>
<div class="line number2 index1 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code>&nbsp;<code class="java keyword">void</code>&nbsp;<code class="java plain">clickOnAndroid(){</code></div>
<div class="line number3 index2 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">mHandler.post(</code><code class="java keyword">new</code>&nbsp;<code class="java plain">Runnable(){</code></div>
<div class="line number4 index3 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">public</code>&nbsp;<code class="java keyword">void</code>&nbsp;<code class="java plain">run(){</code></div>
<div class="line number5 index4 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">webView.loadUrl(</code><code class="java string">"javascript:wave()"</code><code class="java plain">);</code></div>
<div class="line number6 index5 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div>
<div class="line number7 index6 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">});</code></div>
<div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div>
<div class="line number9 index8 alt2"><code class="java plain">}, </code><code class="java string">"demo"</code><code class="java plain">);</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<p>　　页面代码如下：</p>
<div class="cnblogs_Highlighter">
<div>
<div id="highlighter_939420" class="syntaxhighlighter  javascript">
<table border="0" cellspacing="0" cellpadding="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="javascript plain">&lt;script&gt;</code></div>
<div class="line number2 index1 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">function</code>&nbsp;<code class="javascript plain">wave() {</code></div>
<div class="line number3 index2 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">document.getElementById(</code><code class="javascript string">"id"</code><code class="javascript plain">).innerHTML = </code><code class="javascript string">"Hello World!"</code><code class="javascript plain">;</code></div>
<div class="line number4 index3 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div>
<div class="line number5 index4 alt2"><code class="javascript plain">&lt;/script&gt;</code></div>
<div class="line number6 index5 alt1"><code class="javascript plain">&lt;/head&gt;</code></div>
<div class="line number7 index6 alt2"><code class="javascript plain">&lt;body&gt;</code></div>
<div class="line number8 index7 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">&lt;div&gt;</code></div>
<div class="line number9 index8 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">&lt;a href=</code><code class="javascript string">"#"</code>&nbsp;<code class="javascript plain">id=</code><code class="javascript string">"demo"</code>&nbsp;<code class="javascript plain">onclick=</code><code class="javascript string">"window.demo.clickOnAndroid()"</code><code class="javascript plain">&gt;Click Me&lt;/a&gt;</code></div>
<div class="line number10 index9 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">&lt;/div&gt;</code></div>
<div class="line number11 index10 alt2"><code class="javascript plain">&lt;/body&gt;</code></div>
<div class="line number12 index11 alt1"><code class="javascript plain">&lt;/html&gt;</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<p>　　这样，当你点击页面上 Click Me 按钮的时候就会调用 Java 代码中的&nbsp;clickOnAndroid 函数，clickOnAndroid 函数中又调用页面中的 wave 方法。需要注意的是：这个接口在 Android 2.3 版本的模拟器中运行会导致 WebView 崩溃，目前还没有修复。这是一个非常简单的演示 Java 和 JavaScript 相互调用的例子，在实际应用中可以在页面调用的&nbsp;clickOnAndroid 函数中再调用摄像头、通讯录、通知提醒等设备功能。</p>]]></description></item><item><title>DRUPAL 关于 $user 用户权限</title><link>http://www.cnblogs.com/eastson/archive/2014/05/19/3736106.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 19 May 2014 00:48:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/19/3736106.html</guid><description><![CDATA[<p><span>按登录非登录判断：</span></p>
<div class="code">
<div class="dp-highlighter bg_php"><ol class="dp-c" start="1">
<li class="alt"><span><span>&lt;&nbsp;?php&nbsp;&nbsp;</span></span></li>
<li><span><span class="keyword">global</span><span>&nbsp;</span><span class="vars">$user</span><span>;</span><span class="comment">/*是否为登录用户*/</span><span>&nbsp;&nbsp;</span></span></li>
<li class="alt"><span><span class="keyword">if</span><span>&nbsp;(</span><span class="vars">$user</span><span>&nbsp;-&gt;&nbsp;uid){</span><span class="comment">/*如果是当前浏览者为登录用户则显示下面的内容*/</span><span>&nbsp;&nbsp;</span></span></li>
<li><span>&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;;&nbsp;&nbsp;</span></li>
<li class="alt"><span>&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
<li><span><span class="keyword">else</span><span>&nbsp;{</span><span class="comment">/*如果是当前浏览者为非登录用户则显示下面的内容*/</span><span>&nbsp;&nbsp;</span></span></li>
<li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;;&nbsp;&nbsp;</span></li>
<li><span>&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
<li class="alt"><span>?&gt;&nbsp;&nbsp;</span></li>
</ol></div>
</div>
<p><br /><span>按用户uid判断，这个很适合把一些特定区块只显示给管理员：</span></p>
<div class="code">
<div class="dp-highlighter bg_php">
<div class="bar">&nbsp;</div>
<ol class="dp-c" start="1">
<li class="alt"><span><span>&lt;&nbsp;?php&nbsp;&nbsp;</span></span></li>
<li><span><span class="keyword">global</span><span>&nbsp;</span><span class="vars">$user</span><span>;</span><span class="comment">/*是否为登录用户*/</span><span>&nbsp;&nbsp;</span></span></li>
<li class="alt"><span><span class="keyword">if</span><span>&nbsp;(</span><span class="vars">$user</span><span>&nbsp;-&gt;&nbsp;uid&nbsp;==&nbsp;10){</span><span class="comment">/*如果是当前浏览者登录且uid等于10则显示下面的内容*/</span><span>&nbsp;&nbsp;</span></span></li>
<li><span>&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;;&nbsp;&nbsp;</span></li>
<li class="alt"><span>&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
<li><span><span class="keyword">else</span><span>&nbsp;{</span><span class="comment">/*如果是当前浏览者uid不等于10则显示下面的内容*/</span><span>&nbsp;&nbsp;</span></span></li>
<li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;print&nbsp;;&nbsp;&nbsp;</span></li>
<li><span>&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
<li class="alt"><span>?&gt;&nbsp;&nbsp;</span></li>

</ol></div>

</div>
<p><span>按角色判断，给不同用户组显示不同的内容：</span></p>
<div class="code">
<div class="dp-highlighter bg_php">
<div class="bar">&nbsp;</div>
<ol class="dp-c" start="1">
<li class="alt"><span><span>&lt;&nbsp;?php&nbsp;&nbsp;</span></span></li>
<li><span><span class="keyword">global</span><span>&nbsp;</span><span class="vars">$user</span><span>;</span><span class="comment">/*是否为登录用户*/</span><span>&nbsp;&nbsp;</span></span></li>
<li class="alt"><span><span class="keyword">if</span><span>&nbsp;(in_array(</span><span class="string">'vips'</span><span>,</span><span class="vars">$user</span><span>&nbsp;-&gt;roles))&nbsp;{</span><span class="comment">/*假定有一个角色，叫做'vips'，如登录用户属于该用户组，则显示以下内容*/</span><span>&nbsp;&nbsp;</span></span></li>
<li><span>print&nbsp;;&nbsp;&nbsp;</span></li>
<li class="alt"><span>}&nbsp;&nbsp;</span></li>
<li><span><span class="keyword">else</span><span>{</span><span class="comment">/*若不属于'vips';用户组则显示以下内容*/</span><span>&nbsp;&nbsp;</span></span></li>
<li class="alt"><span>print&nbsp;;&nbsp;&nbsp;</span></li>
<li><span>}&nbsp;&nbsp;</span></li>
<li class="alt"><span>?&gt;&nbsp;&nbsp;</span></li>

</ol></div>

</div>
<p><span>判断用户是否有编辑权限：</span></p>
<div class="dp-highlighter bg_php">
<div class="bar">&nbsp;</div>
<ol class="dp-c" start="1"><ol class="dp-c" start="1">
<li class="alt"><span><span>&lt;&nbsp;?php&nbsp;&nbsp;</span></span></li>
<li><span><span class="keyword">if</span><span>&nbsp;(node_access(</span><span class="string">'update'</span><span>,&nbsp;</span><span class="vars">$node</span><span>)){</span><span class="comment">/*如果用户有编辑当前节点的权限，则显示以下内容。*/</span><span>&nbsp;&nbsp;</span></span></li>
<li class="alt"><span>print&nbsp;;<span class="comment">/*通常这儿是当前节点的编辑链接*/</span><span>&nbsp;&nbsp;</span></span></li>
<li><span>}&nbsp;&nbsp;</span></li>
<li class="alt"><span><span class="keyword">else</span><span>{</span><span class="comment">/*如果没有，则显示以下内容。*/</span><span>&nbsp;&nbsp;</span></span></li>
<li><span>print&nbsp;&nbsp;</span></li>
<li class="alt"><span>}&nbsp;&nbsp;</span></li>
<li></li>

</ol></ol></div>]]></description></item><item><title>Delphi中代替WebBrowser控件的第三方控件</title><link>http://www.cnblogs.com/eastson/archive/2014/05/16/3732028.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 16 May 2014 05:38:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/16/3732028.html</guid><description><![CDATA[<p><span>原文地址：<a href="http://blog.csdn.net/nanfeiyannan/article/details/7341492">http://blog.csdn.net/nanfeiyannan/article/details/7341492</a></span></p>
<p><span>这几天，接触到在delphi中内嵌网页，用delphi7自带的TWebBrowser控件，显示的内容与本机IE8显示的不一样，但是跟装IE8之前的IE6显示一个效果。现在赶脚是下面两个原因中的一个：</span></p>
<p><span>1.Navigate这个方法用的有点问题，里面的参数不同及Navigate2等不同方法，调用的IE内核版本不同</span></p>
<p><span>2.这个自带的控件用着不爽，直接换一个第三方控件</span></p>
<p><span>对于第一点，找了半天冒发现什么，赶紧转换思路，于是找到了</span>EmbeddedWB这个第三方控件。。。</p>
<div><span>下载址：<span style="text-decoration: underline;">http://www.delphifans.com/SoftView/SoftView_2705.html</span>或http://d.download.csdn.net/detail/randb/631380</span></div>
<div><span>delphi7中安装方法：</span></div>
<div><span>http://salomi.blog.51cto.com/389282/125954<br /></span></div>
<div><span>另附几个我为了解决这个问题赶脚有用的网址：</span></div>
<div><span>Delphi第三方控件EmbeddedWB的使用方法：</span></div>
<div><span>http://hi.baidu.com/cyrist/blog/item/e8782ea4c64919ec9052eedc.html</span></div>
<div><span>一个具有参考价值的帖子：</span></div>
<div><span>http://topic.csdn.net/u/20120310/12/32b22ac0-8e5f-4f9f-9083-b8c7aaa52380.html?seed=587680286&amp;r=77849641#r_77849641</span></div>
<div><span><span>如何用Delphi调用IE打开网页：</span>http://blog.csdn.net/mrwu9902/article/details/4954555</span></div>
<div><span>关于调用其他浏览器内核的控件（我安装了使用火狐内核的Mozilla ActiveX控件，但是代码调用的时候，报错了，没怎么管了，有兴趣的同仁可以研究下）：</span>
<p style="display: inline !important;">http://topic.csdn.net/u/20090527/09/58387179-3fe8-49d7-9d95-9d9c00767e65.html</p>
</div>
<div>
<div><span>http://topic.csdn.net/u/20120215/17/8501dc38-742e-47cb-bad1-35ef2a7bd0cc.html<br /></span></div>
<div><span>http://delphi.about.com/b/2005/01/15/using-firefox-instead-of-twebbrowser-in-delphi-applications.htm<br /></span></div>
<div><span>http://www.paranoia.clara.net/articles/taming_the_lizard_with_delphi.html<br /></span></div>
<div><span>http://www.adamlock.com/mozilla/</span></div>
<div><span>做了这些功课，希望该问题下周一能够顺利解决。。。。。。</span></div>
<em id="__mceDel">
<span>//////////////////////////////////////2012.03.25更新一下//////////////////////////////////////////////////////////</span></em></div>
<div><span>最近一段时间没时间关注这个问题了，不晓得那个网页是里面用了脚本的原因还是其他什么原因，唉，反正是结果目前还没得到我想要的</span></div>
<div><span>1.EmbeddedWB与TWebBrowser实现效果一样，跟IE8效果不一样，有一种说法是&ldquo;这两个控件调用的不是本机的IE内核，在delphi7中而是调用的IE6内核&rdquo;。。。自己目前还不清楚。。。</span></div>
<div><span>2.谷歌控件</span><span>Delphi Chromium Embedded：http://code.google.com/p/delphichromiumembedded/</span></div>
<div><span>这个装好了以后，要把exe的输出路径设置到DEF/win32/bin，如果修改源代码，貌似是可以不用总是把生成的exe放那个目录的，没实现我想要的效果，就没研究这个问题了。。。</span></div>
<div><span>这个用了之后，打开那个网页的时候，半天没反应，窗口好像死在那了。。。有哪位高手看到这，知道原因的，还请留言指点几句。。。</span></div>
<div><span>3.还有GeckoBrowser for Delphi这个控件，还没研究出来怎么用这玩意。。。</span></div>
<div><span>4.这一种自己可以改变下IE浏览器窗口的显示</span></div>
<div>
<div class="dp-highlighter bg_delphi"><ol class="dp-delphi" start="1">
<li class="alt"><span><span class="keyword">procedure</span><span>&nbsp;OpenInIE(aURL:&nbsp;</span><span class="keyword">string</span><span>);&nbsp;&nbsp;</span></span></li>
<li><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">var</span><span>&nbsp;IE:&nbsp;Variant;&nbsp;&nbsp;</span></span></li>
<li class="alt"><span><span class="keyword">begin</span><span>&nbsp;&nbsp;</span></span></li>
<li><span>&nbsp;&nbsp;&nbsp;&nbsp;IE&nbsp;:=&nbsp;CreateOleObject(<span class="string">'InternetExplorer.Application'</span><span>);&nbsp;&nbsp;</span></span></li>
<li class="alt"><span>&nbsp;&nbsp;</span></li>
<li><span>&nbsp;&nbsp;&nbsp;&nbsp;IE<span class="number">.</span><span>Visible&nbsp;:=&nbsp;</span><span class="keyword">true</span><span>;&nbsp;</span><span class="comment">//可见</span><span>&nbsp;&nbsp;</span></span></li>
<li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;IE<span class="number">.</span><span>left&nbsp;:=&nbsp;</span><span class="number">0</span><span>;&nbsp;&nbsp;</span></span></li>
<li><span>&nbsp;&nbsp;&nbsp;&nbsp;IE<span class="number">.</span><span>top&nbsp;:=&nbsp;</span><span class="number">0</span><span>;&nbsp;&nbsp;</span></span></li>
<li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;IE<span class="number">.</span><span>height&nbsp;:=&nbsp;</span><span class="number">1050</span><span>;&nbsp;</span><span class="comment">//高度</span><span>&nbsp;&nbsp;</span></span></li>
<li><span>&nbsp;&nbsp;&nbsp;&nbsp;IE<span class="number">.</span><span>width&nbsp;:=&nbsp;</span><span class="number">1680</span><span>;&nbsp;</span><span class="comment">//宽度</span><span>&nbsp;&nbsp;</span></span></li>
<li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;IE<span class="number">.</span><span>menubar&nbsp;:=&nbsp;</span><span class="number">0</span><span>;&nbsp;</span><span class="comment">//取消菜单栏</span><span>&nbsp;&nbsp;</span></span></li>
<li><span>&nbsp;&nbsp;&nbsp;&nbsp;IE<span class="number">.</span><span>addressbar&nbsp;:=&nbsp;</span><span class="number">0</span><span>;&nbsp;</span><span class="comment">//取消地址栏</span><span>&nbsp;&nbsp;</span></span></li>
<li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;IE<span class="number">.</span><span>toolbar&nbsp;:=&nbsp;</span><span class="number">0</span><span>;&nbsp;</span><span class="comment">//取消工具栏</span><span>&nbsp;&nbsp;</span></span></li>
<li><span>&nbsp;&nbsp;&nbsp;&nbsp;IE<span class="number">.</span><span>statusbar&nbsp;:=&nbsp;</span><span class="number">0</span><span>;&nbsp;</span><span class="comment">//取消状态栏</span><span>&nbsp;&nbsp;</span></span></li>
<li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;IE<span class="number">.</span><span>resizable&nbsp;:=&nbsp;</span><span class="number">0</span><span>;&nbsp;</span><span class="comment">//不允许用户改变窗口大小</span><span>&nbsp;&nbsp;</span></span></li>
<li><span>&nbsp;&nbsp;&nbsp;&nbsp;IE<span class="number">.</span><span>Navigate(aURL);&nbsp;&nbsp;</span></span></li>
<li class="alt"><span><span class="keyword">end</span><span>;&nbsp;&nbsp;</span></span></li>

</ol></div>

5.
<div class="dp-highlighter bg_delphi">
<div class="bar">&nbsp;</div>
<ol class="dp-delphi" start="1">
<li class="alt"><span><span class="keyword">procedure</span><span>&nbsp;TForm1</span><span class="number">.</span><span>Button2Click(Sender:&nbsp;TObject);&nbsp;&nbsp;</span></span></li>
<li><span><span class="keyword">begin</span><span>&nbsp;&nbsp;</span></span></li>
<li class="alt"><span>&nbsp;&nbsp;ShellExecute(Handle,&nbsp;<span class="string">'open'</span><span>,&nbsp;</span><span class="string">'IExplore.EXE'</span><span>,&nbsp;</span><span class="string">'http://www.baidu.com'</span><span>,&nbsp;</span><span class="keyword">nil</span><span>,&nbsp;SW_SHOWNORMAL);&nbsp;&nbsp;</span></span></li>
<li><span><span class="keyword">end</span><span>;&nbsp;&nbsp;</span></span></li>

</ol></div>

<br />6.</div>
<div>
<div class="dp-highlighter bg_delphi"><ol class="dp-delphi" start="1">
<li class="alt"><span><span class="keyword">procedure</span><span>&nbsp;TIEShowFrm</span><span class="number">.</span><span>FormCreate(Sender:&nbsp;TObject);&nbsp;&nbsp;</span></span></li>
<li><span><span class="keyword">var</span><span>&nbsp;&nbsp;</span></span></li>
<li class="alt"><span>&nbsp;&nbsp;Flags:&nbsp;OLEVariant;&nbsp;&nbsp;</span></li>
<li><span><span class="keyword">begin</span><span>&nbsp;&nbsp;</span></span></li>
<li class="alt"><span>&nbsp;&nbsp;<span class="comment">//WebBrowser1.Navigate(WideString('http://www.baidu.com'),&nbsp;Flags,&nbsp;Flags,&nbsp;Flags,&nbsp;Flags);</span><span>&nbsp;&nbsp;</span></span></li>
<li><span>&nbsp;&nbsp;WebBrowser1<span class="number">.</span><span>Navigate(</span><span class="string">'http://www.baidu.com'</span><span>);&nbsp;&nbsp;</span></span></li>
<li class="alt"><span><span class="keyword">end</span><span>;&nbsp;&nbsp;</span></span></li>

</ol></div>

<br />PS：如果再有什么突破了，就再来补充吧。。。</div>]]></description></item><item><title>最新美行地图Z13升级攻略</title><link>http://www.cnblogs.com/eastson/archive/2014/05/16/3731890.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 16 May 2014 04:04:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/16/3731890.html</guid><description><![CDATA[<p>原文地址：<a href="http://bbs.gpsuu.com/read.php?tid-231134.html">http://bbs.gpsuu.com/read.php?tid-231134.html</a><br /><span style="font-size: small;"><span><span style="font-family: Arial;">&nbsp; 2013</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">年</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">11</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">月</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">16</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">日订车，</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">4S</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">答应送导航，却没有提送什么导航。</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">12</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">月</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">24</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">日提车，</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">DVD</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">导航一体机为恒晨</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">CVD-753I</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">。地图为美行。版本为</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">S10.02.1001-07.06.90.07-CB(Z12)</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">。据了解本版本为夏季版。</span></span></span><span style="font-size: xx-small;"><span><span style="font-family: Arial;">&nbsp;</span></span></span><br /><span style="font-size: xx-small;"><span><span style="font-family: Arial;"><span id="att_53826" class="f12"><span id="td_att53826" class="J_attImg"><img src="http://bbs.gpsuu.com/attachment/thumb/Mon_1401/458_2032683_7c2f1826b992b1c.jpg?91" alt="" border="0" /></span></span></span></span></span><br /><span style="font-size: small;"><span><span style="font-family: 宋体;">一、正版验证</span></span></span><br /><span style="font-size: small;"><span><span style="font-family: Arial;">&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">在美行官网</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">http://www.mxnavi.com/index.jsp&nbsp;&nbsp;-</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">售后服务</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">-</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">正版验证中输入自己内存卡硬件设备号</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">PS</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">：内存卡硬件序列号在内存卡</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">Navione</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">文件下</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">-SerialID.txt</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">中（</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">822F088D4B711FA9******</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">）。就会提示您所查询的设备码</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">822F088D4B711FA9******</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">属美行科技出品的正版汽车导航系统，感谢您的使用！</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">&nbsp;</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">更多信息可致电</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">4008309011.</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">然后查询授权信息，会提示输入软件版本号。版本号为第一张图中的</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">07069007</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">，点击查询提示有新版本可以升级，但是不提供下载。</span></span></span><br /><span style="font-size: small;"><span><span style="font-family: 宋体;">二、下载新版地图包并解压</span></span></span><br /><span style="font-size: small;"><span><span style="font-family: 宋体;">我已经在论坛找到地图包下载地址了</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">&nbsp;</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">附上：</span></span></span><span style="font-size: xx-small;"><span><a id="url_1" href="http://pan.baidu.com/s/1jGiG22a" target="_blank"><span style="font-size: small;">http://pan.baidu.com/s/1jGiG22a</span></a></span></span><br /><span style="font-size: small;"><span><span style="font-family: 宋体;">三、备份内存卡原导航数据</span></span></span><br /><span style="font-size: small;"><span><span style="font-family: 宋体;">把导航卡卸下（往里推下会自动弹出），插入读卡器连接电脑，将内存卡根目录下</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">Navione</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">文件夹和</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">MXNAVI.mx</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">复制到自己电脑</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">E</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">盘或者</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">F</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">盘（无限制）。这样做的目的是防止出现故障。</span></span></span><br /><span style="font-size: small;"><span><span style="font-family: 宋体;">四、</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">保留内存卡</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">MXNAVI.mx</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">和</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">Navione</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">文件夹下</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">SerialID.txt</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">和</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">SN.bin</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">文件，删除其他所有文件。</span></span></span><br /><span style="font-size: small;"><span><span style="font-family: 宋体;">五、</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">把二步骤解压出的文件全部复制到内存卡</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">Navione</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">文件夹下。并将</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">UPF_VDD.conf.txt</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">文件删除</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">.txt</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">后缀，变为</span></span></span><span style="font-size: small;"><span><span style="font-family: Arial;">UPF_VDD.conf</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">。</span></span></span><br /><span style="font-size: small;"><span><span style="font-family: 宋体;">六、</span></span></span><span style="font-size: small;"><span><span style="font-family: 宋体;">把内存卡插入导航一体机，通电，进<span style="color: #ff0000;"><strong>入主界面</strong></span></span></span></span><span style="color: #ff0000;"><strong><span style="font-size: small;"><span style="font-family: Arial;">-</span></span><span style="font-size: small;"><span style="font-family: 宋体;">设置</span></span><span style="font-size: small;"><span style="font-family: Arial;">-</span></span><span style="font-size: small;"><span style="font-family: 宋体;">导航</span></span><span style="font-size: small;"><span style="font-family: Arial;">-</span></span><span style="font-size: small;"><span style="font-family: 宋体;">路径设置</span></span><span style="font-size: small;"><span style="font-family: Arial;">-</span></span><span style="font-size: small;"><span style="font-family: 宋体;">选择</span></span><span style="font-size: small;"><span style="font-family: Arial;">Navione\MXNavi.exe</span></span></strong></span><span style="font-size: small;"><span><span style="font-family: 宋体;">，点击确定。返回主界面，点击导航，进入美行。</span></span></span><br /><span style="font-size: small;"><span><span style="font-family: 宋体;">升级成功。</span></span></span><br /><span style="font-size: xx-small;"><span style="font-size: xx-small;"><span><span style="font-family: Arial;"><span class="f12"><span id="td_att53827" class="J_attImg"><img src="http://bbs.gpsuu.com/attachment/thumb/Mon_1401/458_2032683_bc104aa50737204.jpg?89" alt="" border="0" /></span></span></span></span></span></span></p>
<div id="menu_att53827" class="fl">
<div class="pw_menu">
<div>
<p><span style="font-family: 宋体; font-size: xx-small; line-height: 1.5;">写在最后。</span></p>
</div>
</div>
</div>
<p><span style="color: #ff0000;"><strong><span style="font-size: xx-small;"><span style="font-family: Arial;">1</span></span><span style="font-size: xx-small;"><span style="font-family: 宋体;">、不要想着把</span></span><span style="font-size: xx-small;"><span style="font-family: Arial;">4G</span></span><span style="font-size: xx-small;"><span style="font-family: 宋体;">内存卡换成</span></span><span style="font-size: xx-small;"><span style="font-family: Arial;">8G&nbsp;</span></span><span style="font-size: xx-small;"><span style="font-family: 宋体;">或者其他卡，导航设别的是内存卡的硬件识别码。换了导航卡就要重新花钱买授权码。</span></span></strong></span><br /><span style="color: #ff0000;"><strong><span style="font-size: xx-small;"><span style="font-family: Arial;">2</span></span><span style="font-size: xx-small;"><span style="font-family: 宋体;">、把</span></span><span style="font-size: xx-small;"><span style="font-family: Arial;">SerialID.txt</span></span><span style="font-size: xx-small;"><span style="font-family: 宋体;">保存自己电脑，永远别丢失。里面的数字是自己内存卡的识别码，就算授权码（</span></span><span style="font-size: xx-small;"><span style="font-family: Arial;">SN.bin</span></span><span style="font-size: xx-small;"><span style="font-family: 宋体;">）丢了，也可以在正版验证中通过这个硬件识别码重新下载授权码的。</span></span></strong></span><br /><span style="font-size: xx-small;"><span><span style="font-family: Arial;">3</span></span></span><span style="font-size: xx-small;"><span><span style="font-family: 宋体;">、第一次发帖。不合理处多谅解</span></span></span></p>]]></description></item><item><title>Drupal Form问题汇总</title><link>http://www.cnblogs.com/eastson/archive/2014/05/15/3727601.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 15 May 2014 01:57:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/15/3727601.html</guid><description><![CDATA[<p><strong>问：如何校验和提交表单？</strong><br />答：Drupal允许定义默认的表单校验处理函数和提交处理函数。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> practice_demo_form(<span style="color: #800080;">$form</span>, &amp;<span style="color: #800080;">$form_state</span><span style="color: #000000;">) {
  </span>... ...
  <span style="color: #0000ff;">return</span> <span style="color: #800080;">$form</span><span style="color: #000000;">;
}

</span><span style="color: #0000ff;">function</span> practice_demo_form_validate(<span style="color: #800080;">$form</span>, &amp;<span style="color: #800080;">$form_state</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">if</span> (...<span style="color: #000000;">) {
    form_set_error(</span>...<span style="color: #000000;">);
  }
}

</span><span style="color: #0000ff;">function</span> practice_demo_form_submit(<span style="color: #800080;">$form</span>, &amp;<span style="color: #800080;">$form_state</span><span style="color: #000000;">) {
  </span>... ...<span style="color: #000000;">
}</span></pre>
</div>
<p>这些函数在drupal_prepare_form()中查找：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_prepare_form(<span style="color: #800080;">$form_id</span>, &amp;<span style="color: #800080;">$form</span>, &amp;<span style="color: #800080;">$form_state</span><span style="color: #000000;">) {
  </span>... 

  <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form</span>['#validate'<span style="color: #000000;">])) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Ensure that modules can rely on #validate being set.</span>
    <span style="color: #800080;">$form</span>['#validate'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Check for a handler specific to $form_id.
    // 默认的表单校验函数以_validate结尾</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$form_id</span> . '_validate'<span style="color: #000000;">)) { 
      </span><span style="color: #800080;">$form</span>['#validate'][] = <span style="color: #800080;">$form_id</span> . '_validate'<span style="color: #000000;">;
    }
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Otherwise check whether this is a shared form and whether there is a
    // handler for the shared $form_id.</span>
    <span style="color: #0000ff;">elseif</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form_state</span>['build_info']['base_form_id']) &amp;&amp; <span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$form_state</span>['build_info']['base_form_id'] . '_validate'<span style="color: #000000;">)) {
      </span><span style="color: #800080;">$form</span>['#validate'][] = <span style="color: #800080;">$form_state</span>['build_info']['base_form_id'] . '_validate'<span style="color: #000000;">;
    }
  }

  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form</span>['#submit'<span style="color: #000000;">])) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Ensure that modules can rely on #submit being set.</span>
    <span style="color: #800080;">$form</span>['#submit'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Check for a handler specific to $form_id.
    // 默认的表单提交函数以_submit结尾</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$form_id</span> . '_submit'<span style="color: #000000;">)) {
      </span><span style="color: #800080;">$form</span>['#submit'][] = <span style="color: #800080;">$form_id</span> . '_submit'<span style="color: #000000;">;
    }
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Otherwise check whether this is a shared form and whether there is a
    // handler for the shared $form_id.</span>
    <span style="color: #0000ff;">elseif</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form_state</span>['build_info']['base_form_id']) &amp;&amp; <span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$form_state</span>['build_info']['base_form_id'] . '_submit'<span style="color: #000000;">)) {
      </span><span style="color: #800080;">$form</span>['#submit'][] = <span style="color: #800080;">$form_state</span>['build_info']['base_form_id'] . '_submit'<span style="color: #000000;">;
    }
  }

  </span>...<span style="color: #000000;">
}</span></pre>
</div>
<p>&nbsp;</p>
<p><strong>问：$form_state['build_info']['args']是什么用途？</strong><br />答：$form_state['build_info']['args']是page arguments中除第一个参数外其它所有的参数，第一个参数是表单标识$form_id。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> practice_menu() {
  </span><span style="color: #800080;">$items</span>['practice/demo'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'title' =&gt; 'Demo',
    'page callback' =&gt; 'drupal_get_form',
    <span style="color: #008000;">//</span><span style="color: #008000;"> 第一个参数是表单标识practice_demo_from
    // 第二个参数是ultramen，第三个参数是25</span>
    'page_arguments' =&gt; <span style="color: #0000ff;">array</span>('practice_demo_from', 'ultramen', 25),
    'access callback' =&gt; <span style="color: #0000ff;">TRUE</span>,<span style="color: #000000;">
  );
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$items</span><span style="color: #000000;">;
}

</span><span style="color: #0000ff;">function</span> practice_demo_form(<span style="color: #800080;">$form</span>, &amp;<span style="color: #800080;">$form_state</span>, <span style="color: #800080;">$name</span>, <span style="color: #800080;">$age</span><span style="color: #000000;">) {
  </span>... ...<span style="color: #000000;">
}

</span><span style="color: #0000ff;">function</span> drupal_get_form(<span style="color: #800080;">$form_id</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$form_state</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();

  </span><span style="color: #800080;">$args</span> = <span style="color: #008080;">func_get_args</span><span style="color: #000000;">();
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Remove $form_id from the arguments.</span>
  <span style="color: #008080;">array_shift</span>(<span style="color: #800080;">$args</span><span style="color: #000000;">);
  </span><span style="color: #800080;">$form_state</span>['build_info']['args'] = <span style="color: #800080;">$args</span><span style="color: #000000;">;

  </span><span style="color: #0000ff;">return</span> drupal_build_form(<span style="color: #800080;">$form_id</span>, <span style="color: #800080;">$form_state</span><span style="color: #000000;">);
}</span></pre>
</div>
<p><br /><strong>问：form_build_id是什么？</strong><br />答：Drupal为每个表单定义一个唯一的form build id，是一组随机字符串。form build id在客服端浏览器以hidden field的方式呈现，表单提交时回传给Drupal。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_prepare_form(<span style="color: #800080;">$form_id</span>, &amp;<span style="color: #800080;">$form</span>, &amp;<span style="color: #800080;">$form_state</span><span style="color: #000000;">) {
  </span>... 

  <span style="color: #008000;">//</span><span style="color: #008000;"> Generate a new #build_id for this form, if none has been set already. The
  // form_build_id is used as key to cache a particular build of the form. For
  // multi-step forms, this allows the user to go back to an earlier build, make
  // changes, and re-submit.
  // @see drupal_build_form()
  // @see drupal_rebuild_form()
  // Drupal为每个表单定义一个唯一的form_build_id</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form</span>['#build_id'<span style="color: #000000;">])) {
    </span><span style="color: #800080;">$form</span>['#build_id'] = 'form-' .<span style="color: #000000;"> drupal_random_key();
  }
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> form_buikd_id会在浏览器表单中以hidden的形式出现</span>
  <span style="color: #800080;">$form</span>['form_build_id'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'#type' =&gt; 'hidden',
    '#value' =&gt; <span style="color: #800080;">$form</span>['#build_id'],
    '#id' =&gt; <span style="color: #800080;">$form</span>['#build_id'],
    '#name' =&gt; 'form_build_id',
    <span style="color: #008000;">//</span><span style="color: #008000;"> Form processing and validation requires this value, so ensure the
    // submitted form value appears literally, regardless of custom #tree
    // and #parents being set elsewhere.</span>
    '#parents' =&gt; <span style="color: #0000ff;">array</span>('form_build_id'),<span style="color: #000000;">
  );

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> 同form_build_id</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form_id</span><span style="color: #000000;">)) {
    </span><span style="color: #800080;">$form</span>['form_id'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>'#type' =&gt; 'hidden',
      '#value' =&gt; <span style="color: #800080;">$form_id</span>,
      '#id' =&gt; drupal_html_id("edit-<span style="color: #800080;">$form_id</span>"),
      <span style="color: #008000;">//</span><span style="color: #008000;"> Form processing and validation requires this value, so ensure the
      // submitted form value appears literally, regardless of custom #tree
      // and #parents being set elsewhere.</span>
      '#parents' =&gt; <span style="color: #0000ff;">array</span>('form_id'),<span style="color: #000000;">
    );
  }
  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form</span>['#id'<span style="color: #000000;">])) {
    </span><span style="color: #800080;">$form</span>['#id'] = drupal_html_id(<span style="color: #800080;">$form_id</span><span style="color: #000000;">);
  }

  </span>...<span style="color: #000000;">
}</span></pre>
</div>
<p><img src="http://images.cnitblog.com/i/111826/201405/141540165789354.png" alt="" /><br />form build id用来做什么？Drupal用它来标识缓存的表单数据。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_build_form(<span style="color: #800080;">$form_id</span>, &amp;<span style="color: #800080;">$form_state</span><span style="color: #000000;">) {
  </span>...

  <span style="color: #008000;">//</span><span style="color: #008000;"> If the incoming input contains a form_build_id, we'll check the cache for a
  // copy of the form in question. If it's there, we don't have to rebuild the
  // form to proceed. In addition, if there is stored form_state data from a
  // previous step, we'll retrieve it so it can be passed on to the form
  // processing code.
  // 用$form_state['input']['form_id']标识表单，例如practice_demo_form
  // 用$form_state['input']['form_build_id']标识缓存</span>
  <span style="color: #800080;">$check_cache</span> = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form_state</span>['input']['form_id']) &amp;&amp; <span style="color: #800080;">$form_state</span>['input']['form_id'] == <span style="color: #800080;">$form_id</span> &amp;&amp; !<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$form_state</span>['input']['form_build_id'<span style="color: #000000;">]);
  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$check_cache</span><span style="color: #000000;">) {
    </span><span style="color: #800080;">$form</span> = form_get_cache(<span style="color: #800080;">$form_state</span>['input']['form_build_id'], <span style="color: #800080;">$form_state</span><span style="color: #000000;">);
  }

  </span>...<span style="color: #000000;"> 
}

</span><span style="color: #0000ff;">function</span> drupal_process_form(<span style="color: #800080;">$form_id</span>, &amp;<span style="color: #800080;">$form</span>, &amp;<span style="color: #800080;">$form_state</span><span style="color: #000000;">) {
  </span>...

  <span style="color: #008000;">//</span><span style="color: #008000;"> After processing the form, the form builder or a #process callback may
  // have set $form_state['cache'] to indicate that the form and form state
  // shall be cached. But the form may only be cached if the 'no_cache' property
  // is not set to TRUE. Only cache $form as it was prior to form_builder(),
  // because form_builder() must run for each request to accommodate new user
  // input. Rebuilt forms are not cached here, because drupal_rebuild_form()
  // already takes care of that.
  // 用$form_state['cache']和$form_state['no_cache']标识是否允许表单缓存</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #800080;">$form_state</span>['rebuild'] &amp;&amp; <span style="color: #800080;">$form_state</span>['cache'] &amp;&amp; <span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$form_state</span>['no_cache'<span style="color: #000000;">])) {
    form_set_cache(</span><span style="color: #800080;">$form</span>['#build_id'], <span style="color: #800080;">$unprocessed_form</span>, <span style="color: #800080;">$form_state</span><span style="color: #000000;">);
  }

  </span>...<span style="color: #000000;">
}</span></pre>
</div>
<p><br /><strong>问：form token是什么？</strong><br />答：Drupal为每个表单定义一个form token，与当前session会话关联在一起。form token的存在是为了避免处理长时间未提交的表单。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_prepare_form(<span style="color: #800080;">$form_id</span>, &amp;<span style="color: #800080;">$form</span>, &amp;<span style="color: #800080;">$form_state</span><span style="color: #000000;">) {
  </span>... 

  <span style="color: #008000;">//</span><span style="color: #008000;"> Add a token, based on either #token or form_id, to any form displayed to
  // authenticated users. This ensures that any submitted form was actually
  // requested previously by the user and protects against cross site request
  // forgeries.
  // This does not apply to programmatically submitted forms. Furthermore, since
  // tokens are session-bound and forms displayed to anonymous users are very
  // likely cached, we cannot assign a token for them.
  // During installation, there is no $user yet.</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$user</span>-&gt;uid) &amp;&amp; !<span style="color: #800080;">$form_state</span>['programmed'<span style="color: #000000;">]) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Form constructors may explicitly set #token to FALSE when cross site
    // request forgery is irrelevant to the form, such as search forms.</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form</span>['#token']) &amp;&amp; <span style="color: #800080;">$form</span>['#token'] === <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">) {
      </span><span style="color: #0000ff;">unset</span>(<span style="color: #800080;">$form</span>['#token'<span style="color: #000000;">]);
    }
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Otherwise, generate a public token based on the form id.</span>
    <span style="color: #0000ff;">else</span><span style="color: #000000;"> {
      </span><span style="color: #800080;">$form</span>['#token'] = <span style="color: #800080;">$form_id</span><span style="color: #000000;">;
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> 将form token发送到客户端</span>
      <span style="color: #800080;">$form</span>['form_token'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
        </span>'#id' =&gt; drupal_html_id('edit-' . <span style="color: #800080;">$form_id</span> . '-form-token'),
        '#type' =&gt; 'token',
        '#default_value' =&gt; drupal_get_token(<span style="color: #800080;">$form</span>['#token']),
        <span style="color: #008000;">//</span><span style="color: #008000;"> Form processing and validation requires this value, so ensure the
        // submitted form value appears literally, regardless of custom #tree
        // and #parents being set elsewhere.</span>
        '#parents' =&gt; <span style="color: #0000ff;">array</span>('form_token'),<span style="color: #000000;">
      );
    }
  }

  </span>...<span style="color: #000000;">
}

</span><span style="color: #0000ff;">function</span> drupal_validate_form(<span style="color: #800080;">$form_id</span>, &amp;<span style="color: #800080;">$form</span>, &amp;<span style="color: #800080;">$form_state</span><span style="color: #000000;">) {
  </span>...

  <span style="color: #008000;">//</span><span style="color: #008000;"> If the session token was set by drupal_prepare_form(), ensure that it
  // matches the current user's session.
  // $form['#token']是表单标识，例如practice_demo_form</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form</span>['#token'<span style="color: #000000;">])) {
    </span><span style="color: #0000ff;">if</span> (!drupal_valid_token(<span style="color: #800080;">$form_state</span>['values']['form_token'], <span style="color: #800080;">$form</span>['#token'<span style="color: #000000;">])) {
      </span><span style="color: #800080;">$path</span> =<span style="color: #000000;"> current_path();
      </span><span style="color: #800080;">$query</span> =<span style="color: #000000;"> drupal_get_query_parameters();
      </span><span style="color: #800080;">$url</span> = url(<span style="color: #800080;">$path</span>, <span style="color: #0000ff;">array</span>('query' =&gt; <span style="color: #800080;">$query</span><span style="color: #000000;">));

      </span><span style="color: #008000;">//</span><span style="color: #008000;"> Setting this error will cause the form to fail validation.</span>
      form_set_error('form_token', t('The form has become outdated. Copy any unsaved work in the form below and then &lt;a href="@link"&gt;reload this page&lt;/a&gt;.', <span style="color: #0000ff;">array</span>('@link' =&gt; <span style="color: #800080;">$url</span><span style="color: #000000;">)));

      </span><span style="color: #008000;">//</span><span style="color: #008000;"> Stop here and don't run any further validation handlers, because they
      // could invoke non-safe operations which opens the door for CSRF
      // vulnerabilities.</span>
      <span style="color: #800080;">$validated_forms</span>[<span style="color: #800080;">$form_id</span>] = <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;
      </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
    }
  }

  </span>...<span style="color: #000000;">
}</span></pre>
</div>
<p>&nbsp;</p>
<p><strong>问：$form_state['input']是怎么来的？</strong><br />答：$form_state['input']来自与$_GET或者$_POST，取决于$form_state['method']。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_build_form(<span style="color: #800080;">$form_id</span>, &amp;<span style="color: #800080;">$form_state</span><span style="color: #000000;">) {
  </span>...

  <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form_state</span>['input'<span style="color: #000000;">])) {
    </span><span style="color: #800080;">$form_state</span>['input'] = <span style="color: #800080;">$form_state</span>['method'] == 'get' ? <span style="color: #800080;">$_GET</span> : <span style="color: #800080;">$_POST</span><span style="color: #000000;">;
  }

  </span>...<span style="color: #000000;"> 
}</span></pre>
</div>
<p><br /><strong>问：$form_state['values']是怎么来的？</strong><br />答：$form_state['values']是$form_state['input']经过过滤处理后的结果。$form_state['input']是原始数据，$form_state['values']是过滤后的数据。<br /><br /></p>
<p><strong>问：$form_state['rebuild']是用来做什么的？</strong><br />答：不清楚。<br /><br /><strong>问：$form_state['redirect']是用来做什么的？</strong><br />答：redirect用在表单提交成功后，表示需要重定向的新地址。等同于调用drupal_goto()。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> practice_demo_form_submit(<span style="color: #800080;">$form</span>, &amp;<span style="color: #800080;">$form_state</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$form_state</span>['redirect'] = 'admin/people/expiration'<span style="color: #000000;">;
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> 等同 drupal_goto('admin/people/expiration');</span>
<span style="color: #000000;">}

</span><span style="color: #0000ff;">function</span> drupal_redirect_form(<span style="color: #800080;">$form_state</span><span style="color: #000000;">) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Skip redirection for form submissions invoked via drupal_form_submit().</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$form_state</span>['programmed'<span style="color: #000000;">])) {
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
  }
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Skip redirection if rebuild is activated.</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$form_state</span>['rebuild'<span style="color: #000000;">])) {
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
  }
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Skip redirection if it was explicitly disallowed.</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$form_state</span>['no_redirect'<span style="color: #000000;">])) {
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
  }
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Only invoke drupal_goto() if redirect value was not set to FALSE.</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form_state</span>['redirect']) || <span style="color: #800080;">$form_state</span>['redirect'] !== <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form_state</span>['redirect'<span style="color: #000000;">])) {
      </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">is_array</span>(<span style="color: #800080;">$form_state</span>['redirect'<span style="color: #000000;">])) {
        </span><span style="color: #008080;">call_user_func_array</span>('drupal_goto', <span style="color: #800080;">$form_state</span>['redirect'<span style="color: #000000;">]);
      }
      </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> This function can be called from the installer, which guarantees
        // that $redirect will always be a string, so catch that case here
        // and use the appropriate redirect function.</span>
        <span style="color: #800080;">$function</span> = drupal_installation_attempted() ? 'install_goto' : 'drupal_goto'<span style="color: #000000;">;
        </span><span style="color: #800080;">$function</span>(<span style="color: #800080;">$form_state</span>['redirect'<span style="color: #000000;">]);
      }
    }
    drupal_goto(current_path()</span>, <span style="color: #0000ff;">array</span>('query' =&gt;<span style="color: #000000;"> drupal_get_query_parameters()));
  }
}</span></pre>
</div>
<p>&nbsp;</p>
<p><strong>问：$form_state['submitted']是用来做什么的？</strong><br />答：不清楚。<br /><br /><strong>问：$form_state['executed']是用来做什么的？</strong><br />答：不清楚。<br /><br /><strong>问：$form_state['programmed']是用来做什么的？</strong><br />答：不清楚。<br /><br /><strong>问：$form_state['groups']是用来做什么的？</strong><br />答：不清楚。<br /><br /><strong>问：$form_state['buttons']是用来做什么的？</strong><br />答：buttons是表单中所有的按钮。什么样的元素是按钮？在hook_element_info()中用button_type标识。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> If the form was submitted by the browser rather than via Ajax, then it
// can only have been triggered by a button, and we need to determine which
// button within the constraints of how browsers provide this information.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$element</span>['#button_type'<span style="color: #000000;">])) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> All buttons in the form need to be tracked for
  // form_state_values_clean() and for the form_builder() code that handles
  // a form submission containing no button information in $_POST.</span>
  <span style="color: #800080;">$form_state</span>['buttons'][] = <span style="color: #800080;">$element</span><span style="color: #000000;">;
  </span><span style="color: #0000ff;">if</span> (_form_button_was_clicked(<span style="color: #800080;">$element</span>, <span style="color: #800080;">$form_state</span><span style="color: #000000;">)) {
    </span><span style="color: #800080;">$form_state</span>['triggering_element'] = <span style="color: #800080;">$element</span><span style="color: #000000;">;
  }
}

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> system_element_info() {
  </span><span style="color: #800080;">$types</span>['submit'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'#input' =&gt; <span style="color: #0000ff;">TRUE</span>,
    '#name' =&gt; 'op',
    '#button_type' =&gt; 'submit',
    '#executes_submit_callback' =&gt; <span style="color: #0000ff;">TRUE</span>,
    '#limit_validation_errors' =&gt; <span style="color: #0000ff;">FALSE</span>,
    '#process' =&gt; <span style="color: #0000ff;">array</span>('ajax_process_form'),
    '#theme_wrappers' =&gt; <span style="color: #0000ff;">array</span>('button'),<span style="color: #000000;">
  );
  </span><span style="color: #800080;">$types</span>['button'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'#input' =&gt; <span style="color: #0000ff;">TRUE</span>,
    '#name' =&gt; 'op',
    '#button_type' =&gt; 'submit',
    '#executes_submit_callback' =&gt; <span style="color: #0000ff;">FALSE</span>,
    '#limit_validation_errors' =&gt; <span style="color: #0000ff;">FALSE</span>,
    '#process' =&gt; <span style="color: #0000ff;">array</span>('ajax_process_form'),
    '#theme_wrappers' =&gt; <span style="color: #0000ff;">array</span>('button'),<span style="color: #000000;">
  );
}</span></pre>
</div>
<p><br /><strong>问：$form_state['triggering_element']是用来做什么的？</strong><br />答：triggering_element用来标识是哪个元素触发的表单提交事件。通常是按钮。<br /><br /></p>
<p><strong>问：可不可以为某个表单定制主题？</strong><br />答：可以的。Drupal默认用表单标识作为该表单的主题。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_prepare_form(<span style="color: #800080;">$form_id</span>, &amp;<span style="color: #800080;">$form</span>, &amp;<span style="color: #800080;">$form_state</span><span style="color: #000000;">) {
  </span>... 

  <span style="color: #008000;">//</span><span style="color: #008000;"> If no #theme has been set, automatically apply theme suggestions.
  // theme_form() itself is in #theme_wrappers and not #theme. Therefore, the
  // #theme function only has to care for rendering the inner form elements,
  // not the form itself.</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form</span>['#theme'<span style="color: #000000;">])) {
    </span><span style="color: #800080;">$form</span>['#theme'] = <span style="color: #0000ff;">array</span>(<span style="color: #800080;">$form_id</span>); <span style="color: #008000;">//</span><span style="color: #008000;"> 表单默认主题</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form_state</span>['build_info']['base_form_id'<span style="color: #000000;">])) {
      </span><span style="color: #800080;">$form</span>['#theme'][] = <span style="color: #800080;">$form_state</span>['build_info']['base_form_id'<span style="color: #000000;">];
    }
  }

  </span>...<span style="color: #000000;">
}</span></pre>
</div>
<p><br /><strong>问：可不可以用alter钩子修改表单？</strong><br />答：可以的。Drupal构造表单时，允许为表单定义通用和专用两种alter钩子。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_prepare_form(<span style="color: #800080;">$form_id</span>, &amp;<span style="color: #800080;">$form</span>, &amp;<span style="color: #800080;">$form_state</span><span style="color: #000000;">) {
  </span>... 

  <span style="color: #008000;">//</span><span style="color: #008000;"> Invoke hook_form_alter(), hook_form_BASE_FORM_ID_alter(), and
  // hook_form_FORM_ID_alter() implementations.</span>
  <span style="color: #800080;">$hooks</span> = <span style="color: #0000ff;">array</span>('form'); <span style="color: #008000;">//</span><span style="color: #008000;"> 表单通用钩子</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$form_state</span>['build_info']['base_form_id'<span style="color: #000000;">])) {
    </span><span style="color: #800080;">$hooks</span>[] = 'form_' . <span style="color: #800080;">$form_state</span>['build_info']['base_form_id'<span style="color: #000000;">];
  }
  </span><span style="color: #800080;">$hooks</span>[] = 'form_' . <span style="color: #800080;">$form_id</span>; <span style="color: #008000;">//</span><span style="color: #008000;"> 表单专用钩子</span>
  drupal_alter(<span style="color: #800080;">$hooks</span>, <span style="color: #800080;">$form</span>, <span style="color: #800080;">$form_state</span>, <span style="color: #800080;">$form_id</span><span style="color: #000000;">);

  </span>...<span style="color: #000000;">
}</span></pre>
</div>]]></description></item><item><title>美行四维图新导航地图可以升级了！！</title><link>http://www.cnblogs.com/eastson/archive/2014/05/15/3729287.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 15 May 2014 01:44:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/15/3729287.html</guid><description><![CDATA[<p><span>原文地址：<a href="http://club.1688.com/threadview/29939722.html">http://club.1688.com/threadview/29939722.html</a></span></p>
<p><span>最近好多朋友，经常问我，<span>美行四维图新</span>地图有没有新版出来？美行地图怎么升级？确实 ，自从去年12月23日美行四维图新地图升级以后，到现在都已经半年了，还不见新版本出来，怪不得用户朋友要着急的；这不，在大家的期盼之中，美行四维图形的新版本终于出来了！最新版本是：Y10的版本，如果是最近几天才买的机器，请看一下自己的版本，如果是Y10的，就是最新的版本，是不需要升级的！但遗憾的是到今天为止，暂时只能升级机器缓存为128M的机器，缓存为64M的机器，还要等一些时间，请大家谅解；具体可升级型号为：E路航Q系列机型：<span>Q70</span>，<span>Q50</span>，<span>Q51</span>，<span>Q5</span>，<span>Q3</span>;还有艾酷GPS的机型：<span>A6</span>+,<span>A7</span>，<span>A780</span>，<span>A610</span>等机型可以升级了；其他型号，请来电咨询，或关注我的博客；</span></p>
<p><span>&nbsp;</span></p>
<p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 下面我把新地图的升级方法，讲给大家，希望大家按以下步骤进行；</span></p>
<p><span>1，在浏览器页面输入<span>：<a>http://url.alibaba.com/r/aHR0cDovL3d3dy5jaGluYWV0by5jb207</a>&nbsp;</span>回车；进入官网首页；</span></p>
<p><img src="http://i04.c.aliimg.com/img/ibank/2012/004/896/577698400_154679633.jpg" alt="" width="600" /><br /><br /></p>
<p><span>2，点击：<span>服务中心</span>；回车</span></p>
<p><img src="http://i04.c.aliimg.com/img/ibank/2012/344/996/577699443_154679633.jpg" alt="" width="600" /><br /><br /><span>3，再点击：<span>地图升级指导</span>；然后点击：<span>凡使用正版四维地图的导航仪，请点击</span>；</span></p>
<p><img src="http://i00.c.aliimg.com/img/ibank/2012/515/596/577695515_154679633.jpg" alt="" width="600" /><br /><br /><span>4，进入下载地图的选择界面；</span></p>
<p><img src="http://i01.c.aliimg.com/img/ibank/2012/381/907/577709183_154679633.jpg" alt="" width="600" /><br /><br /><span>5，对于不知道怎么查看自己机器到底是128M还是64M的机器，请按下列方法查看，打开机器进入主菜单，点击&ldquo;<span>工具</span>&rdquo;--再点击：&ldquo;<span>系统资源</span>&rdquo;--点到最左面一项：&ldquo;<span>MEMORY</span>"就可以可能到机器内存状态，是128M还是64M，写的很清楚！<span>只有显示内存总数是128M的才可以下载下面的地图</span>，要不是128M的机器就不要下载了；（因为下面64M机器的地图是2011年的，新版还未出来）</span></p>
<p><img src="http://i03.c.aliimg.com/img/ibank/2012/591/817/577718195_154679633.jpg" alt="" width="600" /><br /><br /><span>6，确定自己的机器缓存是128M的机器，就可以进行下一步：选择第一个下载界面，<span>点击下载</span>；根据自己电脑上安装的下载工具的情况，选择&rdquo;<span>优蛋下载</span>&ldquo;<span>还是电信下载</span>&rdquo;</span></p>
<p><img src="http://i01.c.aliimg.com/img/ibank/2012/246/317/577713642_154679633.jpg" alt="" width="600" /><br /><br />7<span>，等以上地图下载完毕后，在电脑上把下载后的压缩包，全部解压，用优蛋下载的，直接解压一个压缩包，其他的都会自动解压；解压后变成一个文件夹：<span>MXNAVI</span>;容量是3.2G左右；</span></p>
<p><span>8，把自己的GPS导航仪连接到电脑上面，找到GPS导航仪的盘符&ldquo;<span>TFAT</span>",打开，找到里面一个文件夹：<span>MXNAVI</span>, 这个文件夹，就是美行地图的文件，最好把导航仪原来的地图,也就是这个文件夹考到电脑上，做个备份，万一升级失败，可以还原到原来的地图；备份以后，打开电脑上的：<span>MXNAVI</span>"，把这个文件夹里面的一个文件<span>："SN.BIN</span>"拷贝出来，放在电脑桌面上，这个文件是正版地图的激活文件，然后把电脑上，GPS内存里面的文件夹<span>："MXNAVI</span>"给删了；</span></p>
<p><span>9，然后把刚才下载的新地图文件夹"MXNAVI"拷到GPS机器内存里面；</span></p>
<p><span>10，考完地图以后，再把刚才考到桌面上的激活文件&rdquo;<span>SN.BIN</span>"文件拷到新文件夹&ldquo;MXNAVI"里面；然后卸载GPS导航仪，把导航仪从电脑上取下，点一下机器的复位键，开机，就可以进入新的导航地图了！</span></p>
<p><span>11，如果，有朋友忘了备份激活文件，也不要紧，把新地图拷进机器后，先开机，进入地图界面，就会显示一个对话框，你的机器未被激活，或是不是第一次使用，然后看到一串数字和字母组成的机器硬件号码，把这串号码记下来；然后在电脑上进入：<span><a>http://url.alibaba.com/r/aHR0cDovL3d3dy5teG5hdmkuY29tLw==</a></span>；进入<span>美行科技</span>的官网；</span></p>
<p><img src="http://i05.c.aliimg.com/img/ibank/2012/535/327/577723535_154679633.jpg" alt="" width="600" /><br /><br />12，进入<span>：&ldquo;美行科技</span>&rdquo;首页后，点击：&ldquo;<span>售后服务</span>&rdquo;---------下拉菜单，在选择<span>：&ldquo;正版验证</span>&rdquo;&rdquo;</p>
<p><img src="http://i03.c.aliimg.com/img/ibank/2012/562/627/577726265_154679633.jpg" alt="" width="600" /><br /><span>13，在此正版验证专区，输入刚才机器激活界面出现的&ldquo;<span>机器硬件序列号</span>&rdquo;一般是20个数字和字母组成的，以此每四个字符一组，输入上面的方框内&ldquo;输完后，点击&rdquo;<span>查询</span>，就会出来一个提示：你使用的美行科技的正版地图，后面有个&ldquo;<span>点击下载</span>&rdquo;激活文件的按钮，点击，把激活文件&ldquo;SN.BIN:，下载在电脑上，然后</span><span>拷贝到机器内存上的&rdquo;<span>MXNAVI</span>"的文件夹里面，就好了，取下导航仪，开机，就可以进入新地图了；</span></p>
<p><span>&nbsp; &nbsp; 以上是新版美行四维图新正版地图的升级方法，如果你的机器不是美行地图，或者不是美行正版地图，请不要使用此地址下载，否则是浪费时间；再此提醒您：美行四维图新地图最新版版本：<span>Y10</span>;暂时只适合128M的机器使用，其它未列举的型号，请通过以下方式，与我取得联系，进行咨询；</span></p>
<p><span>&nbsp;</span></p>
<p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;重庆GPS导航之家&nbsp;</span></p>
<p><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;李春年</span></p>]]></description></item><item><title>Wince6.0模拟器下载和使用方法</title><link>http://www.cnblogs.com/eastson/archive/2014/05/15/3729204.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 15 May 2014 01:18:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/15/3729204.html</guid><description><![CDATA[<p>原文地址：<a href="http://www.oogps.com/post/Wince6.0.html">http://www.oogps.com/post/Wince6.0.html<br /></a><span>下载地址：</span><a href="http://www.oogps.com/site/?http://kuai.xunlei.com/d/qK5-AAJVUADaMNRR22c">Wince6.0模拟器下载.rar</a><a href="http://www.oogps.com/post/Wince6.0.html"><br /></a></p>
<p>第一步：把软件下载解压后看到以下目录.&nbsp;</p>
<p><img src="http://www.oogps.com/oogps/201106130813172164.jpg" alt="Wince6.0模拟器下载和使用方法" /></p>
<p>&nbsp;第二步：双击运行上图中的Skin_800X480.BAT，运行后得到下图.&nbsp;</p>
<p><img src="http://www.oogps.com/oogps/201106130815464180.jpg" alt="Wince6.0模拟器下载和使用方法" /></p>
<p>&nbsp;第三步：点击上图中的文件－配置得到下图.&nbsp;</p>
<p><img src="http://www.oogps.com/oogps/201106130817286528.jpg" alt="Wince6.0模拟器下载和使用方法" /></p>
<p>&nbsp;第四步：点击上图中红色箭头中的＂...＂，再选择一个文件夹，这时候文件夹里面放的就是你的地图，文件夹可以随便放在哪里都可以．再点确定．</p>
<p>&nbsp;<img src="http://www.oogps.com/oogps/201106130819495062.jpg" alt="Wince6.0模拟器下载和使用方法" /></p>
<p>&nbsp;第五步：运行上图中的我的设备，得到下图．</p>
<p>&nbsp;<img src="http://www.oogps.com/oogps/201106130820571068.jpg" alt="Wince6.0模拟器下载和使用方法" /></p>
<p>&nbsp;第六步：因为第二步和第三步的配置我的设置里面就会有个SDMMC盘．现在给水印遮住了．SDMMC就相当于你导航里面的一个SD卡或者说是导航仪的内置卡．双击打开SDMMCC．得到如下图</p>
<p>&nbsp;<img src="http://www.oogps.com/oogps/201106130824321717.jpg" alt="Wince6.0模拟器下载和使用方法" /></p>
<p>&nbsp;第七步：第二步和第三步设置的目录里面的要模似的地图和程序了．再后面就不用说了吧，不要和我说你没用过导航仪</p>]]></description></item><item><title>美行导航地图更新教程</title><link>http://www.cnblogs.com/eastson/archive/2014/05/15/3729171.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 15 May 2014 01:06:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/15/3729171.html</guid><description><![CDATA[<p><span>原文地址：<a href="http://www.gpshk.cc/thread-47769-1-1.html">http://www.gpshk.cc/thread-47769-1-1.html</a></span></p>
<p><span>一、查看软件版本&nbsp;</span><br /><span>地图升级前请先查看当前的软件版本信息，以确定需要下载的软件类型，可按以下步骤查看版本信息：&nbsp;</span><br /><span>运行导航程序进入地图界面，依次点击【菜单】（或&ldquo;主菜单&rdquo;）&mdash;&gt;【导航设置】&mdash;&gt;【版本信息】&nbsp;</span><br /><img id="aimg_60687" class="zoom" src="http://www.gpshk.cc/data/attachment/forum/month_1112/1112042244e9aa2271a34e33ed.jpg" alt="" width="640" />&nbsp;<br /><span>二、下载新版导航数据&nbsp;&nbsp;</span><br /><span>* 导航数据均使用迅雷下载工具下载，若您的计算机未安装迅雷，请先安装。&nbsp;</span><br /><span>&nbsp;&nbsp;</span><br /><span>1）下载对应类型的（S-PND或MX7）导航主程序&nbsp;</span><br /><span>将导航主程序的下载地址（即：以thunder:// 开头的整个字符串）复制，在迅雷工具中新建任务进行下载&nbsp;</span><br /><img id="aimg_60688" class="zoom" src="http://www.gpshk.cc/data/attachment/forum/month_1112/1112042244f5e51ddadeadb0e6.jpg" alt="" width="640" />&nbsp;<br /><span>2）下载地图数据&nbsp;</span><br /><span>将地图数据的下载地址（即：以thunder:// 开头的整个字符串）复制，在迅雷工具中新建任务进行下载，方法同上&nbsp;</span><br /><span>3）下载&ldquo;3D实景城市&rdquo;数据&nbsp;</span><br /><span>将3D实景城市的下载地址（即：以thunder:// 开头的整个字符串）复制，在迅雷工具中新建任务进行下载，方法同上&nbsp;</span><br /><span>注意：&ldquo;3D实景城市&rdquo;数据只与S-PND软件类型配套使用，MX7用户不用下载该数据！&nbsp;</span><br /><span>&nbsp;&nbsp;</span><br /><span>三、使用数据线将导航仪连接到计算机&nbsp;</span><br /><span>连接前请进入导航仪&ldquo;系统设置&rdquo;&rarr;&ldquo;USB设置&rdquo;菜单，选择&ldquo;MASS storage&rdquo;模式 （U盘模式）&nbsp;&nbsp;</span><br /><span>四、进入导航仪存放导航数据的可移动磁盘，打开&ldquo;MXnavi&rdquo;文件夹，将里面除SN (SN.bin) 文件之外的文件全部删除</span><br /><img id="aimg_60689" class="zoom" src="http://www.gpshk.cc/data/attachment/forum/month_1112/11120422444fea32de9786a30a.jpg" alt="" width="592" />&nbsp;<br /><span>五、将下载的&ldquo;导航主程序&rdquo;文件解压，把&ldquo;MXnavi&rdquo;文件夹里面的所有文件复制到导航仪&ldquo;MXnavi&rdquo;文件夹中</span><br /><img id="aimg_60690" class="zoom" src="http://www.gpshk.cc/data/attachment/forum/month_1112/11120422443f9c8eac5617c8cc.jpg" alt="" width="590" />&nbsp;<br /><span>六、将下载的&ldquo;地图数据&rdquo;文件解压，把BDB文件复制到导航仪&ldquo;MXnavi&rdquo;文件夹中</span><br /><img id="aimg_60691" class="zoom" src="http://www.gpshk.cc/data/attachment/forum/month_1112/1112042244b2fe3cac1dfbb6f9.jpg" alt="" width="528" />&nbsp;<br /><span>七、将下载的&ldquo;3D实景城市&rdquo;文件解压，把ADB文件复制到导航仪&ldquo;MXnavi&rdquo;文件夹中&nbsp;</span><br /><span>注意：S-PND用户需完成此步骤，MX7用户不需进行此步骤！&nbsp;</span><br /><img id="aimg_60692" class="zoom" src="http://www.gpshk.cc/data/attachment/forum/month_1112/1112042244127bdd1c6c826b13.jpg" alt="" width="527" />&nbsp;<br /><span>八、文件复制完成后，断开导航仪与计算机的连接，运行导航即可使用新版数据了。</span></p>]]></description></item><item><title>Apache 整合 Acitve Directory 達成 one single signon</title><link>http://www.cnblogs.com/eastson/archive/2014/05/11/3722104.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 11 May 2014 11:10:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/11/3722104.html</guid><description><![CDATA[<p>原文地址：<a href="http://blog.hsdn.net/1266.html">http://blog.hsdn.net/1266.html</a><br /><br /></p>
<p>我的公司使用AD進行使用者驗證,因此在使用者操作的便利性考量前提下.如何讓使用者不需要重覆輸入帳號與密碼,而直接抓取使用者已經登入AD的帳號資訊,已經變成系統開發必須要考量的項目之一 (至少我自己是這樣認為啦 @@)</p>
<p>.NET整合AD的資訊已經有大大實做成功並且實際運用於目前的系統上.由於都是微軟家族的產品,因此整合上比較容易.<br />但是目前公司存在有Apache+PHP+MySQL on Windows的架構,因此如何讓這樣的架構也可以快速的抓取使用者AD資訊是我今天要介紹的項目.</p>
<p>[版本需求]<br />1. Apache 2.x 以上<br />2. PHP和MySQL都沒有特殊的版本要求,不過我還是建議安裝PHP 5.x和MySQL 4.1.x以上的版本</p>
<p>[安裝過程]<br />1. 將mod_auth_sspi.so (<a href="http://sourceforge.net/projects/mod-auth-sspi" target="_blank">下載位址</a>)放到path_to_apache/modules這個目錄下面<br />2. 在httpd.conf裡面加上下面兩段<br />&nbsp; (1) LoadModule sspi_auth_module modules/mod_auth_sspi.so<br />&nbsp; (2)在需要進行驗證的目錄設定加上下面的內容,並且將AllowOverride開啟<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AuthName "A Protected Place"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AuthType SSPI<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SSPIDomain tpe.compalcomm.com<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SSPIAuth On<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SSPIAuthoritative On<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SSPIOfferBasic On<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; require valid-user<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp; 修改後應該會像這樣<br />&nbsp;&nbsp;&nbsp; &lt;Directory "D:/Develop/htdocs"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp; Options Indexes FollowSymLinks<br />&nbsp;&nbsp;&nbsp;&nbsp; AllowOverride All</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; Order allow,deny<br />&nbsp;&nbsp;&nbsp;&nbsp; Allow from all</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; AuthName "A Protected Place"<br />&nbsp;&nbsp;&nbsp;&nbsp; AuthType SSPI<br />&nbsp;&nbsp;&nbsp;&nbsp; SSPIDomain tpe.compalcomm.com<br />&nbsp;&nbsp;&nbsp;&nbsp; SSPIAuth On<br />&nbsp;&nbsp;&nbsp;&nbsp; SSPIAuthoritative On<br />&nbsp;&nbsp;&nbsp;&nbsp; SSPIOfferBasic On<br />&nbsp;&nbsp;&nbsp;&nbsp; require valid-user<br />&nbsp;&nbsp;&nbsp; &lt;/Directory&gt;<br />3. 重新啟動Apache</p>
<p>[如何抓取使用者登入AD的帳號]<br />程式只有一行,真的只有一行.<br />$_SERVER["REMOTE_USER"] 就只需要這行就可以抓到使用者登入AD的帳號.<br />後面要怎麼達成one single signon,我相信各位程式高手都知道該怎麼做了,我就不獻醜了.</p>
<p>[如何抓取使用者在AD中的其他資訊]<br />我之前有找到一個adLDAP.php的class,只需要確定ldap_binding正常,<br />然後將剛剛抓到的使用者AD帳號傳進去,AD裡面所有的資訊全部都可以抓出來.<br /><a href="http://adldap.sourceforge.net/" target="_blank">adLDAP http://adldap.sourceforge.net/</a></p>]]></description></item><item><title>PHP LDAP class for Active Directory</title><link>http://www.cnblogs.com/eastson/archive/2014/05/11/3722088.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 11 May 2014 10:52:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/11/3722088.html</guid><description><![CDATA[<p><span>A class for PHP to talk to Active Directory through LDAP.</span><br /><a href="http://sourceforge.net/projects/adldap/">http://sourceforge.net/projects/adldap/</a></p>]]></description></item><item><title>PHP 通过LDAP协议，操作Windows Active Directory</title><link>http://www.cnblogs.com/eastson/archive/2014/05/11/3722084.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 11 May 2014 10:46:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/11/3722084.html</guid><description><![CDATA[<p>原文地址：<a href="http://hi.baidu.com/lllangxx/item/3ccb7cdfa13b56eb3dc2cb39">http://hi.baidu.com/lllangxx/item/3ccb7cdfa13b56eb3dc2cb39</a><br /><br /></p>
<p>一、学习如何管理Active Directory</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;Active Directory 循序渐进系列指南</p>
<p>&nbsp;</p>
<p>二、ADExplorer</p>
<p>&nbsp; &nbsp; &nbsp;到网上下载一个ADExplorer，它是Active Directory浏览器，可以让我们更加清楚认识Active Directory的数据存储方式及格式。</p>
<p>三、域外访问Active Directory</p>
<p>&nbsp; &nbsp; &nbsp;确保将域外计算机的 DNS 分析 程序配置 为与 Active Directory 运用 相同的 DNS 名称服务器;在大多数情况下，假定您要运用 Active Directory 集成的 DNS，则我们把此域外计算机的DNS设置为此Active Directory服务器IP地址。</p>
<p>&nbsp; &nbsp; &nbsp; 详细内容请参照《 运用 Active Directory 执行 Linux 客户端身份验证 》</p>
<p>&nbsp;</p>
<p>四、php 代码</p>
<p>&nbsp; &nbsp; &nbsp; 为了使用方便，我使用 adLDAP 来进行编程，这样可以简便很多。</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #0000ff;">require_once</span>(<span style="color: #008080;">dirname</span>(<span style="color: #ff00ff;">__FILE__</span>) . '/adLDAP.php'<span style="color: #000000;">);
 
</span><span style="color: #800080;">$options</span>=<span style="color: #0000ff;">array</span><span style="color: #000000;">();
</span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
    </span><span style="color: #800080;">$options</span>['account_suffix']="@mydomain.com"<span style="color: #000000;">;
    </span><span style="color: #800080;">$options</span>['base_dn']="OU=Accounts,DC=mydomain,DC=com";<span style="color: #008000;">//
</span>    <span style="color: #800080;">$options</span>['domain_controllers']=<span style="color: #0000ff;">array</span>("mydomain.com"<span style="color: #000000;">);
    </span><span style="color: #800080;">$options</span>['ad_username']="administrator"<span style="color: #000000;">;
    </span><span style="color: #800080;">$options</span>['ad_password']="123456"<span style="color: #000000;">;
    </span><span style="color: #800080;">$ldap</span> = <span style="color: #0000ff;">new</span> adLDAP(<span style="color: #800080;">$options</span><span style="color: #000000;">);
}
</span><span style="color: #0000ff;">catch</span> (adLDAPException <span style="color: #800080;">$e</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">echo</span> <span style="color: #800080;">$e</span>; <span style="color: #0000ff;">exit</span><span style="color: #000000;">();   
}
</span><span style="color: #008000;">//</span><span style="color: #008000;">var_dump($ldap);</span>
 
<span style="color: #0000ff;">echo</span> ("&lt;pre&gt;\n"<span style="color: #000000;">);
</span><span style="color: #800080;">$result</span>=<span style="color: #800080;">$ldap</span>-&gt;authenticate("qiujiayu","qiujiayu"<span style="color: #000000;">);
</span><span style="color: #008080;">var_dump</span>(<span style="color: #800080;">$result</span><span style="color: #000000;">);
</span><span style="color: #0000ff;">echo</span>("----------------------------------------------------"<span style="color: #000000;">);
</span><span style="color: #800080;">$result</span>=<span style="color: #800080;">$ldap</span>-&gt;folder_list(<span style="color: #0000ff;">array</span>('Marketing'), ADLDAP_FOLDER, <span style="color: #0000ff;">true</span>,'contact'<span style="color: #000000;">);
</span><span style="color: #008080;">var_dump</span> (<span style="color: #800080;">$result</span><span style="color: #000000;">); 
</span><span style="color: #0000ff;">echo</span>("----------------------------------------------------"<span style="color: #000000;">);
 
</span><span style="color: #800080;">$result</span>=<span style="color: #800080;">$ldap</span>-&gt;<span style="color: #000000;">all_users();
</span><span style="color: #008080;">var_dump</span> (<span style="color: #800080;">$result</span><span style="color: #000000;">); 
</span><span style="color: #0000ff;">echo</span>("----------------------------------------------------"<span style="color: #000000;">);
 
</span><span style="color: #800080;">$result</span>=<span style="color: #800080;">$ldap</span>-&gt;<span style="color: #000000;">all_contacts();
</span><span style="color: #008080;">var_dump</span> (<span style="color: #800080;">$result</span><span style="color: #000000;">); 
</span><span style="color: #0000ff;">echo</span>(json_encode( (<span style="color: #800080;">$ldap</span>-&gt;contact_info(<span style="color: #800080;">$result</span>[0],<span style="color: #0000ff;">array</span>('telephonenumber'<span style="color: #000000;">)))));
</span><span style="color: #0000ff;">echo</span>("----------------------------------------------------"<span style="color: #000000;">);
</span>?&gt;</pre>
</div>]]></description></item><item><title>ADexplorer - 用来查看AD的工具</title><link>http://www.cnblogs.com/eastson/archive/2014/05/11/3722075.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 11 May 2014 10:41:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/11/3722075.html</guid><description><![CDATA[<p><a href="http://www.uzzf.com/soft/32747.html"><strong>ADExplorer</strong></a><span>是一款可以帮助查看和编辑数据库的软件。该</span><strong>数据库查看编辑器</strong><span>使用方便，操作简单，用户可通过该软件进行浏览AD数据库、自定义快速入口、查看对象属性、编辑权限、精确搜索等操作，还可以保存数据库的快照。</span><br /><img src="http://images.cnitblog.com/i/111826/201405/111840011826202.jpg" alt="" /></p>]]></description></item><item><title>Ldap登陆AD(Active Directory)进行认证的Java示例</title><link>http://www.cnblogs.com/eastson/archive/2014/05/11/3722063.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 11 May 2014 10:33:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/11/3722063.html</guid><description><![CDATA[<p>原文地址：<a href="http://hi.baidu.com/js2007/item/24efbb0fae1c9b90a3df432a">http://hi.baidu.com/js2007/item/24efbb0fae1c9b90a3df432a</a><br /><br /></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> LdapTest;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.Hashtable;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.Context;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.NamingEnumeration;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.NamingException;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.AuthenticationException;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.directory.SearchControls;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.directory.SearchResult;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.ldap.Control;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.ldap.InitialLdapContext;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.ldap.LdapContext;
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> AuthenticationTest {
   
</span><span style="color: #0000ff;">private</span> String BASE_DN ="dc=statestreet,dc=com"<span style="color: #000000;">; 
</span><span style="color: #008000;">//</span><span style="color: #008000;"> private DirContext ctx = null;</span>
    <span style="color: #0000ff;">private</span> LdapContext ctx = <span style="color: #0000ff;">null</span><span style="color: #000000;">;     
    </span><span style="color: #0000ff;">private</span> Hashtable env = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">private</span> Control[] connCtls = <span style="color: #0000ff;">null</span><span style="color: #000000;">; 
    
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> LdapConnect(){
        env </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> Hashtable();
        env.put(Context.INITIAL_CONTEXT_FACTORY, </span>"com.sun.jndi.ldap.LdapCtxFactory"<span style="color: #000000;">);
        env.put(Context.PROVIDER_URL, </span>");    
        env.put(Context.SECURITY_AUTHENTICATION, "simple"<span style="color: #000000;">);
        env.put(Context.SECURITY_PRINCIPAL, </span>"cn=Manager,dc=statestreet,dc=com"<span style="color: #000000;">);
        env.put(Context.SECURITY_CREDENTIALS, </span>"****");   <span style="color: #008000;">//</span><span style="color: #008000;">自己填入</span>
       
        <span style="color: #0000ff;">try</span><span style="color: #000000;">{
            ctx </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> InitialLdapContext(env,connCtls);
</span><span style="color: #008000;">//</span><span style="color: #008000;">          ctx = new InitialDirContext(env);</span>
            System.out.println("Login Ldap Server Successful..."<span style="color: #000000;">);
        }</span><span style="color: #0000ff;">catch</span><span style="color: #000000;">(AuthenticationException e){
        System.out.println(</span>"Login Ldap Server Failed..."<span style="color: #000000;">);
        e.printStackTrace();
        }</span><span style="color: #0000ff;">catch</span><span style="color: #000000;">(Exception e){
        System.out.println(</span>"Login Ldap Server Wrong...\n "+<span style="color: #000000;">e.toString());
        }
    }
    
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> String getUserDN(String userid){    
    String userDN</span>=""<span style="color: #000000;">;    
    </span><span style="color: #0000ff;">try</span><span style="color: #000000;">{
       SearchControls constraints </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> SearchControls();
            constraints.setSearchScope(SearchControls.SUBTREE_SCOPE);
        NamingEnumeration en </span>= ctx.search("","uid="+<span style="color: #000000;">userid,constraints); 
        </span><span style="color: #0000ff;">if</span>(en == <span style="color: #0000ff;">null</span><span style="color: #000000;">){
           System.out.println(</span>"Have NO such user!"<span style="color: #000000;">);
        }
            </span><span style="color: #0000ff;">if</span>(!<span style="color: #000000;">en.hasMoreElements()){
                System.out.println(</span>"Have NO such user!"<span style="color: #000000;">);
               }
            </span><span style="color: #0000ff;">while</span> (en != <span style="color: #0000ff;">null</span> &amp;&amp;<span style="color: #000000;"> en.hasMoreElements()){
            Object obj </span>=<span style="color: #000000;"> en.nextElement();
             </span><span style="color: #0000ff;">if</span>(obj <span style="color: #0000ff;">instanceof</span><span style="color: #000000;"> SearchResult){
             SearchResult si </span>=<span style="color: #000000;"> (SearchResult) obj;
             userDN </span>+=<span style="color: #000000;"> si.getName();
             userDN </span>+= "," +<span style="color: #000000;"> BASE_DN;
             }
             </span><span style="color: #0000ff;">else</span><span style="color: #000000;">{
                 System.out.println(obj);
             }
            }
    }</span><span style="color: #0000ff;">catch</span><span style="color: #000000;">(Exception e){
            System.out.println(</span>"Exception in search user DN : "+<span style="color: #000000;">e.toString());
        }
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> userDN;
    }
    
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">boolean</span><span style="color: #000000;"> Authenricate(String ID,String pwd){
    LdapConnect();
        </span><span style="color: #0000ff;">boolean</span> valide = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
        String userDN </span>=<span style="color: #000000;"> getUserDN(ID);
        
        </span><span style="color: #0000ff;">if</span>(userDN==""<span style="color: #000000;">)
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> valide;
       
        </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
            ctx.addToEnvironment(Context.SECURITY_PRINCIPAL,userDN);
            ctx.addToEnvironment(Context.SECURITY_CREDENTIALS,pwd);
            ctx.reconnect(connCtls);
            System.out.println(userDN </span>+ " is authenticated! "<span style="color: #000000;">);
            valide </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }</span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (AuthenticationException e) {
            System.out.println(userDN </span>+ " is NOT authenticated! "<span style="color: #000000;">);
            valide </span>= <span style="color: #0000ff;">false</span><span style="color: #000000;">;
        }</span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (NamingException e) {
            System.out.println(userDN </span>+ " is NOT authenticated! "<span style="color: #000000;">);
            valide </span>= <span style="color: #0000ff;">false</span><span style="color: #000000;">;
        }
        LdapDisconnect();
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> valide;
    } 
    
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> LdapDisconnect(){
        </span><span style="color: #0000ff;">if</span> (ctx != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
             ctx.close();
            }
            </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (NamingException e) {
             e.printStackTrace();
            }
          }
    }
}</span></pre>
</div>]]></description></item><item><title>通过LDAP验证Active Directory服务</title><link>http://www.cnblogs.com/eastson/archive/2014/05/11/3722053.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 11 May 2014 10:28:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/11/3722053.html</guid><description><![CDATA[<p>原文地址：<a href="http://www.byywee.com/page/M0/S215/215725.html">http://www.byywee.com/page/M0/S215/215725.html</a><br /><br />C#:</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">using</span><span style="color: #000000;"> System;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Collections.Generic;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Linq;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Text;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.DirectoryServices;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Configuration;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Text.RegularExpressions;



</span><span style="color: #0000ff;">namespace</span><span style="color: #000000;"> ldapcs
{
    </span><span style="color: #0000ff;">class</span><span style="color: #000000;"> Program
    {
        </span><span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span> Main(<span style="color: #0000ff;">string</span><span style="color: #000000;">[] args)
        {
            </span><span style="color: #0000ff;">string</span> path = <span style="color: #800000;">"</span><span style="color: #800000;">LDAP://192.168.137.210:389/ou=pet,dc=abc,dc=com </span><span style="color: #800000;">"</span><span style="color: #000000;">;
            </span><span style="color: #0000ff;">string</span> username = <span style="color: #800000;">"</span><span style="color: #800000;">uname</span><span style="color: #800000;">"</span><span style="color: #000000;">;
            </span><span style="color: #0000ff;">string</span> pwd = <span style="color: #800000;">"</span><span style="color: #800000;">upwd</span><span style="color: #800000;">"</span><span style="color: #000000;">;
            </span><span style="color: #0000ff;">string</span> domain = <span style="color: #800000;">"</span><span style="color: #800000;">abc.com</span><span style="color: #800000;">"</span><span style="color: #000000;">;


            LdapAuthentication ldap </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> LdapAuthentication(path);
            Console.WriteLine( ldap.IsAuthenticated(domain, username, pwd));
            Console.WriteLine(ldap.GetGroups());
        }

        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> LdapAuthentication
        {
            </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">string</span><span style="color: #000000;"> _path;
            </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">string</span><span style="color: #000000;"> _filterAttribute;

            </span><span style="color: #0000ff;">public</span> LdapAuthentication(<span style="color: #0000ff;">string</span><span style="color: #000000;"> path)
            {
                _path </span>=<span style="color: #000000;"> path;
            }

            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">bool</span> IsAuthenticated(<span style="color: #0000ff;">string</span> domain, <span style="color: #0000ff;">string</span> username, <span style="color: #0000ff;">string</span><span style="color: #000000;"> pwd)
            {
                </span><span style="color: #0000ff;">string</span> domainAndUsername = domain + <span style="color: #800000;">@"</span><span style="color: #800000;">\</span><span style="color: #800000;">"</span> +<span style="color: #000000;"> username;
                DirectoryEntry entry </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> DirectoryEntry(_path, username, pwd);

                </span><span style="color: #0000ff;">try</span><span style="color: #000000;">
                {
                    </span><span style="color: #008000;">//</span><span style="color: #008000;">Bind to the native AdsObject to force authentication.</span>
                    <span style="color: #0000ff;">object</span> obj =<span style="color: #000000;"> entry.NativeObject;

                    DirectorySearcher search </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> DirectorySearcher(entry);

                    search.Filter </span>= <span style="color: #800000;">"</span><span style="color: #800000;">(SAMAccountName=</span><span style="color: #800000;">"</span> + username + <span style="color: #800000;">"</span><span style="color: #800000;">)</span><span style="color: #800000;">"</span><span style="color: #000000;">;
                    search.PropertiesToLoad.Add(</span><span style="color: #800000;">"</span><span style="color: #800000;">cn</span><span style="color: #800000;">"</span><span style="color: #000000;">);
                    SearchResult result </span>=<span style="color: #000000;"> search.FindOne();

                    </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">null</span> ==<span style="color: #000000;"> result)
                    {
                        </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
                    }

                    </span><span style="color: #008000;">//</span><span style="color: #008000;">Update the new path to the user in the directory.</span>
                    _path =<span style="color: #000000;"> result.Path;
                    _filterAttribute </span>= (<span style="color: #0000ff;">string</span>)result.Properties[<span style="color: #800000;">"</span><span style="color: #800000;">cn</span><span style="color: #800000;">"</span>][<span style="color: #800080;">0</span><span style="color: #000000;">];
                }
                </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception ex)
                {
                    </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> Exception(<span style="color: #800000;">"</span><span style="color: #800000;">Error authenticating user. </span><span style="color: #800000;">"</span> +<span style="color: #000000;"> ex.Message);
                }

                </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">true</span><span style="color: #000000;">;
            }

            </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">string</span><span style="color: #000000;"> GetGroups()
            {
                DirectorySearcher search </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> DirectorySearcher(_path);
                search.Filter </span>= <span style="color: #800000;">"</span><span style="color: #800000;">(cn=</span><span style="color: #800000;">"</span> + _filterAttribute + <span style="color: #800000;">"</span><span style="color: #800000;">)</span><span style="color: #800000;">"</span><span style="color: #000000;">;
                </span><span style="color: #008000;">//</span><span style="color: #008000;">search.SearchRoot = "PET";</span>
                StringBuilder groupNames = <span style="color: #0000ff;">new</span><span style="color: #000000;"> StringBuilder();

                </span><span style="color: #0000ff;">try</span><span style="color: #000000;">
                {
                    SearchResult result </span>=<span style="color: #000000;"> search.FindOne();
                    </span><span style="color: #0000ff;">int</span> propertyCount = result.Properties[<span style="color: #800000;">"</span><span style="color: #800000;">memberOf</span><span style="color: #800000;">"</span><span style="color: #000000;">].Count;
                    </span><span style="color: #0000ff;">string</span><span style="color: #000000;"> dn;
                    </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> equalsIndex, commaIndex;

                    </span><span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> propertyCounter = <span style="color: #800080;">0</span>; propertyCounter &lt; propertyCount; propertyCounter++<span style="color: #000000;">)
                    {
                        dn </span>= (<span style="color: #0000ff;">string</span>)result.Properties[<span style="color: #800000;">"</span><span style="color: #800000;">memberOf</span><span style="color: #800000;">"</span><span style="color: #000000;">][propertyCounter];
                        equalsIndex </span>= dn.IndexOf(<span style="color: #800000;">"</span><span style="color: #800000;">=</span><span style="color: #800000;">"</span>, <span style="color: #800080;">1</span><span style="color: #000000;">);
                        commaIndex </span>= dn.IndexOf(<span style="color: #800000;">"</span><span style="color: #800000;">,</span><span style="color: #800000;">"</span>, <span style="color: #800080;">1</span><span style="color: #000000;">);
                        </span><span style="color: #0000ff;">if</span> (-<span style="color: #800080;">1</span> ==<span style="color: #000000;"> equalsIndex)
                        {
                            </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">null</span><span style="color: #000000;">;
                        }
                        groupNames.Append(dn.Substring((equalsIndex </span>+ <span style="color: #800080;">1</span>), (commaIndex - equalsIndex) - <span style="color: #800080;">1</span><span style="color: #000000;">));
                        groupNames.Append(</span><span style="color: #800000;">"</span><span style="color: #800000;">|</span><span style="color: #800000;">"</span><span style="color: #000000;">);
                    }
                }
                </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception ex)
                {
                    </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> Exception(<span style="color: #800000;">"</span><span style="color: #800000;">Error obtaining group names. </span><span style="color: #800000;">"</span> +<span style="color: #000000;"> ex.Message);
                }
                </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> groupNames.ToString();
            }
        }



        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;summary&gt;</span>
        <span style="color: #808080;">///</span><span style="color: #008000;"> 验证AD用户是否登录成功
        </span><span style="color: #808080;">///</span> <span style="color: #808080;">&lt;/summary&gt;</span>
        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="domain"&gt;&lt;/param&gt;</span>
        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="userName"&gt;&lt;/param&gt;</span>
        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;param name="password"&gt;&lt;/param&gt;</span>
        <span style="color: #808080;">///</span> <span style="color: #808080;">&lt;returns&gt;&lt;/returns&gt;</span>
        <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">bool</span> TryAuthenticate(<span style="color: #0000ff;">string</span> domain, <span style="color: #0000ff;">string</span> userName, <span style="color: #0000ff;">string</span><span style="color: #000000;"> password)
        {
            </span><span style="color: #0000ff;">bool</span> isLogin = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
            </span><span style="color: #0000ff;">try</span><span style="color: #000000;">
            {
                DirectoryEntry entry </span>= <span style="color: #0000ff;">new</span> DirectoryEntry(<span style="color: #0000ff;">string</span>.Format(<span style="color: #800000;">"</span><span style="color: #800000;">LDAP://{0}</span><span style="color: #800000;">"</span><span style="color: #000000;">, domain), userName, password);
                entry.RefreshCache();
                isLogin </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
            }
            </span><span style="color: #0000ff;">catch</span><span style="color: #000000;">
            {
                isLogin </span>= <span style="color: #0000ff;">false</span><span style="color: #000000;">;
            }
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> isLogin;
        }
   }
}</span></pre>
</div>
<p><br />Java:</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.Hashtable;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.Enumeration;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.Context;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.NamingException;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.directory.DirContext;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.directory.InitialDirContext;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.directory.SearchControls ;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.NamingEnumeration;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.naming.directory.SearchResult;




</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> LDAPtest {


</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> main(String[] args) {
    LDAPtest ldap</span>=<span style="color: #0000ff;">new</span><span style="color: #000000;"> LDAPtest();
ldap.init();
}
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> init(){
DirContext ctx </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
Hashtable env </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> Hashtable();
env.put(Context.INITIAL_CONTEXT_FACTORY, </span>"com.sun.jndi.ldap.LdapCtxFactory"<span style="color: #000000;">);
env.put(Context.PROVIDER_URL, </span>"ldap://192.168.137.210:389/");<span style="color: #008000;">//</span><span style="color: #008000;">连接LDAP的URL和端口


</span><span style="color: #008000;">//</span><span style="color: #008000;">env.put(Context.SECURITY_AUTHENTICATION, "simple");</span><span style="color: #008000;">//</span><span style="color: #008000;">以simple方式发送</span>
env.put(Context.SECURITY_PRINCIPAL, "cn=uname,ou=PET,DC=abc,DC=com");<span style="color: #008000;">//</span><span style="color: #008000;">用户名</span>
env.put(Context.SECURITY_CREDENTIALS, "upwd");<span style="color: #008000;">//</span><span style="color: #008000;">密码</span>
String baseDN="ou=PET,DC=abc,DC=com";<span style="color: #008000;">//</span><span style="color: #008000;">查询区域</span>
String filter="(&amp;(objectClass=person))";<span style="color: #008000;">//</span><span style="color: #008000;">条件查询</span>

<span style="color: #0000ff;">try</span><span style="color: #000000;">{
ctx </span>= <span style="color: #0000ff;">new</span> InitialDirContext(env);<span style="color: #008000;">//</span><span style="color: #008000;">连接LDAP服务器</span>
System.out.println("Success"<span style="color: #000000;">);
SearchControls constraints </span>= <span style="color: #0000ff;">new</span> SearchControls();<span style="color: #008000;">//</span><span style="color: #008000;">执行查询操作</span>
<span style="color: #000000;">constraints.setSearchScope(SearchControls.SUBTREE_SCOPE);
NamingEnumeration en</span>=<span style="color: #000000;">ctx.search(baseDN, filter, constraints); 
</span><span style="color: #0000ff;">if</span>(en==<span style="color: #0000ff;">null</span><span style="color: #000000;">){
System.out.println(</span>"There have no value"<span style="color: #000000;">);
}</span><span style="color: #0000ff;">else</span><span style="color: #000000;">{
</span><span style="color: #0000ff;">while</span><span style="color: #000000;">(en.hasMoreElements()){

Object obj</span>=<span style="color: #000000;">en.nextElement();
</span><span style="color: #0000ff;">if</span>(obj <span style="color: #0000ff;">instanceof</span><span style="color: #000000;"> SearchResult){
SearchResult sr</span>=<span style="color: #000000;">(SearchResult) obj;
String cn</span>=<span style="color: #000000;">sr.getName();

System.out.println(</span>"cccccc: "+<span style="color: #000000;">cn);
}
}
}

}</span><span style="color: #0000ff;">catch</span><span style="color: #000000;">(javax.naming.AuthenticationException e){
System.out.println(e.getMessage());
}</span><span style="color: #0000ff;">catch</span><span style="color: #000000;">(Exception e){
System.out.println(</span>"erro："+<span style="color: #000000;">e);
}
}
}</span></pre>
</div>]]></description></item><item><title>APACHE + LDAP 的权限认证配置方法</title><link>http://www.cnblogs.com/eastson/archive/2014/05/11/3722012.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 11 May 2014 10:00:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/11/3722012.html</guid><description><![CDATA[<p>原文地址：<a href="http://www.chinaunix.net/jh/49/627646.html">http://www.chinaunix.net/jh/49/627646.html</a><br /><br /><span>一、前言&nbsp;</span><br /><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;很多朋友希望利用&nbsp;Apache&nbsp;通过&nbsp;LDAP&nbsp;进行用户认证及权限管理。&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;通过多次试验，总结出以下方法，与大家共享。&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;配置思路：对用户通过&ldquo;组(groups)&rdquo;进行管理，对于需要权限控制的目录，&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;则通过&ldquo;组&rdquo;进行控制。&nbsp;</span><br /><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;参考：&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://www.moocky.net/Manual/apache/mod/mod_auth_ldap.html&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;http://bbs.chinaunix.net/forum/viewtopic.php?t=618651&nbsp;</span><br /><br /><br /><span>二、用户需求&nbsp;</span><br /><br /><span>&nbsp;1.&nbsp;用户结构：&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|-&nbsp;groups&nbsp;(departments)&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|-&nbsp;grp1&nbsp;(dep1)&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|-&nbsp;user1&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;\-&nbsp;user2&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|-&nbsp;grp2&nbsp;(dep2)&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|-&nbsp;user3&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;\-&nbsp;user4&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;\-&nbsp;grp3&nbsp;(dep3)&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|-&nbsp;user2&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\-&nbsp;user3&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\-&nbsp;members&nbsp;(employees)&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|-&nbsp;user1&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|-&nbsp;user2&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|-&nbsp;user3&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\-&nbsp;user4&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><br /><span>&nbsp;2.&nbsp;目录权限：&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;AppsDir&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|-&nbsp;Dir1&nbsp;&nbsp;&nbsp;&nbsp;允许&nbsp;grp1&nbsp;访问&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|-&nbsp;Dir2&nbsp;&nbsp;&nbsp;&nbsp;允许&nbsp;grp2&nbsp;访问&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\-&nbsp;Dir3&nbsp;&nbsp;&nbsp;&nbsp;允许&nbsp;grp1,&nbsp;grp3&nbsp;访问&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><br /><span>三、配置步骤&nbsp;</span><br /><br /><span>&nbsp;1.&nbsp;建立&nbsp;LDAP&nbsp;基础记录，BaseDn.ldif&nbsp;文件：&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;dn:&nbsp;dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;dc:&nbsp;YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;objectClass:&nbsp;domain&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;dn:&nbsp;ou=members,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;ou:&nbsp;members&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;objectClass:&nbsp;organizationalUnit&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;dn:&nbsp;ou=groups,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;ou:&nbsp;groups&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;objectClass:&nbsp;organizationalUnit&nbsp;</span><br /><br /><span>&nbsp;2.&nbsp;建立&nbsp;LDAP&nbsp;用户记录，UserDn.ldif&nbsp;文件：&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;dn:cn=user1,ou=members,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;cn:&nbsp;user1&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;sn:&nbsp;USER1&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;uid:&nbsp;user1&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;userPassword:&nbsp;user1&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;objectClass:&nbsp;inetOrgPerson&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;dn:cn=user2,ou=members,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;cn:&nbsp;user2&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;sn:&nbsp;USER2&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;uid:&nbsp;user2&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;userPassword:&nbsp;user2&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;objectClass:&nbsp;inetOrgPerson&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;dn:cn=user3,ou=members,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;cn:&nbsp;user3&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;sn:&nbsp;USER3&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;uid:&nbsp;user3&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;userPassword:&nbsp;user3&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;objectClass:&nbsp;inetOrgPerson&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;dn:cn=user4,ou=members,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;cn:&nbsp;user4&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;sn:&nbsp;USER4&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;uid:&nbsp;user4&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;userPassword:&nbsp;user4&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;objectClass:&nbsp;inetOrgPerson&nbsp;</span><br /><br /><span>&nbsp;3.&nbsp;建立&nbsp;LDAP&nbsp;用户组记录，GroupDn.ldif&nbsp;文件：&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;dn:&nbsp;cn=grp1,ou=groups,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;cn:&nbsp;grp1&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;objectClass:&nbsp;groupOfUniqueNames&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;objectClass:&nbsp;top&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;uniqueMember:&nbsp;cn=user1,ou=members,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;uniqueMember:&nbsp;cn=user2,ou=members,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;dn:&nbsp;cn=grp2,ou=groups,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;cn:&nbsp;grp2&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;objectClass:&nbsp;groupOfUniqueNames&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;objectClass:&nbsp;top&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;uniqueMember:&nbsp;cn=user3,ou=members,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;uniqueMember:&nbsp;cn=user4,ou=members,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;dn:&nbsp;cn=grp3,ou=groups,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;cn:&nbsp;grp3&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;objectClass:&nbsp;groupOfUniqueNames&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;objectClass:&nbsp;top&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;uniqueMember:&nbsp;cn=user3,ou=members,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;uniqueMember:&nbsp;cn=user2,ou=members,dc=YourComp&nbsp;</span><br /><br /><span>&nbsp;4.&nbsp;运行&nbsp;ldapadd&nbsp;添加记录&nbsp;</span><br /><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;添加根记录：&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;ldapadd&nbsp;-x&nbsp;-D&nbsp;"cn=root,dc=YourComp"&nbsp;-w&nbsp;secret&nbsp;-f&nbsp;BaseDn.ldif&nbsp;</span><br /><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;添加用户记录：&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;ldapadd&nbsp;-x&nbsp;-D&nbsp;"cn=root,dc=YourComp"&nbsp;-w&nbsp;secret&nbsp;-f&nbsp;UserDn.ldif&nbsp;</span><br /><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;添加用户组记录：&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;ldapadd&nbsp;-x&nbsp;-D&nbsp;"cn=root,dc=YourComp"&nbsp;-w&nbsp;secret&nbsp;-f&nbsp;GroupDn.ldif&nbsp;</span><br /><br /><span>&nbsp;5.&nbsp;建立&nbsp;Apache&nbsp;配置文件，application_auth.conf:&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Location&nbsp;/AppsDir&gt;;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuthType&nbsp;Basic&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuthName&nbsp;"Please&nbsp;login"&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuthLDAPEnabled&nbsp;on&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuthLDAPAuthoritative&nbsp;on&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AuthLDAPURL&nbsp;"ldap://localhost/dc=YourComp?uid?sub?(objectClass=*)"&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Location&gt;;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Location&nbsp;/AppsDir/dir1&gt;;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require&nbsp;group&nbsp;cn=grp1,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Location&gt;;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Location&nbsp;/AppsDir/dir2&gt;;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require&nbsp;group&nbsp;cn=grp2,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Location&gt;;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;Location&nbsp;/AppsDir/dir3&gt;;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require&nbsp;group&nbsp;cn=grp1,dc=YourComp&nbsp;cn=grp3,dc=YourComp&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Location&gt;;&nbsp;</span><br /><br /><span>&nbsp;6.&nbsp;在&nbsp;httpd.conf&nbsp;文件中，加入以下行：&nbsp;</span><br /><span>&nbsp;&nbsp;</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;include&nbsp;conf/application_auth.conf</span></p>]]></description></item><item><title>How to authenticate a user by uid and password?</title><link>http://www.cnblogs.com/eastson/archive/2014/05/10/3720237.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 10 May 2014 03:30:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/10/3720237.html</guid><description><![CDATA[<p>原文地址：<a href="http://directory.apache.org/apacheds/basic-ug/3.1-authentication-options.html#how-to-authenticate-a-user-by-uid-and-password">Authentication options</a>&nbsp;|&nbsp;<a href="http://directory.apache.org/apacheds/basic-ug/3.2-basic-authorization.html">Basic authorization</a></p>
<p><span>If you want to use simple binds with user DN and password within a Java component, in order to authenticate users programatically, in practice one problem arises: <strong><span style="color: #ff0000;">Most users do not know their DN.</span> Therefore they will not be able to enter it. And even if they know it, it would be frequently very laborious due to the length of the DN.</strong> It would be easier for a user if s/he only has to probvide a short, unique&nbsp;</span><em>ID</em><span>&nbsp;and the password, like in this web form:<br /><img src="http://images.cnitblog.com/i/111826/201405/101127473857928.png" alt="" /><br /><span>Usually the ID is an attribute within the user's entry. In our sample data (Seven Seas), each user entry contains the&nbsp;</span><em>uid</em><span>&nbsp;attribute, for instance uid=hhornblo for Captain Hornblower:</span><br /></span></p>
<div class="cnblogs_code">
<pre>dn: cn=Horatio Hornblower,ou=people,o=<span style="color: #000000;">sevenSeas
objectclass: person
objectclass: organizationalPerson
objectclass: inetOrgPerson
objectclass: top
cn: Horatio Hornblower
description: Capt. Horatio Hornblower</span>,<span style="color: #000000;"> R.N
givenname: Horatio
sn: Hornblower
uid: hhornblo
mail: hhornblo@royalnavy.mod.uk
userpassword: {SHA}nU4eI71bcnBGqeO0t9tXvY1u5oQ</span>=</pre>
</div>
<p>But how to authenticate a user who provides "hhornblo"/"pass" instead of "cn=Horatio Hornblower,ou=people,o=sevenSeas"/"pass" with the help of ApacheDS?</p>
<h3 id="an-algorithm">An algorithm</h3>
<p>In order to accomplish this task programmatically, one option is to perform the following steps</p>
<h4 id="arguments">Arguments</h4>
<ul>
<li><em>uid</em>&nbsp;of a user (e.g. "hhornblo")</li>
<li><em>password</em>&nbsp;proclaimed to be correct for the user</li>
</ul>
<h4 id="steps">Steps</h4>
<ul>
<li>Bind to ApacheDS anonymously, or with the DN of a technical user. In both cases it must be possible to search the directory afterwards (authorization has to be configured that way)</li>
<li>Perform a search operation with an appropriate filter to find the user entry for the given ID, in our case "(&amp;(objectClass=inetorgperson)(uid=hhornblo))"
<ul>
<li>If the search result is empty, the user does not exist -- terminate</li>
<li>If the search result contains more than one entry, the given ID is not unique, this is likely a data error within your directory</li>
</ul>
</li>
<li>Bind to ApacheDS with the DN of the entry found in the previous search, and the&nbsp;<em>password</em>&nbsp;provided as argument
<ul>
<li>If the bind operation fails, the password is wrong, and the result is&nbsp;<em>false</em>&nbsp;(not authenticated)</li>
<li>If the bind is successful, authenticate the user</li>
</ul>
</li>
</ul>]]></description></item><item><title>LDAP 中 CN，OU，DC 的含意</title><link>http://www.cnblogs.com/eastson/archive/2014/05/10/3720038.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 10 May 2014 01:35:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/10/3720038.html</guid><description><![CDATA[<p>CN, OU, DC 都是 LDAP 连接服务器的端字符串中的区别名称（DN, Distinguished Name）&nbsp;<br />LDAP连接服务器的连接字串格式为：ldap://servername/DN&nbsp;&nbsp;&nbsp;<br />其中DN有三个属性，分别是CN,OU,DC&nbsp;&nbsp;&nbsp;<br /><br />在 LDAP 目录中，<br /><span style="line-height: 1.5;">DC (Domain Component)<br /></span><span style="line-height: 1.5;">CN (Common Name)<br /></span><span style="line-height: 1.5;">OU (Organizational Unit)</span></p>
<p><br />LDAP 目录类似于文件系统目录。&nbsp;下列目录：&nbsp;<br />DC=redmond,DC=wa,DC=microsoft,DC=com&nbsp;<br />如果我们类比文件系统的话，可被看作如下文件路径:&nbsp;&nbsp;&nbsp;&nbsp;<br />com/microsoft/wa/redmond&nbsp;&nbsp;&nbsp;<br /><br />例如：CN=test,OU=developer,DC=domainname,DC=com&nbsp;<br />在上面的代码中 cn=test 可能代表一个用户名，ou=developer 代表一个 active directory 中的组织单位。这句话的含义可能就是说明 test 这个对象处在domainname.com 域的 developer 组织单元中</p>]]></description></item><item><title>Apache Directory Studio</title><link>http://www.cnblogs.com/eastson/archive/2014/05/10/3719991.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 10 May 2014 00:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/10/3719991.html</guid><description><![CDATA[<p><a href="http://directory.apache.org/studio/">Apache Directory Studio</a> 是一个 LDAP 的工具平台，用来连接到任何 LDAP 服务器并进行管理和开发工作。<br /><span style="line-height: 1.5;">主要功能：LDAP浏览器、LDIF编辑器、嵌入式&nbsp;</span><a style="line-height: 1.5;" href="http://www.oschina.net/p/apacheds">ApacheDS</a><span style="line-height: 1.5;">、ACI编辑器。<br /><img src="http://images.cnitblog.com/i/111826/201405/100854038382883.jpg" alt="" /><br /></span></p>]]></description></item><item><title>LDAP编辑器 LDAPAdmin</title><link>http://www.cnblogs.com/eastson/archive/2014/05/10/3719986.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 10 May 2014 00:29:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/10/3719986.html</guid><description><![CDATA[<p><a href="http://www.ldapadmin.org/index.html">LDAPAdmin</a> 是一个在 Windows 用来编辑 LDAP 账户信息的管理工具，采用 Delphi 开发。<br /><img src="http://images.cnitblog.com/i/111826/201405/100828282293012.jpg" alt="" /></p>]]></description></item><item><title>Liferay笔记 - 构建Tomcat环境</title><link>http://www.cnblogs.com/eastson/archive/2014/05/09/3719244.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 09 May 2014 08:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/09/3719244.html</guid><description><![CDATA[<p>1. 首先在app.server.properties中定义Tomcat相关参数：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">##
## Server Type
##

    app.server.type</span>=<span style="color: #000000;">tomcat

##
## Server Directory
##

    app.server.parent.dir</span>=<span style="color: #000000;">${project.dir}/../bundles
    
##
## Tomcat
##

    app.server.tomcat.version</span>=7.0.53<span style="color: #000000;">
    app.server.tomcat.dir</span>=<span style="color: #000000;">${app.server.parent.dir}/tomcat-${app.server.tomcat.version}
    app.server.tomcat.bin.dir</span>=<span style="color: #000000;">${app.server.tomcat.dir}/bin
    app.server.tomcat.classes.global.dir</span>=<span style="color: #000000;">${app.server.tomcat.dir}/lib
    app.server.tomcat.classes.portal.dir</span>=<span style="color: #000000;">${app.server.tomcat.portal.dir}/WEB-INF/classes
    app.server.tomcat.deploy.dir</span>=<span style="color: #000000;">${app.server.tomcat.dir}/webapps
    app.server.tomcat.lib.endorsed.dir</span>=<span style="color: #000000;">${app.server.tomcat.dir}/lib/ext
    app.server.tomcat.lib.global.dir</span>=<span style="color: #000000;">${app.server.tomcat.dir}/lib/ext
    app.server.tomcat.lib.portal.dir</span>=<span style="color: #000000;">${app.server.tomcat.portal.dir}/WEB-INF/lib
    app.server.tomcat.lib.support.dir</span>=<span style="color: #000000;">${app.server.tomcat.dir}/lib/ext
    app.server.tomcat.log.dir</span>=<span style="color: #000000;">${app.server.tomcat.dir}/logs
    app.server.tomcat.portal.context</span>=<span style="color: #000000;">ROOT
    app.server.tomcat.portal.dir</span>=<span style="color: #000000;">${app.server.tomcat.deploy.dir}/${app.server.tomcat.portal.context}
    app.server.tomcat.temp.dir</span>=<span style="color: #000000;">${app.server.tomcat.dir}/temp
    app.server.tomcat.work.dir</span>=<span style="color: #000000;">${app.server.tomcat.dir}/work
    app.server.tomcat.zip.name</span>=<span style="color: #000000;">apache-tomcat-${app.server.tomcat.version}.zip
    app.server.tomcat.zip.url</span>=http://archive.apache.org/dist/tomcat/tomcat-7/v${app.server.tomcat.version}/bin/${app.server.tomcat.zip.name}</pre>
</div>
<p>2. 调用build-dist.xml里面的unzip-tomcat target创建Tomcat目录：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">target </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="unzip-tomcat"</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> 删除bundles/tomcat-7.0.53目录 </span><span style="color: #008000;">--&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">delete </span><span style="color: #ff0000;">dir</span><span style="color: #0000ff;">="${app.server.tomcat.dir}"</span> <span style="color: #0000ff;">/&gt;</span>

  <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> 如果bundles/apache-tomcat-7.0.53.zip文件不存在，则从http://archive.apache.org/下载 </span><span style="color: #008000;">--&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">not</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">available </span><span style="color: #ff0000;">file</span><span style="color: #0000ff;">="${app.server.parent.dir}/${app.server.tomcat.zip.name}"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">not</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">then</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">mkdir </span><span style="color: #ff0000;">dir</span><span style="color: #0000ff;">="${app.server.parent.dir}"</span> <span style="color: #0000ff;">/&gt;</span>

      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">get
        </span><span style="color: #ff0000;">dest</span><span style="color: #0000ff;">="${app.server.parent.dir}/${app.server.tomcat.zip.name}"</span><span style="color: #ff0000;">
        src</span><span style="color: #0000ff;">="${app.server.tomcat.zip.url}"</span><span style="color: #ff0000;">
        verbose</span><span style="color: #0000ff;">="true"</span>
      <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">then</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">basename </span><span style="color: #ff0000;">file</span><span style="color: #0000ff;">="${app.server.tomcat.dir}"</span><span style="color: #ff0000;"> property</span><span style="color: #0000ff;">="app.server.tomcat.dir.name"</span> <span style="color: #0000ff;">/&gt;</span>

  <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> 解压缩bundles/apache-tomcat-7.0.53.zip文件到bundles/tomcat-7.0.53目录 </span><span style="color: #008000;">--&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">unzip
    </span><span style="color: #ff0000;">dest</span><span style="color: #0000ff;">="${app.server.parent.dir}"</span><span style="color: #ff0000;">
    src</span><span style="color: #0000ff;">="${app.server.parent.dir}/${app.server.tomcat.zip.name}"</span>
  <span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset
      </span><span style="color: #ff0000;">excludes</span><span style="color: #0000ff;">="apache-tomcat-${app.server.tomcat.version}/webapps/**"</span>
    <span style="color: #0000ff;">/&gt;</span> <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> 不要webapps目录 </span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">mapper
      </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="glob"</span><span style="color: #ff0000;">
      from</span><span style="color: #0000ff;">="apache-tomcat-${app.server.tomcat.version}/*"</span><span style="color: #ff0000;">
      to</span><span style="color: #0000ff;">="${app.server.tomcat.dir.name}/*"</span>
    <span style="color: #0000ff;">/&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">unzip</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> 创建liferay的webapps目录 </span><span style="color: #008000;">--&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">mkdir </span><span style="color: #ff0000;">dir</span><span style="color: #0000ff;">="${app.server.tomcat.dir}/webapps"</span> <span style="color: #0000ff;">/&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">echo </span><span style="color: #ff0000;">file</span><span style="color: #0000ff;">="${app.server.tomcat.dir}/conf/catalina.policy"</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">
    grant {
      permission java.security.AllPermission;
    };
  </span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">echo</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">replace </span><span style="color: #ff0000;">file</span><span style="color: #0000ff;">="${app.server.tomcat.dir}/conf/catalina.properties"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">replacetoken</span><span style="color: #0000ff;">&gt;</span><span style="color: #0000ff;">&lt;![CDATA[</span><span style="color: #808080;">common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar</span><span style="color: #0000ff;">]]&gt;</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">replacetoken</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">replacevalue</span><span style="color: #0000ff;">&gt;</span><span style="color: #0000ff;">&lt;![CDATA[</span><span style="color: #808080;">common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar,${catalina.home}/lib/ext,${catalina.home}/lib/ext/*.jar</span><span style="color: #0000ff;">]]&gt;</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">replacevalue</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">replace</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">replace </span><span style="color: #ff0000;">file</span><span style="color: #0000ff;">="${app.server.tomcat.dir}/conf/server.xml"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">replacetoken</span><span style="color: #0000ff;">&gt;</span><span style="color: #0000ff;">&lt;![CDATA[</span><span style="color: #808080;">redirectPort="8443" /&gt;</span><span style="color: #0000ff;">]]&gt;</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">replacetoken</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">replacevalue</span><span style="color: #0000ff;">&gt;</span><span style="color: #0000ff;">&lt;![CDATA[</span><span style="color: #808080;">redirectPort="8443" URIEncoding="UTF-8" /&gt;</span><span style="color: #0000ff;">]]&gt;</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">replacevalue</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">replace</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">&lt;replace file="${app.server.tomcat.dir}/conf/server.xml"&gt;
    &lt;replacetoken&gt;&lt;![CDATA[xmlValidation="false" xmlNamespaceAware="false"&gt;]]&gt;&lt;/replacetoken&gt;
    &lt;replacevalue&gt;&lt;![CDATA[xmlValidation="false" xmlNamespaceAware="false" deployXML="false"&gt;]]&gt;&lt;/replacevalue&gt;
  &lt;/replace&gt;</span><span style="color: #008000;">--&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">available </span><span style="color: #ff0000;">file</span><span style="color: #0000ff;">="${jdk.windows.home}/jre/bin/java.exe"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">then</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">copy </span><span style="color: #ff0000;">todir</span><span style="color: #0000ff;">="${app.server.tomcat.dir}/jre${jdk.windows.version}/win"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">fileset </span><span style="color: #ff0000;">dir</span><span style="color: #0000ff;">="${jdk.windows.home}/jre"</span> <span style="color: #0000ff;">/&gt;</span>
      <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">copy</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">then</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">equals </span><span style="color: #ff0000;">arg1</span><span style="color: #0000ff;">="${java.security.manager.option}"</span><span style="color: #ff0000;"> arg2</span><span style="color: #0000ff;">=""</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">then</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">var </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="java.security.config"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">=""</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">then</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">else</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">os </span><span style="color: #ff0000;">family</span><span style="color: #0000ff;">="windows"</span> <span style="color: #0000ff;">/&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">then</span><span style="color: #0000ff;">&gt;</span>
          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">var </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="java.security.config"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="${java.security.manager.option} -Djava.security.policy==%CATALINA_BASE%/conf/catalina.policy"</span> <span style="color: #0000ff;">/&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">then</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">else</span><span style="color: #0000ff;">&gt;</span>
          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">var </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="java.security.config"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="${java.security.manager.option} -Djava.security.policy==$CATALINA_BASE/conf/catalina.policy"</span> <span style="color: #0000ff;">/&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">else</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">else</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">copy
    </span><span style="color: #ff0000;">file</span><span style="color: #0000ff;">="tools/servers/tomcat/bin/setenv.bat"</span><span style="color: #ff0000;">
    tofile</span><span style="color: #0000ff;">="${app.server.tomcat.bin.dir}/setenv.bat"</span>
  <span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filterset</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter </span><span style="color: #ff0000;">token</span><span style="color: #0000ff;">="java.security.config"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="${java.security.config}"</span> <span style="color: #0000ff;">/&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter </span><span style="color: #ff0000;">token</span><span style="color: #0000ff;">="java.version"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="${jdk.windows.version}"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filterset</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">copy</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">copy
    </span><span style="color: #ff0000;">file</span><span style="color: #0000ff;">="tools/servers/tomcat/bin/setenv.sh"</span><span style="color: #ff0000;">
    tofile</span><span style="color: #0000ff;">="${app.server.tomcat.bin.dir}/setenv.sh"</span>
  <span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filterset</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter </span><span style="color: #ff0000;">token</span><span style="color: #0000ff;">="java.security.config"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="${java.security.config}"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filterset</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">copy</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">chmod </span><span style="color: #ff0000;">perm</span><span style="color: #0000ff;">="a+x"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">fileset </span><span style="color: #ff0000;">dir</span><span style="color: #0000ff;">="${app.server.tomcat.bin.dir}"</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">include </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="*.sh"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">fileset</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">chmod</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">target</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>3. 调用build-dist.xml里面的build-dist-tomcat发布相关文件到tomcat目录：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">target </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="build-dist-tomcat"</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> 执行unzip-tomcat创建Tomcat目录 </span><span style="color: #008000;">--&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">equals </span><span style="color: #ff0000;">arg1</span><span style="color: #0000ff;">="${tomcat.keep.app.server.properties}"</span><span style="color: #ff0000;"> arg2</span><span style="color: #0000ff;">="true"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">then</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">antcall </span><span style="color: #ff0000;">target</span><span style="color: #0000ff;">="unzip-tomcat"</span><span style="color: #ff0000;"> inheritAll</span><span style="color: #0000ff;">="false"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">then</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">else</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">antcall </span><span style="color: #ff0000;">target</span><span style="color: #0000ff;">="unzip-tomcat"</span> <span style="color: #0000ff;">/&gt;</span>

      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">echo </span><span style="color: #ff0000;">file</span><span style="color: #0000ff;">="app.server.${user.name}.properties"</span><span style="color: #0000ff;">&gt;</span>app.server.type=tomcat<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">echo</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">else</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">delete </span><span style="color: #ff0000;">dir</span><span style="color: #0000ff;">="${project.dir}/portal-web/classes"</span> <span style="color: #0000ff;">/&gt;</span>

  <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> 执行deploy发布相关war</span><span style="color: #008000;">--&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">ant </span><span style="color: #ff0000;">target</span><span style="color: #0000ff;">="deploy"</span><span style="color: #ff0000;"> inheritAll</span><span style="color: #0000ff;">="false"</span> <span style="color: #0000ff;">/&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">not</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">equals </span><span style="color: #ff0000;">arg1</span><span style="color: #0000ff;">="${tomcat.keep.app.server.properties}"</span><span style="color: #ff0000;"> arg2</span><span style="color: #0000ff;">="true"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">not</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">then</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">delete </span><span style="color: #ff0000;">file</span><span style="color: #0000ff;">="app.server.${user.name}.properties"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">then</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">if</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> 执行deploy-plugins发布plugins </span><span style="color: #008000;">--&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">antcall </span><span style="color: #ff0000;">target</span><span style="color: #0000ff;">="deploy-plugins"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="deployer.dest.dir"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="${app.server.parent.dir}/tomcat-${app.server.tomcat.version}/webapps"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="deployer.app.server.type"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="tomcat"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="deployer.app.server.lib.portal.dir"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="${app.server.parent.dir}/tomcat-${app.server.tomcat.version}/webapps/ROOT/WEB-INF/lib"</span> <span style="color: #0000ff;">/&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">antcall</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">target</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>4. 如何压缩打包呢？</p>]]></description></item><item><title>Quercus-基于 Java 的 PHP 框架</title><link>http://www.cnblogs.com/eastson/archive/2014/05/07/3713311.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 07 May 2014 03:05:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/07/3713311.html</guid><description><![CDATA[<p><a href="http://quercus.caucho.com/">Quercus</a>是Caucho公司采用纯Java开发的一个PHP5引擎。基于开源授权协议GPL发布。Quercus自带很多个PHP模块和扩展如 PDF，PDO，MySQL和JSON。可以利用这个引擎在一些JavaEE应用容器(Resin,GlassFish等)中运行PHP程序，也可以在 PHP脚本中调用一些Java服务如JMS。Quercus会预先把PHP文件编译成.java文件，然后再执行。<br /><span>官方地址：http://quercus.caucho.com/&nbsp;</span><br /><img src="http://images.cnitblog.com/i/111826/201405/071105032606754.gif" alt="" /></p>]]></description></item><item><title>用Drupal快速实现mobile平台服务端【转】</title><link>http://www.cnblogs.com/eastson/archive/2014/05/07/3713235.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 07 May 2014 02:40:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/07/3713235.html</guid><description><![CDATA[<p>原文地址：<a href="http://www.terrysco.com/node/drupal-as-mobile-backend.html">http://www.terrysco.com/node/drupal-as-mobile-backend.html</a><br /><br /><span>用</span><span class="i">Drupal</span><span>很容易实现一个</span><span class="i">API</span><span>，让手机平台或者其他系统使用</span><span class="i">json</span><span>的格式进行通信。</span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #008080;">define</span>('API_ERRORNO_INVALID_ACTION', 1<span style="color: #000000;">);
</span><span style="color: #008080;">define</span>('API_ERRORNO_INVALID_PARAM', 2<span style="color: #000000;">);
</span><span style="color: #008080;">define</span>('API_ERRORNO_NO_RECORD', 3<span style="color: #000000;">);
</span><span style="color: #008080;">define</span>('API_ERRORNO_INVALID_NAME', 4<span style="color: #000000;">);
</span><span style="color: #008080;">define</span>('API_ERRORNO_USER_BLOCKED', 5<span style="color: #000000;">);
</span><span style="color: #008080;">define</span>('API_ERRORNO_LOGIN_FAILED', 6<span style="color: #000000;">);
 
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 根据错误代码返回错误信息</span>
<span style="color: #0000ff;">function</span> api_message_wrapper(<span style="color: #800080;">$errno</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$message</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    API_ERRORNO_INVALID_ACTION </span>=&amp;gt; '非法的请求动作',<span style="color: #000000;">
    API_ERRORNO_INVALID_PARAM </span>=&amp;gt; '非法的请求参数',<span style="color: #000000;">
    API_ERRORNO_NO_RECORD </span>=&amp;gt; '查找不到数据',<span style="color: #000000;">
    API_ERRORNO_INVALID_NAME </span>=&amp;gt; '非法的手机号码',<span style="color: #000000;">
    API_ERRORNO_USER_BLOCKED </span>=&amp;gt; '当前用户已经被禁用',<span style="color: #000000;">
    API_ERRORNO_LOGIN_FAILED </span>=&amp;gt; '登陆失败',<span style="color: #000000;">
  );
  </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$message</span>[<span style="color: #800080;">$errno</span>]) ? <span style="color: #800080;">$message</span>[<span style="color: #800080;">$errno</span>] : '未知的错误'<span style="color: #000000;">;
}
 
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 验证合法的action</span>
<span style="color: #0000ff;">function</span> api_action_route(<span style="color: #800080;">$action</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$valid_actions</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>'login' =&gt; 'login',
      'register' =&gt; 'register',
      'getCardInfos' =&gt; 'get_card_info',<span style="color: #000000;">
  );
  </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$valid_actions</span>[<span style="color: #800080;">$action</span>]) ? <span style="color: #800080;">$valid_actions</span>[<span style="color: #800080;">$action</span>] : <span style="color: #0000ff;">false</span><span style="color: #000000;">;
}
 
</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> api_menu() {
  </span><span style="color: #800080;">$items</span>['api'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'page callback' =&gt; 'api_dispatch',
    'access callback' =&gt; <span style="color: #0000ff;">TRUE</span>,
    <span style="color: #008000;">//</span><span style="color: #008000;">'access arguments' =&gt; array('使用API'),</span>
    'type' =&gt; MENU_CALLBACK,
    'file' =&gt; 'api.functions.inc',<span style="color: #000000;">
  );
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$items</span><span style="color: #000000;">;
}
 
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 成功返回</span>
<span style="color: #0000ff;">function</span> api_response_sucess(<span style="color: #800080;">$data</span><span style="color: #000000;">) {
  drupal_json(</span><span style="color: #0000ff;">array</span>('ERRNO' =&gt; 0, 'DATA' =&gt; <span style="color: #800080;">$data</span><span style="color: #000000;">));
}
 
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 失败返回</span>
<span style="color: #0000ff;">function</span> api_response_error(<span style="color: #800080;">$errno</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$errno</span> &amp;&amp; <span style="color: #008080;">is_numeric</span>(<span style="color: #800080;">$errno</span><span style="color: #000000;">)) {
    drupal_json(</span><span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>'ERRNO' =&gt; <span style="color: #800080;">$errno</span>,
      'MSG' =&gt; api_message_wrapper(<span style="color: #800080;">$errno</span>),<span style="color: #000000;">
    ));
  }
}
 
</span><span style="color: #008000;">//</span><span style="color: #008000;"> API调度入口</span>
<span style="color: #0000ff;">function</span><span style="color: #000000;"> api_dispatch() {
  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_POST</span>['ACTION']) || !api_action_route(<span style="color: #800080;">$_POST</span>['ACTION'<span style="color: #000000;">])) {
    api_response_error(API_ERRORNO_INVALID_ACTION);
  }
  </span><span style="color: #0000ff;">elseif</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_POST</span>['PARAM'<span style="color: #000000;">])) {
    api_response_error(API_ERRORNO_INVALID_PARAM);
  }
  </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
    </span><span style="color: #800080;">$param</span> = json_decode(<span style="color: #800080;">$_POST</span>['PARAM'<span style="color: #000000;">]);
    </span><span style="color: #008080;">call_user_func</span>('api_call_'.  api_action_route(<span style="color: #800080;">$_POST</span>['ACTION']), <span style="color: #800080;">$param</span><span style="color: #000000;">);
  }
}</span></pre>
</div>
<p><br />适用方法：<br />http://localhost/drupal/index.php?q=api<br />http://localhost/drupal/api</p>]]></description></item><item><title>解析_theme_build_registry()和_theme_process_registry()</title><link>http://www.cnblogs.com/eastson/archive/2014/05/05/3703687.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 05 May 2014 07:30:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/05/05/3703687.html</guid><description><![CDATA[<p>Drupal使用_theme_build_registry()和_theme_process_registry()两个函数构建theme registry。theme registry是theme hook的集合组数。这里以practice模块定义两个theme hook为例，说明一下theme registry的构建过程。<br /><br />环境：<br />1. cool_breadcrumbs：定义在practice_theme()中，用function实现。<br />2. cool_messages：定义在practice_theme()中，用template实现。<br />3. 使用默认PHPTemplate主题引擎。<br />4. 使用sub_bartik主题，该主题继承自bartik。<br /><br /></p>
<p>_theme_build_registry()的函数原型：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> _theme_build_registry(<span style="color: #800080;">$theme</span>, <span style="color: #800080;">$base_theme</span>, <span style="color: #800080;">$theme_engine</span><span style="color: #000000;">) {
  </span>... ...<span style="color: #000000;">
}</span></pre>
</div>
<p>_theme_build_registry()调用了_theme_process_registry()，而且还调用了很多次：<br /><span style="line-height: 1.5;">1. 所有实现了hook_theme()钩子的模块，每个模块都要调用一次：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">foreach</span> (module_implements('theme') <span style="color: #0000ff;">as</span> <span style="color: #800080;">$module</span><span style="color: #000000;">) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> 注意调用时$name=模块名称, $type='module', $theme=模块名称, $path=模块路径</span>
  _theme_process_registry(<span style="color: #800080;">$cache</span>, <span style="color: #800080;">$module</span>, 'module', <span style="color: #800080;">$module</span>, drupal_get_path('module', <span style="color: #800080;">$module</span><span style="color: #000000;">));
}</span></pre>
</div>
<p>2. 每个base theme都要调用一次。Drupal中的theme是可以继承的，而且可以多级继承。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Process each base theme.</span>
<span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$base_theme</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$base</span><span style="color: #000000;">) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> If the base theme uses a theme engine, process its hooks.</span>
  <span style="color: #800080;">$base_path</span> = <span style="color: #008080;">dirname</span>(<span style="color: #800080;">$base</span>-&gt;<span style="color: #000000;">filename);
  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$theme_engine</span><span style="color: #000000;">) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 注意调用时$name=theme engine name, $type='base_theme_engine', $theme=base theme name, $path=base theme path
    // 对theme engine调用时，$theme都是对应的theme name, $path都是对应的theme path</span>
    _theme_process_registry(<span style="color: #800080;">$cache</span>, <span style="color: #800080;">$theme_engine</span>, 'base_theme_engine', <span style="color: #800080;">$base</span>-&gt;name, <span style="color: #800080;">$base_path</span><span style="color: #000000;">);
  }
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> 注意调用时$name=base theme name, $type='base_theme', $theme=base theme name, $path=base theme path</span>
  _theme_process_registry(<span style="color: #800080;">$cache</span>, <span style="color: #800080;">$base</span>-&gt;name, 'base_theme', <span style="color: #800080;">$base</span>-&gt;name, <span style="color: #800080;">$base_path</span><span style="color: #000000;">);
}</span></pre>
</div>
<p>3. 对theme engine调用一次。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> And then the same thing, but for the theme.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #800080;">$theme_engine</span><span style="color: #000000;">) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> 注意调用时$name=theme engine name, $type='theme_engine', $theme=theme name, $path=theme path
  // 对theme engine调用时，$theme都是对应的theme name, $path都是对应的theme path</span>
  _theme_process_registry(<span style="color: #800080;">$cache</span>, <span style="color: #800080;">$theme_engine</span>, 'theme_engine', <span style="color: #800080;">$theme</span>-&gt;name, <span style="color: #008080;">dirname</span>(<span style="color: #800080;">$theme</span>-&gt;<span style="color: #000000;">filename));
}</span></pre>
</div>
<p>4. 对theme调用一次。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Finally, hooks provided by the theme itself.
// 注意调用时$name=theme name, $type='theme', $theme=theme name, $path=theme path</span>
_theme_process_registry(<span style="color: #800080;">$cache</span>, <span style="color: #800080;">$theme</span>-&gt;name, 'theme', <span style="color: #800080;">$theme</span>-&gt;name, <span style="color: #008080;">dirname</span>(<span style="color: #800080;">$theme</span>-&gt;filename));</pre>
</div>
<p><br />_theme_process_registry()的函数原型：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> _theme_process_registry(&amp;<span style="color: #800080;">$cache</span>, <span style="color: #800080;">$name</span>, <span style="color: #800080;">$type</span>, <span style="color: #800080;">$theme</span>, <span style="color: #800080;">$path</span><span style="color: #000000;">) {
  </span>... ... <span style="color: #008000;">//</span><span style="color: #008000;"> 注意这里的参数$cache是传址的</span>
}</pre>
</div>
<p>从上面的_theme_build_registry()知道，_theme_build_registry()会在多种情况下被执行：<br />1.module<br />2. base theme engine<br />3. base theme<br />4. theme engine<br />5. theme<br />每种情况被执行时_theme_build_registry()都会找是否有hook_theme()钩子存在，在hook_theme返回的结果被处理后，合并到$cache，注意$cache参数是传址的。</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$variable_process_phases</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'preprocess functions' =&gt; 'preprocess',
  'process functions'    =&gt; 'process',<span style="color: #000000;">
);

</span><span style="color: #800080;">$hook_defaults</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'variables' =&gt; <span style="color: #0000ff;">TRUE</span>,
  'render element' =&gt; <span style="color: #0000ff;">TRUE</span>,
  'pattern' =&gt; <span style="color: #0000ff;">TRUE</span>,
  'base hook' =&gt; <span style="color: #0000ff;">TRUE</span>,<span style="color: #000000;">
);

</span><span style="color: #008000;">//</span><span style="color: #008000;"> Invoke the hook_theme() implementation, process what is returned, and
// merge it into $cache.</span>
<span style="color: #800080;">$function</span> = <span style="color: #800080;">$name</span> . '_theme'<span style="color: #000000;">;
</span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$function</span><span style="color: #000000;">)) {
  </span><span style="color: #800080;">$result</span> = <span style="color: #800080;">$function</span>(<span style="color: #800080;">$cache</span>, <span style="color: #800080;">$type</span>, <span style="color: #800080;">$theme</span>, <span style="color: #800080;">$path</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$result</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$hook</span> =&gt; <span style="color: #800080;">$info</span><span style="color: #000000;">) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> When a theme or engine overrides a module's theme function
    // $result[$hook] will only contain key/value pairs for information being
    // overridden.  Pull the rest of the information from what was defined by
    // an earlier hook.

    // Fill in the type and path of the module, theme, or engine that
    // implements this theme function.</span>
    <span style="color: #800080;">$result</span>[<span style="color: #800080;">$hook</span>]['type'] = <span style="color: #800080;">$type</span><span style="color: #000000;">; 
    </span><span style="color: #800080;">$result</span>[<span style="color: #800080;">$hook</span>]['theme path'] = <span style="color: #800080;">$path</span><span style="color: #000000;">;

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 注意这里的type和theme path，这和传入的参数密切相关
    // 当type=module时，theme path=module path
    // 当type=base theme engine时，因为传入的是base theme path，所以theme path=base theme path
    // 当type=base them时，theme path=base theme path
    // 当type=theme engine时，因为传入的是current theme path，所以theme path=current theme path
    // 当type=theme时，theme path=current theme path

    // If function and file are omitted, default to standard naming
    // conventions.</span>
    <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['template']) &amp;&amp; !<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['function'<span style="color: #000000;">])) {
      </span><span style="color: #800080;">$result</span>[<span style="color: #800080;">$hook</span>]['function'] = (<span style="color: #800080;">$type</span> == 'module' ? 'theme_' : <span style="color: #800080;">$name</span> . '_') . <span style="color: #800080;">$hook</span><span style="color: #000000;">;
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 在hook_theme()定义theme hook时，一般会设置template或者function
    // 如果两者都没有设置，则默认地type=module时为theme_$hook()，或者$name_$hook()
    // 例如type=theme，则可能是bartik_cool_messages()
    // 或者type=theme engine，则可能是phptemplate_cool_engine()</span>

    <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>]['includes'<span style="color: #000000;">])) {
      </span><span style="color: #800080;">$result</span>[<span style="color: #800080;">$hook</span>]['includes'] = <span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>]['includes'<span style="color: #000000;">];
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> $cache[$hook]是什么意思？
    // 在后面会看到这样一句代码：$cache = $result + $cache;
    // $cache合并了当前的hook_theme()结果$result，并确保$result优先$cache
    // 举例来说，可能在practice模块中定义了cool_messsages,
    // 当_theme_process_registry()在type=module被执行完成后，$cache就应该有了cool_messages。
    // 后面的bartik又修改了cool_messages的定义，当type=theme执行完成后，
    // $cache的就是两者合并后的结果，并且后面定义的优先于前面定义的。

    // If the theme implementation defines a file, then also use the path
    // that it defined. Otherwise use the default path. This allows
    // system.module to declare theme functions on behalf of core .include
    // files.</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['file'<span style="color: #000000;">])) {
      </span><span style="color: #800080;">$include_file</span> = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['path']) ? <span style="color: #800080;">$info</span>['path'] : <span style="color: #800080;">$path</span><span style="color: #000000;">;
      </span><span style="color: #800080;">$include_file</span> .= '/' . <span style="color: #800080;">$info</span>['file'<span style="color: #000000;">];
      </span><span style="color: #0000ff;">include_once</span> DRUPAL_ROOT . '/' . <span style="color: #800080;">$include_file</span><span style="color: #000000;">;
      </span><span style="color: #800080;">$result</span>[<span style="color: #800080;">$hook</span>]['includes'][] = <span style="color: #800080;">$include_file</span><span style="color: #000000;">;
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 可以定义一个专门的theme function file，用$info['file']说明
    // 这个theme function file可能不属于当前模块，例如可能是system模块用到core模块里面的文件，
    // 这时候需要用$info['path']说明这个theme function file所在的目录

    // If the default keys are not set, use the default values registered
    // by the module.</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span><span style="color: #000000;">])) {
      </span><span style="color: #800080;">$result</span>[<span style="color: #800080;">$hook</span>] += array_intersect_key(<span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>], <span style="color: #800080;">$hook_defaults</span><span style="color: #000000;">);
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> The following apply only to theming hooks implemented as templates.</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['template'<span style="color: #000000;">])) {
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> Prepend the current theming path when none is set.</span>
      <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['path'<span style="color: #000000;">])) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 将template转成完整路径</span>
        <span style="color: #800080;">$result</span>[<span style="color: #800080;">$hook</span>]['template'] = <span style="color: #800080;">$path</span> . '/' . <span style="color: #800080;">$info</span>['template'<span style="color: #000000;">];
      }
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Allow variable processors for all theming hooks, whether the hook is
    // implemented as a template or as a function.</span>
    <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$variable_process_phases</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$phase_key</span> =&gt; <span style="color: #800080;">$phase</span><span style="color: #000000;">) {
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> Check for existing variable processors. Ensure arrayness.</span>
      <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>[<span style="color: #800080;">$phase_key</span>]) || !<span style="color: #008080;">is_array</span>(<span style="color: #800080;">$info</span>[<span style="color: #800080;">$phase_key</span><span style="color: #000000;">])) {
        </span><span style="color: #800080;">$info</span>[<span style="color: #800080;">$phase_key</span>] = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
        </span><span style="color: #800080;">$prefixes</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
        </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$type</span> == 'module'<span style="color: #000000;">) {
          </span><span style="color: #008000;">//</span><span style="color: #008000;"> Default variable processor prefix.</span>
          <span style="color: #800080;">$prefixes</span>[] = 'template'<span style="color: #000000;">;
          </span><span style="color: #008000;">//</span><span style="color: #008000;"> Add all modules so they can intervene with their own variable
          // processors. This allows them to provide variable processors even
          // if they are not the owner of the current hook.</span>
          <span style="color: #800080;">$prefixes</span> +=<span style="color: #000000;"> module_list();
        }
        </span><span style="color: #0000ff;">elseif</span> (<span style="color: #800080;">$type</span> == 'theme_engine' || <span style="color: #800080;">$type</span> == 'base_theme_engine'<span style="color: #000000;">) {
          </span><span style="color: #008000;">//</span><span style="color: #008000;"> Theme engines get an extra set that come before the normally
          // named variable processors.</span>
          <span style="color: #800080;">$prefixes</span>[] = <span style="color: #800080;">$name</span> . '_engine'<span style="color: #000000;">;
          </span><span style="color: #008000;">//</span><span style="color: #008000;"> The theme engine registers on behalf of the theme using the
          // theme's name.</span>
          <span style="color: #800080;">$prefixes</span>[] = <span style="color: #800080;">$theme</span><span style="color: #000000;">;
        }
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
          </span><span style="color: #008000;">//</span><span style="color: #008000;"> This applies when the theme manually registers their own variable
          // processors.</span>
          <span style="color: #800080;">$prefixes</span>[] = <span style="color: #800080;">$name</span><span style="color: #000000;">;
        }
        </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$prefixes</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$prefix</span><span style="color: #000000;">) {
          </span><span style="color: #008000;">//</span><span style="color: #008000;"> Only use non-hook-specific variable processors for theming hooks
          // implemented as templates. See theme().</span>
          <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['template']) &amp;&amp; <span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$prefix</span> . '_' . <span style="color: #800080;">$phase</span><span style="color: #000000;">)) {
            </span><span style="color: #800080;">$info</span>[<span style="color: #800080;">$phase_key</span>][] = <span style="color: #800080;">$prefix</span> . '_' . <span style="color: #800080;">$phase</span><span style="color: #000000;">;
          }
          </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$prefix</span> . '_' . <span style="color: #800080;">$phase</span> . '_' . <span style="color: #800080;">$hook</span><span style="color: #000000;">)) {
            </span><span style="color: #800080;">$info</span>[<span style="color: #800080;">$phase_key</span>][] = <span style="color: #800080;">$prefix</span> . '_' . <span style="color: #800080;">$phase</span> . '_' . <span style="color: #800080;">$hook</span><span style="color: #000000;">;
          }
        }

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> variable processor，变量处理器，这是一个数组
        // 变量处理器分两种：preprocess function和皮肉process function
        // 当type=module时，按照下列顺序查找（以cool_messages为例）：
        //       template_preprocess()
        //       template_preprocess_cool_messages()
        //       moduleA_preprocess()
        //       moduleA_preprocess_cool_messages()
        //       ... ...
        //       moduleZ_preprocess()
        //       moduleZ_preprocess_cool_messages()
        //       ---
        //       template_process()
        //       template_process_cool_messages()
        //       moduleA_process()
        //       moduleA_process_cool_messages()
        //       ... ...
        //       moduleZ_process()
        //       moduleZ_process_cool_messages()
        //
        // 当type=theme_engine/base_theme_engine时，按照下列顺序查找：
        //       phptemplate_engine_preprocess()
        //       phptemplate_engine_preprocess_cool_messages()
        //       bartik_preprocess()
        //       bartik_preprocess_cool_messages()
        //       ---
        //       phptemplate_engine_process()
        //       phptemplate_engine_process_cool_messages()
        //       bartik_process()
        //       bartik_process_cool_messages()
        //
        // 当type=theme/base_theme时，按照下列顺序查找：
        //       bartik_preprocess()
        //       bartik_preprocess_cool_messages()
        //       ---
        //       bartik_process()
        //       bartik_process_cool_messages()</span>
<span style="color: #000000;">
      }
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> Check for the override flag and prevent the cached variable
      // processors from being used. This allows themes or theme engines to
      // remove variable processors set earlier in the registry build.</span>
      <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$info</span>['override ' . <span style="color: #800080;">$phase_key</span><span style="color: #000000;">])) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Flag not needed inside the registry.</span>
        <span style="color: #0000ff;">unset</span>(<span style="color: #800080;">$result</span>[<span style="color: #800080;">$hook</span>]['override ' . <span style="color: #800080;">$phase_key</span><span style="color: #000000;">]);
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 色泽override preprocess functions这样的参数，
        // 可以忽略其它情况下的变量处理器</span>
<span style="color: #000000;">      }
      </span><span style="color: #0000ff;">elseif</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$phase_key</span>]) &amp;&amp; <span style="color: #008080;">is_array</span>(<span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$phase_key</span><span style="color: #000000;">])) {
        </span><span style="color: #800080;">$info</span>[<span style="color: #800080;">$phase_key</span>] = <span style="color: #008080;">array_merge</span>(<span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$phase_key</span>], <span style="color: #800080;">$info</span>[<span style="color: #800080;">$phase_key</span><span style="color: #000000;">]);
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 这里将$cache[$hook][$phase_key]和$info[$phase_key]做了合并，
        // 也就是说可能出现这样的情况：
        //       practice_preprocess()/practice_preproces_cool_messages()    模块practice的缺省处理器
        //       other_preproces_cool_messages()                             模块other定义的cool_messages处理器
        //       phptemplate_engine_preprocess_cool_messages()               主题引擎定义的cool_messages处理器
        //       bartik_preprocess_cool_message()                            主题bartik定义的cool_messages处理器
        //       sub_bartik_preprocess_cool_message()                        主题sub_bartik定义的cool_messages处理器
        // 这些变量处理器是没有顺序的，这一点要特别注意</span>
<span style="color: #000000;">      }
      </span><span style="color: #800080;">$result</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$phase_key</span>] = <span style="color: #800080;">$info</span>[<span style="color: #800080;">$phase_key</span><span style="color: #000000;">];
    }
  }

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Merge the newly created theme hooks into the existing cache.
  // 合并$result到$cache，这一句代码很重要
  // _theme_build_registry()执行完成后，$cache就是最后的theme registry</span>
  <span style="color: #800080;">$cache</span> = <span style="color: #800080;">$result</span> + <span style="color: #800080;">$cache</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>当theme/base theme被执行时，_theme_process_registry()会自动关联在theme里面定义的变量处理器：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> $result是hook_theme()返回的结果
// phptemplate_theme()做了两件事情：
// 一是搜索get_defined_functions()中所有的theme function，
// 二是搜索主题目录下所有以.tpl.php结尾的theme template，
// 然后返回到$result，再保存到$cache.
// 例如，theme目录中可以存在一个cool_sideleft.tpl.php这样一个theme template，
// 不需要用hook_theme()定义这个theme hook，phptemplate会自动搜索这个theme template注册到$cache。
// 
// phptemplate执行在前，theme执行在后，
// 当theme执行时，$cache已经包含了them中定义所有theme function和theme template。
// 这时候，可以在theme定义变量处理器，例如bartik_preprocess_cool_sideleft()。
// 执行下面的代码可以将bartik_preprocess_cool_sideleft()关联到cool_sideleft。

// Let themes have variable processors even if they didn't register a
// template.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #800080;">$type</span> == 'theme' || <span style="color: #800080;">$type</span> == 'base_theme'<span style="color: #000000;">) {
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$cache</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$hook</span> =&gt; <span style="color: #800080;">$info</span><span style="color: #000000;">) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Check only if not registered by the theme or engine.</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$result</span>[<span style="color: #800080;">$hook</span><span style="color: #000000;">])) {
      </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$variable_process_phases</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$phase_key</span> =&gt; <span style="color: #800080;">$phase</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>[<span style="color: #800080;">$phase_key</span><span style="color: #000000;">])) {
          </span><span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$phase_key</span>] = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
        }
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Only use non-hook-specific variable processors for theming hooks
        // implemented as templates. See theme().</span>
        <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['template']) &amp;&amp; <span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$name</span> . '_' . <span style="color: #800080;">$phase</span><span style="color: #000000;">)) {
          </span><span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$phase_key</span>][] = <span style="color: #800080;">$name</span> . '_' . <span style="color: #800080;">$phase</span><span style="color: #000000;">;
        }
        </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$name</span> . '_' . <span style="color: #800080;">$phase</span> . '_' . <span style="color: #800080;">$hook</span><span style="color: #000000;">)) {
          </span><span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$phase_key</span>][] = <span style="color: #800080;">$name</span> . '_' . <span style="color: #800080;">$phase</span> . '_' . <span style="color: #800080;">$hook</span><span style="color: #000000;">;
          </span><span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>]['theme path'] = <span style="color: #800080;">$path</span><span style="color: #000000;">;
        }
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Ensure uniqueness.</span>
        <span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$phase_key</span>] = <span style="color: #008080;">array_unique</span>(<span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$phase_key</span><span style="color: #000000;">]);
      }
    }
  }
}</span></pre>
</div>
<p><br />情境A：接文章开头假设的例子，我们用practice_theme()定义两个theme hook：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> practice_theme() {
    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">array</span><span style="color: #000000;">(
        </span>'cool_breadcrumbs' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
            </span>'render element' =&gt; 'breadcrumbs',
            'function' =&gt; 'practice_cool_breadcrumbs',<span style="color: #000000;">
        )</span>,
        'cool_messages' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
            </span>'render element' =&gt; 'messages',
            'template' =&gt; 'cool_messages',<span style="color: #000000;">
        )</span>,<span style="color: #000000;">
    );
}</span></pre>
</div>
<p>要完成上面的定义，需要建立一个名为practice_cool_breadcrumbs的theme function：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> practice_cool_breadcrumbs(<span style="color: #800080;">$variables</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">return</span> '&lt;div&gt;Demo Breadcrumbs&lt;/div&gt;'<span style="color: #000000;">;
}</span></pre>
</div>
<p>还需要建立一个名为cool_messages.tpl.php的theme template：</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #008000;">//</span><span style="color: #008000;"> sites/all/modules/practice/cool_messages.tpl.php</span>
<span style="color: #0000ff;">print</span> '&lt;div&gt;Demo Messages&lt;/div&gt;';</pre>
</div>
<p>到这里，practice模块新增的两个theme hook就完成了。当_theme_process_registry($type='module', $name='practice')执行完成后，对应的$result结果如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$result</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'cool_breadcrumbs' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'render element' =&gt; 'breadcrumbs',
    'function' =&gt; 'practice_cool_breadcrumbs',
    'type' =&gt; 'module',
    'theme path' =&gt; 'sites/all/modules/practice',
    'preprocess functions' =&gt; <span style="color: #0000ff;">array</span>(),
    'process functions' =&gt; <span style="color: #0000ff;">array</span>(),<span style="color: #000000;">
  )</span>,
  'cool_messages' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'render element' =&gt; 'messages',
    'template' =&gt; 'sites/all/modules/practice/cool_messages', <span style="color: #008000;">//</span><span style="color: #008000;"> template转成了完整路径</span>
    'type' =&gt; 'module',
    'theme path' =&gt; 'sites/all/modules/practice',
    'preprocess functions' =&gt; <span style="color: #0000ff;">array</span>( <span style="color: #008000;">//</span><span style="color: #008000;"> 用template实现的theme hook，默认的会加上template_preprocess/process()</span>
      0 =&gt; 'template_preprocess',<span style="color: #000000;"> 
    )</span>,
    'process functions' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>0 =&gt; 'template_process',<span style="color: #000000;">
    )</span>,<span style="color: #000000;">
  )</span>,<span style="color: #000000;">
);</span></pre>
</div>
<p>因为没有在其它地方修改这两个theme hook，所有最后的$cache和$result是一样的。<br /><br />情境B：续情境A。theme hook可以定义变量处理器preprocess function和process function。实质上，情境A中的template_preprocess()和template_process()也是变量处理器。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> practice_preprocess(&amp;<span style="color: #800080;">$variables</span>, <span style="color: #800080;">$hook</span>) { ...<span style="color: #000000;"> }
</span><span style="color: #0000ff;">function</span> practice_process(&amp;<span style="color: #800080;">$variables</span>, <span style="color: #800080;">$hook</span>) { ... }</pre>
</div>
<p>_theme_process_registry($type='module', $name='practice')执行完成后，$result结果如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$result</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'cool_breadcrumbs' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>... ...
    'preprocess functions' =&gt; <span style="color: #0000ff;">array</span>(), <span style="color: #008000;">//</span><span style="color: #008000;"> 不带theme hook名称的变量处理器不适用于function</span>
    'process functions' =&gt; <span style="color: #0000ff;">array</span>(),<span style="color: #000000;">
  )</span>,
  'cool_messages' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>... ...
    'preprocess functions' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>0 =&gt; 'template_preprocess', 
      1 =&gt; 'practice_preprocess', <span style="color: #008000;">//</span><span style="color: #008000;"> 不带theme hook名称的变量处理器只针对template</span>
    ),
    'process functions' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>0 =&gt; 'template_process', 
      1 =&gt; 'practice_preprocess',<span style="color: #000000;">
    )</span>,<span style="color: #000000;">
  )</span>,<span style="color: #000000;">
);</span></pre>
</div>
<p>上面的变量处理器不带theme hook名称，这样的处理器适用与所有用template实现的theme hook。带名称的处理器只适用于指定名称的theme hook：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> practice_preprocess_cool_breadcrumbs(&amp;<span style="color: #800080;">$variables</span>, <span style="color: #800080;">$hook</span>) { ...<span style="color: #000000;"> }

</span><span style="color: #800080;">$result</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'cool_breadcrumbs' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'preprocess functions' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>0 =&gt; 'practice_preprocess_cool_breadcrumbs', <span style="color: #008000;">//</span><span style="color: #008000;"> 带名称的处理器只适用于指定名称的theme hook</span>
    ),
    'process functions' =&gt; <span style="color: #0000ff;">array</span>(),<span style="color: #000000;">
  )</span>,
  ... ...<span style="color: #000000;">
);</span></pre>
</div>
<p>&nbsp;</p>
<p>情境C：续情境A。情境B是在theme hook定义所在的模块practice建立处理器，在其它模块也是可以的。其它模块定义处理器也可以分通用（不带theme hook名称，适用与所有的template）和专用（带theme hook名称，只适用于指定名称）两种。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> other_preprocess(&amp;<span style="color: #800080;">$variables</span>, <span style="color: #800080;">$hook</span>) { ...<span style="color: #000000;"> }
</span><span style="color: #0000ff;">function</span> other_preprocess_cool_messages(&amp;<span style="color: #800080;">$variables</span>, <span style="color: #800080;">$hook</span>) { ...<span style="color: #000000;"> }

</span><span style="color: #800080;">$result</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'cool_messages' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'preprocess functions' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>0 =&gt; 'template_preprocess',
      1 =&gt; 'other_preprocess',
      2 =&gt; 'other_preprocess_cool_messages',<span style="color: #000000;">
    )</span>,
    'process functions' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>0 =&gt; 'template_process',<span style="color: #000000;"> 
    )</span>,<span style="color: #000000;">
  )</span>,<span style="color: #000000;">
);</span></pre>
</div>
<p>&nbsp;</p>
<p>情境D：续情境A。在theme中也可以为theme hook定义处理器。这部分的处理是在_theme_process_registry($type='theme/base_theme')的最后实现的：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$type</span> == 'theme' || <span style="color: #800080;">$type</span> == 'base_theme'<span style="color: #000000;">) {
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$cache</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$hook</span> =&gt; <span style="color: #800080;">$info</span>) { <span style="color: #008000;">//</span><span style="color: #008000;"> 只针对在$cache中已经注册过的theme hook
    // Check only if not registered by the theme or engine.</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$result</span>[<span style="color: #800080;">$hook</span>])) { <span style="color: #008000;">//</span><span style="color: #008000;"> empty($result[$hook])表明是没有在theme的hook_theme()钩子中定义</span>
      <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$variable_process_phases</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$phase_key</span> =&gt; <span style="color: #800080;">$phase</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>[<span style="color: #800080;">$phase_key</span><span style="color: #000000;">])) {
          </span><span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$phase_key</span>] = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
        }
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Only use non-hook-specific variable processors for theming hooks
        // implemented as templates. See theme().</span>
        <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['template']) &amp;&amp; <span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$name</span> . '_' . <span style="color: #800080;">$phase</span><span style="color: #000000;">)) {
          </span><span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$phase_key</span>][] = <span style="color: #800080;">$name</span> . '_' . <span style="color: #800080;">$phase</span><span style="color: #000000;">;
        }
        </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$name</span> . '_' . <span style="color: #800080;">$phase</span> . '_' . <span style="color: #800080;">$hook</span><span style="color: #000000;">)) {
          </span><span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$phase_key</span>][] = <span style="color: #800080;">$name</span> . '_' . <span style="color: #800080;">$phase</span> . '_' . <span style="color: #800080;">$hook</span><span style="color: #000000;">;
          </span><span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>]['theme path'] = <span style="color: #800080;">$path</span><span style="color: #000000;">;
        }
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Ensure uniqueness.</span>
        <span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$phase_key</span>] = <span style="color: #008080;">array_unique</span>(<span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$phase_key</span><span style="color: #000000;">]);
      }
    }
  }
}</span></pre>
</div>
<p>例如，情境A中的cool_messages，可以在theme中再定义一个处理器：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> bartik_preprocess_cool_messages(&amp;<span style="color: #800080;">$variables</span>) { ...<span style="color: #000000;"> }

</span><span style="color: #008000;">//</span><span style="color: #008000;"> _theme_process_registry($type='module', $name='practice')执行完毕后的$cache</span>
<span style="color: #800080;">$cache</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'cool_messages' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'preprocess functions' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>0 =&gt; 'template_preprocess',<span style="color: #000000;"> 
    )</span>,
    'process functions' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>0 =&gt; 'template_process',<span style="color: #000000;">
    )</span>,<span style="color: #000000;">
  )</span>,<span style="color: #000000;">
);

</span><span style="color: #008000;">//</span><span style="color: #008000;"> _theme_process_registry($type='theme', $name='bartik')执行完毕后的$cache</span>
<span style="color: #800080;">$cache</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'cool_messages' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'preprocess functions' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>0 =&gt; 'template_preprocess',
      1 =&gt; 'bartik_preprocess_cool_messages', <span style="color: #008000;">//</span><span style="color: #008000;"> bartik中定义的处理器</span>
    ),
    'process functions' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>0 =&gt; 'template_process',<span style="color: #000000;">
    )</span>,<span style="color: #000000;">
  )</span>,<span style="color: #000000;">
);</span></pre>
</div>
<p>&nbsp;</p>
<p>情境E：续情境A。hook_theme()定义的theme hook可以在主题theme中被重载。这里的重载有几个意思：<br />1. theme function重载。例如，cool_breadcrumbs默认由practice_cool_breadcrumbs()输出，可以在主题中定义bartik_cool_breadcrumbs()实现重载。<br />2. theme template重载。例如，cool_messages默认由practice/cool_messages.tpl.php输出，可以在主题中定义cool_messages.tpl.php实现重载。<br />3. theme suggestion重载。例如，名为page的theme hook，默认可能是在某个模块中顶一顶，可以在主题中定义bartik_page()实现函数重载，定义bartik_page__node()/bartik_page__node__1()这样的函数实现theme suggestion函数重载；也可以在主题中定义page.tpl.php实现模板重载，定义page__node.tpl.php/page__node__1.tpl.php这样的模板实现theme suggestion模板重载。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> phptemplate_theme(<span style="color: #800080;">$existing</span>, <span style="color: #800080;">$type</span>, <span style="color: #800080;">$theme</span>, <span style="color: #800080;">$path</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$templates</span> = drupal_find_theme_functions(<span style="color: #800080;">$existing</span>, <span style="color: #0000ff;">array</span>(<span style="color: #800080;">$theme</span><span style="color: #000000;">));
  </span><span style="color: #800080;">$templates</span> += drupal_find_theme_templates(<span style="color: #800080;">$existing</span>, '.tpl.php', <span style="color: #800080;">$path</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$templates</span><span style="color: #000000;">;
}

</span><span style="color: #0000ff;">function</span> drupal_find_theme_functions(<span style="color: #800080;">$cache</span>, <span style="color: #800080;">$prefixes</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$implementations</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
  </span><span style="color: #800080;">$functions</span> = <span style="color: #008080;">get_defined_functions</span><span style="color: #000000;">();

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> 查找以theme名称开头的theme functions
  // 注意这里只处理$cache中已注册的theme hook
  // $prefix指的是theme名称, 例如bartik</span>

  <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$cache</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$hook</span> =&gt; <span style="color: #800080;">$info</span><span style="color: #000000;">) { 
    </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$prefixes</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$prefix</span><span style="color: #000000;">) { 

      </span><span style="color: #008000;">//</span><span style="color: #008000;"> Find theme functions that implement possible "suggestion" variants of
      // registered theme hooks and add those as new registered theme hooks.
      // The 'pattern' key defines a common prefix that all suggestions must
      // start with. The default is the name of the hook followed by '__'. An
      // 'base hook' key is added to each entry made for a found suggestion,
      // so that common functionality can be implemented for all suggestions of
      // the same base hook. To keep things simple, deep hierarchy of
      // suggestions is not supported: each suggestion's 'base hook' key
      // refers to a base hook, not to another suggestion, and all suggestions
      // are found using the base hook's pattern, not a pattern from an
      // intermediary suggestion.

      // 这里查找的是theme suggestion functions
      // 例如，在$cahce中已存在名为page的theme hook
      // 可以在theme中定义一系列的theme suggestion functions：
      //     bartik_page__node()
      //     bartik_page__node__1()
      //
      // theme suggestion会做为一个新的theme hook被注册，例如
      //     $cache['page__node__1'] = ...
      //
      // theme suggesion hook的base hook被标记为$hook</span>

      <span style="color: #800080;">$pattern</span> = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['pattern']) ? <span style="color: #800080;">$info</span>['pattern'] : (<span style="color: #800080;">$hook</span> . '__'<span style="color: #000000;">);
      </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['base hook']) &amp;&amp; !<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$pattern</span><span style="color: #000000;">)) {
        </span><span style="color: #800080;">$matches</span> = <span style="color: #008080;">preg_grep</span>('/^' . <span style="color: #800080;">$prefix</span> . '_' . <span style="color: #800080;">$pattern</span> . '/', <span style="color: #800080;">$functions</span>['user'<span style="color: #000000;">]);
        </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$matches</span><span style="color: #000000;">) {
          </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$matches</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$match</span><span style="color: #000000;">) {
            </span><span style="color: #800080;">$new_hook</span> = <span style="color: #008080;">substr</span>(<span style="color: #800080;">$match</span>, <span style="color: #008080;">strlen</span>(<span style="color: #800080;">$prefix</span>) + 1<span style="color: #000000;">);
            </span><span style="color: #800080;">$arg_name</span> = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['variables']) ? 'variables' : 'render element'<span style="color: #000000;">;
            </span><span style="color: #800080;">$implementations</span>[<span style="color: #800080;">$new_hook</span>] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
              </span>'function' =&gt; <span style="color: #800080;">$match</span>,
              <span style="color: #800080;">$arg_name</span> =&gt; <span style="color: #800080;">$info</span>[<span style="color: #800080;">$arg_name</span>],
              'base hook' =&gt; <span style="color: #800080;">$hook</span>,<span style="color: #000000;">
            );
          }
        }
      }

      </span><span style="color: #008000;">//</span><span style="color: #008000;"> Find theme functions that implement registered theme hooks and include
      // that in what is returned so that the registry knows that the theme has
      // this implementation.

      // 如果存在bartik_page()函数，则覆盖hook_theme()定义的page实现
      //
      // 覆盖是在_theme_process_registry()处理的, $result是phptemplate_theme()返回的结果:
      // if (isset($cache[$hook])) {
      //  $result[$hook] += array_intersect_key($cache[$hook], $hook_defaults);
      // }</span>

      <span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$prefix</span> . '_' . <span style="color: #800080;">$hook</span><span style="color: #000000;">)) {
        </span><span style="color: #800080;">$implementations</span>[<span style="color: #800080;">$hook</span>] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
          </span>'function' =&gt; <span style="color: #800080;">$prefix</span> . '_' . <span style="color: #800080;">$hook</span>,<span style="color: #000000;">
        );
      }
    }
  }

  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$implementations</span><span style="color: #000000;">;
}

</span><span style="color: #0000ff;">function</span> drupal_find_theme_templates(<span style="color: #800080;">$cache</span>, <span style="color: #800080;">$extension</span>, <span style="color: #800080;">$path</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$implementations</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Collect paths to all sub-themes grouped by base themes. These will be
  // used for filtering. This allows base themes to have sub-themes in its
  // folder hierarchy without affecting the base themes template discovery.</span>
  <span style="color: #800080;">$theme_paths</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
  </span><span style="color: #0000ff;">foreach</span> (list_themes() <span style="color: #0000ff;">as</span> <span style="color: #800080;">$theme_info</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$theme_info</span>-&gt;<span style="color: #000000;">base_theme)) {
      </span><span style="color: #800080;">$theme_paths</span>[<span style="color: #800080;">$theme_info</span>-&gt;base_theme][<span style="color: #800080;">$theme_info</span>-&gt;name] = <span style="color: #008080;">dirname</span>(<span style="color: #800080;">$theme_info</span>-&gt;<span style="color: #000000;">filename);
    }
  }
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$theme_paths</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$basetheme</span> =&gt; <span style="color: #800080;">$subthemes</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$subthemes</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$subtheme</span> =&gt; <span style="color: #800080;">$subtheme_path</span><span style="color: #000000;">) {
      </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$theme_paths</span>[<span style="color: #800080;">$subtheme</span><span style="color: #000000;">])) {
        </span><span style="color: #800080;">$theme_paths</span>[<span style="color: #800080;">$basetheme</span>] = <span style="color: #008080;">array_merge</span>(<span style="color: #800080;">$theme_paths</span>[<span style="color: #800080;">$basetheme</span>], <span style="color: #800080;">$theme_paths</span>[<span style="color: #800080;">$subtheme</span><span style="color: #000000;">]);
      }
    }
  }
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$theme</span><span style="color: #000000;">;
  </span><span style="color: #800080;">$subtheme_paths</span> = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$theme_paths</span>[<span style="color: #800080;">$theme</span>]) ? <span style="color: #800080;">$theme_paths</span>[<span style="color: #800080;">$theme</span>] : <span style="color: #0000ff;">array</span><span style="color: #000000;">();

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Escape the periods in the extension.</span>
  <span style="color: #800080;">$regex</span> = '/' . <span style="color: #008080;">str_replace</span>('.', '\.', <span style="color: #800080;">$extension</span>) . '$/'<span style="color: #000000;">;
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Get a listing of all template files in the path to search.</span>
  <span style="color: #800080;">$files</span> = drupal_system_listing(<span style="color: #800080;">$regex</span>, <span style="color: #800080;">$path</span>, 'name', 0<span style="color: #000000;">);

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> 在theme目录下查找所有以.tpl.php结尾的模板文件:
  //    page.tpl.php
  //    page__node.tpl.php
  //    page__node__1.tpl.php

  // Find templates that implement registered theme hooks and include that in
  // what is returned so that the registry knows that the theme has this
  // implementation.</span>
  <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$files</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$template</span> =&gt; <span style="color: #800080;">$file</span><span style="color: #000000;">) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Ignore sub-theme templates for the current theme.</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #008080;">strpos</span>(<span style="color: #800080;">$file</span>-&gt;uri, <span style="color: #008080;">str_replace</span>(<span style="color: #800080;">$subtheme_paths</span>, '', <span style="color: #800080;">$file</span>-&gt;uri)) !== 0<span style="color: #000000;">) {
      </span><span style="color: #0000ff;">continue</span><span style="color: #000000;">;
    }
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Chop off the remaining extensions if there are any. $template already
    // has the rightmost extension removed, but there might still be more,
    // such as with .tpl.php, which still has .tpl in $template at this point.</span>
    <span style="color: #0000ff;">if</span> ((<span style="color: #800080;">$pos</span> = <span style="color: #008080;">strpos</span>(<span style="color: #800080;">$template</span>, '.')) !== <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">) {
      </span><span style="color: #800080;">$template</span> = <span style="color: #008080;">substr</span>(<span style="color: #800080;">$template</span>, 0, <span style="color: #800080;">$pos</span><span style="color: #000000;">);
    }
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Transform - in filenames to _ to match function naming scheme
    // for the purposes of searching.</span>
    <span style="color: #800080;">$hook</span> = <span style="color: #008080;">strtr</span>(<span style="color: #800080;">$template</span>, '-', '_'<span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$cache</span>[<span style="color: #800080;">$hook</span><span style="color: #000000;">])) { 
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> 只处理在$cache中注册的theme hook
      // 如果存page.tpl.php模板, 则覆盖hook_theme()定义的page实现</span>
      <span style="color: #800080;">$implementations</span>[<span style="color: #800080;">$hook</span>] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
        </span>'template' =&gt; <span style="color: #800080;">$template</span>,
        'path' =&gt; <span style="color: #008080;">dirname</span>(<span style="color: #800080;">$file</span>-&gt;uri),<span style="color: #000000;">
      );
    }
  }

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Find templates that implement possible "suggestion" variants of registered
  // theme hooks and add those as new registered theme hooks. See
  // drupal_find_theme_functions() for more information about suggestions and
  // the use of 'pattern' and 'base hook'.</span>
  <span style="color: #800080;">$patterns</span> = <span style="color: #008080;">array_keys</span>(<span style="color: #800080;">$files</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$cache</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$hook</span> =&gt; <span style="color: #800080;">$info</span>) { <span style="color: #008000;">//</span><span style="color: #008000;"> 循环处理在$cache中注册的theme hook</span>
    <span style="color: #800080;">$pattern</span> = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['pattern']) ? <span style="color: #800080;">$info</span>['pattern'] : (<span style="color: #800080;">$hook</span> . '__'<span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['base hook']) &amp;&amp; !<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$pattern</span><span style="color: #000000;">)) {
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> Transform _ in pattern to - to match file naming scheme
      // for the purposes of searching.</span>
      <span style="color: #800080;">$pattern</span> = <span style="color: #008080;">strtr</span>(<span style="color: #800080;">$pattern</span>, '_', '-'<span style="color: #000000;">);

      </span><span style="color: #008000;">//</span><span style="color: #008000;"> 这里查找的是theme suggestion templates
      // theme suggestion会做为一个新的theme hook被注册，例如
      //     $cache['page__node__1'] = ...
      //
      // theme suggesion hook的base hook被标记为$hook</span>

      <span style="color: #800080;">$matches</span> = <span style="color: #008080;">preg_grep</span>('/^' . <span style="color: #800080;">$pattern</span> . '/', <span style="color: #800080;">$patterns</span><span style="color: #000000;">);
      </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$matches</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$matches</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$match</span><span style="color: #000000;">) {
          </span><span style="color: #800080;">$file</span> = <span style="color: #008080;">substr</span>(<span style="color: #800080;">$match</span>, 0, <span style="color: #008080;">strpos</span>(<span style="color: #800080;">$match</span>, '.'<span style="color: #000000;">));
          </span><span style="color: #008000;">//</span><span style="color: #008000;"> Put the underscores back in for the hook name and register this
          // pattern.</span>
          <span style="color: #800080;">$arg_name</span> = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['variables']) ? 'variables' : 'render element'<span style="color: #000000;">;
          </span><span style="color: #800080;">$implementations</span>[<span style="color: #008080;">strtr</span>(<span style="color: #800080;">$file</span>, '-', '_')] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
            </span>'template' =&gt; <span style="color: #800080;">$file</span>,
            'path' =&gt; <span style="color: #008080;">dirname</span>(<span style="color: #800080;">$files</span>[<span style="color: #800080;">$match</span>]-&gt;uri),
            <span style="color: #800080;">$arg_name</span> =&gt; <span style="color: #800080;">$info</span>[<span style="color: #800080;">$arg_name</span>],
            'base hook' =&gt; <span style="color: #800080;">$hook</span>,<span style="color: #000000;">
          );
        }
      }
    }
  }
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$implementations</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>情境F：独立情境。除了在module中用hook_theme()钩子定义theme hook外，也可以在theme和theme engine用hook_theme()钩子theme hook。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> bartik_theme() {
  </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'cool_sideleft' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>'render element' =&gt; 'sideleft',
      'template' =&gt; 'cool_sideleft',<span style="color: #000000;">
    )</span>,<span style="color: #000000;">
  );
}

</span><span style="color: #0000ff;">function</span> bartik_preprocess_cool_sideleft(&amp;<span style="color: #800080;">$variables</span>) { ...<span style="color: #000000;"> }

</span><span style="color: #800080;">$result</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'cool_sideleft' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'render element' =&gt; 'sideleft',
    'template' =&gt; 'themes/bartik/cool_sideleft',
    'type' =&gt; 'theme',
    'theme path' =&gt; 'themes/bartik',
    'preprocess functions' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>0 =&gt; 'bartik_preprocess_cool_sideleft', <span style="color: #008000;">//</span><span style="color: #008000;"> 没有template_preprocess(). 处理器要以bartik_开头。</span>
    ),
    'process functions' =&gt; <span style="color: #0000ff;">array</span>(),<span style="color: #000000;">
  )</span>,<span style="color: #000000;">
);</span></pre>
</div>]]></description></item><item><title>Drupal在哪里找模板文件？</title><link>http://www.cnblogs.com/eastson/archive/2014/04/30/3701431.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 30 Apr 2014 07:30:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/04/30/3701431.html</guid><description><![CDATA[<p>在practice模块中，通过hook_theme()钩子定义了一个theme hook：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> practice_theme() {
    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">array</span><span style="color: #000000;">(
        </span>'flash_messages' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
            </span>'render element' =&gt; 'messages',
            'template' =&gt; 'flash_messages',<span style="color: #000000;">
        )</span>,<span style="color: #000000;">
    );
}</span></pre>
</div>
<p><br />默认的，Drupal会找到modules/practice目录下的对应的模板文件flash_messages.tpl.php。</p>]]></description></item><item><title>解析theme()</title><link>http://www.cnblogs.com/eastson/archive/2014/04/30/3700718.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 30 Apr 2014 03:59:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/04/30/3700718.html</guid><description><![CDATA[<p>drupal_render()只是对theme()的调用做了包装，真正做任务的还是theme()。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> theme(<span style="color: #800080;">$hook</span>, <span style="color: #800080;">$variables</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">()) {
  </span>... ...<span style="color: #000000;">
}</span></pre>
</div>
<p><br />theme()的开头检查了module_load_all()是否有执行。theme()只能在所有模块装入后才能执行。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> If called before all modules are loaded, we do not necessarily have a full
// theme registry to work with, and therefore cannot process the theme
// request properly. See also _theme_load_registry().</span>
<span style="color: #0000ff;">if</span> (!module_load_all(<span style="color: #0000ff;">NULL</span>) &amp;&amp; !<span style="color: #008080;">defined</span>('MAINTENANCE_MODE'<span style="color: #000000;">)) {
  </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> <span style="color: #0000ff;">Exception</span>(t('theme() may not be called until all modules are loaded.'<span style="color: #000000;">));
}</span></pre>
</div>
<p><br />theme_get_registry()返回所有的theme hooks。</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$hooks</span> = theme_get_registry(<span style="color: #0000ff;">FALSE</span>);</pre>
</div>
<p><br />参数$hook可以是一个数组，包含所有可用的备选theme hook。theme()会取第一个存在的theme hook。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> If an array of hook candidates were passed, use the first one that has an
// implementation.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #008080;">is_array</span>(<span style="color: #800080;">$hook</span><span style="color: #000000;">)) {
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$hook</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$candidate</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$hooks</span>[<span style="color: #800080;">$candidate</span><span style="color: #000000;">])) {
      </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
    }
  }
  </span><span style="color: #800080;">$hook</span> = <span style="color: #800080;">$candidate</span><span style="color: #000000;">;
}</span></pre>
</div>
<p><br />处理theme hook suggestion。什么是theme hook suggestion？以请求q=node/sports/5为例，可以优先匹配node__sports__5，再匹配node__sports，最后再匹配node。如果存在node__sports__5的theme hook，则后面的就不予考虑，后面的以此类推。注意theme hook suggestion是以双下划线分开的。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> If there's no implementation, check for more generic fallbacks. If there's
// still no implementation, log an error and return an empty string.</span>
<span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$hooks</span>[<span style="color: #800080;">$hook</span><span style="color: #000000;">])) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Iteratively strip everything after the last '__' delimiter, until an
  // implementation is found.</span>
  <span style="color: #0000ff;">while</span> (<span style="color: #800080;">$pos</span> = <span style="color: #008080;">strrpos</span>(<span style="color: #800080;">$hook</span>, '__'<span style="color: #000000;">)) {
    </span><span style="color: #800080;">$hook</span> = <span style="color: #008080;">substr</span>(<span style="color: #800080;">$hook</span>, 0, <span style="color: #800080;">$pos</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$hooks</span>[<span style="color: #800080;">$hook</span><span style="color: #000000;">])) {
      </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
    }
  }
  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$hooks</span>[<span style="color: #800080;">$hook</span><span style="color: #000000;">])) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Only log a message when not trying theme suggestions ($hook being an
    // array).
    // 只有$hook是数组的时候才记录日志信息</span>
    <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$candidate</span><span style="color: #000000;">)) {
      watchdog(</span>'theme', 'Theme hook %hook not found.', <span style="color: #0000ff;">array</span>('%hook' =&gt; <span style="color: #800080;">$hook</span>),<span style="color: #000000;"> WATCHDOG_WARNING);
    }
    </span><span style="color: #0000ff;">return</span> ''<span style="color: #000000;">;
  }
}</span></pre>
</div>
<p>&nbsp;<br />$info保存当前hook信息。$theme_path是一个全局变量，在theme()执行过程中会替换为当前theme hook对应的路径，theme()后面会还原回来。</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$info</span> = <span style="color: #800080;">$hooks</span>[<span style="color: #800080;">$hook</span><span style="color: #000000;">];
</span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$theme_path</span><span style="color: #000000;">;
</span><span style="color: #800080;">$temp</span> = <span style="color: #800080;">$theme_path</span><span style="color: #000000;">;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> point path_to_theme() to the currently used theme path:</span>
<span style="color: #800080;">$theme_path</span> = <span style="color: #800080;">$info</span>['theme path'];</pre>
</div>
<p><br />引入$info['includes']相关文件。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Include a file if the theme function or variable processor is held
// elsewhere.</span>
<span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$info</span>['includes'<span style="color: #000000;">])) {
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$info</span>['includes'] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$include_file</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">include_once</span> DRUPAL_ROOT . '/' . <span style="color: #800080;">$include_file</span><span style="color: #000000;">;
  }
}</span></pre>
</div>
<p><br />重新整理$variables数组。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> If a renderable array is passed as $variables, then set $variables to
// the arguments expected by the theme function.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$variables</span>['#theme']) || <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$variables</span>['#theme_wrappers'<span style="color: #000000;">])) {
  </span><span style="color: #800080;">$element</span> = <span style="color: #800080;">$variables</span><span style="color: #000000;">;
  </span><span style="color: #800080;">$variables</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
  </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['variables'<span style="color: #000000;">])) {
    </span><span style="color: #0000ff;">foreach</span> (<span style="color: #008080;">array_keys</span>(<span style="color: #800080;">$info</span>['variables']) <span style="color: #0000ff;">as</span> <span style="color: #800080;">$name</span><span style="color: #000000;">) {
      </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$element</span>["#<span style="color: #800080;">$name</span>"<span style="color: #000000;">])) {
        </span><span style="color: #800080;">$variables</span>[<span style="color: #800080;">$name</span>] = <span style="color: #800080;">$element</span>["#<span style="color: #800080;">$name</span>"<span style="color: #000000;">];
      }
    }
  }
  </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
    </span><span style="color: #800080;">$variables</span>[<span style="color: #800080;">$info</span>['render element']] = <span style="color: #800080;">$element</span><span style="color: #000000;">;
  }
}

</span><span style="color: #008000;">//</span><span style="color: #008000;"> Merge in argument defaults.</span>
<span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$info</span>['variables'<span style="color: #000000;">])) {
  </span><span style="color: #800080;">$variables</span> += <span style="color: #800080;">$info</span>['variables'<span style="color: #000000;">];
}
</span><span style="color: #0000ff;">elseif</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$info</span>['render element'<span style="color: #000000;">])) {
  </span><span style="color: #800080;">$variables</span> += <span style="color: #0000ff;">array</span>(<span style="color: #800080;">$info</span>['render element'] =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">());
}</span></pre>
</div>
<p>定义theme hook时，允许定义theme hook执行时必需的变量和默认值。可以使用render element定义单个变量，也可以用variables定义多个变量。用render element定义单个变量的例子：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> practice_theme() {
  </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'flash_messages' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>'render element' =&gt; 'messages',
      'template' =&gt; 'flash_messages',<span style="color: #000000;">
    )</span>,<span style="color: #000000;">
  );
}

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 整理后的$variables大致是这样：</span>
<span style="color: #800080;">$variables</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'messages' =&gt; <span style="color: #800080;">$element</span>,<span style="color: #000000;">
);</span></pre>
</div>
<p>用variables定义多个变量的例子：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> practice_theme() {
  </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'flash_messages' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>'variables' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
        </span>'foo' =&gt; <span style="color: #0000ff;">array</span>(), 
        'bar' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">()
      )</span>,
      'template' =&gt; 'flash_messages',<span style="color: #000000;">
    )</span>,<span style="color: #000000;">
  );
}

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 整理后的$variables大致是这样：</span>
<span style="color: #800080;">$variables</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'foo' =&gt; <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$element</span>['foo']) ? <span style="color: #800080;">$element</span>['foo'] : <span style="color: #0000ff;">array</span>(),
  'bar' =&gt; <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$element</span>['bar']) ? <span style="color: #800080;">$element</span>['bar'] : <span style="color: #0000ff;">array</span>(),<span style="color: #000000;">
);</span></pre>
</div>
<p><br />如果$info['base hook']不为空，则后面调用的preprocess functions和process functions要是base hook的，不能是当前$hook的。但还是要保证theme_hook_suggestion是当前$hook。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> If the hook is a suggestion of a base hook, invoke the variable processors of
// the base hook, but retain the suggestion as a high priority suggestion to
// be used unless overridden by a variable processor function.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['base hook'<span style="color: #000000;">])) {
  </span><span style="color: #800080;">$base_hook</span> = <span style="color: #800080;">$info</span>['base hook'<span style="color: #000000;">];
  </span><span style="color: #800080;">$base_hook_info</span> = <span style="color: #800080;">$hooks</span>[<span style="color: #800080;">$base_hook</span><span style="color: #000000;">];
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Include files required by the base hook, since its variable processors
  // might reside there.</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$base_hook_info</span>['includes'<span style="color: #000000;">])) {
    </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$base_hook_info</span>['includes'] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$include_file</span><span style="color: #000000;">) {
      </span><span style="color: #0000ff;">include_once</span> DRUPAL_ROOT . '/' . <span style="color: #800080;">$include_file</span><span style="color: #000000;">;
    }
  }
  </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$base_hook_info</span>['preprocess functions']) || <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$base_hook_info</span>['process functions'<span style="color: #000000;">])) {
    </span><span style="color: #800080;">$variables</span>['theme_hook_suggestion'] = <span style="color: #800080;">$hook</span><span style="color: #000000;">;
    </span><span style="color: #800080;">$hook</span> = <span style="color: #800080;">$base_hook</span><span style="color: #000000;">;
    </span><span style="color: #800080;">$info</span> = <span style="color: #800080;">$base_hook_info</span><span style="color: #000000;">;
  }
}</span></pre>
</div>
<p><br />调用preprocess functions和process functions。这两类函数有两个目的，一是处理$variables，二是处理theme hook suggestion。theme_hook_suggestion的优先级大于theme_hook_suggestions（注意是suggestion复数），theme_hook_suggestions再安装FILO先进后出的原则匹配，最后加入的优先级最高。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Invoke the variable processors, if any. The processors may specify
// alternate suggestions for which hook's template/function to use.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['preprocess functions']) || <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['process functions'<span style="color: #000000;">])) {
  </span><span style="color: #800080;">$variables</span>['theme_hook_suggestions'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #0000ff;">array</span>('preprocess functions', 'process functions') <span style="color: #0000ff;">as</span> <span style="color: #800080;">$phase</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$info</span>[<span style="color: #800080;">$phase</span><span style="color: #000000;">])) {
      </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$info</span>[<span style="color: #800080;">$phase</span>] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$processor_function</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$processor_function</span><span style="color: #000000;">)) {
          </span><span style="color: #008000;">//</span><span style="color: #008000;"> We don't want a poorly behaved process function changing $hook.</span>
          <span style="color: #800080;">$hook_clone</span> = <span style="color: #800080;">$hook</span>; <span style="color: #008000;">//</span><span style="color: #008000;"> 不要让某些人将$hook搞坏了</span>
          <span style="color: #800080;">$processor_function</span>(<span style="color: #800080;">$variables</span>, <span style="color: #800080;">$hook_clone</span><span style="color: #000000;">);
        }
      }
    }
  }
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> If the preprocess/process functions specified hook suggestions, and the
  // suggestion exists in the theme registry, use it instead of the hook that
  // theme() was called with. This allows the preprocess/process step to
  // route to a more specific theme hook. For example, a function may call
  // theme('node', ...), but a preprocess function can add 'node__article' as
  // a suggestion, enabling a theme to have an alternate template file for
  // article nodes. Suggestions are checked in the following order:
  // - The 'theme_hook_suggestion' variable is checked first. It overrides
  //   all others.
  // - The 'theme_hook_suggestions' variable is checked in FILO order, so the
  //   last suggestion added to the array takes precedence over suggestions
  //   added earlier.</span>
  <span style="color: #800080;">$suggestions</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$variables</span>['theme_hook_suggestions'<span style="color: #000000;">])) {
    </span><span style="color: #800080;">$suggestions</span> = <span style="color: #800080;">$variables</span>['theme_hook_suggestions'<span style="color: #000000;">];
  }
  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$variables</span>['theme_hook_suggestion'<span style="color: #000000;">])) {
    </span><span style="color: #800080;">$suggestions</span>[] = <span style="color: #800080;">$variables</span>['theme_hook_suggestion'<span style="color: #000000;">];
  }
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #008080;">array_reverse</span>(<span style="color: #800080;">$suggestions</span>) <span style="color: #0000ff;">as</span> <span style="color: #800080;">$suggestion</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$hooks</span>[<span style="color: #800080;">$suggestion</span><span style="color: #000000;">])) {
      </span><span style="color: #800080;">$info</span> = <span style="color: #800080;">$hooks</span>[<span style="color: #800080;">$suggestion</span><span style="color: #000000;">];
      </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
    }
  }
}</span></pre>
</div>
<p><br />产生输出可以用函数也可以用模版。$info['function']表示调用函数产生输出。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['function'<span style="color: #000000;">])) {
  </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$info</span>['function'<span style="color: #000000;">])) {
    </span><span style="color: #800080;">$output</span> = <span style="color: #800080;">$info</span>['function'](<span style="color: #800080;">$variables</span><span style="color: #000000;">);
  }
}</span></pre>
</div>
<p><br />$info['template']表示使用模板产生输出。theme_render_template()是默认的模板输出函数，.tpl.php是默认的模板文件扩展名。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Default render function and extension.</span>
<span style="color: #800080;">$render_function</span> = 'theme_render_template'<span style="color: #000000;">;
</span><span style="color: #800080;">$extension</span> = '.tpl.php';</pre>
</div>
<p>不同的theme engine允许有不同的模板输出函数和模板文件扩展名。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> The theme engine may use a different extension and a different renderer.</span>
<span style="color: #0000ff;">global</span> <span style="color: #800080;">$theme_engine</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$theme_engine</span><span style="color: #000000;">)) {
  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$info</span>['type'] != 'module'<span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$theme_engine</span> . '_render_template'<span style="color: #000000;">)) {
      </span><span style="color: #800080;">$render_function</span> = <span style="color: #800080;">$theme_engine</span> . '_render_template'<span style="color: #000000;">;
    }
    </span><span style="color: #800080;">$extension_function</span> = <span style="color: #800080;">$theme_engine</span> . '_extension'<span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$extension_function</span><span style="color: #000000;">)) {
      </span><span style="color: #800080;">$extension</span> = <span style="color: #800080;">$extension_function</span><span style="color: #000000;">();
    }
  }
}</span></pre>
</div>
<p>通过template_preprocess()为$varialbes添加默认变量。使用$variables['directory']判断template_preprocess()有没有执行过。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> In some cases, a template implementation may not have had
// template_preprocess() run (for example, if the default implementation is
// a function, but a template overrides that default implementation). In
// these cases, a template should still be able to expect to have access to
// the variables provided by template_preprocess(), so we add them here if
// they don't already exist. We don't want to run template_preprocess()
// twice (it would be inefficient and mess up zebra striping), so we use the
// 'directory' variable to determine if it has already run, which while not
// completely intuitive, is reasonably safe, and allows us to save on the
// overhead of adding some new variable to track that.</span>
<span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$variables</span>['directory'<span style="color: #000000;">])) {
  </span><span style="color: #800080;">$default_template_variables</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
  template_preprocess(</span><span style="color: #800080;">$default_template_variables</span>, <span style="color: #800080;">$hook</span><span style="color: #000000;">);
  </span><span style="color: #800080;">$variables</span> += <span style="color: #800080;">$default_template_variables</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>调用模板输出函数$render_function产生输出内容。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Render the output using the template file.</span>
<span style="color: #800080;">$template_file</span> = <span style="color: #800080;">$info</span>['template'] . <span style="color: #800080;">$extension</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['path'<span style="color: #000000;">])) {
  </span><span style="color: #800080;">$template_file</span> = <span style="color: #800080;">$info</span>['path'] . '/' . <span style="color: #800080;">$template_file</span><span style="color: #000000;">;
}
</span><span style="color: #800080;">$output</span> = <span style="color: #800080;">$render_function</span>(<span style="color: #800080;">$template_file</span>, <span style="color: #800080;">$variables</span>);</pre>
</div>
<p>Drupal使用PHPTemplate作为默认的主题引擎。PHPTemplate的输出函数theme_render_template()很简单，include模板文件就OK。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">/*</span><span style="color: #008000;">*
 * Renders a system default template, which is essentially a PHP template.
 *
 * @param $template_file
 *   The filename of the template to render.
 * @param $variables
 *   A keyed array of variables that will appear in the output.
 *
 * @return
 *   The output generated by the template.
 </span><span style="color: #008000;">*/</span>
<span style="color: #0000ff;">function</span> theme_render_template(<span style="color: #800080;">$template_file</span>, <span style="color: #800080;">$variables</span><span style="color: #000000;">) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Extract the variables to a local namespace</span>
  <span style="color: #008080;">extract</span>(<span style="color: #800080;">$variables</span>,<span style="color: #000000;"> EXTR_SKIP);

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Start output buffering</span>
  <span style="color: #008080;">ob_start</span><span style="color: #000000;">();

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Include the template file</span>
  <span style="color: #0000ff;">include</span> DRUPAL_ROOT . '/' . <span style="color: #800080;">$template_file</span><span style="color: #000000;">;

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> End buffering and return its contents</span>
  <span style="color: #0000ff;">return</span> <span style="color: #008080;">ob_get_clean</span><span style="color: #000000;">();
}</span></pre>
</div>
<p><br />最后，theme()还原$theme_path，返回输出$output。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> restore path_to_theme()</span>
<span style="color: #800080;">$theme_path</span> = <span style="color: #800080;">$temp</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$output</span>;</pre>
</div>]]></description></item><item><title>解析drupal_render()</title><link>http://www.cnblogs.com/eastson/archive/2014/04/30/3699749.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 30 Apr 2014 00:26:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/04/30/3699749.html</guid><description><![CDATA[<p>drupal_render()函数接收一个结构化的数组作为参数，然后调用theme()输出HTML。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_render(&amp;<span style="color: #800080;">$elements</span><span style="color: #000000;">) {
  </span>... ...<span style="color: #000000;">
}</span></pre>
</div>
<p><br />$elements['#printed']控制是否已经执行过，避免重复执行。在drupal_render()的开头检查它是否有设置，对应的，在drupal_render()的结尾设置它。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Do not print elements twice.</span>
<span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$elements</span>['#printed'<span style="color: #000000;">])) {
  </span><span style="color: #0000ff;">return</span> ''<span style="color: #000000;">;
}

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 在drupal_render()结尾会设置#printed</span>
<span style="color: #800080;">$elements</span>['#printed'] = <span style="color: #0000ff;">TRUE</span>;</pre>
</div>
<p>&nbsp;</p>
<p>$elements['#cache']控制是否允许使用缓存。如果有缓存，就直接返回，不用再重复执行后面的代码。|</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Try to fetch the element's markup from cache and return.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$elements</span>['#cache'<span style="color: #000000;">])) {
  </span><span style="color: #800080;">$cached_output</span> = drupal_render_cache_get(<span style="color: #800080;">$elements</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$cached_output</span> !== <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$cached_output</span><span style="color: #000000;">;
  }
}

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 在drupal_render()结尾保存缓存</span>
<span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$elements</span>['#cache'<span style="color: #000000;">])) {
  drupal_render_cache_set(</span><span style="color: #800080;">$output</span>, <span style="color: #800080;">$elements</span><span style="color: #000000;">);
}</span></pre>
</div>
<p>&nbsp;</p>
<p>$elements['#pre_render']是一个function数组，drupal_render()会依次执行其中的function，这样可以在render之前对$elements再做一些修改。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Make any final changes to the element before it is rendered. This means
// that the $element or the children can be altered or corrected before the
// element is rendered into the final text.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$elements</span>['#pre_render'<span style="color: #000000;">])) {
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$elements</span>['#pre_render'] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$function</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$function</span><span style="color: #000000;">)) {
      </span><span style="color: #800080;">$elements</span> = <span style="color: #800080;">$function</span>(<span style="color: #800080;">$elements</span><span style="color: #000000;">);
    }
  }
}</span></pre>
</div>
<p><br />$elements包含两类项目：properties和children。properties以#开头，其它都是children。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Get the children of the element, sorted by weight.</span>
<span style="color: #800080;">$children</span> = element_children(<span style="color: #800080;">$elements</span>, <span style="color: #0000ff;">TRUE</span>);</pre>
</div>
<p><br />$elements['#children']是一个字符串，临时保存drupal_render()输出的内容。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Initialize this element's #children, unless a #pre_render callback already
// preset #children.</span>
<span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$elements</span>['#children'<span style="color: #000000;">])) {
  </span><span style="color: #800080;">$elements</span>['#children'] = ''<span style="color: #000000;">;
}</span></pre>
</div>
<p><br />$elements['#theme']控制调用的theme function，结果保存在临时变量$elements['#children']。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Call the element's #theme function if it is set. Then any children of the
// element have to be rendered there.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$elements</span>['#theme'<span style="color: #000000;">])) {
  </span><span style="color: #800080;">$elements</span>['#children'] = theme(<span style="color: #800080;">$elements</span>['#theme'], <span style="color: #800080;">$elements</span><span style="color: #000000;">);
}</span></pre>
</div>
<p>&nbsp;<br />如果$elements['#theme']没有被处理，对应的$elements['#children']就为空。这个时候，drupal_render()就循环$children，递归调用drupal_render()。注意这里返回的结果是串联在$elements['#children']。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> If #theme was not set and the element has children, render them now.
// This is the same process as drupal_render_children() but is inlined
// for speed.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #800080;">$elements</span>['#children'] == ''<span style="color: #000000;">) {
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$children</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$key</span><span style="color: #000000;">) {
    </span><span style="color: #800080;">$elements</span>['#children'] .= drupal_render(<span style="color: #800080;">$elements</span>[<span style="color: #800080;">$key</span><span style="color: #000000;">]);
  }
}</span></pre>
</div>
<p><br />$elements['#theme_wrappers']是一个function数组，循环依次传入到theme()。注意这里返回的结果每次都会覆盖掉$elements['#children']。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Let the theme functions in #theme_wrappers add markup around the rendered
// children.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$elements</span>['#theme_wrappers'<span style="color: #000000;">])) {
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$elements</span>['#theme_wrappers'] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$theme_wrapper</span><span style="color: #000000;">) {
    </span><span style="color: #800080;">$elements</span>['#children'] = theme(<span style="color: #800080;">$theme_wrapper</span>, <span style="color: #800080;">$elements</span><span style="color: #000000;">);
  }
}</span></pre>
</div>
<p><br />$elements['#post_render']也是一个function数组，可以对生成的$elements['#children']做二次处理。注意这里返回的结果每次都会覆盖掉$elements['#children']。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Filter the outputted content and make any last changes before the
// content is sent to the browser. The changes are made on $content
// which allows the output'ed text to be filtered.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$elements</span>['#post_render'<span style="color: #000000;">])) {
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$elements</span>['#post_render'] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$function</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$function</span><span style="color: #000000;">)) {
      </span><span style="color: #800080;">$elements</span>['#children'] = <span style="color: #800080;">$function</span>(<span style="color: #800080;">$elements</span>['#children'], <span style="color: #800080;">$elements</span><span style="color: #000000;">);
    }
  }
}</span></pre>
</div>
<p><br />$elements['#prefix']和$elements['#suffix']允许对输出HTML做最后修饰。</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$prefix</span> = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$elements</span>['#prefix']) ? <span style="color: #800080;">$elements</span>['#prefix'] : ''<span style="color: #000000;">;
</span><span style="color: #800080;">$suffix</span> = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$elements</span>['#suffix']) ? <span style="color: #800080;">$elements</span>['#suffix'] : ''<span style="color: #000000;">;
</span><span style="color: #800080;">$output</span> = <span style="color: #800080;">$prefix</span> . <span style="color: #800080;">$elements</span>['#children'] . <span style="color: #800080;">$suffix</span>;</pre>
</div>]]></description></item><item><title>定义Drupal模版</title><link>http://www.cnblogs.com/eastson/archive/2014/04/29/3698912.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 29 Apr 2014 03:57:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/04/29/3698912.html</guid><description><![CDATA[<p>这里演示如何定义Drupal模版。演示环境需要先创建模块practice，然后再定义模版flash_messages。<br /><br /></p>
<p>首先，我们可以通过hook_theme()钩子定义flash_messages：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> practice_theme() {
    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">array</span><span style="color: #000000;">(
        </span>'flash_messages' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
            </span>'render element' =&gt; 'messages',
            'template' =&gt; 'flash_messages',<span style="color: #000000;">
        )</span>,<span style="color: #000000;">
    );
}</span></pre>
</div>
<p>&nbsp;<br />下一步，flash_messages如何显示处理？</p>
<p><br />如何定义template？如何定义function？</p>
<p><br /><br /><br />template_preprocess()<br />template_preprocess_flash_messages()<br />moduleA_preprocess()<br />moduleA_preprocess_flash_messages()<br /><span style="line-height: 1.5;">... ...</span><br />moduleZ_preprocess()<br />moduleZ_preprocess_flash_messages()<br /><br />template_process()<br />template_process_flash_messages()<br />moduleA_process()<br />moduleA_process_flash_messages()<br /><span>... ...</span><br />moduleZ_process()<br />moduleZ_process_flash_messages()<br /><br /></p>]]></description></item><item><title>Drupal 7 driver for SQL Server and SQL Azure</title><link>http://www.cnblogs.com/eastson/archive/2014/04/22/3680366.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 22 Apr 2014 05:47:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/04/22/3680366.html</guid><description><![CDATA[<p><span>Drupal 7 driver for Microsoft SQL Server database engines. It supports both SQL Server (version 2008 and later), and SQL Azure, part of Microsoft Azure cloud platform.</span><br /><br /><img src="http://images.cnitblog.com/i/111826/201404/221346262485845.png" alt="" /><br /><br /><a href="https://drupal.org/project/sqlsrv">https://drupal.org/project/sqlsrv</a></p>]]></description></item><item><title>重新安装Drupal？</title><link>http://www.cnblogs.com/eastson/archive/2014/04/22/3680207.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 22 Apr 2014 04:02:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/04/22/3680207.html</guid><description><![CDATA[<p>因个人需要需要重新安装Drupal。如何操纵呢？Drupal是在_drupal_bootstrap_database()函数里面检查是否已经安装过的。检查的依据是有没有$GLOBALS['databases']设置，或者是有没有设置常量MAINTENANCE_MODE=install。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> _drupal_bootstrap_database() {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Redirect the user to the installation script if Drupal has not been
  // installed yet (i.e., if no $databases array has been defined in the
  // settings.php file) and we are not already installing.</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$GLOBALS</span>['databases']) &amp;&amp; !<span style="color: #000000;">drupal_installation_attempted()) {
    </span><span style="color: #0000ff;">include_once</span> DRUPAL_ROOT . '/includes/install.inc'<span style="color: #000000;">;
    install_goto(</span>'install.php'<span style="color: #000000;">);
  }
  
  </span>...<span style="color: #000000;"> 
}

</span><span style="color: #008000;">/*</span><span style="color: #008000;">*
 * Returns TRUE if a Drupal installation is currently being attempted.
 </span><span style="color: #008000;">*/</span>
<span style="color: #0000ff;">function</span><span style="color: #000000;"> drupal_installation_attempted() {
  </span><span style="color: #0000ff;">return</span> <span style="color: #008080;">defined</span>('MAINTENANCE_MODE') &amp;&amp; MAINTENANCE_MODE == 'install'<span style="color: #000000;">;
}</span></pre>
</div>
<p><br />$GLOBALS['databases']定义在sites/default/settings.php，Drupal安装时自动生成该文件。所以，要重新安装Drupal，简单地删除sites/default/settings.php就可以。</p>]]></description></item><item><title>Bootstrap 3 Menu Generator</title><link>http://www.cnblogs.com/eastson/archive/2014/04/17/3671068.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 17 Apr 2014 08:27:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/04/17/3671068.html</guid><description><![CDATA[<p><a href="http://bootstrap3-menu.codedorigin.com/"><span>Bootstrap 3 Menu Generator</span></a></p>
<p><img src="http://images.cnitblog.com/i/111826/201404/171626250417238.png" alt="" /></p>]]></description></item><item><title>Servlet路径</title><link>http://www.cnblogs.com/eastson/archive/2014/04/04/3644814.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 04 Apr 2014 03:36:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/04/04/3644814.html</guid><description><![CDATA[<p>这里仅限OSGi注册的Servlet，WebServer里面应该有所不同。</p>
<div class="cnblogs_code">
<pre>http.registerServlet("/control/main", <span style="color: #0000ff;">new</span> ControlServlet(),  <span style="color: #0000ff;">null</span>, <span style="color: #0000ff;">null</span>);</pre>
</div>
<p>&nbsp;</p>
<p>http://localhost/control/main<br />ServletPath=/control/main<br />ContextPath=<br />RequestURI=/control/main<br />RequestURL=http://localhost/control/main<br />PathInfo=null</p>
<p>http://localhost/control/main/<br />ServletPath=/control/main<br />ContextPath=<br />RequestURI=/control/main/<br />RequestURL=http://localhost/control/main/<br />PathInfo=/</p>
<p>http://localhost/control/main/baidu<br />ServletPath=/control/main<br />ContextPath=<br />RequestURI=/control/main/baidu<br />RequestURL=http://localhost/control/main/baidu<br />PathInfo=/baidu</p>
<p>http://localhost/control/main/baidu/<br />ServletPath=/control/main<br />ContextPath=<br />RequestURI=/control/main/baidu/<br />RequestURL=http://localhost/control/main/baidu/<br />PathInfo=/baidu/</p>
<p>http://localhost/control/main/baidu?foo=xxx&amp;bar=yyy#zzz<br />ServletPath=/control/main<br />ContextPath=<br />RequestURI=/control/main/baidu<br />RequestURL=http://localhost/control/main/baidu<br />PathInfo=/baidu</p>]]></description></item><item><title>监听OSGi服务</title><link>http://www.cnblogs.com/eastson/archive/2014/03/26/3624806.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 26 Mar 2014 01:39:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/03/26/3624806.html</guid><description><![CDATA[<p>方法一：实现ServiceListener接口：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> org.riawork.demo.web;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleActivator;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleContext;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceEvent;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceListener;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceReference;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.service.http.HttpService;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.service.http.NamespaceException;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> Activator <span style="color: #0000ff;">implements</span><span style="color: #000000;"> BundleActivator, ServiceListener {

    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> BundleContext ctx;
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> ServiceReference ref;
    
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> start(BundleContext context) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        System.out.println(</span>"Hello World-Web!!"<span style="color: #000000;">);
        </span><span style="color: #0000ff;">this</span>.ctx =<span style="color: #000000;"> context;
        context.addServiceListener(</span><span style="color: #0000ff;">this</span>, "(&amp;(objectClass=" + HttpService.<span style="color: #0000ff;">class</span>.getName() + "))"<span style="color: #000000;">);
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> stop(BundleContext context) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        System.out.println(</span>"Goodbye World-Web!!"<span style="color: #000000;">);
    }

    @Override
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> serviceChanged(ServiceEvent event) {
        ref </span>= ctx.getServiceReference(HttpService.<span style="color: #0000ff;">class</span><span style="color: #000000;">.getName());
        HttpService http </span>=<span style="color: #000000;"> (HttpService) ctx.getService(ref);
        
        </span><span style="color: #0000ff;">switch</span><span style="color: #000000;"> (event.getType()) {
            </span><span style="color: #0000ff;">case</span><span style="color: #000000;"> ServiceEvent.REGISTERED:
                </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
                    http.registerResources(</span>"/demo/page", "page", <span style="color: #0000ff;">null</span><span style="color: #000000;">);
                    System.out.println(</span>"请通过/demo/page/login.htm访问"<span style="color: #000000;">);
                } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (NamespaceException e) {
                    e.printStackTrace();
                }
                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
                
            </span><span style="color: #0000ff;">case</span><span style="color: #000000;"> ServiceEvent.UNREGISTERING:
                http.unregister(</span>"/demo/page"<span style="color: #000000;">);
                System.out.println(</span>"已卸载web模块！"<span style="color: #000000;">);
                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
        }
    }
}</span></pre>
</div>
<p><br />方式二：继承ServiceTracker基类：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> org.riawork.demo.web;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleActivator;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleContext;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceEvent;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceReference;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.service.http.HttpService;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.service.http.NamespaceException;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.util.tracker.ServiceTracker;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.util.tracker.ServiceTrackerCustomizer;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> Activator <span style="color: #0000ff;">implements</span><span style="color: #000000;"> BundleActivator, ServiceListener {

    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> BundleContext ctx;
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> ServiceReference ref;
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> LocalTracker tracker;
    
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> start(BundleContext context) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        System.out.println(</span>"Hello World-Web!!"<span style="color: #000000;">);
        </span><span style="color: #0000ff;">this</span>.ctx =<span style="color: #000000;"> context;
        </span><span style="color: #0000ff;">this</span>.tracker = <span style="color: #0000ff;">new</span><span style="color: #000000;"> LocalTracker(context);
        </span><span style="color: #0000ff;">this</span><span style="color: #000000;">.tracker.open();
        context.addServiceListener(</span><span style="color: #0000ff;">this</span>, "(&amp;(objectClass=" + HttpService.<span style="color: #0000ff;">class</span>.getName() + "))"<span style="color: #000000;">);
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> stop(BundleContext context) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        </span><span style="color: #0000ff;">this</span><span style="color: #000000;">.tracker.close();
        </span><span style="color: #0000ff;">this</span>.tracker = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
        System.out.println(</span>"Goodbye World-Web!!"<span style="color: #000000;">);
    }

    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">class</span> LocalTracker <span style="color: #0000ff;">extends</span><span style="color: #000000;"> ServiceTracker {
        </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> LocalTracker(BundleContext context) {
            </span><span style="color: #0000ff;">super</span>(context, HttpService.<span style="color: #0000ff;">class</span>.getName(), <span style="color: #0000ff;">null</span><span style="color: #000000;">);
        }
        
        </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> Object addingService(ServiceReference ref) {
            HttpService http </span>=<span style="color: #000000;"> (HttpService) context.getService(ref);
            </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
                http.registerResources(</span>"/demo/page", "page", <span style="color: #0000ff;">null</span><span style="color: #000000;">);
                System.out.println(</span>"请通过/demo/page/login.htm访问"<span style="color: #000000;">);
            } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (NamespaceException e) {
                e.printStackTrace();
            }
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> http;
        }
        
        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> removedService(ServiceReference ref, Object service) {
            HttpService http </span>=<span style="color: #000000;"> (HttpService) service;
            http.unregister(</span>"/demo/page"<span style="color: #000000;">);
            </span><span style="color: #0000ff;">super</span><span style="color: #000000;">.removedService(ref, service);
            System.out.println(</span>"已卸载web模块！"<span style="color: #000000;">);
        }
    }
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>将web容器置于OSGi框架下进行web应用的开发</title><link>http://www.cnblogs.com/eastson/archive/2014/03/21/3615984.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 21 Mar 2014 07:27:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/03/21/3615984.html</guid><description><![CDATA[<p><span>将web容器置于OSGi框架下，其实就是将web容器做成OSGi支持的Bundle，再安装到OSGi框架中，这里使用的是Jetty容器。</span><br /><br /><span>1、创建一个Eclipse插件项目，在此插件下创建一个WebRoot文件夹，里面创建两个文件夹一个是images，一个是pages，里面分别放置一个图片文件，一个简单的html页面和一个简单的jsp文件。大致目录结构如下图所示：</span><br /><img src="http://images.cnitblog.com/i/111826/201403/211520018494997.png" alt="" /><br /><br />2. index.<span>jsp文件的内容如下：<br /></span></p>
<div class="cnblogs_code">
<pre><span style="background-color: #ffff00; color: #000000;">&lt;%</span><span style="background-color: #f5f5f5; color: #000000;">@ page language</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #800000;">java</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #000000;"> contentType</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #800000;">text/html; charset=UTF-8</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #000000;"> pageEncoding</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #800000;">UTF-8</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #ffff00; color: #000000;">%&gt;</span>  
<span style="color: #0000ff;">&lt;!</span><span style="color: #ff00ff;">DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"</span><span style="color: #0000ff;">&gt;</span>  
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">html</span><span style="color: #0000ff;">&gt;</span>  
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">head</span><span style="color: #0000ff;">&gt;</span>  
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">meta </span><span style="color: #ff0000;">http-equiv</span><span style="color: #0000ff;">="Content-Type"</span><span style="color: #ff0000;"> content</span><span style="color: #0000ff;">="text/html; charset=UTF-8"</span><span style="color: #0000ff;">&gt;</span>  
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">title</span><span style="color: #0000ff;">&gt;</span>Insert title here<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">title</span><span style="color: #0000ff;">&gt;</span>  
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">head</span><span style="color: #0000ff;">&gt;</span>  
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">body</span><span style="color: #0000ff;">&gt;</span>  
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">img </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="images/08.png"</span><span style="color: #ff0000;"> width</span><span style="color: #0000ff;">="200"</span><span style="color: #ff0000;"> height</span><span style="color: #0000ff;">="150"</span><span style="color: #0000ff;">&gt;</span>  
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">body</span><span style="color: #0000ff;">&gt;</span>  
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">html</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><br /><span>3、MANIFEST.MF文件的内容如下：<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-Name: osgi_jetty
Bundle-SymbolicName: osgi_jetty;singleton:=true
Bundle-Version: 1.0.0
Bundle-Activator: com.javaworld.samples.osgi_jetty.Activator
Bundle-RequiredExecutionEnvironment: JavaSE-1.6
Import-Package: javax.servlet;version="2.6.0",
 javax.servlet.http;version="2.6.0",
 org.osgi.framework;version="1.3.0"
Require-Bundle: org.eclipse.equinox.http.registry;bundle-version="1.1.300",
 org.eclipse.equinox.jsp.jasper.registry;bundle-version="1.0.300",
 org.eclipse.equinox.http.jetty;bundle-version="3.0.100"</span></pre>
</div>
<p>当插件使用到Eclipse的扩展点机制时，必须在Bundle-SymbolicName属性值最后设置singleton的值为true。<br /><br /><span>4、HelloServlet.java文件的内容如下：<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> com.javaworld.samples.osgi_jetty;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.IOException;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.text.SimpleDateFormat;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.util.Date;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletException;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServlet;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequest;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletResponse;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> HelloServlet <span style="color: #0000ff;">extends</span><span style="color: #000000;"> HttpServlet {  
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">final</span> <span style="color: #0000ff;">long</span> serialVersionUID = -5560032300646459304L<span style="color: #000000;">;  
  
    </span><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">void</span> doGet(HttpServletRequest request, HttpServletResponse response) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ServletException, IOException {  
        response.setContentType(</span>"text/html;charset=GBK"<span style="color: #000000;">);  
          
        SimpleDateFormat sdf </span>= <span style="color: #0000ff;">new</span> SimpleDateFormat("yyyy-MM-dd HH:mm:ss"<span style="color: #000000;">);  
        String date </span>= sdf.format(<span style="color: #0000ff;">new</span><span style="color: #000000;"> Date());  
          
        response.getWriter().println(</span>"现在的时间是：" +<span style="color: #000000;"> date);  
    }  
}  </span></pre>
</div>
<p><br /><span>5、<span>如果要通过web容器访问bundle中的web资源，必须要通过某种方式来告诉OSGi框架，哪些资源可以访问，访问的规则是什么。新增一个名为&ldquo;plugin.xml&rdquo;的配置文件，</span>内容如下：<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>   
<span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">eclipse version="3.0"</span><span style="color: #0000ff;">?&gt;</span>   
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">plugin</span><span style="color: #0000ff;">&gt;</span>   
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">extension </span><span style="color: #ff0000;">point</span><span style="color: #0000ff;">="org.eclipse.equinox.http.registry.resources"</span><span style="color: #0000ff;">&gt;</span>  
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">resource </span><span style="color: #ff0000;">alias</span><span style="color: #0000ff;">="/images"</span><span style="color: #ff0000;"> base-name</span><span style="color: #0000ff;">="WebRoot/images"</span><span style="color: #0000ff;">/&gt;</span>  
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">resource </span><span style="color: #ff0000;">alias</span><span style="color: #0000ff;">="/pages"</span><span style="color: #ff0000;"> base-name</span><span style="color: #0000ff;">="WebRoot/pages"</span><span style="color: #0000ff;">/&gt;</span>  
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">extension</span><span style="color: #0000ff;">&gt;</span>  
      
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">extension </span><span style="color: #ff0000;">point</span><span style="color: #0000ff;">="org.eclipse.equinox.http.registry.servlets"</span><span style="color: #0000ff;">&gt;</span>   
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">servlet </span><span style="color: #ff0000;">alias</span><span style="color: #0000ff;">="/hello"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="com.javaworld.samples.osgi_jetty.HelloServlet"</span><span style="color: #ff0000;"> load-on-startup</span><span style="color: #0000ff;">="true"</span><span style="color: #0000ff;">/&gt;</span>  
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">servlet </span><span style="color: #ff0000;">alias</span><span style="color: #0000ff;">="/*.jsp"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.eclipse.equinox.jsp.jasper.registry.JSPFactory:/WebRoot/Pages/"</span><span style="color: #0000ff;">/&gt;</span>   
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">extension</span><span style="color: #0000ff;">&gt;</span>   
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">plugin</span><span style="color: #0000ff;">&gt;</span>   </pre>
</div>
<p><br /><span>6、启动项目。</span>启动项目后，可以通过类似以下的路径来访问：</p>
<ul>
<li><a href="http://localhost:8081/pages/hello.html">http://localhost/pages/hello.html</a></li>
<li><a href="http://localhost:8081/hello">http://localhos/hello</a></li>
<li><a href="http://localhost:8081/index.jsp">http://localhost/index.jsp<br /><img src="http://images.cnitblog.com/i/111826/201403/211526294904536.png" alt="" /><br /></a></li>



</ul>
<p><br />附件：<a href="http://files.cnblogs.com/eastson/osgi_jetty.zip">osgi_jetty.zip</a></p>]]></description></item><item><title>调试Felix Framework</title><link>http://www.cnblogs.com/eastson/archive/2014/03/19/3611431.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 19 Mar 2014 07:08:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/03/19/3611431.html</guid><description><![CDATA[<p>这里是指用Eclipse调试Felix Framework自身。<br /><br />1. 首先安装Eclipse Java EE，然后再安装<a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_0" href="http://www.cnblogs.com/eastson/p/3610615.html">Java Source Attacher</a>，这样才会在Jar文件的右键菜单&ldquo;属性&rdquo;中有&ldquo;Java Source Attachement&rdquo;选项。<br /><img src="http://images.cnitblog.com/i/111826/201403/191422013964602.png" alt="" /><br /><img src="http://images.cnitblog.com/i/111826/201403/191423046938495.png" alt="" /><br /><br />2. 下载<a href="https://felix.apache.org/downloads.cgi">Felix Framework&nbsp;Distribution</a>，注意这里是二进制版本，也就是直接可以执行的版本，不是源码。<br /><img src="http://images.cnitblog.com/i/111826/201403/191426464436816.png" alt="" /><br /><img src="http://images.cnitblog.com/i/111826/201403/191428064437043.png" alt="" /><br /><br />3. 使用SVN客户端工具下载Felix的源码http://svn.apache.org/repos/asf/felix/releases，注意版本号要对应。需要下载的有这样几项：<br />org.apache.felix.framework和org.apache.felix.main，这两项会对应到bin/felix.jar<br />org.apache.felix.bundlerepository、org.apache.felix.gogo.runtime、org.apache.felix.gogo.command、org.apache.felix.gogo.shell，这四项对应bundle目录下的各个jar文件<br /><img src="http://images.cnitblog.com/i/111826/201403/191436499122154.png" alt="" /><br /><img src="http://images.cnitblog.com/i/111826/201403/191437513811809.png" alt="" /><br /><br />4. 将下载的源码压缩成zip文件。两点要注意，一是framework和main需要先合并，然后处理framework就可以了，可以直接将main复制到framework；二是只需要将src/main/java的文件压缩成zip，其它都不需要，resources也可以不要，我们只关心java文件，资源文件的在jar里面都有。压缩完以后应该有5个zip文件。<br /><img src="http://images.cnitblog.com/i/111826/201403/191443050211791.png" alt="" /><br /><img src="http://images.cnitblog.com/i/111826/201403/191445234744959.png" alt="" /><br /><br />5. 创建Java Project，<br /><img src="http://images.cnitblog.com/i/111826/201403/191447586462986.png" alt="" /><br /><img src="http://images.cnitblog.com/i/111826/201403/191450457562733.png" alt="" /><br /><img src="http://images.cnitblog.com/i/111826/201403/191452511466626.png" alt="" /><br /><br />6. 默认的Referenced Libraries没有包含bin/felix.jar，加进去。<br /><img src="http://images.cnitblog.com/i/111826/201403/191455333817961.png" alt="" /><br /><br />7. 在Referenced Libraries下的felix.jar上点击右键菜单，打开Properties窗口，切换到Java Source Attachement标签，关联对应的源代码zip。<br /><img src="http://images.cnitblog.com/i/111826/201403/191458597716909.png" alt="" /><br /><br />8. 同样，将Referenced Libraries下的其它jar文件都关联到源代码zip文件。<br />9. 新建一个Debug Configuration，注意Main class和Stop in main两个地方。<br /><img src="http://images.cnitblog.com/i/111826/201403/191502256772470.png" alt="" /><br /><br />10. 执行Debug，是不是就可以了？<br /><img src="http://images.cnitblog.com/i/111826/201403/191504041627281.png" alt="" /><br /><br />附件是建立好的Eclipse工程，方便参考：<br /><a id="" href="http://files.cnblogs.com/eastson/felix-framework-4.2.1-debug.zip">felix-framework-4.2.1-debug.zip</a></p>]]></description></item><item><title>Java Source Attacher 1.2 发布</title><link>http://www.cnblogs.com/eastson/archive/2014/03/19/3610615.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 19 Mar 2014 01:31:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/03/19/3610615.html</guid><description><![CDATA[<p>&nbsp;&nbsp; Java Source Attacher 1.2 是一款自动帮你附加源代码的Eclipse插件，相信很多Java Coder都有过手动附加源代码的经历，去网上搜索，然后下载下来，最后附加上，很麻烦，而且很费时间，现在Java Source Attacher 1.2就可以帮你很轻松的帮你自动搜索源代码，下载下来，然后附加上，很方面的说，看看怎么使用吧：</p>
<p>1.需求 Requirements：</p>
<p>&nbsp; &nbsp; &nbsp; JDK1.5+</p>
<p>&nbsp; &nbsp; &nbsp; Eclipse 3.5+</p>
<p>2.安装方法</p>
<p>&nbsp; &nbsp; &nbsp; 在线更新：</p>
<p>&nbsp; &nbsp; &nbsp; URL:<a title="http://svn.codespot.com/a/eclipselabs.org/free-plugins/trunk/site/" href="http://svn.codespot.com/a/eclipselabs.org/free-plugins/trunk/site/" rel="nofollow">http://svn.codespot.com/a/eclipselabs.org/free-plugins/trunk/site/</a></p>
<p>&nbsp; &nbsp; &nbsp; 手动下载：</p>
<p>&nbsp; &nbsp; &nbsp; http://svn.codespot.com/a/eclipselabs.org/free-plugins/trunk/site/plugins/org.freejava.javasourceattacher_1.2.1.jar</p>
<p>&nbsp; &nbsp; &nbsp; 扔到Eclipse的安装目录下的dropins目录下，重启Eclipse即可</p>
<p>3.使用方法</p>
<p>&nbsp; &nbsp;&nbsp;Right click on a Java library of a Java-based project and choose the menu item "Attach Java Source" and wait for the source code to be downloaded/attached to the library automatically (you will see a background job is running on Eclipse status bar).</p>
<p>&nbsp; &nbsp; 在你想要附加源代码的jar包上点击右键，选择&rdquo;Attach Java Source" ,然后就不用管了，该插件会联网搜索源代码，下载并附加到jar包上。你可以在右下角Eclipse状态条上看到后台任务在运行。</p>]]></description></item><item><title>Maven + Apache Felix + CXF + DOSGi series</title><link>http://www.cnblogs.com/eastson/archive/2014/03/17/3605089.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 17 Mar 2014 07:02:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/03/17/3605089.html</guid><description><![CDATA[<p>This is a blog series on how to combine Maven + Apache Felix + CXF + DOSGi. The information presented may not be correct and some parts can definitely be improved. Not all posts are published immediately, so stay tuned!</p>
<p>Part 1&nbsp;<a href="http://maksim.sorokin.dk/it/2011/07/19/maven-apache-felix-easy-development-and-debugging-with-eclipse/">Maven + Apache Felix: Easy Development and Debugging With Eclipse</a><br />Part 2&nbsp;<a href="http://maksim.sorokin.dk/it/2011/07/20/maven-apache-felix-best-practices/">Maven + Apache Felix: Best Practices</a><br />Part 3&nbsp;<a href="http://maksim.sorokin.dk/it/2011/07/21/maven-apache-felix-cxf-creating-a-restful-webservice-with-cxf-a-simple-string-example/">Maven + Apache Felix + CXF: Creating a RESTful Webservice with CXF. A Simple String Example.</a><br />Part 4&nbsp;<a href="http://maksim.sorokin.dk/it/2011/07/24/maven-apache-felix-cxf-creating-a-restful-webservice-with-cxf-returning-and-object/">Maven + Apache Felix + CXF: Creating a RESTful Webservice with CXF. Returning and Object.</a><br />Part 5&nbsp;<a href="http://maksim.sorokin.dk/it/2011/07/26/maven-apache-felix-cxf-creating-a-restful-webservice-with-cxf-consuming-an-object/">Maven + Apache Felix + CXF: Creating a RESTful Webservice with CXF. Consuming an Object</a><br />Part 6&nbsp;<a href="http://maksim.sorokin.dk/it/2011/07/27/cxf-restful-webservices-running-on-a-different-port/">CXF RESTful Webservices: Running on a Different Port</a><br />Part 7&nbsp;<a href="http://maksim.sorokin.dk/it/2011/08/02/maven-apache-felix-cxf-restful-webservice-with-cxf-using-post/">Maven + Apache Felix + CXF: RESTful Webservice with CXF. Using POST.</a><br />Part 8&nbsp;<a href="http://maksim.sorokin.dk/it/2011/08/06/maven-apache-felix-cxf-securing-a-service-with-http-basic-authentication/">Maven + Apache Felix + CXF: Securing a Service with HTTP Basic Authentication</a><br />Part 9&nbsp;<a href="http://maksim.sorokin.dk/it/2011/08/09/maven-apache-felix-strategy-to-handle-non-osgi-dependencies/">Maven + Apache Felix: Strategy to Handle non-OSGi Dependencies</a><br />Part 10&nbsp;<a href="http://maksim.sorokin.dk/it/2011/08/11/apache-felix-running-two-instances-of-felix-launcher-in-the-eclipse/">Apache Felix: Running Two Instances of Felix Launcher in The Eclipse</a><br />Part 11&nbsp;<a href="http://maksim.sorokin.dk/it/2011/09/18/maven-apache-felix-cxf-dosgi-an-example-of-dosgi-service/">Maven + Apache Felix + CXF + DOSGi: An Example of DOSGi Service</a></p>]]></description></item><item><title>OFBiz实战（1）：整合Groovy+FreeMaker</title><link>http://www.cnblogs.com/eastson/archive/2014/03/13/3597958.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 13 Mar 2014 03:36:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/03/13/3597958.html</guid><description><![CDATA[<p>这是OFBiz实战系列的第一篇文件，该系列的目的是整合Groovy+FreeMaker开发一个图书管理系统，阐述在此过程中碰到的一系列问题，以及如何解决这些问题。第一篇文章说明如何使用Groovy+FreeMaker搭建基本的组件框架，并能够将数据从Groovy传到FreeMaker。|<br /><br />1. 在hot-deploy目录下创建组件library基本目录结构。<br /><img src="http://images.cnitblog.com/i/111826/201403/130944284887015.png" alt="" /><br /><br />2. 新建文件library/ofbiz-component.xml，编辑内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">ofbiz-component </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="library"</span><span style="color: #ff0000;">
        xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;">
        xsi:noNamespaceSchemaLocation</span><span style="color: #0000ff;">="http://ofbiz.apache.org/dtds/ofbiz-component.xsd"</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">resource-loader </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="main"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="component"</span><span style="color: #0000ff;">/&gt;</span>
    
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">webapp </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="library"</span><span style="color: #ff0000;">
        title</span><span style="color: #0000ff;">="Library"</span><span style="color: #ff0000;">
        server</span><span style="color: #0000ff;">="default-server"</span><span style="color: #ff0000;">
        location</span><span style="color: #0000ff;">="webapp/library"</span><span style="color: #ff0000;">
        base-permission</span><span style="color: #0000ff;">="OFBTOOLS"</span><span style="color: #ff0000;">
        mount-point</span><span style="color: #0000ff;">="/library"</span><span style="color: #ff0000;">
        app-bar-display</span><span style="color: #0000ff;">="false"</span><span style="color: #0000ff;">/&gt;</span>
        
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">ofbiz-component</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><br />3. 新建文件library/webapp/library/WEB-INF/web.xml，编辑内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>
<span style="color: #0000ff;">&lt;!</span><span style="color: #ff00ff;">DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd"</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">web-app</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">display-name</span><span style="color: #0000ff;">&gt;</span>Library<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">display-name</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">context-param</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>webSiteId<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>LIBRARY<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>A unique ID used to look up the WebSite entity<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">context-param</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">context-param</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>localDispatcherName<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>library<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>A unique name used to identify/recognize the local dispatcher for the Service Engine<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">context-param</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">context-param</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>entityDelegatorName<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>default<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>The Name of the Entity Delegator to use, defined in entityengine.xml<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">context-param</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">context-param</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>compressHTML<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>false<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>Remove unnecessary whitespace from HTML output.<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">context-param</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>ContextFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">display-name</span><span style="color: #0000ff;">&gt;</span>ContextFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">display-name</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-class</span><span style="color: #0000ff;">&gt;</span>org.ofbiz.webapp.control.ContextFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-class</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>disableContextSecurity<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>N<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>allowedPaths<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>/error:/control:/select:/index.html:/index.jsp:/default.html:/default.jsp:/images:/includes/maincss.css<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>errorCode<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>403<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>redirectPath<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>/control/main<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;</span>ContextFilter<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">filter-name</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>/*<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">filter-mapping</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">listener</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">listener-class</span><span style="color: #0000ff;">&gt;</span>org.ofbiz.webapp.control.ControlEventListener<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">listener-class</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">listener</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">listener</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">listener-class</span><span style="color: #0000ff;">&gt;</span>org.ofbiz.webapp.control.LoginEventListener<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">listener-class</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">listener</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">servlet</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">servlet-name</span><span style="color: #0000ff;">&gt;</span>ControlServlet<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">servlet-name</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">display-name</span><span style="color: #0000ff;">&gt;</span>ControlServlet<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">display-name</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>Main Control Servlet<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">servlet-class</span><span style="color: #0000ff;">&gt;</span>org.ofbiz.webapp.control.ControlServlet<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">servlet-class</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-on-startup</span><span style="color: #0000ff;">&gt;</span>1<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">load-on-startup</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">servlet</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">servlet-mapping</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">servlet-name</span><span style="color: #0000ff;">&gt;</span>ControlServlet<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">servlet-name</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>/control/*<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">servlet-mapping</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">session-config</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">session-timeout</span><span style="color: #0000ff;">&gt;</span>60<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">session-timeout</span><span style="color: #0000ff;">&gt;</span><span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> in minutes </span><span style="color: #008000;">--&gt;</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">session-config</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">welcome-file-list</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">welcome-file</span><span style="color: #0000ff;">&gt;</span>index.jsp<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">welcome-file</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">welcome-file</span><span style="color: #0000ff;">&gt;</span>index.html<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">welcome-file</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">welcome-file</span><span style="color: #0000ff;">&gt;</span>index.htm<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">welcome-file</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">welcome-file-list</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">web-app</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><br />4. 新建文件library/webapp/library/WEB-INF/controller.xml，编辑内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">site-conf </span><span style="color: #ff0000;">xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;">
        xsi:noNamespaceSchemaLocation</span><span style="color: #0000ff;">="http://ofbiz.apache.org/dtds/site-conf.xsd"</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">include </span><span style="color: #ff0000;">location</span><span style="color: #0000ff;">="component://common/webcommon/WEB-INF/common-controller.xml"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">include </span><span style="color: #ff0000;">location</span><span style="color: #0000ff;">="component://common/webcommon/WEB-INF/portal-controller.xml"</span><span style="color: #0000ff;">/&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">request-map </span><span style="color: #ff0000;">uri</span><span style="color: #0000ff;">="main"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">event </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="groovy"</span><span style="color: #ff0000;"> path</span><span style="color: #0000ff;">="component://library/webapp/library/WEB-INF/actions/main.groovy"</span><span style="color: #0000ff;">/&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">response </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="success"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="view"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="main"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">request-map</span><span style="color: #0000ff;">&gt;</span>
    
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">view-map </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="main"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="ftl"</span><span style="color: #ff0000;"> page</span><span style="color: #0000ff;">="component://library/webapp/library/main.ftl"</span><span style="color: #0000ff;">/&gt;</span>

<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">site-conf</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>5. 新建文件library/webapp/library/WEB-INF/actions/main.groovy，编辑内容：</p>
<div class="cnblogs_code">
<pre>request.setAttribute("name", "奥特曼"<span style="color: #000000;">);

def books </span>=<span style="color: #000000;"> [];
books[</span>0] = ["name": "Java入门", "price": 85<span style="color: #000000;">];
books[</span>1] = ["name": "Java实战", "price": 70<span style="color: #000000;">];
books[</span>2] = ["name": "Java中级", "price": 63<span style="color: #000000;">];
books[</span>3] = ["name": "Java高级", "price": 81<span style="color: #000000;">];
request.setAttribute(</span>"books"<span style="color: #000000;">, books);

</span><span style="color: #0000ff;">return</span> "success";</pre>
</div>
<p><span style="line-height: 1.5;"><br />6.&nbsp;新建文件library/webapp/library/main.ftl，编辑内容：<br /></span></p>
<div class="cnblogs_code">
<pre>你的名字：&lt;b&gt;${requestAttributes.name}&lt;/b&gt;

&lt;table border='1'&gt;
    &lt;#list requestAttributes.books as book&gt;
    &lt;tr&gt;
        &lt;td&gt;${book.name}&lt;/td&gt;
        &lt;td&gt;${book.price?if_exists}&lt;/td&gt;
    &lt;/tr&gt;
    &lt;/#list&gt;
&lt;/table&gt;</pre>
</div>
<p><span style="line-height: 1.5;"><br />7. 启动OFBiz，浏览http://localhost:8080/library/control/main，看到如下的结果：<br /><img src="http://images.cnitblog.com/i/111826/201403/131134252864724.png" alt="" /><br /><br />有遗憾，为什么FreeMaker中每个变量都要带上requestAttributes，太难看了？下一篇文件想办法解决。</span></p>]]></description></item><item><title>OFBiz：解析doRequest()</title><link>http://www.cnblogs.com/eastson/archive/2014/03/10/3584134.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 10 Mar 2014 07:27:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/03/10/3584134.html</guid><description><![CDATA[<p>这里的doRequest()是指RequestHandler中的同名函数：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> doRequest(HttpServletRequest request, HttpServletResponse response, String chain,
            GenericValue userLogin, Delegator delegator) </span><span style="color: #0000ff;">throws</span> RequestHandlerException { ... }</pre>
</div>
<p><br />下面以http://localhost:8080/practice/control/main?foo=xxx&amp;bar=yyy为例演示说明一下整个doRequest()的处理过程。对应的controller.xml内容如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">site-conf </span><span style="color: #ff0000;">xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;">
        xsi:noNamespaceSchemaLocation</span><span style="color: #0000ff;">="http://ofbiz.apache.org/dtds/site-conf.xsd"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">include </span><span style="color: #ff0000;">location</span><span style="color: #0000ff;">="component://common/webcommon/WEB-INF/common-controller.xml"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">include </span><span style="color: #ff0000;">location</span><span style="color: #0000ff;">="component://common/webcommon/WEB-INF/portal-controller.xml"</span><span style="color: #0000ff;">/&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">request-map </span><span style="color: #ff0000;">uri</span><span style="color: #0000ff;">="main"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">response </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="success"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="view"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="main"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">request-map</span><span style="color: #0000ff;">&gt;</span>
    
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">view-map </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="main"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="screen"</span><span style="color: #ff0000;"> page</span><span style="color: #0000ff;">="component://practice/widget/PracticeScreens.xml#main"</span><span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">site-conf</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><br />步骤1: 获取controller.xml相关配置信息。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> get the controllerConfig once for this method so we don't have to get it over and over inside the method</span>
ConfigXMLReader.ControllerConfig controllerConfig = <span style="color: #0000ff;">this</span><span style="color: #000000;">.getControllerConfig();
Map</span>&lt;String, ConfigXMLReader.RequestMap&gt; requestMapMap = controllerConfig.getRequestMapMap();</pre>
</div>
<p><br />步骤2: 获取请求的应用名称，当前是practice。getContextPath()结果是/practice，getApplicationName()会去掉第一个字符，返回的是practice。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> workaround if we are in the root webapp</span>
String cname =<span style="color: #000000;"> UtilHttp.getApplicationName(request);

</span><span style="color: #008000;">//</span><span style="color: #008000;"> public static String getApplicationName(HttpServletRequest request) {
</span><span style="color: #008000;">//</span><span style="color: #008000;">     String appName = "root";
</span><span style="color: #008000;">//</span><span style="color: #008000;">     if (request.getContextPath().length() &gt; 1) {
</span><span style="color: #008000;">//</span><span style="color: #008000;">         appName = request.getContextPath().substring(1);
</span><span style="color: #008000;">//</span><span style="color: #008000;">     }
</span><span style="color: #008000;">//</span><span style="color: #008000;">     return appName;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> }</span></pre>
</div>
<p><br />步骤3: 获取请求的URI，当前是main。getPathInfo()的结果是/main，getRequestUri()会按照/做分割，然后返回第一项。分割的目的是因为可能处理现/main/sports/news/nba这样的状况。</p>
<div class="cnblogs_code">
<pre>String defaultRequestUri =<span style="color: #000000;"> RequestHandler.getRequestUri(request.getPathInfo());

</span><span style="color: #008000;">//</span><span style="color: #008000;"> public static String getRequestUri(String path) {
</span><span style="color: #008000;">//</span><span style="color: #008000;">     List&lt;String&gt; pathInfo = StringUtil.split(path, "/");
</span><span style="color: #008000;">//</span><span style="color: #008000;">     if (UtilValidate.isEmpty(pathInfo)) {
</span><span style="color: #008000;">//</span><span style="color: #008000;">         Debug.logWarning("Got nothing when splitting URI: " + path, module);
</span><span style="color: #008000;">//</span><span style="color: #008000;">         return null;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     }
</span><span style="color: #008000;">//</span><span style="color: #008000;">     if (pathInfo.get(0).indexOf('?') &gt; -1) {
</span><span style="color: #008000;">//</span><span style="color: #008000;">         return pathInfo.get(0).substring(0, pathInfo.get(0).indexOf('?'));
</span><span style="color: #008000;">//</span><span style="color: #008000;">     } else {
</span><span style="color: #008000;">//</span><span style="color: #008000;">         return pathInfo.get(0);
</span><span style="color: #008000;">//</span><span style="color: #008000;">     }
</span><span style="color: #008000;">//</span><span style="color: #008000;"> }</span></pre>
</div>
<p>将请求URI保存到request。<span style="color: #ff0000;">这里为什么在session中会有_PREVIOUS_REQUEST_，而且还优先request？</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (request.getAttribute("targetRequestUri") == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (request.getSession().getAttribute("_PREVIOUS_REQUEST_") != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        request.setAttribute(</span>"targetRequestUri", request.getSession().getAttribute("_PREVIOUS_REQUEST_"<span style="color: #000000;">));
    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        request.setAttribute(</span>"targetRequestUri", "/" +<span style="color: #000000;"> defaultRequestUri);
    }
}</span></pre>
</div>
<p><br />步骤4: 获取overrideViewUri，可以理解为URI后面一段。例如http://localhost:8080/practice/main/sports/news/nba?foo=xxx&amp;bar=yyy，返回的defaultRequestUri是main，overrideViewUri是sports/news/nba。</p>
<div class="cnblogs_code">
<pre>String overrideViewUri =<span style="color: #000000;"> RequestHandler.getOverrideViewUri(request.getPathInfo());

</span><span style="color: #008000;">//</span><span style="color: #008000;"> public static String getOverrideViewUri(String path) {
</span><span style="color: #008000;">//</span><span style="color: #008000;">     List&lt;String&gt; pathItemList = StringUtil.split(path, "/");
</span><span style="color: #008000;">//</span><span style="color: #008000;">     if (pathItemList == null) {
</span><span style="color: #008000;">//</span><span style="color: #008000;">         return null;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     }
</span><span style="color: #008000;">//</span><span style="color: #008000;">     pathItemList = pathItemList.subList(1, pathItemList.size());
</span><span style="color: #008000;">//</span> 
<span style="color: #008000;">//</span><span style="color: #008000;">     String nextPage = null;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     for (String pathItem: pathItemList) {
</span><span style="color: #008000;">//</span><span style="color: #008000;">         if (pathItem.indexOf('~') != 0) {
</span><span style="color: #008000;">//</span><span style="color: #008000;">             if (pathItem.indexOf('?') &gt; -1) {
</span><span style="color: #008000;">//</span><span style="color: #008000;">                 pathItem = pathItem.substring(0, pathItem.indexOf('?'));
</span><span style="color: #008000;">//</span><span style="color: #008000;">             }
</span><span style="color: #008000;">//</span><span style="color: #008000;">             nextPage = (nextPage == null ? pathItem : nextPage + "/" + pathItem);
</span><span style="color: #008000;">//</span><span style="color: #008000;">         }
</span><span style="color: #008000;">//</span><span style="color: #008000;">     }
</span><span style="color: #008000;">//</span><span style="color: #008000;">     return nextPage;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> }</span></pre>
</div>
<p><br />步骤5: 根据defaultRequestUri获取requestMap。如果defaultRequestUri没有对应的RequestMap，则用defaultRequest试试看。</p>
<div class="cnblogs_code">
<pre>ConfigXMLReader.RequestMap requestMap = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">if</span> (defaultRequestUri != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
    requestMap </span>=<span style="color: #000000;"> requestMapMap.get(defaultRequestUri);
}
</span><span style="color: #008000;">//</span><span style="color: #008000;"> check for default request</span>
<span style="color: #0000ff;">if</span> (requestMap == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
    String defaultRequest </span>=<span style="color: #000000;"> controllerConfig.getDefaultRequest();
    </span><span style="color: #0000ff;">if</span> (defaultRequest != <span style="color: #0000ff;">null</span>) {
        requestMap =<span style="color: #000000;"> requestMapMap.get(defaultRequest);
    }
}</span></pre>
</div>
<p>defaultRequest也可能为空，因此不排除执行到这里requestMap还是为空的情况。<br /><br />步骤6: 检查overrideViewUri。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> check for override view</span>
<span style="color: #0000ff;">if</span> (overrideViewUri != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
    ConfigXMLReader.ViewMap viewMap </span>=<span style="color: #000000;"> getControllerConfig().getViewMapMap().get(overrideViewUri);
    </span><span style="color: #0000ff;">if</span> (viewMap == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        String defaultRequest </span>=<span style="color: #000000;"> controllerConfig.getDefaultRequest();
        </span><span style="color: #0000ff;">if</span> (defaultRequest != <span style="color: #0000ff;">null</span>) {
            requestMap =<span style="color: #000000;"> requestMapMap.get(defaultRequest);
        }
    }
}</span></pre>
</div>
<p>看到这里突然明白了，针对/practice/control/main/sports/news/nba这种情况，defaultRequestUri是main，overrideViewUri是sports/news/nbs，doRequest()用defaultRequestUri去获取request-map，用overrideViewUri去获取view-map。OFBiz不允许request-uri包含斜杠，但是允许view-uri包含斜杠。<br /><br />到这里为止，requestMap如果还是为空，则认为是异常。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> still not found so stop</span>
<span style="color: #0000ff;">if</span> (requestMap == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> RequestHandlerException(requestMissingErrorMessage);
}</span></pre>
</div>
<p><br />步骤7: 检查是否是request-chain。chain是doRequest()的一个参数变量，默认地从ControlServlet过来的请求该变量为null，当转到request-chain的下一个请求时该变量为要执行的请求。getRequestUri()和getOverrideViewUri()都有处理Uri后面的QueryString，因此，这里的chain也应该是可以带上QueryString的。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;response name="success" type="request" value="second"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;
</span><span style="color: #008000;">//</span> 
<span style="color: #008000;">//</span><span style="color: #008000;"> doRequest()会在后面的代码中再次调用doRequest()自身:
</span><span style="color: #008000;">//</span><span style="color: #008000;"> if ("request".equals(nextRequestResponse.type)) {
</span><span style="color: #008000;">//</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> chained request
</span><span style="color: #008000;">//</span><span style="color: #008000;">     Debug.logInfo("[RequestHandler.doRequest]: Response is a chained request.", module);
</span><span style="color: #008000;">//</span><span style="color: #008000;">     doRequest(request, response, nextRequestResponse.value /* second */, userLogin, delegator);
</span><span style="color: #008000;">//</span><span style="color: #008000;"> }    
    
</span><span style="color: #008000;">//</span><span style="color: #008000;"> Check for chained request.</span>
<span style="color: #0000ff;">if</span> (chain != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> chain也可以是/main/sports/news/nba这种形式</span>
<span style="color: #000000;">    
    String chainRequestUri </span>=<span style="color: #000000;"> RequestHandler.getRequestUri(chain);
    requestMap </span>=<span style="color: #000000;"> requestMapMap.get(chainRequestUri);
    </span><span style="color: #0000ff;">if</span> (requestMap == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> RequestHandlerException("Unknown chained request [" + chainRequestUri + "]; this request does not exist"<span style="color: #000000;">);
    }
    
    </span><span style="color: #0000ff;">if</span> (request.getAttribute("_POST_CHAIN_VIEW_") != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        overrideViewUri </span>= (String) request.getAttribute("_POST_CHAIN_VIEW_"<span style="color: #000000;">);
    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        overrideViewUri </span>=<span style="color: #000000;"> RequestHandler.getOverrideViewUri(chain);
    }
    
    </span><span style="color: #0000ff;">if</span> (overrideViewUri != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> put this in a request attribute early in case an event needs to access it
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> not using _POST_CHAIN_VIEW_ because it shouldn't be set unless the event execution is successful</span>
        request.setAttribute("_CURRENT_CHAIN_VIEW_"<span style="color: #000000;">, overrideViewUri);
    }
    
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.infoOn()) 
        Debug.logInfo(</span>"[RequestHandler]: Chain in place: requestUri=" + chainRequestUri + " overrideViewUri=" +<span style="color: #000000;"> overrideViewUri, module);
}</span></pre>
</div>
<p><br />步骤8: 检查是否有在request-map中设置这是一个需要X509证书的请求，如果有设置，则必须是HTTPS协议才行。默认cert是false。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;security cert="true"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;response name="success" type="view" value="main"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;
  
    
</span><span style="color: #008000;">//</span><span style="color: #008000;"> Check if X509 is required and we are not secure; throw exception</span>
<span style="color: #0000ff;">if</span> (!request.isSecure() &amp;&amp;<span style="color: #000000;"> requestMap.securityCert) {
    </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> RequestHandlerException(requestMissingErrorMessage);
}</span></pre>
</div>
<p><br />步骤9: 检查是否有在request-map中设置这是一个可以直接请求direct-request的请求。默认direct-request是true。direct-request为false的请求不能在这里执行，改用default-request替换。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;security direct-request="true"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;response name="success" type="view" value="main"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;
  
    
</span><span style="color: #008000;">//</span><span style="color: #008000;"> Check to make sure we are allowed to access this request directly. (Also checks if this request is defined.)
</span><span style="color: #008000;">//</span><span style="color: #008000;"> If the request cannot be called, or is not defined, check and see if there is a default-request we can process</span>
<span style="color: #0000ff;">if</span> (!<span style="color: #000000;">requestMap.securityDirectRequest) {
    String defaultRequest </span>=<span style="color: #000000;"> controllerConfig.getDefaultRequest();
    </span><span style="color: #0000ff;">if</span> (defaultRequest == <span style="color: #0000ff;">null</span> || !<span style="color: #000000;">requestMapMap.get(defaultRequest).securityDirectRequest) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> use the same message as if it was missing for security reasons, ie so can't tell if it is missing or direct request is not allowed</span>
        <span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> RequestHandlerException(requestMissingErrorMessage);
    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        requestMap </span>=<span style="color: #000000;"> requestMapMap.get(defaultRequest);
    }
}</span></pre>
</div>
<p><br />步骤10:&nbsp;&nbsp;检查是否有在request-map中设置这是一个可以必须使用HTTPS的请求。默认https是false。OFBiz会自动在HTTP和HTTPS之间跳转。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;security https="true"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;response name="success" type="view" value="main"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;</span>
  
<span style="color: #0000ff;">boolean</span> forceHttpSession = "true".equals(context.getInitParameter("forceHttpSession"<span style="color: #000000;">));

</span><span style="color: #008000;">//</span><span style="color: #008000;"> Check if we SHOULD be secure and are not.</span>
String forwardedProto = request.getHeader("X-Forwarded-Proto"<span style="color: #000000;">);
</span><span style="color: #0000ff;">boolean</span> isForwardedSecure = UtilValidate.isNotEmpty(forwardedProto) &amp;&amp; "HTTPS"<span style="color: #000000;">.equals(forwardedProto.toUpperCase());

</span><span style="color: #008000;">//</span><span style="color: #008000;"> isForwardedSecure指上一个请求，request指当前请求，requestMap指下一个请求。
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 下面这个IF应该可以理解为：上一个请求是HTTP，当前请求是HTTP，下一个请求是HTTPS。</span>
<span style="color: #0000ff;">if</span> ((!request.isSecure() &amp;&amp; !isForwardedSecure) &amp;&amp;<span style="color: #000000;"> requestMap.securityHttps) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> If the request method was POST then return an error to avoid problems with XSRF where the request may have come from another machine/program and had the same session ID but was not encrypted as it should have been (we used to let it pass to not lose data since it was too late to protect that data anyway)
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 从一个HTTP发送过来的POST请求到HTTPS，为了避免XSRF/CSRF的嫌疑，返回一个错误或异常。</span>
    <span style="color: #0000ff;">if</span> (request.getMethod().equalsIgnoreCase("POST"<span style="color: #000000;">)) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> we can't redirect with the body parameters, and for better security from XSRF, just return an error message</span>
        Locale locale =<span style="color: #000000;"> UtilHttp.getLocale(request);
        String errMsg </span>= UtilProperties.getMessage("WebappUiLabels", "requestHandler.InsecureFormPostToSecureRequest"<span style="color: #000000;">, locale);
        Debug.logError(</span>"Got a insecure (non-https) form POST to a secure (http) request [" + requestMap.uri + "], returning error"<span style="color: #000000;">, module);

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> see if HTTPS is enabled, if not then log a warning instead of throwing an exception</span>
        Boolean enableHttps = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
        String webSiteId </span>=<span style="color: #000000;"> WebSiteWorker.getWebSiteId(request);
        </span><span style="color: #0000ff;">if</span> (webSiteId != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
                GenericValue webSite </span>= delegator.findByPrimaryKeyCache("WebSite", UtilMisc.toMap("webSiteId"<span style="color: #000000;">, webSiteId));
                </span><span style="color: #0000ff;">if</span> (webSite != <span style="color: #0000ff;">null</span>) enableHttps = webSite.getBoolean("enableHttps"<span style="color: #000000;">);
            } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (GenericEntityException e) {
                Debug.logWarning(e, </span>"Problems with WebSite entity; using global defaults"<span style="color: #000000;">, module);
            }
        }
        </span><span style="color: #0000ff;">if</span> (enableHttps == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            enableHttps </span>= UtilProperties.propertyValueEqualsIgnoreCase("url.properties", "port.https.enabled", "Y"<span style="color: #000000;">);
        }
        
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 如果网站允许HTTPS（enableHttps=true），但是当前又是一个HTTP POST，这种情况是不允许的，返回一个异常。
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 如果网站不允许HTTPS，则提示一条警告信息。</span>

        <span style="color: #0000ff;">if</span><span style="color: #000000;"> (Boolean.FALSE.equals(enableHttps)) {
            Debug.logWarning(</span>"HTTPS is disabled for this site, so we can't tell if this was encrypted or not which means if a form was POSTed and it was not over HTTPS we don't know, but it would be vulnerable to an XSRF and other attacks: " +<span style="color: #000000;"> errMsg, module);
        } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
            </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> RequestHandlerException(errMsg);
        }
    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 不是POST的处理。如果当前应用允许HTTPS，则调用callRedirect()实现HTTP到HTTPS的跳转。
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 如果当前应用不允许HTTPS，但是requestMap中又设置了https，有可能是requestMap设置不对，则继续执行。</span>
        StringBuilder urlBuf = <span style="color: #0000ff;">new</span><span style="color: #000000;"> StringBuilder();
        urlBuf.append(request.getPathInfo());
        </span><span style="color: #0000ff;">if</span> (request.getQueryString() != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            urlBuf.append(</span>"?"<span style="color: #000000;">).append(request.getQueryString());
        }
        String newUrl </span>=<span style="color: #000000;"> RequestHandler.makeUrl(request, response, urlBuf.toString());
        </span><span style="color: #0000ff;">if</span> (newUrl.toUpperCase().startsWith("HTTPS"<span style="color: #000000;">)) {
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> if we are supposed to be secure, redirect secure.</span>
<span style="color: #000000;">            callRedirect(newUrl, response, request);
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
        }
    }
    
</span><span style="color: #008000;">//</span><span style="color: #008000;"> if this is a new session and forceHttpSession is true and the request is secure but does not
</span><span style="color: #008000;">//</span><span style="color: #008000;"> need to be then we need the session cookie to be created via an http response (rather than https)
</span><span style="color: #008000;">//</span><span style="color: #008000;"> so we'll redirect to an unsecure request</span>
} <span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (forceHttpSession &amp;&amp; request.isSecure() &amp;&amp; session.isNew() &amp;&amp; !<span style="color: #000000;">requestMap.securityHttps) {
    StringBuilder urlBuf </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> StringBuilder();
    urlBuf.append(request.getPathInfo());
    </span><span style="color: #0000ff;">if</span> (request.getQueryString() != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        urlBuf.append(</span>"?"<span style="color: #000000;">).append(request.getQueryString());
    }
    String newUrl </span>= RequestHandler.makeUrl(request, response, urlBuf.toString(), <span style="color: #0000ff;">true</span>, <span style="color: #0000ff;">false</span>, <span style="color: #0000ff;">false</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> (newUrl.toUpperCase().startsWith("HTTP"<span style="color: #000000;">)) {
        callRedirect(newUrl, response, request);
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
    }
}</span></pre>
</div>
<p><br />步骤11: 检查客户端传过来的X509数字证书，这一过程与步骤8相对应。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Check for HTTPS client (x.509) security</span>
<span style="color: #0000ff;">if</span> (request.isSecure() &amp;&amp;<span style="color: #000000;"> requestMap.securityCert) {
    X509Certificate[] clientCerts </span>= (X509Certificate[]) request.getAttribute("javax.servlet.request.X509Certificate"); <span style="color: #008000;">//</span><span style="color: #008000;"> 2.2 spec</span>
    <span style="color: #0000ff;">if</span> (clientCerts == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        clientCerts </span>= (X509Certificate[]) request.getAttribute("javax.net.ssl.peer_certificates"); <span style="color: #008000;">//</span><span style="color: #008000;"> 2.1 spec</span>
<span style="color: #000000;">    }
    </span><span style="color: #0000ff;">if</span> (clientCerts == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        Debug.logWarning(</span>"Received no client certificates from browser"<span style="color: #000000;">, module);
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> check if the client has a valid certificate (in our db store)</span>
    <span style="color: #0000ff;">boolean</span> foundTrustedCert = <span style="color: #0000ff;">false</span><span style="color: #000000;">;

    </span><span style="color: #0000ff;">if</span> (clientCerts == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> RequestHandlerException(requestMissingErrorMessage);
    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.infoOn()) {
            </span><span style="color: #0000ff;">for</span> (<span style="color: #0000ff;">int</span> i = 0; i &lt; clientCerts.length; i++<span style="color: #000000;">) {
                Debug.logInfo(clientCerts[i].getSubjectX500Principal().getName(), module);
            }
        }

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> check if this is a trusted cert</span>
        <span style="color: #0000ff;">if</span> (SSLUtil.isClientTrusted(clientCerts, <span style="color: #0000ff;">null</span><span style="color: #000000;">)) {
            foundTrustedCert </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }
    }

    </span><span style="color: #0000ff;">if</span> (!<span style="color: #000000;">foundTrustedCert) {
        Debug.logWarning(requestMissingErrorMessage, module);
        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> RequestHandlerException(requestMissingErrorMessage);
    }
}</span></pre>
</div>
<p>关于SSL的更多信息可以看一下这里《<a href="http://blog.163.com/haizai219@126/blog/static/44412555201052332951865/?suggestedreading&amp;wumii"><span class="tcnt">Tomcat6.X SSL的配置</span></a>》。<br /><br />步骤12: 执行FirstVisit事件。session中的_FIRST_VISIT_EVENTS_用来区分当前请求是否是会话中的第一个请求。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> If its the first visit run the first visit events.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">this</span>.trackVisit(request) &amp;&amp; session.getAttribute("_FIRST_VISIT_EVENTS_") == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.infoOn())
        Debug.logInfo(</span>"This is the first request in this visit." + " sessionId=" +<span style="color: #000000;"> UtilHttp.getSessionId(request), module);
    session.setAttribute(</span>"_FIRST_VISIT_EVENTS_", "complete"<span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> (ConfigXMLReader.Event event: controllerConfig.getFirstVisitEventList().values()) {
        </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
            String returnString </span>= <span style="color: #0000ff;">this</span>.runEvent(request, response, event, <span style="color: #0000ff;">null</span>, "firstvisit"<span style="color: #000000;">);
            </span><span style="color: #0000ff;">if</span> (returnString != <span style="color: #0000ff;">null</span> &amp;&amp; !returnString.equalsIgnoreCase("success"<span style="color: #000000;">)) {
                </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> EventHandlerException("First-Visit event did not return 'success'."<span style="color: #000000;">);
            } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (returnString == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
                interruptRequest </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
            }
        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (EventHandlerException e) {
            Debug.logError(e, module);
        }
    }
}</span></pre>
</div>
<p>trackVisit()判断是否需要跟踪用户的访问。首先检查web.xml是否有设置tract-visit，然后再检查request-map是否也有设置track-visit，只有两个地方都设置了true才会执行FirstVisit事件。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">boolean</span><span style="color: #000000;"> trackVisit(HttpServletRequest request) {
    </span><span style="color: #0000ff;">if</span> (!"false".equalsIgnoreCase(context.getInitParameter("track-visit"<span style="color: #000000;">))) {
        String uriString </span>=<span style="color: #000000;"> RequestHandler.getRequestUri(request.getPathInfo());
        </span><span style="color: #0000ff;">if</span> (uriString == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            uriString</span>=""<span style="color: #000000;">;
        }
        ConfigXMLReader.RequestMap requestMap </span>=<span style="color: #000000;"> getControllerConfig().getRequestMapMap().get(uriString);
        </span><span style="color: #0000ff;">if</span> (requestMap == <span style="color: #0000ff;">null</span>) <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> requestMap.trackVisit;
    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>步骤13：执行Preprocessor事件。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Invoke the pre-processor (but NOT in a chain)</span>
<span style="color: #0000ff;">for</span><span style="color: #000000;"> (ConfigXMLReader.Event event: controllerConfig.getPreprocessorEventList().values()) {
    </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
        String returnString </span>= <span style="color: #0000ff;">this</span>.runEvent(request, response, event, <span style="color: #0000ff;">null</span>, "preprocessor"<span style="color: #000000;">);
        </span><span style="color: #0000ff;">if</span> (returnString != <span style="color: #0000ff;">null</span> &amp;&amp; !returnString.equalsIgnoreCase("success"<span style="color: #000000;">)) {
            </span><span style="color: #0000ff;">if</span> (!returnString.contains(":_protect_:"<span style="color: #000000;">)) {
                </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> EventHandlerException("Pre-Processor event [" + event.invoke + "] did not return 'success'."<span style="color: #000000;">);
            } </span><span style="color: #0000ff;">else</span> { <span style="color: #008000;">//</span><span style="color: #008000;"> protect the view normally rendered and redirect to error response view
            
                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 如果returnString包含":_protect_:", 表明这是一段错误信息内容</span>
                returnString = returnString.replace(":_protect_:", ""<span style="color: #000000;">);
                </span><span style="color: #0000ff;">if</span> (returnString.length() &gt; 0<span style="color: #000000;">) {
                    request.setAttribute(</span>"_ERROR_MESSAGE_"<span style="color: #000000;">, returnString);
                }
                
                eventReturn </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
                
                </span><span style="color: #008000;">//</span><span style="color: #008000;"> check to see if there is a "protect" response, if so it's ok else show the default_error_response_view
                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 首先找request-map下面是否有设置"protect" response
                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 然后再找controller.xml是否有设置protect view
                </span><span style="color: #008000;">//</span><span style="color: #008000;"> 最后找security.properties中的default.error.response.view</span>
                <span style="color: #0000ff;">if</span> (!requestMap.requestResponseMap.containsKey("protect"<span style="color: #000000;">)) {
                    String protectView </span>=<span style="color: #000000;"> controllerConfig.getProtectView();
                    </span><span style="color: #0000ff;">if</span> (protectView != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
                        overrideViewUri </span>=<span style="color: #000000;"> protectView;
                    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
                        overrideViewUri </span>= UtilProperties.getPropertyValue("security.properties", "default.error.response.view"<span style="color: #000000;">);
                        overrideViewUri </span>= overrideViewUri.replace("view:", ""<span style="color: #000000;">);
                        </span><span style="color: #0000ff;">if</span> ("none:"<span style="color: #000000;">.equals(overrideViewUri)) {
                            interruptRequest </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
                        }
                    }
                }
            }
        } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (returnString == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            interruptRequest </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }
    } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (EventHandlerException e) {
        Debug.logError(e, module);
    }
}</span></pre>
</div>
<p><br /><span style="color: #ff0000;">注意，步骤8-13只有在请求链中的第一个请求才会被执行，后面的请求都不会被执行，避免了重复检查和执行的情况。</span><br /><br /><span style="line-height: 1.5;">步骤14: 执行完FirstVisit/Preprocessor后，检查请求有没有被这两个事件终止。<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Pre-Processor/First-Visit event(s) can interrupt the flow by returning null.
</span><span style="color: #008000;">//</span><span style="color: #008000;"> Warning: this could cause problems if more then one event attempts to return a response.</span>
<span style="color: #0000ff;">if</span><span style="color: #000000;"> (interruptRequest) {
    </span><span style="color: #0000ff;">if</span> (Debug.infoOn()) Debug.logInfo("[Pre-Processor Interrupted Request, not running: [" + requestMap.uri + "], sessionId=" +<span style="color: #000000;"> UtilHttp.getSessionId(request), module);
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p><br />步骤15: 保存thisRequestUri。步骤3有保存targetRequestUri=getRequestUri(request.getPathInfo())，此处与此对应。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.verboseOn()) 
    Debug.logVerbose(</span>"[Processing Request]: " +<span style="color: #000000;"> requestMap.uri, module);
request.setAttribute(</span>"thisRequestUri", requestMap.uri); <span style="color: #008000;">//</span><span style="color: #008000;"> store the actual request URI</span></pre>
</div>
<p><br />步骤16: 执行安全检查。所谓安全检查，实质是指checkLogin请求中的事件。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;security auth="true"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">        &lt;response name="success" type="view" value="main"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> Perform security check.</span>
<span style="color: #0000ff;">if</span><span style="color: #000000;"> (requestMap.securityAuth) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Invoke the security handler
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> catch exceptions and throw RequestHandlerException if failed.</span>
    <span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.verboseOn()) 
        Debug.logVerbose(</span>"[RequestHandler]: AuthRequired. Running security check."<span style="color: #000000;">, module);
    ConfigXMLReader.Event checkLoginEvent </span>= requestMapMap.get("checkLogin"<span style="color: #000000;">).event;
    String checkLoginReturnString </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;

    </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
        checkLoginReturnString </span>= <span style="color: #0000ff;">this</span>.runEvent(request, response, checkLoginEvent, <span style="color: #0000ff;">null</span>, "security-auth"<span style="color: #000000;">);
    } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (EventHandlerException e) {
        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> RequestHandlerException(e.getMessage(), e);
    }
    </span><span style="color: #0000ff;">if</span> (!"success"<span style="color: #000000;">.equalsIgnoreCase(checkLoginReturnString)) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> previous URL already saved by event, so just do as the return says...</span>
        eventReturn =<span style="color: #000000;"> checkLoginReturnString;
        
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 安全检查失败, 则请求被转移到登录页面
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> if the request is an ajax request we don't want to return the default login check</span>
        <span style="color: #0000ff;">if</span> (!"XMLHttpRequest".equals(request.getHeader("X-Requested-With"<span style="color: #000000;">))) {
            requestMap </span>= requestMapMap.get("checkLogin"<span style="color: #000000;">);
        } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
            requestMap </span>= requestMapMap.get("ajaxCheckLogin"<span style="color: #000000;">);
        }
    }
}</span></pre>
</div>
<p>这里要说明一下checkLogin。checkLogin检查用户是否已通过验证，返回结果success或error。如果验证失败，checkLogin会在session里面记录下当前请求Uri和参数，然后转到登录页面，待验证通过后可以再恢复到先前请求的Uri和参数。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> org.ofbiz.webapp.control;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> LoginWorker {
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span><span style="color: #000000;"> String checkLogin(HttpServletRequest request, HttpServletResponse response) {
        HttpSession session </span>=<span style="color: #000000;"> request.getSession();
        GenericValue userLogin </span>= (GenericValue) session.getAttribute("userLogin"<span style="color: #000000;">);

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> anonymous shoppers are not logged in</span>
        <span style="color: #0000ff;">if</span> (userLogin != <span style="color: #0000ff;">null</span> &amp;&amp; "anonymous".equals(userLogin.getString("userLoginId"<span style="color: #000000;">))) {
            userLogin </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
        }

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> user is logged in; check to see if they have globally logged out if not
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> check if they have permission for this login attempt; if not log them out</span>
        <span style="color: #0000ff;">if</span> (userLogin != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            </span><span style="color: #0000ff;">if</span> (!hasBasePermission(userLogin, request) ||<span style="color: #000000;"> isFlaggedLoggedOut(userLogin)) {
                Debug.logInfo(</span>"User does not have permission or is flagged as logged out"<span style="color: #000000;">, module);
                doBasicLogout(userLogin, request, response);
                userLogin </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;

                </span><span style="color: #008000;">//</span><span style="color: #008000;"> have to reget this because the old session object will be invalid</span>
                session =<span style="color: #000000;"> request.getSession();
            }
        }

        String username </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
        String password </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;

        </span><span style="color: #0000ff;">if</span> (userLogin == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> check parameters</span>
            username = request.getParameter("USERNAME"<span style="color: #000000;">);
            password </span>= request.getParameter("PASSWORD"<span style="color: #000000;">);
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> check session attributes</span>
            <span style="color: #0000ff;">if</span> (username == <span style="color: #0000ff;">null</span>) username = (String) session.getAttribute("USERNAME"<span style="color: #000000;">);
            </span><span style="color: #0000ff;">if</span> (password == <span style="color: #0000ff;">null</span>) password = (String) session.getAttribute("PASSWORD"<span style="color: #000000;">);

            </span><span style="color: #008000;">//</span><span style="color: #008000;"> in this condition log them in if not already; if not logged in or can't log in, save parameters and return error</span>
            <span style="color: #0000ff;">if</span> ((username == <span style="color: #0000ff;">null</span>) || (password == <span style="color: #0000ff;">null</span>) || ("error"<span style="color: #000000;">.equals(login(request, response)))) {

                </span><span style="color: #008000;">//</span><span style="color: #008000;"> make sure this attribute is not in the request; this avoids infinite recursion when a login by less stringent criteria (like not checkout the hasLoggedOut field) passes; this is not a normal circumstance but can happen with custom code or in funny error situations when the userLogin service gets the userLogin object but runs into another problem and fails to return an error</span>
                request.removeAttribute("_LOGIN_PASSED_"<span style="color: #000000;">);

                </span><span style="color: #008000;">//</span><span style="color: #008000;"> keep the previous request name in the session</span>
                session.setAttribute("_PREVIOUS_REQUEST_"<span style="color: #000000;">, request.getPathInfo());

                </span><span style="color: #008000;">//</span><span style="color: #008000;"> NOTE: not using the old _PREVIOUS_PARAMS_ attribute at all because it was a security hole as it was used to put data in the URL (never encrypted) that was originally in a form field that may have been encrypted
                </span><span style="color: #008000;">//</span><span style="color: #008000;"> keep 2 maps: one for URL parameters and one for form parameters</span>
                Map&lt;String, Object&gt; urlParams =<span style="color: #000000;"> UtilHttp.getUrlOnlyParameterMap(request);
                </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (UtilValidate.isNotEmpty(urlParams)) {
                    session.setAttribute(</span>"_PREVIOUS_PARAM_MAP_URL_"<span style="color: #000000;">, urlParams);
                }
                Map</span>&lt;String, Object&gt; formParams = UtilHttp.getParameterMap(request, urlParams.keySet(), <span style="color: #0000ff;">false</span><span style="color: #000000;">);
                </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (UtilValidate.isNotEmpty(formParams)) {
                    session.setAttribute(</span>"_PREVIOUS_PARAM_MAP_FORM_"<span style="color: #000000;">, formParams);
                }

                </span><span style="color: #008000;">//</span><span style="color: #008000;">if (Debug.infoOn()) Debug.logInfo("checkLogin: PathInfo=" + request.getPathInfo(), module);</span>

                <span style="color: #0000ff;">return</span> "error"<span style="color: #000000;">;
            }
        }

        </span><span style="color: #0000ff;">return</span> "success"<span style="color: #000000;">;
    }
}</span></pre>
</div>
<p>&nbsp;<br />步骤17: 检查后_PREVIOUS_PARAM_MAP_FORM_。这里的代码不是很明白：为什么要检查后session.getAttribute("_PREVIOUS_REQUES_")为空呢？see if a post-login redirect has completed and we have data from the pre-login request form to use now在post-login重定向完成后检查是否有pre-login之前的数据需要带过来。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> after security check but before running the event, see if a post-login redirect has completed and we have data from the pre-login request form to use now
</span><span style="color: #008000;">//</span><span style="color: #008000;"> we know this is the case if the _PREVIOUS_PARAM_MAP_ attribute is there, but the _PREVIOUS_REQUEST_ attribute has already been removed</span>
<span style="color: #0000ff;">if</span> (request.getSession().getAttribute("_PREVIOUS_PARAM_MAP_FORM_") != <span style="color: #0000ff;">null</span> &amp;&amp; request.getSession().getAttribute("_PREVIOUS_REQUEST_") == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
    Map</span>&lt;String, Object&gt; previousParamMap = UtilGenerics.checkMap(request.getSession().getAttribute("_PREVIOUS_PARAM_MAP_FORM_"), String.<span style="color: #0000ff;">class</span>, Object.<span style="color: #0000ff;">class</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">for</span> (Map.Entry&lt;String, Object&gt;<span style="color: #000000;"> previousParamEntry: previousParamMap.entrySet()) {
        request.setAttribute(previousParamEntry.getKey(), previousParamEntry.getValue());
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> to avoid this data being included again, now remove the _PREVIOUS_PARAM_MAP_ attribute</span>
    request.getSession().removeAttribute("_PREVIOUS_PARAM_MAP_FORM_"<span style="color: #000000;">);
}</span></pre>
</div>
<p>&nbsp;</p>
<p>步骤18: 执行request-map中定义的事件。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Invoke the defined event (unless login failed)
</span><span style="color: #008000;">//</span><span style="color: #008000;"> eventReturn表示checkLogin失败，eventReturn = checkLoginReturnString
</span><span style="color: #008000;">//</span><span style="color: #008000;"> requestMap.event表示request-map有定义事件</span>
<span style="color: #0000ff;">if</span> (eventReturn == <span style="color: #0000ff;">null</span> &amp;&amp; requestMap.event != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (requestMap.event.type != <span style="color: #0000ff;">null</span> &amp;&amp; requestMap.event.path != <span style="color: #0000ff;">null</span> &amp;&amp; requestMap.event.invoke != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
            </span><span style="color: #0000ff;">long</span> eventStartTime =<span style="color: #000000;"> System.currentTimeMillis();

            </span><span style="color: #008000;">//</span><span style="color: #008000;"> run the request event</span>
            eventReturn = <span style="color: #0000ff;">this</span>.runEvent(request, response, requestMap.event, requestMap, "request"<span style="color: #000000;">);

            </span><span style="color: #008000;">//</span><span style="color: #008000;"> save the server hit for the request event</span>
            <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">this</span><span style="color: #000000;">.trackStats(request)) {
                ServerHitBin.countEvent(cname </span>+ "." +<span style="color: #000000;"> requestMap.event.invoke, request, eventStartTime,
                        System.currentTimeMillis() </span>-<span style="color: #000000;"> eventStartTime, userLogin);
            }

            </span><span style="color: #008000;">//</span><span style="color: #008000;"> set the default event return</span>
            <span style="color: #0000ff;">if</span> (eventReturn == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
                nextRequestResponse </span>=<span style="color: #000000;"> ConfigXMLReader.emptyNoneRequestResponse;
            }
        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (EventHandlerException e) {
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> check to see if there is an "error" response, if so go there and make an request error message
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 有异常发生，显示error response</span>
            <span style="color: #0000ff;">if</span> (requestMap.requestResponseMap.containsKey("error"<span style="color: #000000;">)) {
                eventReturn </span>= "error"<span style="color: #000000;">;
                Locale locale </span>=<span style="color: #000000;"> UtilHttp.getLocale(request);
                String errMsg </span>= UtilProperties.getMessage("WebappUiLabels", "requestHandler.error_call_event"<span style="color: #000000;">, locale);
                request.setAttribute(</span>"_ERROR_MESSAGE_", errMsg + ": " +<span style="color: #000000;"> e.toString());
            } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
                </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> RequestHandlerException("Error calling event and no error response was specified"<span style="color: #000000;">, e);
            }
        }
    }
}</span></pre>
</div>
<p>trackStats()判断是否需要跟踪服务器点击。首先检查web.xml是否有设置tract-serverhit，然后再检查request-map是否也有设置track-serverhit，只有两个地方都设置了true才会执行。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">boolean</span><span style="color: #000000;"> trackStats(HttpServletRequest request) {
    </span><span style="color: #0000ff;">if</span> (!"false".equalsIgnoreCase(context.getInitParameter("track-serverhit"<span style="color: #000000;">))) {
        String uriString </span>=<span style="color: #000000;"> RequestHandler.getRequestUri(request.getPathInfo());
        </span><span style="color: #0000ff;">if</span> (uriString == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            uriString</span>=""<span style="color: #000000;">;
        }
        ConfigXMLReader.RequestMap requestMap </span>=<span style="color: #000000;"> getControllerConfig().getRequestMapMap().get(uriString);
        </span><span style="color: #0000ff;">if</span> (requestMap == <span style="color: #0000ff;">null</span>) <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> requestMap.trackServerHit;
    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
    }
}</span></pre>
</div>
<p><span style="line-height: 1.5;"><br />步骤19: 检查eventReturn对应的response是否存在。<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> eventReturn表示checkLogin返回的错误结果error, 或者是requestMap.event返回的结果(成功success和错误都在里面)，也可能就是null。</span><span style="color: #008000;">//</span><span style="color: #008000;"> 检查eventReturn response存不存在?

</span><span style="color: #008000;">//</span><span style="color: #008000;"> Process the eventReturn
</span><span style="color: #008000;">//</span><span style="color: #008000;"> at this point eventReturnString is finalized, so get the RequestResponse</span>
ConfigXMLReader.RequestResponse eventReturnBasedRequestResponse = eventReturn == <span style="color: #0000ff;">null</span> ? <span style="color: #0000ff;">null</span><span style="color: #000000;"> : requestMap.requestResponseMap.get(eventReturn);
</span><span style="color: #0000ff;">if</span> (eventReturnBasedRequestResponse != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;">String eventReturnBasedResponse = requestResponse.value;</span>
    <span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.verboseOn()) 
        Debug.logVerbose(</span>"[Response Qualified]: " + eventReturnBasedRequestResponse.name + ", " + eventReturnBasedRequestResponse.type + ":" +<span style="color: #000000;"> eventReturnBasedRequestResponse.value, module);

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> If error, then display more error messages:</span>
    <span style="color: #0000ff;">if</span> ("error"<span style="color: #000000;">.equals(eventReturnBasedRequestResponse.name)) {
        </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.errorOn()) {
            String errorMessageHeader </span>= "Request " + requestMap.uri + " caused an error with the following message: "<span style="color: #000000;">;
            </span><span style="color: #0000ff;">if</span> (request.getAttribute("_ERROR_MESSAGE_") != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
                Debug.logError(errorMessageHeader </span>+ request.getAttribute("_ERROR_MESSAGE_"<span style="color: #000000;">), module);
            }
            </span><span style="color: #0000ff;">if</span> (request.getAttribute("_ERROR_MESSAGE_LIST_") != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
                Debug.logError(errorMessageHeader </span>+ request.getAttribute("_ERROR_MESSAGE_LIST_"<span style="color: #000000;">), module);
            }
        }
    }
} </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (eventReturn != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> only log this warning if there is an eventReturn (ie skip if no event, etc)</span>
    Debug.logWarning("Could not find response in request [" + requestMap.uri + "] for event return [" + eventReturn + "]"<span style="color: #000000;">, module);
}

</span><span style="color: #008000;">//</span><span style="color: #008000;"> Set the next view (don't use event return if success, default to nextView (which is set to eventReturn later if null); also even if success if it is a type "none" response ignore the nextView, ie use the eventReturn)
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 当requestMap.event时，eventReturn有可能是success，也有可能是null。</span>
<span style="color: #0000ff;">if</span> (eventReturnBasedRequestResponse != <span style="color: #0000ff;">null</span> &amp;&amp;<span style="color: #000000;"> 
    (</span>!"success".equals(eventReturnBasedRequestResponse.name) || "none"<span style="color: #000000;">.equals(eventReturnBasedRequestResponse.type))) 
    nextRequestResponse </span>= eventReturnBasedRequestResponse;</pre>
</div>
<p>&nbsp;&nbsp;</p>
<p>步骤20: 这一段代码不是很懂，大致意思应该是找回先前的请求参数。_REQ_ATTR_MAP_是在callRedirect()设置的，重定向之前，callRedirect()会将当前请求保存到_REQ_ATTR_MAP_。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> get the previous request info
</span><span style="color: #008000;">//</span><span style="color: #008000;"> _PREVIOUS_REQUES_和_LOGIN_PASSED_会在checkLogin中被设置</span>
String previousRequest = (String) request.getSession().getAttribute("_PREVIOUS_REQUEST_"<span style="color: #000000;">);
String loginPass </span>= (String) request.getAttribute("_LOGIN_PASSED_"<span style="color: #000000;">);

</span><span style="color: #008000;">//</span><span style="color: #008000;"> restore previous redirected request's attribute, so redirected page can display previous request's error msg etc.</span>
String preReqAttStr = (String) request.getSession().getAttribute("_REQ_ATTR_MAP_"<span style="color: #000000;">);
Map</span>&lt;String, Object&gt; previousRequestAttrMap = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">if</span> (preReqAttStr != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
    previousRequestAttrMap </span>=<span style="color: #000000;"> FastMap.newInstance();
    request.getSession().removeAttribute(</span>"_REQ_ATTR_MAP_"<span style="color: #000000;">);
    </span><span style="color: #0000ff;">byte</span>[] reqAttrMapBytes =<span style="color: #000000;"> StringUtil.fromHexString(preReqAttStr);
    Map</span>&lt;String, Object&gt; preRequestMap = checkMap(UtilObject.getObject(reqAttrMapBytes), String.<span style="color: #0000ff;">class</span>, Object.<span style="color: #0000ff;">class</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (UtilValidate.isNotEmpty(preRequestMap)) {
        </span><span style="color: #0000ff;">for</span> (Map.Entry&lt;String, Object&gt;<span style="color: #000000;"> entry: preRequestMap.entrySet()) {
            String key </span>=<span style="color: #000000;"> entry.getKey();
            </span><span style="color: #0000ff;">if</span> ("_ERROR_MESSAGE_LIST_".equals(key) || "_ERROR_MESSAGE_MAP_".equals(key) || "_ERROR_MESSAGE_".equals(key) ||
                    "_EVENT_MESSAGE_LIST_".equals(key) || "_EVENT_MESSAGE_"<span style="color: #000000;">.equals(key)) {
                request.setAttribute(key, entry.getValue());
                previousRequestAttrMap.put(key, entry.getValue());
           }
        }
    }
}

</span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.verboseOn()) 
    Debug.logVerbose(</span>"[RequestHandler]: previousRequest - " + previousRequest + " (" + loginPass + ")", module);</pre>
</div>
<p><span style="line-height: 1.5;"><br />步骤21: 如果checkLogin之前有请求previousRequest，且本次checkLogin登录成功，则重定向到previousRequest。checkLogin成功，会设置loginPass=TRUE。<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> if previous request exists, and a login just succeeded, do that now.</span>
<span style="color: #0000ff;">if</span> (previousRequest != <span style="color: #0000ff;">null</span> &amp;&amp; loginPass != <span style="color: #0000ff;">null</span> &amp;&amp; loginPass.equalsIgnoreCase("TRUE"<span style="color: #000000;">)) {
    request.getSession().removeAttribute(</span>"_PREVIOUS_REQUEST_"<span style="color: #000000;">);
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> special case to avoid login/logout looping: if request was "logout" before the login, 
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> change to null for default success view; do the same for "login" to avoid going back to the same page</span>
    <span style="color: #0000ff;">if</span> ("logout".equals(previousRequest) || "/logout".equals(previousRequest) || 
        "login".equals(previousRequest) || "/login".equals(previousRequest) || 
        "checkLogin".equals(previousRequest) || "/checkLogin".equals(previousRequest) || 
        "/checkLogin/login"<span style="color: #000000;">.equals(previousRequest)) {
        Debug.logWarning(</span>"Found special _PREVIOUS_REQUEST_ of [" + previousRequest + "], setting to null to avoid problems, not running request again"<span style="color: #000000;">, module);
    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.infoOn()) 
            Debug.logInfo(</span>"[Doing Previous Request]: " +<span style="color: #000000;"> previousRequest, module);

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> note that the previous form parameters are not setup (only the URL ones here), 
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> they will be found in the session later and handled when the old request redirect comes back</span>
        Map&lt;String, Object&gt; previousParamMap = UtilGenerics.checkMap(request.getSession().getAttribute("_PREVIOUS_PARAM_MAP_URL_"), String.<span style="color: #0000ff;">class</span>, Object.<span style="color: #0000ff;">class</span><span style="color: #000000;">);
        String queryString </span>= UtilHttp.urlEncodeArgs(previousParamMap, <span style="color: #0000ff;">false</span><span style="color: #000000;">);
        String redirectTarget </span>=<span style="color: #000000;"> previousRequest;
        </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (UtilValidate.isNotEmpty(queryString)) {
            redirectTarget </span>+= "?" +<span style="color: #000000;"> queryString;
        }
        callRedirect(makeLink(request, response, redirectTarget), response, request);

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> the old/uglier way: doRequest(request, response, previousRequest, userLogin, delegator);

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> this is needed as the request handled will be taking care of the view, etc</span>
        <span style="color: #0000ff;">return</span><span style="color: #000000;">;
    }
}</span></pre>
</div>
<p>&nbsp;&nbsp;</p>
<p><span style="line-height: 1.5;"><span style="line-height: 1.5;">步骤22: 检查success response，设置nextRequestResponse。<br /></span></span></p>
<div class="cnblogs_code">
<pre>ConfigXMLReader.RequestResponse successResponse = requestMap.requestResponseMap.get("success"<span style="color: #000000;">);
</span><span style="color: #0000ff;">if</span> ((eventReturn == <span style="color: #0000ff;">null</span> || "success".equals(eventReturn)) &amp;&amp;<span style="color: #000000;"> 
    successResponse </span>!= <span style="color: #0000ff;">null</span> &amp;&amp; "request"<span style="color: #000000;">.equals(successResponse.type)) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> chains will override any url defined views; but we will save the view for the very end</span>
    <span style="color: #0000ff;">if</span><span style="color: #000000;"> (UtilValidate.isNotEmpty(overrideViewUri)) {
        request.setAttribute(</span>"_POST_CHAIN_VIEW_"<span style="color: #000000;">, overrideViewUri);
    }
    nextRequestResponse </span>=<span style="color: #000000;"> successResponse;
}

</span><span style="color: #008000;">//</span><span style="color: #008000;"> Make sure we have some sort of response to go to</span>
<span style="color: #0000ff;">if</span> (nextRequestResponse == <span style="color: #0000ff;">null</span><span style="color: #000000;">) 
    nextRequestResponse </span>=<span style="color: #000000;"> successResponse;

</span><span style="color: #0000ff;">if</span> (nextRequestResponse == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> RequestHandlerException("Illegal response; handler could not process request [" + requestMap.uri + "] and event return [" + eventReturn + "]."<span style="color: #000000;">);
}

</span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.verboseOn()) 
    Debug.logVerbose(</span>"[Event Response Selected]  type=" + nextRequestResponse.type + ", value=" + nextRequestResponse.value, module);</pre>
</div>
<p>&nbsp;</p>
<p>步骤23: 后面的代码都是处理nextRequestResponse的，在文章《<a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/p/3584621.html">OFBiz：处理nextRequestResponse</a>》详细说明。</p>]]></description></item><item><title>OFBiz：处理nextRequestResponse</title><link>http://www.cnblogs.com/eastson/archive/2014/03/07/3584621.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 07 Mar 2014 03:05:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/03/07/3584621.html</guid><description><![CDATA[<p>这里的nextRequestResponse是指RequestHandler中doRequest()函数在最后使用的一个变量，doRequest()会依据nextRequestResponse返回不同的响应给请求者。nextRequestResponse有多种不同的类型，不同的类型处理方式也不一样。<br /><span style="line-height: 1.5;"><br />第一种类型是request，表明这是一个请求链，递归调用doRequest()处理下一个请求：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;response name="success" type="request" value="other"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;</span>

<span style="color: #0000ff;">if</span> ("request"<span style="color: #000000;">.equals(nextRequestResponse.type)) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> chained request</span>
<span style="color: #000000;">    doRequest(request, response, nextRequestResponse.value, userLogin, delegator);
}</span></pre>
</div>
<p><span style="line-height: 1.5;"><br />处理nextRequestResponse时，除了request类型，其它类型都需要执行Postprocessor。Postprocessor不会终止请求过程，如果返回的结果不是success，则以抛出异常的方式处理：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">for</span><span style="color: #000000;"> (ConfigXMLReader.Event event: controllerConfig.getPostprocessorEventList().values()) {
    </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
        String returnString </span>= <span style="color: #0000ff;">this</span>.runEvent(request, response, event, requestMap, "postprocessor"<span style="color: #000000;">);
        </span><span style="color: #0000ff;">if</span> (returnString != <span style="color: #0000ff;">null</span> &amp;&amp; !returnString.equalsIgnoreCase("success"<span style="color: #000000;">)) {
            </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> EventHandlerException("Post-Processor event did not return 'success'."<span style="color: #000000;">);
        }
    } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (EventHandlerException e) {
        Debug.logError(e, module);
    }
}</span></pre>
</div>
<p><br />第二种类型是url，表明这是一个URL重定向：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;response name="success" type="url" value="</span><span style="color: #008000; text-decoration: underline;">http://www.baidu.com</span><span style="color: #008000;">"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;</span>

<span style="color: #0000ff;">if</span> ("url"<span style="color: #000000;">.equals(nextRequestResponse.type)) {
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.verboseOn()) 
        Debug.logVerbose(</span>"[RequestHandler.doRequest]: Response is a URL redirect."<span style="color: #000000;">, module);
    callRedirect(nextRequestResponse.value, response, request);
}</span></pre>
</div>
<p><span style="line-height: 1.5;">callRedirect()做了两件事，<span style="color: #ff0000;">一是将request中可序列化的对象保存到session（这样处理的原因是什么？）</span>，二是调用response的sendResponse()执行重定向：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span> callRedirect(String url, HttpServletResponse resp, HttpServletRequest req) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> RequestHandlerException {
    </span><span style="color: #0000ff;">if</span> (Debug.infoOn()) Debug.logInfo("Sending redirect to: [" + url + "], sessionId=" +<span style="color: #000000;"> UtilHttp.getSessionId(req), module);
    
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> set the attributes in the session so we can access it.
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 将request中可序列化的属性保存到session</span>
    Enumeration&lt;String&gt; attributeNameEnum =<span style="color: #000000;"> UtilGenerics.cast(req.getAttributeNames());
    Map</span>&lt;String, Object&gt; reqAttrMap =<span style="color: #000000;"> FastMap.newInstance();
    </span><span style="color: #0000ff;">while</span><span style="color: #000000;"> (attributeNameEnum.hasMoreElements()) {
        String name </span>=<span style="color: #000000;"> attributeNameEnum.nextElement();
        Object obj </span>=<span style="color: #000000;"> req.getAttribute(name);
        </span><span style="color: #0000ff;">if</span> (obj <span style="color: #0000ff;">instanceof</span><span style="color: #000000;"> Serializable) {
            reqAttrMap.put(name, obj);
        }
    }
    </span><span style="color: #0000ff;">if</span> (reqAttrMap.size() &gt; 0<span style="color: #000000;">) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> RequestHandler is not serializable and must be removed first.</span>
        reqAttrMap.remove("_REQUEST_HANDLER_"<span style="color: #000000;">);  
        </span><span style="color: #0000ff;">byte</span>[] reqAttrMapBytes =<span style="color: #000000;"> UtilObject.getBytes(reqAttrMap);
        </span><span style="color: #0000ff;">if</span> (reqAttrMapBytes != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            req.getSession().setAttribute(</span>"_REQ_ATTR_MAP_"<span style="color: #000000;">, StringUtil.toHexString(reqAttrMapBytes));
        }
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> send the redirect
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 响应重定向</span>
    <span style="color: #0000ff;">try</span><span style="color: #000000;"> {
        resp.sendRedirect(url);
    } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (IOException ioe) {
        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> RequestHandlerException(ioe.getMessage(), ioe);
    } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (IllegalStateException ise) {
        </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> RequestHandlerException(ise.getMessage(), ise);
    }
}</span></pre>
</div>
<p><br />第三种类型是cross-request，表明这是一个跨应用(Cross Application)重定向。什么是跨应用重定向？例如，如果当前请求的是http://localhost:8080/practice/control/main，跨应用重定向后的地址就是http://localhost:8080/other。这里的practice就是一个应用，other是另外一个应用。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;response name="success" type="cross-request" value="other"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;</span>

<span style="color: #0000ff;">if</span> ("cross-redirect"<span style="color: #000000;">.equals(nextRequestResponse.type)) {
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.verboseOn()) 
        Debug.logVerbose(</span>"[RequestHandler.doRequest]: Response is a Cross-Application redirect."<span style="color: #000000;">, module);
    String url </span>= nextRequestResponse.value.startsWith("/") ? nextRequestResponse.value : "/" +<span style="color: #000000;"> nextRequestResponse.value;
    callRedirect(url </span>+ <span style="color: #0000ff;">this</span><span style="color: #000000;">.makeQueryString(request, nextRequestResponse), response, request);
}</span></pre>
</div>
<p>makeQueryString()处理重定向后的请求参数。请求参数有两个来源，一是当前request对象的QueryString，二是nextRequestResponse的redirect-parameter。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span><span style="color: #000000;"> String makeQueryString(HttpServletRequest request, ConfigXMLReader.RequestResponse requestResponse) {
    </span><span style="color: #0000ff;">if</span> (requestResponse == <span style="color: #0000ff;">null</span> ||<span style="color: #000000;">
            (requestResponse.redirectParameterMap.size() </span>== 0 &amp;&amp; requestResponse.redirectParameterValueMap.size() == 0<span style="color: #000000;">)) {
        Map</span>&lt;String, Object&gt; urlParams =<span style="color: #000000;"> UtilHttp.getUrlOnlyParameterMap(request);
        String queryString </span>= UtilHttp.urlEncodeArgs(urlParams, <span style="color: #0000ff;">false</span><span style="color: #000000;">);
        </span><span style="color: #0000ff;">if</span><span style="color: #000000;">(UtilValidate.isEmpty(queryString)) {
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> queryString;
        }
        </span><span style="color: #0000ff;">return</span> "?" +<span style="color: #000000;"> queryString;
    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> redirect-parameter可以使用value指定具体的参数值, 也可以使用from指定参数值的来源。例如:
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
        </span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;response name="success" type="cross-request" value="other"&gt;
        </span><span style="color: #008000;">//</span><span style="color: #008000;">         &lt;request-parameter name="foo" value="xxx"/&gt;
        </span><span style="color: #008000;">//</span><span style="color: #008000;">         &lt;request-parameter name="bar" from="jsessionid"/&gt;
        </span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;/response&gt;
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;</span>
<span style="color: #000000;">    
        StringBuilder queryString </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> StringBuilder();
        queryString.append(</span>"?"<span style="color: #000000;">);
        </span><span style="color: #0000ff;">for</span> (Map.Entry&lt;String, String&gt;<span style="color: #000000;"> entry: requestResponse.redirectParameterMap.entrySet()) {
            String name </span>=<span style="color: #000000;"> entry.getKey();
            String from </span>=<span style="color: #000000;"> entry.getValue();

            Object value </span>=<span style="color: #000000;"> request.getAttribute(from);
            </span><span style="color: #0000ff;">if</span> (value == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
                value </span>=<span style="color: #000000;"> request.getParameter(from);
            }

            addNameValuePairToQueryString(queryString, name, (String) value);
        }
        </span><span style="color: #0000ff;">for</span> (Map.Entry&lt;String, String&gt;<span style="color: #000000;"> entry: requestResponse.redirectParameterValueMap.entrySet()) {
            String name </span>=<span style="color: #000000;"> entry.getKey();
            String value </span>=<span style="color: #000000;"> entry.getValue();

            addNameValuePairToQueryString(queryString, name, (String) value);
        }
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> queryString.toString();
    }
}</span></pre>
</div>
<p><br />第四种类型是request-redirect，表明这是一个请求重定向。什么是请求重定向？例如，如果当前请求的是http://localhost:8080/practice/control/main，请求重定向后的地址就是http://localhost:8080/practice/control/other，都是在同一个应用practice里面。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;response name="success" type="request-request" value="other"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;</span>

<span style="color: #0000ff;">if</span> ("request-redirect"<span style="color: #000000;">.equals(nextRequestResponse.type)) {
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.verboseOn()) 
        Debug.logVerbose(</span>"[RequestHandler.doRequest]: Response is a Request redirect."<span style="color: #000000;">, module);
    callRedirect(makeLinkWithQueryString(request, response, </span>"/" +<span style="color: #000000;"> nextRequestResponse.value, nextRequestResponse), response, request);
}</span></pre>
</div>
<p>makeLinkWithQueryString()是在makeQueryString()基础上增加了makeLink()的调用：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span><span style="color: #000000;"> String makeLinkWithQueryString(HttpServletRequest request, HttpServletResponse response, String url, ConfigXMLReader.RequestResponse requestResponse) {
    String initialLink </span>= <span style="color: #0000ff;">this</span><span style="color: #000000;">.makeLink(request, response, url);
    String queryString </span>= <span style="color: #0000ff;">this</span><span style="color: #000000;">.makeQueryString(request, requestResponse);
    </span><span style="color: #0000ff;">return</span> initialLink +<span style="color: #000000;"> queryString;
}

</span><span style="color: #0000ff;">public</span><span style="color: #000000;"> String makeLink(HttpServletRequest request, HttpServletResponse response, String url) {
    </span><span style="color: #0000ff;">return</span> makeLink(request, response, url, <span style="color: #0000ff;">false</span>, <span style="color: #0000ff;">false</span>, <span style="color: #0000ff;">true</span><span style="color: #000000;">);
}

</span><span style="color: #0000ff;">public</span> String makeLink(HttpServletRequest request, HttpServletResponse response, String url, <span style="color: #0000ff;">boolean</span> fullPath, <span style="color: #0000ff;">boolean</span> secure, <span style="color: #0000ff;">boolean</span><span style="color: #000000;"> encode) {
    Delegator delegator </span>= (Delegator) request.getAttribute("delegator"<span style="color: #000000;">);
    String webSiteId </span>=<span style="color: #000000;"> WebSiteWorker.getWebSiteId(request);

    String httpsPort </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
    String httpsServer </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
    String httpPort </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
    String httpServer </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
    Boolean enableHttps </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> load the properties from the website entity</span>
<span style="color: #000000;">    GenericValue webSite;
    </span><span style="color: #0000ff;">if</span> (webSiteId != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
            webSite </span>= delegator.findByPrimaryKeyCache("WebSite", UtilMisc.toMap("webSiteId"<span style="color: #000000;">, webSiteId));
            </span><span style="color: #0000ff;">if</span> (webSite != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
                httpsPort </span>= webSite.getString("httpsPort"<span style="color: #000000;">);
                httpsServer </span>= webSite.getString("httpsHost"<span style="color: #000000;">);
                httpPort </span>= webSite.getString("httpPort"<span style="color: #000000;">);
                httpServer </span>= webSite.getString("httpHost"<span style="color: #000000;">);
                enableHttps </span>= webSite.getBoolean("enableHttps"<span style="color: #000000;">);
            }
        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (GenericEntityException e) {
            Debug.logWarning(e, </span>"Problems with WebSite entity; using global defaults"<span style="color: #000000;">, module);
        }
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> fill in any missing properties with fields from the global file</span>
    <span style="color: #0000ff;">if</span><span style="color: #000000;"> (UtilValidate.isEmpty(httpsPort)) {
        httpsPort </span>= UtilProperties.getPropertyValue("url.properties", "port.https", "443"<span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (UtilValidate.isEmpty(httpsServer)) {
        httpsServer </span>= UtilProperties.getPropertyValue("url.properties", "force.https.host"<span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (UtilValidate.isEmpty(httpPort)) {
        httpPort </span>= UtilProperties.getPropertyValue("url.properties", "port.http", "80"<span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (UtilValidate.isEmpty(httpServer)) {
        httpServer </span>= UtilProperties.getPropertyValue("url.properties", "force.http.host"<span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">if</span> (enableHttps == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        enableHttps </span>= UtilProperties.propertyValueEqualsIgnoreCase("url.properties", "port.https.enabled", "Y"<span style="color: #000000;">);
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> create the path the the control servlet</span>
    String controlPath = (String) request.getAttribute("_CONTROL_PATH_"<span style="color: #000000;">);

    String requestUri </span>=<span style="color: #000000;"> RequestHandler.getRequestUri(url);
    ConfigXMLReader.RequestMap requestMap </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (requestUri != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        requestMap </span>=<span style="color: #000000;"> getControllerConfig().getRequestMapMap().get(requestUri);
    }

    StringBuilder newURL </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> StringBuilder();

    </span><span style="color: #0000ff;">boolean</span> didFullSecure = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">boolean</span> didFullStandard = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (requestMap != <span style="color: #0000ff;">null</span> &amp;&amp; (enableHttps || fullPath ||<span style="color: #000000;"> secure)) {
        </span><span style="color: #0000ff;">if</span> (Debug.verboseOn()) Debug.logVerbose("In makeLink requestUri=" +<span style="color: #000000;"> requestUri, module);
        </span><span style="color: #0000ff;">if</span> (secure || (enableHttps &amp;&amp; requestMap.securityHttps &amp;&amp; !<span style="color: #000000;">request.isSecure())) {
            String server </span>=<span style="color: #000000;"> httpsServer;
            </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (UtilValidate.isEmpty(server)) {
                server </span>=<span style="color: #000000;"> request.getServerName();
            }

            newURL.append(</span>"https://"<span style="color: #000000;">);
            newURL.append(server);
            </span><span style="color: #0000ff;">if</span> (!httpsPort.equals("443"<span style="color: #000000;">)) {
                newURL.append(</span>":"<span style="color: #000000;">).append(httpsPort);
            }

            didFullSecure </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (fullPath || (enableHttps &amp;&amp; !requestMap.securityHttps &amp;&amp;<span style="color: #000000;"> request.isSecure())) {
            String server </span>=<span style="color: #000000;"> httpServer;
            </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (UtilValidate.isEmpty(server)) {
                server </span>=<span style="color: #000000;"> request.getServerName();
            }

            newURL.append(</span>"http://"<span style="color: #000000;">);
            newURL.append(server);
            </span><span style="color: #0000ff;">if</span> (!httpPort.equals("80"<span style="color: #000000;">)) {
                newURL.append(</span>":"<span style="color: #000000;">).append(httpPort);
            }

            didFullStandard </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }
    }

    newURL.append(controlPath);

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> now add the actual passed url, but if it doesn't start with a / add one first</span>
    <span style="color: #0000ff;">if</span> (!url.startsWith("/"<span style="color: #000000;">)) {
        newURL.append(</span>"/"<span style="color: #000000;">);
    }
    newURL.append(url);

    String encodedUrl;
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (encode) {
        </span><span style="color: #0000ff;">boolean</span> forceManualJsessionid = "false".equals(getServletContext().getInitParameter("cookies")) ? <span style="color: #0000ff;">true</span> : <span style="color: #0000ff;">false</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">boolean</span> isSpider = <span style="color: #0000ff;">false</span><span style="color: #000000;">;

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> if the current request comes from a spider, we will not add the jsessionid to the link</span>
        <span style="color: #0000ff;">if</span><span style="color: #000000;"> (UtilHttp.checkURLforSpiders(request)) {
            isSpider </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> if this isn't a secure page, but we made a secure URL, make sure we manually add the jsessionid since the response.encodeURL won't do that</span>
        <span style="color: #0000ff;">if</span> (!request.isSecure() &amp;&amp;<span style="color: #000000;"> didFullSecure) {
            forceManualJsessionid </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> if this is a secure page, but we made a standard URL, make sure we manually add the jsessionid since the response.encodeURL won't do that</span>
        <span style="color: #0000ff;">if</span> (request.isSecure() &amp;&amp;<span style="color: #000000;"> didFullStandard) {
            forceManualJsessionid </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }

        </span><span style="color: #0000ff;">if</span> (response != <span style="color: #0000ff;">null</span> &amp;&amp; !forceManualJsessionid &amp;&amp; !<span style="color: #000000;">isSpider) {
            encodedUrl </span>=<span style="color: #000000;"> response.encodeURL(newURL.toString());
        } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
            </span><span style="color: #0000ff;">if</span> (!<span style="color: #000000;">isSpider) {
                String sessionId </span>= ";jsessionid=" +<span style="color: #000000;"> request.getSession().getId();
                </span><span style="color: #008000;">//</span><span style="color: #008000;"> this should be inserted just after the "?" for the parameters, if there is one, or at the end of the string</span>
                <span style="color: #0000ff;">int</span> questionIndex = newURL.indexOf("?"<span style="color: #000000;">);
                </span><span style="color: #0000ff;">if</span> (questionIndex == -1<span style="color: #000000;">) {
                    newURL.append(sessionId);
                } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
                    newURL.insert(questionIndex, sessionId);
                }
            }
            </span><span style="color: #0000ff;">if</span> (response != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
                encodedUrl </span>=<span style="color: #000000;"> response.encodeURL(newURL.toString());
            } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
                encodedUrl </span>=<span style="color: #000000;"> newURL.toString();    
            }
        }
    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        encodedUrl </span>=<span style="color: #000000;"> newURL.toString();
    }
    </span><span style="color: #008000;">//</span><span style="color: #008000;">if (encodedUrl.indexOf("null") &gt; 0) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;">Debug.logError("in makeLink, controlPath:" + controlPath + " url:" + url, "");
        </span><span style="color: #008000;">//</span><span style="color: #008000;">throw new RuntimeException("in makeLink, controlPath:" + controlPath + " url:" + url);
    </span><span style="color: #008000;">//</span><span style="color: #008000;">}

    </span><span style="color: #008000;">//</span><span style="color: #008000;">Debug.logInfo("Making URL, encode=" + encode + " for URL: " + newURL + "\n encodedUrl: " + encodedUrl, module);</span>

    <span style="color: #0000ff;">return</span><span style="color: #000000;"> encodedUrl;
}</span></pre>
</div>
<p>&nbsp;<br />第五种类型是request-redirect-noparam，表明这也是一个请求重定向，类似request-redirect，但是不需要带上参数。参数可能是当前请求的QueryString，也有可能是redirect-parameter。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;response name="success" type="request-request-noparam" value="other"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;</span>

<span style="color: #0000ff;">if</span> ("request-redirect-noparam"<span style="color: #000000;">.equals(nextRequestResponse.type)) {
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.verboseOn()) 
        Debug.logVerbose(</span>"[RequestHandler.doRequest]: Response is a Request redirect with no parameters."<span style="color: #000000;">, module);
    callRedirect(makeLink(request, response, nextRequestResponse.value), response, request);
}</span></pre>
</div>
<p><br />第六种类型是view，表明这是一个视图。视图需要在controller.xml中用view-map定义。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;response name="success" type="view" value="main"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;</span>

<span style="color: #0000ff;">if</span> ("view"<span style="color: #000000;">.equals(nextRequestResponse.type)) {
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.verboseOn()) 
        Debug.logVerbose(</span>"[RequestHandler.doRequest]: Response is a view."<span style="color: #000000;">, module);

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> check for an override view, only used if "success" = eventReturn</span>
    String viewName = (UtilValidate.isNotEmpty(overrideViewUri) &amp;&amp; (eventReturn == <span style="color: #0000ff;">null</span> || "success".equals(eventReturn))) ?<span style="color: #000000;"> overrideViewUri : nextRequestResponse.value;
    renderView(viewName, requestMap.securityExternalView, request, response, saveName);
}</span></pre>
</div>
<p><br />第七种类型是view-last。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;response name="success" type="view-last" value="news"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;</span>

<span style="color: #0000ff;">if</span> ("view-last"<span style="color: #000000;">.equals(nextRequestResponse.type)) {
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.verboseOn()) 
        Debug.logVerbose(</span>"[RequestHandler.doRequest]: Response is a view."<span style="color: #000000;">, module);

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> check for an override view, only used if "success" = eventReturn</span>
    String viewName = (UtilValidate.isNotEmpty(overrideViewUri) &amp;&amp; (eventReturn == <span style="color: #0000ff;">null</span> || "success".equals(eventReturn))) ?<span style="color: #000000;"> overrideViewUri : nextRequestResponse.value;

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> as a further override, look for the _SAVED and then _HOME and then _LAST session attributes</span>
    Map&lt;String, Object&gt; urlParams = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (session.getAttribute("_SAVED_VIEW_NAME_") != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        viewName </span>= (String) session.getAttribute("_SAVED_VIEW_NAME_"<span style="color: #000000;">);
        urlParams </span>= UtilGenerics.&lt;String, Object&gt;checkMap(session.getAttribute("_SAVED_VIEW_PARAMS_"<span style="color: #000000;">));
    } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (session.getAttribute("_HOME_VIEW_NAME_") != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        viewName </span>= (String) session.getAttribute("_HOME_VIEW_NAME_"<span style="color: #000000;">);
        urlParams </span>= UtilGenerics.&lt;String, Object&gt;checkMap(session.getAttribute("_HOME_VIEW_PARAMS_"<span style="color: #000000;">));
    } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (session.getAttribute("_LAST_VIEW_NAME_") != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        viewName </span>= (String) session.getAttribute("_LAST_VIEW_NAME_"<span style="color: #000000;">);
        urlParams </span>= UtilGenerics.&lt;String, Object&gt;checkMap(session.getAttribute("_LAST_VIEW_PARAMS_"<span style="color: #000000;">));
    } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span><span style="color: #000000;"> (UtilValidate.isNotEmpty(nextRequestResponse.value)) {
        viewName </span>=<span style="color: #000000;"> nextRequestResponse.value;
    }
    </span><span style="color: #0000ff;">if</span> (urlParams != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">for</span> (Map.Entry&lt;String, Object&gt;<span style="color: #000000;"> urlParamEntry: urlParams.entrySet()) {
            String key </span>=<span style="color: #000000;"> urlParamEntry.getKey();
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> Don't overwrite messages coming from the current event</span>
            <span style="color: #0000ff;">if</span> (!("_EVENT_MESSAGE_".equals(key) || "_ERROR_MESSAGE_"<span style="color: #000000;">.equals(key)
                    </span>|| "_EVENT_MESSAGE_LIST_".equals(key) || "_ERROR_MESSAGE_LIST_"<span style="color: #000000;">.equals(key))) {
                request.setAttribute(key, urlParamEntry.getValue());
            }
        }
    }
    renderView(viewName, requestMap.securityExternalView, request, response, </span><span style="color: #0000ff;">null</span><span style="color: #000000;">);
}</span></pre>
</div>
<p><span style="line-height: 1.5;"><br />第八种类型是view-last-noparam。<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;response name="success" type="view-last-noparam" value="news"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;</span>

<span style="color: #0000ff;">if</span> ("view-last-noparam"<span style="color: #000000;">.equals(nextRequestResponse.type)) {
     </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.verboseOn()) 
         Debug.logVerbose(</span>"[RequestHandler.doRequest]: Response is a view."<span style="color: #000000;">, module);

     </span><span style="color: #008000;">//</span><span style="color: #008000;"> check for an override view, only used if "success" = eventReturn</span>
     String viewName = (UtilValidate.isNotEmpty(overrideViewUri) &amp;&amp; (eventReturn == <span style="color: #0000ff;">null</span> || "success".equals(eventReturn))) ?<span style="color: #000000;"> overrideViewUri : nextRequestResponse.value;

     </span><span style="color: #008000;">//</span><span style="color: #008000;"> as a further override, look for the _SAVED and then _HOME and then _LAST session attributes</span>
     <span style="color: #0000ff;">if</span> (session.getAttribute("_SAVED_VIEW_NAME_") != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
         viewName </span>= (String) session.getAttribute("_SAVED_VIEW_NAME_"<span style="color: #000000;">);
     } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (session.getAttribute("_HOME_VIEW_NAME_") != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
         viewName </span>= (String) session.getAttribute("_HOME_VIEW_NAME_"<span style="color: #000000;">);
     } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (session.getAttribute("_LAST_VIEW_NAME_") != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
         viewName </span>= (String) session.getAttribute("_LAST_VIEW_NAME_"<span style="color: #000000;">);
     } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span><span style="color: #000000;"> (UtilValidate.isNotEmpty(nextRequestResponse.value)) {
         viewName </span>=<span style="color: #000000;"> nextRequestResponse.value;
     }
     renderView(viewName, requestMap.securityExternalView, request, response, </span><span style="color: #0000ff;">null</span><span style="color: #000000;">);
}</span></pre>
</div>
<p><span style="line-height: 1.5;"><br />第九种类型是view-home。<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;response name="success" type="view-home" value="news"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;</span>

<span style="color: #0000ff;">if</span> ("view-home"<span style="color: #000000;">.equals(nextRequestResponse.type)) {
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.verboseOn()) 
        Debug.logVerbose(</span>"[RequestHandler.doRequest]: Response is a view."<span style="color: #000000;">, module);

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> check for an override view, only used if "success" = eventReturn</span>
    String viewName = (UtilValidate.isNotEmpty(overrideViewUri) &amp;&amp; (eventReturn == <span style="color: #0000ff;">null</span> || "success".equals(eventReturn))) ?<span style="color: #000000;"> overrideViewUri : nextRequestResponse.value;

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> as a further override, look for the _HOME session attributes</span>
    Map&lt;String, Object&gt; urlParams = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (session.getAttribute("_HOME_VIEW_NAME_") != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        viewName </span>= (String) session.getAttribute("_HOME_VIEW_NAME_"<span style="color: #000000;">);
        urlParams </span>= UtilGenerics.&lt;String, Object&gt;checkMap(session.getAttribute("_HOME_VIEW_PARAMS_"<span style="color: #000000;">));
    }
    </span><span style="color: #0000ff;">if</span> (urlParams != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
        </span><span style="color: #0000ff;">for</span> (Map.Entry&lt;String, Object&gt;<span style="color: #000000;"> urlParamEntry: urlParams.entrySet()) {
            request.setAttribute(urlParamEntry.getKey(), urlParamEntry.getValue());
        }
    }
    renderView(viewName, requestMap.securityExternalView, request, response, </span><span style="color: #0000ff;">null</span><span style="color: #000000;">);
}</span></pre>
</div>
<p><span style="line-height: 1.5;"><br />第十种类型是none，表明不返回任何响应内容。</span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;request-map uri="main"&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;">     &lt;response name="success" type="none"/&gt;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> &lt;/request-map&gt;</span>

<span style="color: #0000ff;">if</span> ("none"<span style="color: #000000;">.equals(nextRequestResponse.type)) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> no view to render (meaning the return was processed by the event)</span>
    <span style="color: #0000ff;">if</span><span style="color: #000000;"> (Debug.verboseOn()) 
        Debug.logVerbose(</span>"[RequestHandler.doRequest]: Response is handled by the event."<span style="color: #000000;">, module);
}</span></pre>
</div>]]></description></item><item><title>Eclipse RCP</title><link>http://www.cnblogs.com/eastson/archive/2014/03/05/3582479.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 05 Mar 2014 06:52:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/03/05/3582479.html</guid><description><![CDATA[<div class="para">Eclipse RCP是一项位于Eclipse平台核心的功能。大多数人想到Eclipse时，会想到Java集成开发环境(IDE)。如果将Eclipse中关于 IDE的内容剥去，剩下的就是一个提供基本工作台功能的核心，包括对可移动以及可叠加的窗口组件(编辑器和视图)、菜单、工具栏、按钮、表格、树形结构等 等的支持，而这个核心就是Eclipse RCP。<br /><br /></div>
<div class="para">Eclipse RCP就是由插件开发转向桌面应用开发，构建最小化的Eclipse平台(8M)运行你的桌面应用，不必再为程序框架烦心，摆脱失败的AWT和Swing，让程序拥有专业级效果，而实现又很简单、很优雅。<br /><br /></div>
<div class="para">RCP提供了丰富的界面控件，这使得基于 Java 开发桌面应用也变得容易了很多，虽然仍然不能和基于VB、Delphi进行相比。对于开发者而言，尽管使用 RCP 也是为了开发桌面应用，但 RCP 给开发者带来的更多的感觉是在它充分发挥了插件化系统的优势， RCP 可以视为基于 OSGi（Open Service Gateway Initiative） 构建插件化系统的最佳实践的指导，其中的不少设计方法甚至都可以整理成为基于 OSGi 做插件化应用系统的设计模式，从 RCP 的设计中，可以学习到如何将应用做到模块化、将应用做到动态化，甚至还可以学习到如何自动生成界面这样的设计思想。相信大家在了解了 RCP 的设计思想，看过其代码后，不得不对 RCP 表示崇高的敬意，大师之作，不同凡响。</div>]]></description></item><item><title>OFBiz：初始RequestHandler</title><link>http://www.cnblogs.com/eastson/archive/2014/03/05/3582068.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 05 Mar 2014 03:43:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/03/05/3582068.html</guid><description><![CDATA[<p>RequestHandler，可以称之为请求处理器，在ControlServlet.init()中初始化：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> ControlServlet <span style="color: #0000ff;">extends</span><span style="color: #000000;"> HttpServlet {
        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> init(ServletConfig config) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ServletException {
        </span><span style="color: #0000ff;">super</span><span style="color: #000000;">.init(config);

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> configure custom BSF engines</span>
<span style="color: #000000;">        configureBsf();
        
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> initialize the request handler</span>
<span style="color: #000000;"><span style="color: #ff0000;">        getRequestHandler();</span>
    }
    
    </span><span style="color: #ff0000;">protected RequestHandler getRequestHandler() {
        return</span><span style="color: #000000;"><span style="color: #ff0000;"> RequestHandler.getRequestHandler(getServletContext());
    }</span>
}</span></pre>
</div>
<p><br />ControlServlet没有为RequestHandler定义变量，而是放在ServletContext中。一个ServletContext只允许有一个RequestHandler。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> RequestHandler {
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span><span style="color: #000000;"> RequestHandler getRequestHandler(ServletContext servletContext) {
        RequestHandler rh </span>= (RequestHandler) servletContext.getAttribute("_REQUEST_HANDLER_"<span style="color: #000000;">);
        </span><span style="color: #0000ff;">if</span> (rh == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            <span style="color: #ff0000;">rh </span></span><span style="color: #ff0000;">= new RequestHandler();
            servletContext.setAttribute("_REQUEST_HANDLER_"</span><span style="color: #000000;"><span style="color: #ff0000;">, rh);
            rh.init(servletContext);</span>
        }
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> rh;
    }
}</span></pre>
</div>
<p><br />RequestHandler的构造器是空的，它的初始化放在init()中。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> RequestHandler {
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> init(ServletContext context) {
        </span><span style="color: #0000ff;">this</span>.context =<span style="color: #000000;"> context;

        </span><span style="color: #ff0000;">// init the ControllerConfig, but don't save it anywhere
        // 初始化ControllerConfig, 但是不要保存它
        this.controllerConfigURL = ConfigXMLReader.getControllerConfigURL(context);
        ConfigXMLReader.getControllerConfig(this.controllerConfigURL);
        
        </span><span style="color: #0000ff;">this</span>.viewFactory = <span style="color: #0000ff;">new</span> ViewFactory(<span style="color: #0000ff;">this</span><span style="color: #000000;">);
        </span><span style="color: #0000ff;">this</span>.eventFactory = <span style="color: #0000ff;">new</span> EventFactory(<span style="color: #0000ff;">this</span><span style="color: #000000;">);
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>RequestHandler对应的配置文件是WEB-INF/controller.xml，透过ConfigXMLReader处理。OFBiz处理controller.xml使用了缓存，超时时会被自动清理。所以，当OFBiz类中需要ControllerConfig时，不会定义一个变量保存ControllerConfig，而只是定义一个controller.xml对应的URL变量，因为ConfigXMLReader以URL为Key缓存ControllerConfig。RequestHandler的doRequest()获取ControllerConfig就是这样处理的：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> RequestHandler {
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> doRequest(HttpServletRequest request, HttpServletResponse response, String chain,
            GenericValue userLogin, Delegator delegator) </span><span style="color: #0000ff;">throws</span><span style="color: #000000;"> RequestHandlerException {
        ... ...

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> get the controllerConfig once for this method so we don't have to get it over and over inside the method</span>
        <span style="color: #ff0000;">ConfigXMLReader.ControllerConfig controllerConfig = this.getControllerConfig();
        Map&lt;String, ConfigXMLReader.RequestMap&gt; requestMapMap =</span><span style="color: #000000;"><span style="color: #ff0000;"> controllerConfig.getRequestMapMap();</span>
        
        ... ...
    }
    
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> ConfigXMLReader.ControllerConfig getControllerConfig() {
        </span><span style="color: #0000ff;">return</span> ConfigXMLReader.getControllerConfig(<span style="color: #0000ff;">this</span><span style="color: #000000;">.controllerConfigURL);
    }
}</span></pre>
</div>
<p><br />RequestHandler包含了一个ViewFactory对象和一个EventFactory对象。ViewFactory对象的初始化由自身的构造器完成。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> ViewFactory {
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> ViewFactory(RequestHandler requestHandler) {
        </span><span style="color: #0000ff;">this</span>.handlers =<span style="color: #000000;"> FastMap.newInstance();
        </span><span style="color: #0000ff;">this</span>.requestHandler =<span style="color: #000000;"> requestHandler;
        </span><span style="color: #0000ff;">this</span>.context =<span style="color: #000000;"> requestHandler.getServletContext();

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> pre-load all the view handlers</span>
        <span style="color: #0000ff;">try</span><span style="color: #000000;"> {
            </span><span style="color: #ff0000;">this</span><span style="color: #000000;"><span style="color: #ff0000;">.preLoadAll();</span>
        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (ViewHandlerException e) {
            Debug.logError(e, module);
            </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> GeneralRuntimeException(e);
        }
    }
}</span></pre>
</div>
<p><br />ViewFactory初始时，调用preLoadAll()装入所有在controller.xml中定义的ViewHandler。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> ViewFactory {
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span> preLoadAll() <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ViewHandlerException {
        Set</span><span style="color: #000000;">&lt;String&gt; handlers = this.requestHandler.getControllerConfig().getViewHandlerMap().keySet();
        if (handlers != null) {
            for (String type: handlers) {
                <span style="color: #ff0000;">this.handlers.put(type, this.loadViewHandler(type));</span>
            }
        }

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> load the "default" type</span>
        <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">this</span>.handlers.containsKey("default"<span style="color: #000000;">)) {
            </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
               <span style="color: #ff0000;"> ViewHandler h </span></span><span style="color: #ff0000;">= (ViewHandler) ObjectType.getInstance("org.ofbiz.webapp.view.JspViewHandler");
                h.init(context);
                </span><span style="color: #0000ff;">this</span>. handlers.put("default"<span style="color: #000000;">, h);
            } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e) {
                </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> ViewHandlerException(e);
            }
        }
    }
}</span></pre>
</div>
<p><br />loadViewHandler()执行具体的ViewHandler初始化。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> ViewFactory {
    </span><span style="color: #0000ff;">private</span> ViewHandler loadViewHandler(String type) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ViewHandlerException {
        ViewHandler handler </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
        String handlerClass </span>= <span style="color: #0000ff;">this</span><span style="color: #000000;">.requestHandler.getControllerConfig().getViewHandlerMap().get(type);
        </span><span style="color: #0000ff;">if</span> (handlerClass == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> ViewHandlerException("Unknown handler type: " +<span style="color: #000000;"> type);
        }

        </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
            <span style="color: #ff0000;">handler </span></span><span style="color: #ff0000;">=</span><span style="color: #000000;"><span style="color: #ff0000;"> (ViewHandler) ObjectType.getInstance(handlerClass);
            handler.setName(type);
            handler.init(context);</span>
        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (ClassNotFoundException cnf) {
            </span><span style="color: #008000;">//</span><span style="color: #008000;">throw new ViewHandlerException("Cannot load handler class", cnf);</span>
            Debug.logWarning("Warning: could not load view handler class because it was not found; note that some views may not work: " +<span style="color: #000000;"> cnf.toString(), module);
        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (InstantiationException ie) {
            </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span> ViewHandlerException("Cannot get instance of the handler"<span style="color: #000000;">, ie);
        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (IllegalAccessException iae) {
            </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> ViewHandlerException(iae.getMessage(), iae);
        }

        </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> handler;
    }
}</span></pre>
</div>
<p><br />ViewHandler对象创建后，紧接着执行其init()方法。以具体的VelocityViewHandler为例，其inti()方法就完成了VelocityEngine的初始化。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> VelocityViewHandler <span style="color: #0000ff;">extends</span><span style="color: #000000;"> AbstractViewHandler {
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> init(ServletContext context) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> ViewHandlerException {
        </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
            Debug.logInfo(</span>"[VelocityViewHandler.init] : Loading..."<span style="color: #000000;">, module);
            ve </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> VelocityEngine();
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> set the properties
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> use log4j for logging
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> use classpath template loading (file loading will not work in WAR)</span>
<span style="color: #000000;">            ve.setProperty(RuntimeConstants.RUNTIME_LOG_LOGSYSTEM_CLASS,
                </span>"org.apache.velocity.runtime.log.Log4JLogSystem"<span style="color: #000000;">);
            ve.setProperty(</span>"runtime.log.logsystem.log4j.category"<span style="color: #000000;">, module);

            Properties props </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
            </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
                props </span>= UtilProperties.getProperties(context.getResource("/WEB-INF/velocity.properties"<span style="color: #000000;">));
                Debug.logInfo(</span>"[VelocityViewHandler.init] : Loaded /WEB-INF/velocity.properties"<span style="color: #000000;">, module);
            } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (MalformedURLException e) {
                Debug.logError(e, module);
            }
            </span><span style="color: #0000ff;">if</span> (props == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
                props </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> Properties();
                Debug.logWarning(</span>"[VelocityViewHandler.init] : Cannot load /WEB-INF/velocity.properties. " +
                    "Using default properties."<span style="color: #000000;">, module);
            }

            </span><span style="color: #008000;">//</span><span style="color: #008000;"> set the file loader path -- used to mount the webapp</span>
            <span style="color: #0000ff;">if</span> (context.getRealPath("/") != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
                props.setProperty(</span>"file.resource.loader.path", context.getRealPath("/"<span style="color: #000000;">));
                Debug.logInfo(</span>"[VelocityViewHandler.init] : Got true webapp path, mounting as template path."<span style="color: #000000;">, module);
            }

            ve.init(props);
        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e) {
            </span><span style="color: #0000ff;">throw</span> <span style="color: #0000ff;">new</span><span style="color: #000000;"> ViewHandlerException(e.getMessage(), e);
        }
    }
}</span></pre>
</div>]]></description></item><item><title>OFBiz：添加样式【转】</title><link>http://www.cnblogs.com/eastson/archive/2014/03/03/3578308.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 03 Mar 2014 06:32:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/03/03/3578308.html</guid><description><![CDATA[<p>原文地址：<a href="http://www.cnblogs.com/ofbiz/p/3205851.html">http://www.cnblogs.com/ofbiz/p/3205851.html</a></p>
<p><br />1.&nbsp;<span>打开themes文件夹，拷贝一份样式作为自己的样式更改初始样式，我这里拷贝的是flatgrey文件夹，重新命名为qlstyle。<br />2.&nbsp;<span>在文件/ofbiz/framework/common/config/CommonEntityLabels.xml中找要在页面显示的数据，默认这些数据都不存在中文 ，你可以在你新建的标签中添加中文资源。<br /></span></span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">key</span><span style="color: #0000ff;">="VisualTheme.description.QL_STYLE"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">value </span><span style="color: #ff0000;">xml:lang</span><span style="color: #0000ff;">="zh"</span><span style="color: #0000ff;">&gt;</span>后台管理模块样式<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">value</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">property</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>3.&nbsp;<span>修改 文件ofbiz/themes/qlstyle/ofbiz-component.xml中相关的程序名等。<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">ofbiz-component </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="qlstyle"</span><span style="color: #ff0000;">
        xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;">
        xsi:noNamespaceSchemaLocation</span><span style="color: #0000ff;">="http://ofbiz.apache.org/dtds/ofbiz-component.xsd"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> define resource loaders; most common is to use the component resource loader </span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">resource-loader </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="main"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="component"</span><span style="color: #0000ff;">/&gt;</span>
 
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> entity resources: model(s), eca(s), group, and data definitions </span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">entity-resource </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="data"</span><span style="color: #ff0000;"> reader-name</span><span style="color: #0000ff;">="seed"</span><span style="color: #ff0000;"> loader</span><span style="color: #0000ff;">="main"</span><span style="color: #ff0000;"> location</span><span style="color: #0000ff;">="data/QlstyleThemeData.xml"</span><span style="color: #0000ff;">/&gt;</span>
 
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> web applications; will be mounted when using the embedded Jetty container </span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">webapp </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="qlstyle"</span><span style="color: #ff0000;">
        title</span><span style="color: #0000ff;">="qlstyle"</span><span style="color: #ff0000;">
        menu-name</span><span style="color: #0000ff;">="secondary"</span><span style="color: #ff0000;">
        server</span><span style="color: #0000ff;">="default-server"</span><span style="color: #ff0000;">
        location</span><span style="color: #0000ff;">="webapp/qlstyle"</span><span style="color: #ff0000;">
        mount-point</span><span style="color: #0000ff;">="/qlstyle"</span><span style="color: #ff0000;">
        app-bar-display</span><span style="color: #0000ff;">="false"</span><span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">ofbiz-component</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>4.&nbsp;<span>修改文件名称ofbiz/themes/qlstyle/data/FlatGreyThemeData.xml为QlstyleThemeData.xml。<br />5.&nbsp;<span>变更这个文件里面的内容为：<br /></span></span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">entity-engine-xml</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">VisualTheme </span><span style="color: #ff0000;">visualThemeId</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> visualThemeSetId</span><span style="color: #0000ff;">="BACKOFFICE"</span><span style="color: #ff0000;"> description</span><span style="color: #0000ff;">="Qun Li, background management platform"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">VisualThemeResource </span><span style="color: #ff0000;">visualThemeId</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> resourceTypeEnumId</span><span style="color: #0000ff;">="VT_NAME"</span><span style="color: #ff0000;"> resourceValue</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> sequenceId</span><span style="color: #0000ff;">="01"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">VisualThemeResource </span><span style="color: #ff0000;">visualThemeId</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> resourceTypeEnumId</span><span style="color: #0000ff;">="VT_STYLESHEET"</span><span style="color: #ff0000;"> resourceValue</span><span style="color: #0000ff;">="/qlstyle/maincss.css"</span><span style="color: #ff0000;"> sequenceId</span><span style="color: #0000ff;">="01"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">VisualThemeResource </span><span style="color: #ff0000;">visualThemeId</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> resourceTypeEnumId</span><span style="color: #0000ff;">="VT_STYLESHEET"</span><span style="color: #ff0000;"> resourceValue</span><span style="color: #0000ff;">="/qlstyle/javascript.css"</span><span style="color: #ff0000;"> sequenceId</span><span style="color: #0000ff;">="02"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">VisualThemeResource </span><span style="color: #ff0000;">visualThemeId</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> resourceTypeEnumId</span><span style="color: #0000ff;">="VT_HELPSTYLESHEET"</span><span style="color: #ff0000;"> resourceValue</span><span style="color: #0000ff;">="/qlstyle/help.css"</span><span style="color: #ff0000;"> sequenceId</span><span style="color: #0000ff;">="01"</span><span style="color: #0000ff;">/&gt;</span>    
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">VisualThemeResource </span><span style="color: #ff0000;">visualThemeId</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> resourceTypeEnumId</span><span style="color: #0000ff;">="VT_DOCBOOKSTYLESHEET"</span><span style="color: #ff0000;"> resourceValue</span><span style="color: #0000ff;">="/qlstyle/webapp/qlstyle/docbook.css"</span><span style="color: #ff0000;"> sequenceId</span><span style="color: #0000ff;">="01"</span><span style="color: #0000ff;">/&gt;</span>    
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">VisualThemeResource </span><span style="color: #ff0000;">visualThemeId</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> resourceTypeEnumId</span><span style="color: #0000ff;">="VT_RTL_STYLESHEET"</span><span style="color: #ff0000;"> resourceValue</span><span style="color: #0000ff;">="/qlstyle/mainrtl.css"</span><span style="color: #ff0000;"> sequenceId</span><span style="color: #0000ff;">="01"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">VisualThemeResource </span><span style="color: #ff0000;">visualThemeId</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> resourceTypeEnumId</span><span style="color: #0000ff;">="VT_HDR_JAVASCRIPT"</span><span style="color: #ff0000;"> resourceValue</span><span style="color: #0000ff;">="/qlstyle/js/application.js"</span><span style="color: #ff0000;"> sequenceId</span><span style="color: #0000ff;">="01"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">VisualThemeResource </span><span style="color: #ff0000;">visualThemeId</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> resourceTypeEnumId</span><span style="color: #0000ff;">="VT_SHORTCUT_ICON"</span><span style="color: #ff0000;"> resourceValue</span><span style="color: #0000ff;">="/images/ofbiz.ico"</span><span style="color: #ff0000;"> sequenceId</span><span style="color: #0000ff;">="01"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">VisualThemeResource </span><span style="color: #ff0000;">visualThemeId</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> resourceTypeEnumId</span><span style="color: #0000ff;">="VT_HDR_IMAGE_URL"</span><span style="color: #ff0000;"> resourceValue</span><span style="color: #0000ff;">="/qlstyle/images/ofbiz_logo.gif"</span><span style="color: #ff0000;"> sequenceId</span><span style="color: #0000ff;">="01"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">VisualThemeResource </span><span style="color: #ff0000;">visualThemeId</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> resourceTypeEnumId</span><span style="color: #0000ff;">="VT_HDR_TMPLT_LOC"</span><span style="color: #ff0000;"> resourceValue</span><span style="color: #0000ff;">="component://qlstyle/includes/header.ftl"</span><span style="color: #ff0000;"> sequenceId</span><span style="color: #0000ff;">="01"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">VisualThemeResource </span><span style="color: #ff0000;">visualThemeId</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> resourceTypeEnumId</span><span style="color: #0000ff;">="VT_MSG_TMPLT_LOC"</span><span style="color: #ff0000;"> resourceValue</span><span style="color: #0000ff;">="component://common/webcommon/includes/messages.ftl"</span><span style="color: #ff0000;"> sequenceId</span><span style="color: #0000ff;">="01"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">VisualThemeResource </span><span style="color: #ff0000;">visualThemeId</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> resourceTypeEnumId</span><span style="color: #0000ff;">="VT_FTR_TMPLT_LOC"</span><span style="color: #ff0000;"> resourceValue</span><span style="color: #0000ff;">="component://qlstyle/includes/footer.ftl"</span><span style="color: #ff0000;"> sequenceId</span><span style="color: #0000ff;">="01"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">VisualThemeResource </span><span style="color: #ff0000;">visualThemeId</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> resourceTypeEnumId</span><span style="color: #0000ff;">="VT_NAV_TMPLT_LOC"</span><span style="color: #ff0000;"> resourceValue</span><span style="color: #0000ff;">="component://qlstyle/includes/appbar.ftl"</span><span style="color: #ff0000;"> sequenceId</span><span style="color: #0000ff;">="01"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">VisualThemeResource </span><span style="color: #ff0000;">visualThemeId</span><span style="color: #0000ff;">="QL_STYLE"</span><span style="color: #ff0000;"> resourceTypeEnumId</span><span style="color: #0000ff;">="VT_SCREENSHOT"</span><span style="color: #ff0000;"> resourceValue</span><span style="color: #0000ff;">="/qlstyle/screenshot.jpg"</span><span style="color: #ff0000;"> sequenceId</span><span style="color: #0000ff;">="01"</span><span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">entity-engine-xml</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><span>QL_STYLE要与CommonEntityLabels.xml所添加的key后部分一致。<br />6.&nbsp;<span>重新编译，并启动系统，这样就可以看到自己新建的qlstyle了。好了可以开始修改自己的样式了。（可以切换成中文，就可以看到中文信息了）。</span></span></p>]]></description></item><item><title>OFBiz：配置过程</title><link>http://www.cnblogs.com/eastson/archive/2014/03/03/3577816.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 03 Mar 2014 02:10:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/03/03/3577816.html</guid><description><![CDATA[<p>OFBiz使用了大量的配置文件，整个过程有点复杂。这里将配置过程大略整理了一下，方便后面查阅。</p>
<p>第一层：org.ofbiz.base.start.Start启动类。该类载入org/ofbiz/base/start/start.properties定义的载入类loader，可以定义多个载入类，最典型的载入类是org.ofbiz.base.container.ContainerLoader。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;"># --- Location (relative to ofbiz.home) for (normal) container configuration
ofbiz.container.config</span>=<span style="color: #000000;">framework/base/config/ofbiz-containers.xml

# --- StartupLoader implementations to load (in order)
ofbiz.start.loader1</span>=org.ofbiz.base.container.ContainerLoader</pre>
</div>
<p>&nbsp;</p>
<p>第二层：org.ofbiz.base.container.ContainerLoader载入类。该类载入framework/base/config/ofbiz-containers.xml定义的容器，可以定义多个容器，最典型的容器是org.ofbiz.base.container.ComponentContainer。ofbiz-containers.xml的位置由start.properties的ofbiz.container.config指定。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">ofbiz-containers </span><span style="color: #ff0000;">xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;">
        xsi:noNamespaceSchemaLocation</span><span style="color: #0000ff;">="http://ofbiz.apache.org/dtds/ofbiz-containers.xsd"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> load the ofbiz component container (always first) </span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">container </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="component-container"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.ofbiz.base.container.ComponentContainer"</span><span style="color: #0000ff;">/&gt;</span>

    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> load the cached classloader container (always second) </span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">container </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="classloader-container"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.ofbiz.base.container.ClassLoaderContainer"</span><span style="color: #0000ff;">/&gt;</span>

    <span style="color: #008000;">&lt;!--</span><span style="color: #008000;"> load the naming (JNDI) server </span><span style="color: #008000;">--&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">container </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="naming-container"</span><span style="color: #ff0000;"> class</span><span style="color: #0000ff;">="org.ofbiz.base.container.NamingServiceContainer"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="host"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="0.0.0.0"</span><span style="color: #0000ff;">/&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">property </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="port"</span><span style="color: #ff0000;"> value</span><span style="color: #0000ff;">="1099"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">container</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">
    
    ... ...
    
</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">ofbiz-containers</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>第三层：org.ofbiz.base.container.ComponentContainer容器类。该类载入framework/base/config/component-load.xml定义的组件位置。component-load.xml的位置可以由ofbiz-containers.xml的loader-config属性指定。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">component-loader </span><span style="color: #ff0000;">xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;">
        xsi:noNamespaceSchemaLocation</span><span style="color: #0000ff;">="http://ofbiz.apache.org/dtds/component-loader.xsd"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-components </span><span style="color: #ff0000;">parent-directory</span><span style="color: #0000ff;">="framework"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-components </span><span style="color: #ff0000;">parent-directory</span><span style="color: #0000ff;">="themes"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-components </span><span style="color: #ff0000;">parent-directory</span><span style="color: #0000ff;">="applications"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-components </span><span style="color: #ff0000;">parent-directory</span><span style="color: #0000ff;">="specialpurpose"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-components </span><span style="color: #ff0000;">parent-directory</span><span style="color: #0000ff;">="hot-deploy"</span><span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">component-loader</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>第四层：org.ofbiz.base.component.ComponentConfig类。该类载入具体的组件ofbiz-component.xml。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">ofbiz-component </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="base"</span><span style="color: #ff0000;">
        xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;">
        xsi:noNamespaceSchemaLocation</span><span style="color: #0000ff;">="http://ofbiz.apache.org/dtds/ofbiz-component.xsd"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">resource-loader </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="main"</span><span style="color: #ff0000;"> type</span><span style="color: #0000ff;">="component"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">classpath </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="jar"</span><span style="color: #ff0000;"> location</span><span style="color: #0000ff;">="build/lib/*"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">classpath </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="dir"</span><span style="color: #ff0000;"> location</span><span style="color: #0000ff;">="config"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">classpath </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="jar"</span><span style="color: #ff0000;"> location</span><span style="color: #0000ff;">="lib/*"</span><span style="color: #0000ff;">/&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">test-suite </span><span style="color: #ff0000;">loader</span><span style="color: #0000ff;">="main"</span><span style="color: #ff0000;"> location</span><span style="color: #0000ff;">="testdef/basetests.xml"</span><span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">ofbiz-component</span><span style="color: #0000ff;">&gt;</span></pre>
</div>]]></description></item><item><title>OFBiz：component-load.xml</title><link>http://www.cnblogs.com/eastson/archive/2014/02/28/3573893.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Feb 2014 08:40:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/02/28/3573893.html</guid><description><![CDATA[<p>component-load.xml定义了OFBiz的组件载入位置，默认的是通过目录来设置：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">component-loader </span><span style="color: #ff0000;">xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;">
        xsi:noNamespaceSchemaLocation</span><span style="color: #0000ff;">="http://ofbiz.apache.org/dtds/component-loader.xsd"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-components </span><span style="color: #ff0000;">parent-directory</span><span style="color: #0000ff;">="framework"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-components </span><span style="color: #ff0000;">parent-directory</span><span style="color: #0000ff;">="themes"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-components </span><span style="color: #ff0000;">parent-directory</span><span style="color: #0000ff;">="applications"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-components </span><span style="color: #ff0000;">parent-directory</span><span style="color: #0000ff;">="specialpurpose"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-components </span><span style="color: #ff0000;">parent-directory</span><span style="color: #0000ff;">="hot-deploy"</span><span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">component-loader</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>其实也可以通过component-location设置具体的组件位置：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">component-loader </span><span style="color: #ff0000;">xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;">
        xsi:noNamespaceSchemaLocation</span><span style="color: #0000ff;">="http://ofbiz.apache.org/dtds/component-loader.xsd"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-components </span><span style="color: #ff0000;">parent-directory</span><span style="color: #0000ff;">="framework"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-components </span><span style="color: #ff0000;">parent-directory</span><span style="color: #0000ff;">="themes"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-components </span><span style="color: #ff0000;">parent-directory</span><span style="color: #0000ff;">="applications"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-components </span><span style="color: #ff0000;">parent-directory</span><span style="color: #0000ff;">="specialpurpose"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-components </span><span style="color: #ff0000;">parent-directory</span><span style="color: #0000ff;">="hot-deploy"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">load-component </span><span style="color: #ff0000;">component-location</span><span style="color: #0000ff;">="C:/apache-ofbiz-12.04.02/practice"</span><span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">component-loader</span><span style="color: #0000ff;">&gt;</span></pre>
</div>]]></description></item><item><title>OFBiz：组件装入位置</title><link>http://www.cnblogs.com/eastson/archive/2014/02/25/3566607.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 25 Feb 2014 06:07:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/02/25/3566607.html</guid><description><![CDATA[<p>默认的，OFBiz会在framework、applications、specialpurpose、hot-deploy这几个目录寻找组件，在themes目录中寻找主题。OFBiz是通过framework\base\config\component-load.xml定义这些为位置的：<br /><img src="http://images.cnitblog.com/blog/111826/201402/251406547058067.png" alt="" /></p>]]></description></item><item><title>OFBiz：添加实体栏位</title><link>http://www.cnblogs.com/eastson/archive/2014/02/25/3566376.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 25 Feb 2014 03:50:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/02/25/3566376.html</guid><description><![CDATA[<p>如何添加实体栏位？这里演示为PostalAddress添加planet栏位。打开applications/party/entitydef/entitymodel.xml，找到PostalAddress，添加planet栏位：<br /><img src="http://images.cnitblog.com/blog/111826/201402/251135498426368.png" alt="" /><br /><br />上面只是修改的实体的定义，但是还没有影响到底层的数据库表结构。重启OFBiz，在console.log中应该有类似下面的内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">[ DatabaseUtil.java:390:WARN ] Entity [PostalAddress] has 19 fields but table [OFBIZ.POSTAL_ADDRESS] has 18 columns.
[ DatabaseUtil.java:399:WARN ] Field [planet] of entity [PostalAddress] is missing its corresponding column [PLANET]
[ DatabaseUtil.java:1891:INFO ] [addColumn] sql=ALTER TABLE OFBIZ.POSTAL_ADDRESS ADD PLANET VARCHAR(100)
[ DatabaseUtil.java:412:INFO ] Added column [PLANET] to table [OFBIZ.POSTAL_ADDRESS]</span></pre>
</div>
<p>这表示数据库表结构已经同步了。<br /><br />OFBiz启动时为什么会同步数据库表结构？这是因为在framework/entity/config/entityengine.xml有这样的设置：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">check-on-start="true"
add-missing-on-start="true"</span></pre>
</div>
<p><img src="http://images.cnitblog.com/blog/111826/201402/251149546621568.png" alt="" /></p>]]></description></item><item><title>OFBiz：扩展controller.xml</title><link>http://www.cnblogs.com/eastson/archive/2014/02/25/3566320.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 25 Feb 2014 03:32:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/02/25/3566320.html</guid><description><![CDATA[<p>如何扩展controller.xml？两种方法：一种方法是直接修改原先的controller.xml，这种方法不方便后续升级。第二种方法是新建一个extended.xml文件，再在controllerm.xml中include新建的文件。<br /><img src="http://images.cnitblog.com/blog/111826/201402/251128480351241.png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201402/251131450872729.png" alt="" /></p>]]></description></item><item><title>Adminer - 类似于phpMyAdmin的MySQL管理客户端</title><link>http://www.cnblogs.com/eastson/archive/2014/02/13/3547533.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 13 Feb 2014 01:46:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/02/13/3547533.html</guid><description><![CDATA[<p><span style="line-height: normal; text-transform: none; background-color: #ffffff; font-variant: normal; font-style: normal; text-indent: 0px; display: inline !important; font-family: 宋体; white-space: normal; float: none; letter-spacing: 1px; color: #333333; font-weight: normal; word-spacing: 3px; -webkit-text-stroke-width: 0px;"><a href="http://www.adminer.org/en/">Adminer</a>是一个类似于phpMyAdmin的MySQL管理客户端。整个程序只有一个PHP文件，易于使用和安装。Adminer支持多语言（已自带11种翻译语言文件，可以按自己的需求翻译相应的语言）。支持PHP4.3+，MySQL 4.1+以上的版本。提供的功能包括：<span class="Apple-converted-space">&nbsp;</span></span><br style="text-transform: none; background-color: #ffffff; text-indent: 0px; font: 13px 宋体; white-space: normal; letter-spacing: 1px; color: #333333; word-spacing: 3px; -webkit-text-stroke-width: 0px;" /><span style="line-height: normal; text-transform: none; background-color: #ffffff; font-variant: normal; font-style: normal; text-indent: 0px; display: inline !important; font-family: 宋体; white-space: normal; float: none; letter-spacing: 1px; color: #333333; font-weight: normal; word-spacing: 3px; -webkit-text-stroke-width: 0px;">1：创建，修改，删除索引/外键/视图/存储过程和函数。<span class="Apple-converted-space">&nbsp;</span></span><br style="text-transform: none; background-color: #ffffff; text-indent: 0px; font: 13px 宋体; white-space: normal; letter-spacing: 1px; color: #333333; word-spacing: 3px; -webkit-text-stroke-width: 0px;" /><span style="line-height: normal; text-transform: none; background-color: #ffffff; font-variant: normal; font-style: normal; text-indent: 0px; display: inline !important; font-family: 宋体; white-space: normal; float: none; letter-spacing: 1px; color: #333333; font-weight: normal; word-spacing: 3px; -webkit-text-stroke-width: 0px;">2：查询，合计，排序数据。<span class="Apple-converted-space">&nbsp;</span></span><br style="text-transform: none; background-color: #ffffff; text-indent: 0px; font: 13px 宋体; white-space: normal; letter-spacing: 1px; color: #333333; word-spacing: 3px; -webkit-text-stroke-width: 0px;" /><span style="line-height: normal; text-transform: none; background-color: #ffffff; font-variant: normal; font-style: normal; text-indent: 0px; display: inline !important; font-family: 宋体; white-space: normal; float: none; letter-spacing: 1px; color: #333333; font-weight: normal; word-spacing: 3px; -webkit-text-stroke-width: 0px;">3：新增/修改/删除记录。<span class="Apple-converted-space">&nbsp;</span></span><br style="text-transform: none; background-color: #ffffff; text-indent: 0px; font: 13px 宋体; white-space: normal; letter-spacing: 1px; color: #333333; word-spacing: 3px; -webkit-text-stroke-width: 0px;" /><span style="line-height: normal; text-transform: none; background-color: #ffffff; font-variant: normal; font-style: normal; text-indent: 0px; display: inline !important; font-family: 宋体; white-space: normal; float: none; letter-spacing: 1px; color: #333333; font-weight: normal; word-spacing: 3px; -webkit-text-stroke-width: 0px;">4：支持所有数据类型，包括大字段。<span class="Apple-converted-space">&nbsp;</span></span><br style="text-transform: none; background-color: #ffffff; text-indent: 0px; font: 13px 宋体; white-space: normal; letter-spacing: 1px; color: #333333; word-spacing: 3px; -webkit-text-stroke-width: 0px;" /><span style="line-height: normal; text-transform: none; background-color: #ffffff; font-variant: normal; font-style: normal; text-indent: 0px; display: inline !important; font-family: 宋体; white-space: normal; float: none; letter-spacing: 1px; color: #333333; font-weight: normal; word-spacing: 3px; -webkit-text-stroke-width: 0px;">5：能够批量执行SQL语句。<span class="Apple-converted-space">&nbsp;</span></span><br style="text-transform: none; background-color: #ffffff; text-indent: 0px; font: 13px 宋体; white-space: normal; letter-spacing: 1px; color: #333333; word-spacing: 3px; -webkit-text-stroke-width: 0px;" /><span style="line-height: normal; text-transform: none; background-color: #ffffff; font-variant: normal; font-style: normal; text-indent: 0px; display: inline !important; font-family: 宋体; white-space: normal; float: none; letter-spacing: 1px; color: #333333; font-weight: normal; word-spacing: 3px; -webkit-text-stroke-width: 0px;">6：支持将数据，表结构，视图导成SQL或CSV。<span class="Apple-converted-space">&nbsp;</span></span><br style="text-transform: none; background-color: #ffffff; text-indent: 0px; font: 13px 宋体; white-space: normal; letter-spacing: 1px; color: #333333; word-spacing: 3px; -webkit-text-stroke-width: 0px;" /><span style="line-height: normal; text-transform: none; background-color: #ffffff; font-variant: normal; font-style: normal; text-indent: 0px; display: inline !important; font-family: 宋体; white-space: normal; float: none; letter-spacing: 1px; color: #333333; font-weight: normal; word-spacing: 3px; -webkit-text-stroke-width: 0px;">7：能够外键关联打印数据库概要。<span class="Apple-converted-space">&nbsp;</span></span><br style="text-transform: none; background-color: #ffffff; text-indent: 0px; font: 13px 宋体; white-space: normal; letter-spacing: 1px; color: #333333; word-spacing: 3px; -webkit-text-stroke-width: 0px;" /><span style="line-height: normal; text-transform: none; background-color: #ffffff; font-variant: normal; font-style: normal; text-indent: 0px; display: inline !important; font-family: 宋体; white-space: normal; float: none; letter-spacing: 1px; color: #333333; font-weight: normal; word-spacing: 3px; -webkit-text-stroke-width: 0px;">8：能够查看进程和关闭进程。<span class="Apple-converted-space">&nbsp;</span></span><br style="text-transform: none; background-color: #ffffff; text-indent: 0px; font: 13px 宋体; white-space: normal; letter-spacing: 1px; color: #333333; word-spacing: 3px; -webkit-text-stroke-width: 0px;" /><span style="line-height: normal; text-transform: none; background-color: #ffffff; font-variant: normal; font-style: normal; text-indent: 0px; display: inline !important; font-family: 宋体; white-space: normal; float: none; letter-spacing: 1px; color: #333333; font-weight: normal; word-spacing: 3px; -webkit-text-stroke-width: 0px;">9：能够查看用户和权限并修改。<span class="Apple-converted-space">&nbsp;</span></span><br style="text-transform: none; background-color: #ffffff; text-indent: 0px; font: 13px 宋体; white-space: normal; letter-spacing: 1px; color: #333333; word-spacing: 3px; -webkit-text-stroke-width: 0px;" /><span style="line-height: normal; text-transform: none; background-color: #ffffff; font-variant: normal; font-style: normal; text-indent: 0px; display: inline !important; font-family: 宋体; white-space: normal; float: none; letter-spacing: 1px; color: #333333; font-weight: normal; word-spacing: 3px; -webkit-text-stroke-width: 0px;">10：管理事件和表格分区（MySQL5.1才支持）。<br /></span><span style="line-height: normal; text-transform: none; background-color: #ffffff; font-variant: normal; font-style: normal; text-indent: 0px; display: inline !important; font-family: 宋体; white-space: normal; float: none; letter-spacing: 1px; color: #333333; font-weight: normal; word-spacing: 3px; -webkit-text-stroke-width: 0px;"><br /></span><span style="text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 13px 宋体; white-space: normal; float: none; letter-spacing: 1px; color: #333333; word-spacing: 3px; -webkit-text-stroke-width: 0px;"><span class="Apple-converted-space"><img src="http://images.cnitblog.com/blog/111826/201402/130945228061160.jpg" alt="" /><br /><br /></span></span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>定制ADempiere（1）- 会议记录</title><link>http://www.cnblogs.com/eastson/archive/2014/02/11/3543074.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 11 Feb 2014 08:02:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/02/11/3543074.html</guid><description><![CDATA[<p>本文是《<a href="http://www.doc88.com/p-69434004547.html">ADempiere 3.6 Cookbook</a>》一书的实例笔记，详细内容请查阅该书完整内容。</p>
<p>&nbsp;</p>
<p>1. 登录pgAdmin III，创建表c_mom:</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">CREATE</span> <span style="color: #0000ff;">TABLE</span><span style="color: #000000;"> adempiere.c_mom (
c_mom_id numeric(</span><span style="color: #800000; font-weight: bold;">10</span>,<span style="color: #800000; font-weight: bold;">0</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
ad_client_id numeric(</span><span style="color: #800000; font-weight: bold;">10</span>,<span style="color: #800000; font-weight: bold;">0</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
ad_org_id numeric(</span><span style="color: #800000; font-weight: bold;">10</span>,<span style="color: #800000; font-weight: bold;">0</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
isactive </span><span style="color: #0000ff;">character</span>(<span style="color: #800000; font-weight: bold;">1</span>) <span style="color: #0000ff;">DEFAULT</span> <span style="color: #ff0000;">'</span><span style="color: #ff0000;">Y</span><span style="color: #ff0000;">'</span>::bpchar <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
created </span><span style="color: #0000ff;">timestamp</span> without time zone <span style="color: #0000ff;">DEFAULT</span> now() <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
createdby numeric(</span><span style="color: #800000; font-weight: bold;">10</span>,<span style="color: #800000; font-weight: bold;">0</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
updated </span><span style="color: #0000ff;">timestamp</span> without time zone <span style="color: #0000ff;">DEFAULT</span> now() <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
updatedby numeric(</span><span style="color: #800000; font-weight: bold;">10</span>,<span style="color: #800000; font-weight: bold;">0</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
value </span><span style="color: #0000ff;">character</span> <span style="color: #0000ff;">varying</span>(<span style="color: #800000; font-weight: bold;">30</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
name </span><span style="color: #0000ff;">character</span> <span style="color: #0000ff;">varying</span>(<span style="color: #800000; font-weight: bold;">255</span>) <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
start_date date </span><span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
start_time </span><span style="color: #0000ff;">timestamp</span> without time zone <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
end_time </span><span style="color: #0000ff;">timestamp</span> without time zone <span style="color: #808080;">NOT</span> <span style="color: #0000ff;">NULL</span><span style="color: #000000;">,
chairperson </span><span style="color: #0000ff;">character</span> <span style="color: #0000ff;">varying</span>(<span style="color: #800000; font-weight: bold;">80</span><span style="color: #000000;">),
participants </span><span style="color: #0000ff;">character</span> <span style="color: #0000ff;">varying</span>(<span style="color: #800000; font-weight: bold;">4000</span><span style="color: #000000;">),
agenda </span><span style="color: #0000ff;">character</span> <span style="color: #0000ff;">varying</span>(<span style="color: #800000; font-weight: bold;">4000</span><span style="color: #000000;">),
discussion_detail </span><span style="color: #0000ff;">character</span> <span style="color: #0000ff;">varying</span>(<span style="color: #800000; font-weight: bold;">8000</span><span style="color: #000000;">),
</span><span style="color: #0000ff;">CONSTRAINT</span> c_mom_pkey <span style="color: #0000ff;">PRIMARY</span> <span style="color: #0000ff;">KEY</span><span style="color: #000000;"> (c_mom_id)
);</span></pre>
</div>
<p>这里要注意几点：</p>
<ul>
<li>登录pgAdmin III时一定要用ADempiere相同的数据连接帐号，否则创建的表的所有者就不是adempiere。</li>
<li>ADempiere要求每个表都必须包含下面七个栏位，这些栏位由ADempiere自动维护：
<ul>
<li>ad_client_id：实体标识</li>
<li>ad_org_id：组织标识</li>
<li>isactive：指示当前记录是否有效</li>
<li>created：指示当前记录建立时间</li>
<li>createdby：指示当前记录建立人员标识</li>
<li>updated：指示当前记录最后修改时间</li>
<li>updatedby：指示当前记录最后修改人员标识</li>
</ul>
</li>
<li>每个表必须有一个Primary Key栏位，该栏位的命名规则是&lt;tablename&gt;_id。</li>
</ul>
<p>2. 打开ADempiere客户端，使用System/System帐号登录，选择System Administrator角色。这里以后简写为System/System Administrator。<br /><img src="http://images.cnitblog.com/blog/111826/201402/101610297966013.x-png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 打开Application Dictionary | Table and Column，新建c_mon记录：<br /><img src="http://images.cnitblog.com/blog/111826/201402/101631372602700.x-png" alt="" /></p>
<p>&nbsp;</p>
<p>4. 点击按钮Create Columns from DB，在弹出的窗口中选择Entity Type - User maintained，点击执行：<br /><img src="http://images.cnitblog.com/blog/111826/201402/101636574084837.x-png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201402/101637474971474.x-png" alt="" /><br />执行完毕后，可以在Column标签查询到新增的c_mon列：<br /><img src="http://images.cnitblog.com/blog/111826/201402/101641021191233.x-png" alt="" /></p>
<p>&nbsp;</p>
<p>5. 执行Application Dictionary | Window, Tab &amp; Field, 新建一条记录：<br /><img src="http://images.cnitblog.com/blog/111826/201402/111458131398261.x-png" alt="" /></p>
<p>切换到Access标签，检查一下权限是否合适：<br /><img src="http://images.cnitblog.com/blog/111826/201402/111459496614646.x-png" alt="" /></p>
<p>&nbsp;</p>
<p>6. 切换到Tab标签，新建一条记录：<br /><img src="http://images.cnitblog.com/blog/111826/201402/111515154693320.x-png" alt="" /><br />点击Create Fields按钮，ADempiere会自动依据Table信息建立字段资料：<br /><img src="http://images.cnitblog.com/blog/111826/201402/111517319439279.x-png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201402/111518018539187.x-png" alt="" /><br />自动创建的字段资料可以在Field标签中查询：<br /><img src="http://images.cnitblog.com/blog/111826/201402/111519299772611.x-png" alt="" /><br />切换到Field Sequence标签，这里可以调整字段的显示顺序：<br /><img src="http://images.cnitblog.com/blog/111826/201402/111531504318089.x-png" alt="" /><br />需要注意的一点是字段的名称，有些是小写，有些包含下划线。我们可以调整成更友好的格式：<br /><img src="http://images.cnitblog.com/blog/111826/201402/111540307541948.x-png" alt="" /></p>
<p>&nbsp;</p>
<p>7. 执行System Admin | General Rules | System Rules | Menu，新建一条记录：<br /><img src="http://images.cnitblog.com/blog/111826/201402/111547591368367.x-png" alt="" /><br /><br />8. 重新以GardenAdmin/GardenAdmin帐号登录ADempiere客户端，就应该可以看到Minutes Of Meeting这个菜单项：<br /><img src="http://images.cnitblog.com/blog/111826/201402/111552375612060.x-png" alt="" /><br />执行Minutes Of Meeting，打开先前创建的窗口，然后新建一条记录测试看看。<br /><img src="http://images.cnitblog.com/blog/111826/201402/111558166963469.x-png" alt="" /></p>]]></description></item><item><title>准备你的Adempiere开发环境（2）- 安装</title><link>http://www.cnblogs.com/eastson/archive/2014/02/10/3542570.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 10 Feb 2014 07:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/02/10/3542570.html</guid><description><![CDATA[<p>1. 用pgAdmin III创建用户adempiere/adempiere：<br /><img src="http://images.cnitblog.com/blog/111826/201402/101122287944703.x-png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201402/101122387351641.x-png" alt="" /><br />2. 创建adempiere360数据库：<br /><img src="http://images.cnitblog.com/blog/111826/201402/101123049132403.x-png" alt="" /><br />3. 导入&lt;ADEMPIERE_HOME&gt;\data\Adempiere_pg.dmp数据：</p>
<div class="cnblogs_code">
<pre>psql -d adempiere360 -U adempiere -c <span style="color: #800000;">"</span><span style="color: #800000;">drop schema sqlj cascade</span><span style="color: #800000;">"</span><span style="color: #000000;">
psql </span>-d adempiere360 -U adempiere -f Adempiere_pg.dmp</pre>
</div>
<p>4. 执行&lt;ADEMPIERE_HOME&gt;\RUN_setup.bat安装：<br /><img src="http://images.cnitblog.com/blog/111826/201402/101351502001598.x-png" alt="" /><br />5. 执行&lt;ADEMPIERE_HOME&gt;\utils\RUN_Server2.bat：<br /><img src="http://images.cnitblog.com/blog/111826/201402/101508014387369.x-png" alt="" /><br />6. 打开客户端，检查是否安装成功？<br /><img src="http://images.cnitblog.com/blog/111826/201402/101514237129223.x-png" alt="" /></p>]]></description></item><item><title>准备你的Adempiere开发环境（1）- 编译</title><link>http://www.cnblogs.com/eastson/archive/2014/01/22/3528330.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 21 Jan 2014 23:57:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/01/22/3528330.html</guid><description><![CDATA[<p><span style="font-size: 14px;">1. 安装JDK 1.6.</span></p>
<p><span style="font-size: 14px;">2. 安装<span style="line-height: 19px; text-transform: none; background-color: #ffffff; font-variant: normal; font-style: normal; text-indent: 0px; display: inline !important; font-family: sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; font-weight: normal; word-spacing: 0px; -webkit-text-stroke-width: 0px;">Eclipse IDE for Java EE Developers。</span></span></p>
<p><span style="text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 14px/19px sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;">3. 导入adempire-360lts：<br /><img src="http://images.cnitblog.com/blog/111826/201401/211427502038.x-png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201401/211427583919.x-png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201401/211428086561.x-png" alt="" /><br /></span></p>
<p><span style="text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 14px/19px sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;">4. 关闭adempiere-360lts的Buid Autmatically选项：<br /><img src="http://images.cnitblog.com/blog/111826/201401/211439517348.x-png" alt="" /><br /><br /></span></p>
<p><span style="text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 14px/19px sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;">5. 为base、client、install的build.xml的JAVAC增加encoding="utf-8"属性：<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">javac </span><span style="color: #ff0000;">target</span><span style="color: #0000ff;">="1.6"</span><span style="color: #ff0000;"> encoding</span><span style="color: #0000ff;">="UTF-8"</span></pre>
</div>
<p><span style="text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 14px/19px sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;">6. 安装Ant，执行utils_dev\build.xml，或者执行utils_dev\RUN_build.bat也可以：<br /><img src="http://images.cnitblog.com/blog/111826/201401/220753271947.x-png" alt="" /><br /></span></p>
<p><span style="text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 14px/19px sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;">7. 检视编译结果，最终生成的文件都在adempiere目录下：<br /><img src="http://images.cnitblog.com/blog/111826/201401/220753361163.x-png" alt="" /><br /></span></p>
<p>&nbsp;</p>
<p><span style="text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 14px/19px sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;">参考：<br /></span><a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/archive/2012/09/04/2669969.html">编译Adempiere</a>&nbsp;<br /><a href="http://www.adempiere.com/index.php?title=ZH/Create_your_ADempiere_development_environment&amp;oldid=37244"><span class="mw-headline">准备你的开发环境</span></a></p>]]></description></item><item><title>Java环境变量设置辅助工具</title><link>http://www.cnblogs.com/eastson/archive/2014/01/21/3528119.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 21 Jan 2014 03:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/01/21/3528119.html</guid><description><![CDATA[<p><span style="text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 14px/21px tahoma, helvetica, arial; white-space: normal; float: none; letter-spacing: normal; color: #454545; word-spacing: 0px; -webkit-text-stroke-width: 0px;">安装完JDK之后，很容易忘了设置系统的环境变。最近发现一个设置JDK的小工具，非常简单，推荐给大家</span><span style="text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 14px/21px tahoma, helvetica, arial; white-space: normal; float: none; letter-spacing: normal; color: #454545; word-spacing: 0px; -webkit-text-stroke-width: 0px;">：<br /></span></p>
<p><span style="text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 14px/21px tahoma, helvetica, arial; white-space: normal; float: none; letter-spacing: normal; color: #454545; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><img src="http://images.cnitblog.com/blog/111826/201401/211354571729.x-png" alt="" /></span></p>
<p>&nbsp;&nbsp;</p>
<p style="text-transform: none; background-color: #ffffff; text-indent: 0px; margin: 0px; font: 14px/21px tahoma, helvetica, arial; white-space: normal; letter-spacing: normal; color: #454545; word-spacing: 0px; -webkit-text-stroke-width: 0px; padding: 0px;">下载地址：<a href="http://files.cnblogs.com/eastson/JavaPathSet.zip">http://files.cnblogs.com/eastson/JavaPathSet.zip</a>&nbsp;</p>]]></description></item><item><title>关于ERP的一些个人感想</title><link>http://www.cnblogs.com/eastson/archive/2014/01/09/3511923.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 09 Jan 2014 03:41:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2014/01/09/3511923.html</guid><description><![CDATA[<p>今天在看一篇关于ADempiere的实施记录《<a href="http://www.adempiere.com/ZH/Case-Study-01"><span class="mw-headline">机械装备制造业进销存实施案例</span></a>》，其中有一节讲《<a style="background-image: none; color: #5a3696; text-decoration: none;" href="http://www.adempiere.com/ZH/Case-Study-01-Requirement_Analysis">客户实施需求分析</a>》，个人有一些感想。<br /><br />以前有人问我，ERP有什么用？我的理解是：<br />第一点：用数据说话。<br />第二点：稽核。<br />第三点：提高效率，创造利润。</p>]]></description></item><item><title>SugarCRM如何检查控制器权限？</title><link>http://www.cnblogs.com/eastson/archive/2013/12/23/3487826.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 23 Dec 2013 09:34:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/12/23/3487826.html</guid><description><![CDATA[<p>SugarController定义了一个实例变量$hasAccess，布尔值，默认为true。该实例变量指示使用者是否有执行摸个action的权限：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">class</span><span style="color: #000000;"> SugarController{
    </span><span style="color: #008000;">/*</span><span style="color: #008000;">*
     * This can be set from the application to tell us whether we have authorization to
     * process the action. If this is set we will default to the noaccess view.
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #800080;">$hasAccess</span> = <span style="color: #0000ff;">true</span><span style="color: #000000;">;
    
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> process(){
        </span>......
    
        <span style="color: #008000;">//</span><span style="color: #008000;">check to ensure we have access to the module.</span>
        <span style="color: #0000ff;">if</span>(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">hasAccess){
            </span>... ...<span style="color: #000000;">
        }</span><span style="color: #0000ff;">else</span><span style="color: #000000;">{
            </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">no_access();
        }
    }
}</span></pre>
</div>
<p><br />$hasAccess的值在SugarApplication中设置，当SugarApplication::execute()执行时调用handleAccessControl()检查是否有授权：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">class</span><span style="color: #000000;"> SugarApplication
{
    </span><span style="color: #0000ff;">var</span> <span style="color: #800080;">$controller</span> = <span style="color: #0000ff;">null</span><span style="color: #000000;">;
    
    </span><span style="color: #008000;">/*</span><span style="color: #008000;">*
     * Perform execution of the application. This method is called from index2.php
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">function</span><span style="color: #000000;"> execute(){
        </span>......
        <span style="color: #800080;">$this</span>-&gt;controller = ControllerFactory::getController(<span style="color: #800080;">$module</span><span style="color: #000000;">);
        </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">preProcess();
        </span>......<span style="color: #000000;">
    }
    
    </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> preProcess(){
        </span>......
        <span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">handleAccessControl();
    }
  
    </span><span style="color: #008000;">/*</span><span style="color: #008000;">*
     * Handles everything related to authorization.
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">function</span><span style="color: #000000;"> handleAccessControl(){
        </span><span style="color: #0000ff;">if</span>(<span style="color: #800080;">$GLOBALS</span>['current_user']-&gt;<span style="color: #000000;">isDeveloperForAnyModule())
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
            
        </span><span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$_REQUEST</span>['action']) &amp;&amp; <span style="color: #800080;">$_REQUEST</span>['action']=="RetrieveEmail"<span style="color: #000000;">)
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
            
        </span><span style="color: #0000ff;">if</span> (!is_admin(<span style="color: #800080;">$GLOBALS</span>['current_user']) &amp;&amp; !<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$GLOBALS</span>['adminOnlyList'][<span style="color: #800080;">$this</span>-&gt;controller-&gt;<span style="color: #000000;">module])
            </span>&amp;&amp; !<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$GLOBALS</span>['adminOnlyList'][<span style="color: #800080;">$this</span>-&gt;controller-&gt;module]['all'<span style="color: #000000;">])
            </span>&amp;&amp; (<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$GLOBALS</span>['adminOnlyList'][<span style="color: #800080;">$this</span>-&gt;controller-&gt;module][<span style="color: #800080;">$this</span>-&gt;controller-&gt;action]) || <span style="color: #800080;">$GLOBALS</span>['adminOnlyList'][<span style="color: #800080;">$this</span>-&gt;controller-&gt;module][<span style="color: #800080;">$this</span>-&gt;controller-&gt;action] != 'allow'<span style="color: #000000;">)) {
            </span><span style="color: #800080;">$this</span>-&gt;controller-&gt;hasAccess = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
        }
    
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Bug 20916 - Special case for check ACL access rights for Subpanel QuickCreates</span>
        <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_POST</span>['action']) &amp;&amp; <span style="color: #800080;">$_POST</span>['action'] == 'SubpanelCreates'<span style="color: #000000;">) {
            </span><span style="color: #800080;">$actual_module</span> = <span style="color: #800080;">$_POST</span>['target_module'<span style="color: #000000;">];
            </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$GLOBALS</span>['modListHeader']) &amp;&amp; !<span style="color: #008080;">in_array</span>(<span style="color: #800080;">$actual_module</span>,<span style="color: #800080;">$GLOBALS</span>['modListHeader'<span style="color: #000000;">])) {
                </span><span style="color: #800080;">$this</span>-&gt;controller-&gt;hasAccess = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
            }
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
        }
    
    
        </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$GLOBALS</span>['current_user']) &amp;&amp; <span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$GLOBALS</span>['modListHeader'<span style="color: #000000;">]))
            </span><span style="color: #800080;">$GLOBALS</span>['modListHeader'] = query_module_access_list(<span style="color: #800080;">$GLOBALS</span>['current_user'<span style="color: #000000;">]);
    
        </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">in_array</span>(<span style="color: #800080;">$this</span>-&gt;controller-&gt;module, <span style="color: #800080;">$GLOBALS</span>['modInvisList']) &amp;&amp;<span style="color: #000000;">
          ((</span><span style="color: #008080;">in_array</span>('Activities', <span style="color: #800080;">$GLOBALS</span>['moduleList'])              &amp;&amp;
          <span style="color: #008080;">in_array</span>('Calendar',<span style="color: #800080;">$GLOBALS</span>['moduleList']))                 &amp;&amp;
          <span style="color: #008080;">in_array</span>(<span style="color: #800080;">$this</span>-&gt;controller-&gt;module, <span style="color: #800080;">$GLOBALS</span>['modInvisListActivities'<span style="color: #000000;">]))
          ){
            </span><span style="color: #800080;">$this</span>-&gt;controller-&gt;hasAccess = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
        }
    }
}</span></pre>
</div>
<p><br />重点看一下对$GLOBALS['adminOnlyList']的判断。$GLOBALS['adminOnlyList']在inclue/modules.php中设置，指示哪些模块只有是管理员才有权限执行：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> index.php
//    require_once('include/entryPoint.php')
//        require_once('include/modules.php');</span>

<span style="color: #800080;">$adminOnlyList</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span><span style="color: #008000;">//</span><span style="color: #008000;">module =&gt; list of actions  (all says all actions are admin only)
    //'Administration'=&gt;array('all'=&gt;1, 'SupportPortal'=&gt;'allow'),</span>
    'Dropdown'=&gt;<span style="color: #0000ff;">array</span>('all'=&gt;1),
    'Dynamic'=&gt;<span style="color: #0000ff;">array</span>('all'=&gt;1),
    'DynamicFields'=&gt;<span style="color: #0000ff;">array</span>('all'=&gt;1),
    'Currencies'=&gt;<span style="color: #0000ff;">array</span>('all'=&gt;1),
    'EditCustomFields'=&gt;<span style="color: #0000ff;">array</span>('all'=&gt;1),
    'FieldsMetaData'=&gt;<span style="color: #0000ff;">array</span>('all'=&gt;1),
    'LabelEditor'=&gt;<span style="color: #0000ff;">array</span>('all'=&gt;1),
    'ACL'=&gt;<span style="color: #0000ff;">array</span>('all'=&gt;1),
    'ACLActions'=&gt;<span style="color: #0000ff;">array</span>('all'=&gt;1),
    'ACLRoles'=&gt;<span style="color: #0000ff;">array</span>('all'=&gt;1),
    'UpgradeWizard' =&gt; <span style="color: #0000ff;">array</span>('all' =&gt; 1),
    'Studio' =&gt; <span style="color: #0000ff;">array</span>('all' =&gt; 1),
    'Schedulers' =&gt; <span style="color: #0000ff;">array</span>('all' =&gt; 1),<span style="color: #000000;">
);</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>SugarCE问题点记录</title><link>http://www.cnblogs.com/eastson/archive/2013/12/23/3483584.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 23 Dec 2013 01:24:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/12/23/3483584.html</guid><description><![CDATA[<p><strong>问：如何获取module参数？如果module参数不存在，如何处理？</strong><br />答：首先检查$_REQUEST['module']，然后再检查$sugar_config['default_module']是否有设置，如果都没有则用SugarApplication类的实例变量$default_module(默认为Home)。这些在SugarApplication::execute()函数的开头进行处理：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$sugar_config</span>['default_module'<span style="color: #000000;">]))
    </span><span style="color: #800080;">$this</span>-&gt;default_module = <span style="color: #800080;">$sugar_config</span>['default_module'<span style="color: #000000;">];
</span><span style="color: #800080;">$module</span> = <span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">default_module;
</span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$_REQUEST</span>['module'<span style="color: #000000;">]))
    </span><span style="color: #800080;">$module</span> = <span style="color: #800080;">$_REQUEST</span>['module'];</pre>
</div>
<p>&nbsp;</p>
<p><strong>问：获得module后，会去创建控制器类，在哪里找到该类？</strong><br />答：ControllerFactory::getController($module)函数负责创建控制器类：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> getController(<span style="color: #800080;">$module</span><span style="color: #000000;">) {
    </span><span style="color: #800080;">$class</span> = <span style="color: #008080;">ucfirst</span>(<span style="color: #800080;">$module</span>).'Controller'<span style="color: #000000;">;
    </span><span style="color: #800080;">$customClass</span> = 'Custom' . <span style="color: #800080;">$class</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">if </span>(<span style="color: #008080;">file_exists</span>('custom/modules/'.<span style="color: #800080;">$module</span>.'/controller.php'<span style="color: #000000;">)){
        </span><span style="color: #800080;">$customClass</span> = 'Custom' . <span style="color: #800080;">$class</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">require_once</span>('custom/modules/'.<span style="color: #800080;">$module</span>.'/controller.php'<span style="color: #000000;">);
        </span><span style="color: #0000ff;">if </span>(<span style="color: #008080;">class_exists</span>(<span style="color: #800080;">$customClass</span><span style="color: #000000;">)) {
            </span><span style="color: #800080;">$controller</span> = <span style="color: #0000ff;">new</span> <span style="color: #800080;">$customClass</span><span style="color: #000000;">();
        } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if </span>(<span style="color: #008080;">class_exists</span>(<span style="color: #800080;">$class</span><span style="color: #000000;">)) {
            </span><span style="color: #800080;">$controller</span> = <span style="color: #0000ff;">new</span> <span style="color: #800080;">$class</span><span style="color: #000000;">();
        }
    } </span><span style="color: #0000ff;">elseif </span>(<span style="color: #008080;">file_exists</span>('modules/'.<span style="color: #800080;">$module</span>.'/controller.php'<span style="color: #000000;">)) {
        </span><span style="color: #0000ff;">require_once</span>('modules/'.<span style="color: #800080;">$module</span>.'/controller.php'<span style="color: #000000;">);
        </span><span style="color: #0000ff;">if </span>(<span style="color: #008080;">class_exists</span>(<span style="color: #800080;">$customClass</span><span style="color: #000000;">)) {
            </span><span style="color: #800080;">$controller</span> = <span style="color: #0000ff;">new</span> <span style="color: #800080;">$customClass</span><span style="color: #000000;">();
        } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if </span>(<span style="color: #008080;">class_exists</span>(<span style="color: #800080;">$class</span><span style="color: #000000;">)) {
            </span><span style="color: #800080;">$controller</span> = <span style="color: #0000ff;">new</span> <span style="color: #800080;">$class</span><span style="color: #000000;">();
        }
    } </span><span style="color: #0000ff;">else </span><span style="color: #000000;">{
        </span><span style="color: #0000ff;">if </span>(<span style="color: #008080;">file_exists</span>('custom/include/MVC/Controller/SugarController.php'<span style="color: #000000;">)) {
            </span><span style="color: #0000ff;">require_once</span>('custom/include/MVC/Controller/SugarController.php'<span style="color: #000000;">);
        }
        </span><span style="color: #0000ff;">if </span>(<span style="color: #008080;">class_exists</span>('CustomSugarController'<span style="color: #000000;">)){
            </span><span style="color: #800080;">$controller</span> = <span style="color: #0000ff;">new</span><span style="color: #000000;"> CustomSugarController();
        } </span><span style="color: #0000ff;">else </span><span style="color: #000000;">{
            </span><span style="color: #800080;">$controller</span> = <span style="color: #0000ff;">new</span><span style="color: #000000;"> SugarController();
        }
    }
    </span><span style="color: #008000;">//</span><span style="color: #008000;">setup the controller</span>
    <span style="color: #800080;">$controller</span>-&gt;setup(<span style="color: #800080;">$module</span><span style="color: #000000;">);
}</span></pre>
</div>
<p>从代码分析，ControllerFactory按照下列顺序寻找控制器类：</p>
<ul>
<li>custom/modules/{module}/controller.php，检查Custom{Module}Controller类是否存在，若不存在，再检查{Module}Controller类是否存在。</li>
<li>modules/{module}/controller.php，检查Custom{Module}Controller类是否存在，若不存在，再检查{Module}Controller类是否存在。</li>
<li>custom/include/MVC/Controller/SugarController.php，检查CustomSugarController类是否存在，若不存在，再检查SugarController类是否存在。</li>
<li>include/MVC/Controller/SugarController.php，检查CustomSugarController类是否存在，若不存在，再检查SugarController类是否存在。</li>
</ul>
<p>&nbsp;</p>
<p><strong>问：如何获取action参数？如果action参数不存在，如何处理？</strong><br />答：action参数对应到SugarController的$action实例变量，该实例变量默认值为index:</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">class</span><span style="color: #000000;"> SugarController{
    </span><span style="color: #008000;">/*</span><span style="color: #008000;">*
     * The name of the current action.
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #800080;">$action</span> = 'index'<span style="color: #000000;">;
}</span></pre>
</div>
<p>当控制器setup()时调用loadPropertiesFromRequest()获取$_REQUEST中的action参数:</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span> setup(<span style="color: #800080;">$module</span> = ''<span style="color: #000000;">){
    </span>......
    <span style="color: #008000;">//</span><span style="color: #008000;">set properties on the controller from the $_REQUEST</span>
    <span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">loadPropertiesFromRequest();
    </span><span style="color: #008000;">//</span><span style="color: #008000;">load the mapping files</span>
    <span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">loadMappings();
}

</span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> loadPropertiesFromRequest(){
    </span><span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$_REQUEST</span>['action'<span style="color: #000000;">]))
      </span><span style="color: #800080;">$this</span>-&gt;action = <span style="color: #800080;">$_REQUEST</span>['action'<span style="color: #000000;">];
    </span><span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$_REQUEST</span>['record'<span style="color: #000000;">]))
      </span><span style="color: #800080;">$this</span>-&gt;record = <span style="color: #800080;">$_REQUEST</span>['record'<span style="color: #000000;">];
    </span><span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$_REQUEST</span>['view'<span style="color: #000000;">]))
      </span><span style="color: #800080;">$this</span>-&gt;view = <span style="color: #800080;">$_REQUEST</span>['view'<span style="color: #000000;">];
    </span><span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$_REQUEST</span>['return_module'<span style="color: #000000;">]))
      </span><span style="color: #800080;">$this</span>-&gt;return_module = <span style="color: #800080;">$_REQUEST</span>['return_module'<span style="color: #000000;">];
    </span><span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$_REQUEST</span>['return_action'<span style="color: #000000;">]))
      </span><span style="color: #800080;">$this</span>-&gt;return_action = <span style="color: #800080;">$_REQUEST</span>['return_action'<span style="color: #000000;">];
    </span><span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$_REQUEST</span>['return_id'<span style="color: #000000;">]))
      </span><span style="color: #800080;">$this</span>-&gt;return_id = <span style="color: #800080;">$_REQUEST</span>['return_id'<span style="color: #000000;">];
}</span></pre>
</div>
<p>也就是说，action参数首选会从$_REQUEST['action']获取，如果没有设置$_REQUEST['action']则使用SugarController的默认值index。<br /><br /><strong>问：SugarController中如何装入Mapping文件？</strong><br />答：控制器中有一个loadMapping()函数用来装入Mapping文件。该函数在控制器的setup()函数中被调用：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span> setup(<span style="color: #800080;">$module</span> = ''<span style="color: #000000;">){
    </span>......
    <span style="color: #008000;">//</span><span style="color: #008000;">load the mapping files</span>
    <span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">loadMappings();
}

</span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> loadMappings(){
    </span><span style="color: #800080;">$this</span>-&gt;loadMapping('action_view_map'<span style="color: #000000;">);
    </span><span style="color: #800080;">$this</span>-&gt;loadMapping('action_file_map'<span style="color: #000000;">);
    </span><span style="color: #800080;">$this</span>-&gt;loadMapping('action_remap', <span style="color: #0000ff;">true</span><span style="color: #000000;">);
}</span></pre>
</div>
<p>控制器允许会从多个地方寻找Mapping文件：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">function</span> loadMapping(<span style="color: #800080;">$var</span>, <span style="color: #800080;">$merge</span> = <span style="color: #0000ff;">false</span><span style="color: #000000;">){
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$merge</span> &amp;&amp; !<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$this</span>-&gt;<span style="color: #800080;">$var</span><span style="color: #000000;">)){
      $</span><span style="color: #800080;">$var</span> = <span style="color: #800080;">$this</span>-&gt;<span style="color: #800080;">$var</span><span style="color: #000000;">;
    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
      $</span><span style="color: #800080;">$var</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
    }
    </span><span style="color: #0000ff;">if</span>(<span style="color: #008080;">file_exists</span>('include/MVC/Controller/'. <span style="color: #800080;">$var</span> . '.php'<span style="color: #000000;">)){
      </span><span style="color: #0000ff;">require</span>('include/MVC/Controller/'. <span style="color: #800080;">$var</span> . '.php'<span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">if</span>(<span style="color: #008080;">file_exists</span>('modules/'.<span style="color: #800080;">$this</span>-&gt;module.'/'. <span style="color: #800080;">$var</span> . '.php'<span style="color: #000000;">)){
      </span><span style="color: #0000ff;">require</span>('modules/'.<span style="color: #800080;">$this</span>-&gt;module.'/'. <span style="color: #800080;">$var</span> . '.php'<span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">if</span>(<span style="color: #008080;">file_exists</span>('custom/modules/'.<span style="color: #800080;">$this</span>-&gt;module.'/'. <span style="color: #800080;">$var</span> . '.php'<span style="color: #000000;">)){
      </span><span style="color: #0000ff;">require</span>('custom/modules/'.<span style="color: #800080;">$this</span>-&gt;module.'/'. <span style="color: #800080;">$var</span> . '.php'<span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">if</span>(<span style="color: #008080;">file_exists</span>('custom/include/MVC/Controller/'. <span style="color: #800080;">$var</span> . '.php'<span style="color: #000000;">)){
      </span><span style="color: #0000ff;">require</span>('custom/include/MVC/Controller/'. <span style="color: #800080;">$var</span> . '.php'<span style="color: #000000;">);
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> entry_point_registry -&gt; EntryPointRegistry</span>
    <span style="color: #800080;">$varname</span> = <span style="color: #008080;">str_replace</span>(" ","",<span style="color: #008080;">ucwords</span>(<span style="color: #008080;">str_replace</span>("_"," ", <span style="color: #800080;">$var</span><span style="color: #000000;">)));
    </span><span style="color: #0000ff;">if</span>(<span style="color: #008080;">file_exists</span>("custom/application/Ext/<span style="color: #800080;">$varname</span>/<span style="color: #800080;">$var</span>.ext.php"<span style="color: #000000;">)){
      </span><span style="color: #0000ff;">require</span>("custom/application/Ext/<span style="color: #800080;">$varname</span>/<span style="color: #800080;">$var</span>.ext.php"<span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">if</span>(<span style="color: #008080;">file_exists</span>("custom/modules/{<span style="color: #800080;">$this</span>-&gt;module}/Ext/<span style="color: #800080;">$varname</span>/<span style="color: #800080;">$var</span>.ext.php"<span style="color: #000000;">)){
      </span><span style="color: #0000ff;">require</span>("custom/modules/{<span style="color: #800080;">$this</span>-&gt;module}/Ext/<span style="color: #800080;">$varname</span>/<span style="color: #800080;">$var</span>.ext.php"<span style="color: #000000;">);
    }

    </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #800080;">$var</span> = $<span style="color: #800080;">$var</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>loadMapping()函数在最后会将装入的Mapping映射为控制器的实例变量。<br /><br /><strong>问：控制器中如何实现URL重定向？</strong><br />答：SugarController中定义了一个实例变量redirect_url：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">class</span><span style="color: #000000;"> SugarController {
    </span><span style="color: #008000;">/*</span><span style="color: #008000;">*
     * url to redirect to
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #800080;">$redirect_url</span> = ''<span style="color: #000000;">;
}</span></pre>
</div>
<p>在Action方法中设置$redirect_url就可以实现URL重定向。例如：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> action_redirect() {
    </span><span style="color: #800080;">$this</span>-&gt;redirect_url = 'http://www.baidu.com/'<span style="color: #000000;">;
</span>|</pre>
</div>
<p>这是因为SugarController使用execute()函数处理请求，在该函数末尾有检查$redirect_url是否有设值。若有设值，则调用SugarApplication::redirect()跳转：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">final</span> <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> execute() {
    </span><span style="color: #0000ff;">try</span><span style="color: #000000;">
    {
        </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">process();
        </span><span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">view))
        {
            </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">processView();
        }
        </span><span style="color: #0000ff;">elseif</span>(!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">redirect_url))
        {
              </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">redirect();
        }
    }
    </span><span style="color: #0000ff;">catch</span> (<span style="color: #0000ff;">Exception</span> <span style="color: #800080;">$e</span><span style="color: #000000;">)
    {
        </span><span style="color: #800080;">$this</span>-&gt;handleException(<span style="color: #800080;">$e</span><span style="color: #000000;">);
    }
}

</span><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> redirect(){
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">redirect_url))
        SugarApplication</span>::redirect(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">redirect_url);
}</span></pre>
</div>
<p>如果不在控制器中要实现URL重定向，就应该用SugarApplication::redirect()函数。<br /><br /><strong>问：控制器如何自动读取Bean?</strong></p>
<p>答：如果请求参数中有record存在，则SugarController会自动读取后台数据到实例变量$bean中。首先控制器要从$_REQUEST获取record参数到$this-&gt;record：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span> setup(<span style="color: #800080;">$module</span> = ''<span style="color: #000000;">){
    </span>......
    <span style="color: #008000;">//</span><span style="color: #008000;">set properties on the controller from the $_REQUEST</span>
    <span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">loadPropertiesFromRequest();
}

</span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> loadPropertiesFromRequest(){
    </span>......
    <span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$_REQUEST</span>['record'<span style="color: #000000;">]))
      </span><span style="color: #800080;">$this</span>-&gt;record = <span style="color: #800080;">$_REQUEST</span>['record'<span style="color: #000000;">];
}</span></pre>
</div>
<p>然后，控制器在处理请求时通过在process()函数中调用loadBean()实现读取Bean：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> process(){
    </span>......
    <span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">loadBean();
}

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> loadBean()
{
    </span><span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$GLOBALS</span>['beanList'][<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">module])){
        </span><span style="color: #800080;">$class</span> = <span style="color: #800080;">$GLOBALS</span>['beanList'][<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">module];
        </span><span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$GLOBALS</span>['beanFiles'][<span style="color: #800080;">$class</span><span style="color: #000000;">])){
            </span><span style="color: #0000ff;">require_once</span>(<span style="color: #800080;">$GLOBALS</span>['beanFiles'][<span style="color: #800080;">$class</span><span style="color: #000000;">]);
            </span><span style="color: #800080;">$this</span>-&gt;bean = <span style="color: #0000ff;">new</span> <span style="color: #800080;">$class</span><span style="color: #000000;">();
            </span><span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">record)){
                </span><span style="color: #800080;">$this</span>-&gt;bean-&gt;retrieve(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">record);
                </span><span style="color: #0000ff;">if</span>(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">bean)
                    </span><span style="color: #800080;">$GLOBALS</span>['FOCUS'] = <span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">bean;
            }
        }
    }
}</span></pre>
</div>
<p>从loadBean()代码可以发现，要自动装入Bean需要定义$GLOBALS['beanList']和$GLOBALS['beanFiles']。默认的定义在include/modules.php：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> index.php
//    require_once('include/entryPoint.php')
//        require_once('include/modules.php');</span>

<span style="color: #800080;">$beanList</span>['Leads'] = 'Lead'<span style="color: #000000;">;
</span><span style="color: #800080;">$beanFiles</span>['Lead'] = 'modules/Leads/Lead.php';</pre>
</div>
<p>&nbsp;</p>
<p>问：控制器如何处理action_remap？<br />问：控制器如何处理action_file_map和action_view_map？<br />问：控制器如何检查用户请求的权限？例如谁人可以执行数据库的备份和恢复处理？<br />&nbsp;</p>]]></description></item><item><title>代码自动生成工具 MyGeneration</title><link>http://www.cnblogs.com/eastson/archive/2013/12/09/3465004.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 09 Dec 2013 03:29:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/12/09/3465004.html</guid><description><![CDATA[<p><a href="http://www.mygenerationsoftware.com/">MyGeneration</a> 是一款不错的ORM和代码生成工具，它基于模板（Template）工作，安装好MyGeneration 后自带了很多模板，并且提供在线模板库提供模板升级和允许用户自定义模板。MyGeneration 的模板可以用C#, VB.NET, JScript, and VBScript编写。使用MyGeneration 可以为Gentle.NET, Opf3,&nbsp;<a href="http://www.oschina.net/p/nhibernate">NHibernate</a>等生成ORM架构或ORM文件，为多种数据库生成存储过程，为.Net项目生成C#、VB.NET 程序代码，PHP、HTML等页面代码。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201312/09112825-184037750d8243d4b1fb15067109fb4c.jpg" alt="" /></p>
<p>MyGeneration 具有以下的特性：<br />1.支持多种数据库<br />Microsoft SQLServer<br />Oracle&nbsp;<br />IBM DB2&nbsp;<br />Microsoft Access<br />MySQL&nbsp;<br />PostgreSQL&nbsp;<br />Firebird&nbsp;<br />Interbase&nbsp;<br />SQLite&nbsp;<br />VistaDB&nbsp;<br />Advantage&nbsp;<br />IBM iSeries&nbsp;<br />CSV &amp; other delimited text files<br />2.支持重用和include文件<br />3.Ability to single step through all templates regardless of language.&nbsp;<br />4.支持为模板输入自定义用户界面，包括winForm程序。<br />5.提供cmd命令行工具(ZuesCmd.Exe)和GUI(Project)工具.&nbsp;<br />6.提供强大的原数据 API（MyMeta）访问你的数据库里的原数据。<br />7.提供Unicode、语法高亮、查找、替换等功能的强大文本编辑器。&nbsp;<br />8.支持插件(Intrinsic Objects)扩展模板的功能。&nbsp;<br />9.支持MyMeta meta-data providers插件&nbsp;<br />10.Dockable windows.<br />11.提供动态的可重写的数据类型映射。从数据库类型到MyGeneration的数据提供者类型到代码类型。<br />12.支持用户自定义原数据。<br />13.支持表、字段名、参数等重命名。<br />14.可以使用Gentle.NET, Opf3, NHibernate的模板。<br />15.支持在线帮助、模板升级和论坛。</p>]]></description></item><item><title>网页会计系统 FrontAccounting</title><link>http://www.cnblogs.com/eastson/archive/2013/12/05/3459236.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 05 Dec 2013 03:48:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/12/05/3459236.html</guid><description><![CDATA[<p><a href="http://frontaccounting.com/">FrontAccounting (FA)</a>是一个针对企业ERP供应链的网页会计系统。FA 允許多使用者、多語系和多國貨幣。 FA允许多使用者、多语系和多国货币。FA接续OpenAccounting (OA)这套已停止开发软体的发展，并有更进一步的进展，OA则是由WebERP衍生出来的。</p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201312/05114702-e56cf260a1fa4261a2aa96a7a8103102.png" alt="" /></span></p>]]></description></item><item><title>MiniHttpServer</title><link>http://www.cnblogs.com/eastson/archive/2013/11/30/3450629.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 30 Nov 2013 01:01:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/11/30/3450629.html</guid><description><![CDATA[<p>Mini HTTP Server which can be embed in EXE,&nbsp;Writen in C#(.net framework 2.0).</p>
<p><span style="font-size: 14px; line-height: 1.5;">HTTP request dispatch/route, you can register the handlers for a specific url. Url match using start with in order, so that register the more specific in first. For example:</span><a class="anchor" name="what-we-provide" href="https://github.com/jatsz/MiniHttpServer#what-we-provide"></a></p>
<div class="highlight highlight-c">
<div class="cnblogs_code">
<pre>server.RegisterHandler(<span style="color: #800000;">"</span><span style="color: #800000;">/index/1</span><span style="color: #800000;">"</span><span style="color: #000000;">, FirstIndexHandler);   
server.RegisterHandler(</span><span style="color: #800000;">"</span><span style="color: #800000;">/index</span><span style="color: #800000;">"</span>, GeneralIndexHandler);</pre>
</div>
<p><span style="line-height: 1.5;">When url request be handled, stop propagation. That's when we requst the "/index/1", and it's handle already. GeneralIndexHandler will NOT execute.</span></p>
<h3>Usage</h3>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">using</span><span style="color: #000000;"> Jatsz.MiniHttpServer;


MiniHttpServer server </span>= <span style="color: #0000ff;">new</span> MiniHttpServer(<span style="color: #800080;">8081</span>); <span style="color: #008000;">//</span><span style="color: #008000;">start http server on port of 8081

</span><span style="color: #008000;">//</span><span style="color: #008000;">register the handler(s) and start the server</span>
server.RegisterHandler(<span style="color: #800000;">"</span><span style="color: #800000;">/index</span><span style="color: #800000;">"</span><span style="color: #000000;">, IndexHandler);
server.Start();

</span><span style="color: #0000ff;">void</span> IndexHandler(<span style="color: #0000ff;">object</span><span style="color: #000000;"> sender, ContextEventArgs e)
{
    </span><span style="color: #0000ff;">string</span> responseString = <span style="color: #0000ff;">string</span>.Format(<span style="color: #800000;">"</span><span style="color: #800000;">&lt;HTML&gt;&lt;BODY&gt; Hello world! {0}&lt;/BODY&gt;&lt;/HTML&gt;</span><span style="color: #800000;">"</span><span style="color: #000000;">, DateTime.Now);

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Obtain a response object.</span>
    HttpListenerResponse response =<span style="color: #000000;"> e.Context.Response;
    </span><span style="color: #0000ff;">byte</span>[] buffer =<span style="color: #000000;"> System.Text.Encoding.UTF8.GetBytes(responseString);
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Get a response stream and write the response to it.</span>
    response.ContentLength64 =<span style="color: #000000;"> buffer.Length;
    System.IO.Stream output </span>=<span style="color: #000000;"> response.OutputStream;
    output.Write(buffer, </span><span style="color: #800080;">0</span><span style="color: #000000;">, buffer.Length);
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> You must close the output stream.</span>
<span style="color: #000000;">    output.Close();
}</span></pre>
</div>
<p><strong>项目主页：<a href="https://github.com/jatsz/MiniHttpServer">https://github.com/jatsz/MiniHttpServer</a><a href="http://www.mygenerationsoftware.com/portal/default.aspx"><br /></a></strong></p>
<p><strong>参考文章：</strong><a href="http://www.codeproject.com/Articles/25050/Embedded-NET-HTTP-Server">Embedded .NET HTTP Server</a></p>

</div>]]></description></item><item><title>强大的代码生成工具 MyGeneration</title><link>http://www.cnblogs.com/eastson/archive/2013/11/29/3449974.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 29 Nov 2013 09:06:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/11/29/3449974.html</guid><description><![CDATA[<p>MyGeneration是一个功能很强大的代码生成工具。通过编写包含各种类型脚本（C#,VB.Net,JScript,VBScript）的模板，通过数据库的表内容，生成你需要的各种代码。你可以用它来生成ORM的实体类，存储过程，SQL语句等等。我甚至用它来生成Asp.Net的页面（呵呵，我很懒）。</p>
<p>MyGeneration提供了强大的在线模版库，你可以通过访问其网站或者使用Template Browser中的在线模版功能按钮寻找你需要的模版。当然你也可以根据需要自己写模板。</p>
<p><strong>项目主页：<a href="http://www.mygenerationsoftware.com/portal/default.aspx">http://www.mygenerationsoftware.com/portal/default.aspx</a><a href="http://www.castleproject.org/"><br /></a></strong></p>]]></description></item><item><title>NET框架 Castle</title><link>http://www.cnblogs.com/eastson/archive/2013/11/29/3449963.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 29 Nov 2013 09:03:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/11/29/3449963.html</guid><description><![CDATA[<p><img src="http://images.cnitblog.com/blog/111826/201311/29170215-64d02d5da5f842ac80d872b24e19983f.gif" alt="" /></p>
<p><span>Castle是针对.NET平台下的一个非常优秀的开源项目，从数据访问框架 ORM到依赖注入容器，再到WEB层的MVC框架、AOP，基本包括了整个开发过程中的所有东西，为我们快速的构建企业级的应用程序提供了很好的服务。</span></p>
<p><span><strong>项目主页：<a href="http://www.castleproject.org/">http://www.castleproject.org/</a></strong></span></p>]]></description></item><item><title>XML-RPC.NET</title><link>http://www.cnblogs.com/eastson/archive/2013/11/29/3449945.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 29 Nov 2013 09:00:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/11/29/3449945.html</guid><description><![CDATA[<p>XML-RPC.NET 是一个 .NET 的客户端服务器的基于 XML-RPC 远程过程调用的框架。</p>
<p>示例代码：</p>
<div class="cnblogs_code">
<pre>[XmlRpcUrl(<span style="color: #800000;">"</span><span style="color: #800000;">http://betty.userland.com/RPC2</span><span style="color: #800000;">"</span><span style="color: #000000;">)]
</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">interface</span><span style="color: #000000;"> IStateName : IXmlRpcProxy
{
    [XmlRpcMethod(</span><span style="color: #800000;">"</span><span style="color: #800000;">examples.getStateName</span><span style="color: #800000;">"</span><span style="color: #000000;">)]
    </span><span style="color: #0000ff;">string</span> GetStateName(<span style="color: #0000ff;">int</span><span style="color: #000000;"> stateNumber); 
}
IStateName proxy </span>= XmlRpcProxyGen.Create&lt;IStateName&gt;<span style="color: #000000;">();
</span><span style="color: #0000ff;">string</span> stateName = proxy.GetStateName(<span style="color: #800080;">41</span>);</pre>
</div>
<p><strong>项目主页：<a href="http://xml-rpc.net/">http://xml-rpc.net/</a></strong><a href="http://www.open-open.com/lib/view/home/1347781824427" target="_blank"><br /></a></p>]]></description></item><item><title>Windows 2008 R2有效激活方法【转】</title><link>http://www.cnblogs.com/eastson/archive/2013/11/18/3429746.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 18 Nov 2013 08:42:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/11/18/3429746.html</guid><description><![CDATA[<p>原文地址：<a href="http://jingyan.baidu.com/article/851fbc3707096e3e1f15ab33.html">http://jingyan.baidu.com/article/851fbc3707096e3e1f15ab33.html</a></p>
<p>&nbsp;</p>
<div class="exp-content-block">
<div class="exp-content-body">
<div class="exp-content-listblock">
<div class="content-listblock-text">
<p>装了windows server 2008之后才发现，它与windows server 2008 R2有很大的差别，总之R2是更新的版本，还是建议直接装R2（注意R2和sp2是完全两码事）。&nbsp;</p>
<h3>KMS激活指南</h3>
<p>本服务器根据俄罗斯KMS服务器VMWARE架设，不受时间限制<br /><br />KMS激活支持的Windows版本：<br />Windows 2008, Windows 2008 R2 全系列产品<br />Vista, Windows 7的企业版和专业版，旗舰版无法KMS激活<br />以上的全语系、x86、x64、IA64版本均支持，具体请察看本页面下部的KEY和版本<br /><br />KMS激活注意事项：<br />如出现错误信息：0xC004F06C 则是系统时间不对，或者误差太大，请检查后重新尝试，系统日期时间必须正确！<br />0xC004F074 则是无法连接到KMS服务器，请收藏此帖查看更新后的IP！<br />出现计数器不足的提示，请过段时间在试，当Server连接数量超过5时，Client连接数量超过25即可激活。&nbsp;</p>
<h3>KMS客户端激活密匙</h3>
<p>Windows 7 Professional &ndash; slmgr.vbs -ipk FJ82H-XT6CR-J8D7P-XQJJ2-GPDD4<br />Windows 7 Professional N &ndash; slmgr.vbs -ipk MRPKT-YTG23-K7D7T-X2JMM-QY7MG<br />Windows 7 Enterprise &ndash; slmgr.vbs -ipk 33PXH-7Y6KF-2VJC9-XBBR8-HVTHH<br />Windows 7 Enterprise N &ndash; slmgr.vbs -ipk YDRBP-3D83W-TY26F-D46B2-XCKRJ<br />Windows 7 Enterprise E &ndash; slmgr.vbs -ipk C29WB-22CC8-VJ326-GHFJW-H9DH4<br />Windows Server 2008 R2 HPC Edition &ndash; slmgr.vbs -ipk FKJQ8-TMCVP-FRMR7-4WR42-3JCD7<br />Windows Server 2008 R2 Datacenter &ndash; slmgr.vbs -ipk 74YFP-3QFB3-KQT8W-PMXWJ-7M648<br />Windows Server 2008 R2 Enterprise &ndash; slmgr.vbs -ipk 489J6-VHDMP-X63PK-3K798-CPX3Y<br />Windows Server 2008 R2 for Itanium-Based Systems &ndash; slmgr.vbs -ipk GT63C-RJFQ3-4GMB6-BRFB9-CB83V<br />Windows Server 2008 R2 Standard &ndash; slmgr.vbs -ipk YC6KT-GKW9T-YTKYR-T4X34-R7VHC<br />Windows Web Server 2008 R2 &ndash; slmgr.vbs -ipk 6TPJF-RBVHG-WBW2R-86QPH-6RTM4<br />Windows Vista Business &ndash; slmgr.vbs -ipk YFKBB-PQJJV-G996G-VWGXY-2V3X8<br />Windows Vista Business N &ndash; slmgr.vbs -ipk HMBQG-8H2RH-C77VX-27R82-VMQBT<br />Windows Vista Enterprise &ndash; slmgr.vbs -ipk VKK3X-68KWM-X2YGT-QR4M6-4BWMV<br />Windows Vista Enterprise N &ndash; slmgr.vbs -ipk VTC42-BM838-43QHV-84HX6-XJXKV<br />Windows Server 2008 Datacenter &ndash; slmgr.vbs -ipk 7M67G-PC374-GR742-YH8V4-TCBY3<br />Windows Server 2008 Datacenter without Hyper-V &ndash; slmgr.vbs -ipk 22XQ2-VRXRG-P8D42-K34TD-G3QQC<br />Windows Server 2008 for Itanium-Based Systems &ndash; slmgr.vbs -ipk 4DWFP-JF3DJ-B7DTH-78FJB-PDRHK<br />Windows Server 2008 Enterprise &ndash; slmgr.vbs -ipk YQGMW-MPWTJ-34KDK-48M3W-X4Q6V<br />Windows Server 2008 Enterprise without Hyper-V &ndash; slmgr.vbs -ipk 39BXF-X8Q23-P2WWT-38T2F-G3FPG<br />Windows Server 2008 Standard &ndash; slmgr.vbs -ipk TM24T-X9RMF-VWXK6-X8JC9-BFGM2<br />Windows Server 2008 Standard without Hyper-V &ndash; slmgr.vbs -ipk W7VD6-7JFBR-RX26B-YKQ3Y-6FFFJ<br />Windows Web Server 2008 &ndash; slmgr.vbs -ipk WYR28-R7TFJ-3X2YQ-YCY4H-M249D</p>
<h3>方式一</h3>
<p>在管理员身份下运行的CMD<br />slmgr.vbs -skms 58.39.195.37 （设置激活服务器）服务器有地址如下（自己去试）:<br /><br />1: clubpchome.vicp.net<br />2: gamemu.vicp.net<br />3: 3344.vicp.net<br />4: 88.vicp.net<br />5: 1314.vicp.net<br />6: 7788.vicp.net<br />在激活页面输入本页面下面相对应版本的KEY，并点击在线激活即可</p>
<h3>方式二</h3>
<p>在管理员身份下运行的CMD执行下面的命令：<br />slmgr.vbs -ipk &lt;有效的客test户key&gt; （KEY请在下面查询，不在列表中的版本不支持，例如企业版的key：slmgr.vbs -ipk 33PXH<br /><br />-7Y6KF-2VJC9-XBBR8-HVTHH ）<br />slmgr.vbs -skms 58.39.195.37 （设置激活服务器）<br />slmgr.vbs -ato （激活Windows）<br />察看激活：<br /><br />slmgr.vbs -dlv （查询许可证信息，激活成功后显示 批量激活过期:180天，到期前请选择联网激活即可，或重新访问本页面查询激<br /><br />活信息）<br />如激活不能成功请检查系统日期时间是否正确，确认Windows版本及上述操作是否正确</p>
<h3>激活脚本</h3>
<p>如果没看明白的，请复制如下代码到文本文件里，制成.bat文件，在联网的情况下运行。序列号与服务器地址各位自己可以文章中找找.<br /><br />@echo off<br />color 0F<br />echo &nbsp;***********************************************************************<br />echo.<br />echo &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;即将win2008 r2激活 &ndash; BY KMS服务器VBS.NET.CN<br />echo &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(请确保本机已连接上互联网，否则不能激活）<br />echo.<br />echo &nbsp;***********************************************************************<br />pause<br />cscript %windir%\system32\slmgr.vbs -ipk 489J6-VHDMP-X63PK-3K798-CPX3Y<br />cscript %windir%\system32\slmgr.vbs -skms test.shanghaiit.com:1688<br />cscript %windir%\system32\slmgr.vbs -ato<br />cscript %windir%\system32\slmgr.vbs -dlv<br />echo &nbsp;***********************************************************************<br />echo. &nbsp;&nbsp;<br />echo &nbsp; &nbsp;激活成功！<br />echo.<br />echo &nbsp;***********************************************************************<br />pause</p>
</div>
</div>
</div>
</div>]]></description></item><item><title>lspci查看硬件信息时提示找不到命令</title><link>http://www.cnblogs.com/eastson/archive/2013/10/29/3393959.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 29 Oct 2013 03:10:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/29/3393959.html</guid><description><![CDATA[<p>系统环境：centos&nbsp;6.3&nbsp;X64&nbsp;<br /><span style="line-height: 1.5;">错误信息：<br /></span><span style="line-height: 1.5;">[root@localhost&nbsp;~]#&nbsp;lspci<br /></span><span style="line-height: 1.5;">-bash:&nbsp;lspci:&nbsp;command&nbsp;not&nbsp;found</span><span style="line-height: 1.5;">&nbsp;<br /></span><span style="line-height: 1.5;">问题原因：<br /></span><span style="line-height: 1.5;">这是因为没有安装pciutils包造成的。</span><span style="line-height: 1.5;">&nbsp;<br /></span><span style="line-height: 1.5;">解决办法：<br /></span><span style="line-height: 1.5;">#yun&nbsp;install&nbsp;pciutils<br /></span><span style="line-height: 1.5;"><br /></span><span style="line-height: 1.5;">PS：同样，如果&nbsp;lsusb&nbsp;时也提示找不到命令，那只要&nbsp;#</span><span style="line-height: 1.5;">yum&nbsp;install&nbsp;usbutils</span><span style="line-height: 1.5;">就可以了</span></p>]]></description></item><item><title>linux route命令使用</title><link>http://www.cnblogs.com/eastson/archive/2013/10/28/3392153.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 28 Oct 2013 03:58:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/28/3392153.html</guid><description><![CDATA[<p><strong>说明：</strong><span>route命令是打印和操作ip路由表</span><br /><strong>描述：</strong><span>route操作基于内核ip路由表，它的主要作用是创建一个静态路由让指定一个主 机或者一个网络通过一个网络接口，如eth0。当使用"add"或者"del"参数时，路由表被修改，如果没有参数，则显示路由表当前的内容。</span><br /><strong>参数说明：</strong><span>add:添加一条新路由。</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; del:删除一条路由。</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -net:目标地址是一个网络。</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -host:目标地址是一个主机。</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; netmask:当添加一个网络路由时，需要使用网络掩码。</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gw:路由数据包通过网关。注意，你指定的网关必须能够达到。</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; metric：设置路由跳数。</span><br /><strong>实例：</strong><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1、route add -net 192.168.2.0 netmask 255.255.255.0 dev eth0</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 添加一条到达192.168.2.0网络的路由，指定网络掩码为255.255.255.0,数据包通过网络接口eth0。</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2、route add -net 192.57.66.0 netmask 255.255.255.0 gw 192.168.2.1</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 添加一条到达192.57.66.0网络的路由，指定网络掩码为255.255.255.0,数据包通过网关地址192.168.2.1。</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3、route add -host 192.57.66.200 gw 192.168.2.1</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 所有去往192.57.66.200主机的数据包发往网关地址192.168.2.1。</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4、route add default gw 192.168.1.1</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 添加一条默认网关，所有的数据包将被转发到192.168.1.1。</span><br /><strong>路由表内容说明：</strong><br /><span>查看路由</span><br /><span># route -n</span><br /><span>Kernel IP routing table</span><br /><span>Destination &nbsp; &nbsp; &nbsp; &nbsp;Gateway &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Genmask &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Flags &nbsp; Metric &nbsp;Ref&nbsp;&nbsp;&nbsp; Use Iface</span><br /><span>192.57.66.200&nbsp;&nbsp; 192.168.1.1&nbsp;&nbsp;&nbsp;&nbsp; 255.255.255.255 &nbsp; UGH &nbsp; &nbsp;0 &nbsp; &nbsp; &nbsp; &nbsp; 0 &nbsp; &nbsp; &nbsp; 0 eth0</span><br /><span>192.168.1.0 &nbsp; &nbsp; &nbsp; 0.0.0.0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;255.255.255.0 &nbsp; &nbsp; &nbsp;U &nbsp; &nbsp; &nbsp; &nbsp; 0 &nbsp; &nbsp; &nbsp; &nbsp; 0 &nbsp; &nbsp; &nbsp; 0 eth0</span><br /><span>169.254.0.0 &nbsp; &nbsp; &nbsp; 0.0.0.0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;255.255.0.0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;U &nbsp; &nbsp; &nbsp; &nbsp; 0 &nbsp; &nbsp; &nbsp; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 eth0</span><br /><span>0.0.0.0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;192.168.1.1&nbsp;&nbsp;&nbsp;&nbsp; 0.0.0.0 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; UG &nbsp; &nbsp; &nbsp; 0 &nbsp; &nbsp; &nbsp; &nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 eth0</span><br /><span>Destination：目标网络或主机。</span><br /><span>Gateway：网关地址。</span><br /><span>Genmask：目标网络的网络掩码。"255.255.255.255"表示一个主机。"0.0.0.0"表示网关。</span><br /><span>Flags：标记。</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; U、路由被启用。</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; H、目标是一个主机</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; G、使用网关。</span></p>]]></description></item><item><title>鸟哥服务器实战之批量创建帐号</title><link>http://www.cnblogs.com/eastson/archive/2013/10/25/3387626.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 25 Oct 2013 03:48:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/25/3387626.html</guid><description><![CDATA[<p>假设有5个朋友的账号分别是vbirduser{1, 2, 3, 4, 5}，且这5个朋友未来想要共享一个目录，因此应该要加入同一个用户组，假设这个用户组为vbirdgroup，且这5个帐号的密码均为password。</p>
<div class="cnblogs_code">
<pre><strong>xxx<span style="color: #ff0000;">xxxxxxxx</span></strong></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>五种开源协议的比较(BSD,Apache,GPL,LGPL,MIT)</title><link>http://www.cnblogs.com/eastson/archive/2013/10/23/3383868.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 23 Oct 2013 03:30:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/23/3383868.html</guid><description><![CDATA[<p>原文地址：<a href="http://www.cnblogs.com/bruceliang/p/3383536.html">http://www.cnblogs.com/bruceliang/p/3383536.html<br /><span style="color: #000000; line-height: 1.5;"><br /></span></a></p>
<p><span><strong>BSD开源协议（</strong>original&nbsp; BSD license<strong>、</strong>FreeBSD&nbsp; license<strong>、</strong>Original&nbsp; BSD license<strong>）</strong></span></p>
<p>BSD开源协议是一个给于使用者很大自由的协议。基本上使用者可以&rdquo;为所欲为&rdquo;,可以自由的使用，修改源代码，也可以将修改后的代码作为开源或者专有软件再发布。</p>
<p>但&rdquo;为所欲为&rdquo;的前提当你发布使用了BSD协议的代码，或则以BSD协议代码为基础做二次开发自己的产品时，需要满足三个条件：</p>
<ol>
<li>如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的BSD协议。</li>
<li>如果再发布的只是二进制类库/软件，则需要在类库/软件的文档和版权声明中包含原来代码中的BSD协议。</li>
<li>不可以用开源代码的作者/机构名字和原来产品的名字做市场推广。</li>
</ol>
<p>BSD&nbsp; 代码鼓励代码共享，但需要尊重代码作者的著作权。BSD由于允许使用者修改和重新发布代码，也允许使用或在BSD代码上开发商业软件发布和销售，因此是对商业集成很友好的协议。而很多的公司企业在选用开源产品的时候都首选BSD协议，因为可以完全控制这些第三方的代码，在必要的时候可以修改或者二次开发。</p>
<p><span><strong>Apache Licence 2.0（</strong>Apache&nbsp; License, Version 2.0、Apache&nbsp; License, Version 1.1、Apache&nbsp; License, Version 1.0<strong>）</strong></span></p>
<p>Apache&nbsp; Licence是著名的非盈利开源组织Apache采用的协议。该协议和BSD类似，同样鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再发布（作为开源或商业软件）。需要满足的条件也和BSD类似：</p>
<ol>
<li>需要给代码的用户一份Apache Licence</li>
<li>如果你修改了代码，需要再被修改的文件中说明。</li>
<li>在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。</li>
<li>如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache&nbsp;&nbsp; Licence。你可以在Notice中增加自己的许可，但不可以表现为对Apache Licence构成更改。</li>
</ol>
<p>Apache Licence也是对商业应用友好的许可。使用者也可以在需要的时候修改代码来满足需要并作为开源或商业产品发布/销售。</p>
<p><span><strong>GPL（</strong>GNU&nbsp; General Public License<strong>）</strong></span></p>
<p>我们很熟悉的Linux就是采用了GPL。GPL协议和BSD, Apache&nbsp; Licence等鼓励代码重用的许可很不一样。GPL的出发点是代码的开源/免费使用和引用/修改/衍生代码的开源/免费使用，但不允许修改后和衍生的代码做为闭源的商业软件发布和销售。这也就是为什么我们能用免费的各种linux，包括商业公司的linux和linux上各种各样的由个人，组织，以及商业软件公司开发的免费软件了。</p>
<p>GPL协议的主要内容是只要在一个软件中使用(&ldquo;使用&rdquo;指类库引用，修改后的代码或者衍生代码)GPL&nbsp; 协议的产品，则该软件产品必须也采用GPL协议，既必须也是开源和免费。<strong>这就是所谓的&rdquo;传染性&rdquo;</strong>。GPL协议的产品作为一个单独的产品使用没有任何问题，还可以享受免费的优势。</p>
<p>由于GPL严格要求使用了GPL类库的软件产品必须使用GPL协议，对于使用GPL协议的开源代码，商业软件或者对代码有保密要求的部门就不适合集成/采用作为类库和二次开发的基础。</p>
<p>其它细节如再发布的时候需要伴随GPL协议等和BSD/Apache等类似。</p>
<p><span><strong><strong>LGPL（</strong>GNU&nbsp; Lesser General Public License<strong>）</strong></strong></span></p>
<p>LGPL是GPL的一个为主要为类库使用设计的开源协议。和GPL要求任何使用/修改/衍生之GPL类库的的软件必须采用GPL协议不同。LGPL允许商业软件通过类库引用(link)方式使用LGPL类库而不需要开源商业软件的代码。这使得采用LGPL协议的开源代码可以被商业软件作为类库引用并发布和销售。</p>
<p>但是如果修改LGPL协议的代码或者衍生，则所有修改的代码，涉及修改部分的额外代码和衍生的代码都必须采用LGPL协议。因此LGPL协议的开源代码很适合作为第三方类库被商业软件引用，但不适合希望以LGPL协议代码为基础，通过修改和衍生的方式做二次开发的商业软件采用。</p>
<p>GPL/LGPL都保障原作者的知识产权，避免有人利用开源代码复制并开发类似的产品</p>
<p><span><strong>MIT（MIT）</strong></span></p>
<p><span>MIT是和BSD一样宽范的许可协议,作者只想保留版权,而无任何其他了限制.也就是说,你必须在你的发行版里包含原许可协议的声明,无论你是以二进制发布的还是以源代码发布的.</span></p>]]></description></item><item><title>默认权限umask</title><link>http://www.cnblogs.com/eastson/archive/2013/10/23/3383771.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 23 Oct 2013 02:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/23/3383771.html</guid><description><![CDATA[<h3 class="para"><strong>什么是umask？</strong></h3>
<div class="para">当我们登录系统之后创建一个文件总是有一个默认权限的，那么这个权限是怎么来的呢？这就是umask干的事情。umask设置了用户创建文件的默认 权限，它与chmod的效果刚好相反，umask设置的是权限&ldquo;补码&rdquo;，而chmod设置的是文件权限码。</div>
<div class="para">
<h3 class="para"><strong>如何计算umask值</strong></h3>
<div class="para">umask 命令允许你设定文件创建时的缺省模式，对应每一类用户(文件属主、同组用户、其他用户)存在一个相应的umask值中的数字。<strong>对于文件来说，这一数字的最 大值分别是6</strong>。系统不允许你在创建一个文本文件时就赋予它执行权限，必须在创建后用chmod命令增加这一权限。目录则允许设置执行权限，这样<strong>针对目录来说，umask中各个数字最大可以到7</strong>。</div>
</div>]]></description></item><item><title>特殊文件权限（setuid、setgid 和 Sticky 位）</title><link>http://www.cnblogs.com/eastson/archive/2013/10/23/3383717.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 23 Oct 2013 02:42:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/23/3383717.html</guid><description><![CDATA[<p><span>可执行文件和公共目录可以使用三种特殊类型的权限：</span><kbd>setuid</kbd><span>、</span><kbd>setgid</kbd><span>&nbsp;和 sticky 位。设置这些权限之后，运行可执行文件的任何用户都应采用该可执行文件属主（或组）的 ID。</span></p>
<h3 class="sol"><kbd>setuid</kbd>&nbsp;权限</h3>
<p><span><a name="indexterm-742"></a><a name="indexterm-743"></a><a name="indexterm-744"></a><a name="indexterm-745"></a><a name="indexterm-746"></a></span></p>
<p>对可执行文件设置&nbsp;<kbd>setuid</kbd>&nbsp;权限时，将对运行该文件的进程授予基于文件属主的访问权限。该访问权限<strong>不是</strong>基于正在运行可执行文件的用户。使用此特殊权限，用户可以访问通常只有属主才可访问的文件和目录。</p>
<p>例如，<kbd>passwd</kbd>&nbsp;命令的&nbsp;<kbd>setuid</kbd>&nbsp;权限使用户可以更改口令。拥有&nbsp;<kbd>setuid</kbd>&nbsp;权限的&nbsp;<kbd>passwd</kbd>&nbsp;命令与以下类似：</p>
<table style="width: 100%;" border="1" cellpadding="1">
<tbody>
<tr>
<td nowrap="nowrap"><br />
<pre>-r-<strong>s</strong>r-sr-x   3 root     sys       28144 Jun 17 12:02 /usr/bin/passwd</pre>
</td>
</tr>
</tbody>
</table>
<p><a name="indexterm-747"></a><a name="indexterm-748"></a>此特殊权限会带来安全风险。一些确定的用户甚至可以在&nbsp;<kbd>setuid</kbd>&nbsp;进程执行完毕后，找到保持由该进程授予他们的权限的方法。<br /><span>分析一下，/etc/passwd的权限为 -rw-r--r-- 也就是说：该文件的所有者拥有读写的权限，而用户组成员和其它成员只有查看的权限。我们知道，在系统中我们要修改一个用户的密码，root用户和普通用户均可以用/usr/bin/passwd someuser这个命令来修改这个/etc/passwd这个文件，root用户本身拥有对/etc/passwd的写权限，无可厚非；那普通用户呢，这里就用到了setuid，setuid的作用是&ldquo;让执行该命令的用户以该命令拥有者的权限去执行&rdquo;，就是普通用户执行passwd时会拥有root的权限，这样就可以修改/etc/passwd这个文件了。它的标志为：s，会出现在x的地方，例：-rwsr-xr-x&nbsp;</span><span>。</span></p>
<h3 class="sol"><kbd>setgid</kbd>&nbsp;权限</h3>
<p><a name="indexterm-749"></a><a name="indexterm-750"></a><a name="indexterm-751"></a><a name="indexterm-752"></a><a name="indexterm-753"></a></p>
<p><kbd>setgid</kbd>&nbsp;权限与&nbsp;<kbd>setuid</kbd>&nbsp;权限类似。可将进程的有效组 ID (group ID, GID) 更改为拥有该文件的组，并基于授予该组的权限对用户授权访问权限。<kbd>/usr/bin/mail</kbd>&nbsp;命令拥有&nbsp;<kbd>setgid</kbd>&nbsp;权限：</p>
<table style="width: 100%;" border="1" cellpadding="1">
<tbody>
<tr>
<td nowrap="nowrap"><br />
<pre>-r-x--<strong>s</strong>--x   1 root   mail     67504 Jun 17 12:01 /usr/bin/mail</pre>
</td>
</tr>
</tbody>
</table>
<p>将&nbsp;<kbd>setgid</kbd>&nbsp;权限应用于目录时，该目录中已创建的文件将属于该目录所属于的组。这些文件不属于创建进程所属于的组。在目录中拥有写和执行权限的任何用户都可以在其中创建文件。但是，文件将属于拥有该目录的组，而不是用户所属于的组。</p>
<h3 class="sol">Sticky 位</h3>
<p><a name="indexterm-755"></a><a name="indexterm-756"></a><a name="indexterm-757"></a><a name="indexterm-758"></a></p>
<p><strong>sticky 位</strong>是保护目录中文件的权限位。如果对目录设置了 sticky 位，则只有文件属主、目录属主或特权用户才可以删除文件。<tt>root</tt>&nbsp;用户和主管理员角色即是特权用户。sticky 位禁止用户从公共目录（如&nbsp;<kbd>/tmp</kbd>）中删除其他用户的文件：</p>
<table style="width: 100%;" border="1" cellpadding="1">
<tbody>
<tr>
<td nowrap="nowrap"><br />
<pre>drwxrwxrw<strong>t</strong> 7  root  sys   400 Sep  3 13:37 tmp</pre>
</td>
</tr>
</tbody>
</table>
<p><a name="indexterm-759"></a><a name="indexterm-760"></a><a name="indexterm-761"></a><a name="indexterm-762"></a><a name="indexterm-763"></a><a name="indexterm-764"></a><a name="indexterm-765"></a>在 TMPFS 文件系统中设置公共目录时，务必手动设置 sticky 位。<br /><span>我们知道/tmp是系统的临时文件目录，所有的用户在该目录下拥有所有的权限，也就是说在该目录下可以任意创建、修改、删除文件，那如果用户A在该目录下创建了一个文件，用户B将该文件删除了，这种情况我们是不能允许的。为了达到该目的，就出现了stick bit（粘滞位）的概念。它是针对目录来说的，如果该目录设置了stick bit（粘滞位），则该目录下的文件除了该文件的文件属主、目录属主或特权用户可以删除和修改/tmp目录下的stuff，别的用户均不能动别人的，这就是粘滞位的作用。&nbsp;</span></p>
<h3><strong>如何设置上述特殊权限&nbsp;</strong></h3>
<div class="cnblogs_code">
<pre><span style="color: #008080;">chmod</span> u+s xxx  <span style="color: #008000;">#</span><span style="color: #008000;"> 设置setuid权限 </span>
<span style="color: #008080;">chmod</span> g+s xxx  <span style="color: #008000;">#</span><span style="color: #008000;"> 设置setgid权限 </span>
<span style="color: #008080;">chmod</span> o+t xxx   <span style="color: #008000;">#</span><span style="color: #008000;"> 设置stick bit权限，针对目录 </span>
<span style="color: #008080;">chmod</span> 4775 xxx <span style="color: #008000;">#</span><span style="color: #008000;"> 设置setuid权限 </span>
<span style="color: #008080;">chmod</span> 2775 xxx <span style="color: #008000;">#</span><span style="color: #008000;"> 设置setgid权限 </span>
<span style="color: #008080;">chmod</span> 1775 xxx <span style="color: #008000;">#</span><span style="color: #008000;"> 设置stick bit权限，针对目录 </span></pre>
</div>
<p><span>注意：有时你设置了s或t 权限，你会发现它变成了S或T，这是因为在那个位置上你没有给它x（可执行）的权限，这样的话这样的设置是不会有效的，你可以先给它赋上x的权限，然后再给s或t 的权限。</span></p>]]></description></item><item><title>解析Linux特殊文件【转】</title><link>http://www.cnblogs.com/eastson/archive/2013/10/23/3383557.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 23 Oct 2013 01:22:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/23/3383557.html</guid><description><![CDATA[<p><span>您有Dos和Windows经验，就大概知道系统存在若干类型的文件，如系统文件、只读文件、隐含文件等。在Linux下用ls&nbsp;&ndash;l&nbsp;命令来判断文件类型，可以依据第一列中的10个字符来判断。<br /></span><span style="line-height: 1.5;">-rw-r&mdash;r&mdash; &nbsp;指明了1.txt文件是一个普通文件，1.txt和myprog04文件都是普通文件。以&rdquo;-&ldquo;开头的都是普通文件，而以&rdquo;d&rdquo;开头的是目录文件。&nbsp;<br /><span style="line-height: 1.5;">brw-rw----&nbsp;指明了/dev/sda1是一个块设备(Block&nbsp;Device)文件。以&rdquo;b&rdquo;开头的文件都是块设备文件。&nbsp;<br /></span><span style="line-height: 1.5;">crw-rw---- 指明了/dev/lp0是一个字符设备(Chartacter&nbsp;Device)文件，以&rdquo;c&rdquo;开头的文件都是字符设备文件。&nbsp;<br /></span><span style="line-height: 1.5;">srwxrwxrwx&nbsp;指明了/var/lib/mysql/mysql.sock是一个socket文件。以&rdquo;&rdquo;开头的文件都是socket文件。&nbsp;<br /></span><span style="line-height: 1.5;">prwxr&mdash;r-- 指明了了mypipe&nbsp;是一个管道文件。管道文件的一个属性是&rdquo;p&rdquo;。&nbsp;<br /></span><span style="line-height: 1.5;">lrwxrwxrwx&nbsp;指明了softlinkof1.txt&nbsp;是一个软链接文件（或称符号链接文件），该文件指向了1.txt。以&rdquo;l&rdquo;开头的文件是软链接文件。&nbsp;<br /></span><span style="line-height: 1.5;">-rw-r&mdash;r&mdash;开头的hard_link_of_1.txt看上去是个普通文件，但它实际上是一个硬链接文件。&nbsp;<br /></span><span style="line-height: 1.5;">-rwsr-xr-x指明了myprog01是一个setUid的可执行文件，这是根据第四个字符&rdquo;s&rdquo;判断的。&nbsp;<br /></span><span style="line-height: 1.5;">-rwxr-sr-x指明了myprog03是一个setGid的可执行文件，这是根据第七个字符中的&rdquo;s&rdquo;判断的。&nbsp;<br /></span><span style="line-height: 1.5;">-rwsr-sr-x指明了myprog02是一个setUid加setGid的可执行文件，这是根据第四个和第七个字符中的&rdquo;s&rdquo;判断的。&nbsp;<br /></span><span style="line-height: 1.5;">drwxrwxrwt&nbsp;中的第一个&rdquo;d&rdquo;字指明了tmp文件是一个目录，最后一个字符&rdquo;t&rdquo;指明了该目录被设置了粘着位。</span></span></p>]]></description></item><item><title>Linux LVM硬盘管理及LVM扩容【转】</title><link>http://www.cnblogs.com/eastson/archive/2013/10/22/3382059.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 22 Oct 2013 03:07:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/22/3382059.html</guid><description><![CDATA[<p>原文地址：<a href="http://www.cnblogs.com/gaojun/archive/2012/08/22/2650229.html">http://www.cnblogs.com/gaojun/archive/2012/08/22/2650229.html<br /><span style="font-size: 1em; color: #000000; line-height: 1.5;"></span></a></p>
<p><span style="font-size: 1em; color: #000000; line-height: 1.5;"></span></p>
<h3><a href="http://www.cnblogs.com/gaojun/archive/2012/08/22/2650229.html"><span style="font-size: 1em; color: #000000; line-height: 1.5;">一、LVM简介</span></a></h3>
<p>LVM是 Logical Volume Manager(逻辑卷管理)的简写，它由Heinz Mauelshagen在Linux 2.4内核上实现。LVM将一个或多个硬盘的分区在逻辑上集合，相当于一个大硬盘来使用，当硬盘的空间不够使用的时候，可以继续将其它的硬盘的分区加入其中，这样可以实现磁盘空间的动态管理，相对于普通的磁盘分区有很大的灵活性。</p>
<p>与传统的磁盘与分区相比，LVM为计算机提供了更高层次的磁盘存储。它使系统管理员可以更方便的为应用与用户分配存储空间。在LVM管理下的存储卷可以按需要随时改变大小与移除(可能需对文件系统工具进行升级)。LVM也允许按用户组对存储卷进行管理，允许管理员用更直观的名称(如"sales'、 'development')代替物理磁盘名(如'sda'、'sdb')来标识存储卷。</p>
<p>如图所示LVM模型：</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221004444929.jpg"><img title="clip_image002[7]" border="0" alt="clip_image002[7]" src="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221004454863.jpg" width="359" height="297" /></a></p>
<p>由四个磁盘分区可以组成一个很大的空间，然后在这些空间上划分一些逻辑分区，当一个逻辑分区的空间不够用的时候，可以从剩余空间上划分一些空间给空间不够用的分区使用</p>
<p></p>
<h3><a name="_Toc333352428"></a>二、 LVM基本术语</h3>
<p>前面谈到，LVM是在磁盘分区和文件系统之间添加的一个逻辑层，来为文件系统屏蔽下层磁盘分区布局，提供一个抽象的盘卷，在盘卷上建立文件系统。首先我们讨论以下几个LVM术语：</p>
<p>物理存储介质（The physical media）：这里指系统的存储设备：硬盘，如：/dev/hda1、/dev/sda等等，是存储系统最低层的存储单元。</p>
<p>物理卷（physical volume）：物理卷就是指硬盘分区或从逻辑上与磁盘分区具有同样功能的设备(如RAID)，是LVM的基本存储逻辑块，但和基本的物理存储介质（如分区、磁盘等）比较，却包含有与LVM相关的管理参数。</p>
<p>卷组（Volume Group）：LVM卷组类似于非LVM系统中的物理硬盘，其由物理卷组成。可以在卷组上创建一个或多个&ldquo;LVM分区&rdquo;（逻辑卷），LVM卷组由一个或多个物理卷组成。</p>
<p>逻辑卷（logical volume）：LVM的逻辑卷类似于非LVM系统中的硬盘分区，在逻辑卷之上可以建立文件系统(比如/home或者/usr等)。</p>
<p>PE（physical extent）：每一个物理卷被划分为称为PE(Physical Extents)的基本单元，具有唯一编号的PE是可以被LVM寻址的最小单元。PE的大小是可配置的，默认为4MB。</p>
<p>LE（logical extent）：逻辑卷也被划分为被称为LE(Logical Extents) 的可被寻址的基本单位。在同一个卷组中，LE的大小和PE是相同的，并且一一对应。</p>
<p>简单来说就是：</p>
<p>PV:是物理的磁盘分区</p>
<p>VG:LVM中的物理的磁盘分区，也就是PV，必须加入VG，可以将VG理解为一个仓库或者是几个大的硬盘。</p>
<p>LV：也就是从VG中划分的逻辑分区</p>
<p>如下图所示PV、VG、LV三者关系：</p>
<h3><a href="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221004465079.jpg"><img title="clip_image004[7]" border="0" alt="clip_image004[7]" src="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221004474075.jpg" width="448" height="367" /></a></h3>
<p></p>
<h3><a name="_Toc333352429"></a>三、&nbsp;安装LVM</h3>
<p>首先确定系统中是否安装了lvm工具：<br />&nbsp;&nbsp;&nbsp; [root@www root]# rpm &ndash;qa|grep lvm<br />&nbsp;&nbsp;&nbsp; lvm-1.0.3-4<br />如果命令结果输入类似于上例，那么说明系统已经安装了LVM管理工具；如果命令没有输出则说明没有安装LVM管理工具，则需要从网络下载或者从光盘装LVM rpm工具包。</p>
<p></p>
<h3><a name="_Toc333352430"></a>四、&nbsp;创建和管理LVM</h3>
<p>要创建一个LVM系统，一般需要经过以下步骤：<br />1、 创建分区</p>
<p>使用分区工具（如：fdisk等）创建LVM分区，方法和创建其他一般分区的方式是一样的，区别仅仅是LVM的分区类型为8e。如下列图所示：</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221004484848.jpg"><img title="clip_image006[8]" border="0" alt="clip_image006[8]" src="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221004509666.jpg" width="429" height="270" /></a></p>
<p>查看磁盘分区表</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221004509252.jpg"><img title="clip_image008[6]" border="0" alt="clip_image008[6]" src="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221004522500.jpg" width="432" height="220" /></a></p>
<p>使用fdisk创建分区，根据设备文件的绝对路径（/dev/hda）进入分区管理</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221004534843.jpg"><img title="clip_image010[6]" border="0" alt="clip_image010[6]" src="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221004552693.jpg" width="434" height="323" /></a></p>
<p><a href="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221004563641.jpg"><img title="clip_image012[6]" border="0" alt="clip_image012[6]" src="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221004578591.jpg" width="436" height="321" /></a></p>
<p><strong>一定要指定分区的格式为8e</strong><strong>，这是LVM</strong><strong>的分区格式</strong></p>
<p><a name="_Toc333352431"></a>2、 创建PV</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221004581773.jpg"><img title="clip_image014[6]" border="0" alt="clip_image014[6]" src="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221005012066.jpg" width="437" height="368" /></a></p>
<p><a name="_Toc333352432"></a>3、 创建VG</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221005028869.jpg"><img title="clip_image016[6]" border="0" alt="clip_image016[6]" src="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221005039916.jpg" width="439" height="368" /></a></p>
<p><a href="http://images.cnblogs.com/cnblogs_com/gaojun/201208/20120822100504830.jpg"><img title="clip_image018[6]" border="0" alt="clip_image018[6]" src="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221005066554.jpg" width="449" height="377" /></a></p>
<p>创建完成VG之后，才能从VG中划分一个LV。</p>
<p><a name="_Toc333352433"></a>4、 创建LV</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221005087959.jpg"><img title="clip_image020[6]" border="0" alt="clip_image020[6]" src="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221005097827.jpg" width="459" height="389" /></a></p>
<p>创建了一个名字为lvData，容量大小是100M的分区，其中：-L：指定LV的大小 -n：指定LV的名。Vo1Group00：表示从这个VG中划分LV；</p>
<p><a name="_Toc333352434"></a>5、LV格式化及挂载</p>
<p>下一步需要对LV进行格式化（使用mksf进行格式化操作），然后LV才能存储资料</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221005101075.jpg"><img title="clip_image022[6]" border="0" alt="clip_image022[6]" src="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221005122796.jpg" width="451" height="382" /></a></p>
<p>将格式化后的LV分区挂载到指定的目录下，就可以像普通目录一样存储数据了</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221005156120.jpg"><img title="clip_image024[6]" border="0" alt="clip_image024[6]" src="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221005198166.jpg" width="442" height="247" /></a></p>
<p>挂载之后，可以看到此LV的容量。</p>
<p>如果要在系统启动的时候启动LV，最好是将lvData写入fstable 文件中，如下所示：</p>
<p><a href="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221005216049.jpg"><img title="clip_image026[6]" border="0" alt="clip_image026[6]" src="http://images.cnblogs.com/cnblogs_com/gaojun/201208/201208221005225360.jpg" width="455" height="188" /></a></p>
<p>使用Vim编辑器，打开/etc/fstab，在最后一行添加如图中所示，其中/dev/VolGroup00/lvData指定需要挂载的分区LV，/root/test指定要挂载的目录（挂载点），ext3分区文件系统格式，其它使用默认即可</p>
<p>&nbsp;</p>
<h3>扩容当前分区</h3>
<p>一、首先创建一块新的分区：</p>
<p>fdisk&nbsp; /dev/hda</p>
<p>n</p>
<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #选择逻辑分区，如果没有，则首先创建扩展分区，然后再添加逻辑分区（硬盘：最多四个分区P-P-P-P或P-P-P-E）</p>
<p>6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #分区号（从5开始），/dev/hda6</p>
<p>t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8e&nbsp;&nbsp; #分区类型8e表示LVM分区</p>
<p>w&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #写入分区表</p>
<p>partprobe&nbsp;&nbsp; #重读分区表</p>
<p>mkfs &ndash;t ext3 /dev/hda6 #格式化</p>
<p>partx /dev/hda #查看当前硬盘的分区表及使用情况</p>
<p>二、创建PV，扩容VG，LV</p>
<p>pvcreate /dev/hda6</p>
<p>vgdisplay #查看当前已经存在的VG信息，以存在VG：VolGroup00为例</p>
<p>vgextend VolGroup00 /dev/hda6&nbsp;&nbsp;&nbsp; #扩展VolGroup00</p>
<p>lvdisplay #查看已经存在的LV信息，以存在LV：LogVol01为例</p>
<p>lvextend &ndash;L 1G /dev/VolGroup00/LogVol01 #扩展LV</p>
<p>resize2fs /dev/VolGroup00/LogVol01 #执行该重设大小，对于当前正在使用的LogVol01有效</p>
<p>df &ndash;h #查看挂载情况，已经扩容</p>]]></description></item><item><title>Drupal启动阶段之六：页面头信息</title><link>http://www.cnblogs.com/eastson/archive/2013/10/21/3380321.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 21 Oct 2013 03:51:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/21/3380321.html</guid><description><![CDATA[<p>Drupal在本阶段为用户设置缓存头信息。Drupal不为验证用户缓存页面，每次请求时都是从新读取的。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> _drupal_bootstrap_page_header() {
  bootstrap_invoke_all(</span>'boot'); <span style="color: #008000;">//</span><span style="color: #008000;"> 调用boot钩子, 只是启动模块</span>

  <span style="color: #0000ff;">if</span> (!<span style="color: #000000;">drupal_is_cli()) {
    </span><span style="color: #008080;">ob_start</span><span style="color: #000000;">();
    drupal_page_header();
  }
}

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> drupal_page_header() {
  </span><span style="color: #800080;">$headers_sent</span> = &amp;drupal_static(<span style="color: #ff00ff;">__FUNCTION__</span>, <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$headers_sent</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;
  }
  </span><span style="color: #800080;">$headers_sent</span> = <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;

  </span><span style="color: #800080;">$default_headers</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'Expires' =&gt; 'Sun, 19 Nov 1978 05:00:00 GMT',
    'Last-Modified' =&gt; <span style="color: #008080;">gmdate</span>(DATE_RFC1123, REQUEST_TIME),
    'Cache-Control' =&gt; 'no-cache, must-revalidate, post-check=0, pre-check=0',
    'ETag' =&gt; '"' . REQUEST_TIME . '"',<span style="color: #000000;">
  );
  drupal_send_headers(</span><span style="color: #800080;">$default_headers</span><span style="color: #000000;">);
}</span></pre>
</div>]]></description></item><item><title>Drupal启动阶段之五：会话</title><link>http://www.cnblogs.com/eastson/archive/2013/10/19/3377669.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 19 Oct 2013 03:31:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/19/3377669.html</guid><description><![CDATA[<p>Drupal自定义了PHP会话处理器，通过系统表sessions保存会话数据。关于PHP会话处理的更多信息可以参看《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/p/3377503.html">彻底理解PHP的SESSION机制【转】</a>》。</p>
<p>&nbsp;</p>
<p>Drupal的会话处理应该还可以再自定的，因为在载入session.inc文件使用了variable_get()函数，这指示了我们可以在settings.php文件中自定义session.inc的路径，<strong>但是，必须使用同Drupal相同的函数名称</strong>：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/' . variable_get('session_inc', 'includes/session.inc'<span style="color: #000000;">);
drupal_session_initialize();

</span><span style="color: #008000;">//</span><span style="color: #008000;"> settings.php中设置session_inc</span>
<span style="color: #800080;">$conf</span>['session_inc'] = 'includes/session_memcached.inc';</pre>
</div>
<p>&nbsp;</p>
<p>Drupal对session_name()进行了重新设置，HTTP请求的session_name()以SESS开头，HTTPS请求的session_name()以SSESS开头，后面是进过编码的网站服务器地址。对session_name()的设置是在第一个启动阶段-配置中完成的，具体可以参看《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/p/3356611.html">Drupal启动阶段之一：配置</a>》。<br /><img src="http://images.cnitblog.com/blog/111826/201310/19115531-4ea6053a3a99498792ce8e1c65d98716.png" alt="" /></p>
<p>&nbsp;</p>
<p>Drupal在启动过程中调用drupal_session_initialize()函数，初始会话系统：<br /><br /></p>
<p><em id="__mceDel">&nbsp;</em></p>]]></description></item><item><title>彻底理解PHP的SESSION机制【转】</title><link>http://www.cnblogs.com/eastson/archive/2013/10/19/3377503.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 19 Oct 2013 02:49:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/19/3377503.html</guid><description><![CDATA[<p>原文地址：&nbsp;<a href="http://www.cnblogs.com/acpp/archive/2011/06/10/2077592.html">http://www.cnblogs.com/acpp/archive/2011/06/10/2077592.html</a></p>
<p>&nbsp;</p>
<h3><span>session</span><span>.</span><span>save_handler&nbsp;</span><span>=</span><span>&nbsp;files</span></h3>
<p><span style="line-height: 1.5;">1</span><span style="line-height: 1.5;">.</span><span style="line-height: 1.5;">&nbsp;</span><span style="line-height: 1.5;">session_start</span><span style="line-height: 1.5;">()是session机制的开始，它有一定概率开启垃圾回收，</span><span style="line-height: 1.5;">因为session是存放在文件中的，PHP自身的垃圾回收是无效的，SESSION的回收是要删文件的，这个概率是根据php</span><span style="line-height: 1.5;">.</span><span style="line-height: 1.5;">ini的配置决定的，但是有的系统是 session</span><span style="line-height: 1.5;">.</span><span style="line-height: 1.5;">gc_probability&nbsp;</span><span style="line-height: 1.5;">=</span><span style="line-height: 1.5;">&nbsp;</span><span style="line-height: 1.5;">0</span><span style="line-height: 1.5;">，这也就是说概率是0，而是通过cron脚本来实现垃圾回收。</span></p>
<div class="cnblogs_code">
<pre>session.gc_probability = 1<span style="color: #000000;">
session</span>.gc_divisor = 1000<span style="color: #000000;">
session</span>.gc_maxlifetime = 1440<span style="color: #008000;">//</span><span style="color: #008000;">过期时间 默认24分钟
//概率是 session.gc_probability/session.gc_divisor 结果 1/1000, 
//不建议设置过小，因为session的垃圾回收，是需要检查每个文件是否过期的。</span>
session.save_path = <span style="color: #008000;">//</span><span style="color: #008000;">好像不同的系统默认不一样，有一种设置是 "N;/path"
//这是随机分级存储，这个样的话，垃圾回收将不起作用，需要自己写脚本</span></pre>
</div>
<p><span style="line-height: 1.5;">2</span><span style="line-height: 1.5;">.</span><span style="line-height: 1.5;">&nbsp;session会判断当前是否有</span><span style="line-height: 1.5;">$_COOKIE</span><span style="line-height: 1.5;">[</span><span style="line-height: 1.5;">session_name</span><span style="line-height: 1.5;">()]。</span><span style="line-height: 1.5;">session_name</span><span style="line-height: 1.5;">()返回保存session_id的COOKIE键值，</span>这个值可以从php.ini找到。</p>
<div class="cnblogs_code">
<pre>session.name = PHPSESSID <span style="color: #008000;">//</span><span style="color: #008000;">默认值PHPSESSID</span></pre>
</div>
<p>3.&nbsp;如果不存在会生成一个session_id，然后把生成的session_id作为COOKIE的值传递到客户端。相当于执行了下面COOKIE 操作，注意的是，这一步执行了setcookie()操作，COOKIE是在header头中发送的，这之前是不能有输出的，PHP有另外一个函数&nbsp;session_regenerate_id() 如果使用这个函数，这之前也是不能有输出的。</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">setcookie</span>(<span style="color: #008080;">session_name</span>(),
        <span style="color: #008080;">session_id</span>(),<span style="color: #000000;">
        session</span>.cookie_lifetime,<span style="color: #008000;">//</span><span style="color: #008000;">默认0</span>
        session.cookie_path,<span style="color: #008000;">//</span><span style="color: #008000;">默认'/'当前程序跟目录下都有效</span>
        session.cookie_domain,<span style="color: #008000;">//</span><span style="color: #008000;">默认为空</span>
)</pre>
</div>
<p>4.&nbsp;如果存在那么session_id&nbsp;=&nbsp;$_COOKIE[session_name]，然后去session.save_path指定的文件夹里去找名字为'SESS_'&nbsp;.&nbsp;session_id()的文件，读取文件的内容反序列化，然后放到$_SESSION中。</p>
<p>5.&nbsp;为$_SESSION赋值。比如新添加一个值$_SESSION['test']&nbsp;=&nbsp;'blah'; 那么这个$_SESSION只会维护在内存中，当脚本执行结束的时候，用把$_SESSION的值写入到session_id指定的文件夹中，然后关闭相关资源。这个阶段有可能执行更改session_id的操作，比如销毁一个旧的的session_id，生成一个全新的session_id。一般用在自定义 session操作，角色的转换上，比如Drupal.Drupal的匿名用户有一个SESSION的，当它登录后需要换用新的session_id：<em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><span><br /></span></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_COOKIE</span>[<span style="color: #008080;">session_name</span><span style="color: #000000;">()])) {
  </span><span style="color: #008080;">setcookie</span>(<span style="color: #008080;">session_name</span>(), '', <span style="color: #008080;">time</span>() - 42000, '/');<span style="color: #008000;">//</span><span style="color: #008000;">旧session cookie过期</span>
<span style="color: #000000;">}
</span><span style="color: #008080;">session_regenerate_id</span>();<span style="color: #008000;">//</span><span style="color: #008000;">这一步会生成新的session_id
//session_id()返回的是新的值</span></pre>
</div>
<p>6.写入SESSION操作。在脚本结束的时候会执行SESSION写入操作，把$_SESSION中值写入到session_id命名的文件中，可能已经存在，可能需要创建新的文件。</p>
<p>7.销毁SESSION。SESSION发出去的COOKIE一般属于即时COOKIE，保存在内存中，当浏览器关闭后，才会过期，假如需要人为强制过期，比如退出登录，而不是关闭浏览器，那么就需要在代码里销毁SESSION，方法有很多，</p>
<ol>
<li>setcookie(session_name(),&nbsp;session_id(),&nbsp;time()&nbsp;-&nbsp;8000000,&nbsp;..);//退出登录前执行</li>
<li>usset($_SESSION);//这会删除所有的$_SESSION数据，刷新后，有COOKIE传过来，但是没有数据。</li>
<li>session_destroy();//这个作用更彻底，删除$_SESSION 删除session文件，和session_id</li>
</ol>
<p>当不关闭浏览器的情况下，再次刷新，2和3都会有COOKIE传过来，但是找不到数据。<em id="__mceDel"><em id="__mceDel"><em id="__mceDel"><em id="__mceDel"><em id="__mceDel"><em id="__mceDel"><em id="__mceDel"><em id="__mceDel"><em id="__mceDel"><em id="__mceDel"><em id="__mceDel"><em id="__mceDel"><em id="__mceDel"><em id="__mceDel"><span><br /></span></em></em></em></em></em></em></em></em></em></em></em></em></em></em></p>
<p>&nbsp;</p>
<h3>session.save_handler&nbsp;=&nbsp;user</h3>
<p>用户自定义session处理机制，更加直观：</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">session_set_save_handler</span>('open', 'close', 'read', 'write', 'destroy', 'gc'); </pre>
</div>
<p>1.session_start()，执行open($save_path,&nbsp;$session_name)打开session操作句柄，$save_path在session.save_handler=files的情况下它就是session.save_path，但是如果用户自定的话，这个两个参数都用不上，直接返回TRUE。<br /><span style="line-height: 1.5;">2.</span><span style="line-height: 1.5;">执行read(</span><span style="line-height: 1.5;">$id</span><span style="line-height: 1.5;">)从中读取数据</span><span style="line-height: 1.5;">。</span><span style="line-height: 1.5;">这个参数$id是自动传递的就是session_id()，可以通过这个值进行操作。</span></p>
<p>3.脚本执行结束，执行write($id,&nbsp;$sess_data)。<br />4.假如用户需要session_destroy()，先执行destroy，在执行第2步。<br />一个实际例子：<em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><em><br /></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></em></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;">SESSION初始化的时候调用</span>
<span style="color: #0000ff;">function</span> open(<span style="color: #800080;">$save_path</span>, <span style="color: #800080;">$session_name</span><span style="color: #000000;">)
{
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$sess_save_path</span><span style="color: #000000;">;
  </span><span style="color: #800080;">$sess_save_path</span> = <span style="color: #800080;">$save_path</span><span style="color: #000000;">;
  </span><span style="color: #0000ff;">return</span>(<span style="color: #0000ff;">true</span><span style="color: #000000;">);
}

</span><span style="color: #008000;">//</span><span style="color: #008000;">关闭的时候调用</span>
<span style="color: #0000ff;">function</span><span style="color: #000000;"> close()
{
  </span><span style="color: #0000ff;">return</span>(<span style="color: #0000ff;">true</span><span style="color: #000000;">);
}

</span><span style="color: #0000ff;">function</span> read(<span style="color: #800080;">$id</span><span style="color: #000000;">)
{
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$sess_save_path</span><span style="color: #000000;">;
  </span><span style="color: #800080;">$sess_file</span> = "<span style="color: #800080;">$sess_save_path</span>/sess_<span style="color: #800080;">$id</span>"<span style="color: #000000;">;
  </span><span style="color: #0000ff;">return</span> (<span style="color: #0000ff;">string</span>) @<span style="color: #008080;">file_get_contents</span>(<span style="color: #800080;">$sess_file</span><span style="color: #000000;">);
}
</span><span style="color: #008000;">//</span><span style="color: #008000;">脚本执行结束之前，执行写入操作</span>
<span style="color: #0000ff;">function</span> write(<span style="color: #800080;">$id</span>, <span style="color: #800080;">$sess_data</span><span style="color: #000000;">)
{
  </span><span style="color: #0000ff;">echo</span> "sdfsf"<span style="color: #000000;">;
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$sess_save_path</span><span style="color: #000000;">;

  </span><span style="color: #800080;">$sess_file</span> = "<span style="color: #800080;">$sess_save_path</span>/sess_<span style="color: #800080;">$id</span>"<span style="color: #000000;">;
  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$fp</span> = @<span style="color: #008080;">fopen</span>(<span style="color: #800080;">$sess_file</span>, "w"<span style="color: #000000;">)) {
    </span><span style="color: #800080;">$return</span> = <span style="color: #008080;">fwrite</span>(<span style="color: #800080;">$fp</span>, <span style="color: #800080;">$sess_data</span><span style="color: #000000;">);
    </span><span style="color: #008080;">fclose</span>(<span style="color: #800080;">$fp</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$return</span><span style="color: #000000;">;
  } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
    </span><span style="color: #0000ff;">return</span>(<span style="color: #0000ff;">false</span><span style="color: #000000;">);
  }

}

</span><span style="color: #0000ff;">function</span> destroy(<span style="color: #800080;">$id</span><span style="color: #000000;">)
{
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$sess_save_path</span><span style="color: #000000;">;

  </span><span style="color: #800080;">$sess_file</span> = "<span style="color: #800080;">$sess_save_path</span>/sess_<span style="color: #800080;">$id</span>"<span style="color: #000000;">;
  </span><span style="color: #0000ff;">return</span>(@<span style="color: #008080;">unlink</span>(<span style="color: #800080;">$sess_file</span><span style="color: #000000;">));
}

</span><span style="color: #0000ff;">function</span> gc(<span style="color: #800080;">$maxlifetime</span><span style="color: #000000;">)
{
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$sess_save_path</span><span style="color: #000000;">;

  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #008080;">glob</span>("<span style="color: #800080;">$sess_save_path</span>/sess_*") <span style="color: #0000ff;">as</span> <span style="color: #800080;">$filename</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">filemtime</span>(<span style="color: #800080;">$filename</span>) + <span style="color: #800080;">$maxlifetime</span> &lt; <span style="color: #008080;">time</span><span style="color: #000000;">()) {
      @</span><span style="color: #008080;">unlink</span>(<span style="color: #800080;">$filename</span><span style="color: #000000;">);
    }
  }
  </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">true</span><span style="color: #000000;">;
}</span></pre>
</div>]]></description></item><item><title>Drupal的钩子系统</title><link>http://www.cnblogs.com/eastson/archive/2013/10/17/3374366.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 17 Oct 2013 09:21:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/17/3374366.html</guid><description><![CDATA[<p>Drupal的很多功能都是可以定制的。以导航菜单为例，blog模块需要在菜单上添加一些功能，comment模块需要在菜单上添加一些功能，我们开发的自定义模块也需要在菜单上添加一些功能。Drupal开发者为了达到这样的扩展目的，设计了钩子系统，导航菜单就是其中一个名为menu的钩子。有了钩子系统，开发人员就可以在blog模块定义一个钩子函数从而实现menu钩子。Drupal要求钩子函数的命名必须要求以模块名开始，以钩子名为后缀。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> block_menu() {
  </span><span style="color: #800080;">$items</span>['admin/structure/block/manage/%/%'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'title' =&gt; 'Configure block',
    'page callback' =&gt; 'drupal_get_form',
    'page arguments' =&gt; <span style="color: #0000ff;">array</span>('block_admin_configure', 4, 5),
    'access arguments' =&gt; <span style="color: #0000ff;">array</span>('administer blocks'),
    'file' =&gt; 'block.admin.inc',<span style="color: #000000;">
  );
  </span><span style="color: #800080;">$items</span>['admin/structure/block/manage/%/%/configure'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'title' =&gt; 'Configure block',
    'type' =&gt; MENU_DEFAULT_LOCAL_TASK,
    'context' =&gt; MENU_CONTEXT_INLINE,<span style="color: #000000;">
  );
  </span><span style="color: #800080;">$items</span>['admin/structure/block/manage/%/%/delete'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'title' =&gt; 'Delete block',
    'page callback' =&gt; 'drupal_get_form',
    'page arguments' =&gt; <span style="color: #0000ff;">array</span>('block_custom_block_delete', 4, 5),
    'access arguments' =&gt; <span style="color: #0000ff;">array</span>('administer blocks'),
    'type' =&gt; MENU_LOCAL_TASK,
    'context' =&gt; MENU_CONTEXT_NONE,
    'file' =&gt; 'block.admin.inc',<span style="color: #000000;">
  );
  
  </span>... ...
  
  <span style="color: #0000ff;">return</span> <span style="color: #800080;">$items</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>module_hook_info()函数查询所有可以实现的钩子，实质上也是使用的钩子方式：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> module_hook_info() {
  </span><span style="color: #800080;">$hook_info</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();

  </span><span style="color: #0000ff;">foreach</span> (module_list() <span style="color: #0000ff;">as</span> <span style="color: #800080;">$module</span><span style="color: #000000;">) {
    </span><span style="color: #800080;">$function</span> = <span style="color: #800080;">$module</span> . '_hook_info'<span style="color: #000000;">; // hook_info钩子
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$function</span><span style="color: #000000;">)) {
      </span><span style="color: #800080;">$result</span> = <span style="color: #800080;">$function</span><span style="color: #000000;">();
      </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$result</span>) &amp;&amp; <span style="color: #008080;">is_array</span>(<span style="color: #800080;">$result</span><span style="color: #000000;">)) {
        </span><span style="color: #800080;">$hook_info</span> = <span style="color: #008080;">array_merge_recursive</span>(<span style="color: #800080;">$hook_info</span>, <span style="color: #800080;">$result</span><span style="color: #000000;">);
      }
    }
  }
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> We can't use drupal_alter() for the same reason as above.</span>
  <span style="color: #0000ff;">foreach</span> (module_list() <span style="color: #0000ff;">as</span> <span style="color: #800080;">$module</span><span style="color: #000000;">) {
    </span><span style="color: #800080;">$function</span> = <span style="color: #800080;">$module</span> . '_hook_info_alter'<span style="color: #000000;">; // hook_info_alter钩子
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$function</span><span style="color: #000000;">)) {
      </span><span style="color: #800080;">$function</span>(<span style="color: #800080;">$hook_info</span><span style="color: #000000;">);
    }
  }

  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$hook_info</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>自定义的钩子可以在hook_info中注册，也可以不注册。注册的好处是可以为钩子实现人员提供更详细的详细，另外一个目的是可以为钩子分组。例如，定义了很多admin有关的钩子，这些钩子函数我们想把它们单独放在一个PHP文件里面，而不用都挤在模块主文件。</p>
<p>&nbsp;</p>
<p>module_implements()函数返回实现某个钩子的所有函数，它用module_list()遍历当前激活的所哟模块：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> module_implements(<span style="color: #800080;">$hook</span>, <span style="color: #800080;">$sort</span> = <span style="color: #0000ff;">FALSE</span>, <span style="color: #800080;">$reset</span> = <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$implementations</span> = &amp;<span style="color: #800080;">$drupal_static_fast</span>['implementations'<span style="color: #000000;">];

  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$implementations</span>[<span style="color: #800080;">$hook</span><span style="color: #000000;">])) {
  
    </span><span style="color: #800080;">$hook_info</span> = module_hook_info(); <span style="color: #008000;">//</span><span style="color: #008000;"> 查询钩子信息</span>
    
    <span style="color: #800080;">$implementations</span>[<span style="color: #800080;">$hook</span>] = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
    </span><span style="color: #800080;">$list</span> = module_list(<span style="color: #0000ff;">FALSE</span>, <span style="color: #0000ff;">FALSE</span>, <span style="color: #800080;">$sort</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$list</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$module</span><span style="color: #000000;">) {
    
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> 注意这里额外载入了钩子分组文件</span>
      <span style="color: #800080;">$include_file</span> = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$hook_info</span>[<span style="color: #800080;">$hook</span>]['group']) &amp;&amp; module_load_include('inc', <span style="color: #800080;">$module</span>, <span style="color: #800080;">$module</span> . '.' . <span style="color: #800080;">$hook_info</span>[<span style="color: #800080;">$hook</span>]['group'<span style="color: #000000;">]);
      
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> Since module_hook() may needlessly try to load the include file again,
      // function_exists() is used directly here.</span>
      <span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$module</span> . '_' . <span style="color: #800080;">$hook</span><span style="color: #000000;">)) {
        </span><span style="color: #800080;">$implementations</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$module</span>] = <span style="color: #800080;">$include_file</span> ? <span style="color: #800080;">$hook_info</span>[<span style="color: #800080;">$hook</span>]['group'] : <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">;
      }
    }
    
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Allow modules to change the weight of specific implementations but avoid
    // an infinite loop.</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$hook</span> != 'module_implements_alter'<span style="color: #000000;">) {
      drupal_alter(</span>'module_implements', <span style="color: #800080;">$implementations</span>[<span style="color: #800080;">$hook</span>], <span style="color: #800080;">$hook</span><span style="color: #000000;">);
    }
  }
  </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
    </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$implementations</span>[<span style="color: #800080;">$hook</span>] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$module</span> =&gt; <span style="color: #800080;">$group</span><span style="color: #000000;">) {
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> If this hook implementation is stored in a lazy-loaded file, so include
      // that file first.</span>
      <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$group</span><span style="color: #000000;">) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 注意这里额外载入了钩子分组文件</span>
        module_load_include('inc', <span style="color: #800080;">$module</span>, "<span style="color: #800080;">$module</span>.<span style="color: #800080;">$group</span>"<span style="color: #000000;">);
      }
      
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> It is possible that a module removed a hook implementation without the
      // implementations cache being rebuilt yet, so we check whether the
      // function exists on each request to avoid undefined function errors.
      // Since module_hook() may needlessly try to load the include file again,
      // function_exists() is used directly here.</span>
      <span style="color: #0000ff;">if</span> (!<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$module</span> . '_' . <span style="color: #800080;">$hook</span><span style="color: #000000;">)) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Clear out the stale implementation from the cache and force a cache
        // refresh to forget about no longer existing hook implementations.</span>
        <span style="color: #0000ff;">unset</span>(<span style="color: #800080;">$implementations</span>[<span style="color: #800080;">$hook</span>][<span style="color: #800080;">$module</span><span style="color: #000000;">]);
        </span><span style="color: #800080;">$implementations</span>['#write_cache'] = <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;
      }
    }
  }

  </span><span style="color: #0000ff;">return</span> <span style="color: #008080;">array_keys</span>(<span style="color: #800080;">$implementations</span>[<span style="color: #800080;">$hook</span><span style="color: #000000;">]);
}</span></pre>
</div>
<p>&nbsp;</p>
<p>module_invoke_all()则调用所有实现某个钩子的所有函数，这是Drupal钩子系统的最外层接口：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> module_invoke_all(<span style="color: #800080;">$hook</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$args</span> = <span style="color: #008080;">func_get_args</span><span style="color: #000000;">();
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Remove $hook from the arguments.</span>
  <span style="color: #0000ff;">unset</span>(<span style="color: #800080;">$args</span>[0<span style="color: #000000;">]);
  </span><span style="color: #800080;">$return</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
  </span><span style="color: #0000ff;">foreach</span> (module_implements(<span style="color: #800080;">$hook</span>) <span style="color: #0000ff;">as</span> <span style="color: #800080;">$module</span><span style="color: #000000;">) {
    </span><span style="color: #800080;">$function</span> = <span style="color: #800080;">$module</span> . '_' . <span style="color: #800080;">$hook</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$function</span><span style="color: #000000;">)) {
      </span><span style="color: #800080;">$result</span> = <span style="color: #008080;">call_user_func_array</span>(<span style="color: #800080;">$function</span>, <span style="color: #800080;">$args</span><span style="color: #000000;">); // 调用钩子函数
      </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$result</span>) &amp;&amp; <span style="color: #008080;">is_array</span>(<span style="color: #800080;">$result</span><span style="color: #000000;">)) {
        </span><span style="color: #800080;">$return</span> = <span style="color: #008080;">array_merge_recursive</span>(<span style="color: #800080;">$return</span>, <span style="color: #800080;">$result</span><span style="color: #000000;">); // 返回结果的处理方式
      }
      </span><span style="color: #0000ff;">elseif</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$result</span><span style="color: #000000;">)) {
        </span><span style="color: #800080;">$return</span>[] = <span style="color: #800080;">$result</span><span style="color: #000000;">; // 返回结果的处理方式
      }
    }
  }

  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$return</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>例如，我们要调用menu钩子，简单的调用module_invoke_all()就可以了：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$items</span> = module_invoke_all('menu');</pre>
</div>]]></description></item><item><title>Drupal启动阶段之四：系统变量</title><link>http://www.cnblogs.com/eastson/archive/2013/10/17/3363839.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 17 Oct 2013 02:34:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/17/3363839.html</guid><description><![CDATA[<p>Drupal的系统变量是指保存在后台数据库variable表中的一些参数设置，透过variable_get()和variable_set()存取：<br /><img src="http://images.cnitblog.com/blog/111826/201310/11163053-8203ec67aa8b4329ab7a49f0ed42d416.png" alt="" /></p>
<p>&nbsp;</p>
<p>先看一看_drupal_bootstrap_variables()的代码：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> _drupal_bootstrap_variables() {
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$conf</span><span style="color: #000000;">;

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Initialize the lock system.</span>
  <span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/' . variable_get('lock_inc', 'includes/lock.inc'<span style="color: #000000;">);
  lock_initialize();

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Load variables from the database, but do not overwrite variables set in settings.php.</span>
  <span style="color: #800080;">$conf</span> = variable_initialize(<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$conf</span>) ? <span style="color: #800080;">$conf</span> : <span style="color: #0000ff;">array</span><span style="color: #000000;">());<br />
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Load bootstrap modules.</span>
  <span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/includes/module.inc'<span style="color: #000000;">;
  module_load_all(</span><span style="color: #0000ff;">TRUE</span><span style="color: #000000;">);
}</span></pre>
</div>
<p>&nbsp;</p>
<p>首先，初始化lock系统：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/' . variable_get('lock_inc', 'includes/lock.inc'<span style="color: #000000;">);
lock_initialize();</span></pre>
</div>
<p>注意这里在执行variable_initialize()之前就调用了variable_get()函数。是因为Drupal是通过全局变量$conf来保存系统变量的。$conf除了可以通过variable_initialzie()初始化以外，也可以通过settings.php初始化。settings.php对$conf的初始化在Drupal启动过程的第一步就完成了，所以在这里$confi也是可以用的。另外，即使settings.php没有初始化$conf，也可以使用variable_get()的默认值includes/lock.inc，这样也是没有问题的。</p>
<p>&nbsp;</p>
<p>然后，调用variable_initialize()读取数据库variable表的记录，合并到$conf：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$conf</span> = variable_initialize(<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$conf</span>) ? <span style="color: #800080;">$conf</span> : <span style="color: #0000ff;">array</span>());</pre>
</div>
<p>关于variable表更详细的信息可以参考《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/p/3355580.html">Drupal如何处理系统变量？</a>》。</p>
<p>&nbsp;</p>
<p>最后，装入启动模块。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/includes/module.inc'<span style="color: #000000;">;
module_load_all(</span><span style="color: #0000ff;">TRUE</span><span style="color: #000000;">);

</span><span style="color: #0000ff;">function</span> module_load_all(<span style="color: #800080;">$bootstrap</span> = <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">static</span> <span style="color: #800080;">$has_run</span> = <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">;

  </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$bootstrap</span><span style="color: #000000;">)) {
    </span><span style="color: #0000ff;">foreach</span> (module_list(<span style="color: #0000ff;">TRUE</span>, <span style="color: #800080;">$bootstrap</span>) <span style="color: #0000ff;">as</span> <span style="color: #800080;">$module</span><span style="color: #000000;">) {
      drupal_load(</span>'module', <span style="color: #800080;">$module</span><span style="color: #000000;">);
    }
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> $has_run will be TRUE if $bootstrap is FALSE.</span>
    <span style="color: #800080;">$has_run</span> = !<span style="color: #800080;">$bootstrap</span><span style="color: #000000;">;
  }
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$has_run</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>Drupal的模块载入分为两类，一类是boostrap模块，另外一类是其它普通模块。boostrap模块必须会在Drupal启动过程中全部被载入。注意这里两个关键词："必须"和&ldquo;全部&rdquo;，说明boostrap模块不管是什么请求，都会全部的被载入。与此对应的其它普通模块，则只会在需要时才会被载入。这是两种模块类型的重要区别。<br /><img src="http://images.cnitblog.com/blog/111826/201310/17103326-9e8bf8863c7e45158dfcf6af1ec13d2c.png" alt="" /></p>
<p>关于模块装入更详细的信息可以参考《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/p/3373467.html">Drupal中的模块载入</a>》。</p>]]></description></item><item><title>Drupal中的模块载入</title><link>http://www.cnblogs.com/eastson/archive/2013/10/17/3373467.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 17 Oct 2013 02:10:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/17/3373467.html</guid><description><![CDATA[<p>什么是模块载入？首先说载入，这里的载入是指require_once。模块载入就是指require_once模块目录中的某个PHP文件。</p>
<p>&nbsp;</p>
<p>每个Drupal模块都应该有自己的主文件。模块主文件以模块名开始，以.module为后缀。例如blog模块，其主文件就是blog.module。drupal_load()函数用来完成载入模块主文件：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_load(<span style="color: #800080;">$type</span>, <span style="color: #800080;">$name</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">static</span> <span style="color: #800080;">$files</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();

  </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$files</span>[<span style="color: #800080;">$type</span>][<span style="color: #800080;">$name</span><span style="color: #000000;">])) {
    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;
  }

  </span><span style="color: #800080;">$filename</span> = drupal_get_filename(<span style="color: #800080;">$type</span>, <span style="color: #800080;">$name</span><span style="color: #000000;">);

  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$filename</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">include_once</span> DRUPAL_ROOT . '/' . <span style="color: #800080;">$filename</span><span style="color: #000000;">;
    </span><span style="color: #800080;">$files</span>[<span style="color: #800080;">$type</span>][<span style="color: #800080;">$name</span>] = <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;
  }

  </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>drupal_load()不止限于载入模块主文件，其它的Drupal资源主文件也可以载入。更多信息可以参考《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/p/3368493.html">Drupal所能够理解的资源</a>》。</p>
<p>&nbsp;</p>
<p>模块目录中不仅有主文件，还可以有其它的PHP文件。例如blog模块中有一个test文件。按照Drupal的命名原则，这个文件必须命名为blog.test，以模块名开始，以文件类型为后缀。使用module_load_include()函数可以实现模块目录中非主文件的载入：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> module_load_include(<span style="color: #800080;">$type</span>, <span style="color: #800080;">$module</span>, <span style="color: #800080;">$name</span> = <span style="color: #0000ff;">NULL</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$name</span><span style="color: #000000;">)) {
    </span><span style="color: #800080;">$name</span> = <span style="color: #800080;">$module</span><span style="color: #000000;">;
  }

  </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>('drupal_get_path'<span style="color: #000000;">)) {
    </span><span style="color: #800080;">$file</span> = DRUPAL_ROOT . '/' . drupal_get_path('module', <span style="color: #800080;">$module</span>) . "/<span style="color: #800080;">$name</span>.<span style="color: #800080;">$type</span>"<span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">is_file</span>(<span style="color: #800080;">$file</span><span style="color: #000000;">)) {
      </span><span style="color: #0000ff;">require_once</span> <span style="color: #800080;">$file</span><span style="color: #000000;">;
      </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$file</span><span style="color: #000000;">;
    }
  }
  
  </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>Drupal为install文件的载入实现了module_load_install()函数，但实质还是对module_load_include()的简单封装：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> module_load_install(<span style="color: #800080;">$module</span><span style="color: #000000;">) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Make sure the installation API is available</span>
  <span style="color: #0000ff;">include_once</span> DRUPAL_ROOT . '/includes/install.inc'<span style="color: #000000;">;
  </span><span style="color: #0000ff;">return</span> module_load_include('install', <span style="color: #800080;">$module</span><span style="color: #000000;">);
}</span></pre>
</div>
<p>&nbsp;</p>
<p>drupal_load()和module_load_include()都只是载入单个模块中的某种类型文件，Drupal还为这两个函数实现了对应的批量载入函数module_load_all()和module_load_all_includes()，用于Drupal启动过程中，方便地一次载入所有激活的模块：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> module_load_all(<span style="color: #800080;">$bootstrap</span> = <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">static</span> <span style="color: #800080;">$has_run</span> = <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">;

  </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$bootstrap</span><span style="color: #000000;">)) {
    </span><span style="color: #0000ff;">foreach</span> (module_list(<span style="color: #0000ff;">TRUE</span>, <span style="color: #800080;">$bootstrap</span>) <span style="color: #0000ff;">as</span> <span style="color: #800080;">$module</span><span style="color: #000000;">) {
      drupal_load(</span>'module', <span style="color: #800080;">$module</span><span style="color: #000000;">);
    }
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> $has_run will be TRUE if $bootstrap is FALSE.</span>
    <span style="color: #800080;">$has_run</span> = !<span style="color: #800080;">$bootstrap</span><span style="color: #000000;">;
  }
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$has_run</span><span style="color: #000000;">;
}

</span><span style="color: #0000ff;">function</span> module_load_all_includes(<span style="color: #800080;">$type</span>, <span style="color: #800080;">$name</span> = <span style="color: #0000ff;">NULL</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$modules</span> =<span style="color: #000000;"> module_list();
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$modules</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$module</span><span style="color: #000000;">) {
    module_load_include(</span><span style="color: #800080;">$type</span>, <span style="color: #800080;">$module</span>, <span style="color: #800080;">$name</span><span style="color: #000000;">);
  }
}</span></pre>
</div>
<p>这两个函数的关键是module_list()，该函数返回当前激活的模块名称列表：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> module_list(<span style="color: #800080;">$refresh</span> = <span style="color: #0000ff;">FALSE</span>, <span style="color: #800080;">$bootstrap_refresh</span> = <span style="color: #0000ff;">FALSE</span>, <span style="color: #800080;">$sort</span> = <span style="color: #0000ff;">FALSE</span>, <span style="color: #800080;">$fixed_list</span> = <span style="color: #0000ff;">NULL</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">static</span> <span style="color: #800080;">$list</span> = <span style="color: #0000ff;">array</span>(), <span style="color: #800080;">$sorted_list</span><span style="color: #000000;">;

  </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$list</span>) || <span style="color: #800080;">$refresh</span> || <span style="color: #800080;">$fixed_list</span><span style="color: #000000;">) {
    </span><span style="color: #800080;">$list</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
    </span><span style="color: #800080;">$sorted_list</span> = <span style="color: #0000ff;">NULL</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$fixed_list</span><span style="color: #000000;">) {
      </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$fixed_list</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$name</span> =&gt; <span style="color: #800080;">$module</span><span style="color: #000000;">) {
        drupal_get_filename(</span>'module', <span style="color: #800080;">$name</span>, <span style="color: #800080;">$module</span>['filename'<span style="color: #000000;">]);
        </span><span style="color: #800080;">$list</span>[<span style="color: #800080;">$name</span>] = <span style="color: #800080;">$name</span><span style="color: #000000;">;
      }
    }
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
      </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$refresh</span><span style="color: #000000;">) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> For the $refresh case, make sure that system_list() returns fresh
        // data.</span>
        drupal_static_reset('system_list'<span style="color: #000000;">);
      }
      </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$bootstrap_refresh</span><span style="color: #000000;">) {
        </span><span style="color: #800080;">$list</span> = system_list('bootstrap'<span style="color: #000000;">);
      }
      </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Not using drupal_map_assoc() here as that requires common.inc.</span>
        <span style="color: #800080;">$list</span> = <span style="color: #008080;">array_keys</span>(system_list('module_enabled'<span style="color: #000000;">));
        </span><span style="color: #800080;">$list</span> = (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$list</span>) ? <span style="color: #008080;">array_combine</span>(<span style="color: #800080;">$list</span>, <span style="color: #800080;">$list</span>) : <span style="color: #0000ff;">array</span><span style="color: #000000;">());
      }
    }
  }
  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$sort</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$sorted_list</span><span style="color: #000000;">)) {
      </span><span style="color: #800080;">$sorted_list</span> = <span style="color: #800080;">$list</span><span style="color: #000000;">;
      </span><span style="color: #008080;">ksort</span>(<span style="color: #800080;">$sorted_list</span><span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$sorted_list</span><span style="color: #000000;">;
  }
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$list</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>module_list()也只是对system_list()的封装，关于system_list()可以参看《<a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_0" href="http://www.cnblogs.com/eastson/p/3371787.html">Drupal的system_list()函数解析</a>》。</p>]]></description></item><item><title>Drupal的system_list()函数解析</title><link>http://www.cnblogs.com/eastson/archive/2013/10/16/3371787.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 16 Oct 2013 06:52:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/16/3371787.html</guid><description><![CDATA[<p>system_list()函数的目的是根据传入的资源类型，返回一个数组列表：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> system_list(<span style="color: #800080;">$type</span>) { ... ... }</pre>
</div>
<p>参数$type支持下面三种类型：</p>
<ul>
<li>bootstrap：返回启动模块列表</li>
<li>module_enabled :返回模块列表</li>
<li>theme：返回主题列表</li>
</ul>
<p>三种类型里面bootstrap处理方式有点不同，module_enabled和theme是相同的。</p>
<p>&nbsp;</p>
<p>先看看bootstrap是如此处理的。这里的bootstrap指的是系统表system里面标识为bootstrap的模块，是系统的启动模块，在Drupal启动过程中需要先被载入。首先检查是否有缓存：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$cached</span> = cache_get('bootstrap_modules', 'cache_bootstrap'<span style="color: #000000;">)) {
  </span><span style="color: #800080;">$bootstrap_list</span> = <span style="color: #800080;">$cached</span>-&gt;<span style="color: #000000;">data;
}</span></pre>
</div>
<p>若没有缓存，则直接从系统表system中查询：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$bootstrap_list</span> = db_query("SELECT name, filename FROM {system} WHERE status = 1 AND bootstrap = 1 AND type = 'module' ORDER BY weight ASC, name ASC")-&gt;fetchAllAssoc('name'<span style="color: #000000;">);
cache_set(</span>'bootstrap_modules', <span style="color: #800080;">$bootstrap_list</span>, 'cache_bootstrap');</pre>
</div>
<p>然后透过drupal_get_filename()更新模块主文件路径，目的是用system表的filename字段更新drupal_get_filename()函数中的静态变量：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$bootstrap_list</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$module</span><span style="color: #000000;">) {
  drupal_get_filename(</span>'module', <span style="color: #800080;">$module</span>-&gt;name, <span style="color: #800080;">$module</span>-&gt;<span style="color: #000000;">filename);
}</span></pre>
</div>
<p>最后，更新system_list()的静态变量$lists，返回列表：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$lists</span>['bootstrap'] = <span style="color: #008080;">array_keys</span>(<span style="color: #800080;">$bootstrap_list</span><span style="color: #000000;">);
</span>... ...
<span style="color: #0000ff;">return</span> <span style="color: #800080;">$list</span>[<span style="color: #800080;">$type</span>];</pre>
</div>
<p>注意这里boostrap类型返回的只是启动模块的名称数组，没有其它额外的信息。</p>
<p>&nbsp;</p>
<p>下面看看module_enabled和theme是如何处理的。首先还是查看缓存：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$cached</span> = cache_get('system_list', 'cache_bootstrap'<span style="color: #000000;">)) {
  </span><span style="color: #800080;">$lists</span> = <span style="color: #800080;">$cached</span>-&gt;<span style="color: #000000;">data;
}</span></pre>
</div>
<p>若缓存不存在，则直接读取系统表system：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$lists</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'module_enabled' =&gt; <span style="color: #0000ff;">array</span>(),
  'theme' =&gt; <span style="color: #0000ff;">array</span>(),
  'filepaths' =&gt; <span style="color: #0000ff;">array</span>(),<span style="color: #000000;">
);

</span><span style="color: #800080;">$result</span> = db_query("SELECT * FROM {system} WHERE type = 'theme' OR (type = 'module' AND status = 1) ORDER BY weight ASC, name ASC"<span style="color: #000000;">);
</span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$result</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$record</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$record</span>-&gt;info = <span style="color: #008080;">unserialize</span>(<span style="color: #800080;">$record</span>-&gt;info); <span style="color: #008000;">//</span><span style="color: #008000;"> info字段就是资源的info文件
  
  // Build a list of all enabled modules.</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$record</span>-&gt;type == 'module'<span style="color: #000000;">) {
    </span><span style="color: #800080;">$lists</span>['module_enabled'][<span style="color: #800080;">$record</span>-&gt;name] = <span style="color: #800080;">$record</span><span style="color: #000000;">;
  }
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Build a list of themes.</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$record</span>-&gt;type == 'theme'<span style="color: #000000;">) {
    </span><span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$record</span>-&gt;name] = <span style="color: #800080;">$record</span><span style="color: #000000;">;
  }
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Build a list of filenames so drupal_get_filename can use it.</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$record</span>-&gt;<span style="color: #000000;">status) {
    </span><span style="color: #800080;">$lists</span>['filepaths'][] = <span style="color: #0000ff;">array</span>('type' =&gt; <span style="color: #800080;">$record</span>-&gt;type, 'name' =&gt; <span style="color: #800080;">$record</span>-&gt;name, 'filepath' =&gt; <span style="color: #800080;">$record</span>-&gt;<span style="color: #000000;">filename);
  }
}</span></pre>
</div>
<p>接下来处理主题的继承关系。关于主题的继承关系可以参看《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/p/3372119.html">Drupal如何解析主题继承关系？</a>》。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$lists</span>['theme'] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$key</span> =&gt; <span style="color: #800080;">$theme</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$theme</span>-&gt;info['base theme'<span style="color: #000000;">])) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Make a list of the theme's base themes.</span>
    <span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/includes/theme.inc'<span style="color: #000000;">;
    </span><span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;base_themes = drupal_find_base_themes(<span style="color: #800080;">$lists</span>['theme'], <span style="color: #800080;">$key</span><span style="color: #000000;">);
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Don't proceed if there was a problem with the root base theme.</span>
    <span style="color: #0000ff;">if</span> (!<span style="color: #008080;">current</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;<span style="color: #000000;">base_themes)) {
      </span><span style="color: #0000ff;">continue</span><span style="color: #000000;">;
    }
    
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Determine the root base theme.</span>
    <span style="color: #800080;">$base_key</span> = <span style="color: #008080;">key</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;<span style="color: #000000;">base_themes);
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Add to the list of sub-themes for each of the theme's base themes.</span>
    <span style="color: #0000ff;">foreach</span> (<span style="color: #008080;">array_keys</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;base_themes) <span style="color: #0000ff;">as</span> <span style="color: #800080;">$base_theme</span><span style="color: #000000;">) {
      </span><span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$base_theme</span>]-&gt;sub_themes[<span style="color: #800080;">$key</span>] = <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['name'<span style="color: #000000;">];
    }
    
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Add the base theme's theme engine info.</span>
    <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'] = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$base_key</span>]-&gt;info['engine']) ? <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$base_key</span>]-&gt;info['engine'] : 'theme'<span style="color: #000000;">;
  }
  </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> A plain theme is its own engine.</span>
    <span style="color: #800080;">$base_key</span> = <span style="color: #800080;">$key</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'<span style="color: #000000;">])) {
      </span><span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'] = 'theme'<span style="color: #000000;">;
    }
  }
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Set the theme engine prefix.</span>
  <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;prefix = (<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'] == 'theme') ? <span style="color: #800080;">$base_key</span> : <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'<span style="color: #000000;">];
}</span></pre>
</div>
<p>最后更新drupal_get_filename()的资源主文件路径，返回列表：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$lists</span>['filepaths'] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$item</span><span style="color: #000000;">) {
  drupal_get_filename(</span><span style="color: #800080;">$item</span>['type'], <span style="color: #800080;">$item</span>['name'], <span style="color: #800080;">$item</span>['filepath'<span style="color: #000000;">]);
}

</span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$lists</span>[<span style="color: #800080;">$type</span>];</pre>
</div>
<p>&nbsp;</p>
<p>从代码来看，system_list()也是可以调用filepaths类型的，结果也是数组：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span><span style="color: #0000ff;">array</span>('type' =&gt; '...', 'name' =&gt; '...', 'filepath' =&gt; '...'),
    <span style="color: #0000ff;">array</span>('type' =&gt; '...', 'name' =&gt; '...', 'filepath' =&gt; '...'),<span style="color: #000000;">
)</span></pre>
</div>]]></description></item><item><title>Drupal如何解析主题继承关系？</title><link>http://www.cnblogs.com/eastson/archive/2013/10/16/3372119.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 16 Oct 2013 06:39:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/16/3372119.html</guid><description><![CDATA[<p>Drupal中，主题是可以继承的，或者说是扩展。例如，要创建一个新的名为custom的主题，该主题与名为default的主题只有某些细小的差别。这个时候，不需要复制一份default到custom，可以在custom声明该主题继承自default就可以了。</p>
<p>&nbsp;</p>
<p>主题的继承关系在info文件中说明。首先，default主题的info文件不需要修改：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">name </span>= <span style="color: #0000ff;">Default</span> Theme</pre>
</div>
<p>custom主题的info文件需要特别地声明base theme属性：</p>
<div class="cnblogs_code">
<pre>name =<span style="color: #000000;"> Custom Theme</span><span style="color: #000000;">
base theme </span>= <span style="color: #0000ff;">default</span></pre>
</div>
<p>&nbsp;</p>
<p>Drupal内部是如何解析这种继承关系的呢？解析的过程发生在system_list()函数中：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$result</span> = db_query("SELECT * FROM {system} WHERE type = 'theme' OR (type = 'module' AND status = 1) ORDER BY weight ASC, name ASC"<span style="color: #000000;">);
</span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$result</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$record</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$record</span>-&gt;info = <span style="color: #008080;">unserialize</span>(<span style="color: #800080;">$record</span>-&gt;<span style="color: #000000;">info);
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Build a list of themes.</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$record</span>-&gt;type == 'theme'<span style="color: #000000;">) {
    </span><span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$record</span>-&gt;name] = <span style="color: #800080;">$record</span><span style="color: #000000;">;
  }
}

</span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$lists</span>['theme'] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$key</span> =&gt; <span style="color: #800080;">$theme</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$theme</span>-&gt;info['base theme'<span style="color: #000000;">])) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Make a list of the theme's base themes.</span>
    <span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/includes/theme.inc'<span style="color: #000000;">;
    </span><span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;base_themes = drupal_find_base_themes(<span style="color: #800080;">$lists</span>['theme'], <span style="color: #800080;">$key</span><span style="color: #000000;">);
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Don't proceed if there was a problem with the root base theme.</span>
    <span style="color: #0000ff;">if</span> (!<span style="color: #008080;">current</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;<span style="color: #000000;">base_themes)) {
      </span><span style="color: #0000ff;">continue</span><span style="color: #000000;">;
    }
    
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Determine the root base theme.</span>
    <span style="color: #800080;">$base_key</span> = <span style="color: #008080;">key</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;<span style="color: #000000;">base_themes);
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Add to the list of sub-themes for each of the theme's base themes.</span>
    <span style="color: #0000ff;">foreach</span> (<span style="color: #008080;">array_keys</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;base_themes) <span style="color: #0000ff;">as</span> <span style="color: #800080;">$base_theme</span><span style="color: #000000;">) {
      </span><span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$base_theme</span>]-&gt;sub_themes[<span style="color: #800080;">$key</span>] = <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['name'<span style="color: #000000;">];
    }
    
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Add the base theme's theme engine info.</span>
    <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'] = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$base_key</span>]-&gt;info['engine']) ? <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$base_key</span>]-&gt;info['engine'] : 'theme'<span style="color: #000000;">;
  }
  </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> A plain theme is its own engine.</span>
    <span style="color: #800080;">$base_key</span> = <span style="color: #800080;">$key</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'<span style="color: #000000;">])) {
      </span><span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'] = 'theme'<span style="color: #000000;">;
    }
  }
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Set the theme engine prefix.</span>
  <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;prefix = (<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'] == 'theme') ? <span style="color: #800080;">$base_key</span> : <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'<span style="color: #000000;">];
}</span></pre>
</div>
<p>&nbsp;</p>
<p>首先，从系统表system中读取出主题信息，记录到$lists['theme']数组：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$result</span> = db_query("SELECT * FROM {system} WHERE type = 'theme' OR (type = 'module' AND status = 1) ORDER BY weight ASC, name ASC"<span style="color: #000000;">);
</span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$result</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$record</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$record</span>-&gt;info = <span style="color: #008080;">unserialize</span>(<span style="color: #800080;">$record</span>-&gt;<span style="color: #000000;">info);
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Build a list of themes.</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$record</span>-&gt;type == 'theme'<span style="color: #000000;">) {
    </span><span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$record</span>-&gt;name] = <span style="color: #800080;">$record</span><span style="color: #000000;">;
  }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>然后，遍历$lists['theme']数组。如果声明了base theme属性，则通过drupal_find_base_themes()函数获取父主题：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/includes/theme.inc'<span style="color: #000000;">;
</span><span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;base_themes = drupal_find_base_themes(<span style="color: #800080;">$lists</span>['theme'], <span style="color: #800080;">$key</span><span style="color: #000000;">);
</span><span style="color: #008000;">//</span><span style="color: #008000;"> Don't proceed if there was a problem with the root base theme.</span>
<span style="color: #0000ff;">if</span> (!<span style="color: #008080;">current</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;<span style="color: #000000;">base_themes)) {
  </span><span style="color: #0000ff;">continue</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>drupal_find_base_theme()返回的是一个数组。在当前例子中，返回的数组是array('default' =&gt; 'Default Theme')。主题也是可以多重继承的，假设default主题再继承自top主题，drupal_find_base_theme()返回的数组则是array('top' =&gt; 'Top Theme',&nbsp;'default' =&gt; 'Default Theme')。base_themes数组是有序的，最顶层的主题在最前面，然后依次下来。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_find_base_themes(<span style="color: #800080;">$themes</span>, <span style="color: #800080;">$key</span>, <span style="color: #800080;">$used_keys</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">()) {
  </span><span style="color: #800080;">$base_key</span> = <span style="color: #800080;">$themes</span>[<span style="color: #800080;">$key</span>]-&gt;info['base theme'<span style="color: #000000;">];
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Does the base theme exist?</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$themes</span>[<span style="color: #800080;">$base_key</span><span style="color: #000000;">])) {
    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">array</span>(<span style="color: #800080;">$base_key</span> =&gt; <span style="color: #0000ff;">NULL</span><span style="color: #000000;">);
  }

  </span><span style="color: #800080;">$current_base_theme</span> = <span style="color: #0000ff;">array</span>(<span style="color: #800080;">$base_key</span> =&gt; <span style="color: #800080;">$themes</span>[<span style="color: #800080;">$base_key</span>]-&gt;info['name'<span style="color: #000000;">]);

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Is the base theme itself a child of another theme?</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$themes</span>[<span style="color: #800080;">$base_key</span>]-&gt;info['base theme'<span style="color: #000000;">])) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Do we already know the base themes of this theme?</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$themes</span>[<span style="color: #800080;">$base_key</span>]-&gt;<span style="color: #000000;">base_themes)) {
      </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$themes</span>[<span style="color: #800080;">$base_key</span>]-&gt;base_themes + <span style="color: #800080;">$current_base_theme</span><span style="color: #000000;">;
    }
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Prevent loops.</span>
    <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$used_keys</span>[<span style="color: #800080;">$base_key</span><span style="color: #000000;">])) {
      </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">array</span>(<span style="color: #800080;">$base_key</span> =&gt; <span style="color: #0000ff;">NULL</span><span style="color: #000000;">);
    }
    </span><span style="color: #800080;">$used_keys</span>[<span style="color: #800080;">$base_key</span>] = <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">return</span> drupal_find_base_themes(<span style="color: #800080;">$themes</span>, <span style="color: #800080;">$base_key</span>, <span style="color: #800080;">$used_keys</span>) + <span style="color: #800080;">$current_base_theme</span><span style="color: #000000;">;
  }
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> If we get here, then this is our parent theme.</span>
  <span style="color: #0000ff;">return</span> <span style="color: #800080;">$current_base_theme</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>接下来得到root base theme，base_themes数组中的第一个key，上例中是top。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Determine the root base theme.</span>
<span style="color: #800080;">$base_key</span> = <span style="color: #008080;">key</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;base_themes);</pre>
</div>
<p>&nbsp;</p>
<p>再后，更新每个base theme的sub_themes属性。sub_themes是无序的，取决于于主题加载顺序。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Add to the list of sub-themes for each of the theme's base themes.</span>
<span style="color: #0000ff;">foreach</span> (<span style="color: #008080;">array_keys</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;base_themes) <span style="color: #0000ff;">as</span> <span style="color: #800080;">$base_theme</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$base_theme</span>]-&gt;sub_themes[<span style="color: #800080;">$key</span>] = <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['name'<span style="color: #000000;">];
}</span></pre>
</div>
<p>&nbsp;</p>
<p>最后，设置引擎前缀engine prefix，就是主题解析函数都是以什么开头的。注意变量$base_key，当有继承存在，$base_key代表root base theme，否则就是current theme。当前主题有声明engine属性时，prefix就是engine属性，否则就是$base_key。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$theme</span>-&gt;info['base theme'<span style="color: #000000;">])) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Determine the root base theme.</span>
  <span style="color: #800080;">$base_key</span> = <span style="color: #008080;">key</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;<span style="color: #000000;">base_themes);
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Add the base theme's theme engine info.</span>
  <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'] = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$base_key</span>]-&gt;info['engine']) ? <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$base_key</span>]-&gt;info['engine'] : 'theme'<span style="color: #000000;">;
}
</span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> A plain theme is its own engine.</span>
  <span style="color: #800080;">$base_key</span> = <span style="color: #800080;">$key</span><span style="color: #000000;">;
  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'<span style="color: #000000;">])) {
    </span><span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'] = 'theme'<span style="color: #000000;">;
  }
}

</span><span style="color: #008000;">//</span><span style="color: #008000;"> Set the theme engine prefix.</span>
<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;prefix = (<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'] == 'theme') ? <span style="color: #800080;">$base_key</span> : <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'];</pre>
</div>]]></description></item><item><title>Drupal所能够理解的资源</title><link>http://www.cnblogs.com/eastson/archive/2013/10/14/3368493.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 14 Oct 2013 09:10:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/14/3368493.html</guid><description><![CDATA[<h3>Drupal能够识别哪些资源类型？</h3>
<p>profile，不知道怎么翻译，应该是指安装类型，固定地存放于profiles目录下。<br /><img src="http://images.cnitblog.com/blog/111826/201310/14155700-668b5ba9197d47209063ae2ffb11a7a8.png" alt="" /></p>
<p>&nbsp;</p>
<p>module，模块，可以存在于多个目录下：modules、profiles/{profile}/modules、sites/all/modules、sites/{$site}/modules。<br /><span style="line-height: 1.5;">theme，主题，可以存在于多个目录下：themes、profiles/{profile}/themes、sites/all/themes、sites/{$site}/themes。<br />theme_engine，主题引擎，可以存在于多个目录下：themes/engines、profiles/{profile}/themes/engines、sites/all/themes/engines、sites/{$site}/themes/engines。<br /></span></p>
<p>&nbsp;</p>
<p><span style="line-height: 1.5;">Drupal识别的这些资源都可以注册到系统表system里面，用资源主文件作为key，用type字段表示资源类型。<br /><img src="http://images.cnitblog.com/blog/111826/201310/14160448-b1fba843cb874681a162b27c5f013686.png" alt="" /><br /></span></p>
<p>&nbsp;</p>
<h3><span style="line-height: 1.5;">Drupal如何找到指定的资源？</span></h3>
<p><span style="line-height: 1.5;">Drupal使用drupal_get_filename()和</span>drupal_system_listing<span style="line-height: 1.5;">()两个函数配合来寻找指定的资源。</span></p>
<p><em id="__mceDel"><span style="line-height: 1.5;">最先进入的是drupal_get_filename()函数，该函数以资源类型和资源名称作为传入参数：<br /></span></em></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_get_filename(<span style="color: #800080;">$type</span>, <span style="color: #800080;">$name</span>, <span style="color: #800080;">$filename</span> = <span style="color: #0000ff;">NULL</span>)  { ... ... }</pre>
</div>
<p>&nbsp;&nbsp;</p>
<p>profile资源固定地存放在profiles目录下，这是在代码里面固定写死了的：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$type</span> == 'profile'<span style="color: #000000;">) {
    </span><span style="color: #800080;">$profile_filename</span> = "profiles/<span style="color: #800080;">$name</span>/<span style="color: #800080;">$name</span>.profile"<span style="color: #000000;">;
    </span><span style="color: #800080;">$files</span>[<span style="color: #800080;">$type</span>][<span style="color: #800080;">$name</span>] = <span style="color: #008080;">file_exists</span>(<span style="color: #800080;">$profile_filename</span>) ? <span style="color: #800080;">$profile_filename</span> : <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">;
  }</span></pre>
</div>
<p>&nbsp;</p>
<p>然后在系统表system中搜索对应的资源类型和名称是否有存在。若存在，代表该资源已经安装过，直接返回其key就是资源主文件。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>('db_query'<span style="color: #000000;">)) {
  </span><span style="color: #800080;">$file</span> = db_query("SELECT filename FROM {system} WHERE name = :name AND type = :type", <span style="color: #0000ff;">array</span>(':name' =&gt; <span style="color: #800080;">$name</span>, ':type' =&gt; <span style="color: #800080;">$type</span>))-&gt;<span style="color: #000000;">fetchField();
  </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">file_exists</span>(DRUPAL_ROOT . '/' . <span style="color: #800080;">$file</span><span style="color: #000000;">)) {
    </span><span style="color: #800080;">$files</span>[<span style="color: #800080;">$type</span>][<span style="color: #800080;">$name</span>] = <span style="color: #800080;">$file</span><span style="color: #000000;">;
  }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>在system表找不到对应的资源，Drupal就直接去检查对应的目录是否存在。Drupal规定了每种资源的目录和主文件命名规则：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$dir</span> = <span style="color: #800080;">$type</span> . 's'<span style="color: #000000;">;
</span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$type</span> == 'theme_engine'<span style="color: #000000;">) {
  </span><span style="color: #800080;">$dir</span> = 'themes/engines'<span style="color: #000000;">;
  </span><span style="color: #800080;">$extension</span> = 'engine'<span style="color: #000000;">;
}
</span><span style="color: #0000ff;">elseif</span> (<span style="color: #800080;">$type</span> == 'theme'<span style="color: #000000;">) {
  </span><span style="color: #800080;">$extension</span> = 'info'<span style="color: #000000;">;
}
</span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
  </span><span style="color: #800080;">$extension</span> = <span style="color: #800080;">$type</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>资源目录命名规则是以资源类型加上s后缀，theme_engine例外，theme_engine目录是themes/engines。<br />资源主文件命名规则是资源名称加上资源类型后缀。theme和theme_engine的后缀例外，theme后缀是info，theme_engine后缀是engine。</p>
<p>&nbsp;</p>
<p>每种资源都有多个目录可以存放，Drupal使用drupal_system_listing()函数定义其搜索顺序。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_system_listing(<span style="color: #800080;">$mask</span>, <span style="color: #800080;">$directory</span>, <span style="color: #800080;">$key</span> = 'name', <span style="color: #800080;">$min_depth</span> = 1<span style="color: #000000;">) {
  </span><span style="color: #800080;">$config</span> =<span style="color: #000000;"> conf_path();

  </span><span style="color: #800080;">$searchdir</span> = <span style="color: #0000ff;">array</span>(<span style="color: #800080;">$directory</span><span style="color: #000000;">);
  </span><span style="color: #800080;">$files</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> The 'profiles' directory contains pristine collections of modules and
  // themes as organized by a distribution. It is pristine in the same way
  // that /modules is pristine for core; users should avoid changing anything
  // there in favor of sites/all or sites/&lt;domain&gt; directories.</span>
  <span style="color: #800080;">$profiles</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
  </span><span style="color: #800080;">$profile</span> =<span style="color: #000000;"> drupal_get_profile();

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> In case both profile directories contain the same extension, the actual
  // profile always has precedence.</span>
  <span style="color: #800080;">$profiles</span>[] = <span style="color: #800080;">$profile</span><span style="color: #000000;">;
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$profiles</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$profile</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">file_exists</span>("profiles/<span style="color: #800080;">$profile</span>/<span style="color: #800080;">$directory</span>"<span style="color: #000000;">)) {
      </span><span style="color: #800080;">$searchdir</span>[] = "profiles/<span style="color: #800080;">$profile</span>/<span style="color: #800080;">$directory</span>"<span style="color: #000000;">;
    }
  }

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Always search sites/all/* as well as the global directories.</span>
  <span style="color: #800080;">$searchdir</span>[] = 'sites/all/' . <span style="color: #800080;">$directory</span><span style="color: #000000;">;

  </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">file_exists</span>("<span style="color: #800080;">$config</span>/<span style="color: #800080;">$directory</span>"<span style="color: #000000;">)) {
    </span><span style="color: #800080;">$searchdir</span>[] = "<span style="color: #800080;">$config</span>/<span style="color: #800080;">$directory</span>"<span style="color: #000000;">;
  }

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Get current list of items.</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #008080;">function_exists</span>('file_scan_directory'<span style="color: #000000;">)) {
    </span><span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/includes/file.inc'<span style="color: #000000;">;
  }
  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$searchdir</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$dir</span><span style="color: #000000;">) {
    </span><span style="color: #800080;">$files_to_add</span> = file_scan_directory(<span style="color: #800080;">$dir</span>, <span style="color: #800080;">$mask</span>, <span style="color: #0000ff;">array</span>('key' =&gt; <span style="color: #800080;">$key</span>, 'min_depth' =&gt; <span style="color: #800080;">$min_depth</span><span style="color: #000000;">));

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Duplicate files found in later search directories take precedence over
    // earlier ones, so we want them to overwrite keys in our resulting
    // $files array.
    // The exception to this is if the later file is from a module or theme not
    // compatible with Drupal core. This may occur during upgrades of Drupal
    // core when new modules exist in core while older contrib modules with the
    // same name exist in a directory such as sites/all/modules/.</span>
    <span style="color: #0000ff;">foreach</span> (array_intersect_key(<span style="color: #800080;">$files_to_add</span>, <span style="color: #800080;">$files</span>) <span style="color: #0000ff;">as</span> <span style="color: #800080;">$file_key</span> =&gt; <span style="color: #800080;">$file</span><span style="color: #000000;">) {
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> If it has no info file, then we just behave liberally and accept the
      // new resource on the list for merging.</span>
      <span style="color: #0000ff;">if</span> (<span style="color: #008080;">file_exists</span>(<span style="color: #800080;">$info_file</span> = <span style="color: #008080;">dirname</span>(<span style="color: #800080;">$file</span>-&gt;uri) . '/' . <span style="color: #800080;">$file</span>-&gt;name . '.info'<span style="color: #000000;">)) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Get the .info file for the module or theme this file belongs to.</span>
        <span style="color: #800080;">$info</span> = drupal_parse_info_file(<span style="color: #800080;">$info_file</span><span style="color: #000000;">);

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> If the module or theme is incompatible with Drupal core, remove it
        // from the array for the current search directory, so it is not
        // overwritten when merged with the $files array.</span>
        <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['core']) &amp;&amp; <span style="color: #800080;">$info</span>['core'] !=<span style="color: #000000;"> DRUPAL_CORE_COMPATIBILITY) {
          </span><span style="color: #0000ff;">unset</span>(<span style="color: #800080;">$files_to_add</span>[<span style="color: #800080;">$file_key</span><span style="color: #000000;">]);
        }
      }
    }
    </span><span style="color: #800080;">$files</span> = <span style="color: #008080;">array_merge</span>(<span style="color: #800080;">$files</span>, <span style="color: #800080;">$files_to_add</span><span style="color: #000000;">);
  }

  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$files</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>这里举一个搜索hello模块的例子来说明搜索的过程。根据上面的资源命名规则可以知道，模块目录的命名规则是资源类型加s后缀，也就是modules。然后模块主文件的命名规则是资源名称加上资源类型后缀，也就是hello.module。好了，现在我们要找的就是modules/hello/hello.module文件。那到哪里去找这个文件呢？drupal_system_listing()会依次搜索以下四个位置：</p>
<ul>
<li>modules/hello/hello.module</li>
<li><span style="line-height: 1.5;">profiles/</span>drupal_get_profile()/modules/hello/hello.module</li>
<li style="line-height: 1.5;">sites/all/modules/hello/hello.module</li>
<li style="line-height: 1.5;"><span style="line-height: 1.5;">sites/conf_path()/modules/hello/hello.module</span></li>
</ul>
<p><span style="line-height: 1.5;">找到了就OK，找不到就说明hello模块不存在。</span></p>
<p>&nbsp;</p>
<h3><span style="line-height: 1.5;">Drupal如何载入指定资源？</span></h3>
<p><span style="line-height: 1.5;">Drupal用drupal_load()函数载入资源。首先用drupal_get_filename()得到资源主文件，然后简单的include_once就完了。<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_load(<span style="color: #800080;">$type</span>, <span style="color: #800080;">$name</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">static</span> <span style="color: #800080;">$files</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();

  </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$files</span>[<span style="color: #800080;">$type</span>][<span style="color: #800080;">$name</span><span style="color: #000000;">])) {
    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;
  }

  </span><span style="color: #800080;">$filename</span> = drupal_get_filename(<span style="color: #800080;">$type</span>, <span style="color: #800080;">$name</span><span style="color: #000000;">);

  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$filename</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">include_once</span> DRUPAL_ROOT . '/' . <span style="color: #800080;">$filename</span><span style="color: #000000;">;
    </span><span style="color: #800080;">$files</span>[<span style="color: #800080;">$type</span>][<span style="color: #800080;">$name</span>] = <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;

    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;
  }

  </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">;
}</span></pre>
</div>]]></description></item><item><title>Drupal启动阶段之三：数据库</title><link>http://www.cnblogs.com/eastson/archive/2013/10/11/3363635.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 11 Oct 2013 08:02:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/11/3363635.html</guid><description><![CDATA[<p>Drupal在数据库启动阶段仅仅是简单地包含了database.inc文件，然后再注册类加载器：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> _drupal_bootstrap_database() {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Initialize the database system. Note that the connection
  // won't be initialized until it is actually requested.</span>
  <span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/includes/database/database.inc'<span style="color: #000000;">;

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Register autoload functions so that we can access classes and interfaces.
  // The database autoload routine comes first so that we can load the database
  // system without hitting the database. That is especially important during
  // the install or upgrade process.</span>
  spl_autoload_register('drupal_autoload_class'<span style="color: #000000;">);
  spl_autoload_register(</span>'drupal_autoload_interface'<span style="color: #000000;">);
}</span></pre>
</div>
<p>&nbsp;</p>
<p>为什么要在database.inc之后注册类加载器？这是因为Drupal的类加载器使用了后台数据库一个名为registry的表，在加载类时会查询该表，所以必须放在database.inc之后。关于Drupal的类加载器可以参考《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/p/3352170.html">Drupal如何实现类的自动加载？</a>》。</p>
<p>&nbsp;</p>
<p>必须要注意关于database.inc的这段备注：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Initialize the database system. Note that the connection
// won't be initialized until it is actually requested.</span></pre>
</div>
<p>当前数据库还没有连接，只有真正的请求到来时才会执行连接。</p>]]></description></item><item><title>Drupal显示白屏或500？</title><link>http://www.cnblogs.com/eastson/archive/2013/10/10/3361465.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 10 Oct 2013 08:03:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/10/3361465.html</guid><description><![CDATA[<p>Drupal有时会显示白屏，或者500内部错误，这多半是由于PHP脚本什么地方有问题造成的。这个时候，可以先看看php.log里面有没有提示：</p>
<div class="cnblogs_code">
<pre><span style="color: #800000; font-weight: bold;">[</span><span style="color: #800000;">10-Oct-2013 15:55:26 Asia/Shanghai</span><span style="color: #800000; font-weight: bold;">]</span> PHP Fatal error:  Call to undefined function xxxxxx() in C:\Program Files\Zend\Apache2\htdocs\drupal\index.php on line 24</pre>
</div>
<p>也可以将display_errors选项开启，使php将所有的信息都显示出来：</p>
<div class="cnblogs_code">
<pre>error_reporting(E_ALL)<span style="color: #008000;">;
</span>ini_set('display_errors', 1)<span style="color: #008000;">;</span></pre>
</div>
<p>&nbsp;</p>
<p>总结一下：<strong>PHP有错时，默认的，服务器会返回500&nbsp;Internal Server Error。但是如果开启了display_errors，服务器会返回200 OK，认为这是一个正常的响应，只是响应内容为错误信息而已。</strong></p>]]></description></item><item><title>ZendServer中关于php.ini不同环境的建议</title><link>http://www.cnblogs.com/eastson/archive/2013/10/10/3361391.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 10 Oct 2013 07:38:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/10/3361391.html</guid><description><![CDATA[<p>ZendServer根据开发环境和产品环境的不同情况，对php.ini中的一些选项做了建议设置，列表如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">;</span><span style="color: #008000;">;;;;;;;;;;;;;;;;;;</span><span style="color: #008000;">
;</span><span style="color: #008000;"> Quick Reference ;</span><span style="color: #008000;">
;</span><span style="color: #008000;">;;;;;;;;;;;;;;;;;;</span><span style="color: #008000;">
;</span><span style="color: #008000;"> The following are all the settings which are different in either the production</span><span style="color: #008000;">
;</span><span style="color: #008000;"> or development versions of the INIs with respect to PHP's default behavior.</span><span style="color: #008000;">
;</span><span style="color: #008000;"> Please see the actual settings later in the document for more details as to why</span><span style="color: #008000;">
;</span><span style="color: #008000;"> we recommend these changes in PHP's behavior.</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> display_errors</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: On</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: On</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: Off</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> display_startup_errors</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: Off</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: On</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: Off</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> error_reporting</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: E_ALL &amp; ~E_NOTICE &amp; ~E_STRICT &amp; ~E_DEPRECATED</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: E_ALL</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: E_ALL &amp; ~E_DEPRECATED &amp; ~E_STRICT</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> html_errors</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: On</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: On</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production value: On</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> log_errors</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: Off</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: On</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: On</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> max_input_time</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: -1 (Unlimited)</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: 60 (60 seconds)</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: 60 (60 seconds)</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> output_buffering</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: Off</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: 4096</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: 4096</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> register_argc_argv</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: On</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: Off</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: Off</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> request_order</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: None</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: "GP"</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: "GP"</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> session.bug_compat_42</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: On</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: On</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: Off</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> session.bug_compat_warn</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: On</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: On</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: Off</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> session.gc_divisor</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: 100</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: 1000</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: 1000</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> session.hash_bits_per_character</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: 4</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: 5</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: 5</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> short_open_tag</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: On</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: Off</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: Off</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> track_errors</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: Off</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: On</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: Off</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> url_rewriter.tags</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: "a=href,area=href,frame=src,form=,fieldset="</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: "a=href,area=href,frame=src,input=src,form=fakeentry"</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: "a=href,area=href,frame=src,input=src,form=fakeentry"</span>

<span style="color: #008000;">;</span><span style="color: #008000;"> variables_order</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Default Value: "EGPCS"</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Development Value: "GPCS"</span><span style="color: #008000;">
;</span><span style="color: #008000;">   Production Value: "GPCS"</span></pre>
</div>]]></description></item><item><title>Drupal的错误和异常处理</title><link>http://www.cnblogs.com/eastson/archive/2013/10/10/3360751.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 10 Oct 2013 03:48:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/10/3360751.html</guid><description><![CDATA[<p>Drupal在配置阶段的最开始就设置了自己的错误处理器和异常处理器：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> _drupal_bootstrap_configuration() {
  </span><span style="color: #008080;">set_error_handler</span>('_drupal_error_handler'<span style="color: #000000;">);
  </span><span style="color: #008080;">set_exception_handler</span>('_drupal_exception_handler'<span style="color: #000000;">);
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> ... ...</span>
}</pre>
</div>
<p>&nbsp;</p>
<p>先来看看错误处理器_drupal_error_handler()是如何做的？</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> _drupal_error_handler(<span style="color: #800080;">$error_level</span>, <span style="color: #800080;">$message</span>, <span style="color: #800080;">$filename</span>, <span style="color: #800080;">$line</span>, <span style="color: #800080;">$context</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/includes/errors.inc'<span style="color: #000000;">;
  _drupal_error_handler_real(</span><span style="color: #800080;">$error_level</span>, <span style="color: #800080;">$message</span>, <span style="color: #800080;">$filename</span>, <span style="color: #800080;">$line</span>, <span style="color: #800080;">$context</span><span style="color: #000000;">);
}</span></pre>
</div>
<p>调用了_drupal_error_handler_real()函数，该函数与当前error_reporting()比较，判断当前错误是否需要被处理：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> _drupal_error_handler_real(<span style="color: #800080;">$error_level</span>, <span style="color: #800080;">$message</span>, <span style="color: #800080;">$filename</span>, <span style="color: #800080;">$line</span>, <span style="color: #800080;">$context</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$error_level</span> &amp; <span style="color: #008080;">error_reporting</span><span style="color: #000000;">()) {
    </span><span style="color: #800080;">$types</span> =<span style="color: #000000;"> drupal_error_levels();
    </span><span style="color: #0000ff;">list</span>(<span style="color: #800080;">$severity_msg</span>, <span style="color: #800080;">$severity_level</span>) = <span style="color: #800080;">$types</span>[<span style="color: #800080;">$error_level</span><span style="color: #000000;">];
    </span><span style="color: #800080;">$caller</span> = _drupal_get_last_caller(<span style="color: #008080;">debug_backtrace</span><span style="color: #000000;">());

    </span><span style="color: #0000ff;">if</span> (!<span style="color: #008080;">function_exists</span>('filter_xss_admin'<span style="color: #000000;">)) {
      </span><span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/includes/common.inc'<span style="color: #000000;">;
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> We treat recoverable errors as fatal.</span>
    _drupal_log_error(<span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>'%type' =&gt; <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$types</span>[<span style="color: #800080;">$error_level</span>]) ? <span style="color: #800080;">$severity_msg</span> : 'Unknown error',
      <span style="color: #008000;">//</span><span style="color: #008000;"> The standard PHP error handler considers that the error messages
      // are HTML. We mimick this behavior here.</span>
      '!message' =&gt; filter_xss_admin(<span style="color: #800080;">$message</span>),
      '%function' =&gt; <span style="color: #800080;">$caller</span>['function'],
      '%file' =&gt; <span style="color: #800080;">$caller</span>['file'],
      '%line' =&gt; <span style="color: #800080;">$caller</span>['line'],
      'severity_level' =&gt; <span style="color: #800080;">$severity_level</span>,<span style="color: #000000;">
    )</span>, <span style="color: #800080;">$error_level</span> ==<span style="color: #000000;"> E_RECOVERABLE_ERROR);
  }
}</span></pre>
</div>
<p>重点是_drupal_log_error()函数，该函数具体地处理错误逻辑：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> _drupal_log_error(<span style="color: #800080;">$error</span>, <span style="color: #800080;">$fatal</span> = <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Initialize a maintenance theme if the bootstrap was not complete.
  // Do it early because drupal_set_message() triggers a drupal_theme_initialize().</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$fatal</span> &amp;&amp; (drupal_get_bootstrap_phase() !=<span style="color: #000000;"> DRUPAL_BOOTSTRAP_FULL)) {
    </span><span style="color: #0000ff;">unset</span>(<span style="color: #800080;">$GLOBALS</span>['theme'<span style="color: #000000;">]);
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #008080;">defined</span>('MAINTENANCE_MODE'<span style="color: #000000;">)) {
      </span><span style="color: #008080;">define</span>('MAINTENANCE_MODE', 'error'<span style="color: #000000;">);
    }
    drupal_maintenance_theme();
  }

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> When running inside the testing framework, we relay the errors
  // to the tested site by the way of HTTP headers.</span>
  <span style="color: #800080;">$test_info</span> = &amp;<span style="color: #800080;">$GLOBALS</span>['drupal_test_info'<span style="color: #000000;">];
  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$test_info</span>['in_child_site']) &amp;&amp; !<span style="color: #008080;">headers_sent</span>() &amp;&amp; (!<span style="color: #008080;">defined</span>('SIMPLETEST_COLLECT_ERRORS') ||<span style="color: #000000;"> SIMPLETEST_COLLECT_ERRORS)) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> $number does not use drupal_static as it should not be reset
    // as it uniquely identifies each PHP error.</span>
    <span style="color: #0000ff;">static</span> <span style="color: #800080;">$number</span> = 0<span style="color: #000000;">;
    </span><span style="color: #800080;">$assertion</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span><span style="color: #800080;">$error</span>['!message'],
      <span style="color: #800080;">$error</span>['%type'],
      <span style="color: #0000ff;">array</span><span style="color: #000000;">(
        </span>'function' =&gt; <span style="color: #800080;">$error</span>['%function'],
        'file' =&gt; <span style="color: #800080;">$error</span>['%file'],
        'line' =&gt; <span style="color: #800080;">$error</span>['%line'],<span style="color: #000000;">
      )</span>,<span style="color: #000000;">
    );
    </span><span style="color: #008080;">header</span>('X-Drupal-Assertion-' . <span style="color: #800080;">$number</span> . ': ' . <span style="color: #008080;">rawurlencode</span>(<span style="color: #008080;">serialize</span>(<span style="color: #800080;">$assertion</span><span style="color: #000000;">)));
    </span><span style="color: #800080;">$number</span>++<span style="color: #000000;">;
  }

  watchdog(</span>'php', '%type: !message in %function (line %line of %file).', <span style="color: #800080;">$error</span>, <span style="color: #800080;">$error</span>['severity_level'<span style="color: #000000;">]);

  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$fatal</span><span style="color: #000000;">) {
    drupal_add_http_header(</span>'Status', '500 Service unavailable (with message)'<span style="color: #000000;">);
  }

  </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (drupal_is_cli()) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$fatal</span><span style="color: #000000;">) {
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> When called from CLI, simply output a plain text message.</span>
      <span style="color: #0000ff;">print</span> <span style="color: #008080;">html_entity_decode</span>(<span style="color: #008080;">strip_tags</span>(t('%type: !message in %function (line %line of %file).', <span style="color: #800080;">$error</span>))). "\n"<span style="color: #000000;">;
      </span><span style="color: #0000ff;">exit</span><span style="color: #000000;">;
    }
  }

  </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_X_REQUESTED_WITH']) &amp;&amp; <span style="color: #800080;">$_SERVER</span>['HTTP_X_REQUESTED_WITH'] == 'XMLHttpRequest'<span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$fatal</span><span style="color: #000000;">) {
      </span><span style="color: #0000ff;">if</span> (error_displayable(<span style="color: #800080;">$error</span><span style="color: #000000;">)) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> When called from JavaScript, simply output the error message.</span>
        <span style="color: #0000ff;">print</span> t('%type: !message in %function (line %line of %file).', <span style="color: #800080;">$error</span><span style="color: #000000;">);
      }
      </span><span style="color: #0000ff;">exit</span><span style="color: #000000;">;
    }
  }
  </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Display the message if the current error reporting level allows this type
    // of message to be displayed, and unconditionnaly in update.php.</span>
    <span style="color: #0000ff;">if</span> (error_displayable(<span style="color: #800080;">$error</span><span style="color: #000000;">)) {
      </span><span style="color: #800080;">$class</span> = 'error'<span style="color: #000000;">;

      </span><span style="color: #008000;">//</span><span style="color: #008000;"> If error type is 'User notice' then treat it as debug information
      // instead of an error message, see dd().</span>
      <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$error</span>['%type'] == 'User notice'<span style="color: #000000;">) {
        </span><span style="color: #800080;">$error</span>['%type'] = 'Debug'<span style="color: #000000;">;
        </span><span style="color: #800080;">$class</span> = 'status'<span style="color: #000000;">;
      }

      drupal_set_message(t(</span>'%type: !message in %function (line %line of %file).', <span style="color: #800080;">$error</span>), <span style="color: #800080;">$class</span><span style="color: #000000;">);
    }

    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$fatal</span><span style="color: #000000;">) {
      drupal_set_title(t(</span>'Error'<span style="color: #000000;">));
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> We fallback to a maintenance page at this point, because the page generation
      // itself can generate errors.</span>
      <span style="color: #0000ff;">print</span> theme('maintenance_page', <span style="color: #0000ff;">array</span>('content' =&gt; t('The website encountered an unexpected error. Please try again later.'<span style="color: #000000;">)));
      </span><span style="color: #0000ff;">exit</span><span style="color: #000000;">;
    }
  }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>有两点需要先说一下：<br /><span>1. 什么是严重错误$fatal？$error_level == E_RECOVERABLE_ERROR，还有异常也是严重错误。<br /></span>2. 哪些错误可以显示error_displayable($error)==TRUE？这是在Drupal系统配置中设置的：<br /><img src="http://images.cnitblog.com/blog/111826/201310/10113513-776a1d98debd41198347f95a7768d4c9.png" alt="" /></p>
<p>&nbsp;</p>
<p>在_drupal_log_error()函数中，首先检查是否是在启动过程中发生的严重地不可恢复错误，如果是不可恢复的错误，则切换到维护显示主题:</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$fatal</span> &amp;&amp; (drupal_get_bootstrap_phase() !=<span style="color: #000000;"> DRUPAL_BOOTSTRAP_FULL)) {
  </span><span style="color: #0000ff;">unset</span>(<span style="color: #800080;">$GLOBALS</span>['theme'<span style="color: #000000;">]);
  </span><span style="color: #0000ff;">if</span> (!<span style="color: #008080;">defined</span>('MAINTENANCE_MODE'<span style="color: #000000;">)) {
    </span><span style="color: #008080;">define</span>('MAINTENANCE_MODE', 'error'<span style="color: #000000;">);
  }
  drupal_maintenance_theme();
}</span></pre>
</div>
<p>检查是否运行在SimpleTest框架，如果是，则需要为SimpleTest返回一个包含错误信息的HTTP头：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$test_info</span> = &amp;<span style="color: #800080;">$GLOBALS</span>['drupal_test_info'<span style="color: #000000;">];
</span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$test_info</span>['in_child_site']) &amp;&amp; !<span style="color: #008080;">headers_sent</span>() &amp;&amp; (!<span style="color: #008080;">defined</span>('SIMPLETEST_COLLECT_ERRORS') ||<span style="color: #000000;"> SIMPLETEST_COLLECT_ERRORS)) {
  </span><span style="color: #0000ff;">static</span> <span style="color: #800080;">$number</span> = 0<span style="color: #000000;">;
  </span><span style="color: #800080;">$assertion</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span><span style="color: #800080;">$error</span>['!message'],
    <span style="color: #800080;">$error</span>['%type'],
    <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>'function' =&gt; <span style="color: #800080;">$error</span>['%function'],
      'file' =&gt; <span style="color: #800080;">$error</span>['%file'],
      'line' =&gt; <span style="color: #800080;">$error</span>['%line'],<span style="color: #000000;">
    )</span>,<span style="color: #000000;">
  );
  </span><span style="color: #008080;">header</span>('X-Drupal-Assertion-' . <span style="color: #800080;">$number</span> . ': ' . <span style="color: #008080;">rawurlencode</span>(<span style="color: #008080;">serialize</span>(<span style="color: #800080;">$assertion</span><span style="color: #000000;">)));
  </span><span style="color: #800080;">$number</span>++<span style="color: #000000;">;
}</span></pre>
</div>
<p>然后调用watchdog()记录错误信息。watchdog()使用了钩子，这样允许开发人员自定义模块将错误信息记录到各种不同的地方。默认的Drupal使用dblog模块将错误信息保存到后台数据库watchdog表中。</p>
<div class="cnblogs_code">
<pre>watchdog('php', '%type: !message in %function (line %line of %file).', <span style="color: #800080;">$error</span>, <span style="color: #800080;">$error</span>['severity_level'<span style="color: #000000;">]);

</span><span style="color: #0000ff;">function</span> watchdog(<span style="color: #800080;">$type</span>, <span style="color: #800080;">$message</span>, <span style="color: #800080;">$variables</span> = <span style="color: #0000ff;">array</span>(), <span style="color: #800080;">$severity</span> = WATCHDOG_NOTICE, <span style="color: #800080;">$link</span> = <span style="color: #0000ff;">NULL</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$user</span>, <span style="color: #800080;">$base_root</span><span style="color: #000000;">;

  </span><span style="color: #0000ff;">static</span> <span style="color: #800080;">$in_error_state</span> = <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">;

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> It is possible that the error handling will itself trigger an error. In that case, we could
  // end up in an infinite loop. To avoid that, we implement a simple static semaphore.</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #800080;">$in_error_state</span> &amp;&amp; <span style="color: #008080;">function_exists</span>('module_implements'<span style="color: #000000;">)) {
    </span><span style="color: #800080;">$in_error_state</span> = <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> The user object may not exist in all conditions, so 0 is substituted if needed.</span>
    <span style="color: #800080;">$user_uid</span> = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$user</span>-&gt;uid) ? <span style="color: #800080;">$user</span>-&gt;uid : 0<span style="color: #000000;">;

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Prepare the fields to be logged</span>
    <span style="color: #800080;">$log_entry</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>'type'        =&gt; <span style="color: #800080;">$type</span>,
      'message'     =&gt; <span style="color: #800080;">$message</span>,
      'variables'   =&gt; <span style="color: #800080;">$variables</span>,
      'severity'    =&gt; <span style="color: #800080;">$severity</span>,
      'link'        =&gt; <span style="color: #800080;">$link</span>,
      'user'        =&gt; <span style="color: #800080;">$user</span>,
      'uid'         =&gt; <span style="color: #800080;">$user_uid</span>,
      'request_uri' =&gt; <span style="color: #800080;">$base_root</span> . request_uri(),
      'referer'     =&gt; <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_REFERER']) ? <span style="color: #800080;">$_SERVER</span>['HTTP_REFERER'] : '',
      'ip'          =&gt; ip_address(),
      <span style="color: #008000;">//</span><span style="color: #008000;"> Request time isn't accurate for long processes, use time() instead.</span>
      'timestamp'   =&gt; <span style="color: #008080;">time</span>(),<span style="color: #000000;">
    );

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Call the logging hooks to log/process the message</span>
    <span style="color: #0000ff;">foreach</span> (module_implements('watchdog') <span style="color: #0000ff;">as</span> <span style="color: #800080;">$module</span><span style="color: #000000;">) {
      module_invoke(</span><span style="color: #800080;">$module</span>, 'watchdog', <span style="color: #800080;">$log_entry</span><span style="color: #000000;">);
    }

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> It is critical that the semaphore is only cleared here, in the parent
    // watchdog() call (not outside the loop), to prevent recursive execution.</span>
    <span style="color: #800080;">$in_error_state</span> = <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">;
  }
}
<br />// dblog模块
</span><span style="color: #0000ff;">function</span> dblog_watchdog(<span style="color: #0000ff;">array</span> <span style="color: #800080;">$log_entry</span><span style="color: #000000;">) {
  Database</span>::getConnection('default', 'default')-&gt;insert('watchdog'<span style="color: #000000;">)
    </span>-&gt;fields(<span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>'uid' =&gt; <span style="color: #800080;">$log_entry</span>['uid'],
      'type' =&gt; <span style="color: #008080;">substr</span>(<span style="color: #800080;">$log_entry</span>['type'], 0, 64),
      'message' =&gt; <span style="color: #800080;">$log_entry</span>['message'],
      'variables' =&gt; <span style="color: #008080;">serialize</span>(<span style="color: #800080;">$log_entry</span>['variables']),
      'severity' =&gt; <span style="color: #800080;">$log_entry</span>['severity'],
      'link' =&gt; <span style="color: #008080;">substr</span>(<span style="color: #800080;">$log_entry</span>['link'], 0, 255),
      'location' =&gt; <span style="color: #800080;">$log_entry</span>['request_uri'],
      'referer' =&gt; <span style="color: #800080;">$log_entry</span>['referer'],
      'hostname' =&gt; <span style="color: #008080;">substr</span>(<span style="color: #800080;">$log_entry</span>['ip'], 0, 128),
      'timestamp' =&gt; <span style="color: #800080;">$log_entry</span>['timestamp'],<span style="color: #000000;">
    ))
    </span>-&gt;<span style="color: #000000;">execute();
}</span></pre>
</div>
<p>如果是严重错误，Drupal会返回500状态码：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$fatal</span><span style="color: #000000;">) {
  drupal_add_http_header(</span>'Status', '500 Service unavailable (with message)'<span style="color: #000000;">);
}</span></pre>
</div>
<p>检查是否是AJAX请求。$_SERVER['HTTP_X_REQUESTED_WITH']等于XMLHttpRequest是AJAX请求。如果是AJAX请求，且错误允许显示（error_displayable($error)为TRUE），则显示错误信息，终止请求。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_X_REQUESTED_WITH']) &amp;&amp; <span style="color: #800080;">$_SERVER</span>['HTTP_X_REQUESTED_WITH'] == 'XMLHttpRequest'<span style="color: #000000;">) {
  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$fatal</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (error_displayable(<span style="color: #800080;">$error</span><span style="color: #000000;">)) {
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> When called from JavaScript, simply output the error message.</span>
      <span style="color: #0000ff;">print</span> t('%type: !message in %function (line %line of %file).', <span style="color: #800080;">$error</span><span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">exit</span><span style="color: #000000;">;
  }
}</span></pre>
</div>
<p>如果不是AJAX请求，且错误允许显示，则加入一条FLASH信息，这条信息会显示在下一次请求的顶部。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (error_displayable(<span style="color: #800080;">$error</span><span style="color: #000000;">)) {
  </span><span style="color: #800080;">$class</span> = 'error'<span style="color: #000000;">;

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> If error type is 'User notice' then treat it as debug information
  // instead of an error message, see dd().</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$error</span>['%type'] == 'User notice'<span style="color: #000000;">) {
    </span><span style="color: #800080;">$error</span>['%type'] = 'Debug'<span style="color: #000000;">;
    </span><span style="color: #800080;">$class</span> = 'status'<span style="color: #000000;">;
  }

  drupal_set_message(t(</span>'%type: !message in %function (line %line of %file).', <span style="color: #800080;">$error</span>), <span style="color: #800080;">$class</span><span style="color: #000000;">);
}</span></pre>
</div>
<p>最后，对于非AJAX的严重错误，直接输出信息，终止请求。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$fatal</span><span style="color: #000000;">) {
  drupal_set_title(t(</span>'Error'<span style="color: #000000;">));
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> We fallback to a maintenance page at this point, because the page generation
  // itself can generate errors.</span>
  <span style="color: #0000ff;">print</span> theme('maintenance_page', <span style="color: #0000ff;">array</span>('content' =&gt; t('The website encountered an unexpected error. Please try again later.'<span style="color: #000000;">)));
  </span><span style="color: #0000ff;">exit</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>异常处理器和错误处理器实质上是相同的，内部都是通过_drupal_log_error()来处理的：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> _drupal_exception_handler(<span style="color: #800080;">$exception</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/includes/errors.inc'<span style="color: #000000;">;

  </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Log the message to the watchdog and return an error page to the user.</span>
    _drupal_log_error(_drupal_decode_exception(<span style="color: #800080;">$exception</span>), <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">);
  }
  </span><span style="color: #0000ff;">catch</span> (<span style="color: #0000ff;">Exception</span> <span style="color: #800080;">$exception2</span><span style="color: #000000;">) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Another uncaught exception was thrown while handling the first one.
    // If we are displaying errors, then do so with no possibility of a further uncaught exception being thrown.</span>
    <span style="color: #0000ff;">if</span><span style="color: #000000;"> (error_displayable()) {
      </span><span style="color: #0000ff;">print</span> '&lt;h1&gt;Additional uncaught exception thrown while handling exception.&lt;/h1&gt;'<span style="color: #000000;">;
      </span><span style="color: #0000ff;">print</span> '&lt;h2&gt;Original&lt;/h2&gt;&lt;p&gt;' . _drupal_render_exception_safe(<span style="color: #800080;">$exception</span>) . '&lt;/p&gt;'<span style="color: #000000;">;
      </span><span style="color: #0000ff;">print</span> '&lt;h2&gt;Additional&lt;/h2&gt;&lt;p&gt;' . _drupal_render_exception_safe(<span style="color: #800080;">$exception2</span>) . '&lt;/p&gt;&lt;hr /&gt;'<span style="color: #000000;">;
    }
  }
}</span></pre>
</div>]]></description></item><item><title>左手鼠标，右手键盘【转】</title><link>http://www.cnblogs.com/eastson/archive/2013/10/09/3359520.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 09 Oct 2013 08:39:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/09/3359520.html</guid><description><![CDATA[<p>天天趴在电脑前工作，如果只是使用右手来拿鼠标，不仅对手腕不好，长久以来估计对腰也不好。桌面电脑可以很方便地设置成使用左手鼠标模式，这样，左右手换一换，可能会是一个好事。可是当你在写文档、编代码的时候，要用上 Ctrl+v、Ctrl+c、Ctrl+x 这些快捷键时，总不能用右手别扭着按键盘吧？把左手从鼠标拿开，再来按这些键，显然是一种更没有效率的做法。</p>
<p>这个时候，可以用&nbsp;<a href="http://www.autohotkey.com/">AutoHotkey</a>&nbsp;这个软件，来重新定义这几个快捷键。我的习惯是，使用 Ctrl+/ 来代替 Ctrl+x，使用 Ctrl+. 来代替 Ctrl+c，使用 Ctrl+, 来代替 Ctrl+v，并且使用 Ctrl+; 来代替 Win+D 直接显示桌面，这样，当使用左手鼠标模式的时候，即可很舒服地用右手来按这些快捷键，完全和右手鼠标时对应。</p>
<p>下面是我的 AutoHotkey 配置文档，以供参考（<span style="color: #ff0000;"><strong>依据自己的习惯稍微修改了一下，与原文稍有不同</strong></span>）：</p>
<div class="cnblogs_code">
<pre>^/::<span style="color: #000000;">
Send </span>^<span style="color: #000000;">x
</span><span style="color: #0000ff;">return</span>

^.::<span style="color: #000000;">
Send </span>^<span style="color: #000000;">c
</span><span style="color: #0000ff;">return</span>

^,::<span style="color: #000000;">
Send </span>^<span style="color: #000000;">v
</span><span style="color: #0000ff;">return</span>

^;::<span style="color: #000000;">
Send </span>^<span style="color: #000000;">a
</span><span style="color: #0000ff;">return</span>

^\::<span style="color: #000000;">
Send </span>^<span style="color: #000000;">w
</span><span style="color: #0000ff;">return</span>

^[::<span style="color: #000000;">
Send </span><span style="color: #008000;">#</span><span style="color: #008000;">e</span>
<span style="color: #0000ff;">return</span>

^]::<span style="color: #000000;">
Send </span><span style="color: #008000;">#</span><span style="color: #008000;">d</span>
<span style="color: #0000ff;">return</span></pre>
</div>
<p>&nbsp;</p>
<p>文章来源：<a href="http://blog.waterlin.org/articles/left-hand-mouse-right-hand-keyboard-setting.html">http://blog.waterlin.org/articles/left-hand-mouse-right-hand-keyboard-setting.html</a></p>]]></description></item><item><title>Apache Drupal URL重写【转】</title><link>http://www.cnblogs.com/eastson/archive/2013/10/09/3359426.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 09 Oct 2013 08:10:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/09/3359426.html</guid><description><![CDATA[<p>文章来源：<a href="http://www.cnblogs.com/ghj1976/archive/2010/07/19/1780844.html">http://www.cnblogs.com/ghj1976/archive/2010/07/19/1780844.html</a></p>
<p>&nbsp;</p>
<p>在 drupal 跟目录下有个 .htaccess 文件， 这个文件中就有URL地址重写的配置信息，配置信息如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;"> Various rewrite rules.</span>
&lt;IfModule mod_rewrite.c&gt;<span style="color: #000000;">
  RewriteEngine on

  </span><span style="color: #008000;">#</span><span style="color: #008000;"> If your site can be accessed both with and without the 'www.' prefix, you</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> can use one of the following settings to redirect users to your preferred</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> URL, either WITH or WITHOUT the 'www.' prefix. Choose ONLY one option:</span>
  <span style="color: #008000;">#
</span>  <span style="color: #008000;">#</span><span style="color: #008000;"> To redirect all users to access the site WITH the 'www.' prefix,</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> (http://example.com/... will be redirected to http://www.example.com/...)</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> adapt and uncomment the following:</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> RewriteCond %{HTTP_HOST} ^example\.com$ [NC]</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> RewriteRule ^(.*)$ http://www.example.com/$1 [L,R=301]</span>
  <span style="color: #008000;">#
</span>  <span style="color: #008000;">#</span><span style="color: #008000;"> To redirect all users to access the site WITHOUT the 'www.' prefix,</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> (http://www.example.com/... will be redirected to http://example.com/...)</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> uncomment and adapt the following:</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> RewriteCond %{HTTP_HOST} ^www\.example\.com$ [NC]</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> RewriteRule ^(.*)$ http://example.com/$1 [L,R=301]</span>

  <span style="color: #008000;">#</span><span style="color: #008000;"> Modify the RewriteBase if you are using Drupal in a subdirectory or in a</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> VirtualDocumentRoot and the rewrite rules are not working properly.</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> For example if your site is at http://example.com/drupal uncomment and</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> modify the following line:</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> RewriteBase /drupal</span>
  <span style="color: #008000;">#
</span>  <span style="color: #008000;">#</span><span style="color: #008000;"> If your site is running in a VirtualDocumentRoot at http://example.com/,</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> uncomment the following line:</span>
  <span style="color: #008000;">#</span><span style="color: #008000;"> RewriteBase /</span>

  <span style="color: #008000;">#</span><span style="color: #008000;"> Rewrite URLs of the form 'x' to the form 'index.php?q=x'.</span>
  RewriteCond %{REQUEST_FILENAME} !-<span style="color: #000000;">f
  RewriteCond </span>%{REQUEST_FILENAME} !-<span style="color: #000000;">d
  RewriteCond </span>%{REQUEST_URI} !=/favicon.<span style="color: #000000;">ico
  RewriteRule </span>^(.*)$ index.php?q=$1 [L,<span style="color: #000000;">QSA]
</span>&lt;/IfModule&gt;</pre>
</div>
<pre><span style="font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 1.5;">&nbsp;</span></pre>
<p><strong>RewriteEngine on<br /></strong>为重写引擎开关，如果设为off,则任何重写规则定义将不被应用，该开关的另一好处就是如果为了临时拿掉重写规则，则改为off再重启动Apache即可，不必将下面一条条的重写规则注释掉。</p>
<p><br /><span style="line-height: 1.5;">RewriteCond 条件重写规则，当满足后面定义的条件后才会应用下面的重写规则。<br /></span><strong style="line-height: 1.5;">RewriteCond 的语法如下：<br /></strong><span style="line-height: 1.5;">RewriteCond&nbsp; TestString CondPattern [flags]</span></p>
<p>&nbsp;</p>
<p><strong>TestString</strong></p>
<p>TestString 是一个纯文本的字符串，但是也可以包含一些扩展的成分，这里就是通过 %{NAME_OF_VARIABLE} 引用的服务器变量。</p>
<p>服务器变量：</p>
<p>REQUEST_FILENAME&nbsp; 是与请求相匹配的完整的本地文件系统的文件路径名。</p>
<p>REQUEST_URI 是在HTTP请求行中所请求的资源(比如:"/index.html")。</p>
<p>&nbsp;</p>
<p><strong>CondPattern</strong></p>
<p>CondPattern是条件模式，即一个应用于当前TestString实例的正则表达式。TestString将被首先计算，然后再与CondPattern匹配。</p>
<p>比如： RewriteCond %{REQUEST_URI} !=/favicon.ico&nbsp; 的意思就是请求的地址不是 /favicon.ico 才触发下面的地址重写；</p>
<p>! (惊叹号)来指定不匹配。<br />'-d'(目录)&nbsp; 将TestString视为一个路径名并测试它是否为一个存在的目录。<br />'-f'(常规文件)&nbsp; 将TestString视为一个路径名并测试它是否为一个存在的常规文件。</p>
<p>所以： RewriteCond %{REQUEST_FILENAME} !-f&nbsp; 的意思为， 请求的文件并不存在时触发后面的地址重写；</p>
<p>RewriteCond %{REQUEST_FILENAME} !-d&nbsp; 的意思为： 请求的目录并不存在时，触发后面的地址重写；</p>
<p>更多这个参数的写法可以参看：&nbsp;<a title="http://www.52web.com/52article/?view-258.html" href="http://www.52web.com/52article/?view-258.html">http://www.52web.com/52article/?view-258.html</a></p>
<p>&nbsp;</p>
<p><strong>[flags]</strong></p>
<p>我们还可以在CondPattern之后追加特殊的标记[flags]作为RewriteCond指令的第三个参数。flags是一个以逗号分隔的以下标记的列表：</p>
<p>'nocase|NC'(忽略大小写)<br />它使测试忽略大小写，扩展后的TestString和CondPattern中'A-Z' 和'a-z'是没有区别的。此标记仅用于TestString和CondPattern的比较，而对文件系统和子请求的检查不起作用。<br />'ornext|OR'(或下一条件)<br />它以OR方式组合若干规则的条件，而不是隐含的AND。典型的例子如下：</p>
<p>&nbsp;&nbsp;</p>
<p><strong>RewriteRule&nbsp;</strong>具体的重写策略：</p>
<p>RewriteRule的语法如后：&nbsp; RewriteRule Pattern Substitution [flags]</p>
<p>&nbsp;</p>
<p><strong>Pattern</strong></p>
<p>对Apache1.2及以后的版本，模板(Pattern)是一个POSIX正则式，用以匹配当前的URL。当前的URL不一定是最初提交的URL，因为可能用一些规则在此规则前已经对URL进行了处理。</p>
<p>这里是 ^(.*)$ ，意味着一行任何的地址请求；</p>
<p>&nbsp;</p>
<p><strong>Substitution</strong></p>
<p>当匹配成功后，Substitution会被用来替换相应的匹配。</p>
<p>这里的 RewriteRule ^(.*)$ index.php?q=$1&nbsp; 意味着， 如果原先请求的是 /aaa/ddd&nbsp; 重写后地址变成 index.php?q=/aaa/ddd ;</p>
<p>它除了可以是普通的字符串以外，还可以包括：&nbsp;<br />1. $N,引用RewriteRule模板中匹配的相关字串，N表示序号,N=0..9&nbsp;<br />2. %N,引用最后一个RewriteCond模板中匹配的数据，N表示序号&nbsp;<br />3. %{VARNAME},服务器变量&nbsp;<br />4. ${mapname:key|default},映射函数调用。</p>
<p>更多信息可以参看：<a title="http://www.ixdba.net/article/ae/1443.html" href="http://www.ixdba.net/article/ae/1443.html">http://www.ixdba.net/article/ae/1443.html</a></p>
<p>&nbsp;</p>
<p><strong>[flags]</strong></p>
<p>作为RewriteRule指令的第三个参数。 Flags是一个包含以逗号分隔的标记的列表。</p>
<p>这里的 L，QSA 分别是如下意思：</p>
<p>'last|L' (最后一个规则 last)<br />立即停止重写操作，并不再应用其他重写规则。 它对应于Perl中的last命令或C语言中的break命令。 这个标记可以阻止当前已被重写的URL为其后继的规则所重写。 举例，使用它可以重写根路径的URL('/')为实际存在的URL, 比如, '/e/www/'.</p>
<p>'qsappend|QSA' (追加请求串 query string append)<br />此标记强制重写引擎在已有的替换串中追加一个请求串，而不是简单的替换。 如果需要通过重写规则在请求串中增加信息，就可以使用这个标记。</p>
<p>比如说我要把 /user/ghj1976 重定向到/user.php?uid=ghj1976 那么我的规则就须这样：<br />RewriteRule ^user/([^/]+)$ ^/user.php?uid=$2 [L]</p>
<p>但是如果我们希望 /user/ghj1976?key=java&nbsp; 重定向到&nbsp; /user.php?uid=ghj1976&amp;key=java</p>
<p>写成 RewriteRule ^user/([^/]+)$ ^/user.php?uid=$2 [QSA,L]&nbsp; 这样增加个 QSA 就可以了。</p>
<p>如果没有QSA，就会丢掉我们额外传的这个参数key=java。</p>
<p>更多可以参看：&nbsp;<a title="http://space.itpub.net/16555225/viewspace-495945" href="http://space.itpub.net/16555225/viewspace-495945">http://space.itpub.net/16555225/viewspace-495945</a></p>]]></description></item><item><title>DRUPAL性能优化【转】</title><link>http://www.cnblogs.com/eastson/archive/2013/10/09/3359400.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 09 Oct 2013 07:59:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/09/3359400.html</guid><description><![CDATA[<p>1.启用memcache代替Mysql的缓存表处理缓存数据。</p>
<p>2.添加一个opcode缓存可以让 PHP能够重用前面编译过的代码，这样就会跳过解析和编译。常见的opcode缓存有Alternative PHP Cache (<a href="http://pecl.php.net/package/APC" target="_blank">http://pecl.php.net/package/APC</a>), eAccelerator (<a href="http://eaccelerator.net/" target="_blank">http://eaccelerator.net</a>), XCache (<a href="http://trac.lighttpd.net/xcache/" target="_blank">http://trac.lighttpd.net/xcache/</a>)</p>
<p>3.Session放到数据库=》memcache处理。同时利于多个服务器的扩展。</p>
<p>4.PHP允许你控制多长<span class="t_tag">时间</span>清除一次旧的会话记录。Drupal将这一配置放到了它的settings.php文件中：&nbsp;<br />ini_set('session.gc_maxlifetime', 200000); // 55 hours (in seconds)</p>
<p>5.垃圾收集系统运行周期的默认设置为大约两天多一点。这意味着如果用户两天内没有登录，那么它的会话将被删除。如果你的sessions表正在疯长，那么你将想要增加PHP的会话垃圾收集系统的运行频率。&nbsp;<br /><br />ini_set('session.gc_maxlifetime', 86400); // 24 hours (in seconds)&nbsp;<br />ini_set('session.cache_expire', 1440); // 24 hours (in minutes)&nbsp;<br /><br />当调整session.gc_maxlifetime时，最好也将session.cache_expire设为相同的值，session.cache_expire用来控制缓存的会话页面的存活周期。注意session.cache_expire的值的单位为分钟。</p>
<p>6.管理已验证用户的访问&nbsp;<br />由于Drupal可以为匿名用户提供缓存了的页面，而匿名用户一般也不需要与Drupal进行交互，你可能想要较少用户登录停留的时间，或者更疯狂一点，一旦用户关闭他们的浏览器就将他们退出。通过调整settings.php文件中的cookie生存周期来做到这一点。在下面这行代码中，我们将它的值改为24小时：&nbsp;<br />ini_set('session.cookie_lifetime', 86400); // 24 hours (in seconds)&nbsp;<br /><br />而在这里一旦用户关闭浏览我们就将他们登出。&nbsp;<br />ini_set('session.cookie_lifetime', 0); // When they close the browser.&nbsp;<br /><br />settings.php中的默认值（2,000,000秒）允许用户保持登录大约3周时间（在此期间会话垃圾收集系统不会将他们的会话记录从sessions表中删除）。&nbsp;<br /><br />清除错误报告日志&nbsp;<br />Drupal有一个内部的日志系统，位于t Administer ➤ Logs ➤ Recent log entries，如果他没有被定期地清除，那么它将会快速的膨胀。这一日志存放在watchdog表中。如果你发现watchdog表的大小引起你的站点运行缓慢，你可以通过在Administer ➤ Site configuration ➤ Error reporting里调整相关配置来减小它的大小。注意，对该设置的修改将在cron下次运行时生效。不能定期的运行cron会使得watchdog表越来越大，从而为系统增加加大的负担。</p>
<p>7.定期运行cron<br /><br />文章来源：<a href="http://www.cnblogs.com/linlu11/archive/2009/11/07/1597793.html">http://www.cnblogs.com/linlu11/archive/2009/11/07/1597793.html</a></p>]]></description></item><item><title>Drupal与其它开源系统的整合</title><link>http://www.cnblogs.com/eastson/archive/2013/10/09/3359281.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 09 Oct 2013 07:10:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/09/3359281.html</guid><description><![CDATA[<p>网上看到一篇介绍Drupal与phpbb整合的文章。浏览了一下，真心地不错。于是就想将与整合有关的文章做一个汇总，以备不时之需：</p>
<p class="with-tabs"><a href="http://drupalchina.cn/content/drupal7zheng-he-phpbblun-tan">Drupal7整合PHPBB论坛</a></p>
<p class="page-header"><a href="http://ninghao.net/blog/399">Drupal 7 整合 Vanilla 论坛</a></p>
<p class="entry-title"><a href="http://worpress.sinaapp.com/?p=162">drupal与ucenter的集成的模块ucenter</a></p>
<p><a href="http://ec-shalom.com/191_zencartyudrupalzhenghedi1tian.html">zencart与drupal整合（第1天）&mdash;&mdash;zencart基础操作教程</a></p>
<p><a href="http://ec-shalom.com/383_zencartyudrupal2day.html">zencart与drupal整合（第2天）&mdash;zencart模块调用机制</a></p>
<p><a href="http://ec-shalom.com/470_zencartyudrupalzhenghedi3day.html">zencart与drupal整合（第3天）&mdash;将zencart与drupal组合成一个网站</a></p>
<p><a href="http://my.oschina.net/haojay/blog/114312">Drupal 集成 Question2Answer（用户整合）</a></p>
<p id="page-title" class="title"><a href="http://www.drupaluser.org/node/467">Drupal与MediaWiki 整合教程-AuthDrupal</a></p>
<p><a href="http://www.maijindou.com/blog/%E5%B0%86%E6%82%A8%E7%9A%84Magento%E5%95%86%E5%9F%8E%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E6%95%B4%E5%90%88%E8%87%B3Drupal%E4%BC%81%E4%B8%9A%E7%BD%91%E7%AB%99.html">将您的Magento商城数据同步整合至Drupal企业网站</a></p>
<p class="title"><a href="http://www.heiqu.com/show-19652-1.html">hook_user,整合drupal和phpbb的核心</a></p>
<p id="firstHeading" class="firstHeading"><a href="http://www.zzbaike.com/wiki/Gallery:%E6%95%B4%E5%90%88:Drupal">Gallery:整合:Drupal</a></p>]]></description></item><item><title>如何为Drupal缓存对象指定缓存类？</title><link>http://www.cnblogs.com/eastson/archive/2013/10/09/3359138.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 09 Oct 2013 06:18:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/09/3359138.html</guid><description><![CDATA[<p>什么意思？意思是说，假如你有这样的需求，需要将cache_page缓存到数据库，其它的都缓存到memcache，这该怎么办？</p>
<p>&nbsp;</p>
<p>看看_cache_get_object()的实现你就会知道上面的问题该怎么处理了：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> _cache_get_object(<span style="color: #800080;">$bin</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">static</span> <span style="color: #800080;">$cache_objects</span><span style="color: #000000;">;
  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$cache_objects</span>[<span style="color: #800080;">$bin</span><span style="color: #000000;">])) {
    </span><span style="color: #800080;">$class</span> = variable_get('cache_class_' . <span style="color: #800080;">$bin</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$class</span><span style="color: #000000;">)) {
      </span><span style="color: #800080;">$class</span> = variable_get('cache_default_class', 'DrupalDatabaseCache'<span style="color: #000000;">);
    }
    </span><span style="color: #800080;">$cache_objects</span>[<span style="color: #800080;">$bin</span>] = <span style="color: #0000ff;">new</span> <span style="color: #800080;">$class</span>(<span style="color: #800080;">$bin</span><span style="color: #000000;">);
  }
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$cache_objects</span>[<span style="color: #800080;">$bin</span><span style="color: #000000;">];
}</span></pre>
</div>
<p>&nbsp;</p>
<p>具体该怎么做啊？说清楚点好吧，兄弟？<br />这还不清楚？settings.php配置一下不就OK啦：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$conf</span>['cache_class_cache_page'] = 'DrupalDatabaseCache'<span style="color: #000000;">;
</span><span style="color: #800080;">$conf</span>['cache_default_class'] = 'MemCache';</pre>
</div>]]></description></item><item><title>Drupal如何集中控制静态变量？</title><link>http://www.cnblogs.com/eastson/archive/2013/10/09/3358796.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 09 Oct 2013 03:20:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/09/3358796.html</guid><description><![CDATA[<p>Drupal许多的函数中都使用了静态变量。按照通常的用法，静态变量的使用应该是这样的：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_set_title(<span style="color: #800080;">$title</span> = <span style="color: #0000ff;">NULL</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">static</span> <span style="color: #800080;">$stored_title</span><span style="color: #000000;">;

  </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$title</span><span style="color: #000000;">)) {
    </span><span style="color: #800080;">$stored_title</span> = <span style="color: #800080;">$title</span><span style="color: #000000;">;
  }

  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$stored_title</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>但是Drupal使用的方式有些不同。主要的考量应该是这样：可能会有几十上百个函数中使用了静态变量，Drupal需要在某一时刻对这些静态变量都做reset处理。这个时候，不可能对这几十上百个函数都重新调用一次。因此，Drupal需要一种机制，来集中地存放静态变量，这就是函数druap_static()存在的目的：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> &amp;drupal_static(<span style="color: #800080;">$name</span>, <span style="color: #800080;">$default_value</span> = <span style="color: #0000ff;">NULL</span>, <span style="color: #800080;">$reset</span> = <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">static</span> <span style="color: #800080;">$data</span> = <span style="color: #0000ff;">array</span>(), <span style="color: #800080;">$default</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> First check if dealing with a previously defined static variable.</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$data</span>[<span style="color: #800080;">$name</span>]) || <span style="color: #008080;">array_key_exists</span>(<span style="color: #800080;">$name</span>, <span style="color: #800080;">$data</span><span style="color: #000000;">)) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Non-NULL $name and both $data[$name] and $default[$name] statics exist.</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$reset</span><span style="color: #000000;">) {
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> Reset pre-existing static variable to its default value.</span>
      <span style="color: #800080;">$data</span>[<span style="color: #800080;">$name</span>] = <span style="color: #800080;">$default</span>[<span style="color: #800080;">$name</span><span style="color: #000000;">];
    }
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$data</span>[<span style="color: #800080;">$name</span><span style="color: #000000;">];
  }
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Neither $data[$name] nor $default[$name] static variables exist.</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$name</span><span style="color: #000000;">)) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$reset</span><span style="color: #000000;">) {
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> Reset was called before a default is set and yet a variable must be
      // returned.</span>
      <span style="color: #0000ff;">return</span> <span style="color: #800080;">$data</span><span style="color: #000000;">;
    }
    
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> First call with new non-NULL $name. Initialize a new static variable.</span>
    <span style="color: #800080;">$default</span>[<span style="color: #800080;">$name</span>] = <span style="color: #800080;">$data</span>[<span style="color: #800080;">$name</span>] = <span style="color: #800080;">$default_value</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$data</span>[<span style="color: #800080;">$name</span><span style="color: #000000;">];
  }
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Reset all: ($name == NULL). This needs to be done one at a time so that
  // references returned by earlier invocations of drupal_static() also get
  // reset.</span>
  <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$default</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$name</span> =&gt; <span style="color: #800080;">$value</span><span style="color: #000000;">) {
    </span><span style="color: #800080;">$data</span>[<span style="color: #800080;">$name</span>] = <span style="color: #800080;">$value</span><span style="color: #000000;">;
  }
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> As the function returns a reference, the return should always be a
  // variable.</span>
  <span style="color: #0000ff;">return</span> <span style="color: #800080;">$data</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>注意，这里drupal_static()返回的是引用。</p>
<p>&nbsp;</p>
<p>使用drupal_static()后的函数drupal_set_title()是这样的：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_set_title(<span style="color: #800080;">$title</span> = <span style="color: #0000ff;">NULL</span>, <span style="color: #800080;">$output</span> =<span style="color: #000000;"> CHECK_PLAIN) {
  </span><span style="color: #800080;">$stored_title</span> = &amp;drupal_static(<span style="color: #ff00ff;">__FUNCTION__</span><span style="color: #000000;">);

  </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$title</span><span style="color: #000000;">)) {
    </span><span style="color: #800080;">$stored_title</span> = <span style="color: #800080;">$title</span><span style="color: #000000;">;
  }

  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$stored_title</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>当需要reset集中存储的静态变量时，可以调用函数drupal_static_reset()：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_static_reset(<span style="color: #800080;">$name</span> = <span style="color: #0000ff;">NULL</span><span style="color: #000000;">) {
  drupal_static(</span><span style="color: #800080;">$name</span>, <span style="color: #0000ff;">NULL</span>, <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">);
}</span></pre>
</div>]]></description></item><item><title>Drupal启动阶段之二：页面缓存</title><link>http://www.cnblogs.com/eastson/archive/2013/10/08/3357300.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 08 Oct 2013 08:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/08/3357300.html</guid><description><![CDATA[<p>页面缓存是什么意思？有些页面浏览量非常大，而且与状态无关，这类页面就可以使用页面缓存技术。在页面第一次请求完毕以后，将响应结果保存起来。下一次再请求同一页面时，就不需要从头到尾再执行一遍，只需要将第一次执行的响应结果获取出来，直接返回给使用者就行了。</p>
<p>&nbsp;</p>
<p>什么样的页面请求可以缓存？Drupal使用函数drupal_page_is_cacheable()区分哪些请求可以缓存：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_page_is_cacheable(<span style="color: #800080;">$allow_caching</span> = <span style="color: #0000ff;">NULL</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$allow_caching_static</span> = &amp;drupal_static(<span style="color: #ff00ff;">__FUNCTION__</span>, <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$allow_caching</span><span style="color: #000000;">)) {
    </span><span style="color: #800080;">$allow_caching_static</span> = <span style="color: #800080;">$allow_caching</span><span style="color: #000000;">;
  }

  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$allow_caching_static</span> &amp;&amp; (<span style="color: #800080;">$_SERVER</span>['REQUEST_METHOD'] == 'GET' || <span style="color: #800080;">$_SERVER</span>['REQUEST_METHOD'] == 'HEAD'<span style="color: #000000;">)
    </span>&amp;&amp; !<span style="color: #000000;">drupal_is_cli();
}</span></pre>
</div>
<p>默认，只有GET和HEAD请求可以缓存。</p>
<p>&nbsp;</p>
<p>如何保存第一次的请求响应结果？Drupal使用函数drupal_page_set_cache()保存响应结果。在请求执行完成后，Drupal执行该函数，使用cache_set()将响应结果保存到cache_page对象：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> drupal_page_set_cache() {
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$base_root</span><span style="color: #000000;">;

  </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (drupal_page_is_cacheable()) {
    </span><span style="color: #800080;">$cache</span> = (<span style="color: #0000ff;">object</span>) <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>'cid' =&gt; <span style="color: #800080;">$base_root</span> . request_uri(),
      'data' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
        </span>'path' =&gt; <span style="color: #800080;">$_GET</span>['q'],
        'body' =&gt; <span style="color: #008080;">ob_get_clean</span>(),
        'title' =&gt; drupal_get_title(),
        'headers' =&gt; <span style="color: #0000ff;">array</span>(),<span style="color: #000000;">
      )</span>,
      'expire' =&gt; CACHE_TEMPORARY,
      'created' =&gt; REQUEST_TIME,<span style="color: #000000;">
    );

    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Restore preferred header names based on the lower-case names returned
    // by drupal_get_http_header().</span>
    <span style="color: #800080;">$header_names</span> =<span style="color: #000000;"> _drupal_set_preferred_header_name();
    </span><span style="color: #0000ff;">foreach</span> (drupal_get_http_header() <span style="color: #0000ff;">as</span> <span style="color: #800080;">$name_lower</span> =&gt; <span style="color: #800080;">$value</span><span style="color: #000000;">) {
      </span><span style="color: #800080;">$cache</span>-&gt;data['headers'][<span style="color: #800080;">$header_names</span>[<span style="color: #800080;">$name_lower</span>]] = <span style="color: #800080;">$value</span><span style="color: #000000;">;
      </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$name_lower</span> == 'expires'<span style="color: #000000;">) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Use the actual timestamp from an Expires header if available.</span>
        <span style="color: #800080;">$cache</span>-&gt;expire = <span style="color: #008080;">strtotime</span>(<span style="color: #800080;">$value</span><span style="color: #000000;">);
      }
    }

    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$cache</span>-&gt;data['body'<span style="color: #000000;">]) {
      </span><span style="color: #0000ff;">if</span> (variable_get('page_compression', <span style="color: #0000ff;">TRUE</span>) &amp;&amp; <span style="color: #008080;">extension_loaded</span>('zlib'<span style="color: #000000;">)) {
        </span><span style="color: #800080;">$cache</span>-&gt;data['body'] = <span style="color: #008080;">gzencode</span>(<span style="color: #800080;">$cache</span>-&gt;data['body'], 9,<span style="color: #000000;"> FORCE_GZIP);
      }
      cache_set(</span><span style="color: #800080;">$cache</span>-&gt;cid, <span style="color: #800080;">$cache</span>-&gt;data, 'cache_page', <span style="color: #800080;">$cache</span>-&gt;<span style="color: #000000;">expire);
    }
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$cache</span><span style="color: #000000;">;
  }
}</span></pre>
</div>
<p>这里应该仔细看看Drupal是如何缓存的：以URL为key，缓存内容是一个数组，包含path、body、title、headers。/drupal/index.php?q=node/1和/drupal/index.php?q=node/2这会是两个缓存项。</p>
<p>&nbsp;</p>
<p>同一页面的后续请求如何从缓存读取呢？这就是Drupal的启动函数_drupal_bootstrap_page_cache()完成的内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> _drupal_bootstrap_page_cache() {
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$user</span><span style="color: #000000;">;

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Allow specifying special cache handlers in settings.php, like
  // using memcached or files for storing cache information.</span>
  <span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/includes/cache.inc'<span style="color: #000000;">;
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> 这是什么意思？
  // 是不是说cache.inc只是实现了默认的数据库缓存DrupalDatabaseCache,
  // 如果有Memcached缓存(DrupalMemcachedCache)或者File缓存(DrupalFileCache)时,
  // 可以将这些额外的类文件在settings.php中用cache_backends声明:
  //   $conf['cache_backends'][] = 'includes/cache.memcached.inc';
  //   $conf['cache_backends'][] = 'includes/cache.file.inc';</span>
  <span style="color: #0000ff;">foreach</span> (variable_get('cache_backends', <span style="color: #0000ff;">array</span>()) <span style="color: #0000ff;">as</span> <span style="color: #800080;">$include</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/' . <span style="color: #800080;">$include</span><span style="color: #000000;">;
  }
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Check for a cache mode force from settings.php.</span>
  <span style="color: #0000ff;">if</span> (variable_get('page_cache_without_database'<span style="color: #000000;">)) {
    </span><span style="color: #800080;">$cache_enabled</span> = <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;
  }
  </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
    drupal_bootstrap(DRUPAL_BOOTSTRAP_VARIABLES</span>, <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">);
    </span><span style="color: #800080;">$cache_enabled</span> = variable_get('cache'<span style="color: #000000;">);
  }
  
  drupal_block_denied(ip_address());
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> If there is no session cookie and cache is enabled (or forced), try
  // to serve a cached page.</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_COOKIE</span>[<span style="color: #008080;">session_name</span>()]) &amp;&amp; <span style="color: #800080;">$cache_enabled</span><span style="color: #000000;">) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Make sure there is a user object because its timestamp will be
    // checked, hook_boot might check for anonymous user etc.</span>
    <span style="color: #800080;">$user</span> =<span style="color: #000000;"> drupal_anonymous_user(); //匿名用户
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Get the page from the cache.</span>
    <span style="color: #800080;">$cache</span> =<span style="color: #000000;"> drupal_page_get_cache();
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> If there is a cached page, display it.</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #008080;">is_object</span>(<span style="color: #800080;">$cache</span><span style="color: #000000;">)) {
      </span><span style="color: #008080;">header</span>('X-Drupal-Cache: HIT'<span style="color: #000000;">);
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> Restore the metadata cached with the page.</span>
      <span style="color: #800080;">$_GET</span>['q'] = <span style="color: #800080;">$cache</span>-&gt;data['path'<span style="color: #000000;">];
      drupal_set_title(</span><span style="color: #800080;">$cache</span>-&gt;data['title'],<span style="color: #000000;"> PASS_THROUGH);
      date_default_timezone_set(drupal_get_user_timezone());
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> If the skipping of the bootstrap hooks is not enforced, call
      // hook_boot.</span>
      <span style="color: #0000ff;">if</span> (variable_get('page_cache_invoke_hooks', <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">)) {
        bootstrap_invoke_all(</span>'boot'<span style="color: #000000;">);
      }
      drupal_serve_page_from_cache(</span><span style="color: #800080;">$cache</span><span style="color: #000000;">);
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> If the skipping of the bootstrap hooks is not enforced, call
      // hook_exit.</span>
      <span style="color: #0000ff;">if</span> (variable_get('page_cache_invoke_hooks', <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">)) {
        bootstrap_invoke_all(</span>'exit'<span style="color: #000000;">);
      }
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> We are done.</span>
      <span style="color: #0000ff;">exit</span><span style="color: #000000;">;
    }
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
      </span><span style="color: #008080;">header</span>('X-Drupal-Cache: MISS'<span style="color: #000000;">);
    }
  }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>首先，检查一下请求者的IP地址是否允许：</p>
<div class="cnblogs_code">
<pre>drupal_block_denied(ip_address());</pre>
</div>
<p>如果请求者的IP地址是禁止的，则Drupal会请求者发送403信息：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_block_denied(<span style="color: #800080;">$ip</span><span style="color: #000000;">) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Deny access to blocked IP addresses - t() is not yet available.</span>
  <span style="color: #0000ff;">if</span> (drupal_is_denied(<span style="color: #800080;">$ip</span><span style="color: #000000;">)) {
    </span><span style="color: #008080;">header</span>(<span style="color: #800080;">$_SERVER</span>['SERVER_PROTOCOL'] . ' 403 Forbidden'<span style="color: #000000;">);
    </span><span style="color: #0000ff;">print</span> 'Sorry, ' . check_plain(ip_address()) . ' has been banned.'<span style="color: #000000;">;
    </span><span style="color: #0000ff;">exit</span><span style="color: #000000;">();
  }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>然后，检查请求是否是匿名的。只有匿名请求才会检查缓存：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_COOKIE</span>[<span style="color: #008080;">session_name</span>()]) <span style="color: #008000;">/*</span><span style="color: #008000;">没有会话COOKIE时才会检查缓存</span><span style="color: #008000;">*/</span> &amp;&amp; <span style="color: #800080;">$cache_enabled</span><span style="color: #000000;">) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> ......</span>
}</pre>
</div>
<p>匿名请求时，Drupal通过函数drupal_anonymous_user()设置$user全局变量：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> drupal_anonymous_user() {
  </span><span style="color: #800080;">$user</span> = <span style="color: #0000ff;">new</span><span style="color: #000000;"> stdClass();
  </span><span style="color: #800080;">$user</span>-&gt;uid = 0<span style="color: #000000;">;
  </span><span style="color: #800080;">$user</span>-&gt;hostname =<span style="color: #000000;"> ip_address();
  </span><span style="color: #800080;">$user</span>-&gt;roles = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
  </span><span style="color: #800080;">$user</span>-&gt;roles[DRUPAL_ANONYMOUS_RID] = 'anonymous user'<span style="color: #000000;">;
  </span><span style="color: #800080;">$user</span>-&gt;cache = 0<span style="color: #000000;">;
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$user</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>同时，匿名请求也会返回一个额外的HTTP头信息X-Drupal-Cache，代表当前内容时候是否是缓存返回的：</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">header</span>('X-Drupal-Cache: HIT'); <span style="color: #008000;">//</span><span style="color: #008000;"> 缓存命中</span>
<span style="color: #008080;">header</span>('X-Drupal-Cache: MISS'); <span style="color: #008000;">//</span><span style="color: #008000;"> 缓存丢失</span></pre>
</div>
<p>&nbsp;</p>
<p>Drupal通过函数drupal_page_set_cache()保存页面缓存，对应的，使用函数drupal_page_get_cache()获取页面缓存：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_page_get_cache(<span style="color: #800080;">$check_only</span> = <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$base_root</span><span style="color: #000000;">;
  </span><span style="color: #0000ff;">static</span> <span style="color: #800080;">$cache_hit</span> = <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">;

  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$check_only</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$cache_hit</span><span style="color: #000000;">;
  }

  </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> (drupal_page_is_cacheable()) {
    </span><span style="color: #800080;">$cache</span> = cache_get(<span style="color: #800080;">$base_root</span> . request_uri(), 'cache_page'<span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$cache</span> !== <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">) {
      </span><span style="color: #800080;">$cache_hit</span> = <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;
    }
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$cache</span><span style="color: #000000;">;
  }
}</span></pre>
</div>
<p>获取的缓存内容是drupal_page_set_cache()保存的数组：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$cache</span> =<span style="color: #000000;"> drupal_page_get_cache();

</span><span style="color: #008000;">//</span><span style="color: #008000;"> $cache = array(
//     'path' =&gt; '...',
//   'body' =&gt; '...',
//   'title' =&gt; '...',
//   'headers' =&gt; array(...),
// );</span></pre>
</div>
<p>&nbsp;</p>
<p>最后，透过函数drupal_serve_page_from_cache()返回缓存内容，结束请求。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_serve_page_from_cache(stdClass <span style="color: #800080;">$cache</span><span style="color: #000000;">) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Negotiate whether to use compression.</span>
  <span style="color: #800080;">$page_compression</span> = variable_get('page_compression', <span style="color: #0000ff;">TRUE</span>) &amp;&amp; <span style="color: #008080;">extension_loaded</span>('zlib'<span style="color: #000000;">);
  </span><span style="color: #800080;">$return_compressed</span> = <span style="color: #800080;">$page_compression</span> &amp;&amp; <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_ACCEPT_ENCODING']) &amp;&amp; <span style="color: #008080;">strpos</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_ACCEPT_ENCODING'], 'gzip') !== <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">;

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Get headers set in hook_boot(). Keys are lower-case.</span>
  <span style="color: #800080;">$hook_boot_headers</span> =<span style="color: #000000;"> drupal_get_http_header();

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Headers generated in this function, that may be replaced or unset using
  // drupal_add_http_headers(). Keys are mixed-case.</span>
  <span style="color: #800080;">$default_headers</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();

  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$cache</span>-&gt;data['headers'] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$name</span> =&gt; <span style="color: #800080;">$value</span><span style="color: #000000;">) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> In the case of a 304 response, certain headers must be sent, and the
    // remaining may not (see RFC 2616, section 10.3.5). Do not override
    // headers set in hook_boot().</span>
    <span style="color: #800080;">$name_lower</span> = <span style="color: #008080;">strtolower</span>(<span style="color: #800080;">$name</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">in_array</span>(<span style="color: #800080;">$name_lower</span>, <span style="color: #0000ff;">array</span>('content-location', 'expires', 'cache-control', 'vary')) &amp;&amp; !<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$hook_boot_headers</span>[<span style="color: #800080;">$name_lower</span><span style="color: #000000;">])) {
      drupal_add_http_header(</span><span style="color: #800080;">$name</span>, <span style="color: #800080;">$value</span><span style="color: #000000;">);
      </span><span style="color: #0000ff;">unset</span>(<span style="color: #800080;">$cache</span>-&gt;data['headers'][<span style="color: #800080;">$name</span><span style="color: #000000;">]);
    }
  }

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> If the client sent a session cookie, a cached copy will only be served
  // to that one particular client due to Vary: Cookie. Thus, do not set
  // max-age &gt; 0, allowing the page to be cached by external proxies, when a
  // session cookie is present unless the Vary header has been replaced or
  // unset in hook_boot().</span>
  <span style="color: #800080;">$max_age</span> = !<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_COOKIE</span>[<span style="color: #008080;">session_name</span>()]) || <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$hook_boot_headers</span>['vary']) ? variable_get('page_cache_maximum_age', 0) : 0<span style="color: #000000;">;
  </span><span style="color: #800080;">$default_headers</span>['Cache-Control'] = 'public, max-age=' . <span style="color: #800080;">$max_age</span><span style="color: #000000;">;

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Entity tag should change if the output changes.</span>
  <span style="color: #800080;">$etag</span> = '"' . <span style="color: #800080;">$cache</span>-&gt;created . '-' . <span style="color: #008080;">intval</span>(<span style="color: #800080;">$return_compressed</span>) . '"'<span style="color: #000000;">;
  </span><span style="color: #008080;">header</span>('Etag: ' . <span style="color: #800080;">$etag</span><span style="color: #000000;">);

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> See if the client has provided the required HTTP headers.</span>
  <span style="color: #800080;">$if_modified_since</span> = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_IF_MODIFIED_SINCE']) ? <span style="color: #008080;">strtotime</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_IF_MODIFIED_SINCE']) : <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">;
  </span><span style="color: #800080;">$if_none_match</span> = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_IF_NONE_MATCH']) ? <span style="color: #008080;">stripslashes</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_IF_NONE_MATCH']) : <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">;

  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$if_modified_since</span> &amp;&amp; <span style="color: #800080;">$if_none_match</span>
      &amp;&amp; <span style="color: #800080;">$if_none_match</span> == <span style="color: #800080;">$etag</span> <span style="color: #008000;">//</span><span style="color: #008000;"> etag must match</span>
      &amp;&amp; <span style="color: #800080;">$if_modified_since</span> == <span style="color: #800080;">$cache</span>-&gt;created) {  <span style="color: #008000;">//</span><span style="color: #008000;"> if-modified-since must match</span>
    <span style="color: #008080;">header</span>(<span style="color: #800080;">$_SERVER</span>['SERVER_PROTOCOL'] . ' 304 Not Modified'<span style="color: #000000;">);
    drupal_send_headers(</span><span style="color: #800080;">$default_headers</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
  }

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Send the remaining headers.</span>
  <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$cache</span>-&gt;data['headers'] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$name</span> =&gt; <span style="color: #800080;">$value</span><span style="color: #000000;">) {
    drupal_add_http_header(</span><span style="color: #800080;">$name</span>, <span style="color: #800080;">$value</span><span style="color: #000000;">);
  }

  </span><span style="color: #800080;">$default_headers</span>['Last-Modified'] = <span style="color: #008080;">gmdate</span>(DATE_RFC1123, <span style="color: #800080;">$cache</span>-&gt;<span style="color: #000000;">created);

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> HTTP/1.0 proxies does not support the Vary header, so prevent any caching
  // by sending an Expires date in the past. HTTP/1.1 clients ignores the
  // Expires header if a Cache-Control: max-age= directive is specified (see RFC
  // 2616, section 14.9.3).</span>
  <span style="color: #800080;">$default_headers</span>['Expires'] = 'Sun, 19 Nov 1978 05:00:00 GMT'<span style="color: #000000;">;

  drupal_send_headers(</span><span style="color: #800080;">$default_headers</span><span style="color: #000000;">);

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Allow HTTP proxies to cache pages for anonymous users without a session
  // cookie. The Vary header is used to indicates the set of request-header
  // fields that fully determines whether a cache is permitted to use the
  // response to reply to a subsequent request for a given URL without
  // revalidation. If a Vary header has been set in hook_boot(), it is assumed
  // that the module knows how to cache the page.</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$hook_boot_headers</span>['vary']) &amp;&amp; !variable_get('omit_vary_cookie'<span style="color: #000000;">)) {
    </span><span style="color: #008080;">header</span>('Vary: Cookie'<span style="color: #000000;">);
  }

  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$page_compression</span><span style="color: #000000;">) {
    </span><span style="color: #008080;">header</span>('Vary: Accept-Encoding', <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">);
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> If page_compression is enabled, the cache contains gzipped data.</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$return_compressed</span><span style="color: #000000;">) {
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> $cache-&gt;data['body'] is already gzip'ed, so make sure
      // zlib.output_compression does not compress it once more.</span>
      <span style="color: #008080;">ini_set</span>('zlib.output_compression', '0'<span style="color: #000000;">);
      </span><span style="color: #008080;">header</span>('Content-Encoding: gzip'<span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> The client does not support compression, so unzip the data in the
      // cache. Strip the gzip header and run uncompress.</span>
      <span style="color: #800080;">$cache</span>-&gt;data['body'] = <span style="color: #008080;">gzinflate</span>(<span style="color: #008080;">substr</span>(<span style="color: #008080;">substr</span>(<span style="color: #800080;">$cache</span>-&gt;data['body'], 10), 0, -8<span style="color: #000000;">));
    }
  }

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Print the page.</span>
  <span style="color: #0000ff;">print</span> <span style="color: #800080;">$cache</span>-&gt;data['body'<span style="color: #000000;">];
}</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>Drupal启动阶段之一：配置</title><link>http://www.cnblogs.com/eastson/archive/2013/10/08/3356611.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 08 Oct 2013 03:19:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/08/3356611.html</guid><description><![CDATA[<p>配置是Drupal启动过程中的第一个阶段，通过函数_drupal_bootstrap_configuration()实现：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> _drupal_bootstrap_configuration() {
  </span><span style="color: #008080;">set_error_handler</span>('_drupal_error_handler'<span style="color: #000000;">);
  </span><span style="color: #008080;">set_exception_handler</span>('_drupal_exception_handler'<span style="color: #000000;">);

  drupal_environment_initialize();
  timer_start(</span>'page'<span style="color: #000000;">);
  drupal_settings_initialize();
}</span></pre>
</div>
<p>&nbsp;</p>
<h3>错误和异常处理</h3>
<p>Drupal实现了自己的错误处理器_drupal_error_handler()和异常处理器_drupal_exception_handler()，抽时间可以研究下具体如何实现的。</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">set_error_handler</span>('_drupal_error_handler'<span style="color: #000000;">);
</span><span style="color: #008080;">set_exception_handler</span>('_drupal_exception_handler');</pre>
</div>
<p>&nbsp;</p>
<h3>初始化环境</h3>
<p>初始化环境通过函数drupal_environment_initialize()实现。首先，对$_SERVER中的一些变量检查和修改，保证后续需要用到时都是处理过的：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_REFERER'<span style="color: #000000;">])) {
  </span><span style="color: #800080;">$_SERVER</span>['HTTP_REFERER'] = ''<span style="color: #000000;">;
}
</span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_SERVER</span>['SERVER_PROTOCOL']) || (<span style="color: #800080;">$_SERVER</span>['SERVER_PROTOCOL'] != 'HTTP/1.0' &amp;&amp; <span style="color: #800080;">$_SERVER</span>['SERVER_PROTOCOL'] != 'HTTP/1.1'<span style="color: #000000;">)) {
  </span><span style="color: #800080;">$_SERVER</span>['SERVER_PROTOCOL'] = 'HTTP/1.0'<span style="color: #000000;">;
}

</span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_HOST'<span style="color: #000000;">])) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> As HTTP_HOST is user input, ensure it only contains characters allowed
  // in hostnames. See RFC 952 (and RFC 2181).
  // $_SERVER['HTTP_HOST'] is lowercased here per specifications.</span>
  <span style="color: #800080;">$_SERVER</span>['HTTP_HOST'] = <span style="color: #008080;">strtolower</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_HOST'<span style="color: #000000;">]);
  </span><span style="color: #0000ff;">if</span> (!drupal_valid_http_host(<span style="color: #800080;">$_SERVER</span>['HTTP_HOST'<span style="color: #000000;">])) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> HTTP_HOST is invalid, e.g. if containing slashes it may be an attack.</span>
    <span style="color: #008080;">header</span>(<span style="color: #800080;">$_SERVER</span>['SERVER_PROTOCOL'] . ' 400 Bad Request'<span style="color: #000000;">);
    </span><span style="color: #0000ff;">exit</span><span style="color: #000000;">;
  }
}
</span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Some pre-HTTP/1.1 clients will not send a Host header. Ensure the key is
  // defined for E_ALL compliance.</span>
  <span style="color: #800080;">$_SERVER</span>['HTTP_HOST'] = ''<span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>再次，检查用户请求的路径，放到$_GET['q']里面：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$_GET</span>['q'] = request_path();</pre>
</div>
<p>函数request_path()需要判断请求URL中是否有包含?q=XXX这样的查询参数。有时候为了让搜索引擎友好，会重写URL，也会出现http://example.com/node/306这样的情况。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> request_path() {
  </span><span style="color: #0000ff;">static</span> <span style="color: #800080;">$path</span><span style="color: #000000;">;

  </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$path</span><span style="color: #000000;">)) {
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$path</span><span style="color: #000000;">;
  }

  </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_GET</span>['q']) &amp;&amp; <span style="color: #008080;">is_string</span>(<span style="color: #800080;">$_GET</span>['q'<span style="color: #000000;">])) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> This is a request with a ?q=foo/bar query string. $_GET['q'] is
    // overwritten in drupal_path_initialize(), but request_path() is called
    // very early in the bootstrap process, so the original value is saved in
    // $path and returned in later calls.</span>
    <span style="color: #800080;">$path</span> = <span style="color: #800080;">$_GET</span>['q'<span style="color: #000000;">];
  }
  </span><span style="color: #0000ff;">elseif</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_SERVER</span>['REQUEST_URI'<span style="color: #000000;">])) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> This request is either a clean URL, or 'index.php', or nonsense.
    // Extract the path from REQUEST_URI.
    // $_SERVER['REQUEST_URI'] = /drupal/index.php?debug_host=10.0.2.15&amp;debug_port=10137&amp;debug_session_id=1000这样
    // 进过strtok()去掉问号的内容后 $request_path = /drupal/index.php</span>
    <span style="color: #800080;">$request_path</span> = <span style="color: #008080;">strtok</span>(<span style="color: #800080;">$_SERVER</span>['REQUEST_URI'], '?'<span style="color: #000000;">);
    
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> $_SERVER['SCRIPT_NAME'] = /drupal/index.php
    // $base_path_len = strlen(/drupal)</span>
    <span style="color: #800080;">$base_path_len</span> = <span style="color: #008080;">strlen</span>(<span style="color: #008080;">rtrim</span>(<span style="color: #008080;">dirname</span>(<span style="color: #800080;">$_SERVER</span>['SCRIPT_NAME']), '\/'<span style="color: #000000;">));
    
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Unescape and strip $base_path prefix, leaving q without a leading slash.
    // $path = index.php</span>
    <span style="color: #800080;">$path</span> = <span style="color: #008080;">substr</span>(<span style="color: #008080;">urldecode</span>(<span style="color: #800080;">$request_path</span>), <span style="color: #800080;">$base_path_len</span> + 1<span style="color: #000000;">);
    
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> If the path equals the script filename, either because 'index.php' was
    // explicitly provided in the URL, or because the server added it to
    // $_SERVER['REQUEST_URI'] even when it wasn't provided in the URL (some
    // versions of Microsoft IIS do this), the front page should be served.
    // $_SERVER['PHP_SELF'] = /drupal/index.php</span>
    <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$path</span> == <span style="color: #008080;">basename</span>(<span style="color: #800080;">$_SERVER</span>['PHP_SELF'<span style="color: #000000;">])) {
      </span><span style="color: #800080;">$path</span> = ''<span style="color: #000000;">;
    }
    
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> $_SERVER['REQUEST_URI'] = /drupal/node/306
    //    $request_path = /drupal/node/306
    //    $base_path_len = 7, 不变
    //    $path = node/306</span>
<span style="color: #000000;">  }
  </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> This is the front page.</span>
    <span style="color: #800080;">$path</span> = ''<span style="color: #000000;">;
  }

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Under certain conditions Apache's RewriteRule directive prepends the value
  // assigned to $_GET['q'] with a slash. Moreover we can always have a trailing
  // slash in place, hence we need to normalize $_GET['q'].</span>
  <span style="color: #800080;">$path</span> = <span style="color: #008080;">trim</span>(<span style="color: #800080;">$path</span>, '/'<span style="color: #000000;">);

  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$path</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>然后，修改了一些PHP设置。需要注意一下Drupal使用了cookie来传递会话ID，避免了将会话ID放在查询参数里面，导致请求URI太长：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> Don't escape quotes when reading files from the database, disk, etc.</span>
<span style="color: #008080;">ini_set</span>('magic_quotes_runtime', '0'<span style="color: #000000;">);
</span><span style="color: #008000;">//</span><span style="color: #008000;"> Use session cookies, not transparent sessions that puts the session id in
// the query string.</span>
<span style="color: #008080;">ini_set</span>('session.use_cookies', '1'<span style="color: #000000;">);
</span><span style="color: #008080;">ini_set</span>('session.use_only_cookies', '1'<span style="color: #000000;">);
</span><span style="color: #008080;">ini_set</span>('session.use_trans_sid', '0'<span style="color: #000000;">);
</span><span style="color: #008000;">//</span><span style="color: #008000;"> Don't send HTTP headers using PHP's session handler.</span>
<span style="color: #008080;">ini_set</span>('session.cache_limiter', 'none'<span style="color: #000000;">);
</span><span style="color: #008000;">//</span><span style="color: #008000;"> Use httponly session cookies.</span>
<span style="color: #008080;">ini_set</span>('session.cookie_httponly', '1');</pre>
</div>
<p>&nbsp;</p>
<h3>初始化设置</h3>
<p>初始化设置是通过函数drupal_settings_initialize()完成的。这里的设置是指Drupal的settings.php文件。需要注意的是，这里许多变量都做了global声明，也就是说这些变量在Drupal都是全局的。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">global</span> <span style="color: #800080;">$base_url</span>, <span style="color: #800080;">$base_path</span>, <span style="color: #800080;">$base_root</span><span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;"> Export these settings.php variables to the global namespace.</span>
<span style="color: #0000ff;">global</span> <span style="color: #800080;">$databases</span>, <span style="color: #800080;">$cookie_domain</span>, <span style="color: #800080;">$conf</span>, <span style="color: #800080;">$installed_profile</span>, <span style="color: #800080;">$update_free_access</span>, <span style="color: #800080;">$db_url</span>, <span style="color: #800080;">$db_prefix</span>, <span style="color: #800080;">$drupal_hash_salt</span>, <span style="color: #800080;">$is_https</span>, <span style="color: #800080;">$base_secure_url</span>, <span style="color: #800080;">$base_insecure_url</span>;</pre>
</div>
<p><br /><span style="line-height: 1.5;">首先，直接导入settings.php文件：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (<span style="color: #008080;">file_exists</span>(DRUPAL_ROOT . '/' . conf_path() . '/settings.php'<span style="color: #000000;">)) {
    </span><span style="color: #0000ff;">include_once</span> DRUPAL_ROOT . '/' . conf_path() . '/settings.php'<span style="color: #000000;">;
}</span></pre>
</div>
<p>conf_path()用来处理多站点的情形，具体可以参看《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/p/3351526.html">Drupal配置文件settings.php搜索规则</a>》。<br />settings.php文件必须申明数据库连接信息$databases。另外的，也可以设置Drupal配置变量。在settings.php文件中设置的配置变量具有最高优先级，会覆盖掉后台数据库variable表中的变量，这些变量可以通过variable_get()和variable_set()访问，可以参考《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/p/3355580.html">Drupal如何处理系统变量</a>》。例如，可以在settings.php设置代理信息：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$conf</span>['proxy_server'] = ''<span style="color: #000000;">;
</span><span style="color: #800080;">$conf</span>['proxy_port'] = 8080<span style="color: #000000;">;
</span><span style="color: #800080;">$conf</span>['proxy_username'] = ''<span style="color: #000000;">;
</span><span style="color: #800080;">$conf</span>['proxy_password'] = ''<span style="color: #000000;">;
</span><span style="color: #800080;">$conf</span>['proxy_user_agent'] = ''<span style="color: #000000;">;
</span><span style="color: #800080;">$conf</span>['proxy_exceptions'] = <span style="color: #0000ff;">array</span>('127.0.0.1', 'localhost');</pre>
</div>
<p><br />然后，处理各种与URL有关的信息：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$is_https</span> = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_SERVER</span>['HTTPS']) &amp;&amp; <span style="color: #008080;">strtolower</span>(<span style="color: #800080;">$_SERVER</span>['HTTPS']) == 'on'<span style="color: #000000;">;

</span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$base_url</span><span style="color: #000000;">)) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Parse fixed base URL from settings.php.</span>
  <span style="color: #800080;">$parts</span> = <span style="color: #008080;">parse_url</span>(<span style="color: #800080;">$base_url</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$parts</span>['path'<span style="color: #000000;">])) {
    </span><span style="color: #800080;">$parts</span>['path'] = ''<span style="color: #000000;">;
  }
  </span><span style="color: #800080;">$base_path</span> = <span style="color: #800080;">$parts</span>['path'] . '/'<span style="color: #000000;">;
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Build $base_root (everything until first slash after "scheme://").</span>
  <span style="color: #800080;">$base_root</span> = <span style="color: #008080;">substr</span>(<span style="color: #800080;">$base_url</span>, 0, <span style="color: #008080;">strlen</span>(<span style="color: #800080;">$base_url</span>) - <span style="color: #008080;">strlen</span>(<span style="color: #800080;">$parts</span>['path'<span style="color: #000000;">]));
}
</span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Create base URL.</span>
  <span style="color: #800080;">$http_protocol</span> = <span style="color: #800080;">$is_https</span> ? 'https' : 'http'<span style="color: #000000;">;
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> http://localhost</span>
  <span style="color: #800080;">$base_root</span> = <span style="color: #800080;">$http_protocol</span> . '://' . <span style="color: #800080;">$_SERVER</span>['HTTP_HOST'<span style="color: #000000;">];

  </span><span style="color: #800080;">$base_url</span> = <span style="color: #800080;">$base_root</span><span style="color: #000000;">;

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> $_SERVER['SCRIPT_NAME'] can, in contrast to $_SERVER['PHP_SELF'], not
  // be modified by a visitor.</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$dir</span> = <span style="color: #008080;">rtrim</span>(<span style="color: #008080;">dirname</span>(<span style="color: #800080;">$_SERVER</span>['SCRIPT_NAME']), '\/'<span style="color: #000000;">)) {
    </span><span style="color: #800080;">$base_path</span> = <span style="color: #800080;">$dir</span><span style="color: #000000;">;
    </span><span style="color: #800080;">$base_url</span> .= <span style="color: #800080;">$base_path</span><span style="color: #000000;">;
    </span><span style="color: #800080;">$base_path</span> .= '/'<span style="color: #000000;">;
  }
  </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
    </span><span style="color: #800080;">$base_path</span> = '/'<span style="color: #000000;">;
  }
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> $base_path = /drupal/
  // $base_url = http://localhost/drupal/</span>
<span style="color: #000000;">}

</span><span style="color: #800080;">$base_secure_url</span> = <span style="color: #008080;">str_replace</span>('http://', 'https://', <span style="color: #800080;">$base_url</span><span style="color: #000000;">);
</span><span style="color: #800080;">$base_insecure_url</span> = <span style="color: #008080;">str_replace</span>('https://', 'http://', <span style="color: #800080;">$base_url</span>);</pre>
</div>
<p><br />最后，处理Cookie和会话有关的信息：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$cookie_domain</span><span style="color: #000000;">) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> If the user specifies the cookie domain, also use it for session name.</span>
  <span style="color: #800080;">$session_name</span> = <span style="color: #800080;">$cookie_domain</span><span style="color: #000000;">;
}
</span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Otherwise use $base_url as session name, without the protocol
  // to use the same session identifiers across HTTP and HTTPS.</span>
  <span style="color: #0000ff;">list</span>( , <span style="color: #800080;">$session_name</span>) = <span style="color: #008080;">explode</span>('://', <span style="color: #800080;">$base_url</span>, 2<span style="color: #000000;">);
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> 最后的会话Cookie名称是 session_name('SESS' . substr(hash('sha256', 'localhost/drupal'), 0, 32))
  
  // HTTP_HOST can be modified by a visitor, but we already sanitized it
  // in drupal_settings_initialize().</span>
  <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_HOST'<span style="color: #000000;">])) {
    </span><span style="color: #800080;">$cookie_domain</span> = <span style="color: #800080;">$_SERVER</span>['HTTP_HOST'<span style="color: #000000;">];
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Strip leading periods, www., and port numbers from cookie domain.</span>
    <span style="color: #800080;">$cookie_domain</span> = <span style="color: #008080;">ltrim</span>(<span style="color: #800080;">$cookie_domain</span>, '.'<span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">strpos</span>(<span style="color: #800080;">$cookie_domain</span>, 'www.') === 0<span style="color: #000000;">) {
      </span><span style="color: #800080;">$cookie_domain</span> = <span style="color: #008080;">substr</span>(<span style="color: #800080;">$cookie_domain</span>, 4<span style="color: #000000;">);
    }
    </span><span style="color: #800080;">$cookie_domain</span> = <span style="color: #008080;">explode</span>(':', <span style="color: #800080;">$cookie_domain</span><span style="color: #000000;">);
    </span><span style="color: #800080;">$cookie_domain</span> = '.' . <span style="color: #800080;">$cookie_domain</span>[0<span style="color: #000000;">];
  }
}
</span><span style="color: #008000;">//</span><span style="color: #008000;"> Per RFC 2109, cookie domains must contain at least one dot other than the
// first. For hosts such as 'localhost' or IP Addresses we don't set a cookie domain.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #008080;">count</span>(<span style="color: #008080;">explode</span>('.', <span style="color: #800080;">$cookie_domain</span>)) &gt; 2 &amp;&amp; !<span style="color: #008080;">is_numeric</span>(<span style="color: #008080;">str_replace</span>('.', '', <span style="color: #800080;">$cookie_domain</span><span style="color: #000000;">))) {
  </span><span style="color: #008080;">ini_set</span>('session.cookie_domain', <span style="color: #800080;">$cookie_domain</span><span style="color: #000000;">);
}
</span><span style="color: #008000;">//</span><span style="color: #008000;"> To prevent session cookies from being hijacked, a user can configure the
// SSL version of their website to only transfer session cookies via SSL by
// using PHP's session.cookie_secure setting. The browser will then use two
// separate session cookies for the HTTPS and HTTP versions of the site. So we
// must use different session identifiers for HTTPS and HTTP to prevent a
// cookie collision.</span>
<span style="color: #0000ff;">if</span> (<span style="color: #800080;">$is_https</span><span style="color: #000000;">) {
  </span><span style="color: #008080;">ini_set</span>('session.cookie_secure', <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">);
}
</span><span style="color: #800080;">$prefix</span> = <span style="color: #008080;">ini_get</span>('session.cookie_secure') ? 'SSESS' : 'SESS'<span style="color: #000000;">;
</span><span style="color: #008080;">session_name</span>(<span style="color: #800080;">$prefix</span> . <span style="color: #008080;">substr</span>(hash('sha256', <span style="color: #800080;">$session_name</span>), 0, 32));</pre>
</div>
<p>这里说明一下，Drupal的会话Cookie名称使用了SESS前缀再加上URL路径的形式：</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">session_name</span>('SESS' . <span style="color: #008080;">substr</span>(hash('sha256', 'localhost/drupal'), 0, 32))</pre>
</div>
<p>透过Chrome浏览器可以很直观地看到这一点：<br /><img src="http://images.cnitblog.com/blog/111826/201310/08112010-cd12077805fb478eaba2ebbf605a1b19.png" alt="" /></p>]]></description></item><item><title>Drupal启动过程</title><link>http://www.cnblogs.com/eastson/archive/2013/10/07/3355682.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 07 Oct 2013 08:51:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/07/3355682.html</guid><description><![CDATA[<p>Drupal整个启动过程共分为8个阶段：</p>
<ul>
<li>DRUPAL_BOOTSTRAP_CONFIGURATION：initialize configuration</li>
<li>    DRUPAL_BOOTSTRAP_PAGE_CACHE：try to serve a cached page</li>
<li>    DRUPAL_BOOTSTRAP_DATABASE：initialize database layer</li>
<li>    DRUPAL_BOOTSTRAP_VARIABLES：initialize the variable system</li>
<li>    DRUPAL_BOOTSTRAP_SESSION：initialize session handling</li>
<li>    DRUPAL_BOOTSTRAP_PAGE_HEADER：set up the page header</li>
<li>    DRUPAL_BOOTSTRAP_LANGUAGE：find out language of the page</li>
<li>    DRUPAL_BOOTSTRAP_FULL：Drupal is fully loaded; validate and fix input data</li>
</ul>
<p><br />根据不同的目的，可以控制Drupal启动到不同的阶段。例如，index.php就需要Drupal完全启动：</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #008080;">define</span>('DRUPAL_ROOT', <span style="color: #008080;">getcwd</span><span style="color: #000000;">());
</span><span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/includes/bootstrap.inc'<span style="color: #000000;">;
drupal_bootstrap(DRUPAL_BOOTSTRAP_FULL);

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 完全启动后再执行菜单请求处理</span>
menu_execute_active_handler();</pre>
</div>
<p>&nbsp;</p>
<p>我有一个demo.php文件，用来测试Drupal数据库API，因此只需要数据库启动完成就可以了，后面的不需要执行：</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #008080;">define</span>('DRUPAL_ROOT', <span style="color: #008080;">getcwd</span><span style="color: #000000;">());
</span><span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/includes/bootstrap.inc'<span style="color: #000000;">;
drupal_bootstrap(DRUPAL_BOOTSTRAP_DATABASE);

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 到这里就可以使用数据库API了</span>
<span style="color: #800080;">$result</span> = db_query('SELECT nid, title FROM node');</pre>
</div>]]></description></item><item><title>Drupal处理缓存的方式</title><link>http://www.cnblogs.com/eastson/archive/2013/10/07/3355610.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 07 Oct 2013 08:03:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/07/3355610.html</guid><description><![CDATA[<p>Drupal的后台数据库中有很多以cache开头的表，这些都是Drupal的缓存数据表。<br /><img src="http://images.cnitblog.com/blog/111826/201310/07155126-d75b5352fbd64fe4b62d37b5409d20f7.png" alt="" /></p>
<p>&nbsp;</p>
<p>Drupal的缓存机制使用了接口方式，所有的缓存对象都必须实现DrupalCacheInterface接口：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">interface</span><span style="color: #000000;"> DrupalCacheInterface {
  </span><span style="color: #0000ff;">function</span> get(<span style="color: #800080;">$cid</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">function</span> getMultiple(&amp;<span style="color: #800080;">$cids</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">function</span> set(<span style="color: #800080;">$cid</span>, <span style="color: #800080;">$data</span>, <span style="color: #800080;">$expire</span> =<span style="color: #000000;"> CACHE_PERMANENT);
  </span><span style="color: #0000ff;">function</span> clear(<span style="color: #800080;">$cid</span> = <span style="color: #0000ff;">NULL</span>, <span style="color: #800080;">$wildcard</span> = <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> isEmpty();
}</span></pre>
</div>
<p>默认的缓存实现是DrupalDatabaseCache，使用数据表来保存缓存对象。数据库中的这些以cache开头的表，实际上就是一个表对应一个DrupalDatabaseCache对象。</p>
<p>&nbsp;</p>
<p>其它的Cache实现：</p>
<p id="page-subtitle"><a href="https://drupal.org/project/apc">APC - Alternative PHP Cache</a></p>
<p id="page-subtitle"><a href="https://drupal.org/project/memcache">Memcache API and Integration</a></p>]]></description></item><item><title>Drupal如何处理系统变量？</title><link>http://www.cnblogs.com/eastson/archive/2013/10/07/3355580.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 07 Oct 2013 07:47:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/07/3355580.html</guid><description><![CDATA[<p>Drupal的系统变量都保存在数据库variable表中：<br /><img src="http://images.cnitblog.com/blog/111826/201310/07153450-7fae0d14be80480a9992b34d96eae261.png" alt="" /></p>
<p>&nbsp;</p>
<p>然后，开发人员可以通过下面的API函数操作这些系统变量：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> variable_get(<span style="color: #800080;">$name</span>, <span style="color: #800080;">$default</span> = <span style="color: #0000ff;">NULL</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$conf</span><span style="color: #000000;">;
  </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$conf</span>[<span style="color: #800080;">$name</span>]) ? <span style="color: #800080;">$conf</span>[<span style="color: #800080;">$name</span>] : <span style="color: #800080;">$default</span><span style="color: #000000;">;
}

</span><span style="color: #0000ff;">function</span> variable_set(<span style="color: #800080;">$name</span>, <span style="color: #800080;">$value</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$conf</span><span style="color: #000000;">;
  db_merge(</span>'variable')-&gt;<span style="color: #008080;">key</span>(<span style="color: #0000ff;">array</span>('name' =&gt; <span style="color: #800080;">$name</span>))-&gt;fields(<span style="color: #0000ff;">array</span>('value' =&gt; <span style="color: #008080;">serialize</span>(<span style="color: #800080;">$value</span>)))-&gt;<span style="color: #000000;">execute();
  cache_clear_all(</span>'variables', 'cache_bootstrap'<span style="color: #000000;">);
  </span><span style="color: #800080;">$conf</span>[<span style="color: #800080;">$name</span>] = <span style="color: #800080;">$value</span><span style="color: #000000;">;
}

</span><span style="color: #0000ff;">function</span> variable_del(<span style="color: #800080;">$name</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$conf</span><span style="color: #000000;">;
  db_delete(</span>'variable'<span style="color: #000000;">)
    </span>-&gt;condition('name', <span style="color: #800080;">$name</span><span style="color: #000000;">)
    </span>-&gt;<span style="color: #000000;">execute();
  cache_clear_all(</span>'variables', 'cache_bootstrap'<span style="color: #000000;">);
  </span><span style="color: #0000ff;">unset</span>(<span style="color: #800080;">$conf</span>[<span style="color: #800080;">$name</span><span style="color: #000000;">]);
}</span></pre>
</div>
<p>&nbsp;</p>
<p>从这些API函数可以知道，系统变量从variable表读取出来后，都放在了全局变量$conf里面。那全局变量$conf是如何初始化的呢？这实际上是通过在Bootstrap过程中调用variable_initialize()函数完成的:</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> variable_initialize(<span style="color: #800080;">$conf</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">()) {
  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$cached</span> = cache_get('variables', 'cache_bootstrap'<span style="color: #000000;">)) {
    </span><span style="color: #800080;">$variables</span> = <span style="color: #800080;">$cached</span>-&gt;<span style="color: #000000;">data;
  }
  </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Cache miss. Avoid a stampede.</span>
    <span style="color: #800080;">$name</span> = 'variable_init'<span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (!lock_acquire(<span style="color: #800080;">$name</span>, 1<span style="color: #000000;">)) {
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> Another request is building the variable cache.
      // Wait, then re-run this function.</span>
      lock_wait(<span style="color: #800080;">$name</span><span style="color: #000000;">);
      </span><span style="color: #0000ff;">return</span> variable_initialize(<span style="color: #800080;">$conf</span><span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
      </span><span style="color: #008000;">//</span><span style="color: #008000;"> Proceed with variable rebuild.</span>
      <span style="color: #800080;">$variables</span> = <span style="color: #008080;">array_map</span>('unserialize', db_query('SELECT name, value FROM {variable}')-&gt;<span style="color: #000000;">fetchAllKeyed());
      cache_set(</span>'variables', <span style="color: #800080;">$variables</span>, 'cache_bootstrap'<span style="color: #000000;">);
      lock_release(</span><span style="color: #800080;">$name</span><span style="color: #000000;">);
    }
  }

  </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$conf</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$name</span> =&gt; <span style="color: #800080;">$value</span><span style="color: #000000;">) {
    </span><span style="color: #800080;">$variables</span>[<span style="color: #800080;">$name</span>] = <span style="color: #800080;">$value</span><span style="color: #000000;">;
  }

  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$variables</span><span style="color: #000000;">;
}</span></pre>
</div>]]></description></item><item><title>Solution multisite htaccess cleanURL</title><link>http://www.cnblogs.com/eastson/archive/2013/10/05/3352572.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 05 Oct 2013 08:47:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/05/3352572.html</guid><description><![CDATA[<p>My solution to getting Clean URL working with my multisite setup drupal 4.7<br /><br />I added Alias to my httpd.conf apache file:</p>
<div class="cnblogs_code">
<pre>&lt;VirtualHost *:80&gt;
    <span style="color: #008000;">#</span><span style="color: #008000;"> Alias for all php drupal sites</span>
    Alias /abc /<span style="color: #0000ff;">var</span>/www/html/<span style="color: #000000;">drupal
    Alias </span>/def /<span style="color: #0000ff;">var</span>/www/html/<span style="color: #000000;">drupal
    Alias </span>/xyz /<span style="color: #0000ff;">var</span>/www/html/<span style="color: #000000;">drupal
</span>&lt;/VirtualHost&gt;</pre>
</div>
<p>&nbsp;</p>
<p>My setup has 4 sites /drupal, /abc, /def, /xyz all files are in the /drupal directory</p>
<ul>
<li>url=/drupal (sites/default/)</li>
<li>url=/abc (sites/localhost.abc/)</li>
<li>url=/def (sites/localhost.def/)</li>
<li>url=/xyz (sites/localhost.xyz/)</li>

</ul>
<p>&nbsp;</p>
<p>In the /drupal/.htacess file. I added a RewriteCond %{REQUEST_URI} condition for<br />each site, and so have separate RewriteRule for each site.<br />No need for the RewriteBase directive, leave it commented out:</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;">RewriteBase /drupal  DO NOT NEED THIS, COMMENT OUT</span>
<span style="color: #000000;">
RewriteCond </span>%{REQUEST_FILENAME} !-<span style="color: #000000;">f
RewriteCond </span>%{REQUEST_FILENAME} !-<span style="color: #000000;">d
RewriteCond </span>%{REQUEST_URI} ^/drupal/(.*<span style="color: #000000;">)$
RewriteRule </span>^(.*)$ /drupal/index.php?q=$1 [L,<span style="color: #000000;">QSA]

RewriteCond </span>%{REQUEST_FILENAME} !-<span style="color: #000000;">f
RewriteCond </span>%{REQUEST_FILENAME} !-<span style="color: #000000;">d
RewriteCond </span>%{REQUEST_URI} ^/abc/(.*<span style="color: #000000;">)$
RewriteRule </span>^(.*)$ /abc/index.php?q=$1 [L,<span style="color: #000000;">QSA]

RewriteCond </span>%{REQUEST_FILENAME} !-<span style="color: #000000;">f
RewriteCond </span>%{REQUEST_FILENAME} !-<span style="color: #000000;">d
RewriteCond </span>%{REQUEST_URI} ^/def/(.*<span style="color: #000000;">)$
RewriteRule </span>^(.*)$ /def/index.php?q=$1 [L,<span style="color: #000000;">QSA]

RewriteCond </span>%{REQUEST_FILENAME} !-<span style="color: #000000;">f
RewriteCond </span>%{REQUEST_FILENAME} !-<span style="color: #000000;">d
RewriteCond </span>%{REQUEST_URI} ^/xyz/(.*<span style="color: #000000;">)$
RewriteRule </span>^(.*)$ /xyz/index.php?q=$1 [L,QSA]</pre>
</div>
<p>&nbsp;</p>
<p>Note: each site has its own database aswell as files, modules and themes directories in the corresponding sites/localhost.site/ directory.</p>]]></description></item><item><title>Drupal如何更新注册表？</title><link>http://www.cnblogs.com/eastson/archive/2013/10/05/3352202.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 05 Oct 2013 02:57:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/05/3352202.html</guid><description><![CDATA[<p>Drupal的注册表是指registry和registry_file两个数据表。前一个表保存所有可用的类和接口以及它们所对应的文件，后一个表保存每个文件的hash码。<br /><br /><span style="line-height: 1.5;">1. 将所有需要更新的文件都汇总的$files数组：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> 需要更新的文件有两部分：一是系统includes目录下所有的.inc文件，二是模块描述文件中通过files属性声明的文件。</span>

<span style="color: #800080;">$files</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();

</span><span style="color: #800080;">$modules</span> = db_query("SELECT * FROM {system} WHERE type = 'module'")-&gt;<span style="color: #000000;">fetchAll();
</span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$modules</span> <span style="color: #0000ff;">as</span> &amp;<span style="color: #800080;">$module</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$module</span>-&gt;info = <span style="color: #008080;">unserialize</span>(<span style="color: #800080;">$module</span>-&gt;<span style="color: #000000;">info);
  </span><span style="color: #800080;">$dir</span> = <span style="color: #008080;">dirname</span>(<span style="color: #800080;">$module</span>-&gt;<span style="color: #000000;">filename);
  </span><span style="color: #800080;">$module</span>-&gt;<span style="color: #008080;">dir</span> = <span style="color: #800080;">$dir</span><span style="color: #000000;">;

  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$module</span>-&gt;<span style="color: #000000;">status) {
    </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$module</span>-&gt;info['files'] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$file</span><span style="color: #000000;">) {
      </span><span style="color: #800080;">$files</span>["<span style="color: #800080;">$dir</span>/<span style="color: #800080;">$file</span>"] = <span style="color: #0000ff;">array</span>('module' =&gt; <span style="color: #800080;">$module</span>-&gt;name, 'weight' =&gt; <span style="color: #800080;">$module</span>-&gt;<span style="color: #000000;">weight);
    }
  }
}

</span><span style="color: #0000ff;">foreach</span> (file_scan_directory('includes', '/\.inc$/') <span style="color: #0000ff;">as</span> <span style="color: #800080;">$filename</span> =&gt; <span style="color: #800080;">$file</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$files</span>["<span style="color: #800080;">$filename</span>"] = <span style="color: #0000ff;">array</span>('module' =&gt; '', 'weight' =&gt; 0<span style="color: #000000;">);
}</span></pre>
</div>
<p><br /><span style="line-height: 1.5;">2. 更新$files数组的hash属性：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">foreach</span> (db_query("SELECT * FROM {registry_file}")-&gt;fetchAllAssoc('filename', PDO::<span style="color: #000000;">FETCH_ASSOC) 
                                                </span><span style="color: #0000ff;">as</span> <span style="color: #800080;">$filename</span> =&gt; <span style="color: #800080;">$file</span><span style="color: #000000;">) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Add the hash for those files we have already parsed.</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$files</span>[<span style="color: #800080;">$filename</span><span style="color: #000000;">])) {
    </span><span style="color: #800080;">$files</span>[<span style="color: #800080;">$filename</span>]['hash'] = <span style="color: #800080;">$file</span>['hash'<span style="color: #000000;">];
  }
  </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Flush the registry of resources in files that are no longer on disc
    // or are in files that no installed modules require to be parsed.</span>
    db_delete('registry'<span style="color: #000000;">)
      </span>-&gt;condition('filename', <span style="color: #800080;">$filename</span><span style="color: #000000;">)
      </span>-&gt;<span style="color: #000000;">execute();
    db_delete(</span>'registry_file'<span style="color: #000000;">)
      </span>-&gt;condition('filename', <span style="color: #800080;">$filename</span><span style="color: #000000;">)
      </span>-&gt;<span style="color: #000000;">execute();
  }
}</span></pre>
</div>
<p><br /><span style="line-height: 1.5;">3. 更新registry和registry_file表：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$parsed_files</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 重新计算每个文件的Hash码</span>
<span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$files</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$filename</span> =&gt; <span style="color: #800080;">$file</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">file_exists</span>(<span style="color: #800080;">$filename</span><span style="color: #000000;">)) {
    </span><span style="color: #800080;">$hash</span> = hash_file('sha256', <span style="color: #800080;">$filename</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$file</span>['hash']) || <span style="color: #800080;">$file</span>['hash'] != <span style="color: #800080;">$hash</span><span style="color: #000000;">) {
      </span><span style="color: #800080;">$file</span>['hash'] = <span style="color: #800080;">$hash</span><span style="color: #000000;">;
      </span><span style="color: #800080;">$parsed_files</span>[<span style="color: #800080;">$filename</span>] = <span style="color: #800080;">$file</span><span style="color: #000000;">;
    }
  }
}

</span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$parsed_files</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$filename</span> =&gt; <span style="color: #800080;">$file</span><span style="color: #000000;">) {
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> 搜索文件中的类和接口</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #008080;">preg_match_all</span>('/^\s*(?:abstract|final)?\s*(class|interface)\s+([a-zA-Z0-9_]+)/m', 
                                    <span style="color: #008080;">file_get_contents</span>(<span style="color: #800080;">$filename</span>), <span style="color: #800080;">$matches</span><span style="color: #000000;">)) {
    </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$matches</span>[2] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$key</span> =&gt; <span style="color: #800080;">$name</span><span style="color: #000000;">) {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 将类和接口名称更新到registry表</span>
      db_merge('registry'<span style="color: #000000;">)
        </span>-&gt;<span style="color: #008080;">key</span>(<span style="color: #0000ff;">array</span><span style="color: #000000;">(
          </span>'name' =&gt; <span style="color: #800080;">$name</span>,
          'type' =&gt; <span style="color: #800080;">$matches</span>[1][<span style="color: #800080;">$key</span>],<span style="color: #000000;">
        ))
        </span>-&gt;fields(<span style="color: #0000ff;">array</span><span style="color: #000000;">(
          </span>'filename' =&gt; <span style="color: #800080;">$filename</span>,
          'module' =&gt; <span style="color: #800080;">$module</span>,
          'weight' =&gt; <span style="color: #800080;">$weight</span>,<span style="color: #000000;">
        ))
        </span>-&gt;<span style="color: #000000;">execute();
    }
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> Delete any resources for this file where the name is not in the list
    // we just merged in.</span>
    db_delete('registry'<span style="color: #000000;">)
      </span>-&gt;condition('filename', <span style="color: #800080;">$filename</span><span style="color: #000000;">)
      </span>-&gt;condition('name', <span style="color: #800080;">$matches</span>[2], 'NOT IN'<span style="color: #000000;">)
      </span>-&gt;<span style="color: #000000;">execute();
  }
  
  </span><span style="color: #008000;">//</span><span style="color: #008000;"> 更新registry_file表</span>
  db_merge('registry_file'<span style="color: #000000;">)
    </span>-&gt;<span style="color: #008080;">key</span>(<span style="color: #0000ff;">array</span>('filename' =&gt; <span style="color: #800080;">$filename</span><span style="color: #000000;">))
    </span>-&gt;fields(<span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>'hash' =&gt; <span style="color: #800080;">$file</span>['hash'],<span style="color: #000000;">
    ))
    </span>-&gt;<span style="color: #000000;">execute();
}</span></pre>
</div>
<p><br />所以，模块安装时，让Drupal自动更新注册表的关键是要在.info文件中注明files属性。例如，comment模块的.info文件就是这样写的：</p>
<div class="cnblogs_code">
<pre>name =<span style="color: #000000;"> Comment
description </span>= Allows users to comment on and discuss published content.<span style="color: #000000;">
package </span>=<span style="color: #000000;"> Core
version </span>=<span style="color: #000000;"> VERSION
core </span>= 7.<span style="color: #000000;">x
dependencies[] </span>=<span style="color: #000000;"> text
files[] </span>= comment.<span style="color: #000000;">module
files[] </span>= comment.<span style="color: #000000;">test
configure </span>= admin/content/<span style="color: #000000;">comment
stylesheets[all][] </span>= comment.css</pre>
</div>]]></description></item><item><title>Drupal如何实现类的自动加载？</title><link>http://www.cnblogs.com/eastson/archive/2013/10/05/3352170.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 05 Oct 2013 02:26:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/05/3352170.html</guid><description><![CDATA[<p>Drupal通过spl_autoload_register()注册类加载器实现自动加载：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> _drupal_bootstrap_database() {
  </span>// ... ....<span style="color: #000000;">
  spl_autoload_register(</span>'drupal_autoload_class'<span style="color: #000000;">);
  spl_autoload_register(</span>'drupal_autoload_interface'<span style="color: #000000;">);
}</span></pre>
</div>
<p>&nbsp;</p>
<p>再来看看类加载器是如何实现的？</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> drupal_autoload_interface(<span style="color: #800080;">$interface</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">return</span> _registry_check_code('interface', <span style="color: #800080;">$interface</span><span style="color: #000000;">);
}

</span><span style="color: #0000ff;">function</span> drupal_autoload_class(<span style="color: #800080;">$class</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">return</span> _registry_check_code('class', <span style="color: #800080;">$class</span><span style="color: #000000;">);
}

</span><span style="color: #0000ff;">function</span> _registry_check_code(<span style="color: #800080;">$type</span>, <span style="color: #800080;">$name</span> = <span style="color: #0000ff;">NULL</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">static</span> <span style="color: #800080;">$lookup_cache</span>, <span style="color: #800080;">$cache_update_needed</span><span style="color: #000000;">;

  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$type</span> == 'class' &amp;&amp; <span style="color: #008080;">class_exists</span>(<span style="color: #800080;">$name</span>) || <span style="color: #800080;">$type</span> == 'interface' &amp;&amp; <span style="color: #008080;">interface_exists</span>(<span style="color: #800080;">$name</span><span style="color: #000000;">)) {
    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;
  }

  </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$lookup_cache</span><span style="color: #000000;">)) {
    </span><span style="color: #800080;">$lookup_cache</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$cache</span> = cache_get('lookup_cache', 'cache_bootstrap'<span style="color: #000000;">)) {
      </span><span style="color: #800080;">$lookup_cache</span> = <span style="color: #800080;">$cache</span>-&gt;<span style="color: #000000;">data;
    }
  }

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> When we rebuild the registry, we need to reset this cache so
  // we don't keep lookups for resources that changed during the rebuild.</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$type</span> ==<span style="color: #000000;"> REGISTRY_RESET_LOOKUP_CACHE) {
    </span><span style="color: #800080;">$cache_update_needed</span> = <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;
    </span><span style="color: #800080;">$lookup_cache</span> = <span style="color: #0000ff;">NULL</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
  }

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Called from drupal_page_footer, we write to permanent storage if there
  // changes to the lookup cache for this request.</span>
  <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$type</span> ==<span style="color: #000000;"> REGISTRY_WRITE_LOOKUP_CACHE) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$cache_update_needed</span><span style="color: #000000;">) {
      cache_set(</span>'lookup_cache', <span style="color: #800080;">$lookup_cache</span>, 'cache_bootstrap'<span style="color: #000000;">);
    }
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
  }

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> $type is either 'interface' or 'class', so we only need the first letter to
  // keep the cache key unique.</span>
  <span style="color: #800080;">$cache_key</span> = <span style="color: #800080;">$type</span>[0] . <span style="color: #800080;">$name</span><span style="color: #000000;">;
  </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$lookup_cache</span>[<span style="color: #800080;">$cache_key</span><span style="color: #000000;">])) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$lookup_cache</span>[<span style="color: #800080;">$cache_key</span><span style="color: #000000;">]) {
      </span><span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/' . <span style="color: #800080;">$lookup_cache</span>[<span style="color: #800080;">$cache_key</span><span style="color: #000000;">];
    }
    </span><span style="color: #0000ff;">return</span> (bool) <span style="color: #800080;">$lookup_cache</span>[<span style="color: #800080;">$cache_key</span><span style="color: #000000;">];
  }

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> This function may get called when the default database is not active, but
  // there is no reason we'd ever want to not use the default database for
  // this query.</span>
  <span style="color: #800080;">$file</span> = Database::getConnection('default', 'default')-&gt;query("SELECT filename FROM {registry} WHERE name = :name AND type = :type", <span style="color: #0000ff;">array</span><span style="color: #000000;">(
      </span>':name' =&gt; <span style="color: #800080;">$name</span>,
      ':type' =&gt; <span style="color: #800080;">$type</span>,<span style="color: #000000;">
    ))
    </span>-&gt;<span style="color: #000000;">fetchField();

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Flag that we've run a lookup query and need to update the cache.</span>
  <span style="color: #800080;">$cache_update_needed</span> = <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> Misses are valuable information worth caching, so cache even if
  // $file is FALSE.</span>
  <span style="color: #800080;">$lookup_cache</span>[<span style="color: #800080;">$cache_key</span>] = <span style="color: #800080;">$file</span><span style="color: #000000;">;

  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$file</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/' . <span style="color: #800080;">$file</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">TRUE</span><span style="color: #000000;">;
  }
  </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">;
  }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>留意下面这段代码：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$file</span>= Database::getConnection('default','default')-&gt;query("SELECT filename FROM {registry} WHERE name = :name AND type = :type",<span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>':name' =&gt; <span style="color: #800080;">$name</span>,
    ':type' =&gt; <span style="color: #800080;">$type</span>,<span style="color: #000000;">
))</span>-&gt;fetchField();</pre>
</div>
<p>类加载器要自动加载DatabaseLog这个类，需要去哪里找对应的文件？</p>
<p>&nbsp;</p>
<p>Drupal采用了注册表的方式解决这个问题，它将所有可用的类和接口以及它们对应的文件保存一个名为registry的数据表中。类加载器依据类名就可以简单地找到对应的文件。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201310/05102514-cef6cc6d410d4087a3ef55dd5feaacf2.png" alt="" /></p>]]></description></item><item><title>simpletest：一个简单的PHP试工具</title><link>http://www.cnblogs.com/eastson/archive/2013/10/04/3351619.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 04 Oct 2013 08:44:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/04/3351619.html</guid><description><![CDATA[<p><span>1. 下载：&nbsp;<a href="http://simpletest.org/">http://simpletest.org/</a>&nbsp;。</span><br /><span style="line-height: 1.5;">2.&nbsp;</span><span>下载后，只要测试文件中包含如下两个文件，就可以用了 ：<br /></span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php 
</span><span style="color: #0000ff;">require_once</span>('simpletest/autorun.php'<span style="color: #000000;">); 
</span><span style="color: #0000ff;">require_once</span>('simpletest/web_tester.php'<span style="color: #000000;">); 
</span>?&gt; </pre>
</div>
<p><span style="line-height: 1.5;">3. 比如测试一个界面：<br /></span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php 
</span><span style="color: #0000ff;">require_once</span>('simpletest/autorun.php'<span style="color: #000000;">); 
</span><span style="color: #0000ff;">require_once</span>('simpletest/web_tester.php'<span style="color: #000000;">); 

</span><span style="color: #0000ff;">class</span> SimpleFormTests <span style="color: #0000ff;">extends</span><span style="color: #000000;"> WebTestCase { 
  </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> testDoesContactPageExist() { 
    </span><span style="color: #800080;">$this</span>-&gt;get('http://www.example.com/contact.php'<span style="color: #000000;">); 
    </span><span style="color: #800080;">$this</span>-&gt;assertResponse(200<span style="color: #000000;">); 
  } 
} 
</span>?&gt; </pre>
</div>
<p><span style="line-height: 1.5;">还可以测试表单的提交动作：<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> testIsProperFormSubmissionSuccessful() { 
  </span><span style="color: #800080;">$this</span>-&gt;get('http://www.example.com/contact.php'<span style="color: #000000;">); 
  </span><span style="color: #800080;">$this</span>-&gt;assertResponse(200<span style="color: #000000;">); 

  </span><span style="color: #800080;">$this</span>-&gt;setField("name", "Jason"<span style="color: #000000;">); 
  </span><span style="color: #800080;">$this</span>-&gt;setField("email", "wj@example.com"<span style="color: #000000;">); 
  </span><span style="color: #800080;">$this</span>-&gt;setField("message", "I look forward to hearing from you!"<span style="color: #000000;">); 

  </span><span style="color: #800080;">$this</span>-&gt;clickSubmit("Contact us!"<span style="color: #000000;">); 

  </span><span style="color: #800080;">$this</span>-&gt;assertResponse(200<span style="color: #000000;">); 
  </span><span style="color: #800080;">$this</span>-&gt;assertText("We will be in touch within 24 hours."<span style="color: #000000;">); 
} </span></pre>
</div>
<p><span style="line-height: 1.5;">运行后会看到通过的情况：<br /><img src="http://images.cnitblog.com/blog/111826/201310/04164232-b612826ad0e94385990d8889237af45f.png" alt="" /><br /></span></p>
<p><br /><span>再</span><span>比如有个类LOG，是在磁盘上建立文件：<br /></span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php 
</span><span style="color: #0000ff;">require_once</span>('simpletest/unit_tester.php'<span style="color: #000000;">); 
</span><span style="color: #0000ff;">require_once</span>('simpletest/reporter.php'<span style="color: #000000;">); 
</span><span style="color: #0000ff;">require_once</span>('../classes/log.php'<span style="color: #000000;">); 

</span><span style="color: #0000ff;">class</span> TestOfLogging <span style="color: #0000ff;">extends</span><span style="color: #000000;"> UnitTestCase { 
    
    </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> testCreatingNewFile() { 
        @</span><span style="color: #008080;">unlink</span>('/temp/test.log'<span style="color: #000000;">); 
        </span><span style="color: #800080;">$log</span> = <span style="color: #0000ff;">new</span> <span style="color: #008080;">Log</span>('/temp/test.log'<span style="color: #000000;">); 
        </span><span style="color: #800080;">$this</span>-&gt;assertFalse(<span style="color: #008080;">file_exists</span>('/temp/test.log'<span style="color: #000000;">)); 
        </span><span style="color: #800080;">$log</span>-&gt;message('Should write this to a file'<span style="color: #000000;">); 
        </span><span style="color: #800080;">$this</span>-&gt;assertTrue(<span style="color: #008080;">file_exists</span>('/temp/test.log'<span style="color: #000000;">)); 
    } 
} 

</span><span style="color: #800080;">$test</span> = &amp;<span style="color: #0000ff;">new</span><span style="color: #000000;"> TestOfLogging(); 
</span><span style="color: #800080;">$test</span>-&gt;run(<span style="color: #0000ff;">new</span><span style="color: #000000;"> HtmlReporter()); 
</span>?&gt; </pre>
</div>
<p>&nbsp;</p>
<p><span>测试方法中所有都默认以test开头的，这点要注意,最后用$test-&gt;run(new HtmlReporter());表示以HTML格式输出</span></p>]]></description></item><item><title>Drupal配置文件settings.php搜索规则</title><link>http://www.cnblogs.com/eastson/archive/2013/10/04/3351526.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 04 Oct 2013 07:16:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/04/3351526.html</guid><description><![CDATA[<p>Drupal的配置文件搜索是通过bootstrap.inc的conf_path()函数实现的：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> conf_path(<span style="color: #800080;">$require_settings</span> = <span style="color: #0000ff;">TRUE</span>, <span style="color: #800080;">$reset</span> = <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$conf</span> = &amp;drupal_static(<span style="color: #ff00ff;">__FUNCTION__</span>, ''<span style="color: #000000;">);

  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$conf</span> &amp;&amp; !<span style="color: #800080;">$reset</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$conf</span><span style="color: #000000;">;
  }

  </span><span style="color: #800080;">$confdir</span> = 'sites'<span style="color: #000000;">;

  </span><span style="color: #800080;">$sites</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
  </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">file_exists</span>(DRUPAL_ROOT . '/' . <span style="color: #800080;">$confdir</span> . '/sites.php'<span style="color: #000000;">)) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> This will overwrite $sites with the desired mappings.</span>
    <span style="color: #0000ff;">include</span>(DRUPAL_ROOT . '/' . <span style="color: #800080;">$confdir</span> . '/sites.php'<span style="color: #000000;">);
  }

  </span><span style="color: #800080;">$uri</span> = <span style="color: #008080;">explode</span>('/', <span style="color: #800080;">$_SERVER</span>['SCRIPT_NAME'] ? <span style="color: #800080;">$_SERVER</span>['SCRIPT_NAME'] : <span style="color: #800080;">$_SERVER</span>['SCRIPT_FILENAME'<span style="color: #000000;">]);
  </span><span style="color: #800080;">$server</span> = <span style="color: #008080;">explode</span>('.', <span style="color: #008080;">implode</span>('.', <span style="color: #008080;">array_reverse</span>(<span style="color: #008080;">explode</span>(':', <span style="color: #008080;">rtrim</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_HOST'], '.'<span style="color: #000000;">)))));
  </span><span style="color: #0000ff;">for</span> (<span style="color: #800080;">$i</span> = <span style="color: #008080;">count</span>(<span style="color: #800080;">$uri</span>) - 1; <span style="color: #800080;">$i</span> &gt; 0; <span style="color: #800080;">$i</span>--<span style="color: #000000;">) {
    </span><span style="color: #0000ff;">for</span> (<span style="color: #800080;">$j</span> = <span style="color: #008080;">count</span>(<span style="color: #800080;">$server</span>); <span style="color: #800080;">$j</span> &gt; 0; <span style="color: #800080;">$j</span>--<span style="color: #000000;">) {
      </span><span style="color: #800080;">$dir</span> = <span style="color: #008080;">implode</span>('.', <span style="color: #008080;">array_slice</span>(<span style="color: #800080;">$server</span>, -<span style="color: #800080;">$j</span>)) . <span style="color: #008080;">implode</span>('.', <span style="color: #008080;">array_slice</span>(<span style="color: #800080;">$uri</span>, 0, <span style="color: #800080;">$i</span><span style="color: #000000;">));
      </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$sites</span>[<span style="color: #800080;">$dir</span>]) &amp;&amp; <span style="color: #008080;">file_exists</span>(DRUPAL_ROOT . '/' . <span style="color: #800080;">$confdir</span> . '/' . <span style="color: #800080;">$sites</span>[<span style="color: #800080;">$dir</span><span style="color: #000000;">])) {
        </span><span style="color: #800080;">$dir</span> = <span style="color: #800080;">$sites</span>[<span style="color: #800080;">$dir</span><span style="color: #000000;">];
      }
      </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">file_exists</span>(DRUPAL_ROOT . '/' . <span style="color: #800080;">$confdir</span> . '/' . <span style="color: #800080;">$dir</span> . '/settings.php') || (!<span style="color: #800080;">$require_settings</span> &amp;&amp; <span style="color: #008080;">file_exists</span>(DRUPAL_ROOT . '/' . <span style="color: #800080;">$confdir</span> . '/' . <span style="color: #800080;">$dir</span><span style="color: #000000;">))) {
        </span><span style="color: #800080;">$conf</span> = "<span style="color: #800080;">$confdir</span>/<span style="color: #800080;">$dir</span>"<span style="color: #000000;">;
        </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$conf</span><span style="color: #000000;">;
      }
    }
  }
  </span><span style="color: #800080;">$conf</span> = "<span style="color: #800080;">$confdir</span>/default"<span style="color: #000000;">;
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$conf</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>例如，对网址http://www.drupal.org:8080/mysite/test/的访问，Drupal会安装下面的顺序搜索配置文件：</p>
<div class="cnblogs_code">
<pre>sites/8080.www.drupal.org.mysite.<span style="color: #000000;">test
sites</span>/www.drupal.org.mysite.<span style="color: #000000;">test
sites</span>/drupal.org.mysite.<span style="color: #000000;">test
sites</span>/org.mysite.<span style="color: #000000;">test

sites</span>/8080.www.drupal.org.<span style="color: #000000;">mysite
sites</span>/www.drupal.org.<span style="color: #000000;">mysite
sites</span>/drupal.org.<span style="color: #000000;">mysite
sites</span>/org.<span style="color: #000000;">mysite

sites</span>/8080.www.drupal.<span style="color: #000000;">org
sites</span>/www.drupal.<span style="color: #000000;">org
sites</span>/drupal.<span style="color: #000000;">org
sites</span>/<span style="color: #000000;">org

sites</span>/<span style="color: #0000ff;">default</span></pre>
</div>
<p>&nbsp;</p>
<p>sites/sites.php可以为站点设置别名。例如可以把访问http://www.drupal.org:8080/mysite/test/的配置文件重定向到example.com/settings.php：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$sites</span>['8080.www.drupal.org.mysite.test'] = 'example.com';</pre>
</div>
<p>&nbsp;</p>
<p>参考：</p>
<p><a href="https://drupal.org/documentation/install/multi-site">Multisite - Sharing the same code base</a></p>]]></description></item><item><title>用physdiskwrite在VMware虚拟机上安装m0n0wall【转】</title><link>http://www.cnblogs.com/eastson/archive/2013/10/04/3351376.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 04 Oct 2013 03:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/10/04/3351376.html</guid><description><![CDATA[<p><span style="font-family: 黑体;">在一台PC机上安装m0n0wall，相信大家都有经验。一般采用两种方法：</span><br />1、在一台Windows XP或Windows 2000的PC上，下载physdiskwrite软件和m0n0wall映像文件（img文件），将一块硬盘（由于m0n0wall很小，因此很小容量的硬盘即可，1GB、2.1GB等均可；那种很老的210MB硬盘，只有是好的就能用）接入这台PC；如果用CF卡作为存储介质，可以使用读卡器或CF卡转IDE接口卡，将CF卡接入这台PC。在命令提示符窗口运行命令：</p>
<div class="cnblogs_code">
<pre>physdiskwrite [-u] &lt;image-<span style="color: #0000ff;">file</span>&gt;</pre>
</div>
<p><span style="line-height: 1.5;">这里-u对于physdiskwrite 0.5.1版来说，大于2GB的硬盘，需要添加这个参数；image-file是指m0n0wall的img文件，为方便起见，将m0n0wall的img文件和physdiskwrite.exe放在一个文件夹下。运行这个软件后提示选择要安装的磁盘，这里要特别注意不要选错，否则你的重要硬盘数据，在这一刹那就消失了。选择好磁盘，软件就将img文件安装到这块磁盘上了。好了，你拆下硬盘或CF卡，安装到作为防火墙的机子上，开启，顺利引导m0n0wall，至此m0n0wall安装完毕，可以正常配置m0n0wall了。</span></p>
<p>2、如果你只有一台作为防火墙的机子，那么你需要接上光驱，并准备一张WinPE光盘，将physdiskwrite软件和m0n0wall映像文件（img文件）拷贝到U盘上。先启动机子，用WinPE引导，进系统后插入U盘，然后在命令提示符窗口运行命令：</p>
<div class="cnblogs_code">
<pre>physdiskwrite [-u] &lt;image-<span style="color: #0000ff;">file</span>&gt;</pre>
</div>
<p><span style="line-height: 1.5;">安装m0n0wall的img文件到硬盘或CF卡上。拆除光驱和U盘，开启机子，顺利引导m0n0wall，至此m0n0wall安装完毕，可以正常配置m0n0wall了。</span></p>
<p><br />现在，对于许多初学者或需要测试和试验的朋友来说用虚拟机来安装运行m0n0wall，不失为一种方便而经济的方法。<br />想法有了，那就行动吧。于是安装VMware软件，下载physdiskwrite软件和m0n0wall映像文件（img文件），开始安装虚拟机。装好虚拟机发现有问题了，我<strong>如何将m0n0wall映像文件安装到虚拟机的虚拟硬盘上呢？</strong>很多朋友在这里被难住了，不知道如何进一步操作了。下面我为大家提供几种方法，供参考：<br />1、如果使用一块完整的硬盘安装m0n0wall，那么就很简单了。在宿主机上安装上这块硬盘，用以上介绍的单机安装m0n0wall的方法1，将m0n0wall映像文件安装到这块硬盘上。在虚拟机上将这块物理硬盘分配给虚拟机作引导盘，启动这虚拟机，引导m0n0wall了，即可正常配置m0n0wall。<br />2、如果不是用完整的物理硬盘而是用虚拟硬盘来安装m0n0wall，那就要复杂点。正常配置好虚拟机，用WinPE光盘或WinPE的iso文件虚拟光盘启动虚拟机，在USB口插入U盘（内有physdiskwrite软件和m0n0wall映像文件），宿主机是能识别的，我的VMware 6.5也能自动识别，如果是VMware以前的版本，不能自动识别U盘，可以在VMware软件的菜单上选VM-Removable Devices-USB Devices，即可识别宿主机的U盘了，按以上介绍的单机安装m0n0wall的方法2，即可将m0n0wall的img文件安装到虚拟机的虚拟硬盘上。退出WinPE光盘，重启虚拟机，即可引导m0n0wall，进行正常配置。<br />3、如果你已经有个安装了Windows XP的虚拟机，那么可以使用这个虚拟机来建立m0n0wall虚拟机。正常新建一个虚拟机，虚拟硬盘也设置好。在XP虚拟机上增加个虚拟硬盘，选择&ldquo;Use an existing virtual disk&rdquo;项，而这个虚拟硬盘文件为刚新建的虚拟机硬盘。然后在XP虚拟机上下载physdiskwrite软件和m0n0wall映像文件（img文件），在命令提示符窗口运行命令：physdiskwrite [-u] &lt;image-file&gt;，将m0n0wall的img文件安装到这个XP虚拟机的新增虚拟硬盘上（其实就是m0n0wall虚拟机的虚拟硬盘）。然后启动m0n0wall虚拟机，即可引导m0n0wall并正常配置了。<br /><br /><span style="font-family: 黑体;">在配置虚拟机的m0n0wall时，请注意虚拟机网卡的配置。</span><br /><strong>2个网卡，1个WAN口，1个LAN口，如果宿主机的网卡通过DHCP分配的IP，也想让m0n0wall的WAN口也通过DHCP分配IP，可以配置虚拟机的WAN口网卡桥接宿主机网卡即可。</strong><br />如果想用宿主机来配置m0n0wall，也就是让宿主机与m0n0wall的LAN口接在一个局域网内，这时选择m0n0wall的LAN口网卡桥接宿主机网卡（WAN口网卡就不能桥接宿主机网卡了），配置LAN口网卡IP地址（与宿主机IP在一个网段），然后登录m0n0wall以webGUI方式配置m0n0wall。<br />如果有XP虚拟机，要求用这个虚拟机来配置和管理m0n0wall，也就是让XP虚拟机与m0n0wall的LAN口接在一个局域网内，这需要在XP虚拟机的网卡和m0n0wall虚拟机LAN口网卡指定虚拟网络连接（VMnet2、VMnet3或VMnet4等），并配置同一网段的IP地址。<br />当然，也可以在虚拟机软件中，新建Team来组建多台虚拟机组成的局域网。<br />也可以用这几种方式来建立FreeNAS虚拟机（指的是嵌入版即img文件，如果是liveCD版的iso文件就没这么复杂了）。</p>
<p>用g4u在VMware虚拟机上安装m0n0wall，请看另篇博文介绍。</p>]]></description></item><item><title>Drupal如何SQL查询传递参数？</title><link>http://www.cnblogs.com/eastson/archive/2013/09/26/3341049.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 26 Sep 2013 08:28:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/09/26/3341049.html</guid><description><![CDATA[<p>Drupal使用称之为&ldquo;placeholder&rdquo;的方式处理SQL查询参数：</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #008000;">//</span><span style="color: #008000;"> WRONG:</span>
<span style="color: #800080;">$result</span> = db_query("SELECT nid, title FROM {node} WHERE type = ':type'", <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>':type' =&gt; 'page',<span style="color: #000000;">
));

</span><span style="color: #008000;">//</span><span style="color: #008000;"> CORRECT:</span>
<span style="color: #800080;">$result</span> = db_query("SELECT nid, title FROM {node} WHERE type = :type", <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>':type' =&gt; 'page',<span style="color: #000000;">
));
</span>?&gt;</pre>
</div>
<p>&nbsp;</p>
<p>数组参数主要是应用于IN查询的环境：</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #008000;">//</span><span style="color: #008000;"> If the placeholder value to insert is an array, assume that we need
// to expand it out into a comma-delimited set of placeholders.

// This code:</span>
db_query("SELECT * FROM {node} WHERE nid IN (:nids)", <span style="color: #0000ff;">array</span>(':nids' =&gt; <span style="color: #0000ff;">array</span>(13, 42, 144<span style="color: #000000;">));

</span><span style="color: #008000;">//</span><span style="color: #008000;"> Will get turned into this prepared statement equivalent automatically:</span>
db_query("SELECT * FROM {node} WHERE nid IN (:nids_1, :nids_2, :nids_3)", <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>':nids_1' =&gt; 13, 
  ':nids_2' =&gt; 42, 
  ':nids_3' =&gt; 144,<span style="color: #000000;">
));

</span><span style="color: #008000;">//</span><span style="color: #008000;"> Which is equivalent to the following literal query:</span>
db_query("SELECT * FROM {node} WHERE nid IN (13, 42, 144)"<span style="color: #000000;">);
</span>?&gt;</pre>
</div>
<p>&nbsp;</p>
<p>参考：<a href="https://drupal.org/node/310072">Drupal&nbsp;Static queries</a></p>]]></description></item><item><title>如何配置Drupal数据库信息？</title><link>http://www.cnblogs.com/eastson/archive/2013/09/24/3336313.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 24 Sep 2013 01:56:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/09/24/3336313.html</guid><description><![CDATA[<p>Drupal的数据库连接信息通过文件settings.php中的变量$databases设置。变量$databases是一个二维的数组，第一维称为key，第二维称为target。使用这种方式可以处理多数据库和主从分离这样复杂的情况。</p>
<p>&nbsp;</p>
<p>例如，假设有这样的配置：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$databases</span>['default']['default'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'database' =&gt; 'drupal',<span style="color: #000000;">
);
</span><span style="color: #800080;">$databases</span>['default']['slave1'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'database' =&gt; 'slave1',<span style="color: #000000;">
);
</span><span style="color: #800080;">$databases</span>['default']['slave2'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'database' =&gt; 'slave2',<span style="color: #000000;">
);

</span><span style="color: #800080;">$databases</span>['erp']['default'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'database' =&gt; 'erp',<span style="color: #000000;">
);

</span><span style="color: #800080;">$databases</span>['oa']['default'] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'database' =&gt; 'oa',<span style="color: #000000;">
);</span></pre>
</div>
<p>&nbsp;</p>
<p>默认的key是default，默认的target是default，因此大多数情况可以这样查询：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$result</span> = db_query('SELECT * FROM node'); <span style="color: #008000;">//</span><span style="color: #008000;"> drupal数据库</span></pre>
</div>
<p>&nbsp;</p>
<p>如果需要在指定的target中执行查询，可以这样：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$result</span> = db_query('SELECT * FROM node', <span style="color: #0000ff;">null</span>, <span style="color: #0000ff;">array</span>('target' =&gt; 'slave1'<span style="color: #000000;">));
</span><span style="color: #800080;">$result</span> = db_query('SELECT * FROM node', <span style="color: #0000ff;">null</span>, <span style="color: #0000ff;">array</span>('target' =&gt; 'slave2'));</pre>
</div>
<p>&nbsp;</p>
<p>如果需要在指定的key中执行查询，可以这样：</p>
<div class="cnblogs_code">
<pre>Database::setActiveConnection('erp'<span style="color: #000000;">);
</span><span style="color: #800080;">$result</span> = db_query('SELECT * FROM erp_user');</pre>
</div>
<p>&nbsp;</p>
<p>有多个从数据库时，也可以这样配置：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$databases</span>['default']['slave'][] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'database' =&gt; 'slave1',<span style="color: #000000;">
);
</span><span style="color: #800080;">$databases</span>['default']['slave'][] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'database' =&gt; 'slave2',<span style="color: #000000;">
);
</span><span style="color: #800080;">$databases</span>['default']['slave'][] = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>'database' =&gt; 'slave3',<span style="color: #000000;">
);</span></pre>
</div>
<p>如果需要在slave中执行查询，就这样写：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$result</span> = db_query('SELECT * FROM node', <span style="color: #0000ff;">null</span>, <span style="color: #0000ff;">array</span>('target' =&gt; 'slave'));</pre>
</div>
<p>Drupal遇到这种情况，会随机地从三台从数据库中选择一台。当然，在同一个PHP会话中这个连接是固定的，不同的PHP会话有可能不同。</p>]]></description></item><item><title>Drupal Database API</title><link>http://www.cnblogs.com/eastson/archive/2013/08/23/3276980.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 23 Aug 2013 02:29:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/08/23/3276980.html</guid><description><![CDATA[<h3>1. Drupal支持哪些数据库？</h3>
<p>Drupal目前支持三种数据库：mysql，pgsql和sqlite。Drupal使用PDO连接数据库。针对特定的数据库，必须要有特定的Driver才能连接。所有的Driver都存放在includes/database目录。</p>
<p>&nbsp;</p>
<p><strong>如何执行简单的数据库查询？</strong></p>
<p>简单的SQL查询可以使用<a href="https://api.drupal.org/api/drupal/includes%21database%21database.inc/function/db_query/7">db_query()</a>函数。这里的简单是指SQL语句应该符合ANSI 92标准，在不同种类的数据库系统上都是一样的，迁移数据库系统时不应该有问题。</p>
<p>db_query()函数语法：</p>
<div class="cnblogs_code">
<pre>db_query(<span style="color: #800080;">$query</span>, <span style="color: #0000ff;">array</span> <span style="color: #800080;">$args</span> = <span style="color: #0000ff;">array</span>(), <span style="color: #0000ff;">array</span> <span style="color: #800080;">$options</span> = <span style="color: #0000ff;">array</span>())</pre>
</div>
<p><span style="line-height: 1.5;">例如：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$result</span> = db_query('SELECT nid, title FROM node'<span style="color: #000000;">);
</span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$result</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$row</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">echo</span> <span style="color: #800080;">$row</span>-&gt;nid . ':' . <span style="color: #800080;">$row</span>-&gt;title . '&lt;br/&gt;'<span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p><strong>如何执行简单的LIMIT查询？</strong></p>
<p>LIMIT查询针对不同的数据库系统有不同的书写方式，Drupal针对这些差异用<a href="https://api.drupal.org/api/drupal/includes%21database%21database.inc/function/db_query_range/7">db_query_range()</a>函数做了封装。</p>
<p>db_query_range()函数语法：</p>
<div class="cnblogs_code">
<pre>db_query_range(<span style="color: #800080;">$query</span>, <span style="color: #800080;">$from</span>, <span style="color: #800080;">$count</span>, <span style="color: #0000ff;">array</span> <span style="color: #800080;">$args</span> = <span style="color: #0000ff;">array</span>(), <span style="color: #0000ff;">array</span> <span style="color: #800080;">$options</span> = <span style="color: #0000ff;">array</span>())</pre>
</div>
<p><span style="line-height: 1.5;">例如：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$result</span> = db_query_range('SELECT nid, title FROM node', 0, 2<span style="color: #000000;">);
</span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$result</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$row</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">echo</span> <span style="color: #800080;">$row</span>-&gt;nid . ':' . <span style="color: #800080;">$row</span>-&gt;title . '&lt;br/&gt;'<span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>Drupal常见问题汇总</title><link>http://www.cnblogs.com/eastson/archive/2013/08/20/3269694.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 20 Aug 2013 02:43:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/08/20/3269694.html</guid><description><![CDATA[<p>本文所述为Drupal 7.23 + Windows XP环境。</p>
<p>&nbsp;</p>
<h3>目录</h3>
<p><a href="#xxxx">1. xxx</a></p>
<p>2. yyy</p>
<p>&nbsp;</p>
<h3><a name="xxxx"></a>1. 如何格式化</h3>
<p>xxxx</p>
<p>&nbsp;</p>
<h3>2. yyyy</h3>
<p>yyyyy</p>]]></description></item><item><title>Drupal 7.23：函数system_list()注释</title><link>http://www.cnblogs.com/eastson/archive/2013/08/14/3257237.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 14 Aug 2013 07:13:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/08/14/3257237.html</guid><description><![CDATA[<p>函数module_list()可以返回一个当前激活的模块列表，但其最底层的实现还是通过system_list()函数完成的。</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">  1</span> <span style="color: #008000;">/*</span><span style="color: #008000;">*
</span><span style="color: #008080;">  2</span> <span style="color: #008000;"> * Builds a list of bootstrap modules and enabled modules and themes.
</span><span style="color: #008080;">  3</span> <span style="color: #008000;"> *
</span><span style="color: #008080;">  4</span> <span style="color: #008000;"> * @param $type
</span><span style="color: #008080;">  5</span> <span style="color: #008000;"> *   The type of list to return:
</span><span style="color: #008080;">  6</span> <span style="color: #008000;"> *   - module_enabled: All enabled modules.
</span><span style="color: #008080;">  7</span> <span style="color: #008000;"> *   - bootstrap: All enabled modules required for bootstrap.
</span><span style="color: #008080;">  8</span> <span style="color: #008000;"> *   - theme: All themes.
</span><span style="color: #008080;">  9</span> <span style="color: #008000;"> *
</span><span style="color: #008080;"> 10</span> <span style="color: #008000;"> * @return
</span><span style="color: #008080;"> 11</span> <span style="color: #008000;"> *   An associative array of modules or themes, keyed by name. For $type
</span><span style="color: #008080;"> 12</span> <span style="color: #008000;"> *   'bootstrap', the array values equal the keys. For $type 'module_enabled'
</span><span style="color: #008080;"> 13</span> <span style="color: #008000;"> *   or 'theme', the array values are objects representing the respective
</span><span style="color: #008080;"> 14</span> <span style="color: #008000;"> *   database row, with the 'info' property already unserialized.
</span><span style="color: #008080;"> 15</span> <span style="color: #008000;"> *
</span><span style="color: #008080;"> 16</span> <span style="color: #008000;"> * @see module_list()
</span><span style="color: #008080;"> 17</span> <span style="color: #008000;"> * @see list_themes()
</span><span style="color: #008080;"> 18</span>  <span style="color: #008000;">*/</span>
<span style="color: #008080;"> 19</span> <span style="color: #0000ff;">function</span> system_list(<span style="color: #800080;">$type</span><span style="color: #000000;">) {
</span><span style="color: #008080;"> 20</span>   <span style="color: #800080;">$lists</span> = &amp;drupal_static(<span style="color: #ff00ff;">__FUNCTION__</span><span style="color: #000000;">);
</span><span style="color: #008080;"> 21</span> 
<span style="color: #008080;"> 22</span>   <span style="color: #008000;">//</span><span style="color: #008000;"> For bootstrap modules, attempt to fetch the list from cache if possible.
</span><span style="color: #008080;"> 23</span> <span style="color: #008000;">  // if not fetch only the required information to fire bootstrap hooks
</span><span style="color: #008080;"> 24</span> <span style="color: #008000;">  // in case we are going to serve the page from cache.</span>
<span style="color: #008080;"> 25</span>   <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$type</span> == 'bootstrap'<span style="color: #000000;">) {
</span><span style="color: #008080;"> 26</span>     <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$lists</span>['bootstrap'<span style="color: #000000;">])) {
</span><span style="color: #008080;"> 27</span>       <span style="color: #0000ff;">return</span> <span style="color: #800080;">$lists</span>['bootstrap'<span style="color: #000000;">];
</span><span style="color: #008080;"> 28</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 29</span>     <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$cached</span> = cache_get('bootstrap_modules', 'cache_bootstrap'<span style="color: #000000;">)) {
</span><span style="color: #008080;"> 30</span>       <span style="color: #800080;">$bootstrap_list</span> = <span style="color: #800080;">$cached</span>-&gt;<span style="color: #000000;">data;
</span><span style="color: #008080;"> 31</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 32</span>     <span style="color: #0000ff;">else</span><span style="color: #000000;"> {
</span><span style="color: #008080;"> 33</span>       <span style="color: #800080;">$bootstrap_list</span> = db_query("SELECT name, filename FROM {system} WHERE status = 1 AND bootstrap = 1 AND type = 'module' ORDER BY weight ASC, name ASC")-&gt;fetchAllAssoc('name'<span style="color: #000000;">);
</span><span style="color: #008080;"> 34</span>       cache_set('bootstrap_modules', <span style="color: #800080;">$bootstrap_list</span>, 'cache_bootstrap'<span style="color: #000000;">);
</span><span style="color: #008080;"> 35</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 36</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> To avoid a separate database lookup for the filepath, prime the
</span><span style="color: #008080;"> 37</span> <span style="color: #008000;">    // drupal_get_filename() static cache for bootstrap modules only.
</span><span style="color: #008080;"> 38</span> <span style="color: #008000;">    // The rest is stored separately to keep the bootstrap module cache small.</span>
<span style="color: #008080;"> 39</span>     <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$bootstrap_list</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$module</span><span style="color: #000000;">) {
</span><span style="color: #008080;"> 40</span>       drupal_get_filename('module', <span style="color: #800080;">$module</span>-&gt;name, <span style="color: #800080;">$module</span>-&gt;<span style="color: #000000;">filename);
</span><span style="color: #008080;"> 41</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 42</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> We only return the module names here since module_list() doesn't need
</span><span style="color: #008080;"> 43</span> <span style="color: #008000;">    // the filename itself.</span>
<span style="color: #008080;"> 44</span>     <span style="color: #800080;">$lists</span>['bootstrap'] = <span style="color: #008080;">array_keys</span>(<span style="color: #800080;">$bootstrap_list</span><span style="color: #000000;">);
</span><span style="color: #008080;"> 45</span> <span style="color: #000000;">  }
</span><span style="color: #008080;"> 46</span>   <span style="color: #008000;">//</span><span style="color: #008000;"> Otherwise build the list for enabled modules and themes.</span>
<span style="color: #008080;"> 47</span>   <span style="color: #0000ff;">elseif</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$lists</span>['module_enabled'<span style="color: #000000;">])) {
</span><span style="color: #008080;"> 48</span>     <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$cached</span> = cache_get('system_list', 'cache_bootstrap'<span style="color: #000000;">)) {
</span><span style="color: #008080;"> 49</span>       <span style="color: #800080;">$lists</span> = <span style="color: #800080;">$cached</span>-&gt;<span style="color: #000000;">data;
</span><span style="color: #008080;"> 50</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 51</span>     <span style="color: #0000ff;">else</span><span style="color: #000000;"> {
</span><span style="color: #008080;"> 52</span>       <span style="color: #800080;">$lists</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(
</span><span style="color: #008080;"> 53</span>         'module_enabled' =&gt; <span style="color: #0000ff;">array</span>(),
<span style="color: #008080;"> 54</span>         'theme' =&gt; <span style="color: #0000ff;">array</span>(),
<span style="color: #008080;"> 55</span>         'filepaths' =&gt; <span style="color: #0000ff;">array</span>(),
<span style="color: #008080;"> 56</span> <span style="color: #000000;">      );
</span><span style="color: #008080;"> 57</span>       <span style="color: #008000;">//</span><span style="color: #008000;"> The module name (rather than the filename) is used as the fallback
</span><span style="color: #008080;"> 58</span> <span style="color: #008000;">      // weighting in order to guarantee consistent behavior across different
</span><span style="color: #008080;"> 59</span> <span style="color: #008000;">      // Drupal installations, which might have modules installed in different
</span><span style="color: #008080;"> 60</span> <span style="color: #008000;">      // locations in the file system. The ordering here must also be
</span><span style="color: #008080;"> 61</span> <span style="color: #008000;">      // consistent with the one used in module_implements().</span>
<span style="color: #008080;"> 62</span>       <span style="color: #800080;">$result</span> = db_query("SELECT * FROM {system} WHERE type = 'theme' OR (type = 'module' AND status = 1) ORDER BY weight ASC, name ASC"<span style="color: #000000;">);
</span><span style="color: #008080;"> 63</span>       <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$result</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$record</span><span style="color: #000000;">) {
</span><span style="color: #008080;"> 64</span>         <span style="color: #800080;">$record</span>-&gt;info = <span style="color: #008080;">unserialize</span>(<span style="color: #800080;">$record</span>-&gt;<span style="color: #000000;">info);
</span><span style="color: #008080;"> 65</span>         <span style="color: #008000;">//</span><span style="color: #008000;"> Build a list of all enabled modules.</span>
<span style="color: #008080;"> 66</span>         <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$record</span>-&gt;type == 'module'<span style="color: #000000;">) {
</span><span style="color: #008080;"> 67</span>           <span style="color: #800080;">$lists</span>['module_enabled'][<span style="color: #800080;">$record</span>-&gt;name] = <span style="color: #800080;">$record</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 68</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 69</span>         <span style="color: #008000;">//</span><span style="color: #008000;"> Build a list of themes.</span>
<span style="color: #008080;"> 70</span>         <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$record</span>-&gt;type == 'theme'<span style="color: #000000;">) {
</span><span style="color: #008080;"> 71</span>           <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$record</span>-&gt;name] = <span style="color: #800080;">$record</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 72</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 73</span>         <span style="color: #008000;">//</span><span style="color: #008000;"> Build a list of filenames so drupal_get_filename can use it.</span>
<span style="color: #008080;"> 74</span>         <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$record</span>-&gt;<span style="color: #000000;">status) {
</span><span style="color: #008080;"> 75</span>           <span style="color: #800080;">$lists</span>['filepaths'][] = <span style="color: #0000ff;">array</span>('type' =&gt; <span style="color: #800080;">$record</span>-&gt;type, 'name' =&gt; <span style="color: #800080;">$record</span>-&gt;name, 'filepath' =&gt; <span style="color: #800080;">$record</span>-&gt;<span style="color: #000000;">filename);
</span><span style="color: #008080;"> 76</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 77</span> <span style="color: #000000;">      }
</span><span style="color: #008080;"> 78</span>       <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$lists</span>['theme'] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$key</span> =&gt; <span style="color: #800080;">$theme</span><span style="color: #000000;">) {
</span><span style="color: #008080;"> 79</span>         <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$theme</span>-&gt;info['base theme'<span style="color: #000000;">])) {
</span><span style="color: #008080;"> 80</span>           <span style="color: #008000;">//</span><span style="color: #008000;"> Make a list of the theme's base themes.</span>
<span style="color: #008080;"> 81</span>           <span style="color: #0000ff;">require_once</span> DRUPAL_ROOT . '/includes/theme.inc'<span style="color: #000000;">;
</span><span style="color: #008080;"> 82</span>           <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;base_themes = drupal_find_base_themes(<span style="color: #800080;">$lists</span>['theme'], <span style="color: #800080;">$key</span><span style="color: #000000;">);
</span><span style="color: #008080;"> 83</span>           <span style="color: #008000;">//</span><span style="color: #008000;"> Don't proceed if there was a problem with the root base theme.</span>
<span style="color: #008080;"> 84</span>           <span style="color: #0000ff;">if</span> (!<span style="color: #008080;">current</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;<span style="color: #000000;">base_themes)) {
</span><span style="color: #008080;"> 85</span>             <span style="color: #0000ff;">continue</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 86</span> <span style="color: #000000;">          }
</span><span style="color: #008080;"> 87</span>           <span style="color: #008000;">//</span><span style="color: #008000;"> Determine the root base theme.</span>
<span style="color: #008080;"> 88</span>           <span style="color: #800080;">$base_key</span> = <span style="color: #008080;">key</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;<span style="color: #000000;">base_themes);
</span><span style="color: #008080;"> 89</span>           <span style="color: #008000;">//</span><span style="color: #008000;"> Add to the list of sub-themes for each of the theme's base themes.</span>
<span style="color: #008080;"> 90</span>           <span style="color: #0000ff;">foreach</span> (<span style="color: #008080;">array_keys</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;base_themes) <span style="color: #0000ff;">as</span> <span style="color: #800080;">$base_theme</span><span style="color: #000000;">) {
</span><span style="color: #008080;"> 91</span>             <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$base_theme</span>]-&gt;sub_themes[<span style="color: #800080;">$key</span>] = <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['name'<span style="color: #000000;">];
</span><span style="color: #008080;"> 92</span> <span style="color: #000000;">          }
</span><span style="color: #008080;"> 93</span>           <span style="color: #008000;">//</span><span style="color: #008000;"> Add the base theme's theme engine info.</span>
<span style="color: #008080;"> 94</span>           <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'] = <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$base_key</span>]-&gt;info['engine']) ? <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$base_key</span>]-&gt;info['engine'] : 'theme'<span style="color: #000000;">;
</span><span style="color: #008080;"> 95</span> <span style="color: #000000;">        }
</span><span style="color: #008080;"> 96</span>         <span style="color: #0000ff;">else</span><span style="color: #000000;"> {
</span><span style="color: #008080;"> 97</span>           <span style="color: #008000;">//</span><span style="color: #008000;"> A plain theme is its own engine.</span>
<span style="color: #008080;"> 98</span>           <span style="color: #800080;">$base_key</span> = <span style="color: #800080;">$key</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 99</span>           <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'<span style="color: #000000;">])) {
</span><span style="color: #008080;">100</span>             <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'] = 'theme'<span style="color: #000000;">;
</span><span style="color: #008080;">101</span> <span style="color: #000000;">          }
</span><span style="color: #008080;">102</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">103</span>         <span style="color: #008000;">//</span><span style="color: #008000;"> Set the theme engine prefix.</span>
<span style="color: #008080;">104</span>         <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;prefix = (<span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'] == 'theme') ? <span style="color: #800080;">$base_key</span> : <span style="color: #800080;">$lists</span>['theme'][<span style="color: #800080;">$key</span>]-&gt;info['engine'<span style="color: #000000;">];
</span><span style="color: #008080;">105</span> <span style="color: #000000;">      }
</span><span style="color: #008080;">106</span>       cache_set('system_list', <span style="color: #800080;">$lists</span>, 'cache_bootstrap'<span style="color: #000000;">);
</span><span style="color: #008080;">107</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">108</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> To avoid a separate database lookup for the filepath, prime the
</span><span style="color: #008080;">109</span> <span style="color: #008000;">    // drupal_get_filename() static cache with all enabled modules and themes.</span>
<span style="color: #008080;">110</span>     <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$lists</span>['filepaths'] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$item</span><span style="color: #000000;">) {
</span><span style="color: #008080;">111</span>       drupal_get_filename(<span style="color: #800080;">$item</span>['type'], <span style="color: #800080;">$item</span>['name'], <span style="color: #800080;">$item</span>['filepath'<span style="color: #000000;">]);
</span><span style="color: #008080;">112</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">113</span> <span style="color: #000000;">  }
</span><span style="color: #008080;">114</span> 
<span style="color: #008080;">115</span>   <span style="color: #0000ff;">return</span> <span style="color: #800080;">$lists</span>[<span style="color: #800080;">$type</span><span style="color: #000000;">];
</span><span style="color: #008080;">116</span> }</pre>
</div>
<p>&nbsp;</p>
<p>函数system_list()可以有四种调用方式：</p>
<p>1. system_list('bootstrap')：返回启动模块列表。只是模块(type = 'module')，且是引导模块(bootstrap = 1)。</p>
<div class="cnblogs_code">
<pre>SELECT name, filename FROM {<span style="color: #008080;">system</span>} WHERE status = 1 AND bootstrap = 1 AND type = 'module' ORDER BY weight ASC, name ASC</pre>
</div>
<p>2. system_list('module_enabled')：返回激活模块列表。</p>
<div class="cnblogs_code">
<pre>SELECT * FROM {<span style="color: #008080;">system</span>} WHERE type = 'theme' OR (type = 'module' AND status = 1) ORDER BY weight ASC, name ASC</pre>
</div>
<p><span style="line-height: 1.5;">3.&nbsp;</span><span style="line-height: 1.5;">system_list('theme')：返回激活模块列表。</span></p>
<p>4. system_list('filepaths')：返回激活模块列表。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">array</span><span style="color: #000000;">(
  </span>0 =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'type' =&gt; 'module',
    'name' =&gt; 'block',
    'filepath' =&gt; 'modules/block/block.module'<span style="color: #000000;">
  )</span>,  
  1 =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'type' =&gt; 'module',
    'name' =&gt; 'color',
    'filepath' =&gt; 'modules/color/color.module'<span style="color: #000000;">
  )</span>,  
  2 =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'type' =&gt; 'module',
    'name' =&gt; 'comment',
    'filepath' =&gt; 'modules/comment/comment.module'<span style="color: #000000;">
  )</span>,
  3 =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
    </span>'type' =&gt; 'theme',
    'name' =&gt; 'bartik',
    'filepath' =&gt; 'themes/bartik/bartik.info'<span style="color: #000000;">
  )</span>,
  ... ...<span style="color: #000000;">
)</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>Drupal 7.23：函数module_invoke_all()注释</title><link>http://www.cnblogs.com/eastson/archive/2013/08/14/3256780.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 14 Aug 2013 03:46:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/08/14/3256780.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #008080;"> 1</span> <span style="color: #008000;">/*</span><span style="color: #008000;">*
</span><span style="color: #008080;"> 2</span> <span style="color: #008000;"> * Invokes a hook in all enabled modules that implement it.
</span><span style="color: #008080;"> 3</span> <span style="color: #008000;"> *
</span><span style="color: #008080;"> 4</span> <span style="color: #008000;"> * All arguments are passed by value. Use drupal_alter() if you need to pass
</span><span style="color: #008080;"> 5</span> <span style="color: #008000;"> * arguments by reference.
</span><span style="color: #008080;"> 6</span> <span style="color: #008000;"> *
</span><span style="color: #008080;"> 7</span> <span style="color: #008000;"> * @param $hook
</span><span style="color: #008080;"> 8</span> <span style="color: #008000;"> *   The name of the hook to invoke.
</span><span style="color: #008080;"> 9</span> <span style="color: #008000;"> * @param ...
</span><span style="color: #008080;">10</span> <span style="color: #008000;"> *   Arguments to pass to the hook.
</span><span style="color: #008080;">11</span> <span style="color: #008000;"> *
</span><span style="color: #008080;">12</span> <span style="color: #008000;"> * @return
</span><span style="color: #008080;">13</span> <span style="color: #008000;"> *   An array of return values of the hook implementations. If modules return
</span><span style="color: #008080;">14</span> <span style="color: #008000;"> *   arrays from their implementations, those are merged into one array.
</span><span style="color: #008080;">15</span> <span style="color: #008000;"> *
</span><span style="color: #008080;">16</span> <span style="color: #008000;"> * @see drupal_alter()
</span><span style="color: #008080;">17</span>  <span style="color: #008000;">*/</span>
<span style="color: #008080;">18</span> <span style="color: #0000ff;">function</span> module_invoke_all(<span style="color: #800080;">$hook</span><span style="color: #000000;">) {
</span><span style="color: #008080;">19</span>   <span style="color: #800080;">$args</span> = <span style="color: #008080;">func_get_args</span><span style="color: #000000;">();
</span><span style="color: #008080;">20</span>   <span style="color: #008000;">//</span><span style="color: #008000;"> Remove $hook from the arguments.</span>
<span style="color: #008080;">21</span>   <span style="color: #0000ff;">unset</span>(<span style="color: #800080;">$args</span>[0<span style="color: #000000;">]);
</span><span style="color: #008080;">22</span>   <span style="color: #800080;">$return</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
</span><span style="color: #008080;">23</span>   <span style="color: #0000ff;">foreach</span> (module_implements(<span style="color: #800080;">$hook</span>) <span style="color: #0000ff;">as</span> <span style="color: #800080;">$module</span><span style="color: #000000;">) {
</span><span style="color: #008080;">24</span>     <span style="color: #800080;">$function</span> = <span style="color: #800080;">$module</span> . '_' . <span style="color: #800080;">$hook</span><span style="color: #000000;">;
</span><span style="color: #008080;">25</span>     <span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$function</span><span style="color: #000000;">)) {
</span><span style="color: #008080;">26</span>       <span style="color: #800080;">$result</span> = <span style="color: #008080;">call_user_func_array</span>(<span style="color: #800080;">$function</span>, <span style="color: #800080;">$args</span><span style="color: #000000;">);
</span><span style="color: #008080;">27</span>       <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$result</span>) &amp;&amp; <span style="color: #008080;">is_array</span>(<span style="color: #800080;">$result</span><span style="color: #000000;">)) {
</span><span style="color: #008080;">28</span>         <span style="color: #800080;">$return</span> = <span style="color: #008080;">array_merge_recursive</span>(<span style="color: #800080;">$return</span>, <span style="color: #800080;">$result</span><span style="color: #000000;">);
</span><span style="color: #008080;">29</span> <span style="color: #000000;">      }
</span><span style="color: #008080;">30</span>       <span style="color: #0000ff;">elseif</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$result</span><span style="color: #000000;">)) {
</span><span style="color: #008080;">31</span>         <span style="color: #800080;">$return</span>[] = <span style="color: #800080;">$result</span><span style="color: #000000;">;
</span><span style="color: #008080;">32</span> <span style="color: #000000;">      }
</span><span style="color: #008080;">33</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">34</span> <span style="color: #000000;">  }
</span><span style="color: #008080;">35</span> 
<span style="color: #008080;">36</span>   <span style="color: #0000ff;">return</span> <span style="color: #800080;">$return</span><span style="color: #000000;">;
</span><span style="color: #008080;">37</span> }</pre>
</div>
<p>&nbsp;</p>
<p>函数module_invoke_all()调用指定的钩子函数。例如stream_wappers钩子，假设有模块a和b都有实现该钩子，则会执行函数a_stream_wrappers()和b_stream_wrappers()。</p>
<p>&nbsp;</p>
<p><span style="line-height: 1.5;">函数module_invoke_all()所有参数都是传值的，如果需要传址参数，则需要使用函数drupal_alter()代替。</span></p>
<p>&nbsp;</p>
<p>函数module_invoke_all()返回一个数组，上例的stream_wrappers钩子假设模块a和b都有返回值，则返回的结果应该是{a_stream_wrappers()结果，b_stream_wrappers()结果}。函数drupal_alter()没有返回值。</p>]]></description></item><item><title>Drupal 7.23：函数drupal_alter()注释</title><link>http://www.cnblogs.com/eastson/archive/2013/08/13/3254446.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 13 Aug 2013 06:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/08/13/3254446.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #008080;">  1</span> <span style="color: #008000;">/*</span><span style="color: #008000;">*
</span><span style="color: #008080;">  2</span> <span style="color: #008000;"> * Passes alterable variables to specific hook_TYPE_alter() implementations.
</span><span style="color: #008080;">  3</span> <span style="color: #008000;"> *
</span><span style="color: #008080;">  4</span> <span style="color: #008000;"> * This dispatch function hands off the passed-in variables to type-specific
</span><span style="color: #008080;">  5</span> <span style="color: #008000;"> * hook_TYPE_alter() implementations in modules. It ensures a consistent
</span><span style="color: #008080;">  6</span> <span style="color: #008000;"> * interface for all altering operations.
</span><span style="color: #008080;">  7</span> <span style="color: #008000;"> *
</span><span style="color: #008080;">  8</span> <span style="color: #008000;"> * A maximum of 2 alterable arguments is supported (a third is supported for
</span><span style="color: #008080;">  9</span> <span style="color: #008000;"> * legacy reasons, but should not be used in new code). In case more arguments
</span><span style="color: #008080;"> 10</span> <span style="color: #008000;"> * need to be passed and alterable, modules provide additional variables
</span><span style="color: #008080;"> 11</span> <span style="color: #008000;"> * assigned by reference in the last $context argument:
</span><span style="color: #008080;"> 12</span> <span style="color: #008000;"> * @code
</span><span style="color: #008080;"> 13</span> <span style="color: #008000;"> *   $context = array(
</span><span style="color: #008080;"> 14</span> <span style="color: #008000;"> *     'alterable' =&gt; &amp;$alterable,
</span><span style="color: #008080;"> 15</span> <span style="color: #008000;"> *     'unalterable' =&gt; $unalterable,
</span><span style="color: #008080;"> 16</span> <span style="color: #008000;"> *     'foo' =&gt; 'bar',
</span><span style="color: #008080;"> 17</span> <span style="color: #008000;"> *   );
</span><span style="color: #008080;"> 18</span> <span style="color: #008000;"> *   drupal_alter('mymodule_data', $alterable1, $alterable2, $context);
</span><span style="color: #008080;"> 19</span> <span style="color: #008000;"> * @endcode
</span><span style="color: #008080;"> 20</span> <span style="color: #008000;"> *
</span><span style="color: #008080;"> 21</span> <span style="color: #008000;"> * Note that objects are always passed by reference in PHP5. If it is absolutely
</span><span style="color: #008080;"> 22</span> <span style="color: #008000;"> * required that no implementation alters a passed object in $context, then an
</span><span style="color: #008080;"> 23</span> <span style="color: #008000;"> * object needs to be cloned:
</span><span style="color: #008080;"> 24</span> <span style="color: #008000;"> * @code
</span><span style="color: #008080;"> 25</span> <span style="color: #008000;"> *   $context = array(
</span><span style="color: #008080;"> 26</span> <span style="color: #008000;"> *     'unalterable_object' =&gt; clone $object,
</span><span style="color: #008080;"> 27</span> <span style="color: #008000;"> *   );
</span><span style="color: #008080;"> 28</span> <span style="color: #008000;"> *   drupal_alter('mymodule_data', $data, $context);
</span><span style="color: #008080;"> 29</span> <span style="color: #008000;"> * @endcode
</span><span style="color: #008080;"> 30</span> <span style="color: #008000;"> *
</span><span style="color: #008080;"> 31</span> <span style="color: #008000;"> * @param $type
</span><span style="color: #008080;"> 32</span> <span style="color: #008000;"> *   A string describing the type of the alterable $data. 'form', 'links',
</span><span style="color: #008080;"> 33</span> <span style="color: #008000;"> *   'node_content', and so on are several examples. Alternatively can be an
</span><span style="color: #008080;"> 34</span> <span style="color: #008000;"> *   array, in which case hook_TYPE_alter() is invoked for each value in the
</span><span style="color: #008080;"> 35</span> <span style="color: #008000;"> *   array, ordered first by module, and then for each module, in the order of
</span><span style="color: #008080;"> 36</span> <span style="color: #008000;"> *   values in $type. For example, when Form API is using drupal_alter() to
</span><span style="color: #008080;"> 37</span> <span style="color: #008000;"> *   execute both hook_form_alter() and hook_form_FORM_ID_alter()
</span><span style="color: #008080;"> 38</span> <span style="color: #008000;"> *   implementations, it passes array('form', 'form_' . $form_id) for $type.
</span><span style="color: #008080;"> 39</span> <span style="color: #008000;"> * @param $data
</span><span style="color: #008080;"> 40</span> <span style="color: #008000;"> *   The variable that will be passed to hook_TYPE_alter() implementations to be
</span><span style="color: #008080;"> 41</span> <span style="color: #008000;"> *   altered. The type of this variable depends on the value of the $type
</span><span style="color: #008080;"> 42</span> <span style="color: #008000;"> *   argument. For example, when altering a 'form', $data will be a structured
</span><span style="color: #008080;"> 43</span> <span style="color: #008000;"> *   array. When altering a 'profile', $data will be an object.
</span><span style="color: #008080;"> 44</span> <span style="color: #008000;"> * @param $context1
</span><span style="color: #008080;"> 45</span> <span style="color: #008000;"> *   (optional) An additional variable that is passed by reference.
</span><span style="color: #008080;"> 46</span> <span style="color: #008000;"> * @param $context2
</span><span style="color: #008080;"> 47</span> <span style="color: #008000;"> *   (optional) An additional variable that is passed by reference. If more
</span><span style="color: #008080;"> 48</span> <span style="color: #008000;"> *   context needs to be provided to implementations, then this should be an
</span><span style="color: #008080;"> 49</span> <span style="color: #008000;"> *   associative array as described above.
</span><span style="color: #008080;"> 50</span> <span style="color: #008000;"> * @param $context3
</span><span style="color: #008080;"> 51</span> <span style="color: #008000;"> *   (optional) An additional variable that is passed by reference. This
</span><span style="color: #008080;"> 52</span> <span style="color: #008000;"> *   parameter is deprecated and will not exist in Drupal 8; consequently, it
</span><span style="color: #008080;"> 53</span> <span style="color: #008000;"> *   should not be used for new Drupal 7 code either. It is here only for
</span><span style="color: #008080;"> 54</span> <span style="color: #008000;"> *   backwards compatibility with older code that passed additional arguments
</span><span style="color: #008080;"> 55</span> <span style="color: #008000;"> *   to drupal_alter().
</span><span style="color: #008080;"> 56</span>  <span style="color: #008000;">*/</span>
<span style="color: #008080;"> 57</span> <span style="color: #0000ff;">function</span> drupal_alter(<span style="color: #800080;">$type</span>, &amp;<span style="color: #800080;">$data</span>, &amp;<span style="color: #800080;">$context1</span> = <span style="color: #0000ff;">NULL</span>, &amp;<span style="color: #800080;">$context2</span> = <span style="color: #0000ff;">NULL</span>, &amp;<span style="color: #800080;">$context3</span> = <span style="color: #0000ff;">NULL</span><span style="color: #000000;">) {
</span><span style="color: #008080;"> 58</span>   <span style="color: #008000;">//</span><span style="color: #008000;"> Use the advanced drupal_static() pattern, since this is called very often.</span>
<span style="color: #008080;"> 59</span>   <span style="color: #0000ff;">static</span> <span style="color: #800080;">$drupal_static_fast</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 60</span>   <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$drupal_static_fast</span><span style="color: #000000;">)) {
</span><span style="color: #008080;"> 61</span>     <span style="color: #800080;">$drupal_static_fast</span>['functions'] = &amp;drupal_static(<span style="color: #ff00ff;">__FUNCTION__</span><span style="color: #000000;">);
</span><span style="color: #008080;"> 62</span> <span style="color: #000000;">  }
</span><span style="color: #008080;"> 63</span>   <span style="color: #800080;">$functions</span> = &amp;<span style="color: #800080;">$drupal_static_fast</span>['functions'<span style="color: #000000;">];
</span><span style="color: #008080;"> 64</span> 
<span style="color: #008080;"> 65</span>   <span style="color: #008000;">//</span><span style="color: #008000;"> Most of the time, $type is passed as a string, so for performance,
</span><span style="color: #008080;"> 66</span> <span style="color: #008000;">  // normalize it to that. When passed as an array, usually the first item in
</span><span style="color: #008080;"> 67</span> <span style="color: #008000;">  // the array is a generic type, and additional items in the array are more
</span><span style="color: #008080;"> 68</span> <span style="color: #008000;">  // specific variants of it, as in the case of array('form', 'form_FORM_ID').</span>
<span style="color: #008080;"> 69</span>   <span style="color: #0000ff;">if</span> (<span style="color: #008080;">is_array</span>(<span style="color: #800080;">$type</span><span style="color: #000000;">)) {
</span><span style="color: #008080;"> 70</span>     <span style="color: #800080;">$cid</span> = <span style="color: #008080;">implode</span>(',', <span style="color: #800080;">$type</span><span style="color: #000000;">);
</span><span style="color: #008080;"> 71</span>     <span style="color: #800080;">$extra_types</span> = <span style="color: #800080;">$type</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 72</span>     <span style="color: #800080;">$type</span> = <span style="color: #008080;">array_shift</span>(<span style="color: #800080;">$extra_types</span><span style="color: #000000;">);
</span><span style="color: #008080;"> 73</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> Allow if statements in this function to use the faster isset() rather
</span><span style="color: #008080;"> 74</span> <span style="color: #008000;">    // than !empty() both when $type is passed as a string, or as an array with
</span><span style="color: #008080;"> 75</span> <span style="color: #008000;">    // one item.</span>
<span style="color: #008080;"> 76</span>     <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$extra_types</span><span style="color: #000000;">)) {
</span><span style="color: #008080;"> 77</span>       <span style="color: #0000ff;">unset</span>(<span style="color: #800080;">$extra_types</span><span style="color: #000000;">);
</span><span style="color: #008080;"> 78</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 79</span> <span style="color: #000000;">  }
</span><span style="color: #008080;"> 80</span>   <span style="color: #0000ff;">else</span><span style="color: #000000;"> {
</span><span style="color: #008080;"> 81</span>     <span style="color: #800080;">$cid</span> = <span style="color: #800080;">$type</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 82</span> <span style="color: #000000;">  }
</span><span style="color: #008080;"> 83</span> 
<span style="color: #008080;"> 84</span>   <span style="color: #008000;">//</span><span style="color: #008000;"> Some alter hooks are invoked many times per page request, so statically
</span><span style="color: #008080;"> 85</span> <span style="color: #008000;">  // cache the list of functions to call, and on subsequent calls, iterate
</span><span style="color: #008080;"> 86</span> <span style="color: #008000;">  // through them quickly.</span>
<span style="color: #008080;"> 87</span>   <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$functions</span>[<span style="color: #800080;">$cid</span><span style="color: #000000;">])) {
</span><span style="color: #008080;"> 88</span>     <span style="color: #800080;">$functions</span>[<span style="color: #800080;">$cid</span>] = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
</span><span style="color: #008080;"> 89</span>     <span style="color: #800080;">$hook</span> = <span style="color: #800080;">$type</span> . '_alter'<span style="color: #000000;">;
</span><span style="color: #008080;"> 90</span>     <span style="color: #800080;">$modules</span> = module_implements(<span style="color: #800080;">$hook</span><span style="color: #000000;">);
</span><span style="color: #008080;"> 91</span>     <span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$extra_types</span><span style="color: #000000;">)) {
</span><span style="color: #008080;"> 92</span>       <span style="color: #008000;">//</span><span style="color: #008000;"> For the more common case of a single hook, we do not need to call
</span><span style="color: #008080;"> 93</span> <span style="color: #008000;">      // function_exists(), since module_implements() returns only modules with
</span><span style="color: #008080;"> 94</span> <span style="color: #008000;">      // implementations.</span>
<span style="color: #008080;"> 95</span>       <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$modules</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$module</span><span style="color: #000000;">) {
</span><span style="color: #008080;"> 96</span>         <span style="color: #800080;">$functions</span>[<span style="color: #800080;">$cid</span>][] = <span style="color: #800080;">$module</span> . '_' . <span style="color: #800080;">$hook</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 97</span> <span style="color: #000000;">      }
</span><span style="color: #008080;"> 98</span> <span style="color: #000000;">    }
</span><span style="color: #008080;"> 99</span>     <span style="color: #0000ff;">else</span><span style="color: #000000;"> {
</span><span style="color: #008080;">100</span>       <span style="color: #008000;">//</span><span style="color: #008000;"> For multiple hooks, we need $modules to contain every module that
</span><span style="color: #008080;">101</span> <span style="color: #008000;">      // implements at least one of them.</span>
<span style="color: #008080;">102</span>       <span style="color: #800080;">$extra_modules</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
</span><span style="color: #008080;">103</span>       <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$extra_types</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$extra_type</span><span style="color: #000000;">) {
</span><span style="color: #008080;">104</span>         <span style="color: #800080;">$extra_modules</span> = <span style="color: #008080;">array_merge</span>(<span style="color: #800080;">$extra_modules</span>, module_implements(<span style="color: #800080;">$extra_type</span> . '_alter'<span style="color: #000000;">));
</span><span style="color: #008080;">105</span> <span style="color: #000000;">      }
</span><span style="color: #008080;">106</span>       <span style="color: #008000;">//</span><span style="color: #008000;"> If any modules implement one of the extra hooks that do not implement
</span><span style="color: #008080;">107</span> <span style="color: #008000;">      // the primary hook, we need to add them to the $modules array in their
</span><span style="color: #008080;">108</span> <span style="color: #008000;">      // appropriate order. module_implements() can only return ordered
</span><span style="color: #008080;">109</span> <span style="color: #008000;">      // implementations of a single hook. To get the ordered implementations
</span><span style="color: #008080;">110</span> <span style="color: #008000;">      // of multiple hooks, we mimic the module_implements() logic of first
</span><span style="color: #008080;">111</span> <span style="color: #008000;">      // ordering by module_list(), and then calling
</span><span style="color: #008080;">112</span> <span style="color: #008000;">      // drupal_alter('module_implements').</span>
<span style="color: #008080;">113</span>       <span style="color: #0000ff;">if</span> (<span style="color: #008080;">array_diff</span>(<span style="color: #800080;">$extra_modules</span>, <span style="color: #800080;">$modules</span><span style="color: #000000;">)) {
</span><span style="color: #008080;">114</span>         <span style="color: #008000;">//</span><span style="color: #008000;"> Merge the arrays and order by module_list().</span>
<span style="color: #008080;">115</span>         <span style="color: #800080;">$modules</span> = <span style="color: #008080;">array_intersect</span>(module_list(), <span style="color: #008080;">array_merge</span>(<span style="color: #800080;">$modules</span>, <span style="color: #800080;">$extra_modules</span><span style="color: #000000;">));
</span><span style="color: #008080;">116</span>         <span style="color: #008000;">//</span><span style="color: #008000;"> Since module_implements() already took care of loading the necessary
</span><span style="color: #008080;">117</span> <span style="color: #008000;">        // include files, we can safely pass FALSE for the array values.</span>
<span style="color: #008080;">118</span>         <span style="color: #800080;">$implementations</span> = array_fill_keys(<span style="color: #800080;">$modules</span>, <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">);
</span><span style="color: #008080;">119</span>         <span style="color: #008000;">//</span><span style="color: #008000;"> Let modules adjust the order solely based on the primary hook. This
</span><span style="color: #008080;">120</span> <span style="color: #008000;">        // ensures the same module order regardless of whether this if block
</span><span style="color: #008080;">121</span> <span style="color: #008000;">        // runs. Calling drupal_alter() recursively in this way does not result
</span><span style="color: #008080;">122</span> <span style="color: #008000;">        // in an infinite loop, because this call is for a single $type, so we
</span><span style="color: #008080;">123</span> <span style="color: #008000;">        // won't end up in this code block again.</span>
<span style="color: #008080;">124</span>         drupal_alter('module_implements', <span style="color: #800080;">$implementations</span>, <span style="color: #800080;">$hook</span><span style="color: #000000;">);
</span><span style="color: #008080;">125</span>         <span style="color: #800080;">$modules</span> = <span style="color: #008080;">array_keys</span>(<span style="color: #800080;">$implementations</span><span style="color: #000000;">);
</span><span style="color: #008080;">126</span> <span style="color: #000000;">      }
</span><span style="color: #008080;">127</span>       <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$modules</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$module</span><span style="color: #000000;">) {
</span><span style="color: #008080;">128</span>         <span style="color: #008000;">//</span><span style="color: #008000;"> Since $modules is a merged array, for any given module, we do not
</span><span style="color: #008080;">129</span> <span style="color: #008000;">        // know whether it has any particular implementation, so we need a
</span><span style="color: #008080;">130</span> <span style="color: #008000;">        // function_exists().</span>
<span style="color: #008080;">131</span>         <span style="color: #800080;">$function</span> = <span style="color: #800080;">$module</span> . '_' . <span style="color: #800080;">$hook</span><span style="color: #000000;">;
</span><span style="color: #008080;">132</span>         <span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$function</span><span style="color: #000000;">)) {
</span><span style="color: #008080;">133</span>           <span style="color: #800080;">$functions</span>[<span style="color: #800080;">$cid</span>][] = <span style="color: #800080;">$function</span><span style="color: #000000;">;
</span><span style="color: #008080;">134</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">135</span>         <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$extra_types</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$extra_type</span><span style="color: #000000;">) {
</span><span style="color: #008080;">136</span>           <span style="color: #800080;">$function</span> = <span style="color: #800080;">$module</span> . '_' . <span style="color: #800080;">$extra_type</span> . '_alter'<span style="color: #000000;">;
</span><span style="color: #008080;">137</span>           <span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$function</span><span style="color: #000000;">)) {
</span><span style="color: #008080;">138</span>             <span style="color: #800080;">$functions</span>[<span style="color: #800080;">$cid</span>][] = <span style="color: #800080;">$function</span><span style="color: #000000;">;
</span><span style="color: #008080;">139</span> <span style="color: #000000;">          }
</span><span style="color: #008080;">140</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">141</span> <span style="color: #000000;">      }
</span><span style="color: #008080;">142</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">143</span>     <span style="color: #008000;">//</span><span style="color: #008000;"> Allow the theme to alter variables after the theme system has been
</span><span style="color: #008080;">144</span> <span style="color: #008000;">    // initialized.</span>
<span style="color: #008080;">145</span>     <span style="color: #0000ff;">global</span> <span style="color: #800080;">$theme</span>, <span style="color: #800080;">$base_theme_info</span><span style="color: #000000;">;
</span><span style="color: #008080;">146</span>     <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$theme</span><span style="color: #000000;">)) {
</span><span style="color: #008080;">147</span>       <span style="color: #800080;">$theme_keys</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
</span><span style="color: #008080;">148</span>       <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$base_theme_info</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$base</span><span style="color: #000000;">) {
</span><span style="color: #008080;">149</span>         <span style="color: #800080;">$theme_keys</span>[] = <span style="color: #800080;">$base</span>-&gt;<span style="color: #000000;">name;
</span><span style="color: #008080;">150</span> <span style="color: #000000;">      }
</span><span style="color: #008080;">151</span>       <span style="color: #800080;">$theme_keys</span>[] = <span style="color: #800080;">$theme</span><span style="color: #000000;">;
</span><span style="color: #008080;">152</span>       <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$theme_keys</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$theme_key</span><span style="color: #000000;">) {
</span><span style="color: #008080;">153</span>         <span style="color: #800080;">$function</span> = <span style="color: #800080;">$theme_key</span> . '_' . <span style="color: #800080;">$hook</span><span style="color: #000000;">;
</span><span style="color: #008080;">154</span>         <span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$function</span><span style="color: #000000;">)) {
</span><span style="color: #008080;">155</span>           <span style="color: #800080;">$functions</span>[<span style="color: #800080;">$cid</span>][] = <span style="color: #800080;">$function</span><span style="color: #000000;">;
</span><span style="color: #008080;">156</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">157</span>         <span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$extra_types</span><span style="color: #000000;">)) {
</span><span style="color: #008080;">158</span>           <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$extra_types</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$extra_type</span><span style="color: #000000;">) {
</span><span style="color: #008080;">159</span>             <span style="color: #800080;">$function</span> = <span style="color: #800080;">$theme_key</span> . '_' . <span style="color: #800080;">$extra_type</span> . '_alter'<span style="color: #000000;">;
</span><span style="color: #008080;">160</span>             <span style="color: #0000ff;">if</span> (<span style="color: #008080;">function_exists</span>(<span style="color: #800080;">$function</span><span style="color: #000000;">)) {
</span><span style="color: #008080;">161</span>               <span style="color: #800080;">$functions</span>[<span style="color: #800080;">$cid</span>][] = <span style="color: #800080;">$function</span><span style="color: #000000;">;
</span><span style="color: #008080;">162</span> <span style="color: #000000;">            }
</span><span style="color: #008080;">163</span> <span style="color: #000000;">          }
</span><span style="color: #008080;">164</span> <span style="color: #000000;">        }
</span><span style="color: #008080;">165</span> <span style="color: #000000;">      }
</span><span style="color: #008080;">166</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">167</span> <span style="color: #000000;">  }
</span><span style="color: #008080;">168</span> 
<span style="color: #008080;">169</span>   <span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$functions</span>[<span style="color: #800080;">$cid</span>] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$function</span><span style="color: #000000;">) {
</span><span style="color: #008080;">170</span>     <span style="color: #800080;">$function</span>(<span style="color: #800080;">$data</span>, <span style="color: #800080;">$context1</span>, <span style="color: #800080;">$context2</span>, <span style="color: #800080;">$context3</span><span style="color: #000000;">);
</span><span style="color: #008080;">171</span> <span style="color: #000000;">  }
</span><span style="color: #008080;">172</span> }</pre>
</div>
<p>&nbsp;</p>
<p>drupal_alter()函数提供一个对钩子系统的调用，实现对系统变量的自定义修改。例如：当系统处于维护状态时，网站应该只允许管理员访问，一般访问者只能看到&ldquo;系统处于维护状态&rdquo;这样的提示信息。一般访问者访问网站时，若是在变更维护状态之前已经登录网站，这时user模块提供一个钩子，实现访问者的自动注销。</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> menu.inc的501-508行</span>
<span style="color: #800080;">$site_status</span> = variable_get('maintenance_mode') ? MENU_SITE_OFFLINE :<span style="color: #000000;"> MENU_SITE_ONLINE;
drupal_alter(</span>'menu_site_status', <span style="color: #800080;">$site_status</span> , <span style="color: #800080;">$_GET</span>['q']);</pre>
</div>
<p>drupal_alter()会调用形如hook_TYPE_alter这样的钩子，此例子中是user模块的user_menu_site_status_alter()函数：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">//</span><span style="color: #008000;"> user.module的1834-1874行</span>
<span style="color: #0000ff;">function</span> user_menu_site_status_alter(&amp;<span style="color: #800080;">$menu_site_status</span>, <span style="color: #800080;">$path</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$menu_site_status</span> ==<span style="color: #000000;"> MENU_SITE_OFFLINE) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> If the site is offline, log out unprivileged users.</span>
    <span style="color: #0000ff;">if</span> (user_is_logged_in() &amp;&amp; !user_access('access site in maintenance mode'<span style="color: #000000;">)) {
      module_load_include(</span>'pages.inc', 'user', 'user'<span style="color: #000000;">);
      user_logout();
    }

    </span>... ...<span style="color: #000000;">
  }

  </span>...<span style="color: #000000;">
}</span></pre>
</div>
<p>&nbsp;</p>
<p>第57行：注意参数$data，是引用定义的，也可以理解为传址。再看一下user_menu_site_status_alter()钩子的参数，这里的$menu_site_status也是引用定义，和$data刚好对应。也就是说，在user_menu_site_status_alter()中修改$menu_site_status的值，也就是在修改$data的值。<br /><span style="line-height: 1.5;">以此类推，drupal_alter()定义了三个context参数，也都是引用定义的。所以，在钩子函数中如果有需要，也可以修改这三个context参数的值：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> hook_menu_site_status_alter(&amp;<span style="color: #800080;">$menu_site_status</span>, &amp;<span style="color: #800080;">$context1</span>, &amp;<span style="color: #800080;">$context2</span>, &amp;<span style="color: #800080;">$context3</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$context1</span> = 'new value'<span style="color: #000000;">;
  </span>... ...<span style="color: #000000;">
}</span></pre>
</div>
<p>&nbsp;</p>
<p>第143-144行：drupal_alter()被调用时，theme系统有可能准备就绪，也有可能尚未就绪。通过全局变量$theme可以判断theme系统是否就绪：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">global</span> <span style="color: #800080;">$theme</span><span style="color: #000000;">;
</span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$theme</span><span style="color: #000000;">)) {
  </span><span style="color: #008000;">//</span> theme系统准备就绪
} <span style="color: #0000ff;">else</span><span style="color: #000000;"> {
  </span><span style="color: #008000;">// theme系统尚未就绪
</span>}</pre>
</div>
<p>&nbsp;</p>
<p>除了module可以提供钩子(格式如：module_TYPE_alter)修改变量值以外，theme也可以提供钩子(格式：theme_TYPE_alter)修改变量值。所以，drupal必须要求模块和主题命名的唯一。</p>]]></description></item><item><title>请为我们的冷漠付费</title><link>http://www.cnblogs.com/eastson/archive/2013/08/12/3252239.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 12 Aug 2013 00:58:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/08/12/3252239.html</guid><description><![CDATA[<p>1935年，在纽约市一个最贫困最脏乱地区的法庭上，一名老妇人因偷窃面包正被审问。老妇人头发凌乱，手在微微发抖，嗫嚅着说：&ldquo;原谅我。我需要面包，来喂养我那几个饿得直哭的孙儿，他们好几天没吃东西了&hellip;&hellip;&rdquo;她抬手去抹眼角的泪水。法官依然冷若冰霜，当庭宣称：&ldquo;我必须秉公办事，你可以选择10美元的罚款或者10天的拘役。&rdquo;</p>
<p>判决宣布后，时任纽约市长的拉瓜地亚从旁听席上站起来，脱下帽子，放进5美元，然后向其他人说：&ldquo;现在，请诸位每人另交50美分的罚金，这是为我们的冷漠付费，以处罚我们生活在一个要老祖母去偷面包喂养孙儿的城市。&rdquo;旁听席上的每个人闻之动颜，认认真真地捐出了50美分。</p>
<p>按理说，一个老妇人偷窃面包被罚款，与外人何干？拉瓜地亚说得明白&mdash;&mdash;&mdash;为我们的冷漠付费。他告诉我们，人和人之间，并非孤立无关的；人来到这世间，作为社会的动物，是订有契约的：物质利益的来往，有法律的契约；行为生活的交往，有精神的契约。</p>
<p>善，并不仅仅是一种与冷漠、奸诈、残忍、自私自利相对的一种品质，还是一种精神的契约。</p>
<p>我想起一位名叫马丁&middot;尼莫拉的德国新教牧师，他在美国波士顿犹太人屠杀纪念碑上铭刻了一首短诗：在德国，起初他们追杀共产主义者，我没有说话，因为我不是共产主义者；接着他们追杀犹太人，我没有说话，因为我不是犹太人；后来他们追杀工会成员，我没有说话，因为我是新教教徒；最后他们奔我而来，再也没有人站出来为我说话了。这正是背弃精神契约的最终结局。</p>
<p>人生在世，谁都有可能遭遇危难和困境，谁都有可能成为弱者，如果我们在别人危急的时候不援手，谁能担保自己不会吞咽孤立无援的苦果？</p>
<p>人心只有向善，才能被阳光照耀，所以善的契约才在世界普遍存在。懂得珍惜这种契约的人是高贵的。懂得为冷漠付费的人是明智的。</p>]]></description></item><item><title>使用Drush管理Drupal站点</title><link>http://www.cnblogs.com/eastson/archive/2013/08/09/3248343.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 09 Aug 2013 07:23:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/08/09/3248343.html</guid><description><![CDATA[<p><span style="line-height: 1.5;">Drush(</span><span style="line-height: 1.5;">Drush = Drupal + Shell</span><span style="line-height: 1.5;">)就是使用命令行命令来操作Drupal站点，它的命令格式与git类似，都是双字命令（drush + 实际的命令）。既然是命令行命令，也就可以使用其他脚本来实现相同的功能，比如编写shell脚本来实现相同的功能，也的确有不少人这样做过。但是，使用Drush要远优于编写自己的脚本，好处在于，一是可以利用Drush开发社区的力量，二是Drush的命令更加可靠，适用于更多变的环境。<br /><br /><span style="line-height: 1.5;">从安全性考虑，Drush应当安装站点之外的目录下。官方站点上介绍，最简单的安装方法是使用PEAR工具，但是很多共享主机可能并不提供此工具。下面介绍的是通过git来安装最新版本的Drush：</span></span></p>
<div class="cnblogs_code">
<pre>git clone --recursive --branch master http:<span style="color: #008000;">//</span><span style="color: #008000;">git.drupal.org/project/drush.git</span></pre>
</div>
<p><span style="line-height: 1.5;">上面的命令将创建一个文件夹drush，并将整个dursh模块存放在这个文件夹下。默认情况下，在这个文件夹下的drush文件应当是可执行的，如果不是，将其权限修改为可执行。<br /><br /></span><span style="line-height: 1.5;">最后，将别名赋予命令，这样就可以在任何地方使用Drush命令。</span></p>
<div class="cnblogs_code">
<pre>alias dr=<span style="color: #800000;">'</span><span style="color: #800000;">/var/home/henry/drush/drush</span><span style="color: #800000;">'</span></pre>
</div>
<p><span style="line-height: 1.5;"><br />为了使用Drush，必须先告诉Drush要操作哪个站点，</span><strong style="line-height: 1.5;">一个最直接的方法是将当前目录转到要想操作的站点目录下，Drush就自动将操作应用于当前目录下的站点</strong><span style="line-height: 1.5;">。例如，将当前目录转到刚装好的一个Drupal7站点根目录下，输入命令：</span></p>
<div class="cnblogs_code">
<pre>$ dr core-<span style="color: #000000;">status
 Drupal version         :  </span><span style="color: #800080;">7.15</span><span style="color: #000000;">                             
 Site URI               :  http: </span><span style="color: #008000;">//</span><span style="color: #008000;">default                   </span>
<span style="color: #000000;"> Database driver        :  mysql                            
 Database </span><span style="color: #0000ff;">hostname</span><span style="color: #000000;">      :  localhost                        
 Database username      :  henry                            
 Database name          :  henry_workrepo_org               
 Database               :  Connected                        
 Drupal bootstrap       :  Successful                       
 Drupal user            :  Anonymous                        
 Default theme          :  bartik                           
 Administration theme   :  seven                            
 PHP configuration      :  </span>/etc/<span style="color: #000000;">php.ini                     
 Drush version          :  </span><span style="color: #800080;">6.0</span>-<span style="color: #000000;">dev                          
 Drush configuration    :                                   
 Drupal root            :  </span>/var/home/henry/www/<span style="color: #000000;">workrepo.org
 Site path              :  sites</span>/<span style="color: #000000;">default                    
 File directory path    :  sites</span>/default/<span style="color: #000000;">files              
 temp                   :  </span>/tmp </pre>
</div>
<p><span style="line-height: 1.5;"><br />更多链接：</span></p>
<p id="page-title" class="title"><a href="http://www.drush.org/drush_windows_installer">Drush Windows Installer</a></p>
<div id="name-and-slogan">
<p id="site-name"><a title="Home" href="http://drush.ws/" rel="home">Drush.org</a></p>
</div>]]></description></item><item><title>Getting and installing the PEAR package manager</title><link>http://www.cnblogs.com/eastson/archive/2013/08/09/3248239.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 09 Aug 2013 06:48:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/08/09/3248239.html</guid><description><![CDATA[<div id="installation.getting.windows" class="section">
<div class="info">
<h2 class="title">Windows</h2>
</div>
<p class="para">After you have downloaded and installed PHP, you have to manually execute the batch file located in e.g.&nbsp;<strong><code class="filename">c:\php\go-pear.bat</code></strong>. The setup will ask you some questions and afterwards the PEAR Package Manager will be installed in the path, which you have specified during installation.</p>
<p class="para">Finally you have to add that installation path to your&nbsp;<code class="literal">PATH</code>&nbsp;environment. Either do this manually (Start &gt; Control Panel &gt; System &gt; Environment) or run (double-click) the newly generated&nbsp;<code class="filename">PEAR_ENV.reg</code>&nbsp;that's now found in the PHP source directory.</p>
<p class="para">After that you can access the PEAR Package Manager by running the command&nbsp;<code class="literal">pear</code>&nbsp;in a Windows Command Prompt.</p>
<p class="para">To update your PEAR installation, request&nbsp;<strong><a class="link external" href="http://pear.php.net/go-pear.phar">http://pear.php.net/go-pear.phar</a></strong>&nbsp;in your browser and save the output to a local file&nbsp;<code class="filename">go-pear.phar</code>. You can then run</p>
<div class="cnblogs_code">
<pre>php go-pear.phar</pre>
</div>
<p><span style="line-height: 1.5;">in a Windows Command Prompt to start the update process.</span></p>
<p><span style="line-height: 1.5;"><span>After&nbsp;</span><a class="link" href="http://pear.php.net/manual/en/installation.checking.php#installation.checking.cli.modifyingphpini">changing&nbsp;<code class="filename">php.ini</code>&nbsp;</a><span>, you need to restart your web server.</span></span></p>
<p>&nbsp;</p>
</div>
<div id="installation.getting.unix" class="section">
<div class="info">
<h2 class="title">Unix/Linux/BSD</h2>
</div>
<p class="para">When using PHP, the PEAR Package Manager is already installed unless one has used the&nbsp;<code class="filename">./configure</code>&nbsp;option&nbsp;<code class="literal">--without-pear</code>.</p>
<p class="para">If one uses a version of PHP that is supplied by Unix/Linux/BSD distributors it may be necessary to manually install PEAR. Users should consult the documentation for the respective distribution in this case.</p>
<p class="para">If you want to re-install the Package Manager, you can use the following provisional way:</p>
<div class="cnblogs_code">
<pre>$ wget http:<span style="color: #008000;">//</span><span style="color: #008000;">pear.php.net/go-pear.phar</span>
$ php go-pear.phar</pre>
</div>
<p>&nbsp;</p>
</div>]]></description></item><item><title>CKEditor和IMCE构建drupal编辑器</title><link>http://www.cnblogs.com/eastson/archive/2013/08/07/3243622.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 07 Aug 2013 09:42:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/08/07/3243622.html</guid><description><![CDATA[<p><span>1. 安装并启用CKEditor和IMCE模块。</span></p>
<p><span>2. 配置<span>CKEditor：</span></span></p>
<p><span><span><img src="http://images.cnitblog.com/blog/111826/201308/07173532-1b81d8d64aef404faeb5a2ad7dc19a37.png" alt="" /></span></span></p>
<p>3.&nbsp;配置用户的权限即可。最终效果图：</p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201308/07174133-7ab6816e21574879869f058c028fc4db.png" alt="" /></span></p>]]></description></item><item><title>Drupal资源</title><link>http://www.cnblogs.com/eastson/archive/2013/08/07/3243197.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 07 Aug 2013 07:31:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/08/07/3243197.html</guid><description><![CDATA[<p><strong>Views模块：</strong></p>
<p class="style2"><a href="http://www.cc.ntu.edu.tw/chinese/epaper/0008/20090320_8009.htm">使用Drupal 6 Views Module系列(一)</a></p>
<p class="style2">&nbsp;</p>
<p><strong>主题：</strong></p>
<p class="title">Drupal Zen 基模板菜鸟终结者:&nbsp;<a href="http://www.drupalla.com/node/471">认识Zen</a>&nbsp;|&nbsp;<a href="http://www.drupalla.com/node/472">增加对Nice Menus 的支持</a>&nbsp;|&nbsp;<a href="http://www.drupalla.com/node/473">一些基于Zen的子模板</a>&nbsp;|&nbsp;<a href="http://www.drupalla.com/node/474">drupalla.com案例讲解</a></p>
<p class="book-heading"><a href="http://www.thinkindrupal.com/book/export/html/8">Drupal主题制作指南(v6)</a></p>]]></description></item><item><title>【转】为drupal初学者准备的12个精品课程</title><link>http://www.cnblogs.com/eastson/archive/2013/08/07/3242968.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 07 Aug 2013 05:56:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/08/07/3242968.html</guid><description><![CDATA[<p>下面是一些网上免费的drupal教程，这些教程将对初学者和那些从别的CMS转向drupal的开发者非常有帮助。<br />初级教程</p>
<p>1.在开始用drupal之前，你要知道一些基本的东西，内容很简单，但有些还是值得做个笔记的,<a href="http://drupal.org/getting-started/before" rel="nofollow">http://drupal.org/getting-started/before</a>.</p>
<p>2.如果你想完整地读一本面象初级者的教程，你可以参照&nbsp;<a href="http://drupal.org/getting-started/before" rel="nofollow">Drupal cookbook for beginners</a>&nbsp;(PDF),如果你想在线阅读，可以参照<a href="http://drupal.org/handbook/customization/tutorials/beginners-cookbook" rel="nofollow">http://drupal.org/handbook/customization/tutorials/beginners-cookbook</a>.</p>
<p>3.如果你想找关于drupal安装，配制，改变themes,建立基本的搜索，备份，升级等的教程，不妨参照<a href="http://www.siteground.com/tutorials/drupal-tutorial/" rel="nofollow">http://www.siteground.com/tutorials/drupal-tutorial/</a>.</p>
<p>4.正像做饭一样，建一个基于drupal的网站有很多种方法，你可以参考<a href="http://drupal.org/handbook/site-recipes" rel="nofollow">http://drupal.org/handbook/site-recipes</a>获得更多帮助</p>
<p>5.在IBM网站上也有遍关于drupal的,"<a href="http://www-128.ibm.com/developerworks/ibm/library/i-osource5/" rel="nofollow">Getting started with drupal</a>"</p>
<p>6.<a href="http://drupal.org/handbook/customization/videocasts" rel="nofollow">video tutorials and screencasts</a>，里面有很多video，这是最全的教程</p>
<p>应用和开发教程</p>
<p>1.当你建好站后，可以参考 <a href="http://www.lullabot.com/blog/podcasts/50-drupal-tips-and-tricks">50 Drupal Tips and Tricks</a>获得更多小技巧</p>
<p>2.<a href="http://drupal.org/theme-guide" rel="nofollow">Drupal 6 theme guide</a>,如果你想了解drupal的theme，这是一个很好的教程，另外，还有一个不错的&nbsp;<a href="http://drupal.org/node/22803" rel="nofollow">Theme Howtos</a>,对于drupal 5或更早的版本，可以参考<a href="http://drupal.org/theme-guide/5" rel="nofollow">Theme Guide(drupal 5 and previous)</a></p>
<p>3. 另一篇不能漏掉的教程：<a href="http://drupal.org/node/326504" rel="nofollow">drupal caching,speed and performance</a>，它写的非常详细，你可以跟着里面的步骤一步一步地实验.</p>
<p>4.如果想让你的网站更加漂亮，可以参照&nbsp;<a href="http://drupal.org/node/326504" rel="nofollow">http://drupal.org/node/326504</a>,另外，这里还有一些drupal里面的css技巧<a href="http://drupal.org/node/206662" rel="nofollow">http://drupal.org/node/206662</a>.</p>
<p>5.video和屏幕演示讲解的方法是最有效的。你可以参照以下的几个教程：/<br />video教程&nbsp;<a href="http://drupal.org/node/136502" rel="nofollow">themeing</a><br />关于开发的video教程&nbsp;<a href="http://drupal.org/node/128758" rel="nofollow">development hot-to</a><br />关于各种第三方模块的<a href="http://drupal.org/node/63155" rel="nofollow">video contributed modules</a></p>
<p>6.小段有用的程序也很有帮助，可以参考&nbsp;<a href="http://drupal.org/node/45471" rel="nofollow">theme snippets</a>&nbsp;,<a href="http://drupal.org/node/41586" rel="nofollow">php snippets</a>&nbsp;,<a href="http://drupal.org/node/41586" rel="nofollow">sql snippets</a>,或者<a href="http://drupal.org/handbook/customization/snippets" rel="nofollow">snippets</a></p>
<p>来自&nbsp;<a href="http://mydrupal.com/drupal-tutorials" rel="nofollow">http://mydrupal.com/drupal-tutorials</a></p>]]></description></item><item><title>OFBIZ+ECLIPSE</title><link>http://www.cnblogs.com/eastson/archive/2013/07/17/3195109.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 17 Jul 2013 03:43:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/07/17/3195109.html</guid><description><![CDATA[<p>1. 首先要安装好OFBIZ，参考《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/p/3195006.html">OFBIZ安装</a>》。</p>
<p>2. 安装ECLIPSE。</p>
<p>3. 安装<span>FreeMarker</span>插件，这是OFBIZ的模版引擎。在"Eclipse Marketplace..."搜索"JBoss Tools"，点击"Install"，然后选择"FreeMarker IDE".</p>
<p>4. 关联*.bsh编辑器<span>&nbsp;Windows &gt; Preferences &gt; General &gt; Editors &gt; File Associations：</span></p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201307/17095525-2ece8fe66d67458eaeb33b6e4f096728.png" alt="" /></span></p>
<p>5. 导入OFBIZ项目<span>File &gt; Import &gt; Existing Projects into Workspace，必须将项目编码设为UTF-8，否则个别文件会出现下面这样的乱码：</span></p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201307/17104044-a3ea0b8d53194ed681c8b936a3e54b64.png" alt="" /></span></p>
<p>&nbsp;6. 创建一个新的Debug配置，启动类必须是org.ofbiz.base.start.Start：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201307/17104541-13d32d51e5d3473c97e19e284bbb548b.png" alt="" />&nbsp;</p>
<p>7. 现在，可以开始调试OFBIZ了：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201307/17104949-d20fde92e23b4a9cbdb0fcdacb66ed2b.png" alt="" /></p>
<p>&nbsp;</p>
<p>问题一：<strong>Can't find bundle for base name cache, locale en</strong></p>
<div class="cnblogs_code">
<pre>Start.java using configuration <span style="color: #0000ff;">file</span> org/ofbiz/base/start/<span style="color: #000000;">start.properties
Set OFBIZ_HOME to </span>- Z:/eclipse-jee-juno-SR2-win32/workspace/ofbiz.<span style="color: #800080;">12.04</span><span style="color: #000000;">
Admin socket configured on </span>- /<span style="color: #800080;">127.0</span>.<span style="color: #800080;">0.1</span>:<span style="color: #800080;">10523</span><span style="color: #000000;">
Exception </span><span style="color: #0000ff;">in</span> thread <span style="color: #800000;">"</span><span style="color: #800000;">main</span><span style="color: #800000;">"</span><span style="color: #000000;"> java.lang.ExceptionInInitializerError
    at org.ofbiz.base.util.Debug.</span>&lt;clinit&gt;(Debug.java:<span style="color: #800080;">88</span><span style="color: #000000;">)
    at org.ofbiz.base.container.ContainerLoader.load(ContainerLoader.java:</span><span style="color: #800080;">77</span><span style="color: #000000;">)
    at org.ofbiz.base.start.Start.initStartLoaders(Start.java:</span><span style="color: #800080;">263</span><span style="color: #000000;">)
    at org.ofbiz.base.start.Start.init(Start.java:</span><span style="color: #800080;">232</span><span style="color: #000000;">)
    at org.ofbiz.base.start.Start.main(Start.java:</span><span style="color: #800080;">131</span><span style="color: #000000;">)
Caused by: java.util.MissingResourceException: Can</span><span style="color: #800000;">'</span><span style="color: #800000;">t find bundle for base name cache, locale en</span>
<span style="color: #000000;">    at java.util.ResourceBundle.throwMissingResourceException(Unknown Source)
    at java.util.ResourceBundle.getBundleImpl(Unknown Source)
    at java.util.ResourceBundle.getBundle(Unknown Source)
    at org.ofbiz.base.util.cache.UtilCache.setPropertiesParams(UtilCache.java:</span><span style="color: #800080;">214</span><span style="color: #000000;">)
    at org.ofbiz.base.util.cache.UtilCache.setPropertiesParams(UtilCache.java:</span><span style="color: #800080;">210</span><span style="color: #000000;">)
    at org.ofbiz.base.util.cache.UtilCache.</span>&lt;init&gt;(UtilCache.java:<span style="color: #800080;">138</span><span style="color: #000000;">)
    at org.ofbiz.base.util.cache.UtilCache.createUtilCache(UtilCache.java:</span><span style="color: #800080;">1017</span><span style="color: #000000;">)
    at org.ofbiz.base.util.UtilProperties.</span>&lt;clinit&gt;(UtilProperties.java:<span style="color: #800080;">71</span><span style="color: #000000;">)
    ... </span><span style="color: #800080;">5</span> <span style="color: #0000ff;">more</span></pre>
</div>
<p>解决方法：<span>在Build Path 里加上base/config,base/cert,base/dtd目录：</span></p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201307/17113602-61590a617b21469e998fe3bec49ee024.png" alt="" /></span></p>
<p>&nbsp;</p>
<p>参考：</p>
<p><span id="title-text"><a href="https://cwiki.apache.org/confluence/display/OFBIZ/Running+and+Debugging+OFBiz+in+Eclipse">Running and Debugging OFBiz in Eclipse</a></span></p>]]></description></item><item><title>OFBIZ安装</title><link>http://www.cnblogs.com/eastson/archive/2013/07/17/3195006.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 17 Jul 2013 01:24:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/07/17/3195006.html</guid><description><![CDATA[<p>1. 安装SVN客户端，从<a href="http://ofbiz.apache.org/source-repositories.html">Apache OFBiz Source Repository</a>获取OFBIZ下载地址。此处以12.04为例，下载地址为<a href="http://svn.apache.org/repos/asf/ofbiz/branches/release12.04/">http://svn.apache.org/repos/asf/ofbiz/branches/release12.04/</a>：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201307/17090947-8dc4778bd5b344bfa17315518c5a3dc7.png" alt="" /></p>
<p>2. 安装JDK 1.6，不是JRE。<strong><span style="color: #ff0000;">注意，ofbiz 13.07必须安装JDK 1.7才可以。</span></strong></p>
<p>3. 安装OFBIZ演示数据：</p>
<div class="cnblogs_code">
<pre>$ ant load-demo</pre>
</div>
<p>4. 启动OFBIZ：</p>
<div class="cnblogs_code">
<pre>$ ant start</pre>
</div>
<p>&nbsp;</p>
<p>现在，就可以打开浏览器访问OFBIZ了：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">Once OFBiz starts, you can look at the demo storefront at:
http:</span><span style="color: #008000;">//</span><span style="color: #008000;">localhost:8080/ecommerce</span>
<span style="color: #000000;">
the back office at:
https:</span><span style="color: #008000;">//</span><span style="color: #008000;">localhost:8443/ordermgr</span>
<span style="color: #000000;">
and the administration interface at:
https:</span><span style="color: #008000;">//</span><span style="color: #008000;">localhost:8443/webtools</span>
<span style="color: #000000;">
You can log </span><span style="color: #0000ff;">in</span> with the user <span style="color: #800000;">"</span><span style="color: #800000;">admin</span><span style="color: #800000;">"</span> and password <span style="color: #800000;">"</span><span style="color: #800000;">ofbiz</span><span style="color: #800000;">"</span>.</pre>
</div>
<p>&nbsp;</p>
<p>用下面的方法查询所有可用的命令：</p>
<div class="cnblogs_code">
<pre>$ ant -p    </pre>
</div>]]></description></item><item><title>OFBIZ文章</title><link>http://www.cnblogs.com/eastson/archive/2013/07/16/3193575.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 16 Jul 2013 08:08:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/07/16/3193575.html</guid><description><![CDATA[<p>0. <a href="http://www.360doc.com/content/07/0502/12/11586_478150.shtml">OFBIZ&nbsp;Tutorials</a></p>
<p>1.&nbsp;<a href="http://www.opensourcestrategies.com/ofbiz/ofbiz_tour.php">A Tour of OFBiz</a></p>
<p>2.&nbsp;<a href="http://www.opensourcestrategies.com/ofbiz/entities_services.php">Entities and Services - Data Models and Business Logic in OFBiz</a></p>
<p>3. <a href="http://www.opensourcestrategies.com/ofbiz/hello_world1.php">Hello World 1</a> | <a href="http://www.opensourcestrategies.com/ofbiz/hello_world2.php">2</a> | <a href="http://www.opensourcestrategies.com/ofbiz/hello_world3.php">3</a></p>
<p>4.&nbsp;<span id="doc-tittle-5"><a href="http://wenku.baidu.com/view/477f49d5360cba1aa811da0a.html">OFBiz初学者的开发指南</a>&nbsp;|&nbsp;<a href="http://wenku.baidu.com/view/0051e8c358f5f61fb73666ba.html">实体引擎指南</a></span></p>
<p>5.&nbsp;<a href="https://cwiki.apache.org/OFBIZ/home.html" target="_blank">Apache OFBiz (Open For Business) Wiki</a></p>
<p>6.&nbsp;<a href="https://cwiki.apache.org/OFBIZ/ofbiz-tutorial-a-beginners-development-guide.html" target="_blank">OFBiz Tutorial - A Beginners Development Guide</a></p>
<p>7.&nbsp;<a href="https://cwiki.apache.org/OFBADMIN/apache-ofbiz-getting-started.html" target="_blank">Apache OFBiz Getting Started</a></p>
<p>8.&nbsp;<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/08/06/2624576.html" target="_blank">OFBiz Tutorials</a></p>
<p>9.&nbsp;<a href="http://my.oschina.net/zww0580/blog/13906" target="_blank">ofbiz权限判断语法整理</a></p>]]></description></item><item><title>Opentaps 1.5安装过程(Windows+MySQL)</title><link>http://www.cnblogs.com/eastson/archive/2013/07/16/3192893.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 16 Jul 2013 02:59:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/07/16/3192893.html</guid><description><![CDATA[<p>详细安装过程请参考：《<a href="http://www.opentaps.org/docs/index.php/Using_opentaps_ERP_%2B_CRM_with_MySQL">Using opentaps ERP + CRM with MySQL</a>》</p>
<p>&nbsp;</p>
<p>1. 安装MySQL，创建opentaps数据库。</p>
<p>2. 修改<span>&nbsp;framework/entity/config/entityengine.xml：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">1. Change the "datasource-name" attribute under the </span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">delegator </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="default"</span><span style="color: #ff0000;">...</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;"> from the default "localderby" to "localmysql". (Note: older version of opentaps might have a default of "localhsql") Do not change localderbyodbc.
2. Look for </span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">datasource </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="localmysql"</span><span style="color: #ff0000;">...</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;"> further down.
3. Change the "jdbc-uri" under "localmysql" to "jdbc:mysql://127.0.0.1/opentaps?autoReconnect=true</span><span style="color: #ff0000;">&amp;amp;</span><span style="color: #000000;">useOldAliasMetadataBehavior=true"
4. Change the "jdbc-username" to "opentaps"
5. Change the "jdbc-password" to the password you chose above
6. Set the correct character set and collation. By default, the entity engine is configured to use case-sensitive Latin character sets. If you are going to use opentaps with a different language, you can change it to UTF8 by setting character-set="utf8" and collate="utf8_general_ci" or at your language's UTF8 setting. Note that MySQL may not support case-sensitive characters for your UTF8 character set.</span></pre>
</div>
<p>3. 执行Opentaps安装：ant run-install。如果出现JVM Heap错误，需要修改build.properties，可以参考《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2013/05/08/3067209.html">java.lang.OutOfMemoryError : Java heap space</a>》。下面是在我的1G内存机器上的配置：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">memory.initial.param = -Xms64M
memory.max.param = -Xmx512M
permmemory.max.param = -XX:MaxPermSize=256M
memory.maxpermsize.param = -XX:MaxPermSize=256M
javadoc.maxmemory = 512M
pos.memory.max.param = -Xmx256M</span></pre>
</div>
<p>4. 安装完毕，启动Opentaps，打开浏览器试试看：</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>OpenERP 7.0 中文报表PDF乱码（WindowsXP）</title><link>http://www.cnblogs.com/eastson/archive/2013/07/04/3134128.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 04 Jul 2013 09:07:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/07/04/3134128.html</guid><description><![CDATA[<p>OpenERP默认安装输出的PDF中文报表都是一些方块：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201307/04170438-fb3148c8c5f24293993aeb0084615b5e.png" alt="" /></p>
<p>&nbsp;</p>
<p>此问题可以通过oecn_base_fonts模块解决：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201307/04170541-0a9ad1145c914992b4435929c7f2f592.png" alt="" /></p>
<p>&nbsp;</p>
<p>更多关于oecn_base_fonts的信息请参考：</p>
<p>1.&nbsp;<a title="OpenERPv7.0 中文报表字体模块(oecn_base_fonts)安装指南" href="http://cn.openerp.cn/openerp_v7_oecn_base_fonts/" target="_blank">OpenERPv7.0 中文报表字体模块(oecn_base_fonts)安装指南</a></p>
<p>2.&nbsp;<a href="http://shine-it.net/index.php/topic,2791.msg9408.html#msg9408" rel="nofollow" target="_blank">oecn_base_fonts 使用说明(解决v.7.0,v6.1，V6.0.x的PDF中文字体方框问题，支持CJK语言)</a></p>]]></description></item><item><title>【转】CentOS 6.3 X64自动安装OpenERP 7.0脚本</title><link>http://www.cnblogs.com/eastson/archive/2013/07/04/3171744.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 04 Jul 2013 07:52:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/07/04/3171744.html</guid><description><![CDATA[<p>原文地址：<a href="http://www.veryopen.org/?p=2806" target="_blank">OpenERP 7.0安装与配置</a></p>
<div class="cnblogs_code">
<pre>#!/bin/bash -<span style="color: #000000;">e
# Modified script from Carlos E. Fonseca Zorrilla 

# </span><span style="color: #800080;">1</span><span style="color: #000000;">. Add the two additional installation sources:
rpm </span>-ivh http:<span style="color: #008000;">//</span><span style="color: #008000;">dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm</span>
rpm -ivh http:<span style="color: #008000;">//</span><span style="color: #008000;">yum.pgrpms.org/9.2/redhat/rhel-6-i386/pgdg-centos92-9.2-6.noarch.rpm</span>
<span style="color: #000000;">
# </span><span style="color: #800080;">2</span><span style="color: #000000;">. Install additional packages:
</span><span style="color: #0000ff;">yum</span> -y <span style="color: #0000ff;">install</span> <span style="color: #0000ff;">wget</span> <span style="color: #0000ff;">unzip</span>
<span style="color: #0000ff;">yum</span> -y <span style="color: #0000ff;">install</span> python-psycopg2 python-lxml PyXML python-setuptools libxslt-<span style="color: #000000;">python pytz \
            python</span>-matplotlib python-babel python-mako python-dateutil python-<span style="color: #000000;">psycopg2 \
            pychart pydot python</span>-reportlab python-devel python-imaging python-<span style="color: #000000;">vobject \
            hippo</span>-canvas-python mx python-gdata python-ldap python-<span style="color: #000000;">openid PyYAML\
            python</span>-werkzeug python-vatnumber pygtk2 glade3 pydot python-<span style="color: #000000;">dateutil \
            python</span>-matplotlib pygtk2 glade3 pydot python-dateutil python-<span style="color: #000000;">matplotlib \
            python python</span>-devel python-psutil python-docutils <span style="color: #0000ff;">make</span><span style="color: #000000;">\
            automake </span><span style="color: #0000ff;">gcc</span> <span style="color: #0000ff;">gcc</span>-c++ kernel-devel byacc flashplugin-nonfree poppler-<span style="color: #000000;">utils pywebdav\

# </span><span style="color: #800080;">3</span>. Install database postgresql <span style="color: #800080;">9.2</span>
<span style="color: #0000ff;">yum</span> -y <span style="color: #0000ff;">install</span> postgresql92-libs postgresql92-<span style="color: #000000;">server postgresql92
service postgresql</span>-<span style="color: #800080;">9.2</span><span style="color: #000000;"> initdb
chkconfig postgresql</span>-<span style="color: #800080;">9.2</span><span style="color: #000000;"> on
service postgresql</span>-<span style="color: #800080;">9.2</span><span style="color: #000000;"> start
</span><span style="color: #0000ff;">su</span> - postgres -c <span style="color: #800000;">"</span><span style="color: #800000;">createuser  --superuser openerp</span><span style="color: #800000;">"</span><span style="color: #000000;">

# </span><span style="color: #800080;">4</span><span style="color: #000000;">. Install Google Data Python Client Library:
cd </span>/<span style="color: #000000;">tmp
</span><span style="color: #0000ff;">wget</span> http:<span style="color: #008000;">//</span><span style="color: #008000;">gdata-python-client.googlecode.com/files/gdata-2.0.17.zip</span>
<span style="color: #0000ff;">unzip</span> gdata-<span style="color: #800080;">2.0</span>.<span style="color: #800080;">17</span>.<span style="color: #0000ff;">zip</span>
<span style="color: #0000ff;">rm</span> -rf gdata-<span style="color: #800080;">2.0</span>.<span style="color: #800080;">17</span>.<span style="color: #0000ff;">zip</span><span style="color: #000000;">
cd gdata</span>*<span style="color: #000000;">
python setup.py </span><span style="color: #0000ff;">install</span><span style="color: #000000;">

# </span><span style="color: #800080;">5</span>. Install OpenERP <span style="color: #800080;">7.0</span><span style="color: #000000;">:
cd </span>/<span style="color: #000000;">tmp
adduser openerp
DIR</span>=<span style="color: #800000;">"</span><span style="color: #800000;">/var/run/openerp /var/log/openerp</span><span style="color: #800000;">"</span>
<span style="color: #0000ff;">for</span> NAME <span style="color: #0000ff;">in</span><span style="color: #000000;"> $DIR
</span><span style="color: #0000ff;">do</span>
<span style="color: #0000ff;">if</span> [ ! -d $NAME ]; <span style="color: #0000ff;">then</span>
   <span style="color: #0000ff;">mkdir</span> -<span style="color: #000000;">p $NAME
   </span><span style="color: #0000ff;">chown</span><span style="color: #000000;"> openerp.openerp $NAME
</span><span style="color: #0000ff;">fi</span>
<span style="color: #0000ff;">done</span>

<span style="color: #0000ff;">rm</span> -rf openerp*
<span style="color: #0000ff;">wget</span> http:<span style="color: #008000;">//</span><span style="color: #008000;">nightly.openerp.com/7.0/nightly/src/openerp-7.0-latest.tar.gz</span>
<span style="color: #0000ff;">tar</span> -zxvf openerp-<span style="color: #800080;">7.0</span>-latest.<span style="color: #0000ff;">tar</span>.gz  --transform <span style="color: #800000;">'</span><span style="color: #800000;">s!^[^/]\+\($\|/\)!openerp\1!</span><span style="color: #800000;">'</span><span style="color: #000000;">
cd openerp
python setup.py </span><span style="color: #0000ff;">install</span>
<span style="color: #0000ff;">rm</span> -rf /usr/local/bin/openerp-<span style="color: #000000;">server
</span><span style="color: #0000ff;">cp</span> openerp-server /usr/local/<span style="color: #000000;">bin
</span><span style="color: #0000ff;">cp</span> <span style="color: #0000ff;">install</span>/openerp-server.init /etc/init.d/<span style="color: #000000;">openerp
</span><span style="color: #0000ff;">cp</span> <span style="color: #0000ff;">install</span>/openerp-server.conf /<span style="color: #000000;">etc
</span><span style="color: #0000ff;">chown</span> openerp:openerp /etc/openerp-<span style="color: #000000;">server.conf
</span><span style="color: #0000ff;">chmod</span> u+x /etc/init.d/<span style="color: #000000;">openerp
chkconfig openerp on
service  openerp start

# </span><span style="color: #800080;">6</span>. Allow the port <span style="color: #800080;">8069</span><span style="color: #000000;"> go through firewall:
</span><span style="color: #0000ff;">sed</span> -i <span style="color: #800000;">'</span><span style="color: #800000;">/dport 22/a\-A INPUT -m state --state NEW -m tcp -p tcp --dport 8069 -j ACCEPT</span><span style="color: #800000;">'</span> /etc/sysconfig/<span style="color: #000000;">iptables
service iptables restart

</span><span style="color: #0000ff;">echo</span> <span style="color: #800000;">"</span><span style="color: #800000;">\n\n\nAll Well Done!! Congratulations!!</span><span style="color: #800000;">"</span>
<span style="color: #0000ff;">echo</span> <span style="color: #800000;">"</span><span style="color: #800000;">一些关键信息如下:</span><span style="color: #800000;">"</span>
<span style="color: #0000ff;">echo</span> <span style="color: #800000;">"</span><span style="color: #800000;">1. 数据库的两个配置文件postgresql.conf和pg_hba.conf位于/var/lib/pgsql/9.2/data下；</span><span style="color: #800000;">"</span>
<span style="color: #0000ff;">echo</span> <span style="color: #800000;">"</span><span style="color: #800000;">2. OpenERP的主要文件安装在/usr/lib/python2.6/site-packages/openerp-7.0_xxxx.egg/openerp下;</span><span style="color: #800000;">"</span>
<span style="color: #0000ff;">echo</span> <span style="color: #800000;">"</span><span style="color: #800000;">3. PostgreSQL的用户postgres和openerp，没有密码，只能在本地登录</span><span style="color: #800000;">"</span></pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>OE7设置菜单为什么这么少？</title><link>http://www.cnblogs.com/eastson/archive/2013/07/04/3171639.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 04 Jul 2013 07:17:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/07/04/3171639.html</guid><description><![CDATA[<p>默认安装的OE7设置菜单只有很少的功能：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201307/04151339-fb37b9434e5c41b1965ebc9d99b09588.png" alt="" /></p>
<p>&nbsp;</p>
<p>如果需要更多的OE定制，必须开启&ldquo;<strong>技术特性</strong>&rdquo;选项：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201307/04151709-dfa0eefd66bd47878c16cabdf3097774.png" alt="" /></p>]]></description></item><item><title>PostgreSQL的备份和恢复</title><link>http://www.cnblogs.com/eastson/archive/2013/07/04/3170862.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 04 Jul 2013 01:07:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/07/04/3170862.html</guid><description><![CDATA[<p>关于PostgreSQL的备份和恢复详细信息请参阅《<a href="http://www.php100.com/manual/PostgreSQL8/backup.html" target="_blank">PostgreSQL中文文档</a>》。</p>
<p>&nbsp;</p>
<p><strong>备份：</strong></p>
<p>#pg_dump --username=postgres v70_demo &gt; v70_demo_20130704.dump</p>
<p>&nbsp;</p>
<p><strong>恢复：</strong></p>
<p>#createdb&nbsp;--username=postgres v70_demo_temp</p>
<p>#psql&nbsp;--username=postgres v70_demo_temp &lt; v70_demo_20130704.dump</p>
<p>#dropdb&nbsp;--username=postgres&nbsp;v70_demo_temp</p>]]></description></item><item><title>PyPI镜像网站</title><link>http://www.cnblogs.com/eastson/archive/2013/07/02/3166519.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 02 Jul 2013 03:11:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/07/02/3166519.html</guid><description><![CDATA[<p>镜像列表：<a href="http://www.pypi-mirrors.org/">http://www.pypi-mirrors.org/</a></p>
<p>清华镜像：<a href="http://e.pypi.python.org/">http://e.pypi.python.org/</a></p>
<p><img src="http://images.cnitblog.com/blog/111826/201307/02111039-45d3a167185d4e9192cd891bf8e43318.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>【转】Win 7 下源码运行OpenERP7.0</title><link>http://www.cnblogs.com/eastson/archive/2013/07/01/3165164.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 01 Jul 2013 08:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/07/01/3165164.html</guid><description><![CDATA[<p>原文地址：<a href="http://blog.sina.com.cn/s/blog_ade196920101aabm.html" target="_blank">Win&nbsp;7&nbsp;下源码运行OpenERP7.0</a></p>
<p>&nbsp;</p>
<p><strong>安装Python2.7</strong></p>
<p><span>下载地址：</span><a href="http://www.python.org/getit/" target="_blank">http://www.python.org/getit/</a><span>注：OpenERP7.0支持的Python版本最高为2.7</span><br /><br /></p>
<p><a name="t1"></a><strong>下载OpenERP7.0源代码</strong></p>
<p>
<span>下载地址：</span><a href="http://nightly.openerp.com/7.0/nightly/src/" target="_blank">http://nightly.openerp.com/7.0/nightly/src/</a><br /><span>解压缩到特定目录，例如，D:\openerp</span><br /><br /></p>
<p><a name="t2"></a><strong>安装Postgresql</strong></p>
<p>
<span>下载地址：</span><a href="http://www.postgresql.org/download/windows/" target="_blank">http://www.postgresql.org/download/windows/</a><br /><span>安装后，为OpenERP7.0创建一个超级用户，例如，openerp</span><br /><br /></p>
<p><a name="t3"></a><strong>小技巧</strong></p>
<p>
<span>右键菜单增加文件夹的命令提示符(dos)入口&nbsp;</span><a href="http://www.huo119.com/post/77.htm" target="_blank">http://www.huo119.com/post/77.htm</a><br /><br /></p>
<p><a name="t4"></a><strong>创建OE配置文件</strong></p>
<p>
<span>在OE7.0源码根目录创建openerp-server.conf，内容如下&nbsp;</span><br /><code>[options]<br />admin_passwd = xxxx<br />db_user = openerp<br />db_password = xxxx</code><br /><br /></p>
<p><a name="t5"></a><strong>安装运行OpenERP7.0所需的Python模块</strong></p>
<p>
<span>1. 安装 psycopg2&nbsp;</span><a href="http://www.oepub.net/?/question/59">http://www.oepub.net/?/question/59</a><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></p>
<p><a name="t6"></a><span><span><span>Python连PostgreSQL要psycopg2模块</span>&nbsp;&nbsp;</span></span></p>
<p><a href="http://firehuman.blog.163.com/blog/static/57331120106231811447/">http://firehuman.blog.163.com/blog/static/57331120106231811447/</a></p>
<p><span>2. 其他模块，根据提示到这里下载：</span><a href="http://pypi.python.org/pypi" target="_blank">http://pypi.python.org/pypi</a><br /><br /></p>
<p><a name="t7"></a><strong>运行OpenERP7.0</strong></p>
<p><code>python openerp-server</code></p>
<p>或者</p>
<p>在eclipse中点击python&nbsp;&nbsp;run运行</p>
<p>&nbsp;</p>
<p><a name="t8"></a><strong>搭建Eclipse开发环境</strong></p>
<p>下载Eclipse，并安装PyDev插件<br />通过导入OpenERP7.0源代码目录，创建PyDev项目<br />这样开发环境就好了</p>
<p>
<span>转载地址：</span><a href="http://www.oepub.net/?/question/5">http://www.oepub.net/?/question/5</a></p>]]></description></item><item><title>OpenERP中的会计凭证</title><link>http://www.cnblogs.com/eastson/archive/2013/06/27/3156618.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 27 Jun 2013 03:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/27/3156618.html</guid><description><![CDATA[<p>OpenERP在采购和销售过程中会自动生成一些会计凭证，这些会计凭证反映了物流和资金流在财务上的处理方式。</p>
<table border="1">
<tbody>
<tr>
<td>
<p>仓库入库时 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>
</td>
<td>
<p><span>借：库存商品 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</span></p>
<p>&nbsp; &nbsp; 贷：在途物资</p>
</td>
</tr>
<tr>
<td>
<p>收到供应商发票<span>时</span></p>
</td>
<td>
<p>借：在途物资&nbsp;</p>
<p>借：进项税额</p>
<p>&nbsp; &nbsp; 贷：应付账款</p>
</td>
</tr>
<tr>
<td>
<p>支付供应商货款<span>时</span></p>
</td>
<td>
<p>借：应付账款&nbsp;</p>
<p>&nbsp; &nbsp; 贷：银行</p>
</td>
</tr>
<tr>
<td>
<p>仓库出库<span>时</span></p>
</td>
<td>
<p>借：主营业务成本</p>
<p>&nbsp; &nbsp; 贷：库存商品</p>
</td>
</tr>
<tr>
<td>
<p>打印客户发票<span>时</span></p>
</td>
<td>
<p>借：应收账款&nbsp;</p>
<p>&nbsp; &nbsp; 贷：主营业务收入</p>
<p>&nbsp; &nbsp; 贷：销项税额</p>
</td>
</tr>
<tr>
<td>
<p>&nbsp;收到客户货款<span>时</span></p>
</td>
<td>
<p>&nbsp;借：银行&nbsp;</p>
<p>&nbsp; &nbsp; 贷：应收账款</p>
</td>
</tr>
</tbody>
</table>]]></description></item><item><title>OpenERP实施记录（14）：收款处理</title><link>http://www.cnblogs.com/eastson/archive/2013/06/27/3158289.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 27 Jun 2013 03:09:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/27/3158289.html</guid><description><![CDATA[<p><span>本文是《</span><a href="http://www.cnblogs.com/eastson/archive/2013/06/06/3121314.html" target="_blank">OpenERP实施记录</a><span>》系列文章的一部分。</span></p>
<p>&nbsp;</p>
<p><span><span>1. 在前面的文章中，销售订单确认时自动生成了客户发票，可以在&nbsp;</span><strong>会计 &gt; 客户 &gt; 客户发票</strong><span>&nbsp;查询，状态为"<strong>草稿</strong>"。</span></span></p>
<p><span><span><img src="http://images.cnitblog.com/blog/111826/201306/27105203-1eb77212f370417288684e808630f652.png" alt="" /></span></span></p>
<p>&nbsp;&nbsp;</p>
<p>2.&nbsp;<span>仓管人员送货后，财会人员点击客户发票上的&ldquo;</span><strong>使其生效</strong><span>&rdquo;按钮，核准发票。</span></p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201306/27105455-6c2762b1f8c848f3804046dce6ac18b4.png" alt="" /></span></p>
<p><span>发票核准后，发票状态由&ldquo;</span><strong>草稿</strong><span>&rdquo;变为&ldquo;</span><strong>待支付</strong><span>&rdquo;。</span></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/27105840-878e003ede994940aa5d5c468252148f.png" alt="" />&nbsp;</p>
<p><span>发票核准后，系统会自动生成会计凭证&nbsp;</span><strong>会计 &gt; 会计凭证 &gt; 会计凭证</strong><span>。</span></p>
<p><strong>&nbsp; 借：应收账款</strong>&nbsp;</p>
<p><strong>&nbsp; &nbsp; 贷：主营业务收入</strong></p>
<p><strong>&nbsp; &nbsp; 贷：销项税额</strong></p>
<p><strong><img src="http://images.cnitblog.com/blog/111826/201306/27110009-d46a5133bb36480eabb76e8feb752b7d.png" alt="" /></strong></p>
<p>&nbsp;&nbsp;</p>
<p>3. 财会人员收到客户货款后，<span>点击客户发票中的&ldquo;</span><strong>Payment</strong><span>&rdquo;按钮。</span></p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201306/27110330-efdce2f9f02b41e483da764f75fbede9.png" alt="" /></span></p>
<p><span>在&ldquo;&rdquo;</span><strong>支付发票</strong><span>&ldquo;页面中，选择实际的付款方式，点击&rdquo;</span><strong>保存</strong><span>&ldquo;按钮。支付发票可以在&nbsp;</span><strong>会计 &gt; 客户 &gt; 客户付款</strong><span>&nbsp;查询。</span></p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201306/27110544-2891cc947c2a4e44afeff40abcb79f9a.png" alt="" /></span></p>
<p>&nbsp;</p>
<p>&nbsp;4. 点击支付发票（<strong>会计 &gt; 客户 &gt; 客户付款</strong>）中的&ldquo;<strong>记账</strong>&rdquo;按钮，核准支付发票，状态由&ldquo;<strong>草稿</strong>&rdquo;变为&ldquo;<strong>已登帐</strong>&rdquo;。</p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201306/27110703-4c7f0cb6637c43448f29f6bdc12637af.png" alt="" /></span></p>
<p>支付发票核准后，系统会自动生成会计凭证&nbsp;<strong>会计 &gt; 会计凭证 &gt; 会计凭证</strong>。</p>
<p><strong>&nbsp; 借：<strong>银行</strong></strong>&nbsp;</p>
<p><strong>&nbsp; &nbsp; 贷：<strong><strong>应收账款</strong></strong></strong></p>
<p><strong><img src="http://images.cnitblog.com/blog/111826/201306/27110820-1cacd6405e3f4eb7b2b30f6ebb9aecb3.png" alt="" /></strong></p>
<p>点击记账凭证中的&ldquo;<strong>过账</strong>&rdquo;按钮，将记账凭证过账。</p>
<p>&nbsp;</p>
<p>至此，客户收款完毕，整个销售过程也结束了。</p>]]></description></item><item><title>OpenERP实施记录（13）：出库处理</title><link>http://www.cnblogs.com/eastson/archive/2013/06/27/3158243.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 27 Jun 2013 02:49:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/27/3158243.html</guid><description><![CDATA[<p>本文是《<a href="http://www.cnblogs.com/eastson/archive/2013/06/06/3121314.html" target="_blank">OpenERP实施记录</a>》系列文章的一部分。</p>
<p>&nbsp;</p>
<p>在前面的文章中，业务部门接到沃尔玛3台联想Y400N笔记本电脑的订单，ABC公司立即采购了8台（<strong>3台送货+5台备库存</strong>）回来，完成了入库和付款处理。</p>
<p>&nbsp;</p>
<p><span>1. 在前面的文章中，销售订单确认时自动生成了送货单，</span><span>可以在&nbsp;</span><strong>库存 &gt; 库存管理 &gt; 送货单</strong><span>&nbsp;查询，状态为"<strong>等待可用</strong>"。</span></p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201306/27103046-1475596a43c747e6be9f13f927232c2c.png" alt="" /></span></p>
<p>&nbsp;</p>
<p>2. 采购入库后，仓管人员点击送货单上的"<strong>Check Availability</strong>"按钮，状态由&ldquo;<strong>等待可用</strong>&rdquo;变为&ldquo;<strong>Ready to Process</strong>&rdquo;。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/27103726-b8f993975e4d4d0d84a97e644f5e66ec.png" alt="" /></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/27103736-fd05d21ea31f44059993b96ded2fe614.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 仓管人员准备好送货后，点击送货单上的&ldquo;<strong>Process</strong>&rdquo;按钮。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/27104202-f18511ae7fa943afa2c2126eab09bff3.png" alt="" /></p>
<p><span>在&ldquo;</span><strong>待处理产品</strong><span>&rdquo;中，确认实际送的数量，点击"</span><strong>validate</strong><span>"按钮。</span></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/27104340-affbcb26108b468587cedf64e8c17fee.png" alt="" /></p>
<p><span>送货单确认完毕，状态由&ldquo;</span><strong>Ready for Process</strong><span>&rdquo;变为&ldquo;</span><strong>Done</strong><span>&rdquo;。</span></p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201306/27104457-861be458750c49b186b3d76ba836f8bf.png" alt="" /></span></p>
<p>&nbsp;&nbsp;</p>
<p>4. 送货单确认后，系统会自动生成会计凭证&nbsp;<strong>会计 &gt; 会计凭证 &gt; 会计凭证</strong>。</p>
<p><strong>&nbsp; 借：主营业务成本</strong></p>
<p><strong>&nbsp; &nbsp; 贷：库存商品</strong></p>
<p><strong><img src="http://images.cnitblog.com/blog/111826/201306/27104708-ac968c50b8f1421695984a2ccd245082.png" alt="" /></strong></p>
<p>&nbsp;点击"<strong>过账</strong>"按钮，将会计凭证过账，状态有&ldquo;<strong>未过账</strong>&rdquo;变为<strong>&ldquo;已过账</strong>&rdquo;。</p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201306/27104829-70b81618d55742cba0b860fb56b63b42.png" alt="" /></span></p>]]></description></item><item><title>OpenERP实施记录（12）：付款处理</title><link>http://www.cnblogs.com/eastson/archive/2013/06/26/3156491.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 26 Jun 2013 07:25:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/26/3156491.html</guid><description><![CDATA[<p><span>本文是《</span><a href="http://www.cnblogs.com/eastson/archive/2013/06/06/3121314.html" target="_blank">OpenERP实施记录</a><span>》系列文章的一部分。</span></p>
<p>&nbsp;</p>
<p><span>1. 在前面的文章中，采购订单确认时自动生成了供应商发票，可以在&nbsp;</span><strong>会计 &gt; 供应商列表 &gt; 供应商发票</strong><span>&nbsp;查询，状态为"<strong>草稿</strong>"。</span></p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201306/26135043-52f3bc7f2cf3477194dda5d05bca2a34.png" alt="" /></span></p>
<p>&nbsp;</p>
<p>2. 供应商送货后，还需要开发票给ABC公司。ABC公司财会人员收到供应商实际开具的发票后，与系统中的供应商发票进行核对。点击&ldquo;<strong>Aporove</strong>&rdquo;按钮，核准发票。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/26135520-49e2bf43b2384079bfc50ee0de6aab3b.png" alt="" /></p>
<p>发票核准后，发票状态由&ldquo;<strong>草稿</strong>&rdquo;变为&ldquo;<strong>待支付</strong>&rdquo;。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/26135540-4f05a9579eca4ff09ae9aa1d3cd2cdc8.png" alt="" /></p>
<p><span style="line-height: 1.5;">发票核准后，系统会自动生成会计凭证&nbsp;</span><strong style="line-height: 1.5;">会计 &gt; 会计凭证 &gt; 会计凭证</strong><span style="line-height: 1.5;">。</span><span style="color: #ff0000;"><em>（不解，这张凭证是什么时候过账的？随发票自动过账？）</em></span></p>
<p><strong>&nbsp; 借：<strong>在途物资</strong></strong>&nbsp;</p>
<p><strong>&nbsp; 借：进项税额<strong><br /></strong></strong></p>
<p><strong>&nbsp; &nbsp; 贷：应付账款</strong></p>
<p><strong><img src="http://images.cnitblog.com/blog/111826/201306/26141741-5cd9ef08478f4d8e9c56fdc8d4981e0c.png" alt="" /></strong></p>
<p>&nbsp;&nbsp;</p>
<p>3. ABC公司同意付款后，财会人员点击供应商发票中的&ldquo;<strong>Pay Invoice</strong>&rdquo;按钮。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/26143808-c0574de5852e4ec5bf3786f537db1bb0.png" alt="" /></p>
<p>在&ldquo;&rdquo;<strong>支付发票</strong>&ldquo;页面中，选择实际的付款方式，点击&rdquo;<strong>保存</strong>&ldquo;按钮。支付发票可以在 <strong>会计 &gt; 供应商列表 &gt; 供应商付款</strong> 查询。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/26144308-0339ab8b18864ce6967c014b8517f7ed.png" alt="" /></p>
<p>&nbsp;</p>
<p>4. 点击支付发票（<strong>会计 &gt; 供应商列表 &gt; 供应商付款</strong>）中的&ldquo;<strong>记账</strong>&rdquo;按钮，核准支付发票，状态由&ldquo;<strong>草稿</strong>&rdquo;变为&ldquo;<strong>已登帐</strong>&rdquo;。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/26145000-2fe3983f691849a1a939a5677a779158.png" alt="" /></p>
<p><span>支付发票核准后，系统会自动生成会计凭证&nbsp;</span><strong>会计 &gt; 会计凭证 &gt; 会计凭证</strong><span>。</span></p>
<p><strong>&nbsp; 借：<strong>应付账款</strong></strong>&nbsp;</p>
<p><strong style="line-height: 1.5;">&nbsp; &nbsp; 贷：银行</strong></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/26145052-136070ea248843d296c9ee302eb4b1fa.png" alt="" /></p>
<p>点击记账凭证中的&ldquo;<strong>过账</strong>&rdquo;按钮，将记账凭证过账。</p>
<p>&nbsp;</p>
<p>至此，供应商付款完毕，整个采购过程就结束了。</p>]]></description></item><item><title>OpenERP实施记录（11）：入库处理</title><link>http://www.cnblogs.com/eastson/archive/2013/06/26/3155110.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 26 Jun 2013 06:05:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/26/3155110.html</guid><description><![CDATA[<p>本文是《<a href="http://www.cnblogs.com/eastson/archive/2013/06/06/3121314.html" target="_blank">OpenERP实施记录</a>》系列文章的一部分。</p>
<p>&nbsp;</p>
<p>在前面的文章中，业务部门接到沃尔玛3台联想Y400N笔记本电脑的订单，采购部门完成了补货处理。因为该产品的&ldquo;<strong>最少库存规则</strong>&rdquo;里面定义了&ldquo;<strong>最少数量</strong>&rdquo;是5台，结果我们生成了一张数量为8台的采购订单（<strong>8台=3台送货+5台备库存</strong>）。</p>
<p>&nbsp;</p>
<p>1. 在前面的文章中，采购订单确认时自动生成了入库单，<span>可以在&nbsp;</span><strong>库存 &gt; 库存管理 &gt; 入库</strong><span>&nbsp;查询，状态为"<strong>Ready for Process</strong>"。</span></p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201306/25173719-ab48ce5ea3be422ea7f773ac0bddbc1d.png" alt="" /></span></p>
<p>&nbsp;&nbsp;</p>
<p>2. 供应商将货物送到仓库后，仓管人员点击"<strong>Process</strong>"按钮。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/26105117-08b74f0d308346e4ba012b4a3a33df62.png" alt="" /></p>
<p>在&ldquo;<strong>待处理产品</strong>&rdquo;中，确认实际收到的数量，点击"<strong>validate</strong>"按钮。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/26105626-f0e84cec069747eaa8014936e421dd85.png" alt="" /></p>
<p>入库单确认完毕，状态由&ldquo;<strong>Ready for Process</strong>&rdquo;变为&ldquo;<strong>Done</strong>&rdquo;。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/26110530-cca1b677e6014c7fa7e08ff1da2229ff.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 入库单确认后，系统会自动生成会计凭证 <strong>会计 &gt; 会计凭证 &gt; 会计凭证</strong>。</p>
<p><strong>&nbsp; 借：库存商品</strong></p>
<p><strong>&nbsp; &nbsp; 贷：在途物资</strong></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/26140131-ccf623359d0d4b6bad2557cb7dd7dff3.png" alt="" /></p>
<p>点击"<strong>过账</strong>"按钮，将会计凭证过账，状态有&ldquo;<strong>未过账</strong>&rdquo;变为<strong>&ldquo;已过账</strong>&rdquo;。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/26140245-0ed727184aa94e5e9bee600521e5130e.png" alt="" /></p>]]></description></item><item><title>OpenERP实施记录（10）：采购补货</title><link>http://www.cnblogs.com/eastson/archive/2013/06/25/3154899.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 25 Jun 2013 09:17:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/25/3154899.html</guid><description><![CDATA[<p>本文是《<a href="http://www.cnblogs.com/eastson/archive/2013/06/06/3121314.html" target="_blank">OpenERP实施记录</a>》系列文章的一部分。</p>
<p>&nbsp;</p>
<p>上文中业务部门接<span>到沃尔玛三台联想Y400N笔记本电脑的订单，但是仓库无货。本文需要完成采购补货处理。</span></p>
<p>&nbsp;</p>
<p>1. 联想YN400N是ABC公司一款比较畅销的产品，最少需要有5台常备在仓库。修改<strong>&nbsp;仓库 &gt; 产品 &gt; 产品</strong> 的"<strong>最少库存规则</strong>"。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/25162902-0a7c91a320ef4a6fa7d601da76c1b07d.png" alt="" /></p>
<p>&nbsp;</p>
<p>2.&nbsp;运行MRP，系统自动生成采购询价单。在系统中设置好MRP计划的执行周期，系统会自动运行MRP。此处便于案例的演示，我们采用手工运行MRP。执行 <strong>仓库 &gt; 排程 &gt; 计划运行</strong>，点击"<strong>计划运行</strong>"按钮。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/25163759-9bfc4f20116344769a87d8c12d5aa7f5.png" alt="" /></p>
<p><span>生成的采购询价单可以在 <strong>采购</strong></span><strong>&nbsp;&gt; 采购管理 &gt; 询价单</strong><span>&nbsp;查询，状态为"</span><strong>Request for Quotation</strong>"。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/25164517-6dd6718d8fd847458c30ee9aaf44ba02.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 打印采购询价单给供应商，供应商确认后，点击&ldquo;<strong>转换成采购订单</strong>&rdquo;按钮，将询价单转换成采购订单，同时状态由&ldquo;<strong>Request for Quotation</strong>&rdquo;变为"<strong>Approved</strong>"。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/25164820-1c130872877542b0b8aa1632d6ca3050.png" alt="" /></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/25170013-8d18122d69584e4d8aed65f148dcd305.png" alt="" /></p>
<p class="reader-word-layer reader-word-s41-0">采购订单确认后，会自动生成入库单。<span>生成的入库单可以在&nbsp;</span><strong>库存 &gt; 库存管理 &gt; 入库</strong><span>&nbsp;查询，状态为"<strong>Ready for Process</strong>"。</span></p>
<p class="reader-word-layer reader-word-s41-0"><span><img src="http://images.cnitblog.com/blog/111826/201306/25170112-7d1539f206b34a3ebd7a1b2d14662c02.png" alt="" /></span></p>
<p class="reader-word-layer reader-word-s41-0">采购订单确认后，也会同时自动生成内部发票。生成的内部发票可以在&nbsp;<strong>会计&nbsp;&gt; 供应商列表 &gt; 供应商发票</strong>&nbsp;查询，状态为"<strong>草稿</strong>"。</p>
<p class="reader-word-layer reader-word-s41-0"><img src="http://images.cnitblog.com/blog/111826/201306/25170330-793001b4f8734489b3fd7751bdedac99.png" alt="" /></p>
<p>&nbsp;</p>
<p>至此，采购补货完成，等待仓库收货。</p>]]></description></item><item><title>OpenERP实施记录（9）：销售一批电脑</title><link>http://www.cnblogs.com/eastson/archive/2013/06/25/3131591.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 25 Jun 2013 08:06:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/25/3131591.html</guid><description><![CDATA[<p>本文是《<a href="http://www.cnblogs.com/eastson/archive/2013/06/06/3121314.html" target="_blank">OpenERP实施记录</a>》系列文章的一部分。</p>
<p>&nbsp;</p>
<p><span>前述的基础数据配置完成之后，我们就可以开始业务处理了。</span></p>
<p>&nbsp;</p>
<p><span>1. 业务部门接到沃尔玛客户三台联想笔记本电脑的需求。<strong>销售 &gt; Sales &gt; 销售订单</strong>，新建销售报价单。</span></p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201306/11103237-0758481c57b24a4cb95e000b4b1c249c.png" alt="" /></span></p>
<p>新建订单明细时会提示"<strong>没有足够的库存</strong>"，这是正常的，因为我们还没有买电脑回来，哈哈。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/11103449-5a97886e521d42a19ce4a02e53eb8927.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 点击&ldquo;<strong>打印报价单</strong>&rdquo;按钮，将报价单传送给客户。这里OpenERP打印还有点问题，PDF乱码，鼓捣半天都没有弄好，后续再处理吧。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/25152029-27d29f697ba3488cae152b0ae9d33b81.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 客户确认报价单后，点击&ldquo;<strong>确认订单</strong>&rdquo;按钮将报价单转化成销售订单。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/25152408-4de60fff1eb1429185a5c74c8f434dc4.png" alt="" /></p>
<p>销售订单确认后，系统会自动生成送货单，同时销售订单状态由"<strong>Quotation</strong>"变为"<strong>To Invoice</strong>"。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/25152750-38ce9c88f8e64002b45502e2afd8426c.png" alt="" /></p>
<p>生成的送货单可以在&nbsp;<strong>库存 &gt; 库存管理 &gt; 送货单</strong> 查询，状态为"<strong>等待可用</strong>"，表示库存不足。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/25153204-875ad59acbb64d98b1f01661a58244e6.png" alt="" /></p>
<p>&nbsp;</p>
<p>4.&nbsp;OE提供了多种开票方式，可以根据销售订单开票也可以根据送货单开票。内部发票用于通知财务收付款。财务确认内部发票后，系统会根据内部发票自动生成应收、应付账款。此案例中根据销售订单开票。销售订单确认后，点击&ldquo;<strong>生成最终发票</strong>&rdquo;的按钮，生成内部发票，同时销售订单状态由&ldquo;<strong>To Invoice</strong>&rdquo;变为&ldquo;<strong>In Progress</strong>&rdquo;。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/25155205-25d31c879bb947b1954e3a5ec6dc97a1.png" alt="" /></p>
<p>生成的内部发票可以在 <strong>会计&nbsp;&gt; 客户 &gt; 客户发票</strong>&nbsp;查询，状态为"<strong>草稿</strong>"。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/25155518-e1675ae834f54228a10d3fe4b055df7a.png" alt="" /></p>
<p>&nbsp;</p>
<p>至此，销售过程就完成了，后面需要采购入库后再安排送货了。</p>]]></description></item><item><title>decoder zip not available</title><link>http://www.cnblogs.com/eastson/archive/2013/06/13/3133813.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 13 Jun 2013 07:01:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/13/3133813.html</guid><description><![CDATA[<p>OpenERP在打印销售报价单时报错"decoder zip not available"，Google后发现是PIL安装有问题。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/13113436-a4bde09e1e8c435cbeb4b7229f0135fd.png" alt="" /></p>
<p>&nbsp;</p>
<p>原先的安装方法：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">wget</span> http:<span style="color: #008000;">//</span><span style="color: #008000;">effbot.org/media/downloads/PIL-1.1.7.tar.gz </span>
$ <span style="color: #0000ff;">tar</span> zxvf PIL-<span style="color: #800080;">1.1</span>.<span style="color: #800080;">7</span>.<span style="color: #0000ff;">tar</span><span style="color: #000000;">.gz
$ cd PIL</span>-<span style="color: #800080;">1.1</span>.<span style="color: #800080;">7</span><span style="color: #000000;">
$ python setup.py </span><span style="color: #0000ff;">install</span></pre>
</div>
<p>&nbsp;</p>
<p>问题根源在于安装时没有检测到必要的依赖库（JPEG，ZLIB和FREETYPE）：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ python setup.py build_ext -i
</span>--------------------------------------------------------------------<span style="color: #000000;">
PIL </span><span style="color: #800080;">1.1</span>.<span style="color: #800080;">7</span><span style="color: #000000;"> SETUP SUMMARY
</span>--------------------------------------------------------------------<span style="color: #000000;">
version       </span><span style="color: #800080;">1.1</span>.<span style="color: #800080;">7</span><span style="color: #000000;">
platform      linux2 </span><span style="color: #800080;">2.6</span>.<span style="color: #800080;">6</span> (r266:<span style="color: #800080;">84292</span>, Feb <span style="color: #800080;">22</span> <span style="color: #800080;">2013</span>, <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span>:<span style="color: #800080;">18</span><span style="color: #000000;">)
              [GCC </span><span style="color: #800080;">4.4</span>.<span style="color: #800080;">7</span> <span style="color: #800080;">20120313</span> (Red Hat <span style="color: #800080;">4.4</span>.<span style="color: #800080;">7</span>-<span style="color: #800080;">3</span><span style="color: #000000;">)]
</span>--------------------------------------------------------------------
***<span style="color: #000000;"> TKINTER support not available
</span>***<span style="color: #000000;"> JPEG support not available
</span>*** ZLIB (PNG/<span style="color: #000000;">ZIP) support not available
</span>***<span style="color: #000000;"> FREETYPE2 support not available
</span>***<span style="color: #000000;"> LITTLECMS support not available
</span>--------------------------------------------------------------------</pre>
</div>
<p>&nbsp;</p>
<p>安装依赖库(CentOS 6.4 64bit）：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> libjpeg-turbo-<span style="color: #000000;">devel
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> zlib-<span style="color: #000000;">devel
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> freetype-<span style="color: #000000;">devel
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> lcms-devel</pre>
</div>
<p>&nbsp;</p>
<p>重新安装PIL：</p>
<div class="cnblogs_code">
<pre><span style="line-height: 1.5;">$ python setup.py install</span></pre>
</div>
<p>&nbsp;</p>
<p>参考：</p>
<p>1.&nbsp;<a href="http://hi.baidu.com/liheng_2009/item/bf67bb2088dc120672863e98" target="_blank">64位centos下安装python的PIL模块</a></p>
<p>2.&nbsp;<a href="http://muson.iteye.com/blog/1513893" target="_blank">安装PIL（Python Imaging Library）</a></p>]]></description></item><item><title>OpenERP实施记录（8）：设置产品信息</title><link>http://www.cnblogs.com/eastson/archive/2013/06/10/3130797.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 10 Jun 2013 08:13:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/10/3130797.html</guid><description><![CDATA[<p>本文是《<a href="http://www.cnblogs.com/eastson/archive/2013/06/06/3121314.html" target="_blank">OpenERP实施记录</a>》系列文章的一部分。</p>
<p>&nbsp;</p>
<p>销售笔记本电脑是ABC公司的主要业务，目前代理有联想和海尔两个品牌。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10153207-23e4f901c68d48068d6e0cf7de270e08.png" alt="" /></p>
<p>&nbsp;</p>
<p>1.&nbsp;<strong>销售 &gt; 设置 &gt; 产品 &gt; 计量单位 &gt; 计量单位</strong>，新建计量单位"<strong>台</strong>"。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10150358-080364d0298b45269042ee6d95b31b6f.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. <strong>销售 &gt; 设置 &gt; 产品 &gt; 产品类别</strong>，新建产品类别"<strong>笔记本电脑</strong>"。入库科目、出库科目、收益科目、费用科目和库存核算科目可在产品中也可在产品分类中配置，且前者的优先级大于后者的优先级。此案例中采用在产品分类中配置。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10153012-840d0d6aad3046cf8e27473488a32b93.png" alt="" /></p>
<p>&nbsp;</p>
<p>3.&nbsp;&nbsp;<strong>销售 &gt; Products &gt; 产品</strong>，新建产品"<strong>联想Y400N</strong>"。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10153423-23473224f17d42e2b2f0be83325594c8.png" alt="" /></p>
<p>在供应商信息中，定义产品的默认供应商。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10154256-2379a251aecf494c86f9763477918c7c.png" alt="" /></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10154433-86e48d260052472d8cefc57eb1c2c099.png" alt="" /></p>
<p>在会计信息中，定义&ldquo;<strong>库存核算</strong>&rdquo;为&ldquo;<strong>实时（自动进行）</strong>&rdquo;。这个选项会让系统在出库、入库时候自动生成入、出库对应的库存会计凭证。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10154702-f10d9ecf4a46498bbaee3f7a3ca63f50.png" alt="" /></p>
<p>&nbsp;</p>
<p>4.&nbsp;&nbsp;<strong>销售 &gt; Products &gt; 产品</strong>，继续新建产品"<strong>联想Y480M</strong>"。&nbsp;</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10155109-c22b35bcc3c54ea79c941c53f41e49ac.png" alt="" /></p>
<p><img style="line-height: 1.5;" src="http://images.cnitblog.com/blog/111826/201306/10155510-5a1fbde0de5a4481995689a5484059f6.png" alt="" /></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10155517-8d04d38fbcae4871b08a7cbc3e9b8470.png" alt="" /></p>
<p>&nbsp;</p>
<p>5.&nbsp;&nbsp;<strong>销售 &gt; Products &gt; 产品</strong>，继续新建产品"<strong>海尔X3T</strong>"。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10161024-a7fa28a35d704e078f9ed44346b76b47.png" alt="" /></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10161035-cf2a2c33590e49f1a1e2406fa4b3d8ab.png" alt="" /></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10161043-d1a9f76852f34acea726a98c85ce438f.png" alt="" /></p>]]></description></item><item><title>OpenERP实施记录（7）：设置客户和供应商</title><link>http://www.cnblogs.com/eastson/archive/2013/06/10/3130619.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 10 Jun 2013 03:58:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/10/3130619.html</guid><description><![CDATA[<p>本文是《<a href="http://www.cnblogs.com/eastson/archive/2013/06/06/3121314.html" target="_blank">OpenERP实施记录</a>》系列文章的一部分。</p>
<p>&nbsp;</p>
<p>东莞市沃尔玛商场是我们的一个客户，联想和海尔是我们的供应商。</p>
<p>&nbsp;</p>
<p>1. <strong>销售 &gt; Address Book &gt; 客户</strong>，新建客户"<strong>东莞市沃尔玛商场</strong>"。在客户头信息中录入客户的名称，勾选客户。&nbsp;在一般信息中录入联系人、地址、联系方式等信息。<em>地址类型主要有三种。默认、收票和收货。默认，当没有其他地址时使用此地址。发票，系统生成财务票据时使用的地址。发货，系统生成送货单时使用的地址。</em></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10114406-d12243ddd305485f9ab572a33ad838b1.png" alt="" /></p>
<p>在会计信息中，录入会计的应收账款/应付账款科目。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10114818-8a75c8d3448e4be0b2bb963589af9246.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. <strong>PURCHASES &gt; Address Book &gt; Suppliers</strong>，新建供应商"<strong>北京市联想电脑公司</strong>"。在供应商头信息中录入供应商的名称，勾选供应商。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10115354-5cdd3d1b55d74ab29fec62e11c0c5164.png" alt="" /></p>
<p>在会计信息中，录入会计的应收账款/应付账款科目。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10115744-1b200ef480b84398b5ac415d5462b1cc.png" alt="" /></p>
<p>&nbsp;</p>
<p>3.&nbsp;<strong>PURCHASES &gt; Address Book &gt; Suppliers</strong>，继续新建供应商"<strong>青岛市海尔电脑公司</strong>"。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10160217-a69527ff80994bf7b3c383d9049da584.png" alt="" /></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10160227-7ec8fe6f20f4452e8bfe96f1f293a497.png" alt="" /></p>]]></description></item><item><title>OpenERP实施记录（6）：设置会计科目</title><link>http://www.cnblogs.com/eastson/archive/2013/06/10/3130591.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 10 Jun 2013 03:23:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/10/3130591.html</guid><description><![CDATA[<p>本文是《<a href="http://www.cnblogs.com/eastson/archive/2013/06/06/3121314.html" target="_blank">OpenERP实施记录</a>》系列文章的一部分。</p>
<p>&nbsp;</p>
<p><span>&ldquo;中国会计科目表&rdquo;提供了适用于中国企业大多数情况的会计科目。为了符合本案例后续的要求，请确保下述这些科目都已经存在。</span></p>
<p>&nbsp;</p>
<p>1. <strong>会计 &gt; 设置 &gt; 科目 &gt; 科目</strong>，打开会计科目列表。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10110729-a83833eed3794fbb8ff1f01939c50237.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 检查&ldquo;<strong>应收账款</strong>&rdquo;科目是否存在。&ldquo;<strong>应收账款</strong>&rdquo;在客户信息中配置，用于客户发票核准时的借方和销售收款的贷方。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10111028-18e05c15ce4d4a598deca430c3ed1a2b.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 检查&ldquo;<strong>应付账款</strong>&rdquo;科目是否存在。&ldquo;<strong>应付账款</strong>&rdquo;在供应商信息中配置，用于供应商发票核准时的贷方和采购付款的借方。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10111253-f7765a4d83974c41aa55f843f37d826f.png" alt="" /></p>
<p>&nbsp;</p>
<p>4.&nbsp;检查&ldquo;<strong>主营业务收入</strong>&rdquo;科目是否存在。&ldquo;<strong>主营业务收入</strong>&rdquo;在产品和产品种类中都可以设置，且前者的优先级大于后者，用于客户发票核准时的贷方。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10111618-6ac79f4b56ec44bdbf4df7226f3c80f7.png" alt="" /></p>
<p>&nbsp;</p>
<p>5.&nbsp;检查&ldquo;<strong>在途物资</strong>&rdquo;科目是否存在。&ldquo;<strong>在途物资</strong>&rdquo;在产品和产品种类中都可以设置，且前者的优先级大于后者，用于入库时的贷方和核准供应商发票时的借方。&nbsp;</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10111857-1fc7761b2c7147eba6292e8fa331b257.png" alt="" /></p>
<p>&nbsp;</p>
<p>6.&nbsp;检查&ldquo;<strong>主营业务成本</strong>&rdquo;科目是否存在。&ldquo;<strong>主营业务成本</strong>&rdquo;在产品和产品种类中都可以设置，且前者的优先级大于后者，用于出库时的借方。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10112011-f626955651ae4c2bae978695de3f75dc.png" alt="" /></p>
<p>&nbsp;</p>
<p>7.&nbsp;检查&ldquo;<strong>库存商品</strong>&rdquo;科目是否存在。&ldquo;<strong>库存商品</strong>&rdquo;在产品种类中设置，用于入库的借方和出库的贷方。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10112244-fcb4a0befa8d47489c013fbbef2cc357.png" alt="" /></p>]]></description></item><item><title>OpenERP实施记录（4）：设置本位币</title><link>http://www.cnblogs.com/eastson/archive/2013/06/10/3130558.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 10 Jun 2013 02:51:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/10/3130558.html</guid><description><![CDATA[<p>本文是《<a href="http://www.cnblogs.com/eastson/archive/2013/06/06/3121314.html" target="_blank">OpenERP实施记录</a>》系列文章的一部分。</p>
<p>&nbsp;</p>
<p>OE数据库创建后，默认的币别都是欧元，需要全部修改为人民币。</p>
<p>&nbsp;</p>
<p>1. <strong>设置 &gt; 公司 &gt; 公司</strong>，修改会计币别为人民币。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10103729-2418a7a2d5844b36844f8aa5ea4065e6.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. <strong>销售 &gt; 设置 &gt; 价格表 &gt; 计价基础</strong>，修改计价基础币别为人民币。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10104156-5a995a061f3541719c7048190f3d1ecf.png" alt="" /></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10104318-8e79383e966b441eaaa10873c420ab2a.png" alt="" /></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10104429-93210066e2064c34949fc46ccb758fd8.png" alt="" /></p>
<p>&nbsp;</p>
<p>3.&nbsp;<strong>销售 &gt; 设置 &gt; 价格表 &gt; 价格表</strong>，修改销售价格表币别为人民币。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10104657-07b5da9b8367482aad0ade6132a731df.png" alt="" /></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10104753-23f52420d1be4bf3bca6347d74398b50.png" alt="" /></p>
<p>&nbsp;</p>
<p>4. PURCHASES&nbsp;<strong>&gt; 设置 &gt; 价格表 &gt; 价格表</strong>，修改采购售价格表币别为人民币。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10104926-3bd6bf38146d4f8ea42b4e5c06344db5.png" alt="" /></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10105027-3ea4256e002f44b5bbb48a88a209828b.png" alt="" /></p>]]></description></item><item><title>OpenERP实施记录目录</title><link>http://www.cnblogs.com/eastson/archive/2013/06/10/3121314.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 10 Jun 2013 02:51:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/10/3121314.html</guid><description><![CDATA[<p><span style="line-height: 1.5;">实施目录：</span></p>
<p><span style="line-height: 1.5;">1. </span><a style="line-height: 1.5;" href="http://www.cnblogs.com/eastson/archive/2013/06/06/3121309.html" target="_blank">创建数据库</a></p>
<p>2. <a href="http://www.cnblogs.com/eastson/archive/2013/06/08/3124293.html" target="_blank">安装必需的模块</a></p>
<p>3. <a href="http://www.cnblogs.com/eastson/archive/2013/06/08/3125614.html" target="_blank">设置公司信息</a></p>
<p>4. <a href="http://www.cnblogs.com/eastson/archive/2013/06/10/3130558.html" target="_blank">设置本位币</a></p>
<p>5. <a href="http://www.cnblogs.com/eastson/archive/2013/06/08/3125624.html" target="_blank">导入会计科目表</a></p>
<p>6. <a href="http://www.cnblogs.com/eastson/archive/2013/06/10/3130591.html" target="_blank">设置会计科目</a></p>
<p>7. <a href="http://www.cnblogs.com/eastson/archive/2013/06/10/3130619.html" target="_blank">设置客户和供应商</a></p>
<p>8. <a href="http://www.cnblogs.com/eastson/archive/2013/06/10/3130797.html" target="_blank">设置产品信息</a></p>
<p>9. <a href="http://www.cnblogs.com/eastson/p/3131591.html" target="_blank">销售一批电脑</a></p>
<p>10. <a href="http://www.cnblogs.com/eastson/p/3154899.html" target="_blank">采购补货</a></p>
<p>11. <a href="http://www.cnblogs.com/eastson/p/3155110.html" target="_blank">入库处理</a></p>
<p>12. <a href="http://www.cnblogs.com/eastson/p/3156491.html" target="_blank">付款处理</a></p>
<p>13. <a href="http://www.cnblogs.com/eastson/p/3158243.html" target="_blank">出库处理</a></p>
<p>14. <a href="http://www.cnblogs.com/eastson/p/3158289.html" target="_blank">收款处理</a></p>
<p>&nbsp;</p>
<p>BUG处理：</p>
<p>1.&nbsp;<a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_0" href="http://www.cnblogs.com/eastson/archive/2013/06/13/3133813.html" target="_blank">decoder zip not available</a></p>]]></description></item><item><title>OpenERP实施记录（5）：导入会计科目表</title><link>http://www.cnblogs.com/eastson/archive/2013/06/08/3125624.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 08 Jun 2013 02:01:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/08/3125624.html</guid><description><![CDATA[<p><span>本文是《</span><a href="http://www.cnblogs.com/eastson/archive/2013/06/06/3121314.html" target="_blank">OpenERP实施记录</a><span>》系列文章的一部分。</span></p>
<p>&nbsp;</p>
<p>新公司设立好以后，需要有一个匹配的会计科目表。同时也要设置会计期间，通常按照自然月做区分。</p>
<p>&nbsp;</p>
<p><strong>会计 &gt; 设置 &gt; 财务会计 &gt; 新公司财务设置</strong>，选择&ldquo;中国会计科目表&rdquo;，点击&ldquo;设置&rdquo;：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/08095830-32d568868470496eada7ad21e8e54626.png" alt="" /></p>
<p>&nbsp;</p>
<p>根据选择的&ldquo;中国会计科目表&rdquo;，会自动的设置税率和银行信息，点击&ldquo;应用&rdquo;完成。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/08095837-b2f15d2bf5084d358d883357cb740607.png" alt="" /></p>]]></description></item><item><title>OpenERP实施记录（3）：设置公司信息</title><link>http://www.cnblogs.com/eastson/archive/2013/06/08/3125614.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 08 Jun 2013 01:42:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/08/3125614.html</guid><description><![CDATA[<p>本文是《<a href="http://www.cnblogs.com/eastson/archive/2013/06/06/3121314.html" target="_blank">OpenERP实施记录</a>》系列文章的一部分。</p>
<p>&nbsp;</p>
<p>ABC电脑科技有限公司是一家电脑销售公司，经营联想，海尔等品牌笔记本电脑和台式电脑，销售给沃尔玛，家乐福这些企业客户，同时也有一家实体门店针对最终消费者做零售。</p>
<p>&nbsp;</p>
<p><strong>1. 设置 &gt; 公司 &gt; 公司，编辑"Your Company"</strong>。设置公司名称，地址，电话，LOGO等信息。重要的是要设置会计记账币别，也就是本位币。OE默认的是欧元，这里我们需要设成人民币。<br /><img src="http://images.cnitblog.com/blog/111826/201306/08093642-4bf2a190c00046a1b29d32f395e2d3a6.png" alt="" /></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/08093801-98b7884ffd5540cd97630dfd5462c4b9.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. <strong>仓库 &gt;&nbsp;设置 &gt; 仓库管理 &gt; 仓库</strong>，编辑仓库"Your Company"为公司名称。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10162837-28b62e733b4a445581bb90eb4c162388.png" alt="" /></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/10162845-1a5c98eeb8894e77b22f8dccebc7e649.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. <strong>销售&nbsp;&gt;&nbsp;设置 &gt; Sales &gt; Shop</strong>，编辑商店"Your Company"为公司名称。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/11101835-9b1ce8fff5c84570b2908729edec7392.png" alt="" /></p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/11101934-21a19be88f584fa995385cd657292d91.png" alt="" /></p>]]></description></item><item><title>OpenERP实施记录（2）：安装必需的模块</title><link>http://www.cnblogs.com/eastson/archive/2013/06/08/3124293.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 08 Jun 2013 01:11:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/08/3124293.html</guid><description><![CDATA[<p>本文是《<a href="http://www.cnblogs.com/eastson/archive/2013/06/06/3121314.html" target="_blank">OpenERP实施记录</a>》系列文章的一部分。</p>
<p>&nbsp;</p>
<p>1. 修改界面显示方式。点击&ldquo;首选项&rdquo;，修改"界面"为"扩展"：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/07171615-fc5f8c7bf8f44cb19ab00eda46ac8600.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 更新模块列表，<strong>设置 &gt; 模块 &gt; 更新模块列表</strong>。</p>
<p>&nbsp;</p>
<p>3. 安装会计模块<span>。<strong>设置 &gt; 模块 &gt; Modules</strong>，找到</span>Accounting and Finance，执行安装。依次安装下图其它模块：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/26143247-8b40176b537c432290461c898d30982a.png" alt="" /></p>]]></description></item><item><title>Django相关链接</title><link>http://www.cnblogs.com/eastson/archive/2013/06/07/3123479.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 07 Jun 2013 09:09:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/07/3123479.html</guid><description><![CDATA[<p><a href="https://docs.djangoproject.com/en/1.5/ref/django-admin/" target="_blank">Django documentation</a></p>
<p><a href="https://docs.djangoproject.com/en/1.5/ref/django-admin/" target="_blank">django-admin.py and manage.py</a></p>
<p><a href="https://www.djangoproject.com/download/" target="_blank">How to get Django</a></p>
<p><a href="http://djangobook.py3k.cn/2.0/" target="_blank"><span>Django book 2.0 的中文翻译</span></a></p>]]></description></item><item><title>OpenERP实施记录（1）：建立数据库</title><link>http://www.cnblogs.com/eastson/archive/2013/06/06/3121309.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 06 Jun 2013 09:01:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/06/3121309.html</guid><description><![CDATA[<p>本文是《<a href="http://www.cnblogs.com/eastson/archive/2013/06/06/3121314.html" target="_blank">OpenERP实施记录</a>》系列文章的一部分。</p>
<p>&nbsp;</p>
<p>一个公司可以允许有多个OE数据库，例如正式的和测试的。从OE登录页面点击&ldquo;Manage Database&rdquo;，进入数据库管理：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/06161815-316a1d6096744d2580610ee439e7f205.png" alt="" /></p>
<p>&nbsp;</p>
<p>从左侧菜单中选择&ldquo;CREATE&rdquo;：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/06162805-0c2c157388d54fbf886e514d1ede9297.png" alt="" /></p>
<p>字段说明：</p>
<p>Master password：OE管理员密码，默认为admin。</p>
<p>New database name：新数据库名称，这里输入v611_demo。</p>
<p>Load Demonstration data：是否安装演示数据，我们不需要，所以不用选择。</p>
<p>Default language：默认界面语言，这里选择简体中文。</p>
<p>Admin password和Confirm password：OE会建立一个admin用户，这里可以为其指定密码。</p>
<p>&nbsp;</p>
<p>点击底部的"Create"按钮，开始执行数据库建立。建立成功后OE会以admin身份自动登录系统：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201306/06163239-7f4527b0934846dfa7920ecde42c0cb0.png" alt="" /></p>
<p>&nbsp;</p>
<p>点击右上角的&ldquo;注销&rdquo;按钮，退出系统，返回登录页面。注意页面的右上角，这里有一个&ldquo;Database&rdquo;下拉框，列出了所有可用的OE数据库，登录系统时要注意这里是否选择正确。在"Username"输入admin，因为新建立的OE数据库只有一个admin用户。在"Password"输入建立数据库时设置的"Admin password"，然后点击"Log in"按钮就可以进入OE系统了。</p>
<p>&nbsp;</p>]]></description></item><item><title>【转】Google Code + TortoiseSVN 简明使用</title><link>http://www.cnblogs.com/eastson/archive/2013/06/03/3115510.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 03 Jun 2013 07:26:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/03/3115510.html</guid><description><![CDATA[<p>原文地址：<a href="http://blog.csdn.net/xcyangfan/article/details/6926233">Google Code + TortoiseSVN 简明使用</a></p>
<p>&nbsp;</p>
<p>先介绍下什么是 SubVersion，Subversion是新一代的<strong>版本控制工具</strong>，不仅可以管理程序源代码，也可以应用于其他协作管理数据的工作。<br /><span id="more-1022"></span></p>
<p>&nbsp;</p>
<h3><a name="t0"></a>安装</h3>
<p>你可以从&nbsp;<a class="external" href="http://tortoisesvn.net/downloads" target="_blank">TortoiseSVN 官方站点</a>下载最新版的 TortoiseSVN，中文汉化包可以从&nbsp;<a class="external" href="http://www.subversion.org.cn/" target="_blank">SubVersion 中文站</a>下载。下载之后，点击安装包，一路 next 下去即可。</p>
<p><img src="http://pic.fairyfish.com/2007/08/tortoisesvn-installation.png" alt="tortoisesvn-installation" /></p>
<h3><a name="t1"></a>下载项目</h3>
<p>在你硬盘的适当的位置，点击邮件，选择 SVN Checkout&hellip;</p>
<p><img src="http://pic.fairyfish.com/2007/08/tortoisesvn-checkout.png" alt="tortoisesvn-checkout" /></p>
<p>然后就会弹出一个 Checkout 选项对话框，输入远程项目目录和本地工作目录，WordPress 中文团队的 Google Code SVN 服务器，远程项目地址为：<a class="external" href="https://wpcn.googlecode.com/svn/trunk/" target="_blank">https://wpcn.googlecode.com/svn/trunk/</a></p>
<p><img src="http://pic.fairyfish.com/2007/08/tortoisesvn-checkout-option.png" alt="tortoisesvn-checkout-option" /></p>
<p>点击 OK，就会弹出一个远程服务器要求验证的对话框：</p>
<p><img src="http://pic.fairyfish.com/2007/08/tortoisesvn-checkout-input-password.png" alt="tortoisesvn-checkout-input-password" /></p>
<p>这里用户名为你 Gmail 用户名，不用带（@gmail.com），密码不是你 Gmail 邮箱的密码，你需要到&nbsp;<a class="external" href="http://code.google.com/p/wpcn/source" target="_blank">http://code.google.com/p/wpcn/source<br /></a>页面动态产生一个密码：</p>
<p><img src="http://pic.fairyfish.com/2007/08/google-code-generate-password.png" alt="google-code-generate-password" /></p>
<p>当然你首先要成为我们成员，才能使用该项目的 SVN 服务。如果你想为 WordPress 中文团队出份力，你可以给我们留言申请加入。</p>
<p>输入用户名和密码之后，点击 OK 就开始下载：</p>
<p><img src="http://pic.fairyfish.com/2007/08/tortoisesvn-checkouting.png" alt="tortoisesvn-checkouting" /></p>
<h3><a name="t2"></a>提交修改</h3>
<p>在你做了修改之后，你可以在项目文件夹下点击右键或者你修改的文件下点击右键，选择 SVN Commit&hellip;，这两者的区别在于，第一个可以一次提交你所做所有文件的修改，而第二个只是提交你所选的文件。</p>
<p><img src="http://pic.fairyfish.com/2007/08/tortoisesvn-update-commit.png" alt="tortoisesvn-update-commit" /></p>
<p>点击 Commit 之后，就会弹出一个让你输入更改 log 的对话框：</p>
<p><img src="http://pic.fairyfish.com/2007/08/tortoisesvn-commit.png" alt="tortoisesvn-commit" /></p>
<p>输入你所作的修改，然后点击 OK，就会开始向远程服务器提交修改：</p>
<p><img src="http://pic.fairyfish.com/2007/08/tortoisesvn-commiting.png" alt="tortoisesvn-commiting" /></p>
<h3><a name="t3"></a>导入项目</h3>
<p>如果翻译插件或者写了插件，想提交到远程服务器，选择该文件夹，点击右键，选择 TortoiseSVN =&gt; Import&hellip;</p>
<p><img src="http://pic.fairyfish.com/2007/08/tortoisesvn-import.png" alt="tortoisesvn-import" /></p>
<p>然后就会弹出一个导入选项对话框，属于远程服务器地址和注释，如果你前面没有保存密码，这里可能再次输入你在 Google Code 的密码。点击 OK，本地文件就会被导入远程服务器。</p>
<p><img src="http://pic.fairyfish.com/2007/08/tortoisesvn-importing.png" alt="tortoisesvn-importing" /></p>
<h3><a name="t4"></a>其它功能</h3>
<p><strong>网页浏览</strong>：你可以使用该地址&nbsp;<a class="external" href="https://wpcn.googlecode.com/svn/trunk/" target="_blank">https://wpcn.googlecode.com/svn/trunk/</a>&nbsp;在网页上浏览项目，同样需要和前面一样的密码。</p>
<p><strong>SVN Update</strong>：与服务器版本对比，进行更新</p>
<p><strong>Revert</strong>：取消上一次的操作（只针对客户端，服务端不做改动）</p>
<p><strong>Add</strong>：增加新目录或新文件至项目</p>
<p><strong>Revision Graph</strong>：版本示意图</p>
<p><strong>Show log</strong>：查看版本日志及不同版本间相互比较</p>
<p><strong>Check for modifications</strong>：同服务器上的项目版本进行比较，并可做相应的修改。</p>]]></description></item><item><title>【转】Google Code项目代码托管网站上Git版本控制系统使用简明教程</title><link>http://www.cnblogs.com/eastson/archive/2013/06/03/3115313.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 03 Jun 2013 06:23:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/06/03/3115313.html</guid><description><![CDATA[<p>原文地址：<a href="http://blog.csdn.net/yang_hui1986527/article/details/6706265">Google Code项目代码托管网站上Git版本控制系统使用简明教程</a></p>
<p>&nbsp;</p>
<p>作为一个著名的在线项目代码托管网站，Google Code目前主要支持三种版本控制系统，分别为Git, Mercurial和 Subversion。Subversion即SVN相信大家都已经熟知了，这里我们要介绍的是最近新增的Git版本控制系统。如果您在Google Code上的项目已经使用SVN进行版本管理，也可以很方便的在本地使用Git对项目进行版本管理。详细操作步骤请参考：<strong><a href="http://code.google.com/p/support/wiki/ConvertingSvnToGit" target="_blank">Convert your project from Subversion to Git</a></strong></p>
<p>&nbsp;</p>
<h3>一、注册Google 账户</h3>
<p>使用Google Code进行项目代码托管，您首先需要一个Google账户。如果您还没有，请通过以下链接注册一个，否则请跳过这一步。注册Google 账户：<a href="https://www.google.com/accounts/NewAccount?hl=zh-cn" target="_blank">https://www.google.com/accounts/NewAccount?hl=zh-cn</a></p>
<p>&nbsp;</p>
<h3>二、创建新项目(使用Git进行版本控制)</h3>
<div>1、首先进入Google Code代码托管主页面:&nbsp;<a href="http://code.google.com/hosting/">http://code.google.com/hosting/</a>，点击&ldquo;&nbsp;Create a new project&nbsp;&rdquo;进入新项目创建页面。</div>
<div><img src="http://images.cnitblog.com/blog/111826/201306/08095956-42849be7915a42de9c21926eee643394.gif" alt="" /></div>
<div>2、这里我们以library-books 项目为例，这个项目主要是用来管理平时撰写的一些原创笔记。该项目创建说明如下：</div>
<div><strong>Project name：library-books &nbsp; &nbsp; &nbsp;//项目名称</strong></div>
<div><strong><strong>Project summary：<strong>library-books &nbsp; //项目概述，可以用一句话概括项目的主要内容</strong></strong><br /></strong></div>
<div><strong>Description：<strong>library-books &nbsp; &nbsp; &nbsp;//项目描述，可以更详细的描述<strong>项目的主要内容</strong></strong></strong></div>
<div><strong>Version control system：Git &nbsp; &nbsp;//版本控制系统，这里我们选择Git</strong></div>
<div><strong>Source code license： GNU GPL v3 //代码协议选择，这里我们选择<strong>&nbsp;GNU GPL v3</strong></strong></div>
<div>Project label(s)：books，opensource &nbsp;//项目标签，主要是作为项目关键字，方便别人搜索适合进行索引</div>
<div>填写完毕后，点击"Create project"，项目创建完成。</div>
<div>&nbsp;</div>
<h3><span style="font-size: 1.17em; line-height: 1.5;">三、项目设置</span></h3>
<div>
<div>1、点击进入Google Code管理设置页面：</div>
<div>设置页面：<a href="https://code.google.com/hosting/settings">https://code.google.com/hosting/settings</a></div>
<div>记录下GoogleCode.com Password，待会要用。</div>
<div>&nbsp;</div>
<div>2、在"User Preferences"字段下找到以下选项：<form action="https://code.google.com/hosting/settings.do" method="POST"></form></div>
<div>
<h4><a name="t3"></a><span style="background-color: #ff9900;">Security</span></h4>


<span style="background-color: #ff9900;"><input type="checkbox" name="allow_google_account_password" value="1" checked="checked" />&nbsp;<label for="allow_google_account_password">Accept yanghui1986527@gmail.com Google Account password when using a Git or Mercurial client. To make sure your password is safe, always use the latest client from:</label></span>
<ul>
<li><span style="background-color: #ff9900;"><a href="http://git-scm.com/download"><span style="background-color: #ff9900;">http://git-scm.com/download</span></a></span></li>
<li><span style="background-color: #ff9900;"><a href="http://mercurial.selenic.com/downloads/"><span style="background-color: #ff9900;">http://mercurial.selenic.com/downloads/</span></a></span></li>


</ul>


选中该选项，以确保用户通过Git客户端能够正常登陆到Google Code进行版本管理。</div>
<div>&nbsp;</div>
<div>
<h3>四、项目管理</h3>
<div>1、进入项目管理主页面，依次点击"Source-Checkout"，进入Checkout页面。</div>
<div>这里我们可以看见有两种方式可以访问项目代码：</div>
<div>Option 1: 切换到工作目录，在终端输入以下代码，检出空仓库。</div>
<div>
<div class="cnblogs_code">
<pre>git clone https:<span style="color: #008000;">//</span><span style="color: #008000;">yanghui1986527@code.google.com/p/library-books/ </span></pre>
</div>
<p><span style="line-height: 1.5;">Option 2: 通过创建.netrc文件保持访问授权。</span><span style="line-height: 1.5;">在Home目录下创建&nbsp;.netrc文件，添加以下代码到&nbsp;.netrc文件中：</span></p>
<div class="cnblogs_code">
<pre>machine code.google.com <span style="color: #0000ff;">login</span> yanghui1986527@gmail.com password </pre>
</div>
<p><span style="line-height: 1.5;">注：password请参考第三项操作步骤。</span></p>
</div>
<div>
<div>这里我们采用第二种方式，免得频繁输入复杂的密码。</div>
<div>&nbsp;&nbsp;</div>
<div><span>2、切换到工作目录，在终端输入以下代码，检出空仓库。</span></div>
</div>
<div>
<div class="cnblogs_code">
<pre>git clone https:<span style="color: #008000;">//</span><span style="color: #008000;">code.google.com/p/library-books/</span></pre>
</div>
<p><span style="line-height: 1.5;">&nbsp;</span></p>
</div>
<div><span><span>3、在空仓库中创建项目，并完成项目。</span></span>项目完成后，切换到项目目录，输入以下命令，将项目推送到Google Code。</div>
<div>
<div class="cnblogs_code">
<pre>git push orgin --all</pre>
</div>
<p><span style="line-height: 1.5;">&nbsp;</span></p>
</div>
<div>
<h3>五、扩展知识</h3>
<div>1、如何将已有项目推送到Google Code？</div>
<div>答:首先切换到项目目录，初始化Git，然后提交代码。</div>
<div>
<div class="cnblogs_code">
<pre><span style="color: #000000;">git init
git add .
git commit </span>-a -m <span style="color: #800000;">"</span><span style="color: #800000;">Initial Branch</span><span style="color: #800000;">"</span></pre>
</div>
<p><span style="line-height: 1.5;">然后添加Google Code远程仓库</span></p>
<div class="cnblogs_code">
<pre>git remote add origin https:<span style="color: #008000;">//</span><span style="color: #008000;">code.google.com/p/library-books/</span></pre>
</div>
<p><span style="line-height: 1.5;">最后，将项目代码推送到Google Code。</span></p>
<div class="cnblogs_code">
<pre>git push orgin --all </pre>
</div>
<p><span style="line-height: 1.5;">&nbsp;</span></p>
</div>
<p><span><span>2、如果我的项目代码已经托管在本地仓库，怎么再将项目托管在Google Code？答：首先切换到项目目录，输入以下命令，显示远程仓库：</span></span></p>
<div class="cnblogs_code">
<pre>snowdream@snowdream:~/workspace/git/Library-Books$ git remote -<span style="color: #000000;">v
originssh:</span><span style="color: #008000;">//</span><span style="color: #008000;">git@snowdream/Library-Books.git (fetch)</span>
originssh:<span style="color: #008000;">//</span><span style="color: #008000;">git@snowdream/Library-Books.git (push)</span></pre>
</div>
<p><span style="line-height: 1.5;">我们可以看到该项目已经托管在本地仓库。接下来我们通过以下命令添加Google Code远程仓库。</span></p>
<div class="cnblogs_code">
<pre>git remote add googlecode https:<span style="color: #008000;">//</span><span style="color: #008000;">code.google.com/p/library-books/</span></pre>
</div>
<p><span style="line-height: 1.5;">注：命令中googlecode为仓库别名，可以进行自定义。</span></p>
<p>再次显示远程仓库，如下所示：</p>
<div class="cnblogs_code">
<pre>snowdream@snowdream:~/workspace/git/Library-Books$ git remote -<span style="color: #000000;">v
googlecodehttps:</span><span style="color: #008000;">//</span><span style="color: #008000;">code.google.com/p/library-books/ (fetch)</span>
googlecodehttps:<span style="color: #008000;">//</span><span style="color: #008000;">code.google.com/p/library-books/ (push)</span>
originssh:<span style="color: #008000;">//</span><span style="color: #008000;">git@snowdream/Library-Books.git (fetch)</span>
originssh:<span style="color: #008000;">//</span><span style="color: #008000;">git@snowdream/Library-Books.git (push)</span></pre>
</div>
<p><span style="line-height: 1.5;">最后，将项目代码推送到Google Code。</span></p>
<div class="cnblogs_code">
<pre>git push googlecode --all</pre>
</div>
<p><span style="line-height: 1.5;">&nbsp;</span></p>
<p>3、我对Git版本控制系统还不熟悉，请问怎么了解，学习使用Git版本控制系统?答：您可以通过以下在线教程了解和学习怎样使用Git版本控制系统：</p>
<p>Pro Git 中文版：<a href="http://progit.org/book/zh/" target="_blank">http://progit.org/book/zh/</a></p>
<p>Git Magic中文版：<a href="http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/" target="_blank">http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/</a></p>
<p>Git Reference英文版：<a href="http://gitref.org/" target="_blank">http://gitref.org/</a></p>
<p>Git Documentation英文版： <a href="http://git-scm.com/documentation" target="_blank">http://git-scm.com/documentation</a></p>
</div>
</div>
</div>]]></description></item><item><title>解决非root用户startx时报错</title><link>http://www.cnblogs.com/eastson/archive/2013/05/29/3106027.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 29 May 2013 07:10:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/29/3106027.html</guid><description><![CDATA[<p><span>root登录后以非root用户startx时报：</span><br /><span>PAM authentication failed, cannot start X&nbsp;</span><a target="_self"><span style="text-decoration: underline;"><strong>server</strong></span></a><span>.</span><br /><span>Perhaps you do not have console ownership?</span><br /><br /><span>解决方法：</span><br /><span>touch /var/run/console/&lt;user&gt;</span><br /><span>比如 touch /var/run/console/oracle</span></p>
<p><em id="__mceDel"><span><br /></span></em>操作系统：CentOS 6.4</p>]]></description></item><item><title>安装OpenERP Server 6.1.1</title><link>http://www.cnblogs.com/eastson/archive/2013/05/29/3101702.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 29 May 2013 04:00:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/29/3101702.html</guid><description><![CDATA[<p><span style="font-size: 14px; line-height: 1.5;">1. 安装PostgreSQL，参考《</span><a id="cb_post_title_url" style="font-size: 14px; line-height: 1.5;" href="http://www.cnblogs.com/eastson/archive/2013/05/25/3098396.html" target="_blank">安装PostgreSQL</a><span style="font-size: 14px; line-height: 1.5;">》。</span>&nbsp;</p>
<p>2. 修改pg_hba.conf，确保使用的是md5认证，参考《<a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_0" href="http://www.cnblogs.com/eastson/archive/2013/05/28/3103238.html" target="_blank">pg_hba.conf 记录的例子</a>》：<span style="line-height: 1.5;">&nbsp;</span>&nbsp;</p>
<div class="cnblogs_code">
<pre># TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD
local   all         all                               ident
host    all         all         127.0.0.1/32          md5  #默认是ident
host    all         all         ::1/128               md5  #默认是ident&nbsp;</pre>
</div>
<p>3<span style="line-height: 1.5;">. 创建数据库用户openerp，OpenERP Server使用该用户连接</span><span style="line-height: 1.5;">数据库</span><span style="line-height: 1.5;">：</span>&nbsp;</p>
<div class="cnblogs_code">
<pre>$ <span>su </span><span>postgres
$ createuser </span>--createdb --no-createrole --pwprompt openerp</pre>
</div>
<p>&nbsp;4. 创建系统用户openerp，OpenERP Server不能用root启动：</p>
<div class="cnblogs_code">
<pre><span>$ groupadd openerp
$ useradd openerp </span>-<span>g openerp</span></pre>
</div>
<p>5. 修改iptables规则，允许远程访问8069和8070（OpenERP Server使用这些端口：8069/XML-RPC, 8070/NET-RPC，8071/XML-RPCS）：&nbsp;</p>
<div class="cnblogs_code">
<pre><span>$ service iptables status
... ...
</span><span>6</span>    ACCEPT     tcp  --  <span>0.0</span>.<span>0.0</span>/<span>0</span>            <span>0.0</span>.<span>0.0</span>/<span>0</span>           state NEW tcp dpt:<span>8069</span> 
<span>7</span>    ACCEPT     tcp  --  <span>0.0</span>.<span>0.0</span>/<span>0</span>            <span>0.0</span>.<span>0.0</span>/<span>0</span>           state NEW tcp dpt:<span>8070</span></pre>
</div>
<p><span style="font-size: 14px; line-height: 1.5;">6. 配置EPEL软件源，参考《</span><a id="cb_post_title_url" style="line-height: 1.5;" href="http://www.cnblogs.com/eastson/archive/2012/07/18/2597166.html" target="_blank">配置EPEL软件源</a><span style="font-size: 14px; line-height: 1.5;">》。下一步所需的很多包都要从EPEL安装。</span></p>
<p><span style="font-size: 14px; line-height: 1.5;">7. 安装所需的包(这里不是全部的，有些包是通过依赖关系安装，还有些包在OpenERP Server安装时会自动安装)：</span>&nbsp;</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span><span style="color: #000000;"> bzr                 #OpenERP版本管理系统
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">devel        #Python开发包
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">setuptools   #Python安装工具
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">dateutil     #此模块提供了强大的扩展以处理标准日期时间
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">feedparser   #用于Python 的通用聚合解析器
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">gdata        #Google Data Python 客户端库
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">ldap         #LDAP 接口
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">lxml         #用于 Python 语言处理 XML 和 HTML
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">beaker       #WSGI middleware layer to provide sessions
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-markupsafe   #Implements a XML/HTML/XHTML Markup safe <span style="color: #0000ff;">string</span> <span style="color: #0000ff;">for</span><span style="color: #000000;"> Python
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">mako         #用于 python平台的快速、轻量的模版
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">openid       #OpenID 身份认证，支持服务器和消费者
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">psycopg2     #最大众化的python PostgreSQL 接口
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">babel        #Python 应用的国际化工具
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span><span style="color: #000000;"> pychart             #封装了 Postscript, PDF, PNG, or SVG charts 的高质量的库
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span><span style="color: #000000;"> pydot               #提供了 Graphviz&rsquo;s dot language的完整的特性，包括创建，保存，修改，处理图像
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">reportlab    #Python生成pdf的工具包
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">simplejson   #简单，快速，可扩展的 JSON 编码和解码器
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">vatnumber    #用于欧洲国家的检查 VAT（增值税号）的模块
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span><span style="color: #000000;"> pytz                #世界时区定义
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">werkzeug     #WSGI应用程序 工具集合
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span><span style="color: #000000;"> PyYAML              #用于 Python 的 YAML 解析器和发射器。
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">ZSI          #Zolera Soap 客户端基础
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> python-<span style="color: #000000;">vobject      #VObject simplifies the process of parsing and creating iCalendar and vCard objects.
$ </span><span style="color: #0000ff;">yum</span> <span style="color: #0000ff;">install</span> PyXML               #XML libraries <span style="color: #0000ff;">for</span><span style="color: #000000;"> python
<br />### 安装PIL(</span>Python图形处理库<span>)请参考：</span><a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2013/06/13/3133813.html" target="_blank">decoder zip not available</a> ###</pre>
</div>
<p><span style="font-size: 14px; line-height: 1.5;">8. 下载OpenERP Server和Web：</span><span style="line-height: 1.5;">&nbsp;&nbsp;</span></p>
<div id="cnblogs_post_body">
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ bzr branch </span><span style="color: #0000ff;">lp</span>:openobject-server/<span style="color: #800080;">6.1</span><span style="color: #000000;"> server
$ bzr branch </span><span style="color: #0000ff;">lp</span>:openerp-web/<span style="color: #800080;">6.1</span> web</pre>
</div>
<p>9. 安装OpenERP Server：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ cd server
$ python setup.py </span><span style="color: #0000ff;">install<br /></span></pre>
</div>
<p>10. 创建OpenERP Server配置文件。<span>默认的OpenERP文件存放于&nbsp;</span><tt class="docutils literal"><span class="pre">$HOME/.openerp_serverrc</span></tt><span>，</span><span>可以使用<span>&nbsp;</span><tt class="docutils literal"><span class="pre">-s</span></tt><span>&nbsp;选项创建一个配置文件，然后进行修改。</span><tt class="docutils literal"><span class="pre">openerp</span>&nbsp;<span class="pre">-h可以查看各项参数的</span></tt><span>用途。</span></span></p>
<div class="cnblogs_code">
<pre>$ ./openerp-server -s -c ./openerp_server.conf<br />$ cat openerp_server.conf<br />... ...<br />db_host = localhost<br />db_name = FALSE<br />db_user = openerp<br />db_password = openerp<br />db_port = 5432<br />addons_path = /home/openerp/server/openerp/addons,/home/openerp/web/addons #从6.1开始, Web要作为Server的一个模块启动</pre>
</div>
<p>&nbsp;<span style="line-height: 1.5;">11. 启动OpenERP Server：</span></p>
<div class="cnblogs_code">
<pre>$ ./openerp-server -c openerp_server.conf</pre>
</div>
</div>
<p>&nbsp;</p>
<p>参考链接：</p>
<p>1.&nbsp;<a href="http://oedoc601.mrshelly.com/install/linux/server/index.html#id2" target="_blank">OpenERP 服务器安装</a></p>
<p>2.&nbsp;<a href="http://mengsir.blog.51cto.com/2992083/927277/" target="_blank"><span>Centos系统搭建OpenERP</span></a></p>
<p>3.&nbsp;<a href="http://shine-it.net/index.php/topic,4565.msg12679.html#msg12679" rel="nofollow" target="_blank">CentOS 5.4 下源码安装 openerp 6.1</a></p>]]></description></item><item><title>pg_hba.conf 记录的例子</title><link>http://www.cnblogs.com/eastson/archive/2013/05/28/3103238.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 28 May 2013 03:20:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/28/3103238.html</guid><description><![CDATA[<pre class="PROGRAMLISTING"># 允许在本机上的任何用户使用 Unix 域套接字（本地连接的缺省）
# 以任何数据库用户身份联接任何数据库
# 
#
# TYPE  DATABASE    USER        CIDR-ADDRESS           METHOD
local   all         all                                trust


# 和上面相同，但是使用的是自环的（loopback）TCP/IP 连接
# 
# TYPE  DATABASE    USER        CIDR-ADDRESS           METHOD
host         all    all         127.0.0.1/32           trust

# 和上面一行相同，但是用的是独立的掩码字段
#
# TYPE  DATABASE    USER        IP-ADDRESS          METHOD
host    all         all         127.0.0.1     255.255.255.255     trust


# 允许 IP 地址为 192.168.93.x 的任何主机与数据库
# "postgres" 相连，用与他们在自己的主机上相同 ident 的用户名标识他自己
# （通常是他的 Unix 用户名）
# TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD
host    postgres    all         192.168.93.0/24       ident sameuser


# 允许来自主机 192.168.12.10 的用户与 "postgres" 数据库联接，
# 只要该用户提供了在正确的口令。
# TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD
host    postgres    all         192.168.12.10/32      md5


# 如果前面没有其它 "host" 行，那么下面两行将拒绝所有来自
# 192.168.54.1 的联接请求 (因为前面的记录先匹配),
# 但是允许来自互联网上其它任何地方的有效的 Kerberos 5 认证的联接
# 零掩码表示不考虑主机 IP 的任何位。因此它匹配任何主机：
# TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD
host    all         all         192.168.54.1/32       reject
host    all         all         0.0.0.0/0             krb5

# 允许来自 192.168.x.x 的任何用户与任意数据库联接，只要他们通过 ident 检查
# 但如果 ident 说该用户是 "bryanh" 而他要求以 PostgreSQL 用户 "guest1" 联接，
# 那么只有在 `pg_ident.conf' 里有 "omicron" 的映射，说 "bryanh" 允许以
#  "guest1" 进行联接时才真正可以进行联接。
#
# TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD
host    all         all         192.168.0.0/16        ident omicron

# 如果下面是用于本地联接的仅有的三行，那么它们将允许本地用户
# 只和它们自己的数据库联接(数据库名和数据库用户名同名)，
# 只有管理员和角色 "support" 里的成员例外，他们可以联接到任何数据库。
# 文件 $PGDATA/admins 列出了那些允许与所有数据库联接的用户名。
# 在所有情况下都需要口令。
#
# TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD
local   sameuser    all                               md5
local   all         @admins                           md5
local   all         +support                          md5

# 上面最后两行可以合起来写成一行
local   all         @admins,+support                  md5

# 数据库字段也可以使用列表和文件名：
local   db1,db2,@demodbs  all                         md5<br /><br /><br />更多关于PostgresSQL客户端认证的信息参考：</pre>
<ul>
<li><a href="http://www.php100.com/manual/PostgreSQL8/client-authentication.html" target="_blank"><span>PostgreSQL 8.1 中文文档：</span>20.1.&nbsp;<tt class="FILENAME">pg_hba.conf</tt>&nbsp;文件</a></li>
<li><a href="http://www.php100.com/manual/PostgreSQL8/auth-methods.html" target="_blank">PostgreSQL 8.1 中文文档：20.2.&nbsp;认证方法</a></li>
</ul>]]></description></item><item><title>一步再现Windows 7资源管理器导航条的回收站和光驱链接</title><link>http://www.cnblogs.com/eastson/archive/2013/05/28/3102939.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 28 May 2013 00:48:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/28/3102939.html</guid><description><![CDATA[<p><span>在</span>Windows 7<span>，微软可能是为了确保界面简洁，资源管理器中默认移除了回收站和光驱等盘符的链接，那么，找出来也很简单，但只是这个设置平时确实很少会注意到。</span></p>
<p><span><span>* 计算机 - 组织 - 文件夹选项- 常规&nbsp;</span><br /><span>* 勾选如图选项</span></span></p>
<p>&nbsp;</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/28084839-aed82911454b427ca5352ac0f1c2b843.jpg" alt="" /></p>]]></description></item><item><title>Openerp Web PDF Report Preview &amp; Print 简介</title><link>http://www.cnblogs.com/eastson/archive/2013/05/27/3101161.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 27 May 2013 02:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/27/3101161.html</guid><description><![CDATA[<div>Openerp Web PDF Report Preview &amp; Print</div>
<div>下载地址：&nbsp;<a href="https://github.com/buke/openerp-web-pdf-preview-print" rel="nofollow">https://github.com/buke/openerp-web-pdf-preview-print</a></div>
<div><span>openerp 官方app下载 ：&nbsp;</span>&nbsp;<a href="http://apps.openerp.com/addon/7941" rel="nofollow" target="_blank">http://apps.openerp.com/addon/7941</a></div>
<div>&nbsp;</div>
<div>简介:</div>
<div>将OpenERP 的PDF报表打印下载功能，改为直接在浏览器中预览打印。&nbsp;</div>
<div>For IE， 需要安装 Adobe Reader。&nbsp;</div>
<div>For Firefox ,需要安装 Adobe Reader。&nbsp;</div>
<div>For Chrome, 神马都不用安装。&nbsp;</div>
<div>以上在windows 上测试通过。如果浏览器阻止了弹出窗口，请点允许弹出窗口。</div>
<div>&nbsp;</div>
<div>系统要求：</div>
<div>OpenERP 6.1</div>
<div>&nbsp;</div>
<div><img src="http://images.cnitblog.com/blog/111826/201305/27105544-ae75143335234b18bb993d0887e87676.jpg" alt="" /></div>]]></description></item><item><title>DOS批处理中%cd%和%~dp0的异同</title><link>http://www.cnblogs.com/eastson/archive/2013/05/27/3101026.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 27 May 2013 01:56:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/27/3101026.html</guid><description><![CDATA[<p><span>这两个命令都是用来获取当前目录名的，不同的是%cd%可以用于命令行和批处理文件中，%~dp0只能用于批处理文件。并且功能上也有不同：前者返回的是执行命令时所在的目录。后者是返回的是批处理文件所在的目录.</span></p>
<p><span style="line-height: 1.5;">例子：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">@echo</span> <span style="color: #0000ff;">off</span>  
<span style="color: #0000ff;">echo</span> this is %%<span style="color: #0000ff;">cd</span>%%  %<span style="color: #0000ff;">cd</span><span style="color: #000000;">%  
</span><span style="color: #0000ff;">echo</span> this is %%~dp0 %~dp0  </pre>
</div>
<p>在C:\ 下执行它，输出为：</p>
<div class="cnblogs_code">
<pre>C:\&gt;D:\dirshow.<span style="color: #000000;">bat  
this is %</span><span style="color: #0000ff;">cd</span>%  C:\<span style="color: #000000;">  
this is %~dp0 D:</span>\  </pre>
</div>
<div>&nbsp;</div>]]></description></item><item><title>windows右键菜单添加dos通道</title><link>http://www.cnblogs.com/eastson/archive/2013/05/27/3101021.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 27 May 2013 01:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/27/3101021.html</guid><description><![CDATA[<p><span>打开&ldquo;我的电脑&rdquo;，点击菜单中的&ldquo;工具&rdquo;－&ldquo;文件夹选项&rdquo;，选择&ldquo;文件类型&rdquo;，找到&ldquo;(无)资料夹&rdquo;， 点&ldquo;高级&rdquo;，&ldquo;新建&rdquo;，在&ldquo;操作&rdquo;中填入 &ldquo;dos通道&rdquo;（其实爱填什么都可以），&ldquo;用于执行操作的应用程序&rdquo;中填入&ldquo;cmd.exe /k cd %1&rdquo;（这个是关键），确定即可。</span><br /><br /><span>右键打开任何一个文件夹、分区，点击&ldquo;dos通道&rdquo;，就可以打开CMD命令行了。</span></p>]]></description></item><item><title>OpenERP资源链接</title><link>http://www.cnblogs.com/eastson/archive/2013/05/25/3099398.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 25 May 2013 14:19:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/25/3099398.html</guid><description><![CDATA[<p><a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2013/06/10/3121314.html" target="_blank">OpenERP实施记录</a></p>
<p><a style="line-height: 1.5;" href="http://help.openerp.com/questions/" target="_blank">OpenERP FAQ</a></p>
<p><a href="http://forum.openerp.com/forum/" target="_blank">OpenERP Forum</a>&nbsp;| <a href="http://forum.openerp.com/forum/forum27.html" target="_blank">China</a></p>
<p><a id="ctl03_CatList_LinkList_2_Link_5" href="http://cn.openerp.cn/" rel="nofollow" target="_blank">上海先安科技有限公司</a></p>
<p><span><a id="ctl03_CatList_LinkList_2_Link_4" href="http://blog.sina.com.cn/auhifly" rel="nofollow" target="_blank">海飞的博客</a></span></p>
<p><span><a id="ctl03_CatList_LinkList_2_Link_0" href="http://www.shine-it.net/" rel="nofollow" target="_blank">OpenERP中文论坛</a></span></p>
<p><span style="font-size: 14px;"><a href="http://oedoc601.mrshelly.com/" target="_blank">OpenERP 文档 v6.1</a></span></p>
<p><span style="font-size: 14px;"><a href="https://doc.openerp.com/v6.1/index.html/" target="_blank">OpenERP Documentation v6.1</a></span></p>
<p><span style="font-size: 14px;"><a href="https://doc.openerp.com/v7.0/index.html/" target="_blank">OpenERP Documentation v7.0</a></span></p>
<p><a id="ctl03_CatList_LinkList_2_Link_1" href="http://wenku.baidu.com/view/3f849c80d0d233d4b14e691d.html" rel="nofollow" target="_blank">OSCG - OpenERP不花钱</a></p>
<p><a id="ctl03_CatList_LinkList_2_Link_2" href="http://wenku.baidu.com/view/01a49622ccbff121dd36830d.html" rel="nofollow" target="_blank">OSCG - OpenERP方案(服务型行业)</a></p>
<p><span style="font-size: 14px;"><a id="ctl03_CatList_LinkList_2_Link_3" href="http://wenku.baidu.com/view/c9052e639b6648d7c1c746d9.html" rel="nofollow" target="_blank">OSCG - OpenERP进销存实例</a></span></p>
<p><span style="font-size: 14px; line-height: 1.5;"><a href="http://wenku.baidu.com/view/d208b4d0360cba1aa811da7a.html" target="_blank">OpenERP_Technical_Memento_v0.6.4_A4</a></span>&nbsp;</p>
<p id="OpenERP%2C%E4%B8%80%E4%B8%AA%E4%BC%98%E7%A7%80%E7%9A%84ERP%E4%BA%8C%E6%AC%A1%E5%BC%80%E5%8F%91%E5%B9%B3%E5%8F%B0"><a href="http://www.openerp-china.org/index.php?page=developer" target="_blank">OpenERP,一个优秀的ERP二次开发平台</a>&nbsp;</p>
<p><a href="http://www.veryopen.org/?p=1994" target="_blank">OpenERP 6.1 实施手册</a></p>
<p><a href="http://www.tudou.com/programs/view/BDuyHvdZK6o/" target="_blank">视频：&nbsp;<span>跟我学ERP</span></a></p>
<p><a style="line-height: 1.5;" href="http://www.tudou.com/programs/view/hOvUnYgwV5U/" target="_blank">视频：&nbsp;30分钟开发OpenERP 功能模块</a></p>
<p><a href="http://www.tudou.com/programs/view/0FyOByP8JiY/" target="_blank">视频：&nbsp;<span>OpenERP生产行业案例</span></a></p>
<p><a href="http://www.tudou.com/programs/view/ri6YY6o2bP8/" target="_blank">视频：&nbsp;<span>OpenERP贸易行业案例</span></a></p>
<p><a href="http://www.tudou.com/programs/view/zJXcAHjHy84/" target="_blank">视频：&nbsp;<span>OpenERP和Magento的整合</span></a></p>
<p><a href="http://www.tudou.com/programs/view/B9spoUw7TlQ/" target="_blank">视频：&nbsp;Open Office Report Designer with&nbsp;<span class="highlight">OpenERP</span></a></p>
<p><a href="http://www.tudou.com/programs/view/k7HdeYEh2Fw/" target="_blank">视频：&nbsp;<span>eclipse_Debug_OpenERP</span></a></p>
<p>&nbsp;</p>
<p class="title"><a href="http://buke.github.io/blog/2013/02/26/openerp-dynamic-loading-and-booting-way/" target="_blank">OpenERP 模块动态加载原理及启动代码分析</a></p>
<p id="subject_11347"><a href="http://shine-it.net/index.php/topic,4205.msg11347.html#msg11347" rel="nofollow" target="_blank">更改Editable Form里的快捷键(更新v 7.0)</a></p>
<p class="title"><strong><a href="http://buke.github.io/blog/2013/06/27/using-eclipse-pydev-to-debug-green-openerp-for-windows/" target="_blank">使用 Eclipse Pydev 调试 GreenOpenERP for Windows</a></strong></p>
<p>&nbsp;</p>]]></description></item><item><title>[转载]Openerp 使用 Postgresql 存储过程和视图</title><link>http://www.cnblogs.com/eastson/archive/2013/05/25/3099367.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 25 May 2013 13:58:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/25/3099367.html</guid><description><![CDATA[<p>原文地址：<a href="http://buke.github.io/blog/2013/04/22/openerp-postgresql-stored-procedure-and-view/">Openerp 使用 Postgresql 存储过程和视图</a></p>
<p>&nbsp;</p>
<p>OpenERP 使用 postgresql 存储过程和试图，步骤如下：</p>
<p>STEP1: 在模块的 init 函数中定义存储过程</p>
<div class="cnblogs_code">
<pre>    <span style="color: #0000ff;">def</span><span style="color: #000000;"> init(self, cr):
        </span><span style="color: #800000;">'''</span><span style="color: #800000;"> create stored procedure </span><span style="color: #800000;">'''</span><span style="color: #000000;">
        cr.execute(</span><span style="color: #800000;">"""</span><span style="color: #800000;">CREATE OR REPLACE FUNCTION fn_fi_report_childs(int)
        RETURNS TABLE(id int) AS $$
            WITH RECURSIVE t AS (
                SELECT id,parent_id  FROM fi_report WHERE id = $1
              UNION ALL
                SELECT fi_report.id, fi_report.parent_id FROM fi_report, t WHERE fi_report.parent_id = t.id
            )
            SELECT id FROM t;
        $$ LANGUAGE SQL
            </span><span style="color: #800000;">"""</span>)</pre>
</div>
<p><span style="line-height: 1.5;">或者定义视图</span></p>
<div class="cnblogs_code">
<pre>    <span style="color: #0000ff;">def</span><span style="color: #000000;"> init(self, cr):
        tools.drop_view_if_exists(cr, </span><span style="color: #800000;">'</span><span style="color: #800000;">analytic_entries_report</span><span style="color: #800000;">'</span><span style="color: #000000;">)
        cr.execute(</span><span style="color: #800000;">"""</span><span style="color: #800000;">
            create or replace view analytic_entries_report as (
                 select
                     min(a.id) as id,
                     count(distinct a.id) as nbr,
                     a.date as date,
                     to_char(a.date, 'YYYY') as year,
                     to_char(a.date, 'MM') as month,
                     to_char(a.date, 'YYYY-MM-DD') as day,
                     a.user_id as user_id,
                     a.name as name,
                     analytic.partner_id as partner_id,
                     a.company_id as company_id,
                     a.currency_id as currency_id,
                     a.account_id as account_id,
                     a.general_account_id as general_account_id,
                     a.journal_id as journal_id,
                     a.move_id as move_id,
                     a.product_id as product_id,
                     a.product_uom_id as product_uom_id,
                     sum(a.amount) as amount,
                     sum(a.unit_amount) as unit_amount
                 from
                     account_analytic_line a, account_analytic_account analytic
                 where analytic.id = a.account_id
                 group by
                     a.date, a.user_id,a.name,analytic.partner_id,a.company_id,a.currency_id,
                     a.account_id,a.general_account_id,a.journal_id,
                     a.move_id,a.product_id,a.product_uom_id
            )
        </span><span style="color: #800000;">"""</span>)</pre>
</div>
<p><span style="line-height: 1.5;">STEP2: 在模块的函数中使用存储过程</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">def</span> get_amount(self,cr,uid,id,period_id,context=<span style="color: #000000;">None):
        cr.execute(</span><span style="color: #800000;">'</span><span style="color: #800000;">SELECT * FROM fn_fi_report_childs(%s)</span><span style="color: #800000;">'</span>, (id,))</pre>
</div>
<p><span style="line-height: 1.5;">而视图的话，则如普通的表一样使用。</span></p>
<p>STEP3: 完成！</p>]]></description></item><item><title>GreenOpenERP -- 绿色版 OpenERP for Windows</title><link>http://www.cnblogs.com/eastson/archive/2013/05/25/3099359.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 25 May 2013 13:51:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/25/3099359.html</guid><description><![CDATA[<p>OpenERP 绿色版 For Windows，源码运行，解压即用，集成 python/postgresql/openerp。</p>
<h2>软件版本</h2>
<ul>
<li>OpenERP (OpenERP 版本不定时更新, 看博主心情 :P )</li>
<li>Python=2.7.3</li>
<li>Postgresql=9.2.3</li>
</ul>
<h2>用法</h2>
<p>下载解压ZIP文件，然后运行 *.bat 批处理文件即可。（注意文件路径：不能含有中文等非西文字符）</p>
<h2>执行脚本</h2>
<ul>
<li>start.bat &ndash; 运行 Postgresql 和 Openerp</li>
<li>start-hide.bat &ndash; 隐藏命令行窗口，运行Postgresql 和 Openerp</li>
<li>stop.bat &ndash; 停止 Postgresql 和 Openerp</li>
<li>bin/pgAdmin3.exe &ndash; 运行 start.bat 之后，可以运行 pgAdmin 管理PG</li>
</ul>
<h2>下载地址</h2>
<p><a href="http://sourceforge.net/projects/greenopenerp/files/">http://sourceforge.net/projects/greenopenerp/files/</a></p>
<p>作者: wangbuke&nbsp;<a href="mailto:wangbuke@gmail.com">wangbuke@gmail.com</a></p>
<p>博客: http://buke.github.com/&nbsp;</p>
<h2>UPDATE</h2>
<p>添加 6.1.1 版本下载</p>]]></description></item><item><title>[转载]openerp 6.0.2库存业务</title><link>http://www.cnblogs.com/eastson/archive/2013/05/25/3099357.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 25 May 2013 13:49:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/25/3099357.html</guid><description><![CDATA[<div class="blogzz_ainfo"><span><strong>原文地址：</strong><a title="openerp&nbsp;6.0.2库存业务" href="http://blog.sina.com.cn/s/blog_3ef0cbbb0100tp2h.html" target="_blank">openerp&nbsp;6.0.2库存业务</a></span><strong>作者：</strong><a title="igi1999" href="http://blog.sina.com.cn/u/1055968187" target="_blank">igi1999</a></div>
<div class="blogzz_ainfo">&nbsp;</div>
<div class="blogzz_acon">
<div>一、复式库存（Double-Entry Stock Management）和库存移动（Stock Move）<br />OpenERP的库存管理采取了独特的复式库存（Double-Entry Stock Management）。什么是复式库存？就是每一笔库存变动，同时记录库存减少和库存增加。例如卖了10辆自行车给客户，OpenERP会在你的库位（Location，这个概念后面再说）减去10辆自行车，再在客户库位（Customers Location）增加10辆自行车。因此，任何时候，OpenERP的所有库位的库存数量加起来总是为零。<br />系统中，复式库存是通过记录库存移动（stock move）来实现的。例如，前面的卖10辆自行车给客户，系统记录的是：<br />产品&nbsp; &nbsp; |数量 | 源库位 | 目标库位<br />自行车&nbsp; | 10&nbsp; | stock&nbsp; | Partner Locations &gt; Customers<br /><br />这条记录的意思是，有10辆自行车从自己的库位（stock）转移到了客户的库位（Partner Locations &gt; Customers）。任何一笔库存变动，系统中都记录了一笔如此形式的库存移动。在OE中，&ldquo;库存变动&rdquo;的概念非常广泛，如库存盘点发现盘亏了2辆自行车，系统记录的是：<br />产品&nbsp; &nbsp; |数量 | 源库位 | 目标库位<br />自行车&nbsp; | 2&nbsp; &nbsp;| stock&nbsp; | Virtual Locations &gt; Inventory Loss<br /><br />这条记录的意思是，有2辆自行车从自己的库位（stock）转移到了&ldquo;盘点库位&rdquo;（Virtual Locations &gt; Inventory Loss）。反之，盘盈的话，就是从盘点库位转移到了stock。又如生产，生产领料系统记录库存移动：从原料库位转移到生产库位（Produce Location）。成品入库系统记录库存移动：从生产库位（Produce Location）转移到成品库位。<br /><br />二、实际库存（Real Stock）和虚拟库存（Virtual Stock or Future Stock）<br />系统中不记录各库位的产品库存数量，只记录库存变动，那么，怎么知道某库位中某产品的数量呢？这个其实很容易，例如自行车在库位A中的数量，移入库位A（库存移动的目标库位是库位A）使得自行车数量增加，反之，移出使得自行车数量减少。因此，只要统计自行车的库存移动记录中，目标库位为A的数量，以及源库位为A的数量，两者相减，即得到库位A中自行车的库存数量。<br />现实中，库存分实际库存（Real Stock）和虚拟库存（Virtual Stock or Future Stock）。实际库存是库位中实有数量，虚拟库存是库位中的将来数量。例如，采购时候，假设今天下单，采购物资要5天后到达。那么，采购员考虑今天要不要下单，以及采购多少数量时候，他应该参考5天后的库存数量来决定。在未来的5天中，有一部分产品已销售出去，将在5天内出库，还有一部分产品之前已下单（采购单或生产单），将在5天内入库。实际库存，加上未来一段时间将要入库的数量，减去未来一段时间将要出库的数量，就是虚拟库存。注意，虚拟库存的数量和时间相关，例如10天后的虚拟库存显然和5天后的虚拟库存不同。<br />系统如何计算实际库存和虚拟库存呢？还是基于库存移动记录来计算，不过，要用到库存移动记录中的更多信息。系统中实际记录的库存移动（Stock Move）记录，还包括移动状态和计划移动日期、实际移动日期等字段。统计实际库存时，统计那些已经实际发生（移动状态为Done）的库存移动记录的数量即得到。计算虚拟库存时，统计那些实际已经发生的、以及将要发生（移动状态为Valid，以及计划移动日期在计算时间段内）但尚未发生（没有实际移动日期）的移动记录数量即得到。<br /><br />三、仓库（Warehouse）和库位（Location）<br />仓库是我们通常说的实际&ldquo;仓库&rdquo;。一个实际仓库中，通常分为若干货区，如成品区、原料区、废品区，货区还分货架、货层等，货区、货架等形成树状层次结构，这个层次结构在OE中可以用库位建模。<br />在OE的仓库（Warehouse）设置中，一个仓库分为三个库位（Location）：存货库位（Location Stock）、进货库位（Location Input）、出货库位（Location Output）。<br />存货库位：仓库中存放货物的货区，下面还可按货架、货层等进一步细分。<br />进货库位：仓库中收货的暂存货区，例如存放已收货但尚未验收的临时存放区。简单情况，不需要临时收货区，进货库位可以和存放库位设置成同一个库位。<br />出货库位：仓库中发货的暂存货区，例如存放已发货等待装运的临时存放区。简单情况，不需要临时发货区，出货库位可以和存放库位设置成同一个库位。<br /><br />库位类似于仓库里面的货区，用于存放产品（注意，OE的产品包括原料、消耗品、成品等一切物资）。库存移动中记录的源库位、目标库位都是库位，不可用仓库。OE的库位概念非常灵活，可以是实际库位（库区），也可以是虚拟库位。虚拟库位是物理上不存在，仅用于复式库存的库存移动记录的需要。例如，盘亏时候的库存移动记录，目标库位是&ldquo;盘点库位&rdquo;，该库位就是一种虚拟库位。OE的库存移动概念非常广泛，对应的库位也有多种类型。<br />供应商库位（Supplier Location）: 用于从供应商处收货时的库存移动的源库位，是一种虚拟库位。<br />视图库位（View）: 库位树状结构的中间节点，用于组织库位树状结构。该种视图不可在库存移动中使用，但可用于库存统计，即统计其下面的各个库位的总库存。<br />内部库位（Internal Location）: 仓库中实际存放货物的库位，即库区。<br />客户库位（Customer Location）: 用于供货给客户时的库存移动的目标库位，是一种虚拟库位。<br />盘点库位（Inventory）: 用于盘亏时的目标库位，或者盘盈时的源库位。注意，新上OE系统时候也是从该库位中&ldquo;移动&rdquo;产品至各库位，以建立期初库存。<br />补货库位（Procurement）: 产品补货单（Procurement Order，这个概念很重要，后面再讲）引起的库存移动的&ldquo;临时&rdquo;源库位或目标库位。当系统初次生成补货单时候，系统不能确定补货的来源（不确定是通过购买还是通过生产补货）。只有当系统运行完补货调度计划（Procurement Scheduler）后，才知道补货来源。默认情况下，系统每天运行一次补货调度计划，当然，你可以在任何时候手动执行补货调度计划。补货库位用于初次生成的补货单中的库存移动。每当运行完补货调度计划后，该库位库存数量应为零。<br />生产库位（Production）: 生产时候，生产领料或成品入库时候的目标库位或源库位，是一种虚拟库位。<br />多公司中间库位（Transit Location for Inter-Companies Transfers）: 多公司时候，用于库存移动时候的中间库位。<br /><br />四、库位链（Location Chain）<br />OE的库位间可以串联起来形成库位链。举个简单例子，你希望收到货物后先进入质检区，经质检人员确认后再入库。要实现这个业务，一个简单办法是利用库位链。设置一个质检库位，该库位链接到你的存货库位，每当货物进入质检库位时候（系统记录到一个目标库位为质检库位的库存移动），系统自动生成一个从质检库位到存货库位的移动单，要求质检人员确认该单子。<br />库位链中，从前一库位到下一库位的移动，有三种移动方式：<br />手动转移（Manual Operation）：系统自动生成一张到下一库位的移动单，要求操作员确认后才实际移动。<br />自动转移（Automatic Move）：系统自动生成一张到下一库位的移动单，不需要操作员确认，直接移动。此时通常还会指定库链提前时间（Chaining Lead Time），该时间表示，货物进入库位后，等待该时间，再进入下一库位。这个概念可以用于建模物流路径结点及其时间。<br />自动跳移（Automatic No Step Added）：系统不生成到下一库位的移动单，而是直接修改原库存移动的目标库位为下一库位。<br /><br />可以利用OE灵活的库位及库位链的概念建模物流处理过程。如：<br />销售发货的多次确认：例如，系统默认的销售发货过程是两次确认，一次是出库前确认待发货产品合格，其次是客户收到货物后联系客户确认收货无误。第一次确认在销售单确认时系统自动产生的装箱单（Packing List，其内容是存货库位Stock到出货库位Output的库存移动）上确认，第二次在第一次确认后产生的运输单（Delivery Order，其内容是从出货库位Output到客户库位Cusomer的库存移动）上确认。如果不需要第二次确认，那么，只要将Output -&gt; Customer设置成自动转移库位链，则第二次将自动移动，无需确认。<br />跟踪货物进出口的海运路径：例如，假设某产品从美国公司A进口，A公司发货后2天到达美国西岸港口，1个月后到达上海港口，5天后应到达公司仓库。为了跟踪该物流过程，可以建立库位链：Supplier A -&gt; 西岸港 -&gt; 上海港 -&gt; Input -&gt; Stock，并设置该库位链各环节的库链提前时间，则系统可以自动产生库存移动供用户确认货物是否按时到达各节点。<br />管理单个产品的物流路径：安装Location_Path模块后，OE支持为每个产品设置特定的物流路径。<br />管理出租产品：例如某设备A出租给某客户A 3个月，可以为设备A设置库位链：Stock -&gt; Output -&gt; Customer A -&gt; Input -&gt;Stock，并将Customer A -&gt; Input环节的库链提前时间设置为3个月。这样，系统将于3个月后自动产生库存移动单供用户确认设备A是否按时归还。<br />管理委托产品：委托产品是指，存放于客户或供应商处，但产权属于自己的产品，或者，存放于本公司仓库，但产权不属于本公司的产品。例如，对于产权属于自己，但存放于客户处的产品，可以在自己公司的总存货库位下设置一个&ldquo;客户库位&rdquo;，用于记录该类产品库存。<br /><br />五、产品补货（Procurement）<br />销售缺货时需要及时&ldquo;补货&rdquo;，这个补货过程在OE里叫产品补货（Procurement）。OE的补货，是通过手动或自动生成补货单（Procurement Order）来实现。有多种情况会引发补货：<br />1）仓管员发现某产品库存太低，他可以手动生成一张补货单（Procurement Order）。在产品画面，右边有个&ldquo;Make Procurement&rdquo;链接，当查看库存时发现产品库存太低，可以点击该链接手工填写补货单。<br />2）按库存生产（Make to Stock）的产品，当该产品库存低于最低库存（minimum stock rules）时，系统会自动生成补货单。系统有一个批处理Job，该Job会定期执行（默认为一天一次），该Job根据设定的最低库存规则（minimum stock rules），如果库存不够时，自动生成补货单。<br />3）按订单生产（Make to Order）的产品，确认销售订单时候，系统会自动生成补货单。<br />4）按库存生产（Make to Stock）的产品，根据主生产计划（master production schedule）生成补货单。<br /><br />随着补货单的执行，系统会产生一系列的动作。如自动生成采购单（Purchase Order），自动生成制造单（Manufacturing Order），自动生成任务（Task）。具体采取什么动作，取决于产品（Product）的供应方法（Supply Method）、补货方法（Procurement Method）、产品类型（Product Type）三个属性的设置。<br /><br />OE支持两种产品补货方法：按库存生产（Make to Stock）、按订单生产（Make to Order）。<br />按库存生产（Make to Stock）: 表示从仓库取货供给客户的产品，如分销商的情况，或者季节性产品。<br />按订单生产（Make to Order）: 表示有销售订单时，根据订单去采购或生产的产品，该种产品不会入库。<br /><br />OE支持两种产品供应方法：生产（Produce）、购买（Buy）。<br />生产（Produce）: 表示该产品通过自己生产来供应，或者该服务是通过内部资源来提供。<br />购买（Buy）: 表示该产品或服务通过购买来供应。<br /><br />OE支持三种产品类型：可库存品（Stockable）、消耗品（Cosumable）、服务（Service）<br />可库存品（Stockable）：需要计量其库存数量的物资，通常的有形产品都是该类型。<br />消耗品（Cosumable）：不需要计量其库存数量的物资，通常是低值易耗品，如小螺钉等。<br />服务（Service）：非有形物，OE中将服务也看做产品。如咨询服务、软件开发服务。<br /><br />对于可库存产品，补货单（Procurement Order）的后续动作：<br />补货方法 | 供应方法(Produce)&nbsp; &nbsp;| 供应方法(Buy)<br />MTS&nbsp; &nbsp; &nbsp; | 等待&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| 等待<br />MTO&nbsp; &nbsp; &nbsp; | 自动生成生产单&nbsp; &nbsp; &nbsp; | 自动生成采购单<br /><br />对于服务产品，补货单（Procurement Order）的后续动作：<br />补货方法 | 供应方法(Produce)&nbsp; &nbsp;| 供应方法(Buy)<br />MTS&nbsp; &nbsp; &nbsp; | -&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| -<br />MTO&nbsp; &nbsp; &nbsp; | 自动生成项目任务&nbsp; &nbsp; | 自动生成服务外包合同<br /><br />下面举个复杂点的例子说明OE的补货（Procurement）过程：<br />1）销售出某MTO的产品A<br />2）销售单(SO:Sale Order)确认时候，系统自动生成产品A的补货单(PO:Procurement Order)<br />3）该PO导致系统生成产品A的制造单(MO:Manufacturing Order)<br />4）随着该MO的执行，系统会根据BOM计算产品零部件的补货单<br />5）零部件补货单会导致系统生成库间移动单（INT：Internal Moves，相当于领料单）<br />6）如果零部件是MTO的产品，该INT又会触发新的PO及MO，如果该零部件是MTS的，且库存不足领料数量，则系统将处于待料状态（Waiting）<br />7）待料状态下，等待一天后，最小库存规则会自动引发该零部件的补货单，该补货单又会产生采购单（PO：Purchase Order）<br />8）采购员确认系统生成的采购单，且采购零部件入库后，待料状态结束，生产可以继续进行。<br /><br />从上述补货过程可以看出，有多种原因会导致补货过程中断（Procurement Exception），补货单会记录导致异常的原因。设置错误是导致自动补货异常的最常见原因。<br />产品未定义BOM(No bill of materials defined for production): 这种情况，需要定义BOM，或者将产品的供应方法改成购买（Buy）。<br />找不到采购单的供应商（No supplier available for a purchase）: 这中情况是因为没有定义产品的供应商，需要在Product界面的Supplier页定义产品默认供应商。<br />找不到供应商的地址（No address defined on the supplier partner）:这种情况，需要设置该供应商的地址，系统自动生成采购单时需要该地址。<br />库存不足（No quantity available in stock）:这种情况需要定义最小库存规则，以使系统能够自动补货，或者手工录入补货单补足库存。<br /><br /><span style="line-height: 1.5;">六、库存价值（stock valuation）</span><br />库存价值计算比较难，财务经理给出的库存价值往往和库管经理给出的库存价值相差很多，所谓库存&ldquo;两张皮&rdquo;现象。在OE中，非常巧妙的将&ldquo;两张皮&rdquo;统一成了一张皮。OE中统一&ldquo;两张皮&rdquo;的办法是，每一笔库存移动都会自动生成会计上的一笔库存移动分录。因为系统自动生成，避免了人为错误，故而会计分录和库存移动能够保持一致，财务经理从会计分录计算的库存价值和库管经理从库存移动计算出的库存价值总是相等的。<br />为了统一库存价值的&ldquo;两张皮&rdquo;，在OE中需要设置如下一些基础参数：产品（Product）画面的Stock Input Account、Stock Output Account，库位（Location）画面的Stock Input Account、Stock Output Account。<br />产品的Stock Input Account：该产品入库时，入库分录的贷方。产品入库时候，借方通常固定是&ldquo;库存商品&rdquo;。<br />产品的Stock Output Account：该产品出库时，出库分录的借方。产品出库时候，贷方通常固定是&ldquo;库存商品&rdquo;。<br />库位的Stock Input Account：产品入该库位时，入库分录的借方。该参数通常是&ldquo;库存商品&rdquo;下的以库位名命名的二级科目，如&ldquo;A库&rdquo;。但如果是&ldquo;盘点库位&rdquo;或&ldquo;生产库位&rdquo;，不要设置成&ldquo;库存商品&rdquo;的二级科目，你可以设置该参数为&ldquo;盘点库&rdquo;、&ldquo;生产库&rdquo;，或者不设。<br />库位的Stock Output Account：产品出该库位时，出库分录的贷方。该参数通常也是&ldquo;库存商品&rdquo;下的以库位名命名的二级科目，如&ldquo;A库&rdquo;。<br /><br />考虑如下例子，<br />产品&ldquo;自行车&rdquo;的Stock Input Account＝&ldquo;外库&rdquo;，Stock Output Account＝&ldquo;外库&rdquo;<br />A库位的Stock Input Account＝&ldquo;库存商品 － A库&rdquo;，Stock Output Account＝&ldquo;库存商品 － A库&rdquo;<br />盘点库位的Stock Input Account＝&ldquo;盘库&rdquo;，Stock Output Account＝&ldquo;盘库&rdquo;<br /><br />自行车单价200元，期初自行车库存数量为0，依次发生业务：1）采购入库自行车10辆，入A库位；2）销售出库自行车5辆，从A库出；3）月末盘点盘亏1辆自行车。<br />当确认上述库存移动时候，系统会自动生成如下会计分录：<br />1）采购入库<br />产品&nbsp; &nbsp; |数量 | 源库位&nbsp; &nbsp; | 目标库位<br />自行车&nbsp; | 10&nbsp; | Supplier&nbsp; | A库位<br /><br />会计分录<br />借：库存商品 － A库&nbsp; &nbsp; 2000<br />&nbsp; 贷：外库&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2000<br /><br />2）销售出库<br />产品&nbsp; &nbsp; |数量 | 源库位&nbsp; | 目标库位<br />自行车&nbsp; | 5&nbsp; &nbsp;| A库位&nbsp; &nbsp;| Customer<br /><br />会计分录<br />借：外库&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1000<br />&nbsp; 贷：库存商品 － A库&nbsp; &nbsp;1000<br /><br />3）盘亏<br />产品&nbsp; &nbsp; |数量 | 源库位&nbsp; | 目标库位<br />自行车&nbsp; | 1&nbsp; &nbsp;| A库位&nbsp; &nbsp;| 盘点库位<br /><br />会计分录<br />借：盘库&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;200<br />&nbsp; 贷：库存商品 － A库&nbsp; &nbsp;200<br /><br />从系统的记录中，库管经理很容易得出结论：A库位4辆（10辆－5辆－1辆），盘点库位1辆。<br />财务经理很容易得出结论：A库位价值800元（2000元－1000元－200元），盘点库位价值200元。<br />盘点库位的价值表示盘亏了200元。</div>
<div>&nbsp;</div>
<div>
<div>一天就写这么多，好样的！<br /><br />以下三处值得商榷：<br /><br />仓库是我们通常说的实际&ldquo;仓库&rdquo;。一个实际仓库中，通常分为若干货区，如成品区、原料区、废品区，货区还分货架、货层等，货区、货架等形成树状层次结构，这个层次结构在OE中可以用库位建模。<br /><br />补货库位（Procurement）: 产品补货单（Procurement Order，这个概念很重要，后面再讲）引起的库存移动的&ldquo;临时&rdquo;源库位或目标库位。当系统初次生成补货单时候，系统不能确定补货的来源（不确定是通过购买还是通过生产补货）。只有当系统运行完补货调度计划（Procurement Scheduler）后，才知道补货来源。默认情况下，系统每天运行一次补货调度计划，当然，你可以在任何时候手动执行补货调度计划。补货库位用于初次生成的补货单中的库存移动。<br />该库位库存数量应为零。是一种虚拟库位。<br /><br />按库存生产（Make to Stock）: 表示从仓库取货供给客户的产品，如分销商的情况，或者季节性产品。<br />按订单生产（Make to Order）: 表示有销售订单时，根据订单去采购或生产的产品，该种产品不会入库。</div>
<div>&nbsp;</div>
<div>楼上的大大也没有写哪些地方值得商榷。&nbsp;<img title="Smiley" src="http://shine-it.net/Smileys/default/smiley.gif" alt=":)" /><br /><br />五、产品补货（Procurement）<br />销售缺货时需要及时&ldquo;补货&rdquo;，这个补货过程在OE里叫产品补货（Procurement）。OE的补货，是通过手动或自动生成补货单（Procurement Order）来实现。有多种情况会引发补货：<br />1）仓管员发现某产品库存太低，他可以手动生成一张补货单（Procurement Order）。在产品画面，右边有个&ldquo;Make Procurement&rdquo;链接，当查看库存时发现产品库存太低，可以点击该链接手工填写补货单。<br />2）按库存生产（Make to Stock）的产品，当该产品库存低于最低库存（minimum stock rules）时，系统会自动生成补货单。系统有一个批处理Job，该Job会定期执行（默认为一天一次），该Job根据设定的最低库存规则（minimum stock rules），如果库存不够时，自动生成补货单。<br />3）按订单生产（Make to Order）的产品，确认销售订单时候，系统会自动生成补货单。<br />4）按库存生产（Make to Stock）的产品，根据主生产计划（master production schedule）生成补货单。<br /><br />疑问下：<br />1、为什么2）跟4)有些不同呢，是否是2）的供应方法是buy而4）的供应方法为MRP？<br />2、产品补货会自动生成补货单，请问补货单跟采购订单是一样的概念吗？如果是一样的，那么，多张自动生成的补货单中如果供应商相同，会不会合并采购呢？<br /><br />向老大说明，OE还没有用过，所以问的问题可能有点白，请见谅！</div>
<div><span style="line-height: 1.5;">&nbsp;</span></div>
<div>&nbsp;1、为什么2）跟4)有些不同呢，是否是2）的供应方法是buy而4）的供应方法为MRP？<br />2）是系统自动运算产生补货单，4）是在画面&ldquo;Master Procurement Schedule&rdquo;上点击按钮&ldquo;Procure Incoming Left&rdquo;时候，系统生成的补货单（系统计算&ldquo;期末计划库存&rdquo;与&ldquo;实有库存&rdquo;之差额数量，生成补货单补足差额）。&ldquo;Master Procurement Schedule&rdquo;表单用于物流主管计划期间物流进出数量。该功能需要安装模块Stock_Planning，访问菜单是：Warehouse -&gt; Stock Planning -&gt; Master Procurement Schedule。<br /><br />&gt; 2、产品补货会自动生成补货单，请问补货单跟采购订单是一样的概念吗？如果是一样的，那么，多张自动生成的补货单中如果供应商相同，会不会合并采购呢？<br />补货单跟采购订单不是一个概念，如果产品的供应方式是Buy，系统会根据补货单会产生相应的采购单，如果产品供应方式是Produce，系统根据补货单产生制造单（MO）。<br />由补货单产生的采购单，系统不会自动将供应商相同的单子合并到一起，但有附加模块（merge_picking）允许用户手工合并单子。</div>
<div>&nbsp;</div>
<div><span style="line-height: 1.5;">这里值得商榷：</span></div>
<div>
<div><br />库位的Stock Input Account：产品入该库位时，入库分录的借方。该参数通常是&ldquo;库存商品&rdquo;下的以库位名命名的二级科目，如&ldquo;A库&rdquo;。但如果是&ldquo;盘点库位&rdquo;或&ldquo;生产库位&rdquo;，不要设置成&ldquo;库存商品&rdquo;的二级科目，你可以设置该参数为&ldquo;盘点库&rdquo;、&ldquo;生产库&rdquo;，或者不设。<br />库位的Stock Output Account：产品出该库位时，出库分录的贷方。该参数通常也是&ldquo;库存商品&rdquo;下的以库位名命名的二级科目，如&ldquo;A库&rdquo;。<br /><br />------------------------------------------<br />6.0这里和5.0不太一样。<br />在5.0里只能对库位设置一个会计科目，也就是入库出库用同一个科目。<br />在6.0里可以针对某个库位的出库和入库分别设置科目。这样就更灵活了。<br /><br />在库位上设置科目一般来说只适用于虚拟库位。比如盘存、客户、供应商、生产这些，而对物理库位比如stock极其子库位我们一般不设置科目。</div>
<div>&nbsp;</div>
<div>
<ul>
<li>
<div>
<h5><a href="http://shine-it.net/index.php/topic,2425.msg8078.html#msg8078"><span style="color: #334466;">Re: OpenERP库存管理的若干概念讲解(新增库存价值)</span></a></h5>
<div>&laquo;&nbsp;<strong>回复 #6 于:</strong>&nbsp;六月 06, 2011, 01:42:37 下午 &raquo;</div>
<div>&nbsp;</div>
<ul>
<li><a href="http://shine-it.net/index.php?action=post;quote=8078;topic=2425.0;last_msg=8391">引用</a></li>
<li><a>Add Multi Quote</a></li>
<li><a>Remove Multi Quote</a></li>

</ul>

</div>
<div>
<div>1）采购入库<br />产品&nbsp; &nbsp; |数量 | 源库位&nbsp; &nbsp; | 目标库位<br />自行车&nbsp; | 10&nbsp; | Supplier&nbsp; | A库位<br /><br />会计分录<br />借：库存商品 － A库&nbsp; &nbsp; 2000<br />&nbsp; 贷：外库&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2000<br /><br />觉得会计分录这样怎么样<br />借：库存商品 － A库&nbsp; &nbsp; 2000<br />&nbsp; 贷：物资采购&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2000<br />注：中小企业的话直接就是<br />借：库存商品 － A库&nbsp; &nbsp; 2000<br />&nbsp; &nbsp; &nbsp; 应交税金-应交增值税-进项税金&nbsp; 340<br />贷：应付帐款&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2340<br /><br />2）销售出库<br />产品&nbsp; &nbsp; |数量 | 源库位&nbsp; | 目标库位<br />自行车&nbsp; | 5&nbsp; &nbsp;| A库位&nbsp; &nbsp;| Customer<br /><br />会计分录<br />借：外库&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1000<br />&nbsp; 贷：库存商品 － A库&nbsp; &nbsp;1000<br /><br />觉得会计分录这样怎么样<br />借：待发商品&nbsp; &nbsp; &nbsp; &nbsp;1000<br />&nbsp; &nbsp; &nbsp;贷：库存商品-A库&nbsp; &nbsp; 1000<br />注：中小企业的话直接就是<br />借：主营业务成本&nbsp; &nbsp;1000<br />&nbsp; &nbsp; &nbsp;贷：库存商品-A库&nbsp; &nbsp; 1000<br /><br />3）盘亏<br />产品&nbsp; &nbsp; |数量 | 源库位&nbsp; | 目标库位<br />自行车&nbsp; | 1&nbsp; &nbsp;| A库位&nbsp; &nbsp;| 盘点库位<br /><br />会计分录<br />借：盘库&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;200<br />&nbsp; 贷：库存商品 － A库&nbsp; &nbsp;200<br /><br />这样是不是更好：<br />借：待处理财产损益&nbsp; 200<br />&nbsp; &nbsp;贷：库存商品-A库 200</div>
<div>谢谢鱼（dquo）的专业意见，按鱼的写法，更符合专业财务要求。为了让系统自动生成鱼给出的分录，系统的参数设置要改成：<br />产品&ldquo;自行车&rdquo;的Stock Input Account＝&ldquo;物资采购&rdquo;，Stock Output Account＝&ldquo;待发商品&rdquo;<br />A库位的Stock Input Account＝&ldquo;库存商品 － A库&rdquo;，Stock Output Account＝&ldquo;库存商品 － A库&rdquo;<br />盘点库位的Stock Input Account＝&ldquo;待处理财产损益&rdquo;，Stock Output Account＝&ldquo;待处理财产损益&rdquo;。<br /><br />另外，不建议采用中小企业的写法，如：<br />注：中小企业的话直接就是<br />借：库存商品 － A库&nbsp; &nbsp; 2000<br />&nbsp; &nbsp; &nbsp; 应交税金-应交增值税-进项税金&nbsp; 340<br />贷：应付帐款&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2340<br /><br />原因是：采购过程，有多个经济活动，一是采购下单，二是采购物资入库，三是支付采购款。手工会计时候，为了方便，直接将多个活动的会计分录合并，故而有中小企业的写法。但现在分录都是系统自动生成，不需要手写，因而，分开成多个分录更能详细跟踪经济活动过程。即采购下单时让系统自动生成分录：<br />借：物资采购&nbsp; &nbsp; &nbsp; &nbsp;2000<br />&nbsp; &nbsp; &nbsp;应交税金-应交增值税-进项税金&nbsp; 340<br />贷：应付帐款&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2340<br /><br />采购物资入库时让系统自动生成分录：<br />借：库存商品 － A库&nbsp; &nbsp; 2000<br />&nbsp; 贷：物资采购&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2000<br /><br />实际付款时让系统自动生成分录：<br />借：应付账款&nbsp; &nbsp; &nbsp; &nbsp;2340<br />&nbsp; 贷：银行存款&nbsp; &nbsp; &nbsp;2340<br /><br />如何？&nbsp;</div>

</div>

</li>

</ul>

</div>

</div>

</div>

</div>]]></description></item><item><title>[转载]OPENERP 6.0.2中的财务概念</title><link>http://www.cnblogs.com/eastson/archive/2013/05/25/3099355.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 25 May 2013 13:47:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/25/3099355.html</guid><description><![CDATA[<div class="blogzz_ainfo"><span><strong>原文地址：</strong><a title="十一、OPENERP&nbsp;6.0.2中的财务概念" href="http://blog.sina.com.cn/s/blog_3ef0cbbb0100tn1a.html" target="_blank">十一、OPENERP&nbsp;6.0.2中的财务概念</a></span><strong>作者：</strong><a title="igi1999" href="http://blog.sina.com.cn/u/1055968187" target="_blank">igi1999</a></div>
<div class="blogzz_ainfo">&nbsp;</div>
<div class="blogzz_acon">一、记账凭证（Account Move）<br />会计上的记账凭证，也叫会计分录，在OpenERP中叫&ldquo;Account Move&rdquo;。Account Move直译是&ldquo;账户移动&rdquo;，之前解释过复式库存管理的核心概念&ldquo;库存移动(Stock Move)&rdquo;，Account Move和Stock Move有些相似。<br />什么是会计？这里不想给会计下个严格的学术上的定义，简单的说，会计是从资金变动的角度记录经济活动，并以此记录为基础，对经济活动进行统计分析、核算监督。任何经济活动，都伴随着财物变动，例如采购，物资从供应商&ldquo;移动&rdquo;到本公司，资金从本公司&ldquo;移动&rdquo;到供应商。OE中管这种&ldquo;财物移动&rdquo;叫&ldquo;账户移动(Account Move)&rdquo;，中国会计上叫分录，或记账凭证，其意为财物从这个账户移动到那个账户。<br />下面以采购过程举例说明&ldquo;账户移动&rdquo;的概念。采购有多种情况，先说最简单的情况，即一手交钱一手交货。这种情况，&ldquo;库存现金&rdquo;账户减少，&ldquo;库存商品&rdquo;账户增加，相当于从库存现金账户移动到库存商品账户，会计上记录如下（假设采购1000元）：<br />借：库存商品&nbsp; &nbsp; 1000<br />&nbsp; 贷：库存现金&nbsp; 1000<br /><br />这个记录形式，就是&ldquo;会计分录&rdquo;，也即OE的Account Move，它的含义，你总是可以理解为从贷方账户移动到借方账户。<br /><br />不过，现实中的采购通常更复杂些，例如，下单后一个月货物才能到达，入库后一个月才会支付货款。这样，下单、入库、付款三个经济活动就必须分开来记录，不可以合并成上述的一个分录。<br />下单（从负债移动1000元到在途物资）：<br />借：在途物资&nbsp; &nbsp; 1000<br />&nbsp; 贷：应付账款&nbsp; 1000<br /><br />入库（从在途物资移动1000元到库存商品）：<br />借：库存商品&nbsp; &nbsp; 1000<br />&nbsp; 贷：在途物资&nbsp; 1000<br /><br />付款（从库存现金移动1000元到应付账款）：<br />借：应付账款&nbsp; &nbsp; 1000<br />&nbsp; 贷：库存现金&nbsp; 1000<br /><br />经过上述的账户移动后，最终相当于：从库存现金移动了1000元到库存商品。<br /><br />通过上述的例子，可以得出几个结论：<br />1）账户移动（会计分录）从经济活动产生，如采购、销售、生产领料、成品入库等，都会产生相应的会计分录。<br />2）恰当的设置好系统参数，系统能够自动生成相应的会计分录。<br />3）为了让系统自动产生会计分录，需要预先设置账户（会计科目），并告诉系统，哪个经济活动对应到哪个账户的资金变动。<br />4）根据一段时间内（会计上叫会计分期，在中国是一个月）的账户移动记录，可以很容易统计各个账户的增减额，从而判断该段时间内经济活动的盈亏情况。各个账户的增减额，就是&ldquo;资产负债表&rdquo;，该段时间的盈亏情况，就是&ldquo;损益表&rdquo;。<br /><br />二、凭据（Invoice）<br />凭据（Invoice）,会计上叫原始凭证。会计记账（填写会计分录，或者说账户移动）必须有依据，不能凭空登帐。例如，前述的采购下单时候的会计分录，会计必须看到采购部门的采购传票才可记账，付款分录必须看到出纳拿到的供应商发票才可记账。采购传票、供应商发票就是原始凭证，OE中原始凭证叫凭据（Invoice）。<br />在OE中，凭据（Invoice）是沟通业务部门和财务部门的桥梁。例如，采购部门填写采购单，采购下单时候（点击采购单的确认按钮），系统自动生成供应商凭据。该凭据自动送至财务部门，财务部工作人员确认该凭据无误后，确认凭据（点击凭据的&ldquo;确认&rdquo;按钮），系统根据凭据自动生成采购对应的会计分录（Accout Move）。<br /><br />OE的凭据有四种，采购凭据（Supplier Invoice），客户凭据（Customer Invoice）、采购退货凭据（Supplier Credit Note or Supplier Refund）、销售退货凭据（Customer Credit Note or Customer Refund）。采购凭据在采购订单确认时生成，客户凭据在销售订单确认时生成。这四种凭据，OE内部都是通过account_invoice对象实现的，只是显示界面有所不同。account_invoice对象，包含了对应经济活动的财务处理（记账、开票、支付或收款）需要的所有信息。包括交易产品、数量、金额，业务伙伴（供应商和客户），交易日期，记账账户，税金账户，分类账（Journal，后面再讲），等等。<br />OE依据凭据上的信息生成会计分录。OE自动生成的会计分录（Account Move）比会计上要求的记账凭证包含的信息更多，不仅有借方、贷方账户，金额，发生时间，还包括交易的产品、数量，交易的业务伙伴，等等。因此，基于OE的Account Move，可以统计各种财务报表。<br /><br />三、归类账（Journal）<br />经济活动林林总总，会计分录种类和数量众多。如果将所有的会计分录都在一个窗口上显示，对会计工作不是很方便。归类帐（Journal）就是用于分类显示会计分录（Account Move）。例如，选择销售归类帐（Sales Journal），双击打开，则显示的都是销售业务相关的会计分录。<br />除了分类显示会计分录外，归类帐还有如下一些作用：<br />1）默认借方、贷方科目：可以设置Journal的默认借方、贷方科目，这样，当你在Journal中输入会计凭证的时候，例如，只要输入借方科目，系统会自动用Journal的默认贷方科目生成贷方记帐。输入贷方科目则系统自动生成借方记帐。<br />2）指定凭证号生成方法：OE支持多种会计分录的凭证号生成方法，每个Journal可以指定不同的凭证号生成方法，该Journal中的会计分录都将用指定的方法生成凭证号。<br />3）其他一些控制会计分录的参数设置。<br /><br />在OE中，必须配置销售归类帐（Sales Journal）、采购归类账（Purchase Journal）、现金归类账（Cash Journal），通常还会配置库存归类账（Stock Journal）。顾名思义，当系统从销售订单自动生成的销售相关分录归类于Sales Journal，当系统从采购订单自动生成的采购相关分录归类于Purchase Journal，当系统从银行对账单自动生成的支付相关分录归类于Cash&nbsp; Journal，当系统从出入库单自动生成的库存相关分录归类于Stock Journal。<br /><br />四、支付（Payment）和核销（reconcile）<br />OpenERP的支付，有两种模式，一是单个支付，一是批量支付。单个支付，直接在凭据（Invoice）上按&ldquo;Payment(支付)&rdquo;按钮，系统会弹出支付画面，输入支付信息。系统自动核销（reconcile）该凭据上的应收/应付账款，生成相应支付分录。这个模式适合于没有专职出纳的小公司。<br />批量支付，OpenERP提供一个支付画面，逐行输入每笔收/支信息，包括&ldquo;业务伙伴&rdquo;、&ldquo;金额&rdquo;等。输入好以后，确认该支付单，系统可以自动或手动查找每笔支付对应的凭据（Invoice），核销相关&ldquo;应收/应付账款&rdquo;，生成支付会计分录。支付相关会计分录通常是，借：应付账款，贷：银行存款。这个模式适合于有专职出纳的公司，出纳批量处理收支事务。<br />OE的支付管理功能，输入好各支付行后，也可以让系统生成银行支付电子文件。或者将一个大额支付拆成多个银行帐号支付。<br /><br />OpenERP提供自动或手动核销（reconcile）功能。例如，支付时候，系统会自动匹配业务伙伴的&ldquo;应付账款&rdquo;，用支付金额核销对应&ldquo;应付账款&rdquo;,并且，标记该应付账款对应的凭据（Invoice）为已支付（自动勾上Invoice上的属性&ldquo;Paid/Reconciled&rdquo;）。只要是可核销科目（科目设置画面上，勾上属性"Recocile"），系统就会试图自动核销。常见的可核销科目是&ldquo;应付账款&rdquo;和&ldquo;应收账款&rdquo;。<br /><br />五、财务重要参数配置<br />OE的财务模块比较复杂，要配置的参数比较多，下面简单介绍一些重要参数：<br />1）会计分期（Periods）：这个配置比较简单，中国的话，按自然年，每个月一个分期，十二个分期。<br />2）归类账（Journal）：前面介绍过了，系统至少要配置销售归类帐、采购归类账、现金归类账。<br />3）会计科目（Account）：根据财务部的规定，一级科目大概有七、八十个，再加上公司自己的二级、三级等科目，设置到系统中。<br />4）税种（Taxes）：当你设置好了Taxes，OE会用设置好的税种计算方法，自动在采购、销售等业务生成的会计分录中增加&ldquo;增值税&rdquo;等税务记账条目。<br />5）应税设定（Fiscal Position）：通常，在产品信息中设定销售、采购该产品应缴纳的税种。之后，在销售订单、采购订单中，系统会自动采用产品上设定的税种计税。但是，有时候，同一产品，针对不同类型客户，其计税方式不同。例如，某产品内销时要计消费税，但外销时不计消费税。那么，对于外销客户，应该采用不同于产品上设定的计税方法计税。Fiscal Position就是处理这种情况的。<br />6）付款条件（Payment Term）：当你设置好了付款条件，OE会按销售订单上选择的付款条件，及时提醒财务人员注意收款/付款。在付款条件中，可以设置什么时间、收/付多少，或收/付百分之多少。<br /><br />此外，在业务伙伴和产品上还要设置几个和财务科目相关的属性，这些属性告诉系统如何自动生成相关会计科目。<br />业务伙伴相关属性设置：<br />Account Receivable：和客户发生的销售业务记账凭证中，应收账款对应的会计科目，通常是&ldquo;1014 应收账款&rdquo;。销售业务中，系统会根据这里的设置自动生成会计分录。<br />Account Payable：和业务伙伴发生的采购业务记账凭证中，应付账款对应的会计科目，通常是&ldquo;2011 应付账款&rdquo;。<br />Fiscal Position：应税设定。当指定客户的应税设定后，系统会根据应税设定中指定的替换规则将产品中设定的税种换成别的税种计算税额。应税设定在财务模块中设置。<br />Payment Term：付款条件，如30日内付全款，或者10日内付30%，20日内再付30%，余款2月内付清。当设置好付款方式后，如该客户未按时付款，系统会自动报警。付款条件在财务模块中设置。<br />Total Receivable：该业务伙伴的应收账款总额，这个是系统自动显示，不可修改。<br />Total Payable：该业务伙伴的应付账款的总额，这个是系统自动显示，不可修改。<br /><br />产品相关属性设置：<br />Income Account: 产品收入科目，产品销售业务的会计分录的贷方，通常是&ldquo;6001 主营业务收入&rdquo;。借方是应收账款。<br />Expense Account: 产品成本科目，产品采购业务的会计分录的借方。对于商业流通企业，通常是&ldquo;1042 在途物资&rdquo;。贷方是应付账款。<br />Stock Output Account: 产品出库科目，产品出库时会计分录的借方，贷方是库存管理中库位设置时指定的科目。对于商业流通企业，通常是&ldquo;6015 主营业务成本&rdquo;，贷方通常是&ldquo;1036 库存商品&rdquo;。<br />Stock Input Account: 产品入库科目，产品入库时会计分录的贷方，借方是库存管理中库位设置时指定的科目。对于商业流通企业，通常是&ldquo;1042 在途物资&rdquo;，借方通常是&ldquo;1036 库存商品&rdquo;。<br />Sale Taxes: 产品销售时的税种。销售订单默认采用此处的税种计算税额。税种在财务模块中设置。<br />Purchase Taxes: 产品采购时的税种。采购订单默认采用此处的税种计算税额。税种在财务模块中设置。<br /><br /><span style="line-height: 1.5;">六、分析会计（Analytic Account）</span><br />分析会计（Analytic Account），有时候也叫管理会计（Management Account）、成本会计（Cost Account）。要理解分析会计，首先要理解，为什么要分析会计。例如，在财务会计上，和成本相关的一级科目主要有：销售成本和生产成本。如果要按部门计算销售成本，或者按产品类型计算生产成本。在财务会计上，这个要求的实现相当麻烦，这意味着在各个成本相关科目上都要增加很多以部门名、产品名为名称的二级、三级会计科目，科目增多了，意味着计算量也急剧增加。此类问题，需要用分析会计的方法解决。<br />分析会计解决问题的原理是，对于每一笔收入或支出的账务记录，都增加一个分析会计科目，表示收入或成本分配于该科目。分析会计科目可以是部门名（如按部门核算制造成本的情形）、产品名（如按产品分配成本或收入的情形）、客户名、项目名，等等。例如，在每张采购订单上记录以产品名称为名的分析科目，这样，系统就能自动记录，该笔采购成本应算到哪个产品。在每张制造订单上也记录分析科目（产品名），系统会自动将该张制造单的成本分配到该产品。<br />OpenERP分析会计实现成本核算的具体方法是，例如前述的销售订单，如果单子上记录有以产品名为名的分析科目，则采购订单对应的凭据（Invoice）确认时候，系统同时自动生成财务会计分录和分析会计分录，如下例：<br />财务会计分录&nbsp; &nbsp; &nbsp;金额&nbsp; &nbsp;| 分析会计&nbsp; &nbsp; 金额<br />借：原材料&nbsp; &nbsp; &nbsp; &nbsp;1000&nbsp; &nbsp;|&nbsp; 产品A&nbsp; &nbsp; &nbsp; -1000<br />&nbsp; 贷：应付账款&nbsp; &nbsp;1000&nbsp; &nbsp;|&nbsp; &nbsp;-&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; -<br /><br />在系统数据库中的动作是，系统在 account_move_line 数据表中增加两条记录，分别是财务会计分录的借方和贷方。同时在analytic_account_move_line 数据表中增加一条记录，是分析会计的&ldquo;产品A&nbsp; &nbsp;-1000&rdquo;，表示产品A上分配1000元费用，该记录和&ldquo;借：原材料&nbsp; &nbsp; &nbsp; &nbsp;1000&rdquo;互相关联。贷方&ldquo;贷：应付账款&nbsp; &nbsp;1000&rdquo;没有对应的分析会计记录。注意，分析会计分录不分借方、贷方，只记金额，如果是收入，金额记"+"，费用则记"-"。<br />如果每一笔采购订单都记录了对应产品，那么，如果要统计产品A的原材料成本，只要统计analytic_account_move_line 数据表中，分析科目为&ldquo;产品A&rdquo;，关联财务科目为&ldquo;原材料&rdquo;，且金额为负数的所有记录之金额和，即得一段时期产品A应分配的原材料成本。如果在制造单上也记录了以产品名为名的分析科目，则统计分析科目为&ldquo;产品A&rdquo;，关联财务科目为&ldquo;制造费用&rdquo;，且金额为负数的所有记录之金额和，即得一段时期产品A应分配的制造成本。<br /><br />再看看人力成本的分析。对于服务型企业，如软件开发公司、咨询企业、法律事务所等等，通常他们是以&ldquo;案子&rdquo;（Case or Project）进行收费。为了计量案子是否盈利，需要知道每个案子的成本。服务企业，案子的成本主要是人力成本。人力成本的计量有两个因素，一个是员工级别，一个是工作时间。员工级别可以用员工工资计量，如资深员工综合月工资是4万，每月工作时间150小时，则每小时成本是266元。<br />要求每个员工每天必须填写&ldquo;工作时间表（Time Sheet）&rdquo;，时间表上逐项记录该员工一天的工作时间安排，如&ldquo;案子A&nbsp; 工作时间3小时；案子B&nbsp; 工作时间2小时&rdquo;。这里案子A、案子B就是实现设置好的以案子名为名的分析会计科目，员工填写Time Sheet时候，从系统选择案子科目。如此，当Time Sheet确认时候，系统自动计算员工在每个案子上的成本（小时成本 * 小时数），并生成分析会计分录，关联到相应财务会计分录（管理费用 or 营业成本 等等）。<br />注：Time Sheet功能由HR模块提供。OpenERP中员工的小时工资的计算方法是，每个员工关联一个&ldquo;产品&rdquo;，不同级别员工的服务（如咨询），相当于出售不同价格的产品。为了有效使用Time Sheet，要预先设置好各级别员工对应的产品，以及以案子名为名的分析会计科目。分析会计科目可以分级，如，一级科目是部门名，部门名下再以案子名设置二级科目。</div>]]></description></item><item><title>CentOS实验十四：安装PostgreSQL</title><link>http://www.cnblogs.com/eastson/archive/2013/05/25/3098396.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 25 May 2013 03:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/25/3098396.html</guid><description><![CDATA[<p>CentOS 6.4当前软件源中的postgresql-server版本为8.4.13。</p>
<p>&nbsp;</p>
<p>1. 安装PostgreSQL Server：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">$</span><span style="color: #008000;"> yum groupinstall "PostgreSQL Database server"</span></pre>
</div>
<p>默认的安装目录是/var/lib/pgsql。安装过程中会创建postgres用户和群组。安装完成后可以将服务postgresql设置成自启动：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">$</span><span style="color: #008000;"> chkconfig postgresql on</span></pre>
</div>
<p>&nbsp;</p>
<p>2. 启动postgresql服务，在此之前需要先初始化：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ service postgresql initdb
Initializing database</span>:<span style="color: #000000;">                                     [  OK  ]

$ ls </span>/var/lib/pgsql/data/<span style="color: #000000;">
total </span><span style="color: #800000;">76</span><span style="color: #000000;">
drwx</span>------. <span style="color: #800000;">5</span> postgres postgres  <span style="color: #800000;">4096</span> May <span style="color: #800000;">25</span> <span style="color: #800000;">09</span>:<span style="color: #800000;">53</span><span style="color: #000000;"> base
drwx</span>------. <span style="color: #800000;">2</span> postgres postgres  <span style="color: #800000;">4096</span> May <span style="color: #800000;">25</span> <span style="color: #800000;">10</span>:<span style="color: #800000;">07</span><span style="color: #000000;"> global
drwx</span>------. <span style="color: #800000;">2</span> postgres postgres  <span style="color: #800000;">4096</span> May <span style="color: #800000;">25</span> <span style="color: #800000;">09</span>:<span style="color: #800000;">53</span><span style="color: #000000;"> pg_clog
</span>-rw-------. <span style="color: #800000;">1</span> postgres postgres  <span style="color: #800000;">3411</span> May <span style="color: #800000;">25</span> <span style="color: #800000;">09</span>:<span style="color: #800000;">53</span> pg_hba.<span style="color: #000000;">conf
</span>-rw-------. <span style="color: #800000;">1</span> postgres postgres  <span style="color: #800000;">1631</span> May <span style="color: #800000;">25</span> <span style="color: #800000;">09</span>:<span style="color: #800000;">53</span> pg_ident.<span style="color: #000000;">conf
drwx</span>------. <span style="color: #800000;">2</span> postgres postgres  <span style="color: #800000;">4096</span> May <span style="color: #800000;">25</span> <span style="color: #800000;">10</span>:<span style="color: #800000;">06</span><span style="color: #000000;"> pg_log
drwx</span>------. <span style="color: #800000;">4</span> postgres postgres  <span style="color: #800000;">4096</span> May <span style="color: #800000;">25</span> <span style="color: #800000;">09</span>:<span style="color: #800000;">53</span><span style="color: #000000;"> pg_multixact
drwx</span>------. <span style="color: #800000;">2</span> postgres postgres  <span style="color: #800000;">4096</span> May <span style="color: #800000;">25</span> <span style="color: #800000;">10</span>:<span style="color: #800000;">07</span><span style="color: #000000;"> pg_stat_tmp
drwx</span>------. <span style="color: #800000;">2</span> postgres postgres  <span style="color: #800000;">4096</span> May <span style="color: #800000;">25</span> <span style="color: #800000;">09</span>:<span style="color: #800000;">53</span><span style="color: #000000;"> pg_subtrans
drwx</span>------. <span style="color: #800000;">2</span> postgres postgres  <span style="color: #800000;">4096</span> May <span style="color: #800000;">25</span> <span style="color: #800000;">09</span>:<span style="color: #800000;">53</span><span style="color: #000000;"> pg_tblspc
drwx</span>------. <span style="color: #800000;">2</span> postgres postgres  <span style="color: #800000;">4096</span> May <span style="color: #800000;">25</span> <span style="color: #800000;">09</span>:<span style="color: #800000;">53</span><span style="color: #000000;"> pg_twophase
</span>-rw-------. <span style="color: #800000;">1</span> postgres postgres     <span style="color: #800000;">4</span> May <span style="color: #800000;">25</span> <span style="color: #800000;">09</span>:<span style="color: #800000;">53</span><span style="color: #000000;"> PG_VERSION
drwx</span>------. <span style="color: #800000;">3</span> postgres postgres  <span style="color: #800000;">4096</span> May <span style="color: #800000;">25</span> <span style="color: #800000;">09</span>:<span style="color: #800000;">53</span><span style="color: #000000;"> pg_xlog
</span>-rw-------. <span style="color: #800000;">1</span> postgres postgres <span style="color: #800000;">16886</span> May <span style="color: #800000;">25</span> <span style="color: #800000;">09</span>:<span style="color: #800000;">53</span> postgresql.<span style="color: #000000;">conf
</span>-rw-------. <span style="color: #800000;">1</span> postgres postgres    <span style="color: #800000;">57</span> May <span style="color: #800000;">25</span> <span style="color: #800000;">10</span>:<span style="color: #800000;">06</span> postmaster.<span style="color: #000000;">opts

$ service postgresql start
Starting postgresql service</span>:                               [  OK  ]</pre>
</div>
<p>&nbsp;</p>
<p>3. 修改postgresql.conf监听地址和端口：</p>
<div class="cnblogs_code">
<pre>$ cat /var/lib/pgsql/data/postgresql.<span style="color: #000000;">conf
</span>... ...
<span style="color: #008000;">#</span><span style="color: #008000;"> - Connection Settings -</span>
listen_addresses = <span style="color: #000000; font-weight: bold;">'</span><span style="color: #000000; font-weight: bold;">*</span><span style="color: #000000; font-weight: bold;">'</span>                <span style="color: #008000;">#</span><span style="color: #008000;"> what IP address(es) to listen on;
                    # comma-separated list of addresses;
                    # defaults to 'localhost', '*' = all
                    # (change requires restart)</span>
port = <span style="color: #800000;">5432</span>                <span style="color: #008000;">#</span><span style="color: #008000;"> (change requires restart)</span>
... ...</pre>
</div>
<p>&nbsp;</p>
<p>4. 修改<span style="line-height: 1.5;">pg_hba.conf，配置客户端连接权限。详细的pg_hba.conf配置方法参考《</span><a id="cb_post_title_url" class="postTitle2" style="line-height: 1.5;" href="http://www.cnblogs.com/hiloves/archive/2011/08/20/2147043.html" target="_blank">pg_hba.conf 文件简析</a><span style="line-height: 1.5;">》。</span></p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ cat /var/lib/pgsql/data/pg_hba</span>.<span style="color: #000000;">conf
</span><span style="color: #008000;">#</span><span style="color: #008000;"> TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD
# "local" is for Unix domain socket connections only</span>
<span style="color: #0000ff;">local</span><span style="color: #000000;">   all         all                               ident
</span><span style="color: #008000;">#</span><span style="color: #008000;"> IPv4 local connections:</span>
host    all         all         <span style="color: #800000;">127.0</span>.<span style="color: #800000;">0.1</span>/<span style="color: #800000;">32</span><span style="color: #000000;">          ident
</span><span style="color: #008000;">#</span><span style="color: #008000;"> IPv6 local connections:</span>
host    all         all         ::<span style="color: #800000;">1</span>/<span style="color: #800000;">128</span><span style="color: #000000;">               ident
host    all         all         </span><span style="color: #800000;">192.168</span>.<span style="color: #800000;">12.0</span>/<span style="color: #800000;">24</span><span style="color: #000000;">       md5</span></pre>
</div>
<p>&nbsp;</p>
<p>5. 切换到postgres用户，修改数据库默认角色postgres的密码（默认密码为空）：</p>
<div class="cnblogs_code">
<pre>$ su -<span style="color: #000000;"> postgres

$ psql
postgres</span>=<span style="color: #008000;">#</span><span style="color: #008000;"> \password postgres</span>
Enter new password:<span style="color: #000000;"> 
Enter it again</span>: </pre>
</div>
<p>&nbsp;</p>
<p>6. 设置完所有posgresql服务参数后，重新载入配置参数：</p>
<div class="cnblogs_code">
<pre>$ pg_ctl reload</pre>
</div>
<p>&nbsp;</p>
<p>7. 修改iptables规则，允许远程连接5432端口：</p>
<div class="cnblogs_code">
<pre>$ cat /etc/sysconfig/<span style="color: #000000;">iptables
</span><span style="color: #008000;">#</span><span style="color: #008000;"> Firewall configuration written by system-config-firewall
# Manual customization of this file is not recommended.</span>
*<span style="color: #000000;">filter
</span>:INPUT <span style="color: #0000ff;">ACCEPT</span> [<span style="color: #800000;">0</span>:<span style="color: #800000;">0</span><span style="color: #000000;">]
</span>:FORWARD <span style="color: #0000ff;">ACCEPT</span> [<span style="color: #800000;">0</span>:<span style="color: #800000;">0</span><span style="color: #000000;">]
</span>:OUTPUT <span style="color: #0000ff;">ACCEPT</span> [<span style="color: #800000;">0</span>:<span style="color: #800000;">0</span><span style="color: #000000;">]
</span>-A INPUT -m state --state ESTABLISHED,RELATED -j <span style="color: #0000ff;">ACCEPT</span>
-A INPUT -p icmp -j <span style="color: #0000ff;">ACCEPT</span>
-A INPUT -i lo -j <span style="color: #0000ff;">ACCEPT</span>
-A INPUT -m state --state NEW -m tcp -p tcp --dport <span style="color: #800000;">22</span> -j <span style="color: #0000ff;">ACCEPT</span>
-A INPUT -m state --state NEW -m tcp -p tcp --dport <span style="color: #800000;">5432</span> -j <span style="color: #0000ff;">ACCEPT</span>
-A INPUT -j REJECT --reject-with icmp-host-<span style="color: #000000;">prohibited
</span>-A FORWARD -j REJECT --reject-with icmp-host-<span style="color: #000000;">prohibited
COMMIT

$ service iptables restart</span></pre>
</div>
<p>&nbsp;</p>
<p>8. 最后，就可以在其它Windows客户端安装pgAdmin，使用postgres角色远程管理服务器了：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/25115236-655849f062d64beabb144aa327750502.png" alt="" /></p>]]></description></item><item><title>CentOS实验十三：安装桌面系统</title><link>http://www.cnblogs.com/eastson/archive/2013/05/24/3097289.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 24 May 2013 09:08:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/24/3097289.html</guid><description><![CDATA[<p><span>yum&nbsp;groupinstall&nbsp;"Desktop"</span></p>
<p><span><span>yum&nbsp;groupinstall&nbsp;"X&nbsp;Window&nbsp;System"</span></span>&nbsp;</p>
<p><span>yum&nbsp;groupinstall&nbsp;"Chinese&nbsp;Support"</span><span>&nbsp;</span></p>
<p>[注意] 安装minial centos时，如果默认选择的是英文,需要修改/etc/sysconfig/i18n，将LANG修改为<span>LANG="zh_CN.UTF-8"</span></p>
<p><span style="line-height: 1.5;">启动gnome：</span><span style="line-height: 1.5;">startx，</span><span style="line-height: 1.5;">然后按下Ctrl+Alt+F2。</span></p>
<p><span style="line-height: 1.5;">如果要自动启动gnome，则编辑/etc/inittab文件，将</span><span style="line-height: 1.5;">id:3:initdefault</span><span style="line-height: 1.5;">修改为</span><span style="line-height: 1.5;">id:5:initdefault，</span><span style="line-height: 1.5;">重启后生效。</span></p>]]></description></item><item><title>Python包管理工具pip</title><link>http://www.cnblogs.com/eastson/archive/2013/05/24/3096403.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 24 May 2013 03:01:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/24/3096403.html</guid><description><![CDATA[<p>安装完<a href="http://www.cnblogs.com/eastson/archive/2013/05/17/3083102.html" target="_blank">easy_install</a>后再接着可以使用easy_install安装pip：</p>
<div class="cnblogs_code">
<pre>easy_install pip</pre>
</div>
<p>&nbsp;或者参考<a href="http://www.pip-installer.org/en/latest/installing.html" target="_blank">PIP&nbsp;Installation</a>：</p>
<div class="cnblogs_code">
<pre>$ curl -O https:<span style="color: #008000;">//</span><span style="color: #008000;">raw.github.com/pypa/pip/master/contrib/get-pip.py</span>
$ [<span style="color: #0000ff;">sudo</span>] python get-pip.py</pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>培训模块（1）：基本框架/教师管理</title><link>http://www.cnblogs.com/eastson/archive/2013/05/22/3090266.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 22 May 2013 08:13:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/22/3090266.html</guid><description><![CDATA[<h3>需求</h3>
<p>1. 完成培训模块的基本框架，安装模块到OpenERP系统。</p>
<p>2. 能够管理培训教师。教师对象包含信息：教师名称，联系电话。</p>
<p>&nbsp;</p>
<h3>模块框架</h3>
<p>模块名为east_training，<span>然后它下面有四个文件：</span></p>
<div class="cnblogs_code">
<pre>|--<span style="color: #000000;">east_training
     </span>|--<span style="color: #800080;">__init__</span><span style="color: #000000;">.py
     </span>|--<span style="color: #800080;">__openerp__</span><span style="color: #000000;">.py
     </span>|--<span style="color: #000000;">teacher.py
     </span>|--module.xml</pre>
</div>
<p>&nbsp;</p>
<h3 id="__init__.py">__init__.py</h3>
<p><span>__init__.py文件是Python 的模块描述，因为OpenERP模块也是一个普通的Python模块。</span>&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;"> -*- coding: utf-8 -*-</span>
<span style="color: #0000ff;">import</span> teacher</pre>
</div>
<p>&nbsp;</p>
<h3>__openerp__.py</h3>
<p><span>__openerp__.py文件（在6.0之前的版本也叫__terp__.py）包含一个Python的字典声明这个模块的相关信息：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;"> -*- encoding: utf-8 -*-</span>
<span style="color: #000000;">{
    </span><span style="color: #800000;">"</span><span style="color: #800000;">name</span><span style="color: #800000;">"</span> : <span style="color: #800000;">"</span><span style="color: #800000;">East Training System</span><span style="color: #800000;">"</span>,            <span style="color: #008000;">#</span><span style="color: #008000;">模块名称</span>
    <span style="color: #800000;">"</span><span style="color: #800000;">author</span><span style="color: #800000;">"</span> : <span style="color: #800000;">"</span><span style="color: #800000;">eastson</span><span style="color: #800000;">"</span>,                       <span style="color: #008000;">#</span><span style="color: #008000;">作者</span>
    <span style="color: #800000;">"</span><span style="color: #800000;">version</span><span style="color: #800000;">"</span> : <span style="color: #800000;">"</span><span style="color: #800000;">0.17</span><span style="color: #800000;">"</span>,                         <span style="color: #008000;">#</span><span style="color: #008000;">版本</span>
    <span style="color: #800000;">"</span><span style="color: #800000;">depends</span><span style="color: #800000;">"</span> : [<span style="color: #800000;">"</span><span style="color: #800000;">base</span><span style="color: #800000;">"</span>],                       <span style="color: #008000;">#</span><span style="color: #008000;">依赖模块</span>
    <span style="color: #800000;">"</span><span style="color: #800000;">category</span><span style="color: #800000;">"</span> : <span style="color: #800000;">"</span><span style="color: #800000;">Generic Modules/Others</span><span style="color: #800000;">"</span>,      <span style="color: #008000;">#</span><span style="color: #008000;">模块类型</span>
    <span style="color: #800000;">"</span><span style="color: #800000;">website</span><span style="color: #800000;">"</span>: <span style="color: #800000;">"</span><span style="color: #800000;">http://www.cnblogs.com/eastson</span><span style="color: #800000;">"</span>,<span style="color: #008000;">#</span><span style="color: #008000;">网址</span>
    <span style="color: #800000;">"</span><span style="color: #800000;">update_xml</span><span style="color: #800000;">"</span> : [<span style="color: #800000;">"</span><span style="color: #800000;">module.xml</span><span style="color: #800000;">"</span>],              <span style="color: #008000;">#</span><span style="color: #008000;">模块更新的时候会读入的文件</span>
    <span style="color: #800000;">"</span><span style="color: #800000;">active</span><span style="color: #800000;">"</span><span style="color: #000000;">: False,
    </span><span style="color: #800000;">"</span><span style="color: #800000;">installable</span><span style="color: #800000;">"</span>: True                         <span style="color: #008000;">#</span><span style="color: #008000;">可否安装</span>
}</pre>
</div>
<p>&nbsp;</p>
<h3>teacher.py</h3>
<p>培训教师对象定义文件，继承自osv.osv：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;"> -*- encoding: utf-8 -*-</span>
<span style="color: #0000ff;">from</span> osv <span style="color: #0000ff;">import</span><span style="color: #000000;"> osv, fields

</span><span style="color: #0000ff;">class</span><span style="color: #000000;"> east_training_teacher(osv.osv):
    _name </span>= <span style="color: #800000;">'</span><span style="color: #800000;">east_training.teacher</span><span style="color: #800000;">'</span><span style="color: #000000;">
    _columns </span>=<span style="color: #000000;"> {
        </span><span style="color: #800000;">'</span><span style="color: #800000;">name</span><span style="color: #800000;">'</span>: fields.char(<span style="color: #800000;">'</span><span style="color: #800000;">教师名称</span><span style="color: #800000;">'</span>, size=64<span style="color: #000000;">),
        </span><span style="color: #800000;">'</span><span style="color: #800000;">phone</span><span style="color: #800000;">'</span>: fields.char(<span style="color: #800000;">'</span><span style="color: #800000;">电话号码</span><span style="color: #800000;">'</span>, size=32<span style="color: #000000;">)
    }
east_training_teacher()</span></pre>
</div>
<p>&nbsp;</p>
<h3>module.xml</h3>
<p>模块定义文件，诸如菜单项，树形视图，表单视图等都在这里定义。可以是任意文件名，也可以分割成多个文件，对应到__openerp__.py的update_xml项：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="utf-8"</span><span style="color: #0000ff;">?&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">openerp</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">data</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">menuitem </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="EAST"</span><span style="color: #ff0000;"> id</span><span style="color: #0000ff;">="menu_east_training"</span><span style="color: #0000ff;">/&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">menuitem </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="设置"</span><span style="color: #ff0000;"> id</span><span style="color: #0000ff;">="menu_east_training_settings"</span><span style="color: #ff0000;"> parent</span><span style="color: #0000ff;">="menu_east_training"</span><span style="color: #0000ff;">/&gt;</span>

        <span style="color: #008000;">&lt;!--</span><span style="color: #008000;">培训/设置/教师</span><span style="color: #008000;">--&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">record </span><span style="color: #ff0000;">model</span><span style="color: #0000ff;">="ir.actions.act_window"</span><span style="color: #ff0000;"> id</span><span style="color: #0000ff;">="action_east_training_teacher"</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">field </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="res_model"</span><span style="color: #0000ff;">&gt;</span>east_training.teacher<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">field</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">record</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">menuitem </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="教师"</span><span style="color: #ff0000;"> id</span><span style="color: #0000ff;">="menu_east_training_settings_teacher"</span><span style="color: #ff0000;"> parent</span><span style="color: #0000ff;">="menu_east_training_settings"</span><span style="color: #ff0000;"> action</span><span style="color: #0000ff;">="action_east_training_teacher"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">data</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">openerp</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><span style="line-height: 1.5;">&nbsp;</span></p>
<h3>模块安装</h3>
<p>1. 首先要保证当前界面为扩展模式，否则找不到模块管理相关的菜单。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/22160152-6f1f9b49dc5f41b98002e4a809f551ed.png" alt="" /></p>
<p>2. 因为east_training是新增的模块，需要执行模块列表更新才能在模块列表中找到。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/22160309-2732d1a664874c9187f0714a52b9578c.png" alt="" /></p>
<p>3. 在模块列表中找到新增的模块east_training：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/22160430-adc0e998cf1345aeb1a80f2e2641b915.png" alt="" /></p>
<p>4. 点击east_training，查看该模块的详细信息。确认无误后点击Install安装该模块。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/22160535-ee2c86ec09474a35ae0b05d7f1573170.png" alt="" /></p>
<p>5. 点击更新按钮执行模块安装：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/22160809-f2bfd900069b422ea464bf755cf58b5c.png" alt="" /></p>
<p>6. 模块安装成功，新增的模块就会出现在顶层菜单:</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/22160958-0074d838678442988187a2536d0c15b3.png" alt="" /></p>
<p>&nbsp;</p>
<p><strong>提示：</strong></p>
<p>1. 模块安装成功后，默认的在后台数据库创建了和对象类名相同的数据表，同时还创建了一些系统字段：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/22161748-0bb835922081479183bd85a3ce5b30c8.png" alt="" /></p>
<p>2. 模块卸载后，创建的数据库表不会被删除，输入的数据也会保留。再次安装时也会保留原先的数据。</p>]]></description></item><item><title>Python相关文章索引</title><link>http://www.cnblogs.com/eastson/archive/2013/05/18/3084907.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 17 May 2013 23:59:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/18/3084907.html</guid><description><![CDATA[<p>1. <a href="http://www.cnblogs.com/itech/archive/2011/12/31/2308697.html" target="_blank">简单的HttpServer</a></p>
<p>2.&nbsp;<a href="http://my.oschina.net/leejun2005/blog/71444" target="_blank">轻量级HTTPServer实现文件上传下载</a></p>]]></description></item><item><title>将OpenERP日志输出到控制台</title><link>http://www.cnblogs.com/eastson/archive/2013/05/17/3083947.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 17 May 2013 08:42:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/17/3083947.html</guid><description><![CDATA[<p>OpenERP Server的日志默认输出到openobject-server.log，这在使用Eclipse调试时不是很方便。日志如何能输出到控制台呢？修改配置文件openobject-server.conf，将syslog设置成True，logfile设置成空,，这样就可以了。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/17164327-9a47fa7eb5614f279f5c6c619e2ecd5b.png" alt="" /></p>]]></description></item><item><title>解决OpenERP依赖库问题</title><link>http://www.cnblogs.com/eastson/archive/2013/05/17/3083231.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 17 May 2013 02:28:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/17/3083231.html</guid><description><![CDATA[<p>下载<a href="http://www.cnblogs.com/eastson/archive/2013/05/10/3071422.html" target="_blank">Server源码</a>后启动openobject-server.py，经常会碰到这库那库没有的问题，有些可以通过<a href="http://www.cnblogs.com/eastson/archive/2013/05/17/3083102.html" target="_blank">easy_install</a>安装，有些也确实不好找。有一个简单的解决方法：OpenERP Server的安装版里面有一个library.zip的文件，里面包括了所有的依赖库，可以拿过来直接使用。</p>
<p>&nbsp;</p>
<p>可以将library.zip解压缩到C:\Python25\Lib\site-packages，也可以将library.zip直接添加到PYTHONPATH环境变量：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/17102659-a49a0dd8240b4119b2e225e6d2766ad3.png" alt="" /></p>]]></description></item><item><title>Windows下安装easy_install</title><link>http://www.cnblogs.com/eastson/archive/2013/05/17/3083102.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 17 May 2013 01:22:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/17/3083102.html</guid><description><![CDATA[<p><code>找到正确的<a href="https://pypi.python.org/pypi/setuptools#downloads" target="_blank">setuptools</a>版本进行下载。32位系统可以下载setuptools-0.6c11.win32-py2.7.exe，64位系统必须使用<a href="http://peak.telecommunity.com/dist/ez_setup.py" target="_blank">ez_setup.py</a>进行安装：下载ez_setup.py后，在cmd下执行 python ez_setup.py，即可自动安装setuptools。目前64位系统没有直接的exe安装版本。<br /><br /></code></p>
<p><code>下载完成后双击执行，即可将<span>easy_install.exe安装到C:\Python25\S</span>cripts目录，然后将该目录添加到系统环境变量中：</code></p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/17092327-9ae3d6ee21ea4c3ea74721688b8c8caf.png" alt="" /></p>]]></description></item><item><title>设置OpenERP开发环境Eclipse</title><link>http://www.cnblogs.com/eastson/archive/2013/05/16/3072552.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 16 May 2013 09:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/16/3072552.html</guid><description><![CDATA[<p>Steps to Setup openERP Development environment in eclipse:</p>
<p>1)Install Eclipse<br />2)Open eclipse<br />3)Goto Help-&gt;Install new software-&gt;Add site<br />4)Enter pydev as name and http://pydev.org/updates as location<br />5)Install python 2.5<br />6)Goto Window-&gt;Preferences-&gt;Pydev-&gt;Interpreter<br />7)Click on new and Browse Python.exe<br />8)Create new pyDev project<br />10)Browse openERP Server source code for Project contents<br />11)Select 2.5 Grammar Version<br />12)Choose Interpreter Created in step 6.<br />13)Configure openerp-server.conf file<br />14)run openerp-sever.py in debug mode</p>
<p>&nbsp;</p>
<p><strong>OpenERP运行所需要的依赖库请参考：<a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/archive/2013/05/17/3083231.html" target="_blank">解决OpenERP依赖库问题</a></strong></p>]]></description></item><item><title>用TcpTrace监控OpenERP客户端和服务器之间的通信</title><link>http://www.cnblogs.com/eastson/archive/2013/05/16/3082131.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 16 May 2013 08:54:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/16/3082131.html</guid><description><![CDATA[<p><span style="line-height: 1.5;">OpenERP客户端和服务器通信有三种协议可以使用：XML-RPC（8069），XML-RPC Secure（8071）和NET-RPC（8070）。这些端口都是默认的，可以通过openobject-server.conf修改。通过<a href="http://www.cnblogs.com/eastson/archive/2012/10/22/2733920.html" target="_blank">TcpTrace</a>在中间做一个端口转发就可以监控整个的通信过程。</span></p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/16165049-f722d10a51de4742a04dabd839465cbb.png" alt="" /></p>
<p>&nbsp;</p>
<p>客户端登录时需要修改协议端口：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/16165152-662ff69e29db49838feebc3aee38c857.png" alt="" /></p>
<p>&nbsp;</p>
<p>监控结果（客服端获取服务器版本的一个调用）：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/16165336-8ad8242de0764d13a7bdc186449efad0.png" alt="" /></p>]]></description></item><item><title>文本编辑器 Sublime Text</title><link>http://www.cnblogs.com/eastson/archive/2013/05/14/3077112.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 14 May 2013 00:59:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/14/3077112.html</guid><description><![CDATA[<p><a href="http://www.xiazaiba.com/html/5137.html" target="_blank"><strong>Sublime Text 2</strong></a>是一个轻量、简洁、高效、跨平台的编辑器。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/14085913-a9719aeca62246b38491c72ae2244be8.png" alt="" /></p>
<p><strong>Sublime Text 2</strong>&nbsp;的特色功能：</p>
<ul>
<li>良好的扩展功能，官方称之为安装包(Package)。</li>
<li>右边没有滚动条，取而代之的是代码缩略图，这个功能非常赞</li>
<li>强大的快捷命令&ldquo;可以实时搜索到相应的命令、选项、snippet 和 syntex， 按下回车就可以直接执行，减少了查找的麻烦。&rdquo;</li>
<li>即时的文件切换。</li>
<li>随心所欲的跳转到任意文件的任意位置。</li>
<li>多重选择(Multi-Selection)功能允许在页面中同时存在多个光标。</li>
<li>支持 VIM 模式</li>
<li>支持宏，简单地说就是把操作录制下来或者自己编写命令，然后播放刚才录制的操作或者命令。</li>
<li>更新非常勤快</li>
</ul>]]></description></item><item><title>源码运行OpenERP</title><link>http://www.cnblogs.com/eastson/archive/2013/05/11/3072603.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 11 May 2013 04:10:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/11/3072603.html</guid><description><![CDATA[<p><span>从下面几个地方下载OpenERP必需的依赖库：</span></p>
<p><span>a)&nbsp;</span><a href="http://bazaar.launchpad.net/~openerp/openerp/win-installer-trunk/files/head%3A/dependencies/">http://bazaar.launchpad.net/~openerp/openerp/win-installer-trunk/files/head%3A/dependencies/<br /></a><span>b)&nbsp;</span><a href="http://pyyaml.org/download/pyyaml/PyYAML-3.09.win32-py2.5.exe">http://pyyaml.org/download/pyyaml/PyYAML-3.09.win32-py2.5.exe<br /></a><span>c)&nbsp;</span><a href="http://ftp.edgewall.com/pub/babel/Babel-0.9.4.tar.gz">http://ftp.edgewall.com/pub/babel/Babel-0.9.4.tar.gz<br /></a><span>d)&nbsp;</span><a href="http://download.cherrypy.org/cherrypy/3.1.2/CherryPy-3.1.2.tar.gz">http://download.cherrypy.org/cherrypy/3.1.2/CherryPy-3.1.2.tar.gz<br /></a><span>e)&nbsp;</span><a href="http://pypi.python.org/packages/source/s/simplejson/simplejson-2.0.9.tar.gz">http://pypi.python.org/packages/source/s/simplejson/simplejson-2.0.9.tar.gz<br /></a><span>f)&nbsp;</span><a href="http://pypi.python.org/packages/source/F/FormEncode/FormEncode-1.2.2.tar.gz">http://pypi.python.org/packages/source/F/FormEncode/FormEncode-1.2.2.tar.gz</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>python openobject-server.py</p>]]></description></item><item><title>制作OpenERP Windows安装程序</title><link>http://www.cnblogs.com/eastson/archive/2013/05/11/3072459.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 11 May 2013 02:19:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/11/3072459.html</guid><description><![CDATA[<p>Launchpad.net有一个制作OpenERP&nbsp;Windows安装程序的项目<a href="http://bazaar.launchpad.net/~openerp/openerp/win-installer-trunk/files" target="_blank">win-installer-trunk</a>：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/11101450-0c18230bb09748a980055a3244813d7e.png" alt="" /></p>
<p>&nbsp;</p>
<p>该项目doc/INSTALL文件详细说明了安装程序的制作过程：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">OpenERP Quick Installation Guide
</span>================================

1<span style="color: #000000;">. Install theses packages
</span>--------------------------<span style="color: #000000;">
   nsis</span>-2.40-<span style="color: #000000;">setup.exe
   graphviz</span>-2.20.2<span style="color: #000000;">.exe
   
   python</span>-2.5.2<span style="color: #000000;">.msi
   egenix</span>-mx-base-3.1.1.win32-py2.5<span style="color: #000000;">.msi
   PyXML</span>-0.8.4.win32-py2.5<span style="color: #000000;">.exe
   libxml2</span>-python-2.7.1.win32-py2.5<span style="color: #000000;">.exe
   lxml</span>-2.1.2.win32-py2.5<span style="color: #000000;">.exe
   matplotlib</span>-0.98.3.win32-py2.5<span style="color: #000000;">.exe
   numpy</span>-1.1.1-win32-superpack-python2.5<span style="color: #000000;">.exe
   PIL</span>-1.1.6.win32-py2.5<span style="color: #000000;">.exe
   PyChart</span>-1.39<span style="color: #000000;">.win32.exe ( created by Stephane Wirtel )
   ReportLab</span>-2.2.win32-py2.5<span style="color: #000000;">.exe
   vobject</span>-0.7.1<span style="color: #000000;">.win32.exe ( created by Stephane Wirtel )
   
   pygobject</span>-2.14.1-1.win32-py2.5<span style="color: #000000;">.exe
   pygtk</span>-2.12.1-2.win32-py2.5<span style="color: #000000;">.exe
   pycairo</span>-1.4.12-1.win32-py2.5<span style="color: #000000;">.exe
   gtk</span>-2.12.9-win32-2<span style="color: #000000;">.exe
   gtk</span>-dev-2.12.9-win32-2<span style="color: #000000;">.exe
   
   pydot</span>-1.0.2<span style="color: #000000;">.win32.exe ( created by Stephane Wirtel )
   pyparsing</span>-1.5<span style="color: #000000;">.0.win32.exe
   pytz</span>-<span style="color: #000000;">2008i.win32.exe ( created by Stephane Wirtel )
   pywin32</span>-212.win32-py2.5<span style="color: #000000;">.exe
   Mako</span>-0.3.1<span style="color: #000000;">.win32.exe (created by Stephane Wirtel)

   py2exe</span>-0.6.8.win32-py2.5<span style="color: #000000;">.exe
   
   hippo</span>-canvas-0.3.0-win32.zip - Uncompess this archive, <span style="color: #0000ff;">and</span> copy/paste the files <span style="color: #800000;">"</span><span style="color: #800000;">libhippocanvas-1-0.dll</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">and</span> <span style="color: #800000;">"</span><span style="color: #800000;">hippo.pyd</span><span style="color: #800000;">"</span><span style="color: #000000;"> into C:\Python25\DLLs\
   
   msvcp71.zip </span>- Uncompress this archive <span style="color: #0000ff;">and</span><span style="color: #000000;"> copy the msvcp71.dll into c:\WINDOWS\SYSTEM32
   
   psycopg2</span>-2.0.8.win32-py2.5-pg8.3.4-<span style="color: #000000;">release.exe

   you can install the setuptools package:
   setuptools</span>-0.6c9.win32-py2.5<span style="color: #000000;">.exe

</span>2<span style="color: #000000;">. How to get the sources
</span>-------------------------<span style="color: #000000;">
   Firstly, create a directory to store the files
   c:</span>&gt;<span style="color: #000000;"> mkdir c:\openerp
   c:</span>&gt;<span style="color: #000000;">cd openerp
   c:\openerp</span>&gt;<span style="color: #000000;"> mkdir trunk
   c:\openerp</span>&gt;<span style="color: #000000;"> cd trunk
   c:\openerp\trunk</span>&gt; bzr clone lp:~openerp/openobject-server/<span style="color: #000000;">trunk server
   c:\openerp\trunk</span>&gt; bzr clone lp:~openerp/openobject-client/<span style="color: #000000;">trunk client
   c:\openerp\trunk</span>&gt; bzr clone lp:~openerp/openobject-addons/<span style="color: #000000;">trunk addons

</span>3<span style="color: #000000;">. Prepare the ground
</span>---------------------<span style="color: #000000;">
   Copy all addons into the addons directory of the server, to include these addons </span><span style="color: #0000ff;">in</span><span style="color: #000000;"> the archive
   c:\openerp\trunk</span>&gt; xcopy addons\* server\bin\addons -<span style="color: #000000;">E

</span>4<span style="color: #000000;">. Package the server
</span>---------------------<span style="color: #000000;">
   c:\openerp\trunk</span>&gt;<span style="color: #000000;"> cd server
   c:\openerp\trunk\server</span>&gt;<span style="color: #000000;"> python setup.py py2exe
   c:\openerp\trunk\server</span>&gt;<span style="color: #000000;"> cd win32
   c:\openerp\trunk\server\win32</span>&gt;<span style="color: #000000;"> python setup.py py2exe
   c:\openerp\trunk\server\win32</span>&gt;<span style="color: #000000;"> cd ..
   c:\openerp\trunk\server</span>&gt; makensis /DVERSION=5.0.0-alpha openerp-server-<span style="color: #000000;">installer.nsi

   After this instruction, you will get a new file openerp</span>-server-setup-5.0.0-<span style="color: #000000;">alpha.exe

</span>5<span style="color: #000000;">. Package the client
</span>---------------------<span style="color: #000000;">
   c:\openerp\trunk</span>&gt;<span style="color: #000000;"> cd client
   c:\openerp\trunk\client</span>&gt;<span style="color: #000000;"> python setup.py py2exe
   c:\openerp\trunk\client</span>&gt; makensis /DVERSION=5.0.0-alpha openerp-client-<span style="color: #000000;">installer.nsi

   After this instruction, you will get a new file openerp</span>-client-setup-5.0.0-<span style="color: #000000;">alpha.exe

</span>6<span style="color: #000000;">. Package the AllInOne
</span>-----------------------<span style="color: #000000;">

   You will find the make.bat file, so you can use this script to package the last verison of OpenERP
   make.bat title_of_build version

   ex: make.bat openerp_5_0_7 </span>5.0.7</pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>Windows XP下获取OpenERP源码</title><link>http://www.cnblogs.com/eastson/archive/2013/05/10/3071422.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 10 May 2013 08:25:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/10/3071422.html</guid><description><![CDATA[<p>OpenERP的源码存放在 Launchpad 网站上，要使用 Bazzar 才能获取。所以必须先安装Bazzar。</p>
<p>&nbsp;</p>
<h3>如何找到OpenERP下载网址？</h3>
<p>Launchpad有一个openobject的项目，是OpenERP有关项目的汇总，这里我们以openobject-server为例：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/10161104-855381f36db3445db199f76d98549dac.png" alt="" /></p>
<p>打开openobject-server项目网址https://launchpad.net/openobject-server，会发现当前有好几个分支(branch， 在lanuchpad也叫serie)。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/10161400-f4a8916cf1df4424a4fc01eb406c881f.png" alt="" /></p>
<p>点击需要的分支，这里以6.0为例：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/10161815-07528567754d49e1b1a128b5494ad5a7.png" alt="" /></p>
<p>上图中红色框就是下载需要执行的命令，网址也就是lp:openobject-server/6.0。</p>
<p>&nbsp;</p>
<h3>如何下载OpenERP源码？</h3>
<p>创建本地目录C:\OpenERP\openobject-server用来保存下载的源码。然后进入该目录，执行bzr branch命令就行了：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/10162459-e037f32ecfb7476295bb7f5f578ffd58.png" alt="" /></p>]]></description></item><item><title>关于OpenERP客户端字体问题的一点心得</title><link>http://www.cnblogs.com/eastson/archive/2013/05/10/3071165.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 10 May 2013 06:41:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/10/3071165.html</guid><description><![CDATA[<p><span>客户端缺省情况下运行时，当然是很难看，因为没有使用正常的汉字字体来显示。</span><span>因为OpenERP客户端UI是基于GTK的，所以修改OpenERP客户端字体其实是修改GTK里汉字字体的显示。</span><br /><br /><span>GTK下相关的两个配置文件一个是etc\gtk-2.0\gtkrc，一个是etc\pango\pango.aliases。</span><br /><span>对于中文操作系统下，我们可以不用直接修改gtkrc，而是以之为蓝本，新建一个文件，其名称为gtkrc.zh_CN。</span><span>其内容大致如下：</span></p>
<div class="cnblogs_code">
<pre>gtk-theme-name = <span style="color: #800000;">"</span><span style="color: #800000;">MS-Windows</span><span style="color: #800000;">"</span><span style="color: #000000;">
gtk</span>-icon-theme-name = <span style="color: #800000;">"</span><span style="color: #800000;">Tango</span><span style="color: #800000;">"</span><span style="color: #000000;">
gtk</span>-fallback-icon-theme = <span style="color: #800000;">"</span><span style="color: #800000;">hicolor</span><span style="color: #800000;">"</span><span style="color: #000000;">
gtk</span>-alternative-button-order = 1<span style="color: #000000;">
gtk</span>-alternative-sort-arrows = 1<span style="color: #000000;">
gtk</span>-auto-mnemonics = 1<span style="color: #000000;">
gtk</span>-show-input-method-menu =<span style="color: #000000;"> 0
gtk</span>-show-unicode-menu =<span style="color: #000000;"> 0


style </span><span style="color: #800000;">"</span><span style="color: #800000;">user-font</span><span style="color: #800000;">"</span><span style="color: #000000;"> {
  font_name </span>= <span style="color: #800000;">"</span><span style="color: #800000;">serif 10</span><span style="color: #800000;">"</span><span style="color: #000000;">
}

widget_class </span><span style="color: #800000;">"</span><span style="color: #800000;">*</span><span style="color: #800000;">"</span> style <span style="color: #800000;">"</span><span style="color: #800000;">user-font</span><span style="color: #800000;">"</span><span style="color: #000000;">
widget </span><span style="color: #800000;">"</span><span style="color: #800000;">*</span><span style="color: #800000;">"</span> style <span style="color: #800000;">"</span><span style="color: #800000;">user-font</span><span style="color: #800000;">"</span><span style="color: #000000;">

gtk</span>-font-name=<span style="color: #800000;">"</span><span style="color: #800000;">SimSun 10</span><span style="color: #800000;">"</span></pre>
</div>
<p>&nbsp;</p>
<p><span style="line-height: 1.5;">这里的自定义字体风格并没有使用什么网上流行的写法，即类似这样的：</span><a class="codeoperation" href="http://www.cnblogs.com/eastson/admin/"><br /></a></p>
<div class="cnblogs_code">
<pre>style <span style="color: #800000;">"</span><span style="color: #800000;">user-font</span><span style="color: #800000;">"</span><span style="color: #000000;"> {
  font_name </span>= <span style="color: #800000;">"</span><span style="color: #800000;">simsun 10</span><span style="color: #800000;">"</span><span style="color: #000000;">
}</span></pre>
</div>
<div class="block_code">
<p><span style="font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 1.5;">为什么，这是为了显示斜体字时系统不会出现类似这样的警告信息：</span><span style="font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 1.5;"><br /></span></p>
<div class="cnblogs_code">
<pre>PangoWarning: couldn<span style="color: #800000;">'</span><span style="color: #800000;">t load font "SimSun Italic Not-Rotated 10", falling back to "Sans Italic Not-Rotated 10", expect ugly output.</span></pre>
</div>
</div>
<p>&nbsp;</p>
<p><span>那么中文怎么能用serif 呢？</span><span>这就要靠pango.aliases里对字体集的定义进行处理。</span><span>在pango.aliases里，找到serif字体集，修改成如下内容：</span></p>
<div class="cnblogs_code">
<pre>serif  = <span style="color: #800000;">"</span><span style="color: #800000;">times new roman,angsana new,Microsoft YaHei,simsun,mingliu,gulimche,ms gothic,kartika,latha,mangal,raavi</span><span style="color: #800000;">"</span></pre>
</div>
<div class="block_code">
<p><span style="font-family: verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 1.5;">这样英文或斜体就使用英文字体，中文按&ldquo;雅黑、宋体&rdquo;的顺序来使用。</span><code class="undefined"></code></p>
</div>
<p><br /><span>有一点要提醒的是，缺省的pango.aliases中，mingliu全部是在simsun前，这导致Openerp客户端中的汉字很多看起来是繁体字，所以大家可以把所有的simsun放到mingliu前。</span><br /><br /></p>
<p><span>参考：</span></p>
<p><a href="http://shine-it.net/index.php?topic=4250.0;prev_next=next" target="_blank"><span><span>关于OpenERP客户端字体问题的一点心得</span></span></a></p>
<p><a href="http://mosir.org/html/y2012/gtk-chinese-char-font-in-windows.html" target="_blank">Windows下GTK中文显示问题</a></p>]]></description></item><item><title>Openbravo 3.0安装过程简述</title><link>http://www.cnblogs.com/eastson/archive/2013/05/09/3068309.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 09 May 2013 04:02:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/09/3068309.html</guid><description><![CDATA[<p>完整的安装说明请参考&nbsp;<a href="http://wiki.openbravo.com/wiki/Installation/Custom">http://wiki.openbravo.com/wiki/Installation/Custom</a>&nbsp;.</p>
<p>&nbsp;</p>
<p>1. 安装<a href="http://www.enterprisedb.com/products-services-training/pgdownload#windows">Postgres数据库</a>。这里使用的是Postgres 9.1，安装完成后需要再额外安装uuid-ossp扩展。参考&nbsp;<a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/archive/2013/05/08/3066881.html">Installing "uuid-ossp" library in Postgres 9.1</a>&nbsp;.</p>
<p>2. 安装<a href="http://www.cr173.com/soft/14285.html">JDK</a>。Operbravo现在支持Sun JDK 1.6。设置JAVA环境变量：</p>
<div class="cnblogs_code">
<pre>JAVA_HOME=<span style="color: #800000;">"</span><span style="color: #800000;">C:\Program Files\Java\jdk1.6.0_43</span><span style="color: #800000;">"</span><span style="color: #000000;">
PATH</span>=%PATH%;%JAVA_HOME%\bin</pre>
</div>
<p>3. 安装<a href="http://tomcat.apache.org/index.html">Tomcat</a>，7.0暂不支持，6.0就可以，注意用tar不要用Installer，Tomcat安装路径中不要有空格。设置CATALINA环境变量：</p>
<div class="cnblogs_code">
<pre>CATALINA_HOME=C:\apache-tomcat-<span style="color: #800080;">6.0</span>.<span style="color: #800080;">29</span><span style="color: #000000;">
CATALINA_BASE</span>=C:\apache-tomcat-<span style="color: #800080;">6.0</span>.<span style="color: #800080;">29</span><span style="color: #000000;">
CATALINA_OPTS</span>=-server -Djava.awt.headless=<span style="color: #0000ff;">true</span> -Xms64M -Xmx512M -XX:MaxPermSize=<span style="color: #000000;">256M
PATH</span>=%PATH%;%CATALINA_HOME%\bin</pre>
</div>
<p><span style="text-align: left; text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 12px/16px Verdana, Arial, sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;">Copy the<span class="Apple-converted-space">&nbsp;</span></span><em style="text-align: left; line-height: 16px; text-transform: none; background-color: #ffffff; font-variant: normal; text-indent: 0px; font-family: Verdana, Arial, sans-serif; white-space: normal; letter-spacing: normal; color: #000000; font-size: 12px; font-weight: normal; word-spacing: 0px; -webkit-text-stroke-width: 0px;">C:\Java\jdk1.6.0_&lt;version&gt;\bin\lib\tools.jar</em><span style="text-align: left; text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 12px/16px Verdana, Arial, sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><span class="Apple-converted-space">&nbsp;</span>file from your Sun JDK installation to<span class="Apple-converted-space">&nbsp;</span></span><em style="text-align: left; line-height: 16px; text-transform: none; background-color: #ffffff; font-variant: normal; text-indent: 0px; font-family: Verdana, Arial, sans-serif; white-space: normal; letter-spacing: normal; color: #000000; font-size: 12px; font-weight: normal; word-spacing: 0px; -webkit-text-stroke-width: 0px;">C:\Apache Software Foundation\Tomcat 6.0\lib\</em>：</p>
<div class="cnblogs_code">
<pre>COPY <span style="color: #800000;">"</span><span style="color: #800000;">C:\Program Files\Java\jdk1.6.0_43\lib\tools.jar</span><span style="color: #800000;">"</span> <span style="color: #800000;">"</span><span style="color: #800000;">C:\apache-tomcat-6.0.29\lib</span><span style="color: #800000;">"</span></pre>
</div>
<p><span style="text-align: left; text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 12px/16px Verdana, Arial, sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><em style="text-align: left; line-height: 16px; text-transform: none; background-color: #ffffff; font-variant: normal; text-indent: 0px; font-family: Verdana, Arial, sans-serif; white-space: normal; letter-spacing: normal; color: #000000; font-size: 12px; font-weight: normal; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><span style="text-align: left; text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 12px/16px Verdana, Arial, sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><span style="text-align: left; text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 12px/16px Verdana, Arial, sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;">In order to avoid Tomcat from auto-reloading itself, comment the WatchedResource line in<span class="Apple-converted-space">&nbsp;</span></span><em style="text-align: left; line-height: 16px; text-transform: none; background-color: #ffffff; font-variant: normal; text-indent: 0px; font-family: Verdana, Arial, sans-serif; white-space: normal; letter-spacing: normal; color: #000000; font-size: 12px; font-weight: normal; word-spacing: 0px; -webkit-text-stroke-width: 0px;">C:\Apache Software Foundation\Tomcat 6.0\conf\context.xml</em><span style="text-align: left; text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 12px/16px Verdana, Arial, sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;">:</span><br /></span></em></span></p>
<div class="cnblogs_code">
<pre>&lt;!-- &lt;WatchedResource&gt;WEB-INF/web.xml&lt;/WatchedResource&gt; --&gt;</pre>
</div>
<p>O<span style="text-align: left; text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 12px/16px Verdana, Arial, sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;">penbravo does a hot-deploy a of<span class="Apple-converted-space">&nbsp;</span></span><em style="text-align: left; line-height: 16px; text-transform: none; background-color: #ffffff; font-variant: normal; text-indent: 0px; font-family: Verdana, Arial, sans-serif; white-space: normal; letter-spacing: normal; color: #000000; font-size: 12px; font-weight: normal; word-spacing: 0px; -webkit-text-stroke-width: 0px;">openbravo.war</em><span style="text-align: left; text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 12px/16px Verdana, Arial, sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><span class="Apple-converted-space">&nbsp;</span>file to Tomcat but on Windows it often encounters file locking issues, to avoiding locking edit&nbsp;%CATALINA_BASE%\conf\context.xml. Find the root &lt;Context&gt; and add these two attributes:</span></p>
<div class="cnblogs_code">
<pre>&lt;Context antiJARLocking=<span style="color: #800000;">"</span><span style="color: #800000;">true</span><span style="color: #800000;">"</span> antiResourceLocking=<span style="color: #800000;">"</span><span style="color: #800000;">true</span><span style="color: #800000;">"</span>&gt;</pre>
</div>
<p>C<span style="text-align: left; text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 12px/16px Verdana, Arial, sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;">onfigure a username and password for the Tomcat Manager, by replacing the<span class="Apple-converted-space">&nbsp;</span></span><em style="text-align: left; line-height: 16px; text-transform: none; background-color: #ffffff; font-variant: normal; text-indent: 0px; font-family: Verdana, Arial, sans-serif; white-space: normal; letter-spacing: normal; color: #000000; font-size: 12px; font-weight: normal; word-spacing: 0px; -webkit-text-stroke-width: 0px;">C:\Apache Software Foundation\Tomcat 6.0\conf\tomcat-users.xml</em><span style="text-align: left; text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 12px/16px Verdana, Arial, sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><span class="Apple-converted-space">&nbsp;</span>file with these contents, replacing password="admin" with your chosen password:<br /></span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version='1.0' encoding='utf-8'</span><span style="color: #0000ff;">?&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">tomcat-users</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">role </span><span style="color: #ff0000;">rolename</span><span style="color: #0000ff;">="manager"</span><span style="color: #0000ff;">/&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">role </span><span style="color: #ff0000;">rolename</span><span style="color: #0000ff;">="admin"</span><span style="color: #0000ff;">/&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">user </span><span style="color: #ff0000;">username</span><span style="color: #0000ff;">="admin"</span><span style="color: #ff0000;"> password</span><span style="color: #0000ff;">="admin"</span><span style="color: #ff0000;"> roles</span><span style="color: #0000ff;">="admin,manager"</span><span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">tomcat-users</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;<span style="text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 12px/16px Verdana, Arial, sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;">You can check that Tomcat is running by opening<span class="Apple-converted-space">&nbsp;</span></span><a class="external free" style="text-transform: none; background-color: #ffffff; text-indent: 0px; font: 12px/16px Verdana, Arial, sans-serif; white-space: normal; letter-spacing: normal; color: #489c06; word-spacing: 0px; -webkit-text-stroke-width: 0px;" href="http://localhost:8080/" rel="nofollow">http://localhost:8080</a><span style="text-transform: none; background-color: #ffffff; text-indent: 0px; display: inline !important; font: 12px/16px Verdana, Arial, sans-serif; white-space: normal; float: none; letter-spacing: normal; color: #000000; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><span class="Apple-converted-space">&nbsp;</span>in a web browser.</span></p>
<p>4. 安装<a href="http://ant.apache.org/">Ant</a>，1.8未测试，用1.7。设置ANT环境变量：</p>
<div class="cnblogs_code">
<pre>ANT_HOME=C:\apache-ant-<span style="color: #800080;">1.7</span>.<span style="color: #800080;">1</span><span style="color: #000000;">
ANT_OPTS</span>=-Xmx512M -XX:MaxPermSize=<span style="color: #000000;">128M
PATH</span>=%PATH%;%ANT_HOME%\bin</pre>
</div>
<p>5. 下载<a href="http://sourceforge.net/projects/openbravo/files/">Openbravo</a>，解压缩到本地目录，注意不要有空格。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201401/06173816-ef2f99f585bc44c694fa5ce189f62b81.x-png" alt="" /></p>
<p>6. 在Openbravo目录执行<strong>ant setup</strong>，这实质应该是根据当前操作系统下载对应的配置程序到config目录，Windows系统对应的配置程序是<strong>setup-properties-windows.exe</strong>。<br /><img src="http://images.cnitblog.com/blog/111826/201401/07093524-95f6b9f1921c481dbffa99d632b01bcb.x-png" alt="" /><br />配置程序的目的是图形化配置<a href="http://wiki.openbravo.com/wiki/Openbravo.properties">Openbravo.properties</a>。执行配置程序：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201401/07093205-e9b91c5169d446759499aff1c6e2dffa.x-png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201401/07093243-9b8f7dcc579443e899e86de1adf94f95.x-png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201401/07093257-feb593036cfe4bcc9df4af24f8d56b45.x-png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201401/07093305-4b51c3b7f18a40c6bb78e1a74b6ea9a0.x-png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201401/07093312-3576b61a3c2b4fb7ba23cbee39ca13a0.x-png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201401/07093319-21d2ff14277c4a3ba5c2cc51cff39a8e.x-png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201401/07093328-609387520ec44aa18fe9c756aff80b67.x-png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201401/07093336-403b357447264e019ff082a99a0e84d6.x-png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201401/07093344-9dc01d61987740e1b0608ca948bd99b4.x-png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201401/07093354-8e1e7c519f314bcf88fd4ced2c34d42d.x-png" alt="" /><br /><img src="http://images.cnitblog.com/blog/111826/201401/07093403-de6caef95bf94fdfb9382bd7d4456085.x-png" alt="" /></p>
<p>7. 在Openbravo目录执行执行<strong>ant install.source</strong>。中间可能会出现内存异常，解决方法参考&nbsp;<a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_0" href="http://www.cnblogs.com/eastson/archive/2013/05/08/3067209.html">java.lang.OutOfMemoryError : Java heap space</a>&nbsp;。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201401/07095734-e364aef81c084e57ac72f4d451dde6c3.x-png" alt="" /></p>
<p>8. 安装成功，Operbravo被复制到了<strong>%CATALINA_HOME%\webapps</strong>目录：<br /><img src="http://images.cnitblog.com/blog/111826/201401/07095912-70f00023f7b7438f923c795c61ca0922.x-png" alt="" /><br />9. 启动Tomcat服务器。同ANT一样，也可能会出现Heap错误，加入环境变量CATALINA_OPTS=-server -Djava.awt.headless=true -Xms64M -Xmx512M -XX:MaxPermSize=256M, 重启Tomcat。</p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/09122612-48039675847e49fc80fdf6016800440a.png" alt="" /></p>
<p>9. 打开浏览器测试一下。<span>The username is&nbsp;</span><strong>Openbravo</strong><span>, with an uppercase O. The password is&nbsp;</span><strong>openbravo</strong><span>, with a lowercase o. The system is case-sensitive, and you need to type both data elements correctly to access it.</span></p>
<p><img src="http://images.cnitblog.com/blog/111826/201305/09120124-4f0a675224904d8eb6f6b3d5dc2c2d36.png" alt="" /></p>]]></description></item><item><title>java.lang.OutOfMemoryError : Java heap space</title><link>http://www.cnblogs.com/eastson/archive/2013/05/08/3067209.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 08 May 2013 09:10:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/08/3067209.html</guid><description><![CDATA[<p>安装Openbravo时遇到Java Heap错误：</p>
<div class="cnblogs_code">
<pre>C:\development\Openbravo-3.0MP22.2\build.xml:702: The following error occurred <span style="color: #0000ff;">while</span> executing <span style="color: #0000ff;">this</span><span style="color: #000000;"> line:
C:\development\Openbravo</span>-3.0MP22.2\build.xml:611: The following error occurred <span style="color: #0000ff;">while</span> executing <span style="color: #0000ff;">this</span><span style="color: #000000;"> line:
C:\development\Openbravo</span>-3.0MP22.2\src\build.xml:233: java.lang.OutOfMemoryError: Java heap space</pre>
</div>
<p>&nbsp;</p>
<p>按照Openbravo安装说明解决问题：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">Equally add the ANT_OPTS environment variable:
In the Variable name field, type ANT_OPTS.
</span>32 bits: In the Variable value field, type -Xmx1024M -XX:MaxPermSize=<span style="color: #000000;">128M.
</span>64 bits: In the Variable value field, type -Xmx1280M -XX:MaxPermSize=128M.</pre>
</div>
<p><a href="http://wiki.openbravo.com/wiki/Installation/Custom/Apache_Ant">http://wiki.openbravo.com/wiki/Installation/Custom/Apache_Ant</a></p>
<p>&nbsp;</p>
<p>这个问题的根源是jvm虚拟机的默认Heap大小是64M,可以通过设置其最大和最小值来实现.设置的方法主要是几个.</p>
<p>1.可以在windows 更改系统环境变量<br />加上JAVA_OPTS=-Xms64m -Xmx512m</p>
<p>2,如果用的tomcat,在windows下,可以在</p>
<p>C:\tomcat5.5.9\bin\catalina.bat&nbsp; 中加上:</p>
<p>set JAVA_OPTS=-Xms64m -Xmx256m</p>
<p>位置在: rem Guess CATALINA_HOME if not defined&nbsp; 这行的下面加合适.</p>
<p>3.如果是linux系统<br />Linux&nbsp; 在{tomcat_home}/bin/catalina.sh的前面，加&nbsp;<br />set JAVA_OPTS='-Xms64 -Xmx512'<br /><br /></p>
<p><span style="line-height: 1.5;">使用Java程序从数据库中查询大量的数据时出现异常:</span><br />java.lang.OutOfMemoryError: Java heap space&nbsp;<br />在JVM中如果98％的时间是用于GC且可用的 Heap size 不足2％的时候将抛出此异常信息。</p>
<p>JVM堆的设置是指java程序运行过程中JVM可以调配使用的内存空间的设置.JVM在启动的时候会自动设置Heap size的值，其初始空间(即-Xms)是物理内存的1/64，最大空间(-Xmx)是物理内存的1/4。可以利用JVM提供的-Xmn -Xms -Xmx等选项可进行设置。<br />例如：java -jar -Xmn16m -Xms64m -Xmx128m MyApp.jar<br />如果Heap Size设置偏小，除了这些异常信息外，还会发现程序的响应速度变慢了。GC占用了更多的时间，而应用分配到的执行时间较少。<br />Heap Size 最大不要超过可用物理内存的80％，一般的要将-Xms和-Xmx选项设置为相同，而-Xmn为1/4的-Xmx值。<br />Heap size的 -Xms -Xmn 设置不要超出物理内存的大小。否则会提示&ldquo;Error occurred during initialization of VM Could not reserve enough space for object heap&rdquo;。</p>]]></description></item><item><title>Installing "uuid-ossp" library in Postgres 9.1</title><link>http://www.cnblogs.com/eastson/archive/2013/05/08/3066881.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 08 May 2013 07:21:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/05/08/3066881.html</guid><description><![CDATA[<pre>The "uuid-ossp" library enables you to generate UUID values server-side in Postgres.
<a href="http://www.postgresql.org/docs/current/static/uuid-ossp.html" rel="nofollow">http://www.postgresql.org/docs/current/static/uuid-ossp.html</a>

The technique to install this library changed as of Postgres 9.1, because of the new Extension feature. Installing and uninstalling are now easier. I have an overview on my blog, but I'm posting the brief steps here for posterity.

To see what extensions are already installed in your Postgres, run this SQL:
  select * from pg_extension;

To see if the "uuid-ossp" extension is available, run this SQL:
  select * from pg_available_extensions;

To install/load the extension, run this SQL:
  CREATE EXTENSION "uuid-ossp";

I found the quote marks to be required despite the doc being contrary.

Doc on loading extensions:
<a href="http://www.postgresql.org/docs/current/static/sql-createextension.html" rel="nofollow">http://www.postgresql.org/docs/current/static/sql-createextension.html<br /><br /></a>如果出现 <span style="color: #ff0000;"><em><strong>错误: 无法加载库 "C:/PostgreSQL/9.1/lib/uuid-ossp.dll": This application has failed to start because the application configuration is incorrect. Reinstalling the application may fix this problem. </strong></em><em id="__mceDel"><em><strong>SQL 状态: 58P01 </strong></em></em></span>这样的错误，安装<a href="http://www.xiazaiba.com/html/352.html" target="_blank">VC++2005运行时库</a>即可解决问题！</pre>]]></description></item><item><title>ubuntu 12.04 flash 设置无法点击</title><link>http://www.cnblogs.com/eastson/archive/2013/04/13/3018660.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 13 Apr 2013 09:09:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/04/13/3018660.html</guid><description><![CDATA[<p>平时在打开一些网页游戏的时候会弹出一个flash player 设置的小窗口，在ubuntu下无论怎么点都无效，今天终于找到一个解决办法：</p>
<p>1、打开此网址：<a href="http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager07.html">http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager07.html</a></p>
<p>2、打到弹窗口的网址，勾选从不询问， 就可以跳过那个小窗口了，如图：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201304/13170900-2807328ae41449de9b6354a72bc92713.png" alt="" /></p>]]></description></item><item><title>BindingSource的事件触发顺序</title><link>http://www.cnblogs.com/eastson/archive/2013/04/08/3006639.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 08 Apr 2013 00:47:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/04/08/3006639.html</guid><description><![CDATA[<p>BindingSource下面几个事件的触发顺序需要注意：</p>
<p>1. CurrentChanged</p>
<p>2. CurrentItemChanged</p>
<p>3. PositionChanged</p>]]></description></item><item><title>数据包分析工具HttpWatch</title><link>http://www.cnblogs.com/eastson/archive/2013/01/31/2886984.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 31 Jan 2013 06:30:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/31/2886984.html</guid><description><![CDATA[<p><span>HttpWatch&nbsp;是一款强大的网页数据分析工具，不用代理服务器或一些复杂的网络监控工具，就能够在显示网页同时显示网页请求和回应的日志信息。&nbsp;HttpWatch可以集成在Internet&nbsp;Explorer工具栏，也提供火狐插件功能。&nbsp;</span></p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201301/31142957-211db625277d40ee86309da970042799.jpg" alt="" /></span></p>]]></description></item><item><title>PHPMailer：PHP发送邮件类库</title><link>http://www.cnblogs.com/eastson/archive/2013/01/31/2886974.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 31 Jan 2013 06:25:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/31/2886974.html</guid><description><![CDATA[<p><span>PHPMailer是一个用于发送电子邮件的PHP函数包。它提供的功能包括：&nbsp;　　</span><br /><span>*.在发送邮时指定多个收件人，抄送地址，暗送地址和回复地址&nbsp;　　</span><br /><span>*.支持多种邮件编码包括：8bit，base64，binary和quoted-printable&nbsp;　　</span><br /><span>*.支持SMTP验证&nbsp;　　</span><br /><span>*.支持冗余SMTP服务器&nbsp;　　</span><br /><span>*.支持带附件的邮件和Html格式的邮件&nbsp;　　</span><br /><span>*.自定义邮件头&nbsp;　　</span><br /><span>*.支持在邮件中嵌入图片&nbsp;　　</span><br /><span>*.调试灵活&nbsp;　　</span><br /><span>*.经测试兼容的SMTP服务器包括：Sendmail,qmail,Postfix,Imail,Exchange等&nbsp;　　</span><br /><span>*.可运行在任何平台之上</span><br /><br /><span>下面是我测试PHPMailer用的例子，使用的是新浪的SMTP服务器。使用之前需要在新浪申请一个邮箱，并在设置里面开通SMTP/POP3。该例子还演示了简繁不同内码和附件的传送。</span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #0000ff;">require_once</span> 'includes/phpmailer/class.phpmailer.php'<span style="color: #000000;">;

</span><span style="color: #800080;">$mail</span> = <span style="color: #0000ff;">new</span><span style="color: #000000;"> PHPMailer();
</span><span style="color: #800080;">$mail</span>-&gt;CharSet ="UTF-8"<span style="color: #000000;">;
</span><span style="color: #800080;">$mail</span>-&gt;<span style="color: #000000;">IsSMTP();
</span><span style="color: #800080;">$mail</span>-&gt;SMTPAuth = <span style="color: #0000ff;">true</span><span style="color: #000000;">;
</span><span style="color: #800080;">$mail</span>-&gt;Host = "smtp.sina.com"<span style="color: #000000;">;
</span><span style="color: #800080;">$mail</span>-&gt;Username = "amonest"<span style="color: #000000;">;
</span><span style="color: #800080;">$mail</span>-&gt;Password = "xxxxx"<span style="color: #000000;">;
</span><span style="color: #800080;">$mail</span>-&gt;SetFrom('amonest@sina.com', 'amonest'<span style="color: #000000;">);
</span><span style="color: #800080;">$mail</span>-&gt;AddAddress('amonest@sina.com', 'amonest'<span style="color: #000000;">);
</span><span style="color: #800080;">$mail</span>-&gt;Subject = 'Test Mail'<span style="color: #000000;">;
</span><span style="color: #800080;">$mail</span>-&gt;MsgHTML('&lt;b&gt;Hello, 简体，繁?!!&lt;/b&gt;'<span style="color: #000000;">);
</span><span style="color: #800080;">$mail</span>-&gt;AddAttachment("LICENSE.txt"<span style="color: #000000;">);

</span><span style="color: #0000ff;">if</span>(!<span style="color: #800080;">$mail</span>-&gt;<span style="color: #000000;">Send()) {
    </span><span style="color: #0000ff;">echo</span> "Mailer Error: " . <span style="color: #800080;">$mail</span>-&gt;<span style="color: #000000;">ErrorInfo;
} </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
    </span><span style="color: #0000ff;">echo</span> "Message sent!恭喜，邮件发送成功！"<span style="color: #000000;">;
}</span></pre>
</div>]]></description></item><item><title>TbsZip：PHP的Zip压缩包处理类</title><link>http://www.cnblogs.com/eastson/archive/2013/01/31/2886968.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 31 Jan 2013 06:24:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/31/2886968.html</guid><description><![CDATA[<p><span>TbsZip&nbsp;是一个&nbsp;PHP&nbsp;的类用来读写&nbsp;Zip&nbsp;压缩文件包，该类无需&nbsp;PHP&nbsp;扩展或者是临时文件。TbsZip&nbsp;可以对压缩文档中的文件进行读、写、修改和删除操作。</span><br /><br /><span>官方首页：</span><a href="http://www.tinybutstrong.com/apps/tbszip/tbszip_help.html" target="_blank">http://www.tinybutstrong.com/apps/tbszip/tbszip_help.html</a><br /><br /><span>系统附带的演示代码，很详细：</span></p>
<div class="cnblogs_code">
<pre>&lt;?

<span style="color: #008000;">/*</span><span style="color: #008000;"> Some code examples for TbsZip
Skrol29, 2010-09-03
</span><span style="color: #008000;">*/</span>


<span style="color: #0000ff;">include_once</span>('tbszip.php'); <span style="color: #008000;">//</span><span style="color: #008000;"> load the TbsZip library</span>
<span style="color: #800080;">$zip</span> = <span style="color: #0000ff;">new</span> clsTbsZip(); <span style="color: #008000;">//</span><span style="color: #008000;"> create a new instance of the TbsZip class</span>


<span style="color: #800080;">$zip</span>-&gt;CreateNew(); <span style="color: #008000;">//</span><span style="color: #008000;"> start a new empty archive for adding files
// or</span>
<span style="color: #800080;">$zip</span>-&gt;Open('an_existing_archive.zip'); <span style="color: #008000;">//</span><span style="color: #008000;"> open an existing archive for reading and/or modifying


// --------------------------------------------------
// Reading information and data in the opened archive
// --------------------------------------------------

// check if a file is existing in the archive, the name must precise subfolders if any</span>
<span style="color: #800080;">$ok</span> = <span style="color: #800080;">$zip</span>-&gt;FileExists('subfolder/help.html'<span style="color: #000000;">);

</span><span style="color: #008000;">//</span><span style="color: #008000;"> count the files stored in the archive</span>
<span style="color: #800080;">$file_nbr</span> = <span style="color: #008080;">count</span>(<span style="color: #800080;">$zip</span>-&gt;<span style="color: #000000;">CdFileLst);

</span><span style="color: #008000;">//</span><span style="color: #008000;"> retrieve the content of an compressed file in the archive</span>
<span style="color: #800080;">$text1</span> = <span style="color: #800080;">$zip</span>-&gt;FileRead('readme.txt'<span style="color: #000000;">);

</span><span style="color: #008000;">//</span><span style="color: #008000;"> retrieve the content of an compressed file in a subfolder of the archive</span>
<span style="color: #800080;">$text2</span> = <span style="color: #800080;">$zip</span>-&gt;FileRead('subfolder/readme.txt'<span style="color: #000000;">);


</span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$ok</span>) <span style="color: #800080;">$zip</span>-&gt;FileExists('subfolder/help.html'<span style="color: #000000;">);

</span><span style="color: #008000;">//</span><span style="color: #008000;"> -----------------------------
// Modifying data in the archive
// -----------------------------

// add a file in the archive</span>
<span style="color: #800080;">$zip</span>-&gt;FileAdd('newfile.txt', <span style="color: #800080;">$data</span>, TBSZIP_STRING); <span style="color: #008000;">//</span><span style="color: #008000;"> add the file by giving the content</span>
<span style="color: #800080;">$zip</span>-&gt;FileAdd('newpic1.png', './images/localpic1.png', TBSZIP_FILE);        <span style="color: #008000;">//</span><span style="color: #008000;"> add the file by copying a local file</span>
<span style="color: #800080;">$zip</span>-&gt;FileAdd('newpic2.png', './images/localpic2.png', TBSZIP_FILE, <span style="color: #0000ff;">false</span>); <span style="color: #008000;">//</span><span style="color: #008000;"> add the uncompressed file by copying a local file

// delete an existing file in the archive</span>
<span style="color: #800080;">$zip</span>-&gt;FileReplace('newfile.txt', <span style="color: #800080;">$data</span>, TBSZIP_STRING); <span style="color: #008000;">//</span><span style="color: #008000;"> replace the file by giving the content</span>
<span style="color: #800080;">$zip</span>-&gt;FileReplace('newpic1.png', './images/localpic1.png', TBSZIP_FILE);        <span style="color: #008000;">//</span><span style="color: #008000;"> replace the file by copying a local file</span>
<span style="color: #800080;">$zip</span>-&gt;FileReplace('newpic2.png', './images/localpic2.png', TBSZIP_FILE, <span style="color: #0000ff;">false</span>); <span style="color: #008000;">//</span><span style="color: #008000;"> replace the uncompressed file by copying a local file</span>
<span style="color: #800080;">$zip</span>-&gt;FileReplace('newpic3.png', <span style="color: #0000ff;">false</span>);                                        <span style="color: #008000;">//</span><span style="color: #008000;"> delete the file in the archive

// cancel the last modification on the file (add/replace/delete)</span>
<span style="color: #800080;">$zip</span>-&gt;FileCancelModif('newpic2.png'<span style="color: #000000;">);

</span><span style="color: #008000;">//</span><span style="color: #008000;"> ----------------------
// Applying modifications
// ----------------------</span>

<span style="color: #800080;">$zip</span>-&gt;<span style="color: #008080;">Flush</span>(TBSZIP_FILE, './save/new_archive.zip'); <span style="color: #008000;">//</span><span style="color: #008000;"> apply modifications as a new local file

// apply modifications as an HTTP downloaded file</span>
<span style="color: #800080;">$zip</span>-&gt;<span style="color: #008080;">Flush</span>(TBSZIP_DOWNLOAD, 'download.zip'<span style="color: #000000;">);
</span><span style="color: #800080;">$zip</span>-&gt;<span style="color: #008080;">Flush</span>(TBSZIP_DOWNLOAD, 'download.zip', 'application/zip'); <span style="color: #008000;">//</span><span style="color: #008000;"> with a specific Content-Type

// apply modifications as a downloaded file with your customized HTTP headers</span>
<span style="color: #008080;">header</span>("Content-type: application/force-download"<span style="color: #000000;">);
</span><span style="color: #008080;">header</span>("Content-Disposition: attachment; filename=download.zip"<span style="color: #000000;">);
</span><span style="color: #008080;">header</span>("Expires: Fri, 01 Jan 2010 05:00:00 GMT"<span style="color: #000000;">);
</span><span style="color: #800080;">$zip</span>-&gt;<span style="color: #008080;">Flush</span>(TBSZIP_DOWNLOAD+<span style="color: #000000;">TBSZIP_NOHEADER);


</span><span style="color: #008000;">//</span><span style="color: #008000;"> -----------------
// Close the archive
// -----------------</span>

<span style="color: #800080;">$zip</span>-&gt;Close(); <span style="color: #008000;">//</span><span style="color: #008000;"> stop to work with the opened archive. Modifications are not applied to the opened archive, use Flush() to commit  </span></pre>
</div>]]></description></item><item><title>PclZip：PHP压缩与解压缩</title><link>http://www.cnblogs.com/eastson/archive/2013/01/31/2886971.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 31 Jan 2013 06:24:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/31/2886971.html</guid><description><![CDATA[<p><span>PclZip是一个强大的压缩与解压缩zip文件的PHP类，PclZip&nbsp;library不仅能够压缩与解压缩Zip格式的文件，还能出压缩档的内容，同时也可以对现有的ZIP包进行添加或删除文件。</span><br /><br /><span>官方首页：</span><a href="http://www.phpconcept.net/pclzip" target="_blank">http://www.phpconcept.net/pclzip</a><br /><span>参考网页：</span><a href="http://www.ccvita.com/59.html" target="_blank">http://www.ccvita.com/59.html</a><br /><br /><span>PclZip简单的例子：</span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php

</span><span style="color: #0000ff;">require_once</span>('includes/pclzip.lib.php'<span style="color: #000000;">);

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 压缩: 将data/README.txt文件放到压缩档, 去掉前面的data路径</span>
<span style="color: #800080;">$archive</span> = <span style="color: #0000ff;">new</span> PclZip('archive.zip'<span style="color: #000000;">); 
</span><span style="color: #800080;">$archive</span>-&gt;add('data/README.txt', PCLZIP_OPT_REMOVE_PATH, 'data'<span style="color: #000000;">);

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 解压缩: 将压缩档解压缩到temp目录</span>
<span style="color: #800080;">$archive</span> = <span style="color: #0000ff;">new</span> PclZip('archive.zip'<span style="color: #000000;">); 
</span><span style="color: #800080;">$archive</span>-&gt;<span style="color: #008080;">extract</span>('temp'<span style="color: #000000;">);

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 列出压缩档内容</span>
<span style="color: #800080;">$archive</span> = <span style="color: #0000ff;">new</span> PclZip('archive.zip'<span style="color: #000000;">); 
</span><span style="color: #800080;">$list</span> = <span style="color: #800080;">$archive</span>-&gt;<span style="color: #000000;">listContent();
</span><span style="color: #008080;">print_r</span>(<span style="color: #800080;">$list</span>);</pre>
</div>
<p><span style="line-height: 1.5;">结果如下：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">Array</span><span style="color: #000000;">
(
    [</span>0] =&gt; <span style="color: #0000ff;">Array</span><span style="color: #000000;">
        (
            [filename] </span>=&gt; README.<span style="color: #000000;">txt
            [stored_filename] </span>=&gt; README.<span style="color: #000000;">txt
            [size] </span>=&gt; 0<span style="color: #000000;">
            [compressed_size] </span>=&gt; 2<span style="color: #000000;">
            [mtime] </span>=&gt; 1314146688<span style="color: #000000;">
            [comment] </span>=&gt;<span style="color: #000000;"> 
            [folder] </span>=&gt;<span style="color: #000000;"> 
            [index] </span>=&gt; 0<span style="color: #000000;">
            [status] </span>=&gt;<span style="color: #000000;"> ok
        )

)</span></pre>
</div>]]></description></item><item><title>PHP发送有附件的电子邮件[转]</title><link>http://www.cnblogs.com/eastson/archive/2013/01/31/2886963.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 31 Jan 2013 06:22:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/31/2886963.html</guid><description><![CDATA[<p><span>我经常听到这样一个问题："我有一个从网站发来的合同。我如何给通过表单发送的电子邮件增加一个附件呢？"&nbsp;</span><br /><span>首先我要说的是要做到这个没有什么简单的办法。你要很好的理解PHP或其它的服务器端的脚本语言。当然你还要一个真正支持PHP的网站的账号。如果满足了这个前提，在你读完了本章后就可以用PHP发送带附件的电子邮件了。</span><br /><br /><span>1.&nbsp;附件是如何工作的</span><br /><span>如果你曾经在PHP的手册中搜索过"附件"函数，那么结果可能是什么都没有（至少在我写本文的时间还没有）。后来你就要花很多时间来了解这方面的知识。</span><br /><span>你也许会想当你给某个人发送一封带附件的电子邮件时，附件是和邮件一起放到收件人的信箱里的（比如，如果你给他/她发了一个PNG的图片文件，他/她的信箱里会包含一个txt文件（电子邮件）和一个.png文件（附件））。但这不是它的工作原理。当你加入一个附件时，你的邮件程序把附件转换成纯文本文件，并在你写的内容（实际的电子邮件）后面插入这个文本块。这个，当你把所有的东西发出来后，收件人的信箱里只有一个纯文本文件--一个同时包含附件和实际电子邮件内容的文件。</span><br /><span>下面是一个带附件（一个HTML文件）电子邮件的例子:</span><br /><code></code></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">Return</span>-Path: &lt;someone@example.com&gt; 
<span style="color: #008080;">Date</span>: Mon, 22 May 2000 19:17:29 +0000<span style="color: #000000;"> 
From</span>: Someone &lt;someone@example.com&gt;<span style="color: #000000;"> 
To</span>: Person &lt;person@eksempel.dk&gt;<span style="color: #000000;"> 
Message</span>-id: &lt;83729KI93LI9214@example.com&gt;<span style="color: #000000;"> 
Content</span>-type: multipart/<span style="color: #0000ff;">mixed</span>; boundary="396d983d6b89a"<span style="color: #000000;"> 
Subject</span>: Here'<span style="color: #000000;">s the subject
--396d983d6b89a 
Content-type: text/plain; charset=iso-8859-1 
Content-transfer-encoding: 8bit
This is the body of the email.
--396d983d6b89a 
Content-type: text/html; name=attachment.html 
Content-disposition: inline; filename=attachment.html 
Content-transfer-encoding: 8bit
&lt;html&gt; 
&lt;head&gt; 
&lt;title&gt;The attachment&lt;/title&gt; 
&lt;/head&gt; 
&lt;body&gt; 
&lt;h2&gt;This is the attached HTML file&lt;/h2&gt; 
&lt;/body&gt; 
&lt;/html&gt;</span></pre>
</div>
<p><code style="line-height: 1.5;">--396d983d6b89a--</code><span style="line-height: 1.5;">前面的7行是邮件的头，其中值得注意的是Content-type头部分。这个头告诉邮件程序电子邮件是由一个以上的部分组成的。不含附件的邮件只有一个部分：消息本身。带附件的电子通常至少由两部分组成：消息和附件。这样，带两个附件的邮件由三部分组成：消息，第一个附件和第二个附件。</span></p>
<p><span>带附件的电子邮件的不同部分之间用分界线来分隔。分界线在Content-type头中定义。邮件的每个新部分以两个连字号（--）和分界线开始。最后一个分界线后也有两个连字号，表示这个邮件中没有其它的部分了。</span><br /><span>在每个分界线后有一些行，用来告诉邮件程序这个部分的内容的类型。比如，看看上面例子中第一个分界线后面的两行--以Content-type:&nbsp;text/plain开头的行。这些行说明后面的部分是ISO-8859-1字符集的纯文本。跟在第二个分界线后的行告诉邮件程序现在的部分是一个HTML文件，它的名字是"attachment.html"。</span><br /><span>Content-disposition这持告诉邮件程序如果可能就以内嵌的方式显示附件。现在新的邮件程序会在消息后显示HTML的内容。如果Content-disposition被设为attachment，那么邮件程序就不会显示HTML文件的内容，而是显示一个连接到文件的图标（或其它的类似的东西）。收件人要看附件的内容，必须点击这个图标。一般情况下，如果附件是一些文本（包含HTML），Content-disposition会被设为inline，这是因为现在大部分邮件程序能够不借助其它浏览器而直接显示附件（文本）的内容。如果附件不是文本（比如图片或其它类似的内容），Content-disposition就设为attachment。</span><br /><br /><span>2.&nbsp;用PHP生成带附件的电子邮件</span><br /><span>这里一个例子，告诉你如果把一个定义好的HTML文件加为邮件的附件：</span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php 
</span><span style="color: #008000;">#</span><span style="color: #008000;"> 我们首先写实际的消息内容 </span>
<span style="color: #800080;">$emailBody</span> = "This is text that goes into the body of the email."<span style="color: #000000;">;
</span><span style="color: #008000;">#</span><span style="color: #008000;"> 然后我们要作为附件的HTML文件 </span>
<span style="color: #800080;">$attachment</span> = "<span style="color: #000000;">&lt;html&gt; 
&lt;head&gt; 
&lt;title&gt;The attached file&lt;/title&gt; 
&lt;/head&gt; 
&lt;body&gt; 
&lt;h2&gt;This is the attached HTML file&lt;/h2&gt; 
&lt;/body&gt; 
&lt;/html&gt;</span>"<span style="color: #000000;">;
</span><span style="color: #008000;">#</span><span style="color: #008000;"> 建立在邮件中分隔不同部分的分界线。 </span><span style="color: #008000;">
#</span><span style="color: #008000;"> 基本上，分界线可以是任意的字符串。 </span><span style="color: #008000;">
#</span><span style="color: #008000;"> 但是重要的一点是确定一个写邮件的人 </span><span style="color: #008000;">
#</span><span style="color: #008000;"> 这会随意写出的字符串，所以我们用 </span><span style="color: #008000;">
#</span><span style="color: #008000;"> uniqid函数来产生一个随机的字符串。 </span>
<span style="color: #800080;">$boundary</span> = <span style="color: #008080;">uniqid</span>( ""<span style="color: #000000;">);
</span><span style="color: #008000;">#</span><span style="color: #008000;"> 现在我们要建立邮件头。不要忘了插入 </span><span style="color: #008000;">
#</span><span style="color: #008000;"> Content-type头来说明这个邮件包含一个或更多的附件。 </span>
<span style="color: #800080;">$headers</span> = "<span style="color: #000000;">From: someone@example.com 
Content-type: multipart/mixed; boundary=</span>"<span style="color: #800080;">$boundary</span>""<span style="color: #000000;">;
</span><span style="color: #008000;">#</span><span style="color: #008000;"> 好，现在我们已经有了邮件的所有内容。 </span><span style="color: #008000;">
#</span><span style="color: #008000;"> 下一件事是修改邮件的主体。 </span>
<span style="color: #800080;">$emailBody</span> = "--<span style="color: #800080;">$boundary</span><span style="color: #000000;"> 
Content-type: text/plain; charset=iso-8859-1 
Content-transfer-encoding: 8bit
</span><span style="color: #800080;">$emailBody</span><span style="color: #000000;">
--</span><span style="color: #800080;">$boundary</span><span style="color: #000000;"> 
Content-type: text/html; name=attachment.html 
Content-disposition: inline; filename=attachment.html 
Content-transfer-encoding: 8bit
</span><span style="color: #800080;">$attachment</span><span style="color: #000000;">
--</span><span style="color: #800080;">$boundary</span>--"<span style="color: #000000;">;
</span><span style="color: #008000;">#</span><span style="color: #008000;"> 现在可以把邮件发出去了 </span>
<span style="color: #008080;">mail</span>( "person@eksempel.dk", "The subject", <span style="color: #800080;">$emailBody</span>, <span style="color: #800080;">$headers</span><span style="color: #000000;">); 
</span>?&gt;</pre>
</div>
<p>&nbsp;</p>
<p><span>3.&nbsp;把用户上传的文件作为附件</span><br /><span>你也许会觉得上面的例子难以理解，但下面...。在下面的例子中事情更难了，因为我们要用一个表单让用户上传他们的文件，并把这个文件作为我们要发的邮件的附件。麻烦的是我们不能预先知道文件的MIME类型。在前面的例子中，我们已经知道该它是一个HTML文件，所以给这个附件设置Content-type头是很简单的。在下面的例子中，MIME类型可能是任意的，因为用户可能会上传一个HTML文件，一个PNG文件，一个vCard文件，或者其它的东西。让我们来看看例子：</span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php 
</span><span style="color: #008000;">#</span><span style="color: #008000;"> 现在我们来生成表单。在产生可以上传文件的表单时，不要忘了把&lt;form&gt;标签的"enctype"属性设为"multipart/form-data". </span>
<span style="color: #0000ff;">echo</span> "&lt;form action='<span style="color: #800080;">$PHP_SELF</span>' enctype='multipart/form-data' method='post'&gt; "<span style="color: #000000;">; 
</span><span style="color: #0000ff;">echo</span> "&lt;input type='text' name='from'&gt;&lt;br&gt; "<span style="color: #000000;">; 
</span><span style="color: #0000ff;">echo</span> "&lt;input type='text' name='to'&gt;&lt;br&gt; "<span style="color: #000000;">; 
</span><span style="color: #0000ff;">echo</span> "&lt;input type='text' name='subject'&gt;&lt;br&gt; "<span style="color: #000000;">; 
</span><span style="color: #0000ff;">echo</span> "&lt;input type='file' name='attachment'&gt;&lt;br&gt; "<span style="color: #000000;">; 
</span><span style="color: #0000ff;">echo</span> "&lt;textarea name='body'&gt;&lt;/textarea&gt;&lt;br&gt; "<span style="color: #000000;">; 
</span><span style="color: #0000ff;">echo</span> "&lt;input type='submit' name='send' value='Send'&gt; "<span style="color: #000000;">; 
</span><span style="color: #0000ff;">echo</span> "&lt;/form&gt; "<span style="color: #000000;">;

</span><span style="color: #008000;">#</span><span style="color: #008000;"> 如果用户已经按了"Send"按钮" </span>
<span style="color: #0000ff;">if</span> (<span style="color: #800080;">$send</span><span style="color: #000000;">) { 
</span><span style="color: #008000;">#</span><span style="color: #008000;"> 定义分界线 </span>
<span style="color: #800080;">$boundary</span> = <span style="color: #008080;">uniqid</span>( ""<span style="color: #000000;">);

</span><span style="color: #008000;">#</span><span style="color: #008000;"> 生成邮件头 </span>
<span style="color: #800080;">$headers</span> = "From: <span style="color: #800080;">$from</span><span style="color: #000000;"> 
Content-type: multipart/mixed; boundary=</span>"<span style="color: #800080;">$boundary</span>""<span style="color: #000000;">;

</span><span style="color: #008000;">#</span><span style="color: #008000;"> 确定上传文件的MIME类型 </span>
<span style="color: #0000ff;">if</span> (<span style="color: #800080;">$attachment_type</span><span style="color: #000000;">) 
    </span><span style="color: #800080;">$mimeType</span> = <span style="color: #800080;">$attachment_type</span><span style="color: #000000;">; 
</span><span style="color: #008000;">#</span><span style="color: #008000;"> 如果浏览器没有指定文件的MIME类型， </span><span style="color: #008000;">
#</span><span style="color: #008000;"> 我们可以把它设为"application/unknown". </span>
<span style="color: #0000ff;">else</span> 
    <span style="color: #800080;">$mimeType</span> = "application/unknown"<span style="color: #000000;">;

</span><span style="color: #008000;">#</span><span style="color: #008000;"> 确定文件的名字 </span>
<span style="color: #800080;">$fileName</span> = <span style="color: #800080;">$attachment_name</span><span style="color: #000000;">;

</span><span style="color: #008000;">#</span><span style="color: #008000;"> 打开文件, 把整个文件读入一个变量 </span>
<span style="color: #800080;">$fp</span> = <span style="color: #008080;">fopen</span>(<span style="color: #800080;">$attachment</span>, "r"<span style="color: #000000;">);
</span><span style="color: #800080;">$read</span> = <span style="color: #008080;">fread</span>(<span style="color: #800080;">$fp</span>, <span style="color: #008080;">filesize</span>(<span style="color: #800080;">$attachment</span><span style="color: #000000;">));

</span><span style="color: #008000;">#</span><span style="color: #008000;"> 好，现在变量$read中保存的是包含整个文件内容的文本块。 </span><span style="color: #008000;">
#</span><span style="color: #008000;"> 现在我们要把这个文本块转换成邮件程序可以读懂的格式 </span><span style="color: #008000;">
#</span><span style="color: #008000;"> 我们用base64方法把它编码 </span>
<span style="color: #800080;">$read</span> = <span style="color: #008080;">base64_encode</span>(<span style="color: #800080;">$read</span><span style="color: #000000;">);

</span><span style="color: #008000;">#</span><span style="color: #008000;"> 现在我们有一个用base64方法编码的长字符串。 </span><span style="color: #008000;">
#</span><span style="color: #008000;"> 下一件事是要把这个长字符串切成由每行76个字符组成的小块 </span>
<span style="color: #800080;">$read</span> = <span style="color: #008080;">chunk_split</span>(<span style="color: #800080;">$read</span><span style="color: #000000;">);

</span><span style="color: #008000;">#</span><span style="color: #008000;"> 现在我们可以建立邮件的主体 </span>
<span style="color: #800080;">$body</span> = "--<span style="color: #800080;">$boundary</span><span style="color: #000000;"> 
Content-type: text/plain; charset=iso-8859-1 
Content-transfer-encoding: 8bit
</span><span style="color: #800080;">$body</span><span style="color: #000000;">
--</span><span style="color: #800080;">$boundary</span><span style="color: #000000;"> 
Content-type: </span><span style="color: #800080;">$mimeType</span>; name=<span style="color: #800080;">$fileName</span><span style="color: #000000;"> 
Content-disposition: attachment; filename=</span><span style="color: #800080;">$fileName</span><span style="color: #000000;"> 
Content-transfer-encoding: base64
</span><span style="color: #800080;">$read</span><span style="color: #000000;">
--</span><span style="color: #800080;">$boundary</span>--"<span style="color: #000000;">;

</span><span style="color: #008000;">#</span><span style="color: #008000;"> 发送邮件 </span>
<span style="color: #008080;">mail</span>(<span style="color: #800080;">$to</span>, <span style="color: #800080;">$subject</span>, <span style="color: #800080;">$body</span>, <span style="color: #800080;">$headers</span><span style="color: #000000;">); 
} 
</span>?&gt; </pre>
</div>]]></description></item><item><title>一个测试HTML Method的例子</title><link>http://www.cnblogs.com/eastson/archive/2013/01/31/2886956.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 31 Jan 2013 06:20:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/31/2886956.html</guid><description><![CDATA[<p><span>测试用代码：</span></p>
<div class="cnblogs_code">
<pre>&lt;form method="POST"&gt;<span style="color: #000000;">
    First name</span>: &lt;input type="text" name="fname" /&gt;<span style="color: #000000;">
    Last name</span>: &lt;input type="text" name="lname" /&gt;
    &lt;input type="submit" value="Submit" /&gt;
&lt;/form&gt;</pre>
</div>
<p>&nbsp;</p>
<p><span>使用GET时传送给服务的数据：</span><br /><code></code></p>
<div class="cnblogs_code">
<pre>GET /phpsocket/method.php?fname=steven&amp;lname=jobs HTTP/1.1<span style="color: #000000;">
Accept</span>: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, *<span style="color: #008000;">/*</span><span style="color: #008000;">
Referer: http://localhost/phpsocket/method.php?fname=steven&amp;lname=jobs
Accept-Language: zh-cn
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)
Host: localhost
Connection: Keep-Alive</span></pre>
</div>
<p>&nbsp;</p>
<p><span>使用POSTT时传送给服务的数据：</span></p>
<div class="cnblogs_code">
<pre>POST /phpsocket/method.php HTTP/1.1<span style="color: #000000;">
Accept</span>: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, *<span style="color: #008000;">/*</span><span style="color: #008000;">
Referer: http://localhost/phpsocket/method.php
Accept-Language: zh-cn
Content-Type: application/x-www-form-urlencoded
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; .NET4.0E)
Host: localhost
Content-Length: 23
Connection: Keep-Alive
Cache-Control: no-cache
Cookie: ZDEDebuggerPresent=php,phtml,php3

fname=steven&amp;lname=jobs</span></pre>
</div>
<p>&nbsp;</p>
<p><span>两者比较结果：</span><br /><span>1.&nbsp;GET提交时网址发生了变化，POST提交时网址没有变化；</span><br /><span>2.&nbsp;GET数据以网址QueryString的方式提交给服务器，POST数据以Content的方式提交给服务器。</span></p>]]></description></item><item><title>PHP用Socket发送电子邮件[转]</title><link>http://www.cnblogs.com/eastson/archive/2013/01/31/2886957.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 31 Jan 2013 06:20:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/31/2886957.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>&lt;?
*<span style="color: #000000;"> 名称：用Socket发送电子邮件 
</span>*<span style="color: #000000;"> 描述：本类实现了直接使用需要验证的SMTP服务器直接发送邮件，参考文章《用Socket发送电子邮件》作者：limodou 
</span>*<span style="color: #000000;"> 此文章比较早，他是用不用验证SMTP服务器发送邮件，现在基本上SMTP服务器都需要验证了，所以这个文章里的类 
意义也不是很大！同时参考了[RFC </span>1869<span style="color: #000000;">]和PHP手册！！和上文还有不同的是我用的不是fsockopen()函数 
具体你自己看吧！！我刚刚测试通过了，很爽！！ 
其实把这个类再改写一下就可以直接发送带附件的邮件了，期待。。。我过几天给大家写出来！ 
我刚刚调试通过，如果你不恶意去捉弄这个程序，他还是很听话的，过些日子我会对他完善加上发送附件的功能！！
即使你的虚拟主机不支持MAIL函数，现在也不怕了！快快试试这个吧！ 
请尊重别人的劳动成功，请保留此版权信息，谢谢！ 
作者：小露珠3</span>.3<span style="color: #000000;"> ，欢迎和我联系交流PHP QQ6550382 
</span><span style="color: #008080;">MAIL</span>：cleverzhang@tom.<span style="color: #000000;">com 
</span>*/ 

<span style="color: #008080;">set_time_limit</span>(120<span style="color: #000000;">); 

</span><span style="color: #0000ff;">class</span><span style="color: #000000;"> smtp_mail 
{ 
    </span><span style="color: #0000ff;">var</span> <span style="color: #800080;">$host</span>; <span style="color: #008000;">//</span><span style="color: #008000;">主机 </span>
    <span style="color: #0000ff;">var</span> <span style="color: #800080;">$port</span>; <span style="color: #008000;">//</span><span style="color: #008000;">端口 一般为25 </span>
    <span style="color: #0000ff;">var</span> <span style="color: #800080;">$user</span>; <span style="color: #008000;">//</span><span style="color: #008000;">SMTP认证的帐号 </span>
    <span style="color: #0000ff;">var</span> <span style="color: #800080;">$pass</span>; <span style="color: #008000;">//</span><span style="color: #008000;">认证密码 </span>
    <span style="color: #0000ff;">var</span> <span style="color: #800080;">$debug</span> = <span style="color: #0000ff;">false</span>; <span style="color: #008000;">//</span><span style="color: #008000;">是否显示和服务器会话信息？ </span>
    <span style="color: #0000ff;">var</span> <span style="color: #800080;">$conn</span><span style="color: #000000;">; 
    </span><span style="color: #0000ff;">var</span> <span style="color: #800080;">$result_str</span>; <span style="color: #008000;">//</span><span style="color: #008000;">结果 </span>
    <span style="color: #0000ff;">var</span> <span style="color: #800080;">$in</span>; <span style="color: #008000;">//</span><span style="color: #008000;">客户机发送的命令 </span>
    <span style="color: #0000ff;">var</span> <span style="color: #800080;">$from</span>; <span style="color: #008000;">//</span><span style="color: #008000;">源信箱 </span>
    <span style="color: #0000ff;">var</span> <span style="color: #800080;">$to</span>; <span style="color: #008000;">//</span><span style="color: #008000;">目标信箱 </span>
    <span style="color: #0000ff;">var</span> <span style="color: #800080;">$subject</span>; <span style="color: #008000;">//</span><span style="color: #008000;">主题 </span>
    <span style="color: #0000ff;">var</span> <span style="color: #800080;">$body</span>; <span style="color: #008000;">//</span><span style="color: #008000;">内容 </span>
    
    <span style="color: #0000ff;">function</span> smtp_mail(<span style="color: #800080;">$host</span>,<span style="color: #800080;">$port</span>,<span style="color: #800080;">$user</span>,<span style="color: #800080;">$pass</span>,<span style="color: #800080;">$debug</span>=<span style="color: #0000ff;">false</span><span style="color: #000000;">) 
    { 
        </span><span style="color: #800080;">$this</span>-&gt;host = <span style="color: #800080;">$host</span><span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;port = <span style="color: #800080;">$port</span><span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;user = <span style="color: #008080;">base64_encode</span>(<span style="color: #800080;">$user</span><span style="color: #000000;">); 
        </span><span style="color: #800080;">$this</span>-&gt;pass = <span style="color: #008080;">base64_encode</span>(<span style="color: #800080;">$pass</span><span style="color: #000000;">); 
        </span><span style="color: #800080;">$this</span>-&gt;debug = <span style="color: #800080;">$debug</span><span style="color: #000000;">; 
        
        </span><span style="color: #800080;">$this</span>-&gt;socket = socket_create (AF_INET, SOCK_STREAM, SOL_TCP); <span style="color: #008000;">//</span><span style="color: #008000;">具体用法请参考手册 </span>
        <span style="color: #0000ff;">if</span>(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">socket) 
        { 
            </span><span style="color: #800080;">$this</span>-&gt;result_str = "创建SOCKET:".<span style="color: #000000;">socket_strerror(socket_last_error()); 
            </span><span style="color: #800080;">$this</span>-&gt;debug_show(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">result_str); 
        } 
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> 
        { 
            </span><span style="color: #0000ff;">exit</span>("初始化失败，请检查您的网络连接和参数"<span style="color: #000000;">); 
        } 
        
        </span><span style="color: #800080;">$this</span>-&gt;conn = socket_connect(<span style="color: #800080;">$this</span>-&gt;socket,<span style="color: #800080;">$this</span>-&gt;host,<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">port); 
        </span><span style="color: #0000ff;">if</span>(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">conn) 
        { 
            </span><span style="color: #800080;">$this</span>-&gt;result_str = "创建SOCKET连接:".<span style="color: #000000;">socket_strerror(socket_last_error()); 
            </span><span style="color: #800080;">$this</span>-&gt;debug_show(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">result_str); 
        } 
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> 
        { 
            </span><span style="color: #0000ff;">exit</span>("初始化失败，请检查您的网络连接和参数"<span style="color: #000000;">); 
        } 
        
        </span><span style="color: #800080;">$this</span>-&gt;result_str = "服务器应答：&lt;font color=#cc0000&gt;".socket_read (<span style="color: #800080;">$this</span>-&gt;socket, 1024)."&lt;/font&gt;"<span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;debug_show(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">result_str); 
    } 
    
    </span><span style="color: #0000ff;">function</span> debug_show(<span style="color: #800080;">$str</span><span style="color: #000000;">) 
    { 
        </span><span style="color: #0000ff;">if</span>(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">debug) 
        { 
            </span><span style="color: #0000ff;">echo</span> <span style="color: #800080;">$str</span>."&lt;p&gt; "<span style="color: #000000;">; 
        } 
    } 
    
    </span><span style="color: #0000ff;">function</span> send(<span style="color: #800080;">$from</span>,<span style="color: #800080;">$to</span>,<span style="color: #800080;">$subject</span>,<span style="color: #800080;">$body</span><span style="color: #000000;">) 
    { 
        </span><span style="color: #0000ff;">if</span>(<span style="color: #800080;">$from</span> == "" || <span style="color: #800080;">$to</span> == ""<span style="color: #000000;">) 
        { 
            </span><span style="color: #0000ff;">exit</span>("请输入信箱地址"<span style="color: #000000;">); 
        } 
        
        </span><span style="color: #0000ff;">if</span>(<span style="color: #800080;">$subject</span> == "") <span style="color: #800080;">$sebject</span> = "无标题"<span style="color: #000000;">; 
        </span><span style="color: #0000ff;">if</span>(<span style="color: #800080;">$body</span> == "") <span style="color: #800080;">$body</span> = "无内容"<span style="color: #000000;">; 
        
        </span><span style="color: #800080;">$this</span>-&gt;from = <span style="color: #800080;">$from</span><span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;to = <span style="color: #800080;">$to</span><span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;subject = <span style="color: #800080;">$subject</span><span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;body = <span style="color: #800080;">$body</span><span style="color: #000000;">;
        
        </span><span style="color: #800080;">$All</span> = "From:".<span style="color: #800080;">$this</span>-&gt;from." "<span style="color: #000000;">; 
        </span><span style="color: #800080;">$All</span> .= "To:".<span style="color: #800080;">$this</span>-&gt;to." "<span style="color: #000000;">; 
        </span><span style="color: #800080;">$All</span> .= "Subject:".<span style="color: #800080;">$this</span>-&gt;subject." "<span style="color: #000000;">; 
        </span><span style="color: #800080;">$All</span> .= <span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">body; 
        
        </span><span style="color: #008000;">/*</span><span style="color: #008000;"> 
        如过把$All的内容再加处理，就可以实现发送MIME邮件了 
        不过还需要加很多程序 
        </span><span style="color: #008000;">*/</span> 
        
        <span style="color: #008000;">//</span><span style="color: #008000;">以下是和服务器会话 </span>
        <span style="color: #800080;">$this</span>-&gt;in = "EHLO HELO "<span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">docommand();
        </span><span style="color: #800080;">$this</span>-&gt;in = "AUTH LOGIN "<span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">docommand();
        </span><span style="color: #800080;">$this</span>-&gt;in = <span style="color: #800080;">$this</span>-&gt;user." "<span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">docommand();
        </span><span style="color: #800080;">$this</span>-&gt;in = <span style="color: #800080;">$this</span>-&gt;pass." "<span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">docommand();
        </span><span style="color: #800080;">$this</span>-&gt;in = "MAIL FROM:".<span style="color: #800080;">$this</span>-&gt;from." "<span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">docommand();
        </span><span style="color: #800080;">$this</span>-&gt;in = "RCPT TO:".<span style="color: #800080;">$this</span>-&gt;to." "<span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">docommand();
        </span><span style="color: #800080;">$this</span>-&gt;in = "DATA "<span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">docommand();
        </span><span style="color: #800080;">$this</span>-&gt;in = <span style="color: #800080;">$All</span>." . "<span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">docommand();
        </span><span style="color: #800080;">$this</span>-&gt;in = "QUIT "<span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">docommand();
        </span><span style="color: #008000;">//</span><span style="color: #008000;">结束，关闭连接</span>
<span style="color: #000000;">    } 
    
    </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> docommand() 
    { 
        socket_write (</span><span style="color: #800080;">$this</span>-&gt;socket, <span style="color: #800080;">$this</span>-&gt;in, <span style="color: #008080;">strlen</span> (<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">in)); 
        </span><span style="color: #800080;">$this</span>-&gt;debug_show("客户机命令：".<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">in); 
        </span><span style="color: #800080;">$this</span>-&gt;result_str = "服务器应答：&lt;font color=#cc0000&gt;".socket_read (<span style="color: #800080;">$this</span>-&gt;socket, 1024)."&lt;/font&gt;"<span style="color: #000000;">; 
        </span><span style="color: #800080;">$this</span>-&gt;debug_show(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">result_str); 
    } 
} 

</span><span style="color: #008000;">//</span><span style="color: #008000;">这个是我做的测试，我用的是smtp.163.com，那你的信箱也必须是163.com的，要不人家不让你发！！
//你用这个类的时候你修改成你自己的信箱就可以了 </span>
<span style="color: #800080;">$smtp</span> = <span style="color: #0000ff;">new</span> smtp_mail("smtp.163.com","25","你的163.com的帐号","你的密码"<span style="color: #000000;">); 

</span><span style="color: #008000;">//</span><span style="color: #008000;">如果你需要显示会话信息，请将上面的修改成 
//$smtp = new smtp_mail("smtp.163.com","25","你的163.com的帐号","你的密码",true); </span>
<span style="color: #800080;">$smtp</span>-&gt;send("你的163.com的帐号@163.com","目标地址","你好","你好"<span style="color: #000000;">); 
</span>?&gt;</pre>
</div>]]></description></item><item><title>eXtplorer：在线管理网站文件的利器</title><link>http://www.cnblogs.com/eastson/archive/2013/01/31/2886954.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 31 Jan 2013 06:17:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/31/2886954.html</guid><description><![CDATA[<p><span>eXtplorer是一个基于PHP与ExtJS开发的文件管理器。你可以用它浏览服务器上的文件与目录。编辑，复制，移动，删除文件。搜索，上传和删除文件。创建新的文件和目录。改变文件的权限属性。</span><br /><br /><span>安装&nbsp;eXtplorer：</span><br /><span>1.&nbsp;确认你服务器的&nbsp;PHP&nbsp;版本&gt;4.3&nbsp;</span><br /><span>2.&nbsp;解压缩下载下来的压缩包,&nbsp;使用你的FTP客户端上传源代码到服务器上的某个目录下，如&nbsp;/extplorer</span><br /><span>3.&nbsp;设置extplorer的目录可写，并且设置/ftp_tmp目录的权限为777&nbsp;</span><br /><span>4.&nbsp;在浏览器访问http://www.nextphp/extplorer（默认帐号和密码都是admin），他会弹出一个框让你里修改密码。一定要修改，不然让人获取权限，就可以删除你服务器上所有文件。&nbsp;如果你不能修改你的&nbsp;admin&nbsp;密码，可能是因为你的用户文件不可写，在FTP中，把&nbsp;/config&nbsp;目录下的".htusers.php"&nbsp;文件设置为可写。</span></p>
<p><span><img src="http://images.cnitblog.com/blog/111826/201301/31141716-446c6421536a4b8889f2634d1ac85cf1.jpg" alt="" /></span></p>]]></description></item><item><title>PHPXref：PHP文件交叉引用工具</title><link>http://www.cnblogs.com/eastson/archive/2013/01/31/2886949.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 31 Jan 2013 06:16:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/31/2886949.html</guid><description><![CDATA[<p><span>面对大型的开源程序，我们如果要在此基础上修改，二次开发，或者简单的读懂代码。那是非常有难度的。</span><br /><br /><span>非常好的是，PHPXref是一个相当好的工具，它能够使你快速读懂代码。这是因为，经过它处理后生成的文档中，你鼠标指针所到之处，它就会显示，这个函数在哪定义，哪些地方用到，包括是不是PHP函数，它都告诉你。对于变量，类也一样，并且，文件清单中，同时把文件中的注解也提取出来，让你一看就知此文件是做什么用的。</span><br /><br /><span>当然，它也不是万能的，仍有一项不足，那就是，对于完全面向对象的程序，对象的流程，它是不能表示出来的。比不上ROSE的反向工程功能。</span><br /><br /><span>PHPXref网站：</span><a href="http://phpxref.sourceforge.net/" target="_blank">http://phpxref.sourceforge.net</a><br /><span>PHPXref有不同平台的版本。并且，WINDOWS版本无需安装，更不需要任何第三方组件。解压后，即可运行。使用相当简单，只要将你要分析的源码复制到./source目录中，windows直接运行PHPXref.exe，linux直接运行PHPXref.pl，程序将会分析你的代码，将结果输出到output目录。打开查看即可。</span></p>]]></description></item><item><title>PHP函数glob()</title><link>http://www.cnblogs.com/eastson/archive/2013/01/31/2886948.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 31 Jan 2013 06:15:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/31/2886948.html</guid><description><![CDATA[<p><span>glob()&nbsp;函数依照&nbsp;libc&nbsp;glob()&nbsp;函数使用的规则寻找所有与&nbsp;pattern&nbsp;匹配的文件路径.</span></p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$files</span>=<span style="color: #008080;">glob</span>(&lsquo;*.<span style="color: #000000;">php&rsquo;);  
</span><span style="color: #008080;">print_r</span>(<span style="color: #800080;">$files</span><span style="color: #000000;">);  
</span><span style="color: #008000;">/*</span><span style="color: #008000;">
Array  
(  
    [0]=&gt;phptest.php  
    [1]=&gt;pi.php  
    [2]=&gt;post_output.php  
    [3]=&gt;test.php  
)  
</span><span style="color: #008000;">*/</span> 

<span style="color: #800080;">$files</span>=<span style="color: #008080;">glob</span>(&lsquo;*.{php,txt}&rsquo;,<span style="color: #000000;">GLOB_BRACE);  
</span><span style="color: #008080;">print_r</span>(<span style="color: #800080;">$files</span><span style="color: #000000;">);  
</span><span style="color: #008000;">/*</span><span style="color: #008000;">
Array  
(  
    [0]=&gt;phptest.php  
    [1]=&gt;pi.php  
    [2]=&gt;post_output.php  
    [3]=&gt;test.php  
    [4]=&gt;log.txt  
    [5]=&gt;test.txt  
)  
</span><span style="color: #008000;">*/</span> 

<span style="color: #008000;">//</span><span style="color: #008000;">请注意，这些文件其实是可以返回一个路径，这取决于查询条件</span>
<span style="color: #800080;">$files</span>=<span style="color: #008080;">glob</span>(&lsquo;../images/a*.<span style="color: #000000;">jpg&rsquo;);  
</span><span style="color: #008080;">print_r</span>(<span style="color: #800080;">$files</span><span style="color: #000000;">);  
</span><span style="color: #008000;">/*</span><span style="color: #008000;">
Array  
(  
    [0]=&gt;../images/apple.jpg  
    [1]=&gt;../images/art.jpg  
)  
</span><span style="color: #008000;">*/</span> 
 
<span style="color: #008000;">//</span><span style="color: #008000;">如果你想获得每个文件的完整路径，你可以调用realpath()函数</span>
<span style="color: #800080;">$files</span>=<span style="color: #008080;">glob</span>(&lsquo;../images/a*.<span style="color: #000000;">jpg&rsquo;);  
</span><span style="color: #800080;">$files</span>=<span style="color: #008080;">array_map</span>(&lsquo;<span style="color: #008080;">realpath</span>&rsquo;,<span style="color: #800080;">$files</span><span style="color: #000000;">);  
</span><span style="color: #008080;">print_r</span>(<span style="color: #800080;">$files</span><span style="color: #000000;">);  
</span><span style="color: #008000;">/*</span><span style="color: #008000;">
Array  
(  
    [0]=&gt;C:\wamp\www\images\apple.jpg  
    [1]=&gt;C:\wamp\www\images\art.jpg  
)  
</span><span style="color: #008000;">*/</span> </pre>
</div>]]></description></item><item><title>自动备份你的网站数据</title><link>http://www.cnblogs.com/eastson/archive/2013/01/31/2886776.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 31 Jan 2013 04:02:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/31/2886776.html</guid><description><![CDATA[<p><span>前端时间主机提供商服务器发生了问题，让人郁闷的事是将数据恢复到了一星期以前，导致好些博客数据丢失。</span><br /><br /><span>痛定思痛，想出了一个自动备份网站数据的方法。</span><br /><br /><span>1.&nbsp;在服务器上实现数据转成SQL</span><br /><span>为了实现服务器上的数据转成SQL脚本，需要在服务器上放一个PHP文件，这个PHP文件的目的是连接到数据库，然后将数据读取出来，最后再转成SQL。例如，我们放一个tosql.php文件在服务器htdocs目录，内容如下：</span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #008080;">error_reporting</span>(<span style="color: #ff00ff;">E_ALL</span> &amp; ~<span style="color: #ff00ff;">E_NOTICE</span><span style="color: #000000;">);

</span><span style="color: #0000ff;">include_once</span> 'application/configs/dbconfig.php'<span style="color: #000000;">;
</span><span style="color: #0000ff;">include_once</span> 'application/includes/db.class.php'<span style="color: #000000;">;

</span><span style="color: #008080;">header</span>('Expires: Mon, 26 Jul 1997 05:00:00 GMT'<span style="color: #000000;">);
</span><span style="color: #008080;">header</span>('Last-Modified: ' . <span style="color: #008080;">gmdate</span>( 'D, d M Y H:i:s') . ' GMT'<span style="color: #000000;">);
</span><span style="color: #008080;">header</span>('Cache-Control: no-store, no-cache, must-revalidate'<span style="color: #000000;">);
</span><span style="color: #008080;">header</span>('Cache-Control: post-check=0, pre-check=0', <span style="color: #0000ff;">false</span><span style="color: #000000;">);
</span><span style="color: #008080;">header</span>('Pragma: no-cache'<span style="color: #000000;">);

</span><span style="color: #008080;">header</span>("Content-type: text/plain; charset=utf-8"<span style="color: #000000;">);

</span><span style="color: #800080;">$db</span> = <span style="color: #0000ff;">new</span><span style="color: #000000;"> db();
</span><span style="color: #800080;">$db</span>-&gt;connect(<span style="color: #800080;">$config</span>['db']['host'], <span style="color: #800080;">$config</span>['db']['user'], <span style="color: #800080;">$config</span>['db']['pass'<span style="color: #000000;">]);
</span><span style="color: #800080;">$db</span>-&gt;select_db(<span style="color: #800080;">$config</span>['db']['name'<span style="color: #000000;">]);
</span><span style="color: #800080;">$db</span>-&gt;query('set names utf8'<span style="color: #000000;">);

</span><span style="color: #800080;">$sqldump</span> = ''<span style="color: #000000;">;

</span><span style="color: #008000;">//</span><span style="color: #008000;">  我的表名都以tbs_开头</span>
<span style="color: #800080;">$sql</span> = "SHOW TABLE STATUS WHERE name like 'tbs_%'"<span style="color: #000000;">;
</span><span style="color: #800080;">$query</span> = <span style="color: #800080;">$db</span>-&gt;query(<span style="color: #800080;">$sql</span><span style="color: #000000;">);
</span><span style="color: #0000ff;">while</span>(<span style="color: #800080;">$table</span> = <span style="color: #800080;">$db</span>-&gt;fetch_array(<span style="color: #800080;">$query</span><span style="color: #000000;">)) {
    </span><span style="color: #800080;">$sqldump</span> .= sql_dumptable(<span style="color: #800080;">$table</span>['Name'<span style="color: #000000;">]);
}

</span><span style="color: #0000ff;">echo</span> <span style="color: #800080;">$sqldump</span><span style="color: #000000;">;
  
</span><span style="color: #0000ff;">function</span> sql_dumptable(<span style="color: #800080;">$table</span><span style="color: #000000;">) 
{
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$db</span><span style="color: #000000;">;
  
  </span><span style="color: #800080;">$tabledump</span> = "DROP TABLE IF EXISTS <span style="color: #800080;">$table</span>;\n"<span style="color: #000000;">;
  </span><span style="color: #800080;">$createtable</span> = <span style="color: #800080;">$db</span>-&gt;query("SHOW CREATE TABLE <span style="color: #800080;">$table</span>"<span style="color: #000000;">);
  </span><span style="color: #800080;">$create</span> = <span style="color: #800080;">$db</span>-&gt;fetch_array(<span style="color: #800080;">$createtable</span><span style="color: #000000;">);
  </span><span style="color: #800080;">$tabledump</span> .= <span style="color: #800080;">$create</span>[1].";\n\n"<span style="color: #000000;">;

  </span><span style="color: #800080;">$rows</span> = <span style="color: #800080;">$db</span>-&gt;query("SELECT * FROM <span style="color: #800080;">$table</span>"<span style="color: #000000;">);
  </span><span style="color: #800080;">$numfields</span> = <span style="color: #800080;">$db</span>-&gt;num_fields(<span style="color: #800080;">$rows</span><span style="color: #000000;">);
  </span><span style="color: #800080;">$numrows</span> = <span style="color: #800080;">$db</span>-&gt;num_rows(<span style="color: #800080;">$rows</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">while</span> (<span style="color: #800080;">$row</span> = <span style="color: #800080;">$db</span>-&gt;fetch_array(<span style="color: #800080;">$rows</span><span style="color: #000000;">)) 
  {
    </span><span style="color: #800080;">$comma</span> = ""<span style="color: #000000;">;
    </span><span style="color: #800080;">$tabledump</span> .= "INSERT INTO <span style="color: #800080;">$table</span> VALUES("<span style="color: #000000;">;
    </span><span style="color: #0000ff;">for</span>(<span style="color: #800080;">$i</span> = 0; <span style="color: #800080;">$i</span> &lt; <span style="color: #800080;">$numfields</span>; <span style="color: #800080;">$i</span>++<span style="color: #000000;">){
      </span><span style="color: #800080;">$tabledump</span> .= <span style="color: #800080;">$comma</span>."'".<span style="color: #008080;">mysql_escape_string</span>(<span style="color: #800080;">$row</span>[<span style="color: #800080;">$i</span>])."'"<span style="color: #000000;">;
      </span><span style="color: #800080;">$comma</span> = ","<span style="color: #000000;">;
    }
    </span><span style="color: #800080;">$tabledump</span> .= ");\n"<span style="color: #000000;">;
  }

  </span><span style="color: #800080;">$tabledump</span> .= "\n"<span style="color: #000000;">;
  </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$tabledump</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p><span>2.&nbsp;在本地新增一个PHP文件，目的是从服务器上获取SQL基本，然后写入到本地文件。这个PHP文件取名为nextdata.php，内容如下：</span><br /><code></code></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php

</span><span style="color: #800080;">$filename</span> = <span style="color: #008080;">dirname</span>(<span style="color: #ff00ff;">__FILE__</span>) . '/data/tbs_' . <span style="color: #008080;">date</span>('YmdHis', <span style="color: #008080;">mktime</span>() + 3600 * 8) . '.sql'<span style="color: #000000;">;
</span><span style="color: #800080;">$sqldump</span> = <span style="color: #008080;">file_get_contents</span>('http://www.nextphp.com/tosql.php');<br /><span>file_put_contents($filename,&nbsp;$sqldump);</span></pre>
</div>
<p>&nbsp;</p>
<p><span>3.&nbsp;实现定时备份</span><br /><span>本地使用的是Windows操作系统，可以使用计划任务定时的执行备份任务，这样需要一个批处理文件。批处理文件名称为nextdata.bat，内如如下：</span></p>
<div class="cnblogs_code">
<pre>D:\wamp\bin\php\php5.3.5\php nextdata.php</pre>
</div>
<p>&nbsp;</p>
<p><span>经过上述三个步骤后，我们的计划任务就会定时的执行服务器上的tosql.php文件，然后将其内容写入到本地，从而实现了数据库的备份任务。</span></p>]]></description></item><item><title>统计MySQL数据库大小</title><link>http://www.cnblogs.com/eastson/archive/2013/01/25/2877014.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 25 Jan 2013 09:04:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/25/2877014.html</guid><description><![CDATA[<p>一条简单的语句就可以：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">SELECT</span> table_schema <span style="color: #0000ff;">AS</span> "DBName", <span style="color: #ff00ff;">sum</span>( data_length <span style="color: #808080;">+</span> index_length ) <span style="color: #0000ff;">AS</span><span style="color: #000000;"> "DBSize(Bytes)"
</span><span style="color: #0000ff;">FROM</span> information_schema.TABLES <span style="color: #0000ff;">GROUP</span> <span style="color: #0000ff;">BY</span> table_schema</pre>
</div>]]></description></item><item><title>解决 Agent admitted failure to sign using the key 问题 with ssh</title><link>http://www.cnblogs.com/eastson/archive/2013/01/19/2867619.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 19 Jan 2013 07:24:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/19/2867619.html</guid><description><![CDATA[<p><span>之前要在本机上装上ssh，可以通过sudo apt-get install ssh或者通过新立德来安装。如果没有进行配置的话，登录到本机或者远程主机需要该主机的密码才行。下面进行无密码登录的配置：<br /></span></p>
<p><span>&nbsp;很简单，执行ssh-keygen -t rsa命令，一路敲回车就行了，就在.ssh文件夹下生成了2个文件，一个公钥和一个私钥文件，&nbsp; id_rsa&nbsp; id_rsa.pub&nbsp; ，然后执行cp&nbsp; ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys命令。这样配置之后就可以实现无密码登录本机。如果需要登录到远程主机，只需要将authorized_keys文件发送到远程主机的～/.ssh/目录下。<br /><br /></span></p>
<p><span>現在的 ssh 使用同樣的方法會出現錯誤訊息</span></p>
<div><span>Agent admitted failure to sign using the key</span></div>
<p><span>解決方式 使用 ssh-add 指令将私钥 加进来 （根据个人的密匙命名不同更改 id_rsa）</span><br /><span># ssh-add&nbsp;&nbsp; ~/.ssh/id_rsa&nbsp;</span></p>
<p><span>再通过ssh 主机名 就可以实现无密码登录了。</span></p>]]></description></item><item><title>撞车之后，不要笨的跟猪一样！</title><link>http://www.cnblogs.com/eastson/archive/2013/01/10/2855149.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 10 Jan 2013 09:23:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/10/2855149.html</guid><description><![CDATA[<p class="bbsp"><span><span>1，对方全责提出私了1500，你死活不干，要求走保险，又是吵又是闹又是折腾，定损2200，修理厂要求2400，自掏200.</span></span></p>
<p class="bbsp">如果你同意私了，拿1500，报保险自己全责，车照样修好一文不掏白赚1500，第二年保费增加800，赚了700。&nbsp;</p>
<p class="bbsp">2.撞伤一人，送医院，被家属打骂，垫医药费8000。回家洗洗脸上的血痕。回头家属要求加10000私了，否则不给你医药发票，保险公司说没发票不给你报销，哦或。悲剧。其实你可以不去医院，现场等待交警出具处理意见。垫医药费就说炒股亏了，现在还欠起外债，等家属告你，告完保险公司全赔，皆大欢喜，你甚至不用出现。&nbsp;</p>
<p class="bbsp">3.撞车了，后面堵起一排车狂按喇叭，对方说我全责，我们退到路边处理，于是停到路边，结果对方马上变脸，说你丫的全责，这时候才想起应该先手机照相。&nbsp;</p>
<p class="bbsp">4.老公指挥倒车，自己一激动，油门当刹车，把老公双腿撞断，打电话给保险公司老老实实的上报，保险公司告诉你，老公不陪。。。。。其实你可以换个朋友的车撞。。你懂&nbsp;</p>
<p class="bbsp">5.车子在4s保养，保养完了，高高兴兴去取车，哦或，倒车时油门又当刹车（为什么是又=。=！），撞的稀里哗啦，造成损失4000+，你郁闷的找保险公司，人家礼貌的告诉你，在修理厂发生的事故，俺们不陪。。。。其实你可以换个地方发生事故，比如小区内和某小树发生亲密接触，你懂。&nbsp;</p>
<p class="bbsp">6.大雨天，早上去happy的去车库取车，发现车库被淹了，顿时泪流满面，赶快上车发动，让自己的车车逃离苦海，一点火，哦或，发动机打不燃。车没逃离苦海，你也进了苦海，4s店告知，发动机进水，报销，损失5w，你兴冲冲的去找保险公司，别个怜悯的看着你，小姐，驾驶员强行打火导致发动机进水，俺们不陪。&mdash;&mdash;&mdash;&mdash;你不点火，发动机是不会进水的哦亲。&nbsp;</p>
<p class="bbsp">7，在车上放了好多好多玩具，什么宝塔啊，香水瓶啊，小熊啊小猪啊。有一天差点撞到一个老太，一脚急刹车，香水瓶飞起来干到玻璃又弹到俺额头上。缝8针，玻璃费误工费医药费精神损失费共计3800，保险公司的接线员笑眯眯的告诉你，被车上物品撞坏不赔：如果车辆被车厢内或车顶装载的物品击伤，俺们还是不陪。&nbsp;</p>
<p class="bbsp">8,周末天气好爽，正在happy的飙车，左方一大货车突然一盘子甩到你道上和你kiss了一下，你只有一盘子打到花坛上，你小心肝扑通扑通的隔了5分钟才安静下来，一看大货车早没影了，马上打电话给保险员把大货车狂决一顿，并表示想要修车，保险员遗憾的告诉你把负全责的肇事人放跑了不赔：当与其他车辆发生碰撞时，责任在对方，如果放弃向第三方追偿的权利，也就放弃了向保险公司要求赔偿的权利哦亲。&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;其实你可以说，太阳晃花了我的眼，让我上了花坛，什么大货车？没看到~没注意。。。&nbsp;</p>
<p class="bbsp">9，路上爆胎，左转右转稳住方向，不用打电话给保险公司了，别个不陪。&nbsp;</p>
<p class="bbsp">10，停在楼下，上楼看了一集康熙来了，下楼一看，4个轮子没了，几块板砖给俺垫着，不用打电话给保险了，别个不陪。</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp">前言：相信还有许多车主对汽车保险了解不深，只有出了事故才会和汽车保险打交道，而作为外行的车主们根本不能摸清楚汽车保险的水究竟有多深，该如何处理才能成为最大程度的受益人呢？别着急，已经有许多身经百战、经验丰富的车主们为我们总结了他们的心得，我们只要阅读收藏以备不时之需就可以了，况且这是一份普通车主们就能读懂的汽车保险条文，保证能让你更深入地了解汽车保险和理赔，&ldquo;榨干&rdquo;保险公司的最后一滴血！谁说不是呢？买保险就图的省钱和省心！</p>
<p class="bbsp">&nbsp;</p>
<h3 class="bbsp">保险条款精解（一）车损险 VS 第三者责任险&nbsp;</h3>
<p class="bbsp">咱们先说说最主要的车损险和三责险。车损险和三责险是车辆保险的基本险，主要赔偿被保险车辆的损失以及由被保险车辆在使用中给第三者带来的损失！</p>
<p class="bbsp">您大概觉得即使是自然灾害造成的车辆损失，保险公司也照赔不误！这话对了一半，大部分的自然灾害造成的损失都赔，惟独一样除外&mdash;&mdash;地震！</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>案例1：如果您的车有幸在地震中被建筑物砸到的话，哈哈&hellip;&hellip;</em></p>
<p class="bbsp">应对方法：不要在地震一结束就急于申请赔偿，等地震过后几天再申请赔偿。</p>
<p class="bbsp">出险陈述：大概由于地震造成墙体松动，终于在某一天倒下了，砸坏了您的爱车，切记：千万不要提及地震时出险。</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>案例2：如果您的爱车在一次急刹车中，车里的东西飞到了风挡上造成玻璃破裂，您该怎么说呢？</em>&nbsp;</p>
<p class="bbsp">假如您老老实实的对保险公司说：&ldquo;我的纸巾盒飞起来打中了玻璃&hellip;&hellip;&rdquo;（哗！内功够高啊，呵呵，本人只是以纸巾盒举个例子开个玩笑。）&rdquo;那么你惨了！那个理赔员会指着自己的嘴对您说：&ldquo;请看我的口型&mdash;&mdash;NO！&rdquo;</p>
<p class="bbsp">应对方法：小小的改变一下事实&hellip;&hellip;</p>
<p class="bbsp">出险陈述：我的一个练过铁头功的朋友在刹车时撞碎了风挡，OK！记住：受车内&ldquo;物品&rdquo;的撞击所受损失，保险公司不赔的！但是人撞坏的就另当别论。</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>案例3：如果您的车在拖车时与别的车发生了碰撞，怎么办？</em></p>
<p class="bbsp">应对方法：忽略一些事实存在的东西&hellip;&hellip;</p>
<p class="bbsp">出险陈述：别提你在拖带车辆或者被别人拖带，否则不管你有没有事故责任，保险公司一律不赔。</p>
<p>&nbsp;</p>
<p class="bbsp"><em>案例4：如果你在事故时，打破了自己的玻璃又没有上玻璃险时，你会向保险公司索赔吗？</em></p>
<p class="bbsp">没上玻璃险找人家索赔能行吗？行，绝对行！玻璃险的全称是：玻璃单独破碎险，是指停车和使用时造成的玻璃损坏，而事故造成的玻璃损坏应由车损险来负责赔付。</p>
<p class="bbsp">如果您没上玻璃险，当您早上起来发现自己的汽车玻璃不知道被哪个混蛋打破了，怎么办呢？？呵呵，老招法：开车时急刹车造成的，又是脑袋惹的祸！（记得找一个身高差不多的朋友来当挡箭牌啊），如果是侧面的玻璃破了，就说侧滑时脑袋撞的好了，呵呵！</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>案例5：如果您的车在撞车时，打破了一个小灯，您该怎么办呢？</em></p>
<p class="bbsp">找保险公司，他绝对不敢不赔您，那么您以为是赚到了吗？不是的，实际上您大概要赔了，亏本了。</p>
<p class="bbsp">没听明白？告诉您，每辆车的全险大概在2500-5000之间（更高档的车会更贵），如果您在一年的保险期内没有索赔，那么您将在下一年投保时获得10%的无赔款优待，这笔帐您自己算算，如果索赔数额太小，哎，就这样算了吧，不如10%的折扣来的实在。</p>
<p>&nbsp;</p>
<h3 class="bbsp">保险条款精解(二) 丢车&mdash;&mdash;如何将损失降到最低点？</h3>
<p class="bbsp">车辆在停放和使用的过程中难免会让人有烦心的事，其中，丢车是最倒霉的事了，不过，如果你按照我说的去做，您的损失会降到最低点。</p>
<p class="bbsp">记得啊，一旦丢车，要做的第一件事情是什么？报警？错！车已经丢了，哪那么容易立刻找到啊，您也未免太高估中国警察的能力了，还是想想怎么减少损失吧！</p>
<p class="bbsp">减少损失？哪那么容易啊，车都丢了，怎么减啊？别忘了，有我呢！！！！</p>
<p class="bbsp">首先记得先看看自己的保险单里有没有上车辆盗抢险。什么，没有？那你认倒霉吧，找我也没用了，再买一辆吧！&nbsp;</p>
<p class="bbsp">如果你上了盗抢险，首先，我要恭喜你，你的损失可以降到最低了，不过，也要小心啊！这时你要做的是闭紧你的嘴，踏踏实实的看完我的帖子，否则你一定会后悔的！&nbsp;</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>案例1：盗抢险中规定，被保险人丢失行驶证、购车原始发票、车辆购置附加费凭证每一项增加0.5%的绝对免赔。丢失车钥匙增加5%的绝对免赔。这些规定在保险单中用颜色最浅的字体印刷，不信，您可以拿出单子仔细看看，肯定在某个不显眼的角落里能发现这段话。</em></p>
<p class="bbsp">所以不管你是否有一把备用钥匙曾经丢失过，或者是在您被开跑了的车里有一把钥匙，请您记住一定要忘记这件事，否则&hellip;&hellip;5%的损失您自己扛定了！</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>案例2：如果您的车在收费停车场或营业性修理厂中被盗，保险公司负责赔偿吗？</em></p>
<p class="bbsp">答案是：不赔！！因为上述场所对车辆有保管的责任，在保管期间，因保管人保管不善造成车辆损毁、丢失的，保管人应承担责任。保险公司不负责赔偿。</p>
<p class="bbsp">所以正确的方式是找停车场去索赔，所以，每次停车时记得收好停车费收据啊，虽然上面印着丢失不管，但根据我国合同法中关于格式合同的规定，这属于单方面推卸自己应负的责任！你尽管放心大胆的告他好了，呵呵，给您一个好消息，已经有人打赢了这样的官司，所以根据案件推溯的原则，以后的案件审判可以依照这个案例来判决，哈哈！&nbsp;</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>案例3：如果，停车场是您的朋友开的，或者您从侧面打听到这个停车场根本无力赔付您的爱车，您是否可以考虑改变一下丢车的地点呢？哈哈，我可什么都没说啊！您自己琢磨去吧。</em></p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>案例4：再有，如果您是一位老板，因为一些账目上的问题和朋友闹翻，而您的朋友又是一位小人，他偷偷把您的车偷走了，您猜到会是他干的，您会找保险公司赔偿吗？</em></p>
<p class="bbsp">告诉您，保险公司可不负责赔偿。因为条款规定：被保险人因与他人的民事、经济纠纷而致车辆被抢、被盗为责任免除。</p>
<p class="bbsp">所以，您大可忘记您的经济纠纷，直接到公安局和法院报案，记住，千万别说出您的怀疑对象，否则就会把经济问题扯进来了，以中国法院的工作效率，您大概半年之内得打车出门了！</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>案例5：如果您刚买了一辆新车，上了全险，但没有来得及领牌照（现在的交管规定：验车后的15个工作日后方可领牌证），出险后保险公司负责赔偿吗？</em></p>
<p class="bbsp">不负责赔偿。因为在出险时，保险车辆必须具备两个条件，一是保险车辆须有公安交通管理部门核发的行驶证或号牌，二是在规定期间内经公安交通管理部门检验合格。但一般经特别约定对公安部门规定需先保险后检验核发号牌的新入户车辆可负责车损险和三责险。所以负责丢车赔偿的盗抢险并没有生效，自然，您也得不到赔偿。&nbsp;</p>
<p class="bbsp">看来如果您不是仗着胆子改一下丢失的时间，新买的车就算送人了！我可又什么都没说啊！</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>案例6：如果您的车失而复得，保险公司如何处理赔款？</em></p>
<p class="bbsp">被盗抢的保险车辆找回后，如果保险公司尚未赔款的，应将该车辆归还给您，但是全车被盗抢期间，车辆受到的损坏或车上零部件、附属设备丢失需要修复的合理费用，保险公司负责赔偿。如果保险公司已经赔偿，应将车辆归还您，同时收回相应赔款。若您不愿收回原车，则车辆的所有权益归保险公司。</p>
<p class="bbsp">&nbsp;</p>
<h3 class="bbsp">保险条款精解（三） 撞车</h3>
<p class="bbsp">只要是撞车，保险公司全赔吗？当然不是你只要认真看看手里的保单赔偿免责条款就知道了，保险公司有一大堆不赔的东西呢，想把损失降到最低，还是来找我吧，哈哈！&nbsp;</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>案例1：假设你是一个新手，刚借了一辆车（当然也没准是租的车），在路上练车的时候，把你弟弟给撞了，你知道这辆车有三责险，你会找保险公司索赔吗？</em></p>
<p class="bbsp">答案：如果你去了，你就是神经病，保险公司会一脚把你踢出去，为什么？？</p>
<p class="bbsp">首先，你要知道什么是三责险，全称：第三者责任险。</p>
<p class="bbsp">那什么是第三者呢？</p>
<p class="bbsp">第三者指除保险人与被保险人之外的，因保险车辆的意外事故致使保险车辆下的人员或财产遭受损害的在车下的受害人。通俗的讲第三者就是排除四种人：即保险人、被保险人、本车发生事故时的驾驶员及其家庭成员、被保险人的家庭成员。</p>
<p class="bbsp">现在明白了，你作为当时的驾驶员，撞伤你的家人，保险公司是不赔的，好了，你知道该怎么办了！什么？还不知道？气死我了，换个驾驶员撞的不就完了嘛，真是的，害我什么都说出来了。</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>案例2：如果您有幸开车撞人了，而且全是您的责任，法院判您赔偿您包赔对方的经济损失、精神损失费、伤残损失费&hellip;&hellip;你该如何处理呢？？还能怎么样，给钱就是了！</em></p>
<p class="bbsp">错！大错特错！</p>
<p class="bbsp">你应该和对方家人商量，加大经济损失赔偿和伤残损失赔偿，尽量把精神赔偿降到最低，没有当然就更好了。</p>
<p class="bbsp">为什么？你问我为什么？这不是五马换六羊嘛。</p>
<p class="bbsp">老兄，你又错了，保险公司不是无条件地完全承担&ldquo;被保险人依法应当支付的赔偿金额&rdquo;，而是依照《道路交通事故处理办法》及保险合同的规定给予赔偿。而条款明确规定，因保险事故引起的任何有关精神损害赔偿为责任免除。所以无论法院判决被保险人是否应赔偿精神损失，保险公司均不负责赔偿。</p>
<p class="bbsp">明白了？？别的保险公司都替你赔，精神损失可不管，所以，宁可多给对方点钱，也别答应精神赔偿，总之，慷保险公司之慨呗，呵呵！</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>案例3：如果你又有幸撞车了，这回不是您的责任，而对方又不想赔钱，您可以找保险公司索赔吗？</em></p>
<p class="bbsp">答案：可以，不过您必须先向第三方索赔，才有可能获得保险公司的赔偿。如果您放弃了向第三方索赔的权利，而直接向保险公司索赔，保险公司不赔。因为您放弃了向第三方追偿的权利，同时也就放弃了向保险公司要求赔偿的权利。</p>
<p class="bbsp">所以，切记，切记，一定要先找对方赔，最好是有法庭的强制执行未果的证明，然后您就可以理直气壮的找保险公司了，剩下的烂摊子尽管让它们收拾去吧，谁让它们每年收了您那么多的保险费呢！</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>案例4：记得以前有个倒霉的司机在警察的指挥下，帮助警察拦截正在逃窜的罪犯，撞向了罪犯，结果两车相撞，那叫一个惨啊，保险公司会赔他吗？</em></p>
<p class="bbsp">当然不会啦，保险条款写的明明白白，驾驶员的&ldquo;故意行为&rdquo;不在赔偿之列，所以只能自己修车了：</p>
<p class="bbsp">所以，如果您没有足够的经济能力，在当英雄之前要考虑一下噢！！！</p>
<p>&nbsp;</p>
<h3 class="bbsp">保险条款精解（四）索赔&mdash;&mdash;不可不看，因为您以前可能没听说过</h3>
<p class="bbsp"><em>&nbsp;★保险案例一：一位朋友丢失爱车，已上全险，找保险公司索赔，未果，保险公司拒赔理由：到车管所查询，此车未年检。</em></p>
<p class="bbsp">案例分析：保险公司所做所为，十分合理，于保险合同条文也有根据：保险只对合格车辆生效，对于未年检的车辆只能视为不合格车辆，就算您保养的再好也没用，结果只能是丢了白丢，保险也上了白上，顶多退回保险现金价值。</p>
<p class="bbsp">案例结论：您的爱车，千万要按时年检，切不可后延，否则，罚款事小，拒赔事大，此时即使发生交通事故造成第三者损失，也将由您自己承担，保险白买了！</p>
<p class="bbsp">案例解决办法：按时年检，即使是一天，也不要晚；如果真的发生不幸，也要记住千万不要立即报案，尽快花银子把验车手续补齐后再办理报案索赔手续！&nbsp;</p>
<p class="bbsp">不好意思，刚才一阵头晕，我什么也没说吧？说了也是胡话。</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>★保险案例二：与上类似，驾驶员年审未做的请注意了，您在驾驶中发生的一切问题，保险公司不负责赔偿，理由与上例相似，恕不赘述。</em></p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp"><em>★保险案例三：这是一个经常被问到的问题：我的车刚买，还没有上牌照，保险是否生效？</em></p>
<p class="bbsp">解释：车辆在出险时，保险车辆必须具备两个条件，一是保险车辆须有公安交通管理部门核发的行驶证或号牌，二是在规定期间内经公安交通管理部门检验合格。</p>
<p class="bbsp">但一般经特别约定对规定需先保险后检验核发号牌的新车辆可负责车损险和三责险，所以，这时您的车丢了就算倒霉了，撞了人啥的还算凑合有保险公司给您顶着，现在清楚了吧！</p>
<p class="bbsp">&nbsp;</p>
<h3 class="bbsp">保险索赔证明材料原则：（因为这个问题有N人问起，所以在此一并解答）&nbsp;</h3>
<p class="bbsp">保险索赔时分几种情况：</p>
<p class="bbsp">1，事故经交通队出面解决的：</p>
<p class="bbsp">由交通队出具处罚单或调解书，经法院判决的，用判决书即可。这些材料绝对好使，在保险公司肯定一路绿灯。放心索赔好了</p>
<p class="bbsp">2，在小区内发生事故的：</p>
<p class="bbsp">重大事故：即车损严重的，还是要到交通队开证明，很麻烦；</p>
<p class="bbsp">一般剐蹭：到小区物业开证明，因为经常受怀疑，一般也很麻烦；&nbsp;</p>
<p class="bbsp">所以，最好报案时报在城市道路上，否则&hellip;&hellip;累死你！</p>
<p class="bbsp">3，在道路上发生小事故的，包括停车时的剐蹭</p>
<p class="bbsp">此类需要证明的原则是：是否涉及第三方？如涉及第三方赔付的，还是需要交通队证明。</p>
<p class="bbsp">如事故双方自行了断的，可以在索赔时注明：事故第三方自修，然后按车损险中的自责索赔，保险公司要是让您到交通队开证明，您一定得咬住了别松口，就说没地儿开去，保险公司一般也不会太较真。您要答应去开证明，别怪我没提醒您，您就跑去吧，赔的钱不定够不够油钱呢！</p>
<p class="bbsp">4，最背的人：</p>
<p class="bbsp">如果被别的车撞到后，肇事车逃逸，无法查找。情况严重的就比较麻烦，要通过交通队解决，可以由保险公司代为追偿。&nbsp;</p>
<p class="bbsp">不严重的话，最好也是以自责来解决索赔问题，而且要在索赔时注意到车身是否粘有对方车油漆，以及撞的方向，一定得自圆其说，否则你惨了！</p>
<p class="bbsp">&nbsp;</p>
<p class="bbsp">原文地址：<a href="http://bbs.qichelian.com/post_6537000_1.html" target="_blank">http://bbs.qichelian.com/post_6537000_1.html</a></p>]]></description></item><item><title>股票操作</title><link>http://www.cnblogs.com/eastson/archive/2013/01/09/2853755.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 09 Jan 2013 14:21:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/09/2853755.html</guid><description><![CDATA[<h1 class="m_logo fl"><a href="http://stockpage.10jqka.com.cn/601390/"><strong>中国中铁</strong>601390</a>&nbsp; 6000 3.26/3.30</h1>
<h1 class="m_logo fl"><a href="http://stockpage.10jqka.com.cn/000858/"><strong>五粮液</strong>000858</a>&nbsp; 350 28.55/28.65</h1>
<p>&nbsp;</p>]]></description></item><item><title>MyBB学习：用户头衔</title><link>http://www.cnblogs.com/eastson/archive/2013/01/07/2848678.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 07 Jan 2013 04:33:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/07/2848678.html</guid><description><![CDATA[<p>用户头衔是基于用户发帖数或者对论坛的贡献分配给用户的，通常显示在用户名的下面。</p>
<p>例如chinaunix.net论坛就定义了白手起家，稍有继续，腰缠万贯等等这些按照财富来划分的头衔，显示为一段文字：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201301/07092844-0536f8cd2f9c494b80bd8026f0096149.png" alt="" /></p>
<p>铁血网则用户头衔对应的军衔，显示对应的简章图片：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201301/07093232-bff4c823da4548cbb2213ce512fcad2f.png" alt="" /></p>
<p>默认的Mybb论坛则显示为星星图片，不同的头衔显示不同个数的星星：</p>
<p><img src="http://images.cnitblog.com/blog/111826/201301/07095330-2dd8a13cb81940b38266fbfa67aba4f8.png" alt="" /></p>
<p>&nbsp;</p>
<p>Mybb的用户头衔是在admin/modules/user/titles.php管理的，对应后台表mybb_usertitles：</p>
<table border="0">
<tbody>
<tr>
<td>字段&nbsp;</td>
<td>类型&nbsp;</td>
<td>说明&nbsp;</td>
</tr>
<tr>
<td>&nbsp;uit</td>
<td>smallint&nbsp;</td>
<td>用户头衔ID&nbsp;</td>
</tr>
<tr>
<td>&nbsp;posts</td>
<td>int&nbsp;</td>
<td>得到此头衔必需的最少发帖数&nbsp;</td>
</tr>
<tr>
<td>&nbsp;title</td>
<td>varchar(250)&nbsp;</td>
<td>用户头衔名称&nbsp;</td>
</tr>
<tr>
<td>&nbsp;stars</td>
<td>smallint&nbsp;</td>
<td>头衔对应图片显示的次数</td>
</tr>
<tr>
<td>&nbsp;starimage</td>
<td>varchar(120)&nbsp;</td>
<td>头衔对应的图片&nbsp;</td>
</tr>
</tbody>
</table>]]></description></item><item><title>MyBB学习：论坛应该有什么功能？</title><link>http://www.cnblogs.com/eastson/archive/2013/01/05/2845168.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 05 Jan 2013 01:23:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2013/01/05/2845168.html</guid><description><![CDATA[<p>xxxxxxxxx</p>]]></description></item><item><title>PHP时间处理要点</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837907.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:30:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837907.html</guid><description><![CDATA[<p><span>世界分为24个时区，GMT是零时区，也就是通常所说的格林尼治时间。中国位于东八区，比GMT时间多八个小时。例如，GMT现在是2011－06－27&nbsp;09：45：32，我们的时间就是2011－06－27&nbsp;01：45：32。</span><br /><br /><span>PHP的mktime()函数返回的是GMT时间，date()函数返回的是依据date.timezone或者date_default_timezone_set()函数设置的时区对应的时间。</span><br /><br /><span>PHP大陆内地可用的时区是：Asia/Chongqing&nbsp;，Asia/Shanghai&nbsp;，Asia/Urumqi&nbsp;（依次为重庆，上海，乌鲁木齐），港台地区可用：Asia/Macao&nbsp;，Asia/Hong_Kong&nbsp;，Asia/Taipei&nbsp;（依次为澳门，香港，台北），　　还有新加坡：Asia/Singapore。</span><br /><br /><span>PHP将时间戳转换成字符串可以使用gmdate()函数：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$s</span> = <span style="color: #008080;">gmdate</span>('Y-m-d H:i:s', 1308279886);</pre>
</div>
<p>&nbsp;</p>
<p><span data-mce-mark="1">PHP处理时间通常的做法是在MySQL数据库中用整数保存时间戳，在前端处理时增减对应的时区差量。</span><br /><br /><span data-mce-mark="1">MySQL可以使用FROM_UNIXITME()将时间戳转换成datetime的类型，此函数会受到时区的影响：</span></p>
<div class="cnblogs_code">
<pre>SET SESSION time_zone = '+0:00'<span style="color: #000000;">;
SELECT updatetime</span>, FROM_UNIXTIME(updatetime) FROM tbs_articles;</pre>
</div>
<p>上面SQL返回的是GMT时间，因为时区被设置成了零时区:</p>
<p><span data-mce-mark="1">1308279886&nbsp;&nbsp;&nbsp;&nbsp;2011-06-17&nbsp;03:04:46</span><br /><span data-mce-mark="1">如果将执行SET&nbsp;SESSION&nbsp;time_zone&nbsp;=&nbsp;'+8:00'，返回的结果是：</span><br /><span data-mce-mark="1">1308279886&nbsp;&nbsp;&nbsp;&nbsp;2011-06-17&nbsp;11:04:46</span><br /><br /><span data-mce-mark="1">MySQL可以使用DATE_FORMAT函数格式化datetime类型：</span></p>
<div class="cnblogs_code">
<pre>SET SESSION time_zone = '+0:00'<span style="color: #000000;">;
SELECT updatetime</span>, FROM_UNIXTIME(updatetime), DATE_FORMAT(FROM_UNIXTIME(updatetime), '%Y-%m-%d %H:%i:%s'<span style="color: #000000;">) FROM tbs_articles;
SELECT updatetime</span>, FROM_UNIXTIME(updatetime), DATE_FORMAT(FROM_UNIXTIME(updatetime + 8 * 3600), '%Y-%m-%d %H:%i:%s') FROM tbs_articles;</pre>
</div>
<p>&nbsp;</p>
<p><span data-mce-mark="1">参考：</span><br /><span data-mce-mark="1">1.&nbsp;世界时区/时间</span><a href="http://app.travel.ifeng.com/tools/timezone-index-3.html" target="_blank">http://app.travel.ifeng.com/tools/timezone-index-3.html</a><br /><span data-mce-mark="1">2.&nbsp;世界时区图</span><a href="http://www.24-hotel.com.cn/w_hotel/world_time.asp" target="_blank">http://www.24-hotel.com.cn/w_hotel/world_time.asp</a><br /><span data-mce-mark="1">3.&nbsp;PHP所支持的时区列表</span><a href="http://php.net/manual/zh/timezones.php" target="_blank">http://php.net/manual/zh/timezones.php</a><br /><span data-mce-mark="1">4.&nbsp;MySQL日期和时间函数</span><a href="http://www.phpchina.com/resource/manual/mysql/functions.html#date-and-time-functions" target="_blank">http://www.phpchina.com/resource/manual/mysql/functions.html#date-and-time-functions</a><br /><span data-mce-mark="1">5.&nbsp;PHP日期和格式</span><a href="http://cn.php.net/manual/zh/function.date.php" target="_blank">http://cn.php.net/manual/zh/function.date.php</a></p>]]></description></item><item><title>PHP遍历目录</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837908.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:30:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837908.html</guid><description><![CDATA[<p>PHP遍历目录有两种方式，一种是使用传统的opendir()方式，另外一种是使用DirectoryIterator方式。<br /><br />使用opendir()遍历目录：</p>
<div class="cnblogs_code">
<pre>if (is_dir($dir)) {
    if ($dh = opendir($dir)) {
        while (($file = readdir($dh)) !== false) {
            echo "filename: $file : filetype: " . filetype($dir . $file) . "\n";
        }
        closedir($dh);
    }
}</pre>
</div>
<p>&nbsp;</p>
<p><span>使用DirectoryIterator遍历目录：</span></p>
<div class="cnblogs_code">
<pre>$files = new DirectoryIterator($path);
foreach ($files as $file) {
    $this-&gt;_storage-&gt;offsetSet($file-&gt;getFilename(), $file-&gt;getFileInfo());
}</pre>
</div>]]></description></item><item><title>PHP实现读写分离</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837903.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:28:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837903.html</guid><description><![CDATA[<p>网上看到一篇文件，内容是讲PHP实现更新数据库和查询数据库分开不同的连接。<br /><br />主要特性：<br />1.&nbsp;简单的读写分离<br />2.&nbsp;一个主数据库，可以添加更多的只读数据库<br />3.&nbsp;读写分离但不用担心某些特性不支持<br />4.&nbsp;缺点：同时连接两个数据库<br /><br />mysql_rw_php.class.php：</p>
<div class="cnblogs_code">
<pre>&lt;?php
/****************************************
*** mysql-rw-php version 0.1 @ 2009-4-16
*** code by hqlulu#gmail.com
*** http://www.aslibra.com
*** http://code.google.com/p/mysql-rw-php/
*** code modify from class_mysql.php (uchome)
****************************************/

class mysql_rw_php {
    //查询个数
    var $querynum = 0;
    //当前操作的数据库连接
    var $link = null;
    //字符集
    var $charset;
    //当前数据库
    var $cur_db = '';
    //是否存在有效的只读数据库连接
    var $ro_exist = false;
    //只读数据库连接
    var $link_ro = null;
    //读写数据库连接
    var $link_rw = null;
    
    function mysql_rw_php(){
    }
    
    function connect($dbhost, $dbuser, $dbpw, $dbname = '', $pconnect = 0, $halt = TRUE) {
        if($pconnect) {
            if(!$this-&gt;link = @mysql_pconnect($dbhost, $dbuser, $dbpw)) {
                $halt &amp;&amp; $this-&gt;halt('Can not connect to MySQL server');
            }
        } else {
            if(!$this-&gt;link = @mysql_connect($dbhost, $dbuser, $dbpw)) {
                $halt &amp;&amp; $this-&gt;halt('Can not connect to MySQL server');
            }
        }
        
        //只读连接失败
        if(!$this-&gt;link &amp;&amp; !$halt) return false;
        
        //未初始化rw时，第一个连接作为rw
        if($this-&gt;link_rw == null)
            $this-&gt;link_rw = $this-&gt;link;
            
        if($this-&gt;version() &gt; '4.1') {
            if($this-&gt;charset) {
                @mysql_query("SET character_set_connection=$this-&gt;charset, character_set_results=$this-&gt;charset, character_set_client=binary", $this-&gt;link);
            }
            if($this-&gt;version() &gt; '5.0.1') {
                @mysql_query("SET sql_mode=''", $this-&gt;link);
            }
        }
    
        if($dbname) {
            $this-&gt;select_db($dbname);
        }
    }

    //连接一个只读的mysql数据库
    function connect_ro($dbhost, $dbuser, $dbpw, $dbname = '', $pconnect = 0){
        if($this-&gt;link_rw == null)
            $this-&gt;link_rw = $this-&gt;link;
            
        $this-&gt;link = null;
        
        //不产生halt错误
        $this-&gt;connect($dbhost, $dbuser, $dbpw, $dbname, $pconnect, false);
        if($this-&gt;link){
            //连接成功
            //echo "link ro sussess!&lt;br&gt;";
            $this-&gt;ro_exist = true;
            $this-&gt;link_ro = $this-&gt;link;
            if($this-&gt;cur_db){
                //如果已经选择过数据库则需要操作一次
                @mysql_select_db($this-&gt;cur_db, $this-&gt;link_ro);
            }
        }else{
            //连接失败
            //echo "link ro failed!&lt;br&gt;";
            $this-&gt;link = &amp;$this-&gt;link_rw;
        }
    }
    
    //设置一系列只读数据库并且连接其中一个
    function set_ro_list($ro_list){
        if(is_array($ro_list)){
            //随机选择其中一个
            $link_ro = $ro_list[array_rand($ro_list)];
            $this-&gt;connect_ro($link_ro['dbhost'], $link_ro['dbuser'], $link_ro['dbpw']);
        }
    }
    
    function select_db($dbname) {
        //同时操作两个数据库连接
        $this-&gt;cur_db = $dbname;
        if($this-&gt;ro_exist){
            @mysql_select_db($dbname, $this-&gt;link_ro);
        }
        return @mysql_select_db($dbname, $this-&gt;link_rw);
    }
    
    function fetch_array($query, $result_type = MYSQL_ASSOC) {
        return mysql_fetch_array($query, $result_type);
    }
    
    function fetch_one_array($sql, $type = '') {
        $qr = $this-&gt;query($sql, $type);
        return $this-&gt;fetch_array($qr);
    }
    
    function query($sql, $type = '') {
        $this-&gt;link = &amp;$this-&gt;link_rw;
        //判断是否select语句
        if($this-&gt;ro_exist &amp;&amp; preg_match ("/^(/s*)select/i", $sql)){
            $this-&gt;link = &amp;$this-&gt;link_ro;
        }
        $func = $type == 'UNBUFFERED' &amp;&amp; @function_exists('mysql_unbuffered_query') ?
                'mysql_unbuffered_query' : 'mysql_query';
        if(!($query = $func($sql, $this-&gt;link)) &amp;&amp; $type != 'SILENT') {
            $this-&gt;halt('MySQL Query Error', $sql);
        }
        $this-&gt;querynum++;
        return $query;
    }
    
    function affected_rows() {
        return mysql_affected_rows($this-&gt;link);
    }
    
    function error() {
        return (($this-&gt;link) ? mysql_error($this-&gt;link) : mysql_error());
    }
    
    function errno() {
        return intval(($this-&gt;link) ? mysql_errno($this-&gt;link) : mysql_errno());
    }
    
    function result($query, $row) {
        $query = @mysql_result($query, $row);
        return $query;
    }
    
    function num_rows($query) {
        $query = mysql_num_rows($query);
        return $query;
    }
    
    function num_fields($query) {
        return mysql_num_fields($query);
    }
    
    function free_result($query) {
        return mysql_free_result($query);
    }
    
    function insert_id() {
        return ($id = mysql_insert_id($this-&gt;link)) &gt;= 0 ? $id : $this-&gt;result($this-&gt;query("SELECT last_insert_id()"), 0);
    }
    
    function fetch_row($query) {
        $query = mysql_fetch_row($query);
        return $query;
    }
    
    function fetch_fields($query) {
        return mysql_fetch_field($query);
    }
    
    function version() {
        return mysql_get_server_info($this-&gt;link);
    }
    
    function close() {
        return mysql_close($this-&gt;link);
    }
    
    function halt($message = '', $sql = '') {
        $dberror = $this-&gt;error();
        $dberrno = $this-&gt;errno();
        echo "&lt;div style=/"position:absolute;font-size:11px;font-family:verdana,arial;background:#EBEBEB;padding:0.5em;/"&gt;
        &lt;b&gt;MySQL Error&lt;/b&gt;&lt;br&gt;
        &lt;b&gt;Message&lt;/b&gt;: $message&lt;br&gt;
        &lt;b&gt;SQL&lt;/b&gt;: $sql&lt;br&gt;
        &lt;b&gt;Error&lt;/b&gt;: $dberror&lt;br&gt;
        &lt;b&gt;Errno.&lt;/b&gt;: $dberrno&lt;br&gt;
        &lt;/div&gt;";
        exit();
    }
}
?&gt;</pre>
</div>
<p>&nbsp;</p>
<p>example.php：</p>
<div class="cnblogs_code">
<pre>&lt;?php
/****************************************
*** mysql-rw-php version 0.1 @ 2009-4-16
*** code by hqlulu#gmail.com
*** http://www.aslibra.com
*** http://code.google.com/p/mysql-rw-php/
*** code modify from class_mysql.php (uchome)
****************************************/

require_once('mysql_rw_php.class.php');
//rw info
$db_rw = array(
    'dbhost'=&gt;'www.aslibra.com',
    'dbuser'=&gt;'aslibra',
    'dbpw'=&gt;'www.aslibra.com',
    'dbname'=&gt;'test'
);

$db_ro = array(
    array(
        'dbhost'=&gt;'www.aslibra.com:4306',
        'dbuser'=&gt;'aslibra',
        'dbpw'=&gt;'www.aslibra.com'
    )
);

$DB = new mysql_rw_php;

//connect Master
$DB-&gt;connect($db_rw[dbhost], $db_rw[dbuser], $db_rw[dbpw], $db_rw[dbname]);

//Method 1: connect one server
$DB-&gt;connect_ro($db_ro[0][dbhost], $db_ro[0][dbuser], $db_ro[0][dbpw]);

//Method 2: connect one server from a list by rand
$DB-&gt;set_ro_list($db_ro);

//send to rw
$sql = "insert into a set a='test'";
$DB-&gt;query($sql);

//send to ro
$sql = "select * from a";
$qr = $DB-&gt;query($sql);
while($row = $DB-&gt;fetch_array($qr)) {
    echo $row[a];
}
?&gt;</pre>
</div>]]></description></item><item><title>PHP中strlen和mb_strlen的区别</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837902.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:26:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837902.html</guid><description><![CDATA[<p><span>在PHP中，strlen与mb_strlen是求字符串长度的函数，但是对于一些初学者来说，如果不看手册，也许不太清楚其中的区别。下面通过例子，讲解这两者之间的区别。</span><br /><br /><span>先看例子：</span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php  
</span><span style="color: #008000;">//</span><span style="color: #008000;">测试时文件的编码方式要是UTF8  </span>
<span style="color: #800080;">$str</span>='中文a字1符'<span style="color: #000000;">;  
</span><span style="color: #0000ff;">echo</span> <span style="color: #008080;">strlen</span>(<span style="color: #800080;">$str</span>).'&lt;br&gt;';<span style="color: #008000;">//</span><span style="color: #008000;">14  </span>
<span style="color: #0000ff;">echo</span> mb_strlen(<span style="color: #800080;">$str</span>,'utf8').'&lt;br&gt;';<span style="color: #008000;">//</span><span style="color: #008000;">6  </span>
<span style="color: #0000ff;">echo</span> mb_strlen(<span style="color: #800080;">$str</span>,'gbk').'&lt;br&gt;';<span style="color: #008000;">//</span><span style="color: #008000;">8  </span>
<span style="color: #0000ff;">echo</span> mb_strlen(<span style="color: #800080;">$str</span>,'gb2312').'&lt;br&gt;';<span style="color: #008000;">//</span><span style="color: #008000;">10  </span>
?&gt; </pre>
</div>
<p>&nbsp;</p>
<p><span data-mce-mark="1">结果分析：</span><br /><span data-mce-mark="1">在strlen计算时，对待一个UTF8的中文字符是3个长度，所以&ldquo;中文a字1符&rdquo;长度是3*4+2=14,在mb_strlen计算时，选定内码为UTF8，则会将一个中文字符当作长度1来计算，所以&ldquo;中文a字1符&rdquo;长度是6&nbsp;.</span><br /><br /><span data-mce-mark="1">利用这两个函数则可以联合计算出一个中英文混排的串的占位是多少（一个中文字符的占位是2，英文字符是1）:</span><br /><code>echo&nbsp;(strlen($str)&nbsp;+&nbsp;mb_strlen($str,'UTF8'))&nbsp;/&nbsp;2;&nbsp;</code><br /><span data-mce-mark="1">例如&nbsp;&ldquo;中文a字1符&rdquo;&nbsp;的strlen($str)值是14，mb_strlen($str)值是6，则可以计算出&ldquo;中文a字1符&rdquo;的占位是10.</span><br /><br /><span data-mce-mark="1">PHP内置的字符串长度函数strlen无法正确处理中文字符串，它得到的只是字符串所占的字节数。对于GB2312的中文编码，strlen得到的值是汉字个数的2倍，而对于UTF-8编码的中文，就是3倍的差异了（在&nbsp;UTF-8编码下，一个汉字占3个字节）。</span><br /><br /><span data-mce-mark="1">采用mb_strlen函数可以较好地解决这个问题。mb_strlen的用法和&nbsp;strlen类似，只不过它有第二个可选参数用于指定字符编码。例如得到UTF-8的字符串$str长度，可以用&nbsp;mb_strlen($str,'UTF-8')。如果省略第二个参数，则会使用PHP的内部编码。内部编码可以通过mb_internal_encoding()函数得到。</span><br /><br /><span data-mce-mark="1">需要注意的是，mb_strlen并不是PHP核心函数，使用前需要确保在php.ini中加载了php_mbstring.dll，即确保&ldquo;extension=php_mbstring.dll&rdquo;这一行存在并且没有被注释掉，否则会出现未定义函&nbsp;数的问题。</span></p>]]></description></item><item><title>PHP中urlencode和rawurlencode的区别</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837901.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:25:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837901.html</guid><description><![CDATA[<p><span>昨天看UCHome源码的时候，发现有些地方用urlencode，有些地方用rawurlencode。由于对这两个方法的差异不是很清楚，特意写了一段代码来测试。</span><br /><br /><span>请将下面的代码保存到一个PHP文件中：</span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php  
test_encode(</span>'http://www.baidu.com?a=search&amp;k=eclipse'<span style="color: #000000;">);  
test_encode(</span>':/?= &amp;#'<span style="color: #000000;">);  
test_encode(</span>'中文'<span style="color: #000000;">);  
</span><span style="color: #0000ff;">function</span> test_encode(<span style="color: #800080;">$s</span><span style="color: #000000;">)  
{  
  </span><span style="color: #0000ff;">echo</span> "&lt;b&gt;urlencode('<span style="color: #800080;">$s</span>')&lt;/b&gt; = [&lt;b&gt;"<span style="color: #000000;">;  
  </span><span style="color: #008080;">var_dump</span>(<span style="color: #008080;">urlencode</span>(<span style="color: #800080;">$s</span><span style="color: #000000;">));    
  </span><span style="color: #0000ff;">echo</span> "&lt;/b&gt;]&lt;br/&gt;"<span style="color: #000000;">;  
  </span><span style="color: #0000ff;">echo</span> "&lt;b&gt;rawurlencode('<span style="color: #800080;">$s</span>')&lt;/b&gt; = [&lt;b&gt;"<span style="color: #000000;">;  
  </span><span style="color: #008080;">var_dump</span>(<span style="color: #008080;">rawurlencode</span>(<span style="color: #800080;">$s</span><span style="color: #000000;">));    
  </span><span style="color: #0000ff;">echo</span> "&lt;/b&gt;]&lt;br/&gt;"<span style="color: #000000;">;  
} </span></pre>
</div>
<p>&nbsp;</p>
<p><span data-mce-mark="1">上面代码执行结果如下：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">urlencode</span>('http://www.baidu.com?a=search&amp;k=eclipse') = [<span style="color: #0000ff;">string</span>(53) "http%3A%2F%2Fwww.baidu.com%3Fa%3Dsearch%26k%3Declipse"<span style="color: #000000;"> ]  
</span><span style="color: #008080;">rawurlencode</span>('http://www.baidu.com?a=search&amp;k=eclipse') = [<span style="color: #0000ff;">string</span>(53) "http%3A%2F%2Fwww.baidu.com%3Fa%3Dsearch%26k%3Declipse"<span style="color: #000000;"> ]  
</span><span style="color: #008080;">urlencode</span>(':/?= &amp;#') = [<span style="color: #0000ff;">string</span>(19) "%3A%2F%3F%3D+%26%23"<span style="color: #000000;"> ]  
</span><span style="color: #008080;">rawurlencode</span>(':/?= &amp;#') = [<span style="color: #0000ff;">string</span>(21) "%3A%2F%3F%3D%20%26%23"<span style="color: #000000;"> ]  
</span><span style="color: #008080;">urlencode</span>('中文') = [<span style="color: #0000ff;">string</span>(18) "%E4%B8%AD%E6%96%87"<span style="color: #000000;"> ]  
</span><span style="color: #008080;">rawurlencode</span>('中文') = [<span style="color: #0000ff;">string</span>(18) "%E4%B8%AD%E6%96%87" ]  </pre>
</div>
<p>&nbsp;</p>
<p><span data-mce-mark="1">从上面的执行结果可以看出，urlencode和rawurlencode两个方法在处理字母数字，特殊符号，中文的时候结果都是一样的，唯一的不同是对空格的处理，urlencode处理成&ldquo;+&rdquo;，rawurlencode处理成&ldquo;%20&rdquo;。</span><br /><br /><span data-mce-mark="1">看看PHP&nbsp;Manual对两个函数的说明：</span><br /><span data-mce-mark="1">urlencode：返回字符串，此字符串中除了&nbsp;-_.&nbsp;之外的所有非字母数字字符都将被替换成百分号（%）后跟两位十六进制数，空格则编码为加号（+）。此编码与&nbsp;WWW&nbsp;表单&nbsp;POST&nbsp;数据的编码方式是一样的，同时与&nbsp;application/x-www-form-urlencoded&nbsp;的媒体类型编码方式一样。由于历史原因，此编码在将空格编码为加号（+）方面与&nbsp;RFC1738&nbsp;编码（参见&nbsp;rawurlencode()）不同。</span><br /><span data-mce-mark="1">rawurlencode：返回字符串，此字符串中除了&nbsp;-_.&nbsp;之外的所有非字母数字字符都将被替换成百分号（%）后跟两位十六进制数。这是在&nbsp;RFC&nbsp;1738&nbsp;中描述的编码，是为了保护原义字符以免其被解释为特殊的&nbsp;URL&nbsp;定界符，同时保护&nbsp;URL&nbsp;格式以免其被传输媒体（像一些邮件系统）使用字符转换时弄乱。</span></p>]]></description></item><item><title>UCHome: 设置error_reporting</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837898.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:24:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837898.html</guid><description><![CDATA[<p><span>一个PHP系统，在开发的时候我们都是很希望能够得到非常详细的信息，用于代码的调试，比如指出问题出在哪里，在什么文件，在多少行，什么变量没有定义等。但在实际运行的时候，由于安全的考虑，我们不想给最终的使用者太多有关于服务器的信息，就很有必要屏蔽掉这些调试内容。</span><br /><br /><span>PHP为开发者提供了很全面的关于这方面的考虑。error_reporting()函数可以指定PHP代码在运行时哪些内容可以显示，哪些内容不显示，可以在php.ini中指定，也可以在运行时指定。</span><br /><br /><span>建立一个配置文件config.php，在配置文件定义一个常量用来控制当前是开发环境还是运行环境：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">define</span>('D_BUG', '0');</pre>
</div>
<p>&nbsp;</p>
<p><span data-mce-mark="1">建立一个通用的包含文件common.php，在里面依据D_BUG设置error_reporting：</span></p>
<div class="cnblogs_code">
<pre>D_BUG?<span style="color: #008080;">error_reporting</span>(<span style="color: #ff00ff;">E_ALL</span>):<span style="color: #008080;">error_reporting</span>(0);</pre>
</div>
<p>上面的error_reporting设置让PHP在开发环境是显示所有的信息，在运行环境是则什么信息也不显示。</p>]]></description></item><item><title>UCHome: 转义mysql_escape_string()</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837896.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:23:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837896.html</guid><description><![CDATA[<p><span data-mce-mark="1">在查询数据库时，很多时候我们会在查询的条件中包含反斜线（/），双引号(")，单引号(')。这三种符号在SQL语句中通常都有着特殊的含义，不能直接使用。</span><br /><br /><span data-mce-mark="1">mysql_escape_string()可以帮我们解决这个问题。</span><br /><br /><span data-mce-mark="1">假设这样一个例子：客户端有一个HTML表单，表单里面有一个input输入框，名称为item。当使用者在item输入框输入如下内容：Zak's&nbsp;Laptop，然后点击提交按钮。服务端在收到这个请求时该如何处理呢？</span><br /><br /><span data-mce-mark="1">不正确的处理方式：</span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;" data-mce-mark="1">php
</span><span style="color: #800080;" data-mce-mark="1">$item</span> = <span style="color: #800080;" data-mce-mark="1">$_REQUEST</span><span style="color: #000000;" data-mce-mark="1">[&lsquo;item&rsquo;];
</span><span style="color: #800080;" data-mce-mark="1">$sql_query</span> = "SELECT * FROM admin_items WHERE item_name = '<span style="color: #800080;" data-mce-mark="1">$item</span>'"<span style="color: #000000;" data-mce-mark="1">;
</span><span style="color: #008080;" data-mce-mark="1">printf</span> ("SQL: %s\n", <span style="color: #800080;" data-mce-mark="1">$sql_query</span><span style="color: #000000;" data-mce-mark="1">);
</span>?&gt; </pre>
</div>
<p>输出结果：</p>
<p>&nbsp;</p>
<div class="cnblogs_code">
<pre>SQL: SELECT * FROM admin_items WHERE item_name = 'Zak's Laptop' </pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span>从结果可以看书，输出的SQL很明显就是错误的。</span><span>正确的处理方式：</span><br /><code></code></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #800080;">$item</span> = <span style="color: #008080;">mysql_escape_string</span>(<span style="color: #800080;">$_REQUEST</span><span style="color: #000000;">[&lsquo;item&rsquo;]);
</span><span style="color: #800080;">$sql_query</span> = "SELECT * FROM admin_items WHERE item_name = '<span style="color: #800080;">$item</span>'"<span style="color: #000000;">;
</span><span style="color: #008080;">printf</span> ("SQL: %s\n", <span style="color: #800080;">$sql_query</span><span style="color: #000000;">);
</span>?&gt;</pre>
</div>
<p><code></code><span>输出结果：</span></p>
<div class="cnblogs_code">
<pre>SQL: SELECT * FROM admin_items WHERE item_name = 'Zak\'s Laptop' </pre>
</div>
<p>可以看出，mysql_escape_string()函数为$item里面的单引号在前面加了一个转义反斜线字符。</p>]]></description></item><item><title>UCHome: SQL注入式攻击</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837895.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:22:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837895.html</guid><description><![CDATA[<p><span>所谓SQL注入式攻击，就是攻击者把SQL命令插入到Web表单的输入域或页面请求的查询字符串，欺骗服务器执行恶意的SQL命令。在某些表单中，用户输入的内容直接用来构造（或者影响）动态SQL命令，或作为存储过程的输入参数，这类表单特别容易受到SQL注入式攻击。</span><br /><br /><span>上面是在百度百科中搜到的一段话，这里主要是想具体演示一下这个过程。</span><br /><br /><span>1.&nbsp;准备数据库，在MySQL的test数据库中执行如下SQL语句：</span><br /><code></code></p>
<div class="cnblogs_code">
<pre>CREATE TABLE `test`.<span style="color: #000000;">`admin_user` (
`login` VARCHAR( </span>20 ) NOT <span style="color: #0000ff;">NULL</span> ,<span style="color: #000000;">
`password` VARCHAR( </span>20 ) NOT <span style="color: #0000ff;">NULL</span><span style="color: #000000;"> 
) ENGINE </span>=<span style="color: #000000;"> InnoDB;

INSERT INTO admin_user(login</span>, password) VALUES('admin', 'admin'<span style="color: #000000;">);
INSERT INTO admin_user(login</span>, password) VALUES('user1', 'pass1'<span style="color: #000000;">);
INSERT INTO admin_user(login</span>, password) VALUES('user2', 'pass2'<span style="color: #000000;">);
INSERT INTO admin_user(login</span>, password) VALUES('user3', 'pass3');</pre>
</div>
<p>&nbsp;</p>
<p><span>2.&nbsp;建立测试用PHP文件test.php：</span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php

</span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_REQUEST</span>['submit'<span style="color: #000000;">])) 
{
    </span><span style="color: #800080;">$login</span> = <span style="color: #800080;">$_REQUEST</span>['login'<span style="color: #000000;">];
    
    </span><span style="color: #800080;">$sql</span> = "SELECT login, password FROM admin_user WHERE login = '<span style="color: #800080;">$login</span>'"<span style="color: #000000;">;
    </span><span style="color: #008080;">print_r</span>(<span style="color: #800080;">$sql</span><span style="color: #000000;">);
    
    </span><span style="color: #800080;">$db</span> = <span style="color: #008080;">mysql_connect</span>('localhost', 'root', ''<span style="color: #000000;">);
    </span><span style="color: #008080;">mysql_select_db</span>('test', <span style="color: #800080;">$db</span><span style="color: #000000;">);
    </span><span style="color: #800080;">$result</span> = <span style="color: #008080;">mysql_query</span>(<span style="color: #800080;">$sql</span>, <span style="color: #800080;">$db</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">echo</span> '&lt;table border=3&gt;&lt;tr&gt;&lt;td&gt;Login&lt;/td&gt;&lt;td&gt;Password&lt;/td&gt;&lt;/tr&gt;'<span style="color: #000000;">;
    </span><span style="color: #0000ff;">while</span> (<span style="color: #800080;">$row</span> = <span style="color: #008080;">mysql_fetch_assoc</span>(<span style="color: #800080;">$result</span><span style="color: #000000;">)) {
        </span><span style="color: #0000ff;">echo</span> '&lt;tr&gt;'<span style="color: #000000;">;
        </span><span style="color: #0000ff;">echo</span> '&lt;td&gt;' . <span style="color: #800080;">$row</span>['login'] . '&lt;/td&gt;'<span style="color: #000000;">;
        </span><span style="color: #0000ff;">echo</span> '&lt;td&gt;' . <span style="color: #800080;">$row</span>['password'] . '&lt;/td&gt;'<span style="color: #000000;">;
        </span><span style="color: #0000ff;">echo</span> '&lt;/tr&gt;'<span style="color: #000000;">;
    }
    </span><span style="color: #0000ff;">echo</span> '&lt;/table&gt;'<span style="color: #000000;">;
    
    </span>?&gt; &lt;?<span style="color: #000000;">php
}
</span><span style="color: #0000ff;">else</span><span style="color: #000000;">
{
    </span>?&gt; 
      &lt;form method="post"&gt;<span style="color: #000000;">
          Login</span>: &lt;input type="text" name="login" value="" /&gt;&lt;br/&gt;
          &lt;input type="submit" name="submit" value="Submit" /&gt;&lt;br/&gt;
      &lt;/form&gt;
    &lt;?<span style="color: #000000;">php
}</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>PHP文件test.php的本意是当使用者在HTML表单中输入login后，服务器在后台数据库中查询到满足条件的一笔资料然后返回给浏览器。比如我们正常的输入$login="user1"，则组合后的SQL语句是：</p>
<div class="cnblogs_code">
<pre>SELECT login, password FROM admin_user WHERE login = 'user1' </pre>
</div>
<p>&nbsp;</p>
<p>这个时候结果是正确的，没有问题。</p>
<p><br />那SQL注入式攻击是怎样的呢？&nbsp;我们尝试这样输入：$name="a'&nbsp;or&nbsp;'1'='1"（注意单引号），那生成的SQL语句就变成了：</p>
<div class="cnblogs_code">
<pre> SELECT login, password FROM admin_user WHERE login = 'a' or '1'='1'</pre>
</div>
<p>&nbsp;</p>
<p>结果将admin_user这个表里面的所有数据显示了出来。</p>
<p><br />那如何解决这个问题呢？简单，看这篇文章<a href="http://www.nextphp.com/article.php?id=114" target="_blank">http://www.nextphp.com/article.php?id=114</a>，使用mysql_escape_string()或者addslashes()就可以了。修改上面的取值代码：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;" data-mce-mark="1">$login</span> = <span style="color: #008080;" data-mce-mark="1">mysql_escape_string</span><span style="color: #800080;" data-mce-mark="1">$_REQUEST</span>['login']);</pre>
</div>
<p>&nbsp;</p>
<p>再次输入$name="a'&nbsp;or&nbsp;'1'='1"，这个时候生成的SQL语句就没有问题了：</p>
<div class="cnblogs_code">
<pre>SELECT login, password FROM admin_user WHERE login = 'a\' or \'1\'=\'1'</pre>
</div>]]></description></item><item><title>UCHome: 解读common.php(转)</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837890.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:19:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837890.html</guid><description><![CDATA[<p>index.php文件第一行就是包含了include_once('./common.php');<br />这里对common.php文件解析</p>
<div class="cnblogs_code">
<pre>&lt;?php
/*
    [UCenter Home] (C) 2007-2008 Comsenz Inc.
    $Id: common.php 13032 2009-08-06 03:03:00Z liguode $
*/

//定义一个常量，用来在其他页面中，防止被恶意用户直接调用其他PHP文件。
@define('IN_UCHOME', TRUE);

/*定义程序的调试模式，在我们调试程序的时候将常量值设为1，这样程序出错的时候会在页面显示错误信息。
  在调试完毕正常投入使用后设为0，这样程序出错不会显示给用户。
*/
define('D_BUG', '1');

//通过D_BUG常量值指定错误报告类型。其中error_reporting()的参数是错误报告类型，相关参数可查询PHP手册
D_BUG?error_reporting(7):error_reporting(0);

//这下面都是定义的全局变量。具体的会在后面使用的时候一一介绍
$_SGLOBAL = $_SCONFIG = $_SBLOCK = $_TPL = $_SCOOKIE = $_SN = $space = array();

//定义程序目录常量。其中DIRECTORY_SEPARATOR是路径分隔符，linux上就是&rsquo;/&rsquo; windows上是&rsquo;\&rsquo;
define('S_ROOT', dirname(__FILE__).DIRECTORY_SEPARATOR);

//加载基本的配置文件，用了@符号，达到找不到该文件时在页面不提示错误信息
//ver.php中包含二个自定义的版本常量
include_once(S_ROOT.'./ver.php');
if(!@include_once(S_ROOT.'./config.php')) {

    //如果找不到的话则重定向到安装文件
    header("Location: install/index.php");//安装
    exit();
}

//通用函数文件，具体函数在介绍时间会一一解释
include_once(S_ROOT.'./source/function_common.php');

//时间，microtime()获取含毫秒的时间
$mtime = explode(' ', microtime());
//$mtime[0]为UNIX时间戳（整形）， $mtime[0]为毫秒
$_SGLOBAL['timestamp'] = $mtime[1];
$_SGLOBAL['supe_starttime'] = $_SGLOBAL['timestamp'] + $mtime[0];

////get_magic_quotes_gpc检测PHP.INI配置中的魔术引号功能是否打开
$magic_quote = get_magic_quotes_gpc();
if(empty($magic_quote)) {
    //如果自动过滤没打开，则对传入的参数进行转义
    $_GET = saddslashes($_GET);
    $_POST = saddslashes($_POST);
}

//本站URL，其中getsiteurl()是用来获取当前站点的域名
if(empty($_SC['siteurl']))
    $_SC['siteurl'] = getsiteurl();

//链接数据库
dbconnect();

//打开缓存文件
if(!@include_once(S_ROOT.'./data/data_config.php')) {
     //如果缓存文件打开失败重建缓存，function_cache.php是包含建立缓存的函数文件
    include_once(S_ROOT.'./source/function_cache.php');
    config_cache();
}
foreach (array('app', 'userapp', 'ad', 'magic') as $value) {
    @include_once(S_ROOT.'./data/data_'.$value.'.php');
}

//获取COOKIE前缀的长度，$_SC['cookiepre']是在config.php中定义的COOKIE函数的前缀名称，
//$_COOKIE是存放COOKIE的数据全局变量数组
$prelength = strlen($_SC['cookiepre']);
foreach($_COOKIE as $key =&gt; $val) {
    //判断当前域名下的COOKIE中属于UCHome的COOKIE
    if(substr($key, 0, $prelength) == $_SC['cookiepre']) {
        //对COOKIE值进行转义
        $_SCOOKIE[(substr($key, $prelength))] = empty($magic_quote) ? saddslashes($val) : $val;
    }
}

////是否启用GIP压缩传输，这个是用来提高PHP传输速度的。
if ($_SC['gzipcompress'] &amp;&amp; function_exists('ob_gzhandler')) {
    ob_start('ob_gzhandler');
} else {
    ob_start();
}

//初始化
$_SGLOBAL['supe_uid'] = 0; //初始化当前用户的UID
$_SGLOBAL['supe_username'] = ''; //初始化当前用户的用户名
$_SGLOBAL['inajax'] = empty($_GET['inajax'])?0:intval($_GET['inajax']);//这个是用来在页面中控制一些弹出框，在模板篇会介绍
$_SGLOBAL['mobile'] = empty($_GET['mobile'])?'':trim($_GET['mobile']);
$_SGLOBAL['ajaxmenuid'] = empty($_GET['ajaxmenuid'])?'' _GET['ajaxmenuid'];
$_SGLOBAL['refer'] = empty($_SERVER['HTTP_REFERER'])?'' _SERVER['HTTP_REFERER'];//获得上一页的URL，用来跳转
if(empty($_GET['m_timestamp'])|| $_SGLOBAL['mobile'] !=md5($_GET['m_timestamp']."\t".$_SCONFIG['sitekey']))$_SGLOBAL['mobile'] = '';

//登录注册防灌水机
/*
在登录或者注册的时候看到形如：do.php?ac=750e45d29d276b2f86f1445627c08f99的链接
后面的750e45d29d276b2f86f1445627c08f99就是用下面的来获取的。
*/
if(empty($_SCONFIG['login_action'])) $_SCONFIG['login_action'] = md5('login'.md5($_SCONFIG['sitekey']));
if(empty($_SCONFIG['register_action'])) $_SCONFIG['register_action'] = md5('register'.md5($_SCONFIG['sitekey']));

//整站风格，检查站点模板的路径。此处是default目录，就是我们常用黄色风格的模板路径
if(empty($_SCONFIG['template'])) {
    $_SCONFIG['template'] = 'default';
}

//在首页由下角可以自行选择风格的实现就是通过这段。
if($_SCOOKIE['mytemplate']) {
    $_SCOOKIE['mytemplate'] = str_replace('.','',trim($_SCOOKIE['mytemplate']));
    if(file_exists(S_ROOT.'./template/'.$_SCOOKIE['mytemplate'].'/style.css')) {
        $_SCONFIG['template'] = $_SCOOKIE['mytemplate'];
    } else {
        ssetcookie('mytemplate', '', 365000);
    }
}

//处理REQUEST_URI，查询（query）的字符串（URL 中第一个问号 ? 之后的内容）。 如为空则为当前页面
//例：$_SERVER['REQUEST_URI']的值为/uchome/test.php
if(!isset($_SERVER['REQUEST_URI'])) { 
    $_SERVER['REQUEST_URI'] = $_SERVER['PHP_SELF'];

    if(isset($_SERVER['QUERY_STRING']))
        $_SERVER['REQUEST_URI'] .= '?'.$_SERVER['QUERY_STRING'];
}
if($_SERVER['REQUEST_URI']) {
    $temp = urldecode($_SERVER['REQUEST_URI']);
    if(strexists($temp, '&lt;') || strexists($temp, '"')) {
        $_GET = shtmlspecialchars($_GET);//XSS
    }
}
   
//判断用户登录状态
checkauth();
$_SGLOBAL['uhash'] = md5($_SGLOBAL['supe_uid']."\t".substr($_SGLOBAL['timestamp'], 0, 6));

//用户菜单
getuserapp();

//处理UC应用，这个是漫游相关菜单，在此不用解释
$_SCONFIG['uc_status'] = 0;
$_SGLOBAL['appmenus'] = $_SGLOBAL['appmenu'] = array();
if($_SGLOBAL['app']) {
    foreach ($_SGLOBAL['app'] as $appid =&gt; $value) {
        if(UC_APPID != $appid) {
            $_SCONFIG['uc_status'] = 1;
        }
        if($value['open']) {
            if(empty($_SGLOBAL['appmenu'])) {
                $_SGLOBAL['appmenu'] = $value;
            } else {
                $_SGLOBAL['appmenus'][] = $value;
            }
        }
    }
}

?&gt;</pre>
</div>]]></description></item><item><title>UCHome: 数据库类class_mysql.php</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837887.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:18:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837887.html</guid><description><![CDATA[<p><span>UCHome针对MySQL数据库实现了一个封装类，没有使用ADODB或者PEAR这样的开源数据库框架，这样做的好处是文件非常少，空间非常小。</span><br /><br /><strong>1.&nbsp;数据库配置</strong><br /><span>和很多的PHP项目一样，UCHome的数据库配置放在了配置文件config.php中，从第9行到16行：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$_SC</span>['dbhost']          = 'localhost'; <span style="color: #008000;">//</span><span style="color: #008000;">督????</span>
<span style="color: #800080;">$_SC</span>['dbuser']          = 'root'<span style="color: #000000;">;
</span><span style="color: #800080;">$_SC</span>['dbpw']              = ''<span style="color: #000000;">; 
</span><span style="color: #800080;">$_SC</span>['dbcharset']         = 'utf8'<span style="color: #000000;">; 
</span><span style="color: #800080;">$_SC</span>['pconnect']         = 0<span style="color: #000000;">; 
</span><span style="color: #800080;">$_SC</span>['dbname']          = 'comsenz'<span style="color: #000000;">; 
</span><span style="color: #800080;">$_SC</span>['tablepre']         = 'uchome_'<span style="color: #000000;">; 
</span><span style="color: #800080;">$_SC</span>['charset']         = 'utf-8'; config.php的内容由安装程序写入，写入后由common.php引入，引入后的内容存放在全局变量<span style="color: #800080;">$_SC中</span>。</pre>
</div>
<p>&nbsp;</p>
<p><strong>2.&nbsp;数据库连接</strong><br /><span>在common.php的第42行，有这样一个函数调用：</span><br /><code>dbconnect();</code><span>函数dbconnect()的作用就是执行数据库连接处理，其定义在function_common.php(该文件由common.php引入)的第108行到118行：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> dbconnect() {
    </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$_SGLOBAL</span>, <span style="color: #800080;">$_SC</span><span style="color: #000000;">;

    </span><span style="color: #0000ff;">include_once</span>(S_ROOT.'./source/class_mysql.php'<span style="color: #000000;">);

    </span><span style="color: #0000ff;">if</span>(<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$_SGLOBAL</span>['db'<span style="color: #000000;">])) {
        </span><span style="color: #800080;">$_SGLOBAL</span>['db'] = <span style="color: #0000ff;">new</span><span style="color: #000000;"> dbstuff;
        </span><span style="color: #800080;">$_SGLOBAL</span>['db']-&gt;charset = <span style="color: #800080;">$_SC</span>['dbcharset'<span style="color: #000000;">];
        </span><span style="color: #800080;">$_SGLOBAL</span>['db']-&gt;connect(<span style="color: #800080;">$_SC</span>['dbhost'], <span style="color: #800080;">$_SC</span>['dbuser'], <span style="color: #800080;">$_SC</span>['dbpw'], <span style="color: #800080;">$_SC</span>['dbname'], <span style="color: #800080;">$_SC</span>['pconnect'<span style="color: #000000;">]);
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>source/class_mysql.php是UCHome的MySQL封装类，从上面的函数定义可以看到，MySQL的封装类类名是dbstuff，dbconnect()函数创建了该类的一个实例，然后设置字符编码和执行连接，类实例放在了$_SGLOBAL['db']。</p>
<p><br /><strong>3.&nbsp;表明前缀</strong><br /><span>很多的PHP项目都可以配置表明前缀，这样做的目的是可以在一个数据库里面实现同一个程序的多次安装，UCHome也可以。UCHome的表明前缀是通过$_SC['tablepre']配置的，默认值为uchome_。执行SQL查询时，通过调用函数tname()来增加前缀。</span><br /><span>函数tname()的定义在function_common.php的第216行到219行：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> tname(<span style="color: #800080;">$name</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$_SC</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$_SC</span>['tablepre'].<span style="color: #800080;">$name</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>具体用法：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$query</span> = <span style="color: #800080;">$_SGLOBAL</span>['db']-&gt;query("SELECT * FROM ".tname('magicinlog');</pre>
</div>
<p>&nbsp;</p>
<p><strong>4.&nbsp;数据库查询</strong><br /><span>一个数据库查询的例子：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$query</span> = <span style="color: #800080;">$_SGLOBAL</span>['db']-&gt;query("SELECT * FROM ".tname('magicinlog'<span style="color: #000000;">);
</span><span style="color: #0000ff;">while</span> (<span style="color: #800080;">$value</span> = <span style="color: #800080;">$_SGLOBAL</span>['db']-&gt;fetch_array(<span style="color: #800080;">$query</span><span style="color: #000000;">)) {
    </span><span style="color: #800080;">$list</span>[] = <span style="color: #800080;">$value</span><span style="color: #000000;">;
}</span></pre>
</div>]]></description></item><item><title>UCHome: 数据字典</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837885.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:17:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837885.html</guid><description><![CDATA[<p><a href="http://www.nextphp.com/upload/uchome2.0_datadict.html" target="_blank">http://www.nextphp.com/upload/uchome2.0_datadict.html</a></p>]]></description></item><item><title>UCHome: IP控制</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837882.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:15:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837882.html</guid><description><![CDATA[<p><span>UCHome可以通过设置允许某些IP地址访问，也可以禁止某些IP地址访问。</span><br /><br /><span>IP控制的设置可以在管理后台通过&ldquo;访问IP设置&rdquo;完成。</span><br /><br /><strong>1.&nbsp;设置数据的保存</strong><br /><span>IP控制的数据保存在UCHome的配置表config中，ipaccess代表允许访问的IP，ipbanned代表禁止访问的IP。可以设置多个，每个&nbsp;IP以\r\n分隔，既可输入完整地址，也可只输入&nbsp;IP&nbsp;开头。例如：&nbsp;</span><br /><span>"192.168."(不含引号)&nbsp;可匹配&nbsp;192.168.0.0～192.168.255.255&nbsp;范围内的所有地址，留空为所有&nbsp;IP&nbsp;均可访问。&nbsp;</span><br /><br /><strong>2.&nbsp;checkclose()函数</strong></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> checkclose() {
  </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$_SGLOBAL</span>, <span style="color: #800080;">$_SCONFIG</span><span style="color: #000000;">;

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> $_SCONFIG['close']：当前站点是否处于关闭状态，1代表关闭，0代表正常。
  // $_SCONFIG['closereason']：当前站点关闭的原因
  // $_SGLOBAL['supe_uid']：当前登陆后台的管理员ID
  // ckfounder()：检查用户ID是否是站点创建者
  // checkperm('closeignore')：用户组可以在后台设置权限是否忽略关闭信息</span>

  <span style="color: #0000ff;">if</span>(<span style="color: #800080;">$_SCONFIG</span>['close'] &amp;&amp; !ckfounder(<span style="color: #800080;">$_SGLOBAL</span>['supe_uid']) &amp;&amp; !checkperm('closeignore'<span style="color: #000000;">)) {
    </span><span style="color: #0000ff;">if</span>(<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$_SCONFIG</span>['closereason'<span style="color: #000000;">])) {
      showmessage(</span>'site_temporarily_closed'<span style="color: #000000;">);
    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
      showmessage(</span><span style="color: #800080;">$_SCONFIG</span>['closereason'<span style="color: #000000;">]);
    }
  }

  </span><span style="color: #008000;">//</span><span style="color: #008000;"> ipaccess($_SCONFIG['ipaccess'])：检查当前用户IP是否是允许访问的IP
  // ipbanned($_SCONFIG['ipaccess'])：检查当前用户IP是否是禁止访问的IP</span>

  <span style="color: #0000ff;">if</span>((!ipaccess(<span style="color: #800080;">$_SCONFIG</span>['ipaccess']) || ipbanned(<span style="color: #800080;">$_SCONFIG</span>['ipbanned'])) &amp;&amp; !ckfounder(<span style="color: #800080;">$_SGLOBAL</span>['supe_uid']) &amp;&amp; !checkperm('closeignore'<span style="color: #000000;">)) {
    showmessage(</span>'ip_is_not_allowed_to_visit'<span style="color: #000000;">);
  }
}</span></pre>
</div>
<p>&nbsp;</p>
<p><strong>3.&nbsp;ipaccess()和ipbanned()函数</strong></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> ipaccess(<span style="color: #800080;">$ipaccess</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$ipaccess</span>)?<span style="color: #0000ff;">true</span>:<span style="color: #008080;">preg_match</span>("/^(".<span style="color: #008080;">str_replace</span>(<span style="color: #0000ff;">array</span>("\r\n", ' '), <span style="color: #0000ff;">array</span>('|', ''), <span style="color: #008080;">preg_quote</span>(<span style="color: #800080;">$ipaccess</span>, '/')).")/",<span style="color: #000000;"> getonlineip());
}

</span><span style="color: #0000ff;">function</span> ipbanned(<span style="color: #800080;">$ipbanned</span><span style="color: #000000;">) {
  </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$ipbanned</span>)?<span style="color: #0000ff;">false</span>:<span style="color: #008080;">preg_match</span>("/^(".<span style="color: #008080;">str_replace</span>(<span style="color: #0000ff;">array</span>("\r\n", ' '), <span style="color: #0000ff;">array</span>('|', ''), <span style="color: #008080;">preg_quote</span>(<span style="color: #800080;">$ipbanned</span>, '/')).")/",<span style="color: #000000;"> getonlineip());
}</span></pre>
</div>
<p>假设$_SCONFIG['ipbanned']有这样的设置："10.3.1\r\n10.3.2.5"，表达的意思是10.3.1.0~10.3.1.255和10.3.2.5这些地址都不能访问，ipbanned()函数中是这样实现的：</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php

</span><span style="color: #800080;">$ipbanned</span> = "10.3.1\r\n10.3.2.5"<span style="color: #000000;">;
</span><span style="color: #800080;">$ip</span> = "10.3.2.6"<span style="color: #000000;">;

</span><span style="color: #800080;">$pattern</span> = "/^(" . <span style="color: #008080;">str_replace</span>(<span style="color: #0000ff;">array</span>("\r\n", ' '), <span style="color: #0000ff;">array</span>('|', ''), <span style="color: #008080;">preg_quote</span>(<span style="color: #800080;">$ipbanned</span>, '/')) . ")/"<span style="color: #000000;">;
</span><span style="color: #0000ff;">echo</span> <span style="color: #800080;">$pattern</span> . '&lt;br/&gt;'<span style="color: #000000;">;

</span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">preg_match</span>(<span style="color: #800080;">$pattern</span>, <span style="color: #800080;">$ip</span><span style="color: #000000;">))
    </span><span style="color: #0000ff;">echo</span> 'True'<span style="color: #000000;">;
</span><span style="color: #0000ff;">else</span>
    <span style="color: #0000ff;">echo</span> 'False';</pre>
</div>
<p>&nbsp;</p>
<p><span>返回的结果：</span></p>
<div class="cnblogs_code">
<pre>/^(10\.3\.1|10\.3\.2\.5)/
<span style="color: #0000ff;">False</span></pre>
</div>]]></description></item><item><title>UCHome: 提交检查</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837877.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:13:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837877.html</guid><description><![CDATA[<p>UCHome进行表单提交时做了有效性检查，保证所有的提交都来源于本站。<br /><br /><strong>1.&nbsp;表单实现</strong><br />UCHome的所有表单都有一个隐藏的栏位formhash，用来保存由本地服务器产生一个Hash值。formhash的值由函数formhash()产生。</p>
<div class="cnblogs_code">
<pre>&lt;form method="post" action="admincp.php?ac=ip"&gt;
    ......
  &lt;div class="footactions"&gt;
    &lt;input type="submit" name="thevaluesubmit" value="提交" class="submit"&gt;
  &lt;/div&gt;
  
  &lt;input type="hidden" name="formhash" value="&lt;!--{eval echo formhash();}--&gt;" /&gt;
&lt;/form&gt;</pre>
</div>
<p>&nbsp;</p>
<p><strong>2.&nbsp;提交检查</strong><br /><span>表单里面的formhash栏位在提交时被传送到服务器，服务器检查此次提交是否是一个有效的提交：</span></p>
<div class="cnblogs_code">
<pre>if(submitcheck('thevaluesubmit')) {
  ......
}</pre>
</div>
<p>&nbsp;</p>
<p><strong>3.&nbsp;formhash()函数</strong></p>
<div class="cnblogs_code">
<pre>function formhash() {
    global $_SGLOBAL, $_SCONFIG;

    if(empty($_SGLOBAL['formhash'])) {
        $hashadd = defined('IN_ADMINCP') ? 'Only For UCenter Home AdminCP' : '';
        $_SGLOBAL['formhash'] = substr(md5(substr($_SGLOBAL['timestamp'], 0, -7).'|'.$_SGLOBAL['supe_uid'].'|'.md5($_SCONFIG['sitekey']).'|'.$hashadd), 8, 8);
    }
    return $_SGLOBAL['formhash'];
}</pre>
</div>
<p>&nbsp;</p>
<p><strong>4.&nbsp;submitcheck()函数</strong></p>
<div class="cnblogs_code">
<pre>function submitcheck($var) {
    if(!empty($_POST[$var]) &amp;&amp; $_SERVER['REQUEST_METHOD'] == 'POST') {
        if((empty($_SERVER['HTTP_REFERER']) || preg_replace("/https?:\/\/([^\:\/]+).*/i", "\\1", $_SERVER['HTTP_REFERER']) == preg_replace("/([^\:]+).*/", "\\1", $_SERVER['HTTP_HOST'])) &amp;&amp; $_POST['formhash'] == formhash()) {
            return true;
        } else {
            showmessage('submit_invalid');
        }
    } else {
        return false;
    }
}</pre>
</div>]]></description></item><item><title>UCHome: 权限实现</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837878.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:13:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837878.html</guid><description><![CDATA[<p>UCHome的权限是通过用户组实现的。<br /><br />UCHome的用户组分为三类：普通用户组，特殊用户组，系统用户组。普通用户组的用户根据经验值的变化自动升级或降级到另外一个普通用户组，特殊用户组和系统用户组的用户不受经验值的变化而改变用户组。普通用户组只能管理用户自己的空间，特殊用户组和系统用户组不仅能管理自己的空间，还能管理站点。<br /><br />所有的用户组信息都存放在usergroup表(<a href="http://www.nextphp.com/upload/uchome2.0_datadict.html#usergroup" target="_blank">http://www.nextphp.com/upload/uchome2.0_datadict.html#usergroup</a>)中，栏位system表示组的类型：0代表普通用户组，-1代表系统用户组，1代表特殊用户组。<br /><br />用户组的每一个具体权限对应到usergroupd表的一个栏位，例如，管理IP地址权限对应到usergroup表的manageip栏位，1代表允许，0代表禁止。<br /><br />有两个特殊的权限：banvisit和manageconfig。banvist控制用户组成员允许访问或者禁止访问网站，manageconfig控制用户组成员是否拥有管理员身份，管理员身份可以管理网站的各项设置，通俗的说，就是所有以manage开始的权限。<br /><br />网站的创建者也拥有所有的manage权限。创建者在config.php文件中通过$_SC['founder']设置，可以有多个创建者，之间用逗号分隔。<br /><br /><strong>1.&nbsp;权限的使用</strong></p>
<div class="cnblogs_code">
<pre>if (!checkperm('allowblog')) { //检查是否有发表日志的权限
  cpmessage('no_authority_management_operation');
}

if (!checkperm('manageip')) { //检查是否有管理IP设置的权限
  cpmessage('no_authority_management_operation');
}</pre>
</div>
<p>&nbsp;</p>
<p><strong>2.&nbsp;checkperm()函数</strong><br /><span>checkperm()函数存在function_common.php文件中，执行具体的权限检查处理：</span></p>
<div class="cnblogs_code">
<pre>function checkperm($permtype) 
{
  global $_SGLOBAL, $space;

  if($permtype == 'admin') $permtype = 'manageconfig';

  $var = 'checkperm_'.$permtype;
  if(!isset($_SGLOBAL[$var])) {
    if(empty($_SGLOBAL['supe_uid'])) {
      $_SGLOBAL[$var] = '';
    } else {
      if(empty($_SGLOBAL['member'])) getmember();
      $gid = getgroupid($_SGLOBAL['member']['experience'], $_SGLOBAL['member']['groupid']);
      if(!@include_once(S_ROOT.'./data/data_usergroup_'.$gid.'.php')) {
        usergroup_cache();
        @include_once(S_ROOT.'./data/data_usergroup_'.$gid.'.php');
      }

      if($gid != $_SGLOBAL['member']['groupid']) {
        updatetable('space', array('groupid'=&gt;$gid), array('uid'=&gt;$_SGLOBAL['supe_uid']));
        if($_SGLOBAL['usergroup'][$gid]['magicaward']) {
          include_once(S_ROOT.'./source/inc_magicaward.php');
        }
      }
      
      $_SGLOBAL[$var] = empty($_SGLOBAL['usergroup'][$gid][$permtype])?'':$_SGLOBAL['usergroup'][$gid][$permtype];
      if(substr($permtype, 0, 6) == 'manage' &amp;&amp; empty($_SGLOBAL[$var])) {
        $_SGLOBAL[$var] = $_SGLOBAL['usergroup'][$gid]['manageconfig'];//??????
        if(empty($_SGLOBAL[$var])) {
          $_SGLOBAL[$var] = ckfounder($_SGLOBAL['supe_uid'])?1:0;//?????
        }
      }
    }
  }
  return $_SGLOBAL[$var];
}</pre>
</div>]]></description></item><item><title>PHP中文乱码</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837875.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:09:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837875.html</guid><description><![CDATA[<p>PHP+MYSQL做网站开发通常都会碰到浏览器输出中文字符时乱码，这个问题的原因主要是因为HTML内容编码，PHP文件编码和MySQL数据库编码这三者不一致造成的。下面我们以UTF-8为例简述一下如何统一这三者之间的关系。<br /><br />新增一个PHP文件，命名为test_charset.php，将下面的代码保存到该文件中：</p>
<div class="cnblogs_code">
<pre>&lt;?php   
$charset = "utf8";  
$con = mysql_connect("localhost", "root", "");  
mysql_query("SET character_set_connection=$charset, character_set_results=$charset, character_set_client=binary", $con);  
mysql_select_db("ecshop", $con);  
  
$sql = "SELECT user_name, email FROM ecs_admin_user WHERE user_id = 4";  
$result = mysql_query($sql, $con);  
$array = mysql_fetch_array($result, MYSQL_ASSOC);  
mysql_close($con);  
  
$name = $array["user_name"];  
$email = $array["email"];  
?&gt;  
&lt;html&gt;  
&lt;head&gt;  
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;  
&lt;/head&gt;  
&lt;body&gt;  
&lt;h1&gt;你好, &lt;?php echo $name; ?&gt;!&lt;/h1&gt;  
&lt;h2&gt;你的邮件是：&lt;a href="mailto:&lt;?php echo $email; ?&gt;"&gt;&lt;?php echo $email; ?&gt;&lt;/a&gt;&lt;/h2&gt;  
&lt;/body&gt;  
&lt;/html&gt;  </pre>
</div>
<p>&nbsp;</p>
<p><strong>HTML内容编码</strong><br /><span>上面的第22行：&lt;meta&nbsp;http-equiv="Content-Type"&nbsp;content="text/html;&nbsp;charset=utf-8"&nbsp;/&gt;，这里我们指定了浏览器在解析HTML时使用UTF-8编码&nbsp;。如果这里没有指定，浏览器会使用自己缺省的编码。不同的浏览器缺省编码会有所不同，比如IE6是GB2312，FireFox是UTF-8。所以，上面这段代码如果没有第22行，在FireFox会显示正常，在IE6就会显示乱码。</span><br /><br /><strong>PHP文件编码</strong><br /><span>PHP文件本身也需要有一致的编码。如何检查自己的PHP文件是哪一种编码呢？Windows下简单的可以用记事本来处理。用记事本打开PHP文件，从&ldquo;文件&rdquo;菜单中选择&ldquo;另存为...&rdquo;,在打开的对话框最下面有一个&ldquo;编码&rdquo;的选项，当前看到的就是该文件现在的编码。如果要变为其它的编码，从下拉列表框中选择，然后点击&ldquo;保存&rdquo;按钮。</span><br /><br /><strong>MySQL数据库编码</strong><br /><span>数据库连接成功后，应该第一时间执行一条设置编码指令，如上面代码的第7行。这里有一点需要特别注意，UTF-8是正常的写法，不过在MySQL中简写成了UTF8，中间没有横线。上面第7行是将连接编码设置成utf8($charset="utf8")，而不是utf-8。</span><br /><br /><span>这里附上ECShop设置连接编码的完整实现，供大家参考。文件是includes/cls_mysql.php。</span></p>
<div class="cnblogs_code">
<pre>function set_mysql_charset($charset)  
{  
    /* 如果mysql 版本是 4.1+ 以上，需要对字符集进行初始化 */  
    if ($this-&gt;version &gt; '4.1')  
    {  
        if (in_array(strtolower($charset), array('gbk', 'big5', 'utf-8', 'utf8')))  
        {  
            $charset = str_replace('-', '', $charset);  
        }  
        if ($charset != 'latin1')  
        {  
            mysql_query("SET character_set_connection=$charset, character_set_results=$charset, character_set_client=binary", $this-&gt;link_id);  
        }  
    }  
}  </pre>
</div>]]></description></item><item><title>序列化和反序列化</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837870.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:08:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837870.html</guid><description><![CDATA[<p>序列化是将系统对象转换成字符串的过程，反序列化则是将字符串再转换成系统对象的过程。序列化后的字符串可以很方便的保存到操作系统文件，数据库，或者通过网络传输到其它电脑。PHP提供了实现序列化的方法serialize和unserialize。<br /><br />请将下面的代码保存到一个PHP文件中：<br /><code></code></p>
<div class="cnblogs_code">
<pre>&lt;?php  
  
$a = array(  
    "name" =&gt; "amonest",  
    "age" =&gt; 30,  
    "married" =&gt; true,  
    "attributes" =&gt; array(  
        "money" =&gt; 3000.1,  
        "height" =&gt; 170,  
        "weight" =&gt; 85.2  
    )  
);  
  
$s = serialize($a);  
var_dump($s);  
  
$r = unserialize($s);  
var_dump($r); </pre>
</div>
<p>&nbsp;</p>
<p><span>上面代码执行结果如下：</span></p>
<div class="cnblogs_code">
<pre>string(233) "a:4:{s:4:"name";s:7:"amonest";s:3:"age";i:30;s:7:"married";b:1;s:10:"attributes";a:3:{s:5:"money";d:3000.09999999999990905052982270717620849609375;s:6:"height";i:170;s:6:"weight";d:85.2000000000000028421709430404007434844970703125;}}"  
  
array(4) {  
  ["name"]=&gt;  
  string(7) "amonest"  
  ["age"]=&gt;  
  int(30)  
  ["married"]=&gt;  
  bool(true)  
  ["attributes"]=&gt;  
  array(3) {  
    ["money"]=&gt;  
    float(3000.1)  
    ["height"]=&gt;  
    int(170)  
    ["weight"]=&gt;  
    float(85.2)  
  }  
}  </pre>
</div>]]></description></item><item><title>Windows下Cygwin模拟GCC开发</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837867.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:07:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837867.html</guid><description><![CDATA[<p><span>1.&nbsp;安装Turbo&nbsp;C++&nbsp;3.0，安装的目的是为了使用其bin目录下的make。</span><br /><span>2.&nbsp;安装Cygwin，当前最新版本是1.7.9-1。</span><br /><span>3.&nbsp;从开始菜单打开Cygwin&nbsp;Bash&nbsp;Shell，进入Home目录，新增一个helloworld.c源文件。</span><br /><span>4.&nbsp;在相同目录下新增Makefile文件，将下面的内容复制到里面：</span></p>
<div class="cnblogs_code">
<pre>helloworld.exe : helloworld.<span style="color: #000000;">o
    gcc </span>-o helloworld.exe helloworld.<span style="color: #000000;">o
helloworld</span>.o:<span style="color: #000000;">
    gcc </span>-c helloworld.<span style="color: #000000;">c
clean</span>:<span style="color: #000000;">
    rm </span>-rf *.exe *.o *~</pre>
</div>
<p>5.&nbsp;运行make，当前目录下会多出两个文件：helloworld.exe和helloworld.o。</p>
<p><span data-mce-mark="1">6.&nbsp;执行./helloworld.exe，测试成功。</span></p>]]></description></item><item><title>find与exec的用法</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837866.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:06:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837866.html</guid><description><![CDATA[<p><span>find是我们很常用的一个Linux命令，但是我们一般查找出来的并不仅仅是看看而已，还会有进一步的操作，这个时候exec的作用就显现出来了。</span><br /><br /><span>看例子：</span><br /><span>find&nbsp;./&nbsp;-name&nbsp;"*.txt"&nbsp;-exec&nbsp;ls&nbsp;-l&nbsp;"{}"&nbsp;\;</span><br /><span>查找当前目录的.txt文件并以列表形式列出来</span><br /><br /><span>find&nbsp;./&nbsp;-name&nbsp;"*.txt"&nbsp;-exec&nbsp;mv&nbsp;"{}"&nbsp;"{}d"&nbsp;\;</span><br /><span>批量修改当前目录下.txt文件的后缀名改为.txtd</span><br /><br /><span>解释：</span><br /><span>-exec&nbsp;&nbsp;&nbsp;&nbsp;参数后面跟的是command命令，它的终止是以;为结束标志的，所以这句命令后面的分号是不可缺少的，考虑到各个系统中分号会有不同的意义，所以前面加反斜杠。</span><br /><span>{}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;花括号代表前面find查找出来的文件名。</span><br /><br /><span>例子：</span><br /><span>find&nbsp;./&nbsp;-name&nbsp;"*.tmp"&nbsp;-exec&nbsp;rm&nbsp;-rf&nbsp;"{}"&nbsp;\;</span><br /><br /><span>删除所有的临时文件</span><br /><span>find&nbsp;./&nbsp;-name&nbsp;".svn"&nbsp;-exec&nbsp;rm&nbsp;-rf&nbsp;{}&nbsp;\;</span></p>]]></description></item><item><title>博客程序中实现按月份归档</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837863.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:05:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837863.html</guid><description><![CDATA[<p>以前使用的方式是将所有的文章日期读出来，然后一笔一笔处理：</p>
<div class="cnblogs_code">
<pre>function _archives() 
{
    $sql = "select updatetime from tbs_articles";
    $rows = $this-&gt;db-&gt;getAll($sql);
        
    $archives = array();
    foreach ($rows as $row)
    {
        $month = gmdate("Ym", $row['updatetime'] + $this-&gt;_getOption('timeoffset') * 3600);
        if (!array_key_exists($month, $archives))
        {
            $archives[$month] = array('year' =&gt; intval(substr($month, 0, 4)), 
                        'month' =&gt; intval(substr($month, 4, 2)), 
                        'artnum' =&gt; 0);
            $archives[$month]['text'] = $archives[$month]['year'] . '年' . $this-&gt;_formatMonth($archives[$month]['month']) . '月';
        }
        $archives[$month]['artnum'] += 1; 
    }
        
    return $archives;
}</pre>
</div>
<p>&nbsp;</p>
<p>修改以后的做法：</p>
<div class="cnblogs_code">
<pre>function _archives() 
{
    $sql = "select date_format(from_unixtime(updatetime + 3600 * " . $this-&gt;_getOption('timeoffset'). "), '%Y%m') as ym, count(1) as artnum from tbs_articles group by ym order by ym";
    $rows = $this-&gt;db-&gt;getAll($sql);
        
    $archives = array();
    foreach ($rows as $row)
    {
        $archives[$row['ym']] = array('year' =&gt; intval(substr($row['ym'], 0, 4)), 
                            'month' =&gt; intval(substr($row['ym'], 4, 2)), 
                            'artnum' =&gt; $row['artnum']);
    }

    return $archives;
}</pre>
</div>]]></description></item><item><title>安装PHPMyAdmin 3.3.10</title><link>http://www.cnblogs.com/eastson/archive/2012/12/28/2837859.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Dec 2012 13:02:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/28/2837859.html</guid><description><![CDATA[<p>1.&nbsp;下载最新的PHPMyAdmin版本。<br />2.&nbsp;解压下载的文件到apache/htdocs目录下。<br />3.&nbsp;复制config.sample.inc.php到config.inc.php。<br />4.&nbsp;将下面的内容加入到config.inc.php：</p>
<div class="cnblogs_code">
<pre>$cfg['Servers'][$i]['AllowNoPassword'] = true;
$cfg['Servers'][$i]['host'] = '127.0.0.1';
$cfg['Servers'][$i]['user'] = 'root';
$cfg['Servers'][$i]['password'] = '';
$cfg['Servers'][$i]['auth_type'] = 'config';</pre>
</div>]]></description></item><item><title>通过Python脚本理解系统线程</title><link>http://www.cnblogs.com/eastson/archive/2012/12/18/2824100.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 18 Dec 2012 13:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/18/2824100.html</guid><description><![CDATA[<div>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;" data-mce-mark="1">from</span> socket <span style="color: #0000ff;" data-mce-mark="1">import</span> * <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">导入socket包中的所有内容</span>
<span style="color: #0000ff;" data-mce-mark="1">from</span> time <span style="color: #0000ff;" data-mce-mark="1">import</span> ctime <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">导入time包，同时在本地可使用ctime进行调用</span>
<span style="color: #0000ff;" data-mce-mark="1">import</span> thread <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">导入Python线程包</span>
<span style="color: #000000;" data-mce-mark="1"> 
HOST</span>=<span style="color: #800000;" data-mce-mark="1">'</span><span style="color: #800000;" data-mce-mark="1">localhost</span><span style="color: #800000;" data-mce-mark="1">'</span><span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">定义主机</span>
PORT=21567<span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">定义端口</span>
BUFSIZ=1024 <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">定义缓冲区</span>
ADDR=(HOST,PORT) <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">定义元组</span>
<span style="color: #000000;" data-mce-mark="1"> 
tcpSerSock</span>=socket(AF_INET,SOCK_STREAM)  <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">生成socket</span>
tcpSerSock.bind(ADDR) <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">将地址及端口元组与socket绑定</span>
tcpSerSock.listen(1) <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">监听用户请求</span>
 
<span style="color: #0000ff;" data-mce-mark="1">def</span> client(tcpCliSock,num): <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">定义函数。由于thread强行要求调用的函数必须有两个参数。num只是充数，没有特别含义</span>
    CliSock=tcpCliSock <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">将传递进来的客户端socket赋值给CliSock</span>
    <span style="color: #0000ff;" data-mce-mark="1">while</span> True: <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">定义无限循环</span>
        data=CliSock.recv(BUFSIZ) <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">从用户socket中读取1024大小数据</span>
        <span style="color: #0000ff;" data-mce-mark="1">if</span> <span style="color: #0000ff;" data-mce-mark="1">not</span> data: <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">如果客户端没有任何输入，即直接回车或Ctrl+D</span>
            <span style="color: #0000ff;" data-mce-mark="1">break</span> <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">跳出无限循环</span>
        CliSock.send(<span style="color: #800000;" data-mce-mark="1">'</span><span style="color: #800000;" data-mce-mark="1">[%s] %s</span><span style="color: #800000;" data-mce-mark="1">'</span> %(ctime(),data)) <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">返回用户输入并附加当前系统时间</span>
    sys.exit <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">结束进程</span>
 
<span style="color: #0000ff;" data-mce-mark="1">while</span> True: <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">定义无限循环</span>
    <span style="color: #0000ff;" data-mce-mark="1">print</span> <span style="color: #800000;" data-mce-mark="1">"</span><span style="color: #800000;" data-mce-mark="1">waiting ....</span><span style="color: #800000;" data-mce-mark="1">"</span> <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">打印等待用户输入时的waiting</span>
    tcpCliSock,addr=tcpSerSock.accept() <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">处理用户请求</span>
    <span style="color: #0000ff;" data-mce-mark="1">print</span> <span style="color: #800000;" data-mce-mark="1">'</span><span style="color: #800000;" data-mce-mark="1">con from :</span><span style="color: #800000;" data-mce-mark="1">'</span>,addr <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">打印客户端信息</span>
    thread.start_new_thread(client,(tcpCliSock,1))    <span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">在Python中使用线程就靠这句了！Python会开始一个新的线程来运行client函数并以元组的形式传递给这个函数参数！</span>
<span style="color: #000000;" data-mce-mark="1"> 
tcpSerSock.close() </span><span style="color: #008000;" data-mce-mark="1">#</span><span style="color: #008000;" data-mce-mark="1">这句依然不会执行！</span></pre>
</div>
<p>&nbsp;</p>
</div>
<div><span data-mce-mark="1">threading是官方推荐编写线程使用的模块。还是有必要了解thread的，不仅可以让我们更加了解系统线程的运行方式，也能找到thread与threading及Queue之间的区别，进而更好的学习掌握threading！</span></div>
<div>&nbsp;</div>
<div>下面是Python客户端程序。如果你可以使用telnet进行测试，那么以下内容可以忽略。</div>
<div>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;" data-mce-mark="1">from</span> socket <span style="color: #0000ff;" data-mce-mark="1">import</span> *<span style="color: #000000;" data-mce-mark="1">
 
HOST</span>=<span style="color: #800000;" data-mce-mark="1">'</span><span style="color: #800000;" data-mce-mark="1">localhost</span><span style="color: #800000;" data-mce-mark="1">'</span><span style="color: #000000;" data-mce-mark="1">
PORT</span>=21567<span style="color: #000000;" data-mce-mark="1">
BUFSIZ</span>=1024<span style="color: #000000;" data-mce-mark="1">
ADDR</span>=<span style="color: #000000;" data-mce-mark="1">(HOST,PORT)
 
tcpCliSock</span>=<span style="color: #000000;" data-mce-mark="1">socket(AF_INET,SOCK_STREAM)
tcpCliSock.connect(ADDR)
 
</span><span style="color: #0000ff;" data-mce-mark="1">while</span><span style="color: #000000;" data-mce-mark="1"> True:
    data</span>=raw_input(<span style="color: #800000;" data-mce-mark="1">"</span><span style="color: #800000;" data-mce-mark="1">&gt; </span><span style="color: #800000;" data-mce-mark="1">"</span><span style="color: #000000;" data-mce-mark="1">)
    </span><span style="color: #0000ff;" data-mce-mark="1">if</span> <span style="color: #0000ff;" data-mce-mark="1">not</span><span style="color: #000000;" data-mce-mark="1"> data:
        </span><span style="color: #0000ff;" data-mce-mark="1">break</span><span style="color: #000000;" data-mce-mark="1">
    tcpCliSock.send(data)
    data</span>=<span style="color: #000000;" data-mce-mark="1">tcpCliSock.recv(BUFSIZ)
    </span><span style="color: #0000ff;" data-mce-mark="1">if</span> <span style="color: #0000ff;" data-mce-mark="1">not</span><span style="color: #000000;" data-mce-mark="1"> data:
        </span><span style="color: #0000ff;" data-mce-mark="1">break</span>
    <span style="color: #0000ff;" data-mce-mark="1">print</span><span style="color: #000000;" data-mce-mark="1"> data
 
tcpCliSock.close()</span></pre>
</div>
<p>&nbsp;</p>
</div>
<p>原文地址：<a href="http://president.blog.51cto.com/4990508/1081542">http://president.blog.51cto.com/4990508/1081542</a></p>]]></description></item><item><title>10个实用的PHP正则表达式</title><link>http://www.cnblogs.com/eastson/archive/2012/12/14/2817779.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 14 Dec 2012 04:00:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/14/2817779.html</guid><description><![CDATA[<p>正则表达式是程序开发中一个重要的元素，它提供用来描述或匹配文本的字符串，如特定的字符、词或算式等。但在某些情况下，用正则表达式去验证一个字符串比较复杂和费时。本文为你介绍10种常见的实用PHP正则表达式的写法，希望对你的工作有所帮助。</p>
<p>&nbsp;</p>
<p><strong>1. 验证E-mail地址</strong>&nbsp;<br /><br />这是一个用于验证电子邮件的正则表达式。但它并不是高效、完美的解决方案。在此不推荐使用。&nbsp;</p>
<div class="cnblogs_code">
<pre>$email = "test@ansoncheung.tk";
if (preg_match('/^[^0-9][a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[@][a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)*[.][a-zA-Z]{2,4}$/',$email)) {
    echo "Your email is ok.";
} else {
    echo "Wrong email address format";
}</pre>
</div>
<p>&nbsp;</p>
<p>为了更加有效验证电子邮件地址，推荐使用<a href="http://php.net/manual/en/function.filter-var.php" target="_blank">filer_var</a>。&nbsp;</p>
<div class="cnblogs_code">
<pre>if (filter_var('test+email@ansoncheung', FILTER_VALIDATE_EMAIL)) {
    echo "Your email is ok.";
} else {
    echo "Wrong email address format.";
}</pre>
</div>
<p>&nbsp;</p>
<p><strong>2. 验证用户名</strong>&nbsp;<br /><br />这是一个用于验证用户名的实例，其中包括字母、数字（A-Z，a-z，0-9）、下划线以及最低5个字符，最大20个字符。同时，也可以根据需要，对最小值和最大值做合理的修改。&nbsp;</p>
<div class="cnblogs_code">
<pre>$username = "user_name12";
if (preg_match('/^[a-z\d_]{5,20}$/i', $username)) {
    echo "Your username is ok.";
} else {
    echo "Wrong username format.";
}</pre>
</div>
<p>&nbsp;</p>
<p><strong>3. 验证电话号码</strong>&nbsp;<br /><br />这是一个验证美国电话号码的实例。&nbsp;</p>
<div class="cnblogs_code">
<pre>$phone = "(021)423-2323";
if (preg_match('/\(?\d{3}\)?[-\s.]?\d{3}[-\s.]\d{4}/x', $phone)) {
    echo "Your phone number is ok.";
} else {
    echo "Wrong phone number.";
}</pre>
</div>
<p>&nbsp;</p>
<p><strong>4. 验证IP地址</strong>&nbsp;<br /><br />这是一个用来验证IPv4地址的实例。&nbsp;</p>
<div class="cnblogs_code">
<pre>$IP = "198.168.1.78";
if (preg_match('/^(([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([1-9]?[0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/',$IP)) {
    echo "Your IP address is ok.";
} else {
    echo "Wrong IP address.";
}</pre>
</div>
<p>&nbsp;</p>
<p><strong>5. 验证邮政编码</strong>&nbsp;<br /><br />这是一个用来验证邮政编码的实例。&nbsp;</p>
<div class="cnblogs_code">
<pre>$zipcode = "12345-5434";
if (preg_match("/^([0-9]{5})(-[0-9]{4})?$/i",$zipcode)) {
    echo "Your Zip code is ok.";
} else {
    echo "Wrong Zip code.";
}</pre>
</div>
<p>&nbsp;</p>
<p><strong>6. 验证SSN（社会保险号）</strong>&nbsp;<br /><br />这是一个验证美国SSN的实例。&nbsp;</p>
<div class="cnblogs_code">
<pre>$ssn = "333-23-2329";
if (preg_match('/^[\d]{3}-[\d]{2}-[\d]{4}$/',$ssn)) {
    echo "Your SSN is ok.";
} else {
    echo "Wrong SSN.";
}</pre>
</div>
<p>&nbsp;</p>
<p><strong>7. 验证信用卡号</strong>&nbsp;</p>
<div class="cnblogs_code">
<pre>$cc = "378282246310005";
if (preg_match('/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6011[0-9]{12}|3(?:0[0-5]|[68][0-9])[0-9]{11}|3[47][0-9]{13})$/', $cc)) {
    echo "Your credit card number is ok.";
} else {
    echo "Wrong credit card number.";
}</pre>
</div>
<p>&nbsp;</p>
<p><strong>8. 验证域名</strong>&nbsp;</p>
<div class="cnblogs_code">
<pre>$url = "http://ansoncheung.tk/";
if (preg_match('/^(http|https|ftp):\/\/([A-Z0-9][A-Z0-9_-]*(?:\.[A-Z0-9][A-Z0-9_-]*)+):?(\d+)?\/?/i', $url)) {
    echo "Your url is ok.";
} else {
    echo "Wrong url.";
}</pre>
</div>
<p>&nbsp;</p>
<p><strong>9. 从特定URL中提取域名</strong>&nbsp;</p>
<div class="cnblogs_code">
<pre>$url = "http://ansoncheung.tk/articles";
preg_match('@^(?:http://)?([^/]+)@i', $url, $matches);
$host = $matches[1];

echo $host;</pre>
</div>
<p>&nbsp;</p>
<p><strong>10. 将文中关键词高亮显示</strong>&nbsp;</p>
<div class="cnblogs_code">
<pre>$text = "Sample sentence from AnsonCheung.tk, regular expression has become popular in web programming. Now we learn regex. According to wikipedia, Regular expressions (abbreviated as regex or regexp, with plural forms regexes, regexps, or regexen) are written in a formal language that can be interpreted by a regular expression processor";

$text = preg_replace("/\b(regex)\b/i", '&lt;span style="background:#5fc9f6"&gt;\1&lt;/span&gt;', $text);

echo $text;</pre>
</div>]]></description></item><item><title>谷歌和百度的官方搜索引擎优化(SEO)指南手册</title><link>http://www.cnblogs.com/eastson/archive/2012/12/11/2812899.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 11 Dec 2012 06:37:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/12/11/2812899.html</guid><description><![CDATA[<p><span>谷歌(Google)，全世界最大的英文搜索引擎；百度(Baidu)，全世界最大的中文搜索引擎。他们都推出了围绕搜索引擎排名的指南手册，谷歌更是在2010年更新了它的手册。</span></p>
<p>&nbsp;</p>
<p>压缩包里面包含以下四个版本：</p>
<p>1、《<a href="http://wenku.baidu.com/view/f576c31d650e52ea5518983f.html" target="_blank">百度搜索引擎优化指南</a>》中文版(原版)<br />2、《<a href="http://www.google.com.hk/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;ved=0CDEQFjAA&amp;url=http%3A%2F%2Fgelisky.googlecode.com%2Ffiles%2Fgoogle-seo-starter-guide.pdf&amp;ei=TdXGUOHJC4qjiQeahYDwDA&amp;usg=AFQjCNFT9rjxHw7btzAjOwfCgxzYFyAgoA" target="_blank">Google搜索引擎优化入门指南</a>》2008年中文版(个篱翻译)<br />3、《<a href="http://static.googleusercontent.com/external_content/untrusted_dlcp/www.google.com/zh-CN//intl/zh-CN/webmasters/docs/search-engine-optimization-starter-guide-zh-cn.pdf" target="_blank">Google搜索引擎优化入门指南</a>》2010年中文版(SemWatch翻译)<br />4、《<a href="http://files.cnblogs.com/shuchao/search-engine-optimization-starter-guide.pdf" target="_blank">Google搜索引擎优化入门指南</a>》2010年英文版(原版)</p>]]></description></item><item><title>一句代码解决固定层div</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796604.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 09:31:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796604.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>&lt;div  style="position:fixed;"&gt;... ...&lt;/div&gt;</pre>
</div>
<p>将上段代码加入到html -&gt;&gt;body代码块中即可。</p>]]></description></item><item><title>世界时区/时间</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796355.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:41:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796355.html</guid><description><![CDATA[<p><span>世界时区/时间：</span><br /><a href="http://app.travel.ifeng.com/tools/timezone-index-3.html" target="_blank">http://app.travel.ifeng.com/tools/timezone-index-3.html</a><br /><br /><span>世界时区图：</span><br /><a href="http://www.24-hotel.com.cn/w_hotel/world_time.asp" target="_blank">http://www.24-hotel.com.cn/w_hotel/world_time.asp</a><br /><a href="http://www.timedate.cn/time/timezone.htm" target="_blank">http://www.timedate.cn/time/timezone.htm</a></p>]]></description></item><item><title>MySQL DATE_FORMAT() 函数</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796353.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:40:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796353.html</guid><description><![CDATA[<p><span>定义和用法</span><br /><span>DATE_FORMAT()&nbsp;函数用于以不同的格式显示日期/时间数据。</span><br /><br /><span>语法</span><br /><span>DATE_FORMAT(date,format)</span><br /><span>date&nbsp;参数是合法的日期。format&nbsp;规定日期/时间的输出格式。</span><br /><br /><span>可以使用的格式有：</span><br /><span>格式&nbsp;&nbsp;&nbsp;&nbsp;描述</span><br /><span>%a&nbsp;&nbsp;&nbsp;&nbsp;缩写星期名</span><br /><span>%b&nbsp;&nbsp;&nbsp;&nbsp;缩写月名</span><br /><span>%c&nbsp;&nbsp;&nbsp;&nbsp;月，数值</span><br /><span>%D&nbsp;&nbsp;&nbsp;&nbsp;带有英文前缀的月中的天</span><br /><span>%d&nbsp;&nbsp;&nbsp;&nbsp;月的天，数值(00-31)</span><br /><span>%e&nbsp;&nbsp;&nbsp;&nbsp;月的天，数值(0-31)</span><br /><span>%f&nbsp;&nbsp;&nbsp;&nbsp;微秒</span><br /><span>%H&nbsp;&nbsp;&nbsp;&nbsp;小时&nbsp;(00-23)</span><br /><span>%h&nbsp;&nbsp;&nbsp;&nbsp;小时&nbsp;(01-12)</span><br /><span>%I&nbsp;&nbsp;&nbsp;&nbsp;小时&nbsp;(01-12)</span><br /><span>%i&nbsp;&nbsp;&nbsp;&nbsp;分钟，数值(00-59)</span><br /><span>%j&nbsp;&nbsp;&nbsp;&nbsp;年的天&nbsp;(001-366)</span><br /><span>%k&nbsp;&nbsp;&nbsp;&nbsp;小时&nbsp;(0-23)</span><br /><span>%l&nbsp;&nbsp;&nbsp;&nbsp;小时&nbsp;(1-12)</span><br /><span>%M&nbsp;&nbsp;&nbsp;&nbsp;月名</span><br /><span>%m&nbsp;&nbsp;&nbsp;&nbsp;月，数值(00-12)</span><br /><span>%p&nbsp;&nbsp;&nbsp;&nbsp;AM&nbsp;或&nbsp;PM</span><br /><span>%r&nbsp;&nbsp;&nbsp;&nbsp;时间，12-小时（hh:mm:ss&nbsp;AM&nbsp;或&nbsp;PM）</span><br /><span>%S&nbsp;&nbsp;&nbsp;&nbsp;秒(00-59)</span><br /><span>%s&nbsp;&nbsp;&nbsp;&nbsp;秒(00-59)</span><br /><span>%T&nbsp;&nbsp;&nbsp;&nbsp;时间,&nbsp;24-小时&nbsp;(hh:mm:ss)</span><br /><span>%U&nbsp;&nbsp;&nbsp;&nbsp;周&nbsp;(00-53)&nbsp;星期日是一周的第一天</span><br /><span>%u&nbsp;&nbsp;&nbsp;&nbsp;周&nbsp;(00-53)&nbsp;星期一是一周的第一天</span><br /><span>%V&nbsp;&nbsp;&nbsp;&nbsp;周&nbsp;(01-53)&nbsp;星期日是一周的第一天，与&nbsp;%X&nbsp;使用</span><br /><span>%v&nbsp;&nbsp;&nbsp;&nbsp;周&nbsp;(01-53)&nbsp;星期一是一周的第一天，与&nbsp;%x&nbsp;使用</span><br /><span>%W&nbsp;&nbsp;&nbsp;&nbsp;星期名</span><br /><span>%w&nbsp;&nbsp;&nbsp;&nbsp;周的天&nbsp;（0=星期日,&nbsp;6=星期六）</span><br /><span>%X&nbsp;&nbsp;&nbsp;&nbsp;年，其中的星期日是周的第一天，4&nbsp;位，与&nbsp;%V&nbsp;使用</span><br /><span>%x&nbsp;&nbsp;&nbsp;&nbsp;年，其中的星期一是周的第一天，4&nbsp;位，与&nbsp;%v&nbsp;使用</span><br /><span>%Y&nbsp;&nbsp;&nbsp;&nbsp;年，4&nbsp;位</span><br /><span>%y&nbsp;&nbsp;&nbsp;&nbsp;年，2&nbsp;位</span><br /><br /><span>实例</span><br /><span>下面的脚本使用&nbsp;DATE_FORMAT()&nbsp;函数来显示不同的格式。我们使用&nbsp;NOW()&nbsp;来获得当前的日期/时间：</span><br /><span>DATE_FORMAT(NOW(),'%b&nbsp;%d&nbsp;%Y&nbsp;%h:%i&nbsp;%p')</span><br /><span>DATE_FORMAT(NOW(),'%m-%d-%Y')</span><br /><span>DATE_FORMAT(NOW(),'%d&nbsp;%b&nbsp;%y')</span><br /><span>DATE_FORMAT(NOW(),'%d&nbsp;%b&nbsp;%Y&nbsp;%T:%f')</span><br /><span>结果类似：</span><br /><span>Dec&nbsp;29&nbsp;2008&nbsp;11:45&nbsp;PM</span><br /><span>12-29-2008</span><br /><span>29&nbsp;Dec&nbsp;08</span><br /><span>29&nbsp;Dec&nbsp;2008&nbsp;16:25:46.635</span></p>]]></description></item><item><title>MySQL参考资料</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796347.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:39:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796347.html</guid><description><![CDATA[<p><span>1.&nbsp;</span><a href="http://www.phpchina.com/resource/manual/mysql/functions.html" target="_blank">MySQL函数和操作符</a><br /><span>2.&nbsp;</span><a href="http://www.phpchina.com/resource/manual/mysql/functions.html#date-and-time-functions" target="_blank">MySQL日期和时间函数</a><br /><span>3.&nbsp;</span><a href="http://www.phpchina.com/resource/manual/mysql/functions.html#control-flow-functions" target="_blank">MySQL控制流程函数</a><br /><span>4.&nbsp;</span><a href="http://www.phpchina.com/resource/manual/mysql/functions.html#string-functions" target="_blank">MySQL字符串函数</a><br /><span>5.&nbsp;</span><a href="http://www.phpchina.com/resource/manual/mysql/functions.html#numeric-functions" target="_blank">MySQL数值函数</a><br /><span>6.&nbsp;</span><a href="http://www.phpchina.com/resource/manual/mysql/functions.html#encryption-functions" target="_blank">MySQL加密函数</a><br /><span>7.&nbsp;</span><a href="http://www.php100.com/manual/MySQL/" target="_blank">MySQL&nbsp;5.1参考手册</a><br /><span>8.&nbsp;</span><a href="http://urlhttp//dev.mysql.com/doc/refman/5.0/en/index.html" target="_blank">MySQL&nbsp;5.0&nbsp;Reference&nbsp;Manual</a><br /><span>9.&nbsp;</span><a href="http://dev.mysql.com/doc/refman/5.0/en/sql-syntax-server-administration.html" target="_blank">Database&nbsp;Administration&nbsp;Statements</a><br /><span>10.&nbsp;</span><a href="http://dev.mysql.com/doc/refman/5.0/en/show.html" target="_blank">SHOW&nbsp;Syntax</a><br /><span>11.&nbsp;</span><a href="http://heylinux.com/archives/993.html" target="_blank">源码编译安装&nbsp;MySQL&nbsp;5.5.13&nbsp;实践</a><br /><span>12.&nbsp;</span><a href="http://heylinux.com/archives/1004.html" target="_blank">MySQL主从复制（Master-Slave）与读写分离（MySQL-Proxy）实践</a></p>]]></description></item><item><title>MySQL查询计划</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796352.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:39:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796352.html</guid><description><![CDATA[<p><span>以前用Sybase，Sybase有自己的查询计划。根据查询计划，可以知道SQL里面用了哪个索引，实现了什么关联，对SQL语句的调优相当有帮助。</span><br /><br /><span>MySQL也有自己的查询计划实现：</span><br /><span>EXPLAIN&nbsp;SQL_SYNTAX</span></p>]]></description></item><item><title>MySQL的Limit查询</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796341.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:38:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796341.html</guid><description><![CDATA[<p><span>mysqlt提供了limit查询功能，基本格式如下：</span><br /><span>select&nbsp;*&nbsp;from&nbsp;tbs_links&nbsp;where&nbsp;10,5</span><br /><br /><span>解释：</span><br /><span>1.&nbsp;10表示从第11行开始返回记录，mysql的下标从0开始。</span><br /><span>2.&nbsp;5表示最多返回5行记录。</span><br /><br /><span>limit还可以有下面的写法：</span><br /><span>select&nbsp;*&nbsp;from&nbsp;tbs_links&nbsp;where&nbsp;5&nbsp;＃返回从0开始的前5条记录</span><br /><span>select&nbsp;*&nbsp;from&nbsp;tbs_links&nbsp;where&nbsp;0,5&nbsp;＃同上</span></p>]]></description></item><item><title>PHP数组合并</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796339.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:37:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796339.html</guid><description><![CDATA[<p><span>测试代码：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$a1</span> = <span style="color: #0000ff;">array</span>('dbhost' =&gt; 'localhost', 'dbname' =&gt; 'nextblog', 'dbport' =&gt; 3306<span style="color: #000000;">);
</span><span style="color: #800080;">$a2</span> = <span style="color: #0000ff;">array</span>('dbuser' =&gt; 'root', 'dbpass' =&gt; 'pass', 'dbport' =&gt; 3305<span style="color: #000000;">);
</span><span style="color: #008080;">print_r</span>(<span style="color: #008080;">array_merge</span>(<span style="color: #800080;">$a1</span>, <span style="color: #800080;">$a2</span><span style="color: #000000;">));
</span><span style="color: #008080;">print_r</span>(<span style="color: #800080;">$a1</span> + <span style="color: #800080;">$a2</span>);</pre>
</div>
<p>&nbsp;</p>
<p><span>方式一：使用array_merge()函数，如果输入的数组中有相同的字符串键名，则该键名后面的值将覆盖前一个值。然而，如果数组包含数字键名，后面的值将不会覆盖原来的值，而是附加到后面。</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">Array</span><span style="color: #000000;">
(
    [dbhost] </span>=&gt;<span style="color: #000000;"> localhost
    [dbname] </span>=&gt;<span style="color: #000000;"> nextblog
    [dbport] </span>=&gt; 3305<span style="color: #000000;">
    [dbuser] </span>=&gt;<span style="color: #000000;"> root
    [dbpass] </span>=&gt;<span style="color: #000000;"> pass
)</span></pre>
</div>
<p>&nbsp;</p>
<p><span>方式二：使用数组相加方式，如果输入的数组中有相同的字符串键名，则该键名后面的值将被忽略。</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">Array</span><span style="color: #000000;">
(
    [dbhost] </span>=&gt;<span style="color: #000000;"> localhost
    [dbname] </span>=&gt;<span style="color: #000000;"> nextblog
    [dbport] </span>=&gt; 3306<span style="color: #000000;">
    [dbuser] </span>=&gt;<span style="color: #000000;"> root
    [dbpass] </span>=&gt;<span style="color: #000000;"> pass
)</span></pre>
</div>]]></description></item><item><title>error_reporting配置变量</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796335.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:36:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796335.html</guid><description><![CDATA[<p><span>php.ini中有两个和错误有关的配置变量：</span><br /><br /><span>error_reporting&nbsp;integer</span><br /><span>设置错误报告的级别。</span><br /><br /><span>display_errors&nbsp;string</span><br /><span>该选项设置是否将错误信息作为输出的一部分显示到屏幕，或者对用户隐藏而不显示。</span><br /><br /><span>display_errors配置变量控制了error_reporting产生的错误信息是否输出到浏览器画面中，其值可以True/False或者On/Off。</span><br /><br /><span>error_reporting的预定义常量&nbsp;</span><a href="http://cn.php.net/manual/zh/errorfunc.constants.php" target="_blank">http://cn.php.net/manual/zh/errorfunc.constants.php</a><span>。</span><br /><span>PHP错误和日志记录配置选项</span><a href="http://cn.php.net/manual/zh/errorfunc.configuration.php#ini.error-reporting" target="_blank">http://cn.php.net/manual/zh/errorfunc.configuration.php#ini.error-reporting</a><span>。</span><br /><br /><span>常用的error_reporting设置：</span><br /><span>error_reporting(E_ERROR&nbsp;|&nbsp;E_WARNING&nbsp;|&nbsp;E_PARSE);</span><br /><span>error_reporting(E_ALL&nbsp;&amp;&nbsp;~E_NOTICE);</span></p>]]></description></item><item><title>aptitude包管理工具</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796333.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:35:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796333.html</guid><description><![CDATA[<p><span>aptitude&nbsp;与&nbsp;apt-get&nbsp;一样，是&nbsp;Debian&nbsp;及其衍生系统中功能极其强大的包管理工具。与&nbsp;apt-get&nbsp;不同的是，aptitude&nbsp;在处理依赖问题上更佳一些。举例来说，aptitude&nbsp;在删除一个包时，会同时删除本身所依赖的包。这样，系统中不会残留无用的包，整个系统更为干净。以下是笔者总结的一些常用&nbsp;aptitude&nbsp;命令，仅供参考。</span><br /><br /><span>aptitude&nbsp;update&nbsp;更新可用的包列表</span><br /><span>aptitude&nbsp;upgrade&nbsp;升级可用的包</span><br /><span>aptitude&nbsp;dist-upgrade&nbsp;将系统升级到新的发行版</span><br /><span>aptitude&nbsp;install&nbsp;pkgname&nbsp;安装包</span><br /><span>aptitude&nbsp;remove&nbsp;pkgname&nbsp;删除包</span><br /><span>aptitude&nbsp;purge&nbsp;pkgname&nbsp;删除包及其配置文件</span><br /><span>aptitude&nbsp;search&nbsp;string&nbsp;搜索包</span><br /><span>aptitude&nbsp;show&nbsp;pkgname&nbsp;显示包的详细信息</span><br /><span>aptitude&nbsp;clean&nbsp;删除下载的包文件</span><br /><span>aptitude&nbsp;autoclean&nbsp;仅删除过期的包文件</span><br /><br /><span>当然，你也可以在文本界面模式中使用&nbsp;aptitude。</span></p>]]></description></item><item><title>简单的标签云实现</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796328.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:34:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796328.html</guid><description><![CDATA[<p><span>实现代码：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> _cloudHtml(<span style="color: #800080;">$data</span> = <span style="color: #0000ff;">array</span>(), <span style="color: #800080;">$minFontSize</span> = 12, <span style="color: #800080;">$maxFontSize</span> = 30<span style="color: #000000;">)
{
    </span><span style="color: #800080;">$minimumCount</span> = <span style="color: #008080;">min</span>(<span style="color: #008080;">array_values</span>(<span style="color: #800080;">$data</span><span style="color: #000000;">));
    </span><span style="color: #800080;">$maximumCount</span> = <span style="color: #008080;">max</span>(<span style="color: #008080;">array_values</span>(<span style="color: #800080;">$data</span><span style="color: #000000;">));
    </span><span style="color: #800080;">$spread</span> = <span style="color: #800080;">$maximumCount</span> - <span style="color: #800080;">$minimumCount</span><span style="color: #000000;">;
    </span><span style="color: #800080;">$cloudHTML</span> = ''<span style="color: #000000;">;
    </span><span style="color: #800080;">$cloudTags</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
    </span><span style="color: #800080;">$spread</span> == 0 &amp;&amp; <span style="color: #800080;">$spread</span> = 1<span style="color: #000000;">;
    </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$data</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$tag</span> =&gt; <span style="color: #800080;">$count</span><span style="color: #000000;">)
    {
        </span><span style="color: #800080;">$size</span> = <span style="color: #800080;">$minFontSize</span> + (<span style="color: #800080;">$count</span> - <span style="color: #800080;">$minimumCount</span><span style="color: #000000;">)
                        </span>* (<span style="color: #800080;">$maxFontSize</span> - <span style="color: #800080;">$minFontSize</span>) / <span style="color: #800080;">$spread</span><span style="color: #000000;">;
        </span><span style="color: #800080;">$cloudTags</span>[] = '&lt;a style="font-size: ' . <span style="color: #008080;">floor</span>( <span style="color: #800080;">$size</span> ) . 'px"'
                . ' href="tag.php?name=' . <span style="color: #008080;">rawurlencode</span>(<span style="color: #800080;">$tag</span>) . '"'
                . ' title="' . <span style="color: #800080;">$tag</span> . ' (' . <span style="color: #800080;">$count</span> . ')"&gt;'
                . <span style="color: #008080;">htmlspecialchars</span>(<span style="color: #008080;">stripslashes</span>( <span style="color: #800080;">$tag</span>)) . '&lt;/a&gt;'<span style="color: #000000;">;
    }
    </span><span style="color: #0000ff;">return</span> <span style="color: #008080;">join</span>( "\n", <span style="color: #800080;">$cloudTags</span> ) . "\n"<span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p><span>调用代码：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> _tagCloud()
{
    </span><span style="color: #800080;">$sql</span> = "select tag, count(1) as count from tbs_tags group by tag"<span style="color: #000000;">;
    </span><span style="color: #800080;">$rows</span> = <span style="color: #800080;">$this</span>-&gt;db-&gt;getAll(<span style="color: #800080;">$sql</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$rows</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$row</span><span style="color: #000000;">)
    {
        </span><span style="color: #800080;">$tags</span>[<span style="color: #800080;">$row</span>['tag']] = <span style="color: #800080;">$row</span>['count'<span style="color: #000000;">];        
    }
    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$this</span>-&gt;_cloudHtml(<span style="color: #800080;">$tags</span>, 12, 24<span style="color: #000000;">);
}</span></pre>
</div>]]></description></item><item><title>APACHE缓存目录权限</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796326.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:33:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796326.html</guid><description><![CDATA[<p><span>PHP开发时有时候会用到缓存文件，也就是会碰到往服务器写文件的情况。</span><br /><br /><span>新增一个分离的缓存目录，一般都用cache命名。</span><br /><span>cache目录需要授权网页浏览者能够写入，一般这样处理：chmod&nbsp;0777&nbsp;cache。</span><br /><br /><span>授权后cache目录应该是可以新建文件的，但是新建的文件对应的owner=daemon，group=daemon，所有者是daemon是由httpd.conf配置决定的。</span><br /><br /><span>这个时候服务器上的其它的使用是无法修改此文件的，最好在文件写入成功后再调用PHP的chmod()函数修改权限。</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> write_cache(<span style="color: #800080;">$name</span>, <span style="color: #800080;">$data</span><span style="color: #000000;">)
{
    </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$_CACHE</span><span style="color: #000000;">;
    
    </span><span style="color: #800080;">$str</span> = "&lt;?php\r\n"<span style="color: #000000;">;
    </span><span style="color: #800080;">$str</span> .= "\$_CACHE['" . <span style="color: #800080;">$name</span> . "'] = " . <span style="color: #008080;">var_export</span>(<span style="color: #800080;">$data</span>, <span style="color: #0000ff;">TRUE</span>) . ";\r\n"<span style="color: #000000;">;
    </span><span style="color: #800080;">$str</span> .= "?&gt;"<span style="color: #000000;">;

    </span><span style="color: #800080;">$file</span> = APPLICATION_PATH . 'cache/cache_' . <span style="color: #800080;">$name</span> . '.php'<span style="color: #000000;">;
    writetofile(</span><span style="color: #800080;">$file</span>, <span style="color: #800080;">$str</span><span style="color: #000000;">);
    </span><span style="color: #008080;">chmod</span>(<span style="color: #800080;">$file</span>, 0777<span style="color: #000000;">);
    
    </span><span style="color: #800080;">$_CACHE</span>[<span style="color: #800080;">$name</span>] = <span style="color: #800080;">$data</span><span style="color: #000000;">;
}</span></pre>
</div>]]></description></item><item><title>MySQL备份</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796319.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:32:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796319.html</guid><description><![CDATA[<p><span>MySQL备份命令：</span><br /><span>mysqldump&nbsp;--host=localhost&nbsp;--user=root&nbsp;--add-drop-database&nbsp;--add-drop-table&nbsp;nextphp&gt;nextphp.sql</span></p>]]></description></item><item><title>XMLHttpRequest简要说明</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796312.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:31:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796312.html</guid><description><![CDATA[<p><span>有关于XMLHttpRequest</span><span>的详细信息可以参阅</span><a href="http://www.phpx.com/man/Xmlhttp/" target="_blank">XMLHttp参考手册</a><span>。</span><br /><br /><span>1.&nbsp;创建XMLHttpRequest对象</span><br /><span>所有现代浏览器(IE7+、Firefox、Chrome、Safari&nbsp;以及&nbsp;Opera)&nbsp;都内建了XMLHttpRequest对象，老版本的Internet&nbsp;Explorer（IE5和IE6）使用ActiveX&nbsp;对象：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> createXMLHttpRequest()
{
    </span><span style="color: #0000ff;">var</span> xmlhttp=<span style="color: #0000ff;">null</span><span style="color: #000000;">;
    
    </span><span style="color: #0000ff;">if</span> (window.<span style="color: #000000;">XMLHttpRequest)
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> code for all new browsers</span>
        xmlhttp = <span style="color: #0000ff;">new</span><span style="color: #000000;"> XMLHttpRequest();
    }
    </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (window.<span style="color: #000000;">ActiveXObject)
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> code for IE5 and IE6</span>
        xmlhttp = <span style="color: #0000ff;">new</span> ActiveXObject("Microsoft.XMLHTTP"<span style="color: #000000;">);
    }
    
    </span><span style="color: #0000ff;">if</span> (xmlhttp == <span style="color: #0000ff;">null</span><span style="color: #000000;">)
    {
        alert(</span>"Your browser does not support XMLHTTP."<span style="color: #000000;">);
    }
    
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> xmlhttp;
}</span></pre>
</div>
<p>&nbsp;</p>
<p><span>2.&nbsp;同步还是异步？</span><br /><span>XMLHttpRequest的open语法如下：</span></p>
<div class="cnblogs_code">
<pre>oXMLHttpRequest.open(bstrMethod, bstrUrl, varAsync, bstrUser, bstrPassword)</pre>
</div>
<p>varAsync是一个布尔型，指定此请求是否为异步方式，默认为true。异步的意思是指脚本会在send()&nbsp;方法之后继续执行，而不等待来自服务器的响应，当状态改变时会调用onreadystatechange属性指定的回调函数。&nbsp;同步的意思是指脚本会在send()&nbsp;方法之后，等待服务器响应返回以后再继续执行。</p>
<p><br /><span>3.&nbsp;onreadystatechange属性</span><br /><span>异步请求时通过onreadystatechange属性指定状态改变时需要回调的函数，通常需要和readyState属性，status属性以及statusText属性一起使用。</span><br /><span>readyState属性返回XMLHTTP请求的当前状态，有下面几种值：</span><br /><span>0&nbsp;(未初始化)&nbsp;&nbsp;&nbsp;&nbsp;对象已建立，但是尚未初始化（尚未调用open方法）&nbsp;</span><br /><span>1&nbsp;(初始化)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对象已建立，尚未调用send方法&nbsp;</span><br /><span>2&nbsp;(发送数据)&nbsp;&nbsp;&nbsp;&nbsp;send方法已调用，但是当前的状态及http头未知&nbsp;</span><br /><span>3&nbsp;(数据传送中)&nbsp;已接收部分数据，因为响应及http头不全，这时通过responseBody和responseText获取部分数据会出现错误，&nbsp;</span><br /><span>4&nbsp;(完成)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;数据接收完毕，此时可以通过通过responseBody和responseText获取完整的回应数据&nbsp;</span><br /><span>status属性和statusText属性是</span><a href="http://www.nextphp.com/article.php?id=68" target="_blank">标准的HTTP响应代码和响应信息</a><span>。</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span><span style="color: #000000;"> demoMethod2()
{
    xmlhttp </span>=<span style="color: #000000;"> createXMLHttpRequest();
    xmlhttp</span>.onreadystatechange =<span style="color: #000000;"> handleStateChange;
    xmlhttp</span>.open("GET", "http://localhost/xmlhttp/users.xml", <span style="color: #0000ff;">true</span><span style="color: #000000;">);
    xmlhttp</span>.<span style="color: #000000;">send();
}

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> handleStateChange()
{
    </span><span style="color: #0000ff;">if</span> (xmlhttp.readyState == 4<span style="color: #000000;">)
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 4 = "loaded"</span>
        <span style="color: #0000ff;">if</span> (xmlhttp.status == 200<span style="color: #000000;">)
        {
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 200 = OK</span>
            alert(xmlhttp.responseXML.<span style="color: #000000;">xml);
        }
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
        {
            alert(</span>"Problem retrieving XML data"<span style="color: #000000;">);
        }
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p><span>一个简单演示XMLHttpRequest的完整例子：</span></p>
<div class="cnblogs_code">
<pre>&lt;script language="javascript"&gt;

<span style="color: #0000ff;">function</span><span style="color: #000000;"> createXMLHttpRequest()
{
    </span><span style="color: #0000ff;">var</span> xmlhttp=<span style="color: #0000ff;">null</span><span style="color: #000000;">;
    
    </span><span style="color: #0000ff;">if</span> (window.<span style="color: #000000;">XMLHttpRequest)
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> code for all new browsers</span>
        xmlhttp = <span style="color: #0000ff;">new</span><span style="color: #000000;"> XMLHttpRequest();
    }
    </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (window.<span style="color: #000000;">ActiveXObject)
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> code for IE5 and IE6</span>
        xmlhttp = <span style="color: #0000ff;">new</span> ActiveXObject("Microsoft.XMLHTTP"<span style="color: #000000;">);
    }
    
    </span><span style="color: #0000ff;">if</span> (xmlhttp == <span style="color: #0000ff;">null</span><span style="color: #000000;">)
    {
        alert(</span>"Your browser does not support XMLHTTP."<span style="color: #000000;">);
    }
    
    </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> xmlhttp;
}


</span><span style="color: #0000ff;">var</span> xmlhttp = <span style="color: #0000ff;">null</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> demoMethod1()
{
    xmlhttp </span>=<span style="color: #000000;"> createXMLHttpRequest();
    xmlhttp</span>.open("GET", "http://localhost/xmlhttp/users.xml", <span style="color: #0000ff;">false</span><span style="color: #000000;">);
    xmlhttp</span>.<span style="color: #000000;">send();
    alert(xmlhttp</span>.<span style="color: #000000;">responseText);
}

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> demoMethod2()
{
    xmlhttp </span>=<span style="color: #000000;"> createXMLHttpRequest();
    xmlhttp</span>.onreadystatechange =<span style="color: #000000;"> handleStateChange;
    xmlhttp</span>.open("GET", "http://localhost/xmlhttp/users.xml", <span style="color: #0000ff;">true</span><span style="color: #000000;">);
    xmlhttp</span>.<span style="color: #000000;">send();
}

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> handleStateChange()
{
    appendStatusDiv(</span>"readyStatus = " + xmlhttp.<span style="color: #000000;">readyState);
    </span><span style="color: #0000ff;">if</span> (xmlhttp.readyState == 4<span style="color: #000000;">)
    {
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> 4 = "loaded"</span>
        <span style="color: #0000ff;">if</span> (xmlhttp.status == 200<span style="color: #000000;">)
        {
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> 200 = OK</span>
            alert(xmlhttp.responseXML.<span style="color: #000000;">xml);
        }
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
        {
            alert(</span>"Problem retrieving XML data"<span style="color: #000000;">);
        }
    }
}

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> clearStatusDiv()
{
    document</span>.getElementById('statusDiv').innerHTML = ""<span style="color: #000000;">;
}

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> appendStatusDiv(text)
{
    document</span>.getElementById('statusDiv').innerHTML = document.getElementById('statusDiv').innerHTML + "&lt;br /&gt;" +<span style="color: #000000;"> text;
}

</span>&lt;/script&gt;

&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt; 
&lt;/head&gt;
&lt;body&gt;

&lt;div id="statusDiv" style="border:1px solid #000000;"&gt;&amp;nbsp;&lt;/div&gt;&lt;br /&gt;

&lt;a href="javascript:clearStatusDiv(); demoMethod1();"&gt;同步调用XMLHttp，显示服务器文件users.xml&lt;/a&gt;&lt;br /&gt;
&lt;a href="javascript:clearStatusDiv(); demoMethod2();"&gt;异步调用XMLHttp，显示服务器文件users.xml&lt;/a&gt;&lt;br /&gt;

&lt;/body&gt;
&lt;/html&gt;</pre>
</div>
<p>&nbsp;</p>
<p><span>W3C有关XMLHttpRequest&nbsp;对象的说明：</span><a href="http://www.w3school.com.cn/xml/xml_http.asp" target="_blank">http://www.w3school.com.cn/xml/xml_http.asp</a></p>]]></description></item><item><title>PouwerBuilder执行WScript脚本</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796305.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:29:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796305.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #000000;">oleobject WshShell
WshShell </span>=<span style="color: #000000;"> create oleobject 
WshShell</span>.connecttonewobject( "WScript.Shell"<span style="color: #000000;">)

</span><span style="color: #0000ff;">integer</span><span style="color: #000000;"> li_Return
li_Return </span>= WshShell.Run("cscript E:\validate.js", 1, <span style="color: #0000ff;">true</span><span style="color: #000000;">)
messagebox(</span>"",<span style="color: #000000;">li_return)

WshShell</span>.<span style="color: #000000;">DisconnectObject ( )
destroy WshShell</span></pre>
</div>]]></description></item><item><title>PHP代码：格式化文件的大小</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796303.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:28:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796303.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php    
</span><span style="color: #0000ff;">function</span> format_filesize(<span style="color: #800080;">$filesize</span><span style="color: #000000;">)    
{    
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$filesize</span> &lt; 1024<span style="color: #000000;">)    
    {    
        </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$filesize</span>.'byte'<span style="color: #000000;">;    
    }    
    </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> ((<span style="color: #800080;">$size</span> = <span style="color: #008080;">round</span>(<span style="color: #800080;">$filesize</span>/1024,2)) &lt; 1024<span style="color: #000000;">)    
    {    
        </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$size</span>.'KB'<span style="color: #000000;">;    
    }    
    </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> ((<span style="color: #800080;">$size</span> = <span style="color: #008080;">round</span>(<span style="color: #800080;">$filesize</span> / (1024*1024), 2)) &lt; 1024<span style="color: #000000;">)    
    {    
        </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$size</span>.'MB'<span style="color: #000000;">;    
    } 
    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">   
    {    
        </span><span style="color: #0000ff;">return</span> <span style="color: #008080;">round</span>(<span style="color: #800080;">$filesize</span> / (1024*1024*1024), 2).'GB'<span style="color: #000000;">;    
    }    
}    
</span>?&gt;   </pre>
</div>]]></description></item><item><title>setTimeout和setInterval的区别</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796298.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:26:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796298.html</guid><description><![CDATA[<p><span>setTimeout()在执行时，是在载入后延迟指定时间后，去执行一次表达式，记住，次数是一次：</span></p>
<div class="cnblogs_code">
<pre>&lt;html&gt;
&lt;head&gt;
&lt;script&gt;
<span style="color: #0000ff;">var</span> i = 0<span style="color: #000000;">;
</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> sett()
{
    document</span>.body.innerHTML=i++<span style="color: #000000;">;
    setTimeout(</span>"sett()",500<span style="color: #000000;">);
}
setTimeout(</span>"sett()",500<span style="color: #000000;">);
</span>&lt;/script&gt; 
&lt;/head&gt;
&lt;body&gt;
&lt;/html&gt;</pre>
</div>
<p>&nbsp;</p>
<p><span>setInterval()从载入后，每隔指定的时间就执行一次表达式：</span></p>
<div class="cnblogs_code">
<pre>&lt;html&gt;
&lt;head&gt;
&lt;script&gt;
<span style="color: #0000ff;">var</span> i = 0<span style="color: #000000;">;
</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> sett()
{
    document</span>.body.innerHTML=i++<span style="color: #000000;">;
}
setInterval(</span>"sett();", 500<span style="color: #000000;">);
</span>&lt;/script&gt; 
&lt;/head&gt;
&lt;body&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
</div>]]></description></item><item><title>搜索引擎爬虫记录器</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796295.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:25:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796295.html</guid><description><![CDATA[<p><span>今天在ChinaUnix在看到一段记录爬虫程序的代码：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> saveRobot(<span style="color: #800080;">$dir</span><span style="color: #000000;">)
{
        </span><span style="color: #800080;">$addtime</span> = <span style="color: #008080;">date</span>('Y-m-d H:i:s',<span style="color: #008080;">time</span><span style="color: #000000;">());
        </span><span style="color: #800080;">$GetLocationURL</span>= "http://".<span style="color: #800080;">$_SERVER</span>["HTTP_HOST"].<span style="color: #800080;">$_SERVER</span>['REQUEST_URI'<span style="color: #000000;">] ;
        </span><span style="color: #800080;">$agent1</span> = <span style="color: #800080;">$_SERVER</span>["HTTP_USER_AGENT"<span style="color: #000000;">] ;  
        </span><span style="color: #800080;">$agent</span>=<span style="color: #008080;">strtolower</span>(<span style="color: #800080;">$agent1</span><span style="color: #000000;">);
        </span><span style="color: #800080;">$Bot</span>=''<span style="color: #000000;">;
        </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">strpos</span>(<span style="color: #800080;">$agent</span>,"googlebot")&gt;-1){<span style="color: #800080;">$Bot</span> = "Google"<span style="color: #000000;">;}           
        </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">strpos</span>(<span style="color: #800080;">$agent</span>,"mediapartners-google")&gt;-1){<span style="color: #800080;">$Bot</span> = "Google"<span style="color: #000000;">;}
        </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">strpos</span>(<span style="color: #800080;">$agent</span>,"baiduspider")&gt;-1){<span style="color: #800080;">$Bot</span> = "Baidu"<span style="color: #000000;">;}
        </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">strpos</span>(<span style="color: #800080;">$agent</span>,"sogou spider")&gt;-1){<span style="color: #800080;">$Bot</span> = "Sogou"<span style="color: #000000;">;}
        </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">strpos</span>(<span style="color: #800080;">$agent</span>,"sosospider")&gt;-1){<span style="color: #800080;">$Bot</span> = "Soso"<span style="color: #000000;">;}
        </span><span style="color: #0000ff;">if</span>(<span style="color: #800080;">$Bot</span>!=""<span style="color: #000000;">)
        {
                </span><span style="color: #800080;">$mDateTime</span>=<span style="color: #008080;">date</span>("Y-m-d"<span style="color: #000000;">);
                </span><span style="color: #008000;">//</span><span style="color: #008000;">检查今天表存在否，不存在就建立。</span>
                <span style="color: #008080;">file_put_contents</span>(<span style="color: #800080;">$dir</span>."/<span style="color: #800080;">$mDateTime</span>.html","<span style="color: #800080;">$Bot</span> - <span style="color: #800080;">$GetLocationURL</span> - <span style="color: #800080;">$addtime</span> &lt;br&gt;",<span style="color: #000000;">FILE_APPEND);
                </span><span style="color: #008000;">//</span><span style="color: #008000;">echo $agent .' - ' .$Bot .' - ' . $GetLocationURL;</span>
<span style="color: #000000;">        }
}</span></pre>
</div>
<p>&nbsp;</p>
<p><span>受此启发，可以看出，爬虫程序在访问你的网站时是通过$_SERVER["HTTP_USER_AGENT"]来标识自己的，不同的爬虫有不同的名字。</span></p>
<p><span>&nbsp;</span></p>
<p><span><span>在网上搜索了一个完整的爬虫记录程序，贴出来供大家参考：</span></span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #008000;">/*</span><span style="color: #008000;">*
  * 名称:抓虫助手 1.0
  * 文件:cls_spider.php
  
  * --------说明-----------------
  * 类文件的作用是监控搜索引擎爬虫对网站的操作。
  * 本类为php代码，只适用于php系统的网站。
  * 代码没有使用到数据库，直接把记录写在文本文件中，请在根目录建立spider文件夹。
  * 代码产生的记录，仅供参考，并不保证包含所有的记录，因为没有运行到本代码的文件是不会记录的。
  * 本代码为免费代码，可以随便复制，修改使用，但是希望能保留一点我的版权信息。
  
  * --------使用方法-------------
  * 请将需要统计的页面加入以下代码，并调用，一般修改在全局调用的文件中。

  * require(ROOT_PATH . '本文件目录/cls_spider.php');
  * $spider=new spider();

  * 如果有不会安装的朋友 可以通过以下方式联系我帮忙。
  * QQ: 235534
  * EMAIL: dreamisok@qq.com
  * 博客: http://blog.toptao123.com
  * 请支持一下我的网站 http://www.ataobao.net http://www.toptao123.com 欢迎交换链接
</span><span style="color: #008000;">*/</span>

<span style="color: #0000ff;">class</span><span style="color: #000000;"> spider
{
    </span><span style="color: #0000ff;">var</span> <span style="color: #800080;">$searchbot</span>    = ""<span style="color: #000000;">;
    </span><span style="color: #0000ff;">var</span> <span style="color: #800080;">$tlc_thispage</span> = ""<span style="color: #000000;">;
    </span><span style="color: #0000ff;">var</span> <span style="color: #800080;">$filename</span>     = ""<span style="color: #000000;">;
    </span><span style="color: #0000ff;">var</span> <span style="color: #800080;">$timestr</span>      = ""<span style="color: #000000;">;
    </span><span style="color: #0000ff;">var</span> <span style="color: #800080;">$spider_array</span> = <span style="color: #0000ff;">array</span>("Googlebot"=&gt;"googlebot",
                              "GOOGLE ADSENSE"=&gt;"mediapartners-google",
                              "YODAO"=&gt;"yodaobot",
                              "MSNbot"=&gt;"msnbot",
                              "Yahoobot"=&gt;"slurp",
                              "Baiduspider"=&gt;"baiduspider",
                              "Sohubot"=&gt;"sohu-search",
                              "IASK"=&gt;"iaskspider",
                              "SOGOU"=&gt;"sogou",
                              "Robozilla"=&gt;"robozilla",
                              "Lycos"=&gt;"lycos"<span style="color: #000000;">);

    </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> __construct()
    {
        </span><span style="color: #800080;">$this</span>-&gt;tlc_thispage=<span style="color: #008080;">addslashes</span>(<span style="color: #800080;">$_SERVER</span>["REQUEST_URI"<span style="color: #000000;">]);
        </span><span style="color: #800080;">$this</span>-&gt;filename='spider/'.<span style="color: #008080;">date</span>("ymd").'.txt'<span style="color: #000000;">;
        </span><span style="color: #800080;">$this</span>-&gt;timestr=<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">nowtime();
        </span><span style="color: #800080;">$this</span>-&gt;searchbot = <span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">get_naps_bot();
        </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">spider();
    }

    </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> spider()
    {
        </span><span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">searchbot))
        {
            </span><span style="color: #800080;">$writestring</span>="Time:".<span style="color: #800080;">$this</span>-&gt;timestr." Robot:".<span style="color: #800080;">$this</span>-&gt;searchbot." URL:".<span style="color: #800080;">$this</span>-&gt;tlc_thispage."\n"<span style="color: #000000;">;
            </span><span style="color: #800080;">$data</span>=<span style="color: #008080;">fopen</span>(<span style="color: #800080;">$this</span>-&gt;filename,"a"<span style="color: #000000;">);
            </span><span style="color: #008080;">fwrite</span>(<span style="color: #800080;">$data</span>,<span style="color: #800080;">$writestring</span><span style="color: #000000;">);
            </span><span style="color: #008080;">fclose</span>(<span style="color: #800080;">$data</span><span style="color: #000000;">);
        }
    }

    </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> get_naps_bot()
    {
        </span><span style="color: #0000ff;">if</span>(<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_USER_AGENT'<span style="color: #000000;">]))
        {
            </span><span style="color: #800080;">$useragent</span> = <span style="color: #008080;">strtolower</span>(<span style="color: #800080;">$_SERVER</span>['HTTP_USER_AGENT'<span style="color: #000000;">]);
            </span><span style="color: #0000ff;">foreach</span>(<span style="color: #800080;">$this</span>-&gt;spider_array <span style="color: #0000ff;">as</span> <span style="color: #800080;">$key</span>=&gt;<span style="color: #800080;">$value</span><span style="color: #000000;">)
            {
                </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">strpos</span>(<span style="color: #800080;">$useragent</span>, <span style="color: #800080;">$value</span>) !== <span style="color: #0000ff;">false</span><span style="color: #000000;">)
                {
                    </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$key</span><span style="color: #000000;">;
                }
            }
        }
        </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
    }

    </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> nowtime()
    {
        </span><span style="color: #800080;">$date</span>=<span style="color: #008080;">date</span>("Y-m-d.G:i:s"<span style="color: #000000;">);
        </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$date</span><span style="color: #000000;">;
    }
}
</span>?&gt;</pre>
</div>]]></description></item><item><title>REPLACE INTO的用法</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796289.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:24:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796289.html</guid><description><![CDATA[<p><span>在向表中插入数据的时候，经常遇到这样的情况：1.&nbsp;首先判断数据是否存在；&nbsp;2.&nbsp;如果不存在，则插入；3.如果存在，则更新。</span><br /><br /><span>在&nbsp;SQL&nbsp;Server&nbsp;中可以这样处理：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> not exists (select 1 from t where id = 1) <br />  insert into t(id, update_time) values(1, <span style="color: #008080;">getdate</span>()) <br /><span style="color: #0000ff;">else</span> <br />  update t set update_time = <span style="color: #008080;">getdate</span>() where id = 1</pre>
</div>
<p>&nbsp;</p>
<p><span>那么&nbsp;MySQL&nbsp;中如何实现这样的逻辑呢？别着急！MySQL&nbsp;中有更简单的方法：</span></p>
<div class="cnblogs_code">
<pre>replace into t(id, update_time) values(1,<span style="color: #000000;"> now());或
replace into t(id</span>, update_time) select 1, now();</pre>
</div>
<p>&nbsp;</p>
<p>replace&nbsp;into&nbsp;跟&nbsp;insert&nbsp;功能类似，不同点在于：replace&nbsp;into&nbsp;首先尝试插入数据到表中，&nbsp;1.&nbsp;如果发现表中已经有此行数据（根据主键或者唯一索引判断）则先删除此行数据，然后插入新的数据。&nbsp;2.&nbsp;否则，直接插入新数据。</p>
<p><br /><span>要注意的是：插入数据的表必须有主键或者是唯一索引！否则的话，replace&nbsp;into&nbsp;会直接插入数据，这将导致表中出现重复的数据。</span><br /><br /><span>replace&nbsp;into的三种语法形式：</span></p>
<div class="cnblogs_code">
<pre>REPLACE [LOW_PRIORITY |<span style="color: #000000;"> DELAYED]
    [INTO] tbl_name [(col_name</span>,...<span style="color: #000000;">)]
    VALUES ({expr </span>| <span style="color: #0000ff;">DEFAULT</span>},...),(...),...<span style="color: #000000;">
或
REPLACE [LOW_PRIORITY </span>|<span style="color: #000000;"> DELAYED]
    [INTO] tbl_name
    SET col_name</span>={expr | <span style="color: #0000ff;">DEFAULT</span>}, ...<span style="color: #000000;">
或
REPLACE [LOW_PRIORITY </span>|<span style="color: #000000;"> DELAYED]
    [INTO] tbl_name [(col_name</span>,...<span style="color: #000000;">)]
    SELECT </span>...</pre>
</div>
<p>&nbsp;</p>
<p><span>附上UCHome中看到的一个replace&nbsp;into的用法：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$_POST</span>['config']['ipaccess'] = <span style="color: #008080;">trim</span>(<span style="color: #800080;">$_POST</span>['config']['ipaccess'<span style="color: #000000;">]);
</span><span style="color: #800080;">$_POST</span>['config']['ipbanned'] = <span style="color: #008080;">trim</span>(<span style="color: #800080;">$_POST</span>['config']['ipbanned'<span style="color: #000000;">]);

</span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$_POST</span>['config'] <span style="color: #0000ff;">as</span> <span style="color: #800080;">$var</span> =&gt; <span style="color: #800080;">$value</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$value</span> = <span style="color: #008080;">trim</span>(<span style="color: #800080;">$value</span><span style="color: #000000;">);
  </span><span style="color: #0000ff;">if</span>(!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_SCONFIG</span>[<span style="color: #800080;">$var</span>]) || <span style="color: #800080;">$_SCONFIG</span>[<span style="color: #800080;">$var</span>] != <span style="color: #800080;">$value</span><span style="color: #000000;">) {
    </span><span style="color: #800080;">$setarr</span>[] = "('<span style="color: #800080;">$var</span>', '<span style="color: #800080;">$value</span>')"<span style="color: #000000;">;
  }
}

</span><span style="color: #0000ff;">if</span>(<span style="color: #800080;">$setarr</span><span style="color: #000000;">) {
  </span><span style="color: #800080;">$_SGLOBAL</span>['db']-&gt;query("REPLACE INTO ".tname('config')." (var, datavalue) VALUES ".<span style="color: #008080;">implode</span>(',', <span style="color: #800080;">$setarr</span><span style="color: #000000;">));
}

</span><span style="color: #008000;">//</span><span style="color: #008000;">REPLACE INTO uchome_config (var, datavalue) VALUES ('ipaccess', '127.0.0.1'),('ipbanned', '10.3.1')</span></pre>
</div>]]></description></item><item><title>PHP读取MySQL中文乱码</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796283.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:20:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796283.html</guid><description><![CDATA[<p><span>今天用PHP读取的MySQL中的中文内容字段，结果读取出来的居然乱码。</span><br /><br /><span>使用下面的语句设置连接编码，结果还是照旧。</span></p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$charset</span> = <span style="color: #800080;">$params</span>['charset'<span style="color: #000000;">];  
</span><span style="color: #008080;">mysql_query</span>('SET character_set_connection=$charset, character_set_results=$charset, character_set_client=binary', <span style="color: #800080;">$db</span>);</pre>
</div>
<p>&nbsp;</p>
<p>我确定数据库建立的时候用的是utf8，页面输出编码是utf-8，这些都没有问题。那问题出在哪里呢？调试PHP发现，从数据库读出来的结果就是乱码的，难道是连接有问题？</p>
<p><br /><span>在网上搜索了一番后，将上面的语句修改：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">mysql_query</span>('SET NAMES UTF8', <span style="color: #800080;">$db</span>);</pre>
</div>
<p>再次执行，结果居然OK。难道只能用SET&nbsp;NAMES才行吗？<br /><br /><span>突然间，恍然大悟，原来是执行mysql_query()时使用了单引号，没有解析$charset的缘故。</span></p>]]></description></item><item><title>用PHP实现Web Server</title><link>http://www.cnblogs.com/eastson/archive/2012/11/30/2796276.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 30 Nov 2012 07:18:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/30/2796276.html</guid><description><![CDATA[<p><span>以前做的一个例子，用PHP模拟Web服务器和客户端。年初的时候网站数据丢失，重新补传一次。</span><br /><br /><span>服务端代码server.php：</span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php

</span><span style="color: #800080;">$host</span> = '127.0.0.1'<span style="color: #000000;">;
</span><span style="color: #800080;">$port</span> = 9083<span style="color: #000000;">;

</span><span style="color: #800080;">$socket</span> = socket_create(AF_INET, SOCK_STREAM,<span style="color: #000000;"> SOL_TCP);
</span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$socket</span> === <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">)
{
    display_socket_error();
}

</span><span style="color: #0000ff;">if</span> (socket_bind(<span style="color: #800080;">$socket</span>, <span style="color: #800080;">$host</span>, <span style="color: #800080;">$port</span>) === <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">)
{
    display_socket_error();
}

</span><span style="color: #0000ff;">if</span> (socket_listen(<span style="color: #800080;">$socket</span>, 3) === <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">)
{
    display_socket_error();
}

</span><span style="color: #0000ff;">while</span> (<span style="color: #0000ff;">true</span><span style="color: #000000;">)
{
    </span><span style="color: #800080;">$csocket</span> = socket_accept(<span style="color: #800080;">$socket</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$csocket</span> === <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">)
    {
        display_socket_error();
    }
    
    </span><span style="color: #800080;">$request</span> = parse_socket_request(<span style="color: #800080;">$csocket</span><span style="color: #000000;">);
    </span><span style="color: #008080;">print_r</span>(<span style="color: #800080;">$request</span><span style="color: #000000;">);
    
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">strcasecmp</span>(<span style="color: #800080;">$request</span>['uri'], '/quit') === 0<span style="color: #000000;">)
    {
        socket_close(</span><span style="color: #800080;">$csocket</span><span style="color: #000000;">);
        </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
    }
    
    handle_request(</span><span style="color: #800080;">$csocket</span>, <span style="color: #800080;">$request</span><span style="color: #000000;">);
    socket_close(</span><span style="color: #800080;">$csocket</span><span style="color: #000000;">);
}

socket_close(</span><span style="color: #800080;">$socket</span><span style="color: #000000;">);

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> display_socket_error()
{
    </span><span style="color: #800080;">$errorcode</span> =<span style="color: #000000;"> socket_last_error();
    </span><span style="color: #800080;">$errormsg</span> = socket_strerror(<span style="color: #800080;">$errorcode</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">die</span>("Socket error: [<span style="color: #800080;">$errorcode</span>] <span style="color: #800080;">$errormsg</span>"<span style="color: #000000;">);
}

</span><span style="color: #0000ff;">function</span> parse_socket_request(<span style="color: #800080;">$socket</span><span style="color: #000000;">)
{
    </span><span style="color: #800080;">$result</span> = socket_read(<span style="color: #800080;">$socket</span>, 4096,<span style="color: #000000;"> PHP_BINARY_READ);
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$result</span> === <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">)
    {
        display_socket_error();
    }
    
    </span><span style="color: #800080;">$lines</span> = <span style="color: #008080;">explode</span>("\r\n", <span style="color: #800080;">$result</span><span style="color: #000000;">);
    
    </span><span style="color: #0000ff;">list</span>(<span style="color: #800080;">$method</span>, <span style="color: #800080;">$uri</span>, <span style="color: #800080;">$protocol</span>) = <span style="color: #008080;">explode</span>(" ", <span style="color: #800080;">$lines</span>[0], 3<span style="color: #000000;">);
    
    </span><span style="color: #800080;">$headers</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
    </span><span style="color: #0000ff;">for</span> (<span style="color: #800080;">$i</span> = 1; <span style="color: #800080;">$i</span> &lt; <span style="color: #008080;">count</span>(<span style="color: #800080;">$lines</span>); <span style="color: #800080;">$i</span>++<span style="color: #000000;">)
    {
        </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$lines</span>[<span style="color: #800080;">$i</span>] === ""<span style="color: #000000;">)
            </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
        </span><span style="color: #800080;">$parts</span> = <span style="color: #008080;">explode</span>(":", <span style="color: #800080;">$lines</span>[<span style="color: #800080;">$i</span>], 2<span style="color: #000000;">);
        </span><span style="color: #800080;">$headers</span>[<span style="color: #008080;">trim</span>(<span style="color: #800080;">$parts</span>[0])] = <span style="color: #008080;">trim</span>(<span style="color: #800080;">$parts</span>[1], " \""<span style="color: #000000;">);
    }
    
    </span><span style="color: #800080;">$body</span> = ''<span style="color: #000000;">;
    </span><span style="color: #0000ff;">for</span> (<span style="color: #800080;">$i</span> = <span style="color: #800080;">$i</span> + 1; <span style="color: #800080;">$i</span> &lt; <span style="color: #008080;">count</span>(<span style="color: #800080;">$lines</span>); <span style="color: #800080;">$i</span>++<span style="color: #000000;">)
    {
        </span><span style="color: #800080;">$body</span> .= <span style="color: #800080;">$lines</span>[<span style="color: #800080;">$i</span>] . "\r\n"<span style="color: #000000;">;
    }
    
    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">array</span>('protocol' =&gt; <span style="color: #800080;">$protocol</span>,
            'uri' =&gt; <span style="color: #800080;">$uri</span>,
            'method' =&gt; <span style="color: #800080;">$method</span>,
            'headers' =&gt; <span style="color: #800080;">$headers</span>, 
            'body' =&gt; <span style="color: #800080;">$body</span><span style="color: #000000;">
    );
}

</span><span style="color: #0000ff;">function</span> send_response_line(<span style="color: #800080;">$socket</span>, <span style="color: #800080;">$line</span><span style="color: #000000;">)
{
    </span><span style="color: #0000ff;">if</span> (socket_write(<span style="color: #800080;">$socket</span>, <span style="color: #800080;">$line</span>, <span style="color: #008080;">strlen</span>(<span style="color: #800080;">$line</span>)) === <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">)
    {
        display_socket_error();
    }
}

</span><span style="color: #0000ff;">function</span> handle_request(<span style="color: #800080;">$socket</span>, <span style="color: #800080;">$request</span><span style="color: #000000;">)
{
    </span><span style="color: #800080;">$abs_path</span> = <span style="color: #008080;">realpath</span>(<span style="color: #008080;">dirname</span>(<span style="color: #ff00ff;">__FILE__</span>) . '/../' . <span style="color: #800080;">$request</span>['uri'<span style="color: #000000;">]);
    
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">is_file</span>(<span style="color: #800080;">$abs_path</span><span style="color: #000000;">))
    {
        send_response_content(</span><span style="color: #800080;">$socket</span>, <span style="color: #800080;">$abs_path</span>, 200, "OK"<span style="color: #000000;">);
        </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
    }
    
    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">is_dir</span>(<span style="color: #800080;">$abs_path</span><span style="color: #000000;">))
    {
        </span><span style="color: #800080;">$index_file</span> = <span style="color: #800080;">$abs_path</span> . DIRECTORY_SEPARATOR . 'index.html'<span style="color: #000000;">;
        </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">is_file</span>(<span style="color: #800080;">$index_file</span><span style="color: #000000;">))
        {
            send_response_content(</span><span style="color: #800080;">$socket</span>, <span style="color: #800080;">$index_file</span>, 200, "OK"<span style="color: #000000;">);
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
        }
    }
    
    send_response_404(</span><span style="color: #800080;">$socket</span><span style="color: #000000;">);
}

</span><span style="color: #0000ff;">function</span> send_response_content(<span style="color: #800080;">$socket</span>, <span style="color: #800080;">$path</span>, <span style="color: #800080;">$statusCode</span>, <span style="color: #800080;">$statusText</span><span style="color: #000000;">)
{
    </span><span style="color: #800080;">$mimetype</span> = get_content_type(<span style="color: #800080;">$path</span><span style="color: #000000;">);
    </span><span style="color: #800080;">$content</span> = <span style="color: #008080;">file_get_contents</span>(<span style="color: #800080;">$path</span><span style="color: #000000;">);
    
    send_response_line(</span><span style="color: #800080;">$socket</span>, "HTTP/1.1 " . <span style="color: #800080;">$statusCode</span> . " " . <span style="color: #800080;">$statusText</span> . "\r\n"<span style="color: #000000;">);
    send_response_line(</span><span style="color: #800080;">$socket</span>, "Server: PHPSocketServer\r\n"<span style="color: #000000;">);
    send_response_line(</span><span style="color: #800080;">$socket</span>, "Accept-Ranges: bytes\r\n"<span style="color: #000000;">);
    send_response_line(</span><span style="color: #800080;">$socket</span>, "Content-Type: " . <span style="color: #800080;">$mimetype</span> . "\r\n"<span style="color: #000000;">);
    send_response_line(</span><span style="color: #800080;">$socket</span>, "Content-Length: " . <span style="color: #008080;">strlen</span>(<span style="color: #800080;">$content</span>) . "\r\n"<span style="color: #000000;">);
    send_response_line(</span><span style="color: #800080;">$socket</span>, "\r\n"<span style="color: #000000;">);
    send_response_line(</span><span style="color: #800080;">$socket</span>, <span style="color: #800080;">$content</span><span style="color: #000000;">);    
}

</span><span style="color: #0000ff;">function</span> send_response_404(<span style="color: #800080;">$socket</span><span style="color: #000000;">)
{
    send_response_content(</span><span style="color: #800080;">$socket</span>, <span style="color: #008080;">realpath</span>(<span style="color: #008080;">dirname</span>(<span style="color: #ff00ff;">__FILE__</span>) . '/error404.html'), 404, 'Not Found'<span style="color: #000000;">);
}

</span><span style="color: #0000ff;">function</span> get_content_type(<span style="color: #800080;">$path</span><span style="color: #000000;">)
{
    </span><span style="color: #800080;">$mimetypelist</span>["gif"] = "image/gif"<span style="color: #000000;">;
    </span><span style="color: #800080;">$mimetypelist</span>["jpeg"] = "image/jpeg"<span style="color: #000000;">;
    </span><span style="color: #800080;">$mimetypelist</span>["jpg"] = "image/jpeg"<span style="color: #000000;">;
    </span><span style="color: #800080;">$mimetypelist</span>["jpe"] = "image/jpeg"<span style="color: #000000;">;
    </span><span style="color: #800080;">$mimetypelist</span>["png"] = "image/png"<span style="color: #000000;">;
    </span><span style="color: #800080;">$mimetypelist</span>["tiff"] = "image/tiff"<span style="color: #000000;">;
    </span><span style="color: #800080;">$mimetypelist</span>["tif"] = "image/tiff"<span style="color: #000000;">;
    </span><span style="color: #800080;">$mimetypelist</span>["bmp"] = "image/x-ms-bmp"<span style="color: #000000;">;
    </span><span style="color: #800080;">$mimetypelist</span>["html"] = "text/html"<span style="color: #000000;">;
    </span><span style="color: #800080;">$mimetypelist</span>["htm"] = "text/html"<span style="color: #000000;">;
    </span><span style="color: #800080;">$mimetypelist</span>["txt"] = "text/plain"<span style="color: #000000;">;

    </span><span style="color: #800080;">$ext</span> = <span style="color: #008080;">pathinfo</span>(<span style="color: #800080;">$path</span>,<span style="color: #000000;"> PATHINFO_EXTENSION);
    </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$mimetypelist</span>[<span style="color: #800080;">$ext</span><span style="color: #000000;">]))
        </span><span style="color: #0000ff;">return</span> <span style="color: #800080;">$mimetypelist</span>[<span style="color: #800080;">$ext</span><span style="color: #000000;">];
    </span><span style="color: #0000ff;">else</span>
        <span style="color: #0000ff;">return</span> ''<span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p><span>客服端代码client.php：</span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php

</span><span style="color: #800080;">$host</span> = '127.0.0.1'<span style="color: #000000;">;
</span><span style="color: #800080;">$port</span> = 9083<span style="color: #000000;">;

</span><span style="color: #800080;">$socket</span> = socket_create(AF_INET, SOCK_STREAM,<span style="color: #000000;"> SOL_TCP);
</span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$socket</span> === <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">)
{
    display_socket_error();
}

</span><span style="color: #0000ff;">if</span> (socket_connect(<span style="color: #800080;">$socket</span>, <span style="color: #800080;">$host</span>, <span style="color: #800080;">$port</span>) === <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">)
{
    display_socket_error();
}

</span><span style="color: #0000ff;">echo</span> "Connection successful on IP <span style="color: #800080;">$host</span>, port <span style="color: #800080;">$port</span>\r\n\r\n\r\n"<span style="color: #000000;">;

send_request_line(</span>"GET /abc.txt HTTP/1.1\r\n"<span style="color: #000000;">);
send_request_line(</span>"Host: localhost\r\n"<span style="color: #000000;">);
send_request_line(</span>"\r\n"<span style="color: #000000;">);

</span><span style="color: #800080;">$response</span> =<span style="color: #000000;"> parse_socket_response();
</span><span style="color: #008080;">print_r</span>(<span style="color: #800080;">$response</span><span style="color: #000000;">);

socket_close(</span><span style="color: #800080;">$socket</span><span style="color: #000000;">);

</span><span style="color: #0000ff;">function</span> send_request_line(<span style="color: #800080;">$line</span><span style="color: #000000;">)
{
    </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$socket</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">if</span> (socket_write(<span style="color: #800080;">$socket</span>, <span style="color: #800080;">$line</span>, <span style="color: #008080;">strlen</span>(<span style="color: #800080;">$line</span>)) === <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">)
    {
        display_socket_error();
    }
}
       
</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> display_socket_error()
{
    </span><span style="color: #800080;">$errorcode</span> =<span style="color: #000000;"> socket_last_error();
    </span><span style="color: #800080;">$errormsg</span> = socket_strerror(<span style="color: #800080;">$errorcode</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">die</span>("Socket error: [<span style="color: #800080;">$errorcode</span>] <span style="color: #800080;">$errormsg</span>"<span style="color: #000000;">);
}

</span><span style="color: #0000ff;">function</span><span style="color: #000000;"> parse_socket_response()
{
    </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$socket</span><span style="color: #000000;">;
    
    </span><span style="color: #800080;">$result</span> = socket_read(<span style="color: #800080;">$socket</span>, 4096,<span style="color: #000000;"> PHP_BINARY_READ);
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$result</span> === <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">)
    {
        display_socket_error();
    }
    
    </span><span style="color: #008000;">/*</span><span style="color: #008000;">
    返回的响应信息如下：
    HTTP/1.1 200 OK
    Date: Wed, 27 Jul 2011 01:49:49 GMT
    Server: Apache/2.2.15 (Win32) mod_ssl/2.2.15 OpenSSL/0.9.8n
    Last-Modified: Tue, 26 Jul 2011 05:57:42 GMT
    ETag: "200000006a2ae-16-4a8f29c2a18a6"
    Accept-Ranges: bytes
    Content-Length: 22
    Content-Type: text/plain
    
    This is a server file.    
    
    每一行都以\r\n作为结尾。
    
    响应信息可以分为三个部分：
    1. 第一行是响应行，以空格分割，依次是协议，状态码和状态说明。
    2. 响应头，在响应信息中以一个空行分割。名称和值以冒号分开。
    3. 内容，在响应信息的最后面。
    </span><span style="color: #008000;">*/</span>
    
    <span style="color: #800080;">$lines</span> = <span style="color: #008080;">explode</span>("\r\n", <span style="color: #800080;">$result</span><span style="color: #000000;">);
    
    </span><span style="color: #0000ff;">list</span>(<span style="color: #800080;">$protocol</span>, <span style="color: #800080;">$statusCode</span>, <span style="color: #800080;">$statusText</span>) = <span style="color: #008080;">explode</span>(" ", <span style="color: #800080;">$lines</span>[0], 3<span style="color: #000000;">);
    
    </span><span style="color: #800080;">$headers</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
    </span><span style="color: #0000ff;">for</span> (<span style="color: #800080;">$i</span> = 1; <span style="color: #800080;">$i</span> &lt; <span style="color: #008080;">count</span>(<span style="color: #800080;">$lines</span>); <span style="color: #800080;">$i</span>++<span style="color: #000000;">)
    {
        </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$lines</span>[<span style="color: #800080;">$i</span>] === ""<span style="color: #000000;">)
            </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
        </span><span style="color: #800080;">$parts</span> = <span style="color: #008080;">explode</span>(":", <span style="color: #800080;">$lines</span>[<span style="color: #800080;">$i</span>], 2<span style="color: #000000;">);
        </span><span style="color: #800080;">$headers</span>[<span style="color: #008080;">trim</span>(<span style="color: #800080;">$parts</span>[0])] = <span style="color: #008080;">trim</span>(<span style="color: #800080;">$parts</span>[1], " \""<span style="color: #000000;">);
    }
    
    </span><span style="color: #800080;">$body</span> = ''<span style="color: #000000;">;
    </span><span style="color: #0000ff;">for</span> (<span style="color: #800080;">$i</span> = <span style="color: #800080;">$i</span> + 1; <span style="color: #800080;">$i</span> &lt; <span style="color: #008080;">count</span>(<span style="color: #800080;">$lines</span>); <span style="color: #800080;">$i</span>++<span style="color: #000000;">)
    {
        </span><span style="color: #800080;">$body</span> .= <span style="color: #800080;">$lines</span>[<span style="color: #800080;">$i</span>] . "\r\n"<span style="color: #000000;">;
    }
    
    </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">array</span>('protocol' =&gt; <span style="color: #800080;">$protocol</span>,
            'statusCode' =&gt; <span style="color: #800080;">$statusCode</span>,
            'statusText' =&gt; <span style="color: #800080;">$statusText</span>,
            'headers' =&gt; <span style="color: #800080;">$headers</span>, 
            'body' =&gt; <span style="color: #800080;">$body</span><span style="color: #000000;">
    );
}</span></pre>
</div>]]></description></item><item><title>PHP使用正则下载Windows 8主题背景</title><link>http://www.cnblogs.com/eastson/archive/2012/11/27/2790151.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 27 Nov 2012 00:27:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/27/2790151.html</guid><description><![CDATA[<p><a href="http://windows.microsoft.com/zh-CN/windows/home" target="_blank">Windows 8</a>出来了，官方网站上提供了很多的壁纸供人们下载。本代码的目的是使用PHP的正则表达式一次将所有的壁纸都下载下来。</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 下载网址</span>
<span style="color: #800080;">$html</span> = <span style="color: #008080;">file_get_contents</span>('http://windows.microsoft.com/zh-CN/windows/wallpaper?T1=all'<span style="color: #000000;">);

</span><span style="color: #008000;">//</span><span style="color: #008000;"> 壁纸图片都应该放在这样的标签内.</span>
<span style="color: #800080;">$pattern</span> = '/&lt;div class="prodPaneImage"&gt;&lt;a href=".*"&gt;&lt;img class="blkImg"/'<span style="color: #000000;">;
</span><span style="color: #800080;">$n</span> = <span style="color: #008080;">preg_match_all</span>(<span style="color: #800080;">$pattern</span>, <span style="color: #800080;">$html</span>, <span style="color: #800080;">$matches</span>,<span style="color: #000000;"> PREG_SET_ORDER);

</span><span style="color: #0000ff;">for</span> (<span style="color: #800080;">$i</span> = 0; <span style="color: #800080;">$i</span> &lt; <span style="color: #800080;">$n</span>; <span style="color: #800080;">$i</span>++<span style="color: #000000;">) {
    </span><span style="color: #008080;">preg_match_all</span>('/http:.+\.jpg/', <span style="color: #800080;">$matches</span>[<span style="color: #800080;">$i</span>][0], <span style="color: #800080;">$url</span>,<span style="color: #000000;"> PREG_SET_ORDER);
    </span><span style="color: #0000ff;">echo</span> <span style="color: #008080;">sprintf</span>('Downloading (%d/%d) %s ... ', <span style="color: #800080;">$i</span> + 1, <span style="color: #800080;">$n</span>, <span style="color: #800080;">$url</span>[0][0<span style="color: #000000;">]);

    </span><span style="color: #800080;">$url</span> = <span style="color: #800080;">$url</span>[0][0<span style="color: #000000;">];
    </span><span style="color: #800080;">$url</span> = <span style="color: #008080;">str_replace</span>(' ', '%20', <span style="color: #800080;">$url</span>); <span style="color: #008000;">//</span><span style="color: #008000;"> 替换空格</span>
    <span style="color: #800080;">$contents</span> = <span style="color: #008080;">file_get_contents</span>(<span style="color: #800080;">$url</span><span style="color: #000000;">);
    </span><span style="color: #008080;">file_put_contents</span>('images/' . <span style="color: #008080;">basename</span>(<span style="color: #800080;">$url</span>), <span style="color: #800080;">$contents</span>); <span style="color: #008000;">//</span><span style="color: #008000;"> 壁纸下载后存放的路径</span>

    <span style="color: #0000ff;">echo</span> ' OK!' . <span style="color: #ff00ff;">PHP_EOL</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>执行过程：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012112708382949.png" alt="" /></p>
<p>&nbsp;</p>
<p>下载后的结果(截至到现在共有336张)：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012112708264128.png" alt="" /></p>]]></description></item><item><title>PHP替换字符串中的回车换行符号</title><link>http://www.cnblogs.com/eastson/archive/2012/11/26/2788619.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 26 Nov 2012 02:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/26/2788619.html</guid><description><![CDATA[<p>因为程式的需要，将一系列的值组合起来保存到了数据库的一个text字段，中间用回车换行符分开，看起来象这样：</p>
<div class="cnblogs_code">
<pre>adminxxx@admin.<span style="color: #000000;">com
adminyyy@admin</span>.<span style="color: #000000;">com
adminzzz@admin</span>.com</pre>
</div>
<p>&nbsp;</p>
<p>取值时再转换成数组：</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #800080;">$result</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">(); // 转换后的结果
</span><span style="color: #800080;">$tokens</span> = <span style="color: #008080;">preg_split</span>('/[\r\n]+/', <span style="color: #800080;">$str</span><span style="color: #000000;">);

</span><span style="color: #0000ff;">foreach</span> (<span style="color: #800080;">$tokens</span> <span style="color: #0000ff;">as</span> <span style="color: #800080;">$token</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">false</span> !== <span style="color: #008080;">strpos</span>(<span style="color: #800080;">$token</span>, '='<span style="color: #000000;">)) {
        </span><span style="color: #0000ff;">list</span>(<span style="color: #800080;">$key</span>, <span style="color: #800080;">$value</span>) = <span style="color: #008080;">explode</span>('=', <span style="color: #800080;">$token</span>, 2<span style="color: #000000;">);
        </span><span style="color: #800080;">$result</span>[<span style="color: #800080;">$key</span>] = <span style="color: #800080;">$value</span><span style="color: #000000;">;
    } </span><span style="color: #0000ff;">else</span>
        <span style="color: #800080;">$result</span>[] = <span style="color: #800080;">$token</span><span style="color: #000000;">;
    }
}

</span><span style="color: #008080;">print_r</span>(<span style="color: #800080;">$result</span>);</pre>
</div>]]></description></item><item><title>如何利用PHP自定义错误处理器处理出错信息？</title><link>http://www.cnblogs.com/eastson/archive/2012/11/24/2785414.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 24 Nov 2012 01:41:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/24/2785414.html</guid><description><![CDATA[<p>如果您是PHP老手，当然知道当PHP脚本出错时发生了什么事情。此时PHP解析器将在屏幕上给出错误信息，如 Fatal error: Call to undefined function on line 19 --，因此程序在此处终止。这个信息会吓到客户，他可能立即打电话和你进行咨询。</p>
<p>幸运的是，这里有解决办法。PHP拥有内置工具，可以让开发人员捕捉脚本错误然后将它们转到自定义的错误处理器。此时则可以对处理器进行编程显示更多关于错误的详细信息。还可以将错误写入文件或数据库以采取补救措施。有时候还可以对处理器编写程序忽略错误消息。</p>
<p>本文中，我将阐述如何使用PHP的错误处理API构建用户自定义的错误处理器，并且说明如何以简单而友好的方式显示和管理脚本的错误信息。</p>
<p>&nbsp;</p>
<h3>错误类型和报告级别</h3>
<p>我们从最基本的开始。PHP有三种最基本的错误类型，从低级到高级分别为：<strong>注意、警告和错误（或致命错误）</strong>。通常情况下，注意和警告不会终止程序；但是致命错误则是危险故障（例如，调用一个没有定义的函数或参考一个不存在的对象），将导致程序中断。这些错误有可能在启动、解析、编译或运行时发生。</p>
<p>关键字如E_NOTICE, E_ERROR等用于表明错误的不同类型和等级。在PHP手册上可以获得它们的详细信息列表。</p>
<p>脚本阶段错误显示由error_reporting()函数进行控制。这一函数针对不同的错误等级设置不同的参数。表A给出了使用此函数报告警告和致命错误的脚本程序。</p>
<p>表A</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #008000;">//</span><span style="color: #008000;"> display warnings and errors</span>
<span style="color: #008080;">error_reporting</span>(<span style="color: #ff00ff;">E_WARNING</span> | <span style="color: #ff00ff;">E_ERROR</span><span style="color: #000000;">);
</span><span style="color: #008000;">//</span><span style="color: #008000;"> this will generate a notice, which will never be displayed</span>
<span style="color: #0000ff;">echo</span> <span style="color: #800080;">$undefinedVar</span><span style="color: #000000;">;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> this will generate a fatal error, which will be displayed</span>
<span style="color: #000000;">callUndefFunc();
</span>?&gt;</pre>
</div>
<p>&nbsp;</p>
<p>将表B中的代码与上面的进行比较发现，Listing B中隐藏错误信息甚至隐藏致命信息，使得错误信息不会被显示出来。</p>
<p>表B</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #008000;">//</span><span style="color: #008000;"> turn off error display
// no errors will be displayed</span>
<span style="color: #008080;">error_reporting</span>(0<span style="color: #000000;">);
</span><span style="color: #008000;">//</span><span style="color: #008000;"> this will generate a notice</span>
<span style="color: #0000ff;">echo</span> <span style="color: #800080;">$undefinedVar</span><span style="color: #000000;">;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> this will generate a fatal error</span>
<span style="color: #000000;">callUndefFunc();
</span>?&gt;</pre>
</div>
<p>&nbsp;</p>
<p>表C中的代码将所有错误信息甚至简单的注意事项都显示出来：</p>
<p>表C</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #008000;">//</span><span style="color: #008000;"> all errors will be displayed</span>
<span style="color: #008080;">error_reporting</span>(<span style="color: #ff00ff;">E_ALL</span><span style="color: #000000;">);
</span><span style="color: #008000;">//</span><span style="color: #008000;"> this will generate a notice</span>
<span style="color: #0000ff;">echo</span> <span style="color: #800080;">$undefinedVar</span><span style="color: #000000;">;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> this will generate a fatal error</span>
<span style="color: #000000;">callUndefFunc();
</span>?&gt;</pre>
</div>
<p>&nbsp;</p>
<p>如以上3个例子所示，error_reporting()函数在控制错误发生时，在屏幕上显示内容非常重要。这里的关键字是displayed，其表达的意思是错误不被显示而不是错误没有发生。因此，发生致命错误时（例如不正确的函数调用），程序将被终止；但是，此时没有任何消息显示给用户。</p>
<p>下面的例子（表 D）说明了这种情况：</p>
<p>表D</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #008000;">//</span><span style="color: #008000;"> no errors will be displayed</span>
<span style="color: #008080;">error_reporting</span>(0<span style="color: #000000;">);
</span><span style="color: #008000;">//</span><span style="color: #008000;"> start a task</span>
<span style="color: #0000ff;">echo</span> "Starting task..."<span style="color: #000000;">;
</span><span style="color: #008000;">//</span><span style="color: #008000;"> call an undefined function
// a fatal error occurs during task processing</span>
<span style="color: #000000;">callMe();
</span><span style="color: #008000;">//</span><span style="color: #008000;"> end the task</span>
<span style="color: #0000ff;">echo</span> "Successfully completed task..."<span style="color: #000000;">;
</span>?&gt;</pre>
</div>
<p>在表D中，在调用echo()函数时发生了致命错误，程序执行时到这点被终止，但是却没有任何错误消息给出，用户不知道这种情况还以为程序在正确运行。下面的结论是非常明显的：不给出错误报告非常危险，因为不论过程是否完成它常导致不正确的结论。</p>
<p>注意：调用不带任何参数的error_reporting()将返回当前的错误报告等级。</p>
<p>&nbsp;</p>
<h3>自定义错误处理器</h3>
<p>很明显，隐藏错误报告是不正确的，你肯定想知道有什么其他办法加以改进。自定义错误处理器就是一个很好的能取代PHP默认错误处理系统的解决方法。自定义错误处理器可以以任何方式设置处理错误信息，包括信息如何显示。</p>
<p>PHP函数中，完成这一功能的是set_error_handler()函数。错误发生时，此函数被自动调用，然后给出4个参数：错误代码、错误消息、发生错误的脚本名称和错误出现的行，此函数对错误管理负责。</p>
<p>表E给出一个简单例子：</p>
<p>表E</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php
</span><span style="color: #008000;">//</span><span style="color: #008000;"> define custom handler</span>
<span style="color: #008080;">set_error_handler</span>('myHandler'<span style="color: #000000;">);
</span><span style="color: #008000;">//</span><span style="color: #008000;"> custom handler code</span>
<span style="color: #0000ff;">function</span> myHandler(<span style="color: #800080;">$code</span>, <span style="color: #800080;">$msg</span>, <span style="color: #800080;">$file</span>, <span style="color: #800080;">$line</span><span style="color: #000000;">) {
</span><span style="color: #0000ff;">echo</span> "Just so you know, something went wrong at line <span style="color: #800080;">$line</span> of your script <span style="color: #800080;">$file</span>. The system says that the error code was <span style="color: #800080;">$code</span>, and the reason for the error was: <span style="color: #800080;">$msg</span>. Sorry about this!"<span style="color: #000000;">;
}
</span><span style="color: #008000;">//</span><span style="color: #008000;"> generate a notice</span>
<span style="color: #0000ff;">echo</span> <span style="color: #800080;">$undefVar</span><span style="color: #000000;">;
</span>?&gt;</pre>
</div>
<p>当运行此脚本的时候，会出现下面的信息：</p>
<div class="cnblogs_code">
<pre>Just so you know, something went wrong at line 11 of your /dev/error1.php. The <span style="color: #008080;">system</span> says that the error code was 8, and the reason <span style="color: #0000ff;">for</span> the error was: Undefined variable: undefVar. Sorry about this!</pre>
</div>
<p>&nbsp;</p>
<p>原文地址：<a href="http://www.jcwcn.com/article-16463-1.html" target="_blank">http://www.jcwcn.com/article-16463-1.html</a></p>]]></description></item><item><title>PHP的类自动加载机制</title><link>http://www.cnblogs.com/eastson/archive/2012/11/24/2785402.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 24 Nov 2012 01:23:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/24/2785402.html</guid><description><![CDATA[<p>在PHP开发过程中，如果希望从外部引入一个class，通常会使用include和require方法，去把定义这个class的文件包含进来。这个在小规模开发的时候，没什么大问题。但在大型的开发项目中，这么做会产生大量的require或者include方法调用，这样不因降低效率，而且使得代码难以维护，况且require_once的代价很大。</p>
<p>&nbsp;在PHP5之前，各个PHP框架如果要实现类的自动加载，一般都是按照某种约定自己实现一个遍历目录，自动加载所有符合约定规则的文件的类或函数。 当然，PHP5之前对面向对象的支持并不是太好，类的使用也没有现在频繁。 在PHP5后，当加载PHP类时，如果类所在文件没有被包含进来，或者类名出错，Zend引擎会自动调用__autoload 函数。此函数需要用户自己实现__autoload函数。 在PHP5.1.2版本后，可以使用spl_autoload_register函数自定义自动加载处理函数。当没有调用此函数，默认情况下会使用SPL自定义的spl_autoload函数。</p>
<p>&nbsp;</p>
<h3>&nbsp;__autoload示例：</h3>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> __autoload(<span style="color: #800080;">$class_name</span><span style="color: #000000;">) {  
   </span><span style="color: #0000ff;">echo</span> '__autload class:', <span style="color: #800080;">$class_name</span>, '&lt;br /&gt;'<span style="color: #000000;">;  
}  
  
</span><span style="color: #0000ff;">new</span> Demo();  </pre>
</div>
<p>以上的代码在最后会输出：__autload class:Demo。并在此之后报错显示： Fatal error: Class &lsquo;Demo&rsquo; not found</p>
<p>&nbsp;</p>
<p>我们一般使用_autoload自动加载类如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> __autoload(<span style="color: #800080;">$class_name</span><span style="color: #000000;">) {   
     </span><span style="color: #0000ff;">require_once</span> (<span style="color: #800080;">$class_name</span> . &ldquo;<span style="color: #0000ff;">class</span>.<span style="color: #000000;">php&rdquo;);   
}   
</span><span style="color: #800080;">$memo</span>= <span style="color: #0000ff;">new</span> Demo();　　  </pre>
</div>
<p>我们可以看出_autoload至少要做三件事情，第一件事是根据类名确定类文件名，第二件事是确定类文件所在的磁盘路径(在我们的例子是最简单的情况，类与调用它们的PHP程序文件在同一个文件夹下)，第三件事是将类从磁盘文件中加载到系统中。第三步最简单，只需要使用include/require即可。要实现第一步，第二步的功能，必须在开发时约定类名与磁盘文件的映射方法，只有这样我们才能根据类名找到它对应的磁盘文件。&nbsp;</p>
<p>因此，当有大量的类文件要包含的时候，我们只要确定相应的规则，然后在__autoload()函数中，将类名与实际的磁盘文件对应起来，就可以实现lazy loading的效果。从这里我们也可以看出__autoload()函数的实现中最重要的是类名与实际的磁盘文件映射规则的实现。&nbsp;</p>
<p>但现在问题来了，假如在一个系统的实现中，假如需要使用很多其它的类库，这些类库可能是由不同的开发工程师开发，其类名与实际的磁盘文件的映射规则不尽相同。这时假如要实现类库文件的自动加载，就必须在__autoload()函数中将所有的映射规则全部实现，因此__autoload()函数有可能会非常复杂，甚至无法实现。最后可能会导致__autoload()函数十分臃肿，这时即便能够实现，也会给将来的维护和系统效率带来很大的负面影响。在这种情况下，<span>在PHP5引入SPL标准库,一种新的解决方案，即spl_autoload_register()函数。</span></p>
<p>&nbsp;</p>
<h3><span><span><span>spl_autoload_register()函数</span></span><br /></span></h3>
<p>此函数的功能就是把函数注册至SPL的__autoload函数栈中，并移除系统默认的__autoload()函数。下面的例子可以看出：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> __autoload(<span style="color: #800080;">$class_name</span><span style="color: #000000;">) {  
    </span><span style="color: #0000ff;">echo</span> '__autload class:', <span style="color: #800080;">$class_name</span>, '&lt;br /&gt;'<span style="color: #000000;">;  
}  
</span><span style="color: #0000ff;">function</span> classLoader(<span style="color: #800080;">$class_name</span><span style="color: #000000;">) {  
    </span><span style="color: #0000ff;">echo</span> 'SPL load class:', <span style="color: #800080;">$class_name</span>, '&lt;br /&gt;'<span style="color: #000000;">;  
}  
spl_autoload_register(</span>'classLoader'<span style="color: #000000;">);  
</span><span style="color: #0000ff;">new</span> Test();<span style="color: #008000;">//</span><span style="color: #008000;">结果：SPL load class:Test  </span></pre>
</div>
<p>语法：bool&nbsp;&nbsp;spl_autoload_register&nbsp;( [callback $autoload_function] )接受两个参数：一个是添加到自动加载栈的函数，另外一个是加载器不能找到这个类时是否抛出异常的标志。第一个参数是可选的，并且默认指向spl_autoload()函数，这个函数会自动在路径中查找具有小写类名和.php扩展或者.ini扩展名，或者任何注册到spl_autoload_extensions()函数中的其它扩展名的文件。</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php    
</span><span style="color: #0000ff;">class</span><span style="color: #000000;"> CalssLoader     
{     
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">function</span> loader(<span style="color: #800080;">$classname</span><span style="color: #000000;">)     
    {     
        </span><span style="color: #800080;">$class_file</span> = <span style="color: #008080;">strtolower</span>(<span style="color: #800080;">$classname</span>).".php"<span style="color: #000000;">;     
        </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">file_exists</span>(<span style="color: #800080;">$class_file</span><span style="color: #000000;">)){     
            </span><span style="color: #0000ff;">require_once</span>(<span style="color: #800080;">$class_file</span><span style="color: #000000;">);     
        }     
    }     
}      
</span><span style="color: #008000;">//</span><span style="color: #008000;"> 方法为静态方法     </span>
spl_autoload_register('CalssLoader::loader'<span style="color: #000000;">);      
</span><span style="color: #800080;">$test</span> = <span style="color: #0000ff;">new</span> Test();  </pre>
</div>
<p>一旦调用spl_autoload_register()函数，当调用未定义类时，系统会按顺序调用注册到spl_autoload_register()函数的所有函数，而不是自动调用__autoload()函数。如果要避免这种情况，需采用一种更加安全的spl_autoload_register()函数的初始化调用方法：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span>(<span style="color: #0000ff;">false</span> ===<span style="color: #000000;"> spl_autoload_functions()){      
    </span><span style="color: #0000ff;">if</span>(<span style="color: #008080;">function_exists</span>('__autoload'<span style="color: #000000;">)){      
        spl_autoload_registe(</span>'__autoload',<span style="color: #0000ff;">false</span><span style="color: #000000;">);      
    }      
 }   </span></pre>
</div>
<p>spl_autoload_functions()函数会返回已注册函数的一个数组,如果SPL自动加载栈还没有被初始化,它会返回布尔值false。然后，检查是否有一个名为__autoload()的函数存在,如果存在，可以将它注册为自动加载栈中的第一个函数，从而保留它的功能。之后，可以继续注册自动加载函数。</p>
<p>还可以调用spl_autoload_register()函数以注册一个回调函数,而不是为函数提供一个字符串名称。如提供一个如array('class','method')这样的数组,使得可以使用某个对象的方法。</p>
<p>下一步，通过调用spl_autoload_call('className')函数，可以手动调用加载器，而不用尝试去使用那个类。这个函数可以和函数class_exists('className',false)组合在一起使用以尝试去加载一个类，并且在所有的自动加载器都不能找到那个类的情况下失败。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if </span>(spl_autoload_call('className') &amp;&amp; <span style="color: #008080;">class_exists</span>('className',<span style="color: #0000ff;">false</span><span style="color: #000000;">)){      
    // 存在
} </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {  <br />    // 不存在    
}     </span></pre>
</div>
<p>SPL自动加载功能是由spl_autoload() ,spl_autoload_register(), spl_autoload_functions() ,spl_autoload_extensions()和spl_autoload_call()函数提供的。</p>
<p>&nbsp;</p>
<p>原文地址：<a href="http://blog.csdn.net/hguisu/article/details/7463333" target="_blank">http://blog.csdn.net/hguisu/article/details/7463333</a></p>]]></description></item><item><title>PHP检查键值是否存在</title><link>http://www.cnblogs.com/eastson/archive/2012/11/07/2758549.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 07 Nov 2012 06:03:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/07/2758549.html</guid><description><![CDATA[<p>今天使用isset()函数检查一个数组中某个键值是否存在，发现一个问题。</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$info</span>['page'] = <span style="color: #0000ff;">null</span><span style="color: #000000;">;

</span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>['page'<span style="color: #000000;">])) {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 存在</span>
} <span style="color: #0000ff;">else</span><span style="color: #000000;"> {
    </span><span style="color: #008000;">//</span><span style="color: #008000;"> 不存在</span>
}</pre>
</div>
<p>代码执行的结果居然是不存在。后来换成array_key_exists()就可以了。</p>
<p>&nbsp;</p>
<p>因而，对PHP的isset()使用方法有了一些怀疑，下面是一段测试代码：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">$info</span>['page'] = <span style="color: #0000ff;">null</span>; c('null'<span style="color: #000000;">);
</span><span style="color: #800080;">$info</span>['page'] = 0; c('zero'<span style="color: #000000;">);
</span><span style="color: #800080;">$info</span>['page'] = <span style="color: #0000ff;">false</span>; c('false'<span style="color: #000000;">);

</span><span style="color: #0000ff;">function</span> c(<span style="color: #800080;">$value</span><span style="color: #000000;">)
{
    </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$info</span><span style="color: #000000;">;
    </span><span style="color: #800080;">$key</span> = 'page'<span style="color: #000000;">;

    </span><span style="color: #800080;">$result</span> = <span style="color: #800080;">$value</span> . ':'<span style="color: #000000;">;
    </span><span style="color: #800080;">$result</span> .= (<span style="color: #0000ff;">true</span> === <span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$info</span>[<span style="color: #800080;">$key</span>]) ? '1' : '0'<span style="color: #000000;">);
    </span><span style="color: #800080;">$result</span> .= (<span style="color: #0000ff;">true</span> === <span style="color: #008080;">array_key_exists</span>(<span style="color: #800080;">$key</span>, <span style="color: #800080;">$info</span>) ? '1' : '0'<span style="color: #000000;">);
    </span><span style="color: #800080;">$result</span> .= (<span style="color: #0000ff;">true</span> === <span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$info</span>[<span style="color: #800080;">$key</span>]) ? '1' : '0'<span style="color: #000000;">);

    </span><span style="color: #0000ff;">echo</span> <span style="color: #800080;">$result</span> . "\n"<span style="color: #000000;">;
}

</span><span style="color: #0000ff;">exit</span>;</pre>
</div>
<p>执行结果：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">null</span>:011<span style="color: #000000;">
zero</span>:111
<span style="color: #0000ff;">false</span>:111</pre>
</div>
<p>&nbsp;</p>
<p>总结：<em><strong>检查数组是否存在某个$key，使用array_key_exists($key, $array)；检查对象是否存在某个$key，使用isset($object-&gt;$key)。</strong></em></p>]]></description></item><item><title>elFinder - Web文件管理器</title><link>http://www.cnblogs.com/eastson/archive/2012/11/06/2756462.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 06 Nov 2012 02:20:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/06/2756462.html</guid><description><![CDATA[<p><a href="http://elfinder.org/" target="_blank">elFinder</a> 是一个基于 Web 的文件管理器，灵感来自 Mac OS X 的 Finder 程序。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012110610190866.png" alt="" /></p>]]></description></item><item><title>KCFinder - CKEditor的文件管理器插件</title><link>http://www.cnblogs.com/eastson/archive/2012/11/05/2755404.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 05 Nov 2012 08:34:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/05/2755404.html</guid><description><![CDATA[<p><a href="http://kcfinder.sunhater.com/" target="_blank">KCFinder</a> 跟&nbsp;<a href="http://ckfinder.com/">CKFinder</a>&nbsp;类似，是&nbsp;<a href="http://ckeditor.com/">CKEditor</a>&nbsp;的一个开源文件管理器插件，通过该插件可上传和对包括图片、Flash动画以及其他文件进行你个浏览和管理。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012110516330631.jpg" alt="" /></p>]]></description></item><item><title>CKFinder - Ajax文件管理器</title><link>http://www.cnblogs.com/eastson/archive/2012/11/05/2755248.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 05 Nov 2012 07:41:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/05/2755248.html</guid><description><![CDATA[<p><a href="http://ckfinder.com/" target="_blank">CKFinder</a>&nbsp;是一个易于使用的Ajax文件管理器。提供文件夹树形结构（Folders tree）导航菜单，多语言支持（自动探测用），支持创建/重命名/删除文件和文件夹，集成&nbsp;<a href="http://ckeditor.com/" target="_blank">CKEditor</a> 在线编辑器。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012110515390174.gif" alt="" /></p>]]></description></item><item><title>Ubuntu 12.04如何登入root?</title><link>http://www.cnblogs.com/eastson/archive/2012/11/02/2751086.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 02 Nov 2012 05:22:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/11/02/2751086.html</guid><description><![CDATA[<p>用通常的su -方式是不行的：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">su</span> -<span style="color: #000000;">
Password: *****
</span><span style="color: #0000ff;">su</span>: Authentication failure</pre>
</div>
<p>&nbsp;</p>
<p>换成sudo -s就可以了：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">sudo</span> -<span style="color: #000000;">s
[</span><span style="color: #0000ff;">sudo</span>] password <span style="color: #0000ff;">for</span><span style="color: #000000;"> amonest: 
# </span><span style="color: #0000ff;">whoami</span>  <span style="color: #008000;">//已经</span><span style="color: #008000;">变成了root提示符</span>
root</pre>
</div>]]></description></item><item><title>JavaScript常用资料参考</title><link>http://www.cnblogs.com/eastson/archive/2012/10/31/2747712.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 31 Oct 2012 03:16:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/31/2747712.html</guid><description><![CDATA[<p>JavaScript Dom API文档（来源MSDN）：</p>
<p><a href="http://msdn.microsoft.com/en-us/library/hh801253(v=vs.85).aspx" target="_blank">Events</a>&nbsp;| <a href="http://msdn.microsoft.com/en-us/library/hh772148(v=vs.85).aspx" target="_blank">Objects</a>&nbsp;| <a href="http://msdn.microsoft.com/en-us/library/ms535862(v=vs.85).aspx" target="_blank">document</a>&nbsp;| <a href="http://msdn.microsoft.com/en-us/library/ms535864(v=vs.85).aspx" target="_blank">history</a>&nbsp;| <a href="http://msdn.microsoft.com/en-us/library/ms535866(v=vs.85).aspx" target="_blank">location</a>&nbsp;| <a href="http://msdn.microsoft.com/en-us/library/ms535867(v=vs.85).aspx" target="_blank">navigator</a>&nbsp;| <a href="http://msdn.microsoft.com/en-us/library/ms535873(v=vs.85).aspx" target="_blank">window</a></p>
<p>&nbsp;</p>
<p><a href="https://developer.mozilla.org/en-US/">Mozilla Developer Network</a></p>]]></description></item><item><title>javascript中的keydown事件中的参数问题</title><link>http://www.cnblogs.com/eastson/archive/2012/10/31/2747692.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 31 Oct 2012 03:06:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/31/2747692.html</guid><description><![CDATA[<p>在一HTML文件有如下声明：&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">body </span><span style="color: #ff0000;">scroll</span><span style="color: #0000ff;">="no"</span><span style="color: #ff0000;"> onKeyDown</span><span style="color: #0000ff;">="KeyDown(event)"</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;"> 
function KeyDown(event) { 
    if (event.keyCode == 13) {  
        event.returnValue = false; //事件的返回值为false,即取消事件处理 
        event.cancel = true; //事件的返回值为false,即取消事件处理 
        login_process();//验证处理 
    } 
}</span></pre>
</div>
<p>&nbsp;</p>
<p>参考连接：</p>
<ul>
<li><a href="http://www.webonweboff.com/tips/js/event_key_codes.aspx" target="_blank">JavaScript Event Key Codes</a>&nbsp;(<span>如果要使用组合键，则可以利用event.ctrlKey，event.shiftKey，event .altKey判断是否按下了ctrl键、shift键以及alt键</span>)</li>
<li><a href="http://help.dottoro.com/ljogqtqm.php" target="_blank">JavaScript Event object</a></li>
<li><a href="http://help.dottoro.com/ljqqripa.php" target="_blank">JavaScript keyCode property</a></li>
<li><a href="http://msdn.microsoft.com/en-us/library/ms533927(VS.85).aspx" target="_blank">MSDN keycode Property</a></li>
</ul>]]></description></item><item><title>用TcpTrace调试Web服务器</title><link>http://www.cnblogs.com/eastson/archive/2012/10/22/2733920.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 22 Oct 2012 06:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/22/2733920.html</guid><description><![CDATA[<p><span>TcpTrace是一个可以用来调试Web服务器和客户端之间通信的优秀工具。</span><br /><br /><span>主要的配置项介绍</span><br /><span>Listen&nbsp;on&nbsp;Port&nbsp;：本机监听的端口，后面请求服务时使用；</span><br /><span>Destination&nbsp;Server&nbsp;：目标服务器的地址</span><br /><span>Destination&nbsp;Port&nbsp;：目标端口</span><br /><br /><span>例如：如果你的服务器是www.nextphp.com，端口是80，可以这样设置：</span><br /><span>Listen&nbsp;on&nbsp;Port&nbsp;：9901，其它任意都可以，只要不重复。</span><br /><span>Destination&nbsp;Server&nbsp;：www.nextphp.com</span><br /><span>Destination&nbsp;Port&nbsp;：80</span><br /><br /><span>然后确定，TcpTrace就可以跑起来了。</span></p>]]></description></item><item><title>幸福法则</title><link>http://www.cnblogs.com/eastson/archive/2012/10/22/2733919.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 22 Oct 2012 06:52:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/22/2733919.html</guid><description><![CDATA[<p><span>幸福不是开多豪华的车，</span><br /><span>而是开着车平安回家；</span><br /><br /><span>幸福不是房子有多大，</span><br /><span>而是房里的笑声有多甜；</span><br /><br /><span>幸福不是爱人多漂亮，</span><br /><span>而是爱人的笑容有多灿烂；</span><br /><br /><span>幸福不是成功时的喝彩多热烈，</span><br /><span>而是失意时有个声音对你说：加油。</span></p>]]></description></item><item><title>去除UTF-8 BOM【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/10/22/2733913.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 22 Oct 2012 06:51:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/22/2733913.html</guid><description><![CDATA[<p><span>utf8的编码有no&nbsp;bom&nbsp;&amp;&nbsp;bom&nbsp;区分。</span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php   

</span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$_GET</span>['dir'])){ <span style="color: #008000;">//</span><span style="color: #008000;">config the basedir   </span>
    <span style="color: #800080;">$basedir</span>=<span style="color: #800080;">$_GET</span>['dir'<span style="color: #000000;">];   
}</span><span style="color: #0000ff;">else</span><span style="color: #000000;">{   
    </span><span style="color: #800080;">$basedir</span> = '.'<span style="color: #000000;">;   
}  
  
</span><span style="color: #800080;">$auto</span> = 1<span style="color: #000000;">;  
   
checkdir(</span><span style="color: #800080;">$basedir</span><span style="color: #000000;">);  

</span><span style="color: #0000ff;">function</span> checkdir(<span style="color: #800080;">$basedir</span><span style="color: #000000;">){   
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$dh</span> = <span style="color: #008080;">opendir</span>(<span style="color: #800080;">$basedir</span><span style="color: #000000;">)) {   
        </span><span style="color: #0000ff;">while</span> ((<span style="color: #800080;">$file</span> = <span style="color: #008080;">readdir</span>(<span style="color: #800080;">$dh</span>)) !== <span style="color: #0000ff;">false</span><span style="color: #000000;">) {   
            </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$file</span> != '.' &amp;&amp; <span style="color: #800080;">$file</span> != '..'<span style="color: #000000;">){   
                </span><span style="color: #0000ff;">if</span> (!<span style="color: #008080;">is_dir</span>(<span style="color: #800080;">$basedir</span>."/".<span style="color: #800080;">$file</span><span style="color: #000000;">)) {   
                    </span><span style="color: #0000ff;">echo</span> "filename: <span style="color: #800080;">$basedir</span>/<span style="color: #800080;">$file</span>".checkBOM("<span style="color: #800080;">$basedir</span>/<span style="color: #800080;">$file</span>")."&lt;br&gt;"<span style="color: #000000;">;   
                }</span><span style="color: #0000ff;">else</span><span style="color: #000000;">{   
                    </span><span style="color: #800080;">$dirname</span> = <span style="color: #800080;">$basedir</span>."/".<span style="color: #800080;">$file</span><span style="color: #000000;">;   
                    checkdir(</span><span style="color: #800080;">$dirname</span><span style="color: #000000;">);   
                }   
            }   
        }   
    </span><span style="color: #008080;">closedir</span>(<span style="color: #800080;">$dh</span><span style="color: #000000;">);   
    }   
}  

</span><span style="color: #0000ff;">function</span> checkBOM (<span style="color: #800080;">$filename</span><span style="color: #000000;">) {   
    </span><span style="color: #0000ff;">global</span> <span style="color: #800080;">$auto</span><span style="color: #000000;">;   
    </span><span style="color: #800080;">$contents</span> = <span style="color: #008080;">file_get_contents</span>(<span style="color: #800080;">$filename</span><span style="color: #000000;">);   
    </span><span style="color: #800080;">$charset</span>[1] = <span style="color: #008080;">substr</span>(<span style="color: #800080;">$contents</span>, 0, 1<span style="color: #000000;">);   
    </span><span style="color: #800080;">$charset</span>[2] = <span style="color: #008080;">substr</span>(<span style="color: #800080;">$contents</span>, 1, 1<span style="color: #000000;">);   
    </span><span style="color: #800080;">$charset</span>[3] = <span style="color: #008080;">substr</span>(<span style="color: #800080;">$contents</span>, 2, 1<span style="color: #000000;">);   

    </span><span style="color: #0000ff;">if</span> (<span style="color: #008080;">ord</span>(<span style="color: #800080;">$charset</span>[1]) == 239 &amp;&amp; <span style="color: #008080;">ord</span>(<span style="color: #800080;">$charset</span>[2]) == 187 &amp;&amp;<span style="color: #008080;">ord</span>(<span style="color: #800080;">$charset</span>[3]) == 191<span style="color: #000000;">) {   
        </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$auto</span> == 1<span style="color: #000000;">) {   
            </span><span style="color: #800080;">$rest</span> = <span style="color: #008080;">substr</span>(<span style="color: #800080;">$contents</span>, 3<span style="color: #000000;">);   
            rewrite (</span><span style="color: #800080;">$filename</span>, <span style="color: #800080;">$rest</span><span style="color: #000000;">);   
            </span><span style="color: #0000ff;">return</span> ("&lt;font color=red&gt;BOM found,automatically removed.&lt;/font&gt;"<span style="color: #000000;">);   
        } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {   
            </span><span style="color: #0000ff;">return</span> ("&lt;font color=red&gt;BOM found.&lt;/font&gt;"<span style="color: #000000;">);   
        }   
    }   
    </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">return</span> ("BOM Not Found."<span style="color: #000000;">);   
}  

</span><span style="color: #0000ff;">function</span> rewrite (<span style="color: #800080;">$filename</span>, <span style="color: #800080;">$data</span><span style="color: #000000;">) {   
    </span><span style="color: #800080;">$filenum</span> = <span style="color: #008080;">fopen</span>(<span style="color: #800080;">$filename</span>, "w"<span style="color: #000000;">);   
    </span><span style="color: #008080;">flock</span>(<span style="color: #800080;">$filenum</span>,<span style="color: #000000;"> LOCK_EX);   
    </span><span style="color: #008080;">fwrite</span>(<span style="color: #800080;">$filenum</span>, <span style="color: #800080;">$data</span><span style="color: #000000;">);   
    </span><span style="color: #008080;">fclose</span>(<span style="color: #800080;">$filenum</span><span style="color: #000000;">);   
}   

</span>?&gt; </pre>
</div>]]></description></item><item><title>直接用Telnet发送SMTP邮件</title><link>http://www.cnblogs.com/eastson/archive/2012/10/22/2733916.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 22 Oct 2012 06:51:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/22/2733916.html</guid><description><![CDATA[<p><span>C:\Windows&gt;Telnet</span><br /><br /><span>Microsoft&nbsp;Telnet&gt;open&nbsp;10.103.1.4&nbsp;25</span><br /><span>220&nbsp;xxx.com.cn&nbsp;Microsoft&nbsp;ESMTP&nbsp;MAIL&nbsp;Service,&nbsp;Version:&nbsp;6.0.3790.3959&nbsp;ready&nbsp;at&nbsp;&nbsp;Fri,&nbsp;21&nbsp;Oct&nbsp;2011&nbsp;12:50:04&nbsp;+0800</span><br /><br /><span>EHLO</span><br /><span>250-xxx.com.cn&nbsp;Hello&nbsp;[10.103.4.57]</span><br /><span>250-TURN</span><br /><span>250-SIZE</span><br /><span>250-ETRN</span><br /><span>250-PIPELINING</span><br /><span>250-DSN</span><br /><span>250-ENHANCEDSTATUSCODES</span><br /><span>250-8bitmime</span><br /><span>250-BINARYMIME</span><br /><span>250-CHUNKING</span><br /><span>250-VRFY</span><br /><span>250-X-EXPS&nbsp;GSSAPI&nbsp;NTLM&nbsp;LOGIN</span><br /><span>250-X-EXPS=LOGIN</span><br /><span>250-AUTH&nbsp;GSSAPI&nbsp;NTLM&nbsp;LOGIN</span><br /><span>250-AUTH=LOGIN</span><br /><span>250-X-LINK2STATE</span><br /><span>250-XEXCH50</span><br /><span>250&nbsp;OK</span><br /><br /><span>AUTH&nbsp;LOGIN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br /><span>334&nbsp;VXNlcm5hbWU6</span><br /><br /><span>d3FlcnA=&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;用户名，用base64编码</span><br /><span>334&nbsp;UGFzc3dvcmQ6</span><br /><br /><span>d3FlcnAxMjM=&nbsp;//密码，用base64编码</span><br /><span>235&nbsp;2.7.0&nbsp;Authentication&nbsp;successful.</span><br /><br /><span>MAIL&nbsp;FROM:&nbsp;&lt;xxx@xxx.com.cn&gt;&nbsp;//邮件发送地址</span><br /><span>250&nbsp;2.1.0&nbsp;xxx@xxx.com.cn....Sender&nbsp;OK</span><br /><br /><span>RCPT&nbsp;TO:&lt;xxx@xxx.com.cn&gt;&nbsp;//邮件接收地址</span><br /><span>250&nbsp;2.1.5&nbsp;xxx@xxx.com.cn</span><br /><br /><span>DATA&nbsp;//邮件内容</span><br /><span>354&nbsp;Start&nbsp;mail&nbsp;input;&nbsp;end&nbsp;with&nbsp;&lt;CRLF&gt;.&lt;CRLF&gt;</span><br /><span>This&nbsp;is&nbsp;a&nbsp;smtp&nbsp;mail.</span><br /><span>.</span><br /><br /><span>250&nbsp;2.6.0&nbsp;&lt;WQMS01HIUv9nDqUV4qU000009e6@xxxcom.cn&gt;&nbsp;Queued&nbsp;mail&nbsp;for&nbsp;delivery</span><br /><br /><span>QUIT</span><br /><br /><span>Microsoft&nbsp;Telnet&gt;&nbsp;close</span><br /><span>Microsoft&nbsp;Telnet&gt;&nbsp;quit</span></p>]]></description></item><item><title>UTF Byte Order Mark (BOM) FAQ</title><link>http://www.cnblogs.com/eastson/archive/2012/10/22/2733910.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 22 Oct 2012 06:49:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/22/2733910.html</guid><description><![CDATA[<p><span>UTF-8以字节为编码单元，没有字节序的问题。UTF-16以两个字节为编码单元，在解释一个UTF-16文本前，首先要弄清楚每个编码单元的字节序。例如收到一个&ldquo;奎&rdquo;的Unicode编码是594E，&ldquo;乙&rdquo;的Unicode编码是4E59。如果我们收到UTF-16字节流&ldquo;594E&rdquo;，那么这是&ldquo;奎&rdquo;还是&ldquo;乙&rdquo;？</span><br /><br /><span>Unicode规范中推荐的标记字节顺序的方法是BOM。BOM不是&ldquo;Bill&nbsp;Of&nbsp;Material&rdquo;的BOM表，而是Byte&nbsp;Order&nbsp;Mark。</span><br /><br /><span>在UCS编码中有一个叫做"ZERO&nbsp;WIDTH&nbsp;NO-BREAK&nbsp;SPACE"的字符，它的编码是FEFF。而FFFE在UCS中是不存在的字符，所以不应该出现在实际传输中。</span><br /><br /><span>UCS规范建议我们在传输字节流前，先传输字符"ZERO&nbsp;WIDTH&nbsp;NO-BREAK&nbsp;SPACE"。这样如果接收者收到FEFF，就表明这个字节流是Big-Endian的；如果收到FFFE，就表明这个字节流是Little-Endian的。因此字符"ZERO&nbsp;WIDTH&nbsp;NO-BREAK&nbsp;SPACE"又被称作BOM。</span><br /><br /><span>UTF-8不需要BOM来表明字节顺序，但可以用BOM来表明编码方式。字符"ZERO&nbsp;WIDTH&nbsp;NO-BREAK&nbsp;SPACE"的UTF-8编码是EF&nbsp;BB&nbsp;BF。所以如果接收者收到以EF&nbsp;BB&nbsp;BF开头的字节流，就知道这是UTF-8编码了。</span></p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">Bytes                Encoding Form 
00 00 FE FF          UTF-32, big-endian 
FF FE 00 00          UTF-32, little-endian 
FE FF                UTF-16, big-endian 
FF FE                UTF-16, little-endian 
EF BB BF             UTF-8</span></pre>
</div>
<p>&nbsp;</p>
<p><a href="http://blog.sina.com.cn/s/blog_3e9d2b350100as0b.html" target="_blank">http://blog.sina.com.cn/s/blog_3e9d2b350100as0b.html</a><br /><a href="http://www.jb51.net/article/9794.htm" target="_blank">http://www.jb51.net/article/9794.htm</a></p>]]></description></item><item><title>Chinese Character Codes</title><link>http://www.cnblogs.com/eastson/archive/2012/10/22/2733907.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 22 Oct 2012 06:47:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/22/2733907.html</guid><description><![CDATA[<p><a href="http://www.khngai.com/chinese/charmap/" target="_blank">http://www.khngai.com/chinese/charmap/</a><br /><br /><span>What&nbsp;make&nbsp;this&nbsp;world&nbsp;extremely&nbsp;interesting&nbsp;is&nbsp;the&nbsp;variety&nbsp;of&nbsp;standards.&nbsp;Nobody&nbsp;seems&nbsp;to&nbsp;agree&nbsp;to&nbsp;settle&nbsp;with&nbsp;a&nbsp;unified&nbsp;way&nbsp;of&nbsp;doing&nbsp;things.&nbsp;We&nbsp;can&nbsp;see&nbsp;this&nbsp;from&nbsp;the&nbsp;languages&nbsp;that&nbsp;we&nbsp;speak,&nbsp;the&nbsp;food&nbsp;we&nbsp;eat,&nbsp;the&nbsp;houses&nbsp;that&nbsp;we&nbsp;build&nbsp;and&nbsp;a&nbsp;lot&nbsp;of&nbsp;other&nbsp;example.&nbsp;</span><br /><span>There&nbsp;are&nbsp;a&nbsp;few&nbsp;ways&nbsp;of&nbsp;representing&nbsp;Chinese&nbsp;characters&nbsp;in&nbsp;computer.&nbsp;The&nbsp;following&nbsp;is&nbsp;a&nbsp;list&nbsp;of&nbsp;existing&nbsp;standards.&nbsp;I&nbsp;have&nbsp;tabulated&nbsp;the&nbsp;Chinese&nbsp;codes&nbsp;for&nbsp;easy&nbsp;referencing.&nbsp;</span><br /><br /><strong><a href="http://www.khngai.com/chinese/charmap/tbluni.php?page=0" target="_blank">Unicode</a>&nbsp;</strong><br /><span>This&nbsp;encoding&nbsp;characters&nbsp;has&nbsp;defined&nbsp;20902&nbsp;CJK&nbsp;characters.&nbsp;The&nbsp;advantage&nbsp;of&nbsp;using&nbsp;this&nbsp;standard&nbsp;is&nbsp;that&nbsp;you&nbsp;can&nbsp;display&nbsp;Simplified&nbsp;Chinese&nbsp;characters,&nbsp;Traditional&nbsp;Chinese&nbsp;characters,&nbsp;Korean&nbsp;characters&nbsp;and&nbsp;Japanese&nbsp;characters&nbsp;on&nbsp;the&nbsp;same&nbsp;HTML&nbsp;page.&nbsp;No&nbsp;other&nbsp;encoding&nbsp;standards&nbsp;is&nbsp;supporting&nbsp;that&nbsp;for&nbsp;the&nbsp;moment.&nbsp;</span><br /><br /><strong><a href="http://www.khngai.com/chinese/charmap/tblgb.php?page=0" target="_blank">GB&nbsp;Code&nbsp;</a></strong><br /><span>GB&nbsp;(Guo&nbsp;Biao)&nbsp;Code&nbsp;is&nbsp;defined&nbsp;by&nbsp;China.&nbsp;It&nbsp;is&nbsp;the&nbsp;encoding&nbsp;standard&nbsp;used&nbsp;to&nbsp;represent&nbsp;Simplified&nbsp;Chinese&nbsp;characters.&nbsp;It&nbsp;has&nbsp;defined&nbsp;about&nbsp;6763&nbsp;Chinese&nbsp;characters&nbsp;(excluding&nbsp;all&nbsp;symbols).&nbsp;Countries&nbsp;such&nbsp;as&nbsp;China,&nbsp;Singapore&nbsp;and&nbsp;Malaysia&nbsp;are&nbsp;using&nbsp;this&nbsp;encoding&nbsp;standard.&nbsp;</span><br /><span>Every&nbsp;Chinese&nbsp;character&nbsp;is&nbsp;represeneted&nbsp;by&nbsp;a&nbsp;two&nbsp;byte&nbsp;code.&nbsp;The&nbsp;MSB&nbsp;of&nbsp;both&nbsp;the&nbsp;first&nbsp;and&nbsp;second&nbsp;bytes&nbsp;are&nbsp;set.&nbsp;Thus,&nbsp;they&nbsp;can&nbsp;be&nbsp;easily&nbsp;identified&nbsp;from&nbsp;documents&nbsp;that&nbsp;contain&nbsp;both&nbsp;GB&nbsp;characters&nbsp;and&nbsp;regular&nbsp;ASCII&nbsp;characters.&nbsp;</span><br /><br /><strong><a href="http://www.khngai.com/chinese/charmap/tblgbk.php?page=0" target="_blank">GBK&nbsp;Code&nbsp;</a></strong><br /><span>The&nbsp;Chinese&nbsp;authority&nbsp;soon&nbsp;realized&nbsp;that&nbsp;it&nbsp;cannot&nbsp;ignore&nbsp;the&nbsp;traditional&nbsp;Chinese&nbsp;characters.&nbsp;Thus,&nbsp;it&nbsp;had&nbsp;defined&nbsp;GBK&nbsp;(Guo&nbsp;Biao&nbsp;Kuozhan)&nbsp;to&nbsp;include&nbsp;all&nbsp;the&nbsp;traditional&nbsp;Chinese&nbsp;characters&nbsp;defined&nbsp;in&nbsp;Big&nbsp;5.&nbsp;It&nbsp;claims&nbsp;that&nbsp;GBK&nbsp;is&nbsp;synchronized&nbsp;with&nbsp;Unicode&nbsp;standard,&nbsp;version&nbsp;1.1.&nbsp;</span><br /><br /><strong><a href="http://www.khngai.com/chinese/charmap/tblbig.php?page=0" target="_blank">Big&nbsp;5&nbsp;Code</a>&nbsp;</strong><br /><span>Big&nbsp;5&nbsp;is&nbsp;the&nbsp;character&nbsp;encoding&nbsp;standard&nbsp;most&nbsp;commonly&nbsp;used&nbsp;for&nbsp;traditional&nbsp;Chinese&nbsp;characters.&nbsp;Regions&nbsp;/&nbsp;countries&nbsp;such&nbsp;as&nbsp;Taiwan,&nbsp;Hong&nbsp;Kong&nbsp;and&nbsp;Malaysia&nbsp;are&nbsp;using&nbsp;this&nbsp;encoding&nbsp;standard.&nbsp;</span><br /><span>Every&nbsp;Chinese&nbsp;Character&nbsp;is&nbsp;represented&nbsp;by&nbsp;a&nbsp;two&nbsp;byte&nbsp;code.&nbsp;The&nbsp;first&nbsp;byte&nbsp;ranges&nbsp;from&nbsp;0xA1&nbsp;to&nbsp;0xF9,&nbsp;while&nbsp;the&nbsp;second&nbsp;byte&nbsp;ranges&nbsp;from&nbsp;0x40&nbsp;to&nbsp;0x7E,&nbsp;0xA1&nbsp;to&nbsp;0xFE.&nbsp;</span><br /><span>Note&nbsp;that&nbsp;the&nbsp;MSB&nbsp;of&nbsp;the&nbsp;two&nbsp;byte&nbsp;code&nbsp;is&nbsp;always&nbsp;set.&nbsp;Thus,&nbsp;in&nbsp;a&nbsp;document&nbsp;that&nbsp;contain&nbsp;Chinese&nbsp;characters&nbsp;and&nbsp;regular&nbsp;ASCII&nbsp;characters,&nbsp;the&nbsp;ASCII&nbsp;characters&nbsp;are&nbsp;still&nbsp;represented&nbsp;with&nbsp;a&nbsp;single&nbsp;byte.&nbsp;</span><br /><br /><strong><a href="http://www.khngai.com/chinese/charmap/tblcns.php?page=0" target="_blank">CNS-11643-1992</a>&nbsp;</strong><br /><span>CNS-11643-1992&nbsp;is&nbsp;sometimes&nbsp;refered&nbsp;to&nbsp;as&nbsp;Chinese&nbsp;Standard&nbsp;Interchange&nbsp;Code.&nbsp;It&nbsp;is&nbsp;a&nbsp;Chinese&nbsp;character&nbsp;encoding&nbsp;standard&nbsp;defined&nbsp;by&nbsp;Taiwan&nbsp;in&nbsp;1992.&nbsp;It&nbsp;has&nbsp;16&nbsp;planes.&nbsp;Each&nbsp;plane&nbsp;contains&nbsp;94*94&nbsp;=&nbsp;8836&nbsp;locations.&nbsp;Each&nbsp;location&nbsp;is&nbsp;supposed&nbsp;to&nbsp;be&nbsp;filled&nbsp;with&nbsp;a&nbsp;Chinese&nbsp;character.&nbsp;However,&nbsp;a&nbsp;lot&nbsp;of&nbsp;the&nbsp;locations&nbsp;are&nbsp;left&nbsp;blank.&nbsp;</span><br /><span>Every&nbsp;Chinese&nbsp;character&nbsp;is&nbsp;represented&nbsp;with&nbsp;two&nbsp;7&nbsp;bit&nbsp;ASCII&nbsp;codes.&nbsp;Each&nbsp;7&nbsp;bit&nbsp;is&nbsp;a&nbsp;printable&nbsp;ASCII&nbsp;character&nbsp;ranging&nbsp;from&nbsp;0x21&nbsp;to&nbsp;0x7E.&nbsp;This&nbsp;implies&nbsp;the&nbsp;first&nbsp;character&nbsp;is&nbsp;every&nbsp;plane&nbsp;starts&nbsp;with&nbsp;code&nbsp;0x2121.&nbsp;</span><br /><span>This&nbsp;encoding&nbsp;standard&nbsp;encompases&nbsp;much&nbsp;more&nbsp;characters&nbsp;than&nbsp;Unicode,&nbsp;GB&nbsp;or&nbsp;Big&nbsp;5.&nbsp;A&nbsp;lot&nbsp;of&nbsp;characters&nbsp;are&nbsp;very&nbsp;rarely&nbsp;used.&nbsp;However,&nbsp;this&nbsp;encoding&nbsp;scheme&nbsp;is&nbsp;less&nbsp;popular&nbsp;than&nbsp;Big&nbsp;5.&nbsp;This&nbsp;encoding&nbsp;scheme&nbsp;is&nbsp;used&nbsp;in&nbsp;the&nbsp;Chinese&nbsp;paging&nbsp;(pagers,&nbsp;beepers)&nbsp;industry.&nbsp;However,&nbsp;the&nbsp;paging&nbsp;industry&nbsp;uses&nbsp;only&nbsp;the&nbsp;first&nbsp;plane&nbsp;due&nbsp;to&nbsp;memory&nbsp;constraints&nbsp;in&nbsp;such&nbsp;devices.&nbsp;</span><br /><span>Since&nbsp;the&nbsp;characters&nbsp;in&nbsp;different&nbsp;plane&nbsp;may&nbsp;have&nbsp;the&nbsp;same&nbsp;coding,&nbsp;escape&nbsp;sequence&nbsp;is&nbsp;necessary&nbsp;to&nbsp;switch&nbsp;between&nbsp;character&nbsp;planes.</span><br /><br /><a href="http://bm.kdd.cc/index.asp" target="_blank">快典网查询汉字内码</a></p>]]></description></item><item><title>Apache服务器二级域名的完美实现[转]</title><link>http://www.cnblogs.com/eastson/archive/2012/10/22/2733899.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 22 Oct 2012 06:46:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/22/2733899.html</guid><description><![CDATA[<p><span>首先，您的拥有一个有泛域名解析的顶级域名，例如：&nbsp;domain.com</span><br /><br /><span>其次，在&nbsp;httpd.conf&nbsp;中打开&nbsp;mod_rewrite&nbsp;之后，在&nbsp;httpd.conf&nbsp;的最后，添加以下内容：&nbsp;</span></p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">RewriteEngine on
RewriteMap lowercase int:tolower
RewriteMap vhost txt:/usr/local/etc/apache/vhost.map
RewriteCond ${lowercase:%{SERVER_NAME}} ^(. )$
RewriteCond ${vhost:%1} ^(/.*)$
RewriteRule ^/(.*)$ %1/$1</span></pre>
</div>
<p>其中的&nbsp;/usr/local/etc/apache&nbsp;是您的&nbsp;apache&nbsp;服务器配置文档所在路径，根据实际情况更改。<br /><br /><span>然后，在这个所在路径的目录下创建一个文档vhost.map，</span><span>内容为：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">www.domain.com /usr/local/www/data-dist/domain
bbs.domain.com /usr/local/www/data-dist/bbs
anyname.domain.com /usr/local/www/data-dist/anyname</span></pre>
</div>
<p>以上部分都是：&rdquo;&nbsp;域名&nbsp;空格&nbsp;绝对路径&rdquo;&nbsp;的形式。</p>
<p><br /><span>最后，在您的网站根目录&nbsp;/usr/local/www/data-dist&nbsp;下，创建对应目录：</span><br /><span>domain&nbsp;,&nbsp;bbs&nbsp;,&nbsp;anyname&nbsp;等等，理论上能够无限。</span><br /><br /><span>这样，通过浏览器，访问&nbsp;www.domain.com&nbsp;时，实际上访问的就是&nbsp;/usr/local/www/data-dist/domain目录下的文档。同理，访问bbs.domain.com&nbsp;实际上访问的就是&nbsp;/usr/local/www/data-dist/bbs&nbsp;目录下的文档。而且，您能够随时更改&nbsp;vhost.map&nbsp;来增加、删除、修改您的二级域名和所指向的实际路径，不用重启&nbsp;apache。</span></p>]]></description></item><item><title>PowerBuilder嵌入浏览器</title><link>http://www.cnblogs.com/eastson/archive/2012/10/22/2733894.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 22 Oct 2012 06:44:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/22/2733894.html</guid><description><![CDATA[<p><span>公司最近计划搞一个报表服务器，用FineReport作为后台Web&nbsp;Server，浏览器作为客户端。</span><br /><br /><span>公司的ERP是使用PowerBuilder&nbsp;9.0开发的，为了实现在ERP中集成FineReport，想到了在PowerBuilder中嵌入IE控件的处理方式。</span><br /><br /><span>在网上搜到下面代码：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">Integer result
oleobject objExplorer

objExplorer = CREATE oleobject
result = objExplorer.ConnectToNewObject( "InternetExplorer.Application")
IF result = 0 THEN
    objExplorer.Navigate("about:blank")
    objExplorer.ToolBar = 0
    objExplorer.StatusBar = 0
    objExplorer.Width = 300
    objExplorer.Height = 150
    objExplorer.Left = 0
    objExplorer.Top = 0
    objExplorer.Visible = 1
END IF</span></pre>
</div>
<p>上面的代码可以实现在PB里面打开一个浏览器窗口，不过这个窗口是另外开的，没有嵌入到PB中。</p>
<p><br /><span>修改一下：</span><br /><span>1.&nbsp;插入一个OLE对象Microsoft&nbsp;Web&nbsp;Browser，命名为ole_1。</span><br /><span>2.&nbsp;写一段代码：ole_1.object.Navigate("http://www.baidu.com")。</span><br /><span>3.&nbsp;运行程序，成功。</span><br /><br /><span>如何在PB中调用浏览器的JavaScript？</span><br /><span>1.&nbsp;在网页中写入要调用的脚本：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">SCRIPT </span><span style="color: #ff0000;">language</span><span style="color: #0000ff;">=JavaScript</span><span style="color: #0000ff;">&gt;</span>
<span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> showmessage(img_name) 
{
    alert(img_name);
}
</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">SCRIPT</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>2.&nbsp;在PB中调用：</p>
<div class="cnblogs_code">
<pre>ole_1.object.document.parentWindow.showmessage("吞硬币的小猪");</pre>
</div>]]></description></item><item><title>ECMall的htaccess规则</title><link>http://www.cnblogs.com/eastson/archive/2012/10/22/2733895.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 22 Oct 2012 06:44:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/22/2733895.html</guid><description><![CDATA[<p><span>&lt;IfModule&nbsp;mod_rewrite.c&gt;</span><br /><span>RewriteEngine&nbsp;On</span><br /><br /><span>#商品详情</span><br /><span>RewriteRule&nbsp;^goods/([0-9]+)/?$&nbsp;index.php?app=goods&amp;id=$1&nbsp;[L]</span><br /><span>RewriteRule&nbsp;^goods/([0-9]+)/([^/]+)/?$&nbsp;index.php?app=goods&amp;id=$1&amp;act=$2&nbsp;[L]</span><br /><span>RewriteRule&nbsp;^goods/([0-9]+)/([^/]+)/page_([^/]+)/?$&nbsp;index.php?app=goods&amp;id=$1&amp;act=$2&amp;page=$3&nbsp;[L]</span><br /><span>RewriteRule&nbsp;^groupbuy/([0-9]+)/?$&nbsp;index.php?app=groupbuy&amp;id=$1&nbsp;[L]</span><br /><br /><span>#分类</span><br /><span>RewriteRule&nbsp;^category/goods/?$&nbsp;index.php?app=category&nbsp;[L]</span><br /><span>RewriteRule&nbsp;^category/(.*)/?$&nbsp;index.php?app=category&amp;act=$1&nbsp;[L]</span><br /><br /><span>#品牌</span><br /><span>RewriteRule&nbsp;^brand/?$&nbsp;index.php?app=brand&nbsp;[L]</span><br /><br /><span>#文章</span><br /><span>RewriteRule&nbsp;^article/([0-9]+).html$&nbsp;index.php?app=article&amp;act=view&amp;article_id=$1&nbsp;[L]</span><br /><br /><span>#店铺页面</span><br /><span>RewriteRule&nbsp;^store/([0-9]+)/?$&nbsp;index.php?app=store&amp;id=$1&nbsp;[L]</span><br /><span>RewriteRule&nbsp;^store/article/([0-9]+).html$&nbsp;index.php?app=store&amp;act=article&amp;id=$1&nbsp;[L]</span><br /><span>RewriteRule&nbsp;^store/([0-9]+)/credit/?$&nbsp;index.php?app=store&amp;id=$1&amp;act=credit&nbsp;[L]</span><br /><span>RewriteRule&nbsp;^store/([0-9]+)/credit/page_([^/]+)/?$&nbsp;index.php?app=store&amp;id=$1&amp;act=credit&amp;page=$2&nbsp;[L]</span><br /><span>RewriteRule&nbsp;^store/([0-9]+)/credit/([0-9]+)/?$&nbsp;index.php?app=store&amp;id=$1&amp;act=credit&amp;eval=$2&nbsp;[L]</span><br /><span>RewriteRule&nbsp;^store/([0-9]+)/credit/([0-9]+)/page_([^/]+)/?$&nbsp;index.php?app=store&amp;id=$1&amp;act=credit&amp;eval=$2&amp;page=$3&nbsp;[L]</span><br /><span>RewriteRule&nbsp;^store/([0-9]+)/goods/?$&nbsp;index.php?app=store&amp;id=$1&amp;act=search&nbsp;[L]</span><br /><span>RewriteRule&nbsp;^store/([0-9]+)/goods/page_([^/]+)/?$&nbsp;index.php?app=store&amp;id=$1&amp;act=search&amp;page=$2&nbsp;[L]</span><br /><span>RewriteRule&nbsp;^store/([0-9]+)/category/([0-9]+)/?$&nbsp;index.php?app=store&amp;id=$1&amp;act=search&amp;cate_id=$2&nbsp;[L]</span><br /><span>RewriteRule&nbsp;^store/([0-9]+)/category/([0-9]+)/page_([^/]+)/?$&nbsp;index.php?app=store&amp;id=$1&amp;act=search&amp;cate_id=$2&amp;page=$3&nbsp;[L]</span><br /><span>RewriteRule&nbsp;^store/([0-9]+)/groupbuy/?$&nbsp;index.php?app=store&amp;id=$1&amp;act=groupbuy&nbsp;[L]</span><br /><span>RewriteRule&nbsp;^store/([0-9]+)/groupbuy/page_([^/]+)/?$&nbsp;index.php?app=store&amp;id=$1&amp;act=groupbuy&amp;page=$2&nbsp;[L]</span><br /><span>&lt;/IfModule&gt;</span></p>]]></description></item><item><title>PowerBuilder与嵌入浏览器交互</title><link>http://www.cnblogs.com/eastson/archive/2012/10/22/2733887.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 22 Oct 2012 06:42:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/22/2733887.html</guid><description><![CDATA[<p><em><strong>准备工作</strong></em><br /><span>1.&nbsp;新增一个Application应用，新增一个窗口。</span><br /><span>2.&nbsp;在窗口中新增一个OLE控件：Microsoft&nbsp;Web&nbsp;Browser，命名为old_1。</span><br /><span>3.&nbsp;新增一个TextBox网址输入控件，命名为sle_url，初始值为c:\temp\index.html。</span><br /><span>4.&nbsp;新增一个Button控件，命名为cb_go，clicked代码如下：</span></p>
<div class="cnblogs_code">
<pre>ole_1.object.Navigate(sle_url.text)</pre>
</div>
<p>5.&nbsp;新增文件c:\temp\index.html，内容如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">script </span><span style="color: #ff0000;">language</span><span style="color: #0000ff;">="javascript"</span><span style="color: #0000ff;">&gt;</span>
<span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> sayhello(msg)
{
    alert(msg);
}
</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">

This is a PowerBuilder test page.</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;</span><span style="color: #000000;">

Your name: </span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">span </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="user_name"</span><span style="color: #0000ff;">&gt;</span>Ultra Man<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">span</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">a </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="say_hello"</span><span style="color: #ff0000;"> onclick</span><span style="color: #0000ff;">="javascript:sayhello('I am web browser');"</span><span style="color: #0000ff;">&gt;</span>Say Hello<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">a</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">a </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="www_link"</span><span style="color: #ff0000;"> href</span><span style="color: #0000ff;">="http://192.168.14.155"</span><span style="color: #0000ff;">&gt;</span>http://192.168.14.155<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">a</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p><em><strong>PB如何调用网页中的脚本？</strong></em><br /><span>1.&nbsp;在窗口中新增一个Button按钮：Invoke&nbsp;Javascript，代码如下：</span></p>
<div class="cnblogs_code">
<pre>ole_1.object.document.parentWindow.sayhello("1122")</pre>
</div>
<p>2.&nbsp;注意这里的大小写问题。JS区分大小写，PB不区分大小写，PB调用时将函数全部转化成了小写。假设JS中的函数是sayHello()，PB调用方式原则上应该也是sayHello()，但PB实际上在执行时转换成了全部小写sayhello()，这样JS在实际执行时就找不到sayhello()这个函数。所以，要想在PB中调用的JS函数应该全部都用小写作为函数名。</p>
<p><br /><em><strong>PB如何获取网页元素？</strong></em><br /><span>1.&nbsp;在窗口中新增一个Button按钮：Fetch&nbsp;User&nbsp;Name，代码如下：</span></p>
<div class="cnblogs_code">
<pre>messagebox('', string(ole_1.object.Document.GetElementById("user_name").InnerText))</pre>
</div>
<p>&nbsp;</p>
<p><em><strong>PB如何修改网页元素的属性？</strong></em><br /><span>1.&nbsp;在窗口中新增一个Button按钮：Change&nbsp;User&nbsp;Name，代码如下：</span></p>
<div class="cnblogs_code">
<pre>ole_1.object.Document.GetElementById("user_name").InnerText = 'Super Man'</pre>
</div>
<p>&nbsp;</p>
<p><em><strong>PB如何调用网页元素的事件？</strong></em><br /><span>1.&nbsp;在窗口中新增一个Button按钮：Click&nbsp;Link，代码如下：</span></p>
<div class="cnblogs_code">
<pre>ole_1.object.Document.GetElementById("say_hello").Click()</pre>
</div>
<p>&nbsp;</p>
<p><em><strong>PB如何响应网页中的Click事件？</strong></em><br /><span>1.&nbsp;在ole_1的clicked事件中写入如下代码：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">string ls_tagName, ls_id, ls_href

ls_tagName=ole_1.object.document.activeElement.tagName

if upper(trim(ls_tagName))="A" then
    ls_id = ole_1.object.document.activeElement.id 
    ls_href =ole_1.object.Document.activeElement.href 
    
    messagebox('', ls_tagName + '/' + ls_id + '/' + ls_href)
    
    ole_1.object.Navigate(ls_href)
end if</span></pre>
</div>
<p>2.&nbsp;当在网页中点击链接时，事件处理就会传到ole_1.clicked。</p>
<p><br /><span>参考资料：</span><br /><span>1.&nbsp;</span><a href="http://hi.baidu.com/starvv_w/blog/item/6264f7a23fef60b9caefd067.html" target="_blank">http://hi.baidu.com/starvv_w/blog/item/6264f7a23fef60b9caefd067.html</a><br /><span>2.&nbsp;</span><a href="http://apps.hi.baidu.com/share/detail/2832257" target="_blank">http://apps.hi.baidu.com/share/detail/2832257</a></p>]]></description></item><item><title>jquery ajax提交checkbox数组的方法</title><link>http://www.cnblogs.com/eastson/archive/2012/10/20/2731869.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 20 Oct 2012 00:41:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/20/2731869.html</guid><description><![CDATA[<p><span>获取checkbox的值放到数组中，然后连接成字符串：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> selectedItems = <span style="color: #0000ff;">new</span><span style="color: #000000;"> Array();
$(</span>"input[@name='itemSelect[]']:checked").each(<span style="color: #0000ff;">function</span>() {selectedItems.push($(<span style="color: #0000ff;">this</span><span style="color: #000000;">).val());});

</span><span style="color: #0000ff;">if</span> (selectedItems .length == 0<span style="color: #000000;">)
    alert(</span>"Please select item(s) to delete."<span style="color: #000000;">);
</span><span style="color: #0000ff;">else</span><span style="color: #000000;">
    $.ajax({
    type: </span>"POST"<span style="color: #000000;">,
    url: </span>"/ajax_do_something.php"<span style="color: #000000;">,
    data: </span>"items=" + selectedItems.join('|'<span style="color: #000000;">),
    dataType: </span>"text"<span style="color: #000000;">,
    success: </span><span style="color: #0000ff;">function</span><span style="color: #000000;"> (request) {
        document.location.reload();
      },
    error: </span><span style="color: #0000ff;">function</span><span style="color: #000000;">(request,error){
        alert(</span>'Error deleting item(s), try again later.'<span style="color: #000000;">);
      }
    }
    )</span></pre>
</div>
<p><span>&nbsp;</span></p>]]></description></item><item><title>一段jQuery发送Ajax请求代码</title><link>http://www.cnblogs.com/eastson/archive/2012/10/20/2731863.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 20 Oct 2012 00:16:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/20/2731863.html</guid><description><![CDATA[<p>客户端代码：</p>
<div class="cnblogs_code">
<pre>&lt;div id="ajax-post"&gt;&lt;a href='#'&gt;Ajax post&lt;/a&gt;&lt;/div&gt;
&lt;script type="text/javascript"&gt;<span style="color: #000000;">
$(</span>'#ajax-post a').click(<span style="color: #0000ff;">function</span><span style="color: #000000;">() {
    </span><span style="color: #0000ff;">var</span> params =<span style="color: #000000;"> {};
    $.ajax({
        type: </span>'post'<span style="color: #000000;">,
        url: </span>'ajax.php'<span style="color: #000000;">,
        data: params,
        beforeSend: </span><span style="color: #0000ff;">function</span><span style="color: #000000;">() {
            $.blockUI({
                message: $(</span>'#loading-image'<span style="color: #000000;">),
                css: {
                    top:  ($(window).height() </span>- 100) /2 + 'px',
                    left: ($(window).width() - 100) /2 + 'px',
                    width: '100px'<span style="color: #000000;">
                }
            });
        },
        complete: </span><span style="color: #0000ff;">function</span><span style="color: #000000;">() {
            $.unblockUI();
        },
        success: </span><span style="color: #0000ff;">function</span><span style="color: #000000;">(msg) {
            $(</span>'#ajax-content'<span style="color: #000000;">).html(msg);
        }
    });
});
</span>&lt;/script&gt;
&lt;div id="ajax-content"&gt;content&lt;/div&gt;</pre>
</div>
<p>&nbsp;</p>
<p>服务端ajax.php：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?php<br />echo</span> 'My name is xxx';</pre>
</div>]]></description></item><item><title>用Delphi开发动态库DLL</title><link>http://www.cnblogs.com/eastson/archive/2012/10/13/2722134.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 13 Oct 2012 00:13:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/13/2722134.html</guid><description><![CDATA[<p><span>公司的ERP系统一直被邮件所烦。</span><br /><br /><span>以前在ERP里面发送邮件，采用的是一个在网上找的DLL文件，没有源码。</span><br /><br /><span>这个DLL文件采用的是SMTP方式，可以实现简单的邮件发送，更高级的功能就没有，比如副本，附件，以HTML方式发送等。</span><br /><br /><span>最近有一些时间，抽空就把这个问题解决了一下。</span><br /><br /><span>首先用Wireshark监控了一下这个DLL文件发送时的数据包，发现应该是用Delphi的Indy组件具体实现的。</span><br /><br /><span>Indy组件刚好会用，就用Delphi+Indy开发了一个自己的DLL邮件发送功能，解决了公司一直困扰的问题。</span><br /><br /><span>需要说明的是Delphi开发DLL供PowerBuilder调用过程中需要注意的一些问题：</span><br /><span>1.&nbsp;Delphi要使用ActiveX&nbsp;Library方式，这样编译是生成的才是一个DLL文件。</span><br /><span>2.&nbsp;最好用一个单独的unit来存放具体的实现代码，这样的目的是方便可以建立另外一个测试用的application。例如，sendmail这个组件的所有实现代码都在sendimpl.pas里面，另外我又建立一个测试用的testform，这个测试程序直接包含sendimpl.pas就好了，很方便。</span><br /><span>3.&nbsp;Delphi需要被外部调用的最好都是函数function，不要有过程procedure，我测试PowerBuilder调用过程总有问题。</span><br /><span>4.&nbsp;Delphi每个需要被外部调用的函数都声明为stdcall调用。</span><br /><span>5.&nbsp;Delphi需要被外部调用的函数里面如果有字符参数或者返回值，都用PChar类型，不要用String。</span><br /><br /><span>下面是一些参考代码片段：</span><br /><span>1.&nbsp;Delphi里面的函数定义</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">function</span> incvalue(<span style="color: #0000ff;">const</span> x: <span style="color: #0000ff;">Integer</span>): <span style="color: #0000ff;">Integer</span><span style="color: #000000;">; stdcall;
</span><span style="color: #0000ff;">function</span> UpperString(Msg: PChar):<span style="color: #000000;"> PChar; stdcall;
</span><span style="color: #0000ff;">function</span> SendMessageFile(sFile: PChar): <span style="color: #0000ff;">Integer</span>; stdcall;</pre>
</div>
<p>&nbsp;</p>
<p><code></code><span>2.&nbsp;Delphi里面声明需要被外部调用的函数</span></p>
<div class="cnblogs_code">
<pre>exports incvalue, UpperString, SendMessageFile;</pre>
</div>
<p>&nbsp;</p>
<p><code></code><span>3.&nbsp;PowerBuilder里面的外部函数声明</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">FUNCTION</span> long incvalue(long fdf) Library "M:\projects\sendmail\sendmail.dll" 
<span style="color: #0000ff;">FUNCTION</span> int SendMessageFile( <span style="color: #0000ff;">string</span> sFile) Library "M:\projects\sendmail\sendmail.dll" 
<span style="color: #0000ff;">FUNCTION</span> <span style="color: #0000ff;">string</span> UpperString( <span style="color: #0000ff;">string</span> sFile) Library "M:\projects\sendmail\sendmail.dll" </pre>
</div>
<p>&nbsp;</p>
<p><a href="http://files.cnblogs.com/eastson/sendmail.rar" target="_blank">http://files.cnblogs.com/eastson/sendmail.rar</a></p>]]></description></item><item><title>Indy9发送邮件主旨过长解决方法</title><link>http://www.cnblogs.com/eastson/archive/2012/10/13/2722133.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 13 Oct 2012 00:09:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/13/2722133.html</guid><description><![CDATA[<p><span>上个月用Delphi+Indy9写了一个SMTP发送邮件的DLL文件，供公司的ERP系统（PowerBuilder）使用。</span><br /><br /><span>使用过程中发现一个问题，当邮件主旨过长时，收件者就会收到乱码邮件。</span><br /><br /><span>进过在网络上的搜索，然后又看了一下Indy的源代码，发现问题是Indy在编码Subject时，碰到需要编码的内容，比如中文，非ASCII字符，采用了base64编码。编码后的内容如果超过75字节，就拆分成了多行。行与行之间多加了一个回车换行符。</span><br /><br /><span>问题找到，怎么解决了？</span><br /><br /><span>本打算修改Indy的多行处理方式，结果半天出不来，后来干脆修改75字节的限制，变成175字节，测试居然OK。</span><br /><br /><span>那就先这样吧。</span><br /><br /><span>具体修改位置在DELPHI_PATH\Source\Indy\IdCoderHeader.pas第599行。</span></p>]]></description></item><item><title>荣誉只属于过去</title><link>http://www.cnblogs.com/eastson/archive/2012/10/13/2722131.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 13 Oct 2012 00:08:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/13/2722131.html</guid><description><![CDATA[<p><span>居里夫人的一个女朋友到她家作客，发现居里夫人小女儿正在玩那枚奖章，忙问：&ldquo;你应该知道能得到一枚英国皇家协会颁发的金质奖章是多么高的荣誉，你怎么能把它给孩子玩呢？&rdquo;居里夫人说：&ldquo;我是想让孩子们从小就知道，荣誉就象玩具，只能玩玩而已，绝不能永远守着它，否则就将一事无成。&rdquo;</span></p>]]></description></item><item><title>简易Smarty模板类</title><link>http://www.cnblogs.com/eastson/archive/2012/10/13/2722130.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 13 Oct 2012 00:07:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/13/2722130.html</guid><description><![CDATA[<p><span>一个简易Smarty模板类，只需要一个文件。在ecshop里面找到的，感谢ecshop。</span><br /><br /><span>测试代码：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">require_once</span> 'cls_template.php'<span style="color: #000000;">;

</span><span style="color: #800080;">$smarty</span> = <span style="color: #0000ff;">new</span><span style="color: #000000;"> cls_template;

</span><span style="color: #800080;">$smarty</span>-&gt;cache_lifetime = 30<span style="color: #000000;">;
</span><span style="color: #800080;">$smarty</span>-&gt;template_dir = <span style="color: #008080;">dirname</span>(<span style="color: #ff00ff;">__FILE__</span>) . '/cache/smarty/template/'<span style="color: #000000;">;
</span><span style="color: #800080;">$smarty</span>-&gt;cache_dir = <span style="color: #008080;">dirname</span>(<span style="color: #ff00ff;">__FILE__</span>) . '/cache/smarty/cache/'<span style="color: #000000;">;
</span><span style="color: #800080;">$smarty</span>-&gt;compile_dir = <span style="color: #008080;">dirname</span>(<span style="color: #ff00ff;">__FILE__</span>) . '/cache/smarty/compiled/'<span style="color: #000000;">;

</span><span style="color: #800080;">$smarty</span>-&gt;direct_output = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
</span><span style="color: #800080;">$smarty</span>-&gt;force_compile = <span style="color: #0000ff;">true</span><span style="color: #000000;">;

</span><span style="color: #800080;">$array</span> = <span style="color: #0000ff;">array</span>(1, 2, 3, 4, 5<span style="color: #000000;">);
</span><span style="color: #800080;">$smarty</span>-&gt;assign('array', <span style="color: #0000ff;">array</span><span style="color: #000000;">( 
    </span>'egw_polls' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
        </span>'fd' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
            </span>'poll_id' =&gt; <span style="color: #0000ff;">array</span>('type' =&gt; 'auto','nullable' =&gt; <span style="color: #0000ff;">false</span>),
            'poll_title' =&gt; <span style="color: #0000ff;">array</span>('type' =&gt; 'varchar', 'precision' =&gt; '100', 'nullable' =&gt; <span style="color: #0000ff;">false</span>),
            'poll_timestamp' =&gt; <span style="color: #0000ff;">array</span>('type' =&gt; 'int', 'precision' =&gt; '8', 'nullable' =&gt; <span style="color: #0000ff;">false</span>),
            'poll_visible' =&gt; <span style="color: #0000ff;">array</span>('type' =&gt; 'int', 'precision' =&gt; '4', 'nullable' =&gt; <span style="color: #0000ff;">false</span>, 'default' =&gt; '0'),
            'poll_votable' =&gt; <span style="color: #0000ff;">array</span>('type' =&gt; 'int', 'precision' =&gt; '4', 'nullable' =&gt; <span style="color: #0000ff;">false</span>, 'default' =&gt; '0'),<span style="color: #000000;">
        )</span>,
        'pk' =&gt; <span style="color: #0000ff;">array</span>('poll_id'),
        'fk' =&gt; <span style="color: #0000ff;">array</span>(),
        'ix' =&gt; <span style="color: #0000ff;">array</span>(),
        'uc' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">()
    )</span>,
    'egw_polls_answers' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
        </span>'fd' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">(
            </span>'answer_id' =&gt; <span style="color: #0000ff;">array</span>('type' =&gt; 'auto', 'nullable' =&gt; <span style="color: #0000ff;">false</span>),
            'poll_id' =&gt; <span style="color: #0000ff;">array</span>('type' =&gt; 'int', 'precision' =&gt; '4', 'nullable' =&gt; <span style="color: #0000ff;">false</span>),
            'answer_text' =&gt; <span style="color: #0000ff;">array</span>('type' =&gt; 'varchar', 'precision' =&gt; '100', 'nullable' =&gt; <span style="color: #0000ff;">false</span>),
            'answer_votes' =&gt; <span style="color: #0000ff;">array</span>('type' =&gt; 'int', 'precision' =&gt; '4', 'nullable' =&gt; <span style="color: #0000ff;">false</span>, 'default' =&gt; '0'),<span style="color: #000000;">
        )</span>,
        'pk' =&gt; <span style="color: #0000ff;">array</span>('answer_id'),
        'fk' =&gt; <span style="color: #0000ff;">array</span>(),
        'ix' =&gt; <span style="color: #0000ff;">array</span>('poll_id'),
        'uc' =&gt; <span style="color: #0000ff;">array</span><span style="color: #000000;">()
    )
));

</span><span style="color: #800080;">$smarty</span>-&gt;assign('name', 'omnitrix'<span style="color: #000000;">);

</span><span style="color: #800080;">$smarty</span>-&gt;assign('user', <span style="color: #0000ff;">array</span>('name' =&gt; 'admin', 'password' =&gt; '456', 'email' =&gt; 'admin@admin.com'<span style="color: #000000;">));

</span><span style="color: #800080;">$smarty</span>-&gt;display('t1.tpl');</pre>
</div>
<p>&nbsp;</p>
<p><span>测试模板：</span></p>
<div class="cnblogs_code">
<pre>&lt;br/&gt;Name: {<span style="color: #800080;">$name</span><span style="color: #000000;">}
</span>&lt;br/&gt;Admin: {<span style="color: #800080;">$user</span>.<span style="color: #000000;">name}
</span>&lt;br/&gt;Password: {<span style="color: #800080;">$user</span>.<span style="color: #000000;">password}
</span>&lt;br/&gt;Email: {<span style="color: #800080;">$user</span>.email|upper|escape:<span style="color: #000000;">url}

{</span><span style="color: #0000ff;">foreach</span> from=<span style="color: #800080;">$array</span> <span style="color: #008080;">key</span>=table_name item=table_info name=<span style="color: #000000;">abc}
</span>&lt;br/&gt;{<span style="color: #800080;">$table_name</span>}: {<span style="color: #800080;">$smarty</span>.<span style="color: #0000ff;">foreach</span>.abc.first} : {<span style="color: #800080;">$smarty</span>.server.<span style="color: #000000;">PHP_SELF}
{foreachelse}
</span>&lt;br/&gt;Nothing.<span style="color: #000000;">
{</span>/<span style="color: #0000ff;">foreach</span>} </pre>
</div>
<p>&nbsp;</p>
<p><strong>类文件cls_template.php位于ecshop/includes，可以在ecshop下载源码后找到。</strong></p>]]></description></item><item><title>一个处理UTF-8编码文件BOM头的简单方法</title><link>http://www.cnblogs.com/eastson/archive/2012/10/13/2722129.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 13 Oct 2012 00:05:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/13/2722129.html</guid><description><![CDATA[<p><span>发现一个处理UTF-8编码文件BOM头的简单方法，在ecshop里面发现的。</span><br /><br /><span>读取出文件内容后，执行下面代码将BOM去掉：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (<span style="color: #008080;">strpos</span>(<span style="color: #800080;">$source</span>, "\xEF\xBB\xBF") !== <span style="color: #0000ff;">FALSE</span><span style="color: #000000;">)
{
    </span><span style="color: #800080;">$source</span> = <span style="color: #008080;">str_replace</span>("\xEF\xBB\xBF", '', <span style="color: #800080;">$source</span><span style="color: #000000;">);
}</span></pre>
</div>]]></description></item><item><title>Ant中使用命令行参数</title><link>http://www.cnblogs.com/eastson/archive/2012/10/13/2722128.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 13 Oct 2012 00:04:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/13/2722128.html</guid><description><![CDATA[<p><span>开发Omnitrix模块时，需要按照系统的要求建立多个对应的目录。</span><br /><br /><span>每次都要重复这样的一系列操作，确实很无趣。最近想到这其实可以用Ant帮我们简单实现。</span><br /><br /><span>将下面的内容复制到build.xml文件中：</span></p>
<div class="cnblogs_code">
<pre>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;project name="omnitrix" <span style="color: #0000ff;">default</span>="omnitrix" basedir="."&gt;
  
    &lt;property name="root" location="." /&gt;

    &lt;target name="create-module"&gt;
        &lt;fail message="Usage: ant create-module -Dmodule_name=foo"&gt;
            &lt;condition&gt;
                &lt;not&gt;
                    &lt;<span style="color: #0000ff;">isset</span> property="module_name"/&gt;
                &lt;/not&gt;
            &lt;/condition&gt;
        &lt;/fail&gt;
        &lt;<span style="color: #008080;">mkdir</span> <span style="color: #008080;">dir</span>="${root}/modules/${module_name}" /&gt;
        &lt;<span style="color: #008080;">mkdir</span> <span style="color: #008080;">dir</span>="${root}/modules/${module_name}/controllers" /&gt;
        &lt;<span style="color: #008080;">mkdir</span> <span style="color: #008080;">dir</span>="${root}/modules/${module_name}/templates" /&gt;
        &lt;<span style="color: #008080;">mkdir</span> <span style="color: #008080;">dir</span>="${root}/modules/${module_name}/languages" /&gt;
        &lt;<span style="color: #008080;">mkdir</span> <span style="color: #008080;">dir</span>="${root}/modules/${module_name}/languages/chinese" /&gt;
    &lt;/target&gt;
  
&lt;/project&gt;</pre>
</div>
<p>&nbsp;</p>
<p><span>在命令行执行如下命令就可以实现这一系列操作：</span></p>
<div class="cnblogs_code">
<pre>ant create-module -Dmodule_name=foo</pre>
</div>
<p>当命令参数没有指定时，Ant还可以提示我们正确的使用方法，然后终止执行。</p>]]></description></item><item><title>Ant中调用PHP脚本</title><link>http://www.cnblogs.com/eastson/archive/2012/10/13/2722126.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 13 Oct 2012 00:02:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/13/2722126.html</guid><description><![CDATA[<p><span>因为要打包Omnitrix数据库，特意实现了Ant中的PHP调用。</span><br /><br /><span>MySQL数据库内容的导出由PHP实现，参考文章《</span><a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_0" href="http://www.cnblogs.com/eastson/archive/2012/10/13/2722125.html" target="_blank">Extractor: 一个MySQL数据库备份工具</a>》。</p>
<p>&nbsp;</p>
<p><span>build.xml内容：</span></p>
<div class="cnblogs_code">
<pre>&lt;?xml version=<span style="color: #800000;">"</span><span style="color: #800000;">1.0</span><span style="color: #800000;">"</span> encoding=<span style="color: #800000;">"</span><span style="color: #800000;">UTF-8</span><span style="color: #800000;">"</span>?&gt;
&lt;project name=<span style="color: #800000;">"</span><span style="color: #800000;">omnitrix</span><span style="color: #800000;">"</span> default=<span style="color: #800000;">"</span><span style="color: #800000;">omnitrix</span><span style="color: #800000;">"</span> basedir=<span style="color: #800000;">"</span><span style="color: #800000;">.</span><span style="color: #800000;">"</span>&gt;
  
    &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">root</span><span style="color: #800000;">"</span> location=<span style="color: #800000;">"</span><span style="color: #800000;">.</span><span style="color: #800000;">"</span> /&gt;
    &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">build</span><span style="color: #800000;">"</span> location=<span style="color: #800000;">"</span><span style="color: #800000;">${root}/build</span><span style="color: #800000;">"</span> /&gt;
    &lt;property name=<span style="color: #800000;">"</span><span style="color: #800000;">dist</span><span style="color: #800000;">"</span>  location=<span style="color: #800000;">"</span><span style="color: #800000;">${root}/dist</span><span style="color: #800000;">"</span> /&gt;

    &lt;target name=<span style="color: #800000;">"</span><span style="color: #800000;">init</span><span style="color: #800000;">"</span>&gt;
        &lt;<span style="color: #0000ff;">mkdir</span> <span style="color: #0000ff;">dir</span>=<span style="color: #800000;">"</span><span style="color: #800000;">${build}</span><span style="color: #800000;">"</span> /&gt;
        &lt;<span style="color: #0000ff;">mkdir</span> <span style="color: #0000ff;">dir</span>=<span style="color: #800000;">"</span><span style="color: #800000;">${dist}</span><span style="color: #800000;">"</span> /&gt;
    &lt;/target&gt;
    
    &lt;target name=<span style="color: #800000;">"</span><span style="color: #800000;">omnitrix</span><span style="color: #800000;">"</span> depends=<span style="color: #800000;">"</span><span style="color: #800000;">init</span><span style="color: #800000;">"</span>&gt;
        &lt;exec executable=<span style="color: #800000;">"</span><span style="color: #800000;">cmd.exe</span><span style="color: #800000;">"</span> <span style="color: #0000ff;">dir</span>=<span style="color: #800000;">"</span><span style="color: #800000;">${root}</span><span style="color: #800000;">"</span> failonerror=<span style="color: #800000;">"</span><span style="color: #800000;">true</span><span style="color: #800000;">"</span>&gt;
            &lt;arg line=<span style="color: #800000;">"</span><span style="color: #800000;">/c php -f utilities/extractor.php output_file=build/omnitrix/install/omnitrix.sql</span><span style="color: #800000;">"</span> /&gt;
        &lt;/exec&gt;
    &lt;/target&gt;
  
&lt;/project&gt;</pre>
</div>
<p>&nbsp;</p>
<p><span>完整的命令实际上是：</span></p>
<div class="cnblogs_code">
<pre>cmd.exe /c php -f utilities/extractor.php output_file=build/omnitrix/<span style="color: #0000ff;">install</span>/omnitrix.sql</pre>
</div>
<p>这里的/c参数非常重要。先前没有/c参数试了很久都不成功，返回错误代码1。</p>]]></description></item><item><title>Extractor: 一个MySQL数据库备份工具</title><link>http://www.cnblogs.com/eastson/archive/2012/10/13/2722125.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 12 Oct 2012 23:58:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/13/2722125.html</guid><description><![CDATA[<p><span>因为要在Ant中导出MySQL数据库，写了mysql_extractor类，供大家参考。</span></p>
<p><span>&nbsp;</span></p>
<p><span><span>extractor.php：</span></span>&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$_SERVER</span>['argv'<span style="color: #000000;">])) {
    </span><span style="color: #0000ff;">for</span> (<span style="color: #800080;">$i</span> = 1; <span style="color: #800080;">$i</span> &lt; <span style="color: #800080;">$_SERVER</span>['argc']; <span style="color: #800080;">$i</span>++<span style="color: #000000;">) {
        </span><span style="color: #0000ff;">list</span>(<span style="color: #800080;">$k</span>, <span style="color: #800080;">$v</span>) = <span style="color: #008080;">explode</span>('=', <span style="color: #800080;">$_SERVER</span>['argv'][<span style="color: #800080;">$i</span><span style="color: #000000;">]);
        </span><span style="color: #800080;">$_GET</span>[<span style="color: #800080;">$k</span>] = <span style="color: #800080;">$v</span><span style="color: #000000;">;
    }
}

</span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$_GET</span>['table_prefix'<span style="color: #000000;">])) {
    </span><span style="color: #800080;">$_GET</span>['table_prefix'] = ''<span style="color: #000000;">;
}

</span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$_GET</span>['output_file'<span style="color: #000000;">])) {
    </span><span style="color: #800080;">$_GET</span>['output_file'] = ''<span style="color: #000000;">;
}

</span><span style="color: #0000ff;">include_once</span>(<span style="color: #008080;">dirname</span>(<span style="color: #ff00ff;">__FILE__</span>) . '/../config.php'<span style="color: #000000;">);

</span><span style="color: #800080;">$db</span> = <span style="color: #008080;">mysql_connect</span>(DB_HOST . ':' . DB_PORT, DB_USER,<span style="color: #000000;"> DB_PASS);
</span><span style="color: #0000ff;">if</span> (!<span style="color: #800080;">$db</span><span style="color: #000000;">) {
    </span><span style="color: #0000ff;">die</span>('[' . <span style="color: #008080;">mysql_errno</span>() . '] ' . <span style="color: #008080;">mysql_error</span><span style="color: #000000;">());
}

</span><span style="color: #0000ff;">if</span> (!<span style="color: #008080;">mysql_select_db</span>(DB_NAME, <span style="color: #800080;">$db</span><span style="color: #000000;">)) {
    </span><span style="color: #0000ff;">die</span>('[' . <span style="color: #008080;">mysql_errno</span>() . '] ' . <span style="color: #008080;">mysql_error</span><span style="color: #000000;">());
}
        
</span><span style="color: #008080;">mysql_query</span>("SET NAMES 'utf8'", <span style="color: #800080;">$db</span><span style="color: #000000;">);
</span><span style="color: #008080;">mysql_query</span>("SET NAMES 'utf8'", <span style="color: #800080;">$db</span><span style="color: #000000;">);

</span><span style="color: #800080;">$extractor</span> = <span style="color: #0000ff;">new</span> mysql_extractor(<span style="color: #800080;">$db</span>, <span style="color: #800080;">$_GET</span>['output_file'<span style="color: #000000;">]);

</span><span style="color: #800080;">$extractor</span>-&gt;<span style="color: #000000;">write_start(DB_PREFIX);

</span><span style="color: #800080;">$result</span> = <span style="color: #008080;">mysql_query</span>("SHOW TABLE STATUS WHERE name like '" . DB_PREFIX . <span style="color: #800080;">$_GET</span>['table_prefix'] . "%'", <span style="color: #800080;">$db</span><span style="color: #000000;">);
</span><span style="color: #0000ff;">while</span> (<span style="color: #0000ff;">false</span> !== (<span style="color: #800080;">$row</span> = <span style="color: #008080;">mysql_fetch_array</span>(<span style="color: #800080;">$result</span>,<span style="color: #000000;"> MYSQL_NUM))) {
    </span><span style="color: #800080;">$extractor</span>-&gt;write_table(<span style="color: #800080;">$row</span>[0<span style="color: #000000;">]);
    </span><span style="color: #800080;">$extractor</span>-&gt;write_data(<span style="color: #800080;">$row</span>[0<span style="color: #000000;">]);
}
</span><span style="color: #008080;">mysql_free_result</span>(<span style="color: #800080;">$result</span><span style="color: #000000;">);

</span><span style="color: #800080;">$extractor</span>-&gt;<span style="color: #000000;">write_end();

</span><span style="color: #0000ff;">class</span><span style="color: #000000;"> mysql_extractor
{
    </span><span style="color: #0000ff;">var</span> <span style="color: #800080;">$db</span><span style="color: #000000;">;
    </span><span style="color: #0000ff;">var</span> <span style="color: #800080;">$fp</span><span style="color: #000000;">;

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span> __construct(<span style="color: #800080;">$db</span>, <span style="color: #800080;">$output_file</span><span style="color: #000000;">)
    {
        </span><span style="color: #800080;">$this</span>-&gt;db = <span style="color: #800080;">$db</span><span style="color: #000000;">;
        
        </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$output_file</span><span style="color: #000000;">)) {
            </span><span style="color: #800080;">$this</span>-&gt;fp = <span style="color: #008080;">fopen</span>(<span style="color: #800080;">$output_file</span>, 'w'<span style="color: #000000;">);

            </span><span style="color: #0000ff;">if</span> (!<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">fp) {
                </span><span style="color: #008080;">trigger_error</span>('FILE_WRITE_FAIL', <span style="color: #ff00ff;">E_USER_ERROR</span><span style="color: #000000;">);
            }
        }
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span> write_start(<span style="color: #800080;">$table_prefix</span><span style="color: #000000;">)
    {
        </span><span style="color: #800080;">$sql_data</span> = "#\n"<span style="color: #000000;">;
        </span><span style="color: #800080;">$sql_data</span> .= "# Omnitrix Backup Script\n"<span style="color: #000000;">;
        </span><span style="color: #800080;">$sql_data</span> .= "# Dump of tables for <span style="color: #800080;">$table_prefix</span>\n"<span style="color: #000000;">;
        </span><span style="color: #800080;">$sql_data</span> .= "# DATE : " . <span style="color: #008080;">gmdate</span>("d-m-Y H:i:s", <span style="color: #008080;">time</span>()) . " GMT\n"<span style="color: #000000;">;
        </span><span style="color: #800080;">$sql_data</span> .= "#\n\n"<span style="color: #000000;">;
        </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #008080;">flush</span>(<span style="color: #800080;">$sql_data</span><span style="color: #000000;">);
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span> write_table(<span style="color: #800080;">$table_name</span><span style="color: #000000;">)
    {
        </span><span style="color: #800080;">$sql</span> = 'SHOW CREATE TABLE ' . <span style="color: #800080;">$table_name</span><span style="color: #000000;">;
        </span><span style="color: #800080;">$result</span> = <span style="color: #008080;">mysql_query</span>(<span style="color: #800080;">$sql</span>, <span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">db);
        </span><span style="color: #800080;">$row</span> = <span style="color: #008080;">mysql_fetch_array</span>(<span style="color: #800080;">$result</span>,<span style="color: #000000;"> MYSQL_ASSOC);
        </span><span style="color: #008080;">mysql_free_result</span>(<span style="color: #800080;">$result</span><span style="color: #000000;">);

        </span><span style="color: #800080;">$sql_data</span> = "#\n"<span style="color: #000000;">;
        </span><span style="color: #800080;">$sql_data</span> .= "# Source for table <span style="color: #800080;">$table_name</span> \n"<span style="color: #000000;">;
        </span><span style="color: #800080;">$sql_data</span> .= "#\n"<span style="color: #000000;">;
        </span><span style="color: #800080;">$sql_data</span> .= "DROP TABLE IF EXISTS `<span style="color: #800080;">$table_name</span>`;\n"<span style="color: #000000;">;
        </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #008080;">flush</span>(<span style="color: #800080;">$sql_data</span> . <span style="color: #800080;">$row</span>['Create Table'] . ";\n\n"<span style="color: #000000;">);
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span> write_data(<span style="color: #800080;">$table_name</span><span style="color: #000000;">)
    {
        </span><span style="color: #800080;">$sql_data</span> = "#\n"<span style="color: #000000;">;
        </span><span style="color: #800080;">$sql_data</span> .= "# Dumping data for table <span style="color: #800080;">$table_name</span> \n"<span style="color: #000000;">;
        </span><span style="color: #800080;">$sql_data</span> .= "#\n"<span style="color: #000000;">;
        </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #008080;">flush</span>(<span style="color: #800080;">$sql_data</span><span style="color: #000000;">);
        
        </span><span style="color: #800080;">$sql</span> = "SELECT * FROM <span style="color: #800080;">$table_name</span>"<span style="color: #000000;">;
        </span><span style="color: #800080;">$result</span> = <span style="color: #008080;">mysql_query</span>(<span style="color: #800080;">$sql</span>, <span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">db);
        </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$result</span> != <span style="color: #0000ff;">false</span><span style="color: #000000;">) {
            </span><span style="color: #800080;">$fields_cnt</span> = <span style="color: #008080;">mysql_num_fields</span>(<span style="color: #800080;">$result</span><span style="color: #000000;">);

            </span><span style="color: #008000;">//</span><span style="color: #008000;"> Get field information</span>
            <span style="color: #800080;">$field</span> = <span style="color: #800080;">$field_set</span> = <span style="color: #0000ff;">array</span><span style="color: #000000;">();
            </span><span style="color: #0000ff;">for</span> (<span style="color: #800080;">$j</span> = 0; <span style="color: #800080;">$j</span> &lt; <span style="color: #800080;">$fields_cnt</span>; <span style="color: #800080;">$j</span>++<span style="color: #000000;">) {
                </span><span style="color: #800080;">$info</span> = <span style="color: #0000ff;">new</span><span style="color: #000000;"> stdClass();
                </span><span style="color: #800080;">$info</span>-&gt;name = <span style="color: #008080;">mysql_field_name</span>(<span style="color: #800080;">$result</span>, <span style="color: #800080;">$j</span><span style="color: #000000;">);
                </span><span style="color: #800080;">$info</span>-&gt;type = <span style="color: #008080;">mysql_field_type</span>(<span style="color: #800080;">$result</span>, <span style="color: #800080;">$j</span><span style="color: #000000;">);
                </span><span style="color: #800080;">$info</span>-&gt;flags = <span style="color: #008080;">mysql_field_flags</span>(<span style="color: #800080;">$result</span>, <span style="color: #800080;">$j</span><span style="color: #000000;">);
                </span><span style="color: #800080;">$field</span>[<span style="color: #800080;">$j</span>] = <span style="color: #800080;">$info</span><span style="color: #000000;">;
                
                </span><span style="color: #800080;">$field_set</span>[] = <span style="color: #800080;">$info</span>-&gt;<span style="color: #000000;">name;
            }

            </span><span style="color: #800080;">$search</span>            = <span style="color: #0000ff;">array</span>("\\", "'", "\x00", "\x0a", "\x0d", "\x1a", '"'<span style="color: #000000;">);
            </span><span style="color: #800080;">$replace</span>        = <span style="color: #0000ff;">array</span>("\\\\", "\\'", '\0', '\n', '\r', '\Z', '\\"'<span style="color: #000000;">);

            </span><span style="color: #0000ff;">while</span> ((<span style="color: #800080;">$row</span> = <span style="color: #008080;">mysql_fetch_row</span>(<span style="color: #800080;">$result</span>)) !== <span style="color: #0000ff;">false</span><span style="color: #000000;">) {
                </span><span style="color: #800080;">$values</span>    = <span style="color: #0000ff;">array</span><span style="color: #000000;">();

                </span><span style="color: #0000ff;">for</span> (<span style="color: #800080;">$j</span> = 0; <span style="color: #800080;">$j</span> &lt; <span style="color: #800080;">$fields_cnt</span>; <span style="color: #800080;">$j</span>++<span style="color: #000000;">) {
                    </span><span style="color: #0000ff;">if</span> (!<span style="color: #0000ff;">isset</span>(<span style="color: #800080;">$row</span>[<span style="color: #800080;">$j</span>]) || <span style="color: #008080;">is_null</span>(<span style="color: #800080;">$row</span>[<span style="color: #800080;">$j</span><span style="color: #000000;">])) {
                        </span><span style="color: #800080;">$values</span>[<span style="color: #800080;">$j</span>] = 'NULL'<span style="color: #000000;">;
                    } </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> ((<span style="color: #800080;">$field</span>[<span style="color: #800080;">$j</span>]-&gt;flags &amp; 32768) &amp;&amp; !(<span style="color: #800080;">$field</span>[<span style="color: #800080;">$j</span>]-&gt;flags &amp; 1024<span style="color: #000000;">))
                    {
                        </span><span style="color: #800080;">$values</span>[<span style="color: #800080;">$j</span>] = <span style="color: #800080;">$row</span>[<span style="color: #800080;">$j</span><span style="color: #000000;">];
                    } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
                        </span><span style="color: #800080;">$values</span>[<span style="color: #800080;">$j</span>] = "'" . <span style="color: #008080;">str_replace</span>(<span style="color: #800080;">$search</span>, <span style="color: #800080;">$replace</span>, <span style="color: #800080;">$row</span>[<span style="color: #800080;">$j</span>]) . "'"<span style="color: #000000;">;
                    }
                }
                
                </span><span style="color: #800080;">$query</span> = 'INSERT INTO `' . <span style="color: #800080;">$table_name</span> . '` VALUES (' . <span style="color: #008080;">implode</span>(', ', <span style="color: #800080;">$values</span>) . ');'<span style="color: #000000;">;
                </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #008080;">flush</span>(<span style="color: #800080;">$query</span> . "\n"<span style="color: #000000;">);
            }
            </span><span style="color: #008080;">mysql_free_result</span>(<span style="color: #800080;">$result</span><span style="color: #000000;">);
            
            </span><span style="color: #800080;">$this</span>-&gt;<span style="color: #008080;">flush</span>("\n"<span style="color: #000000;">);
        }
    }
    
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span><span style="color: #000000;"> write_end()
    {
        </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">fp) {
            </span><span style="color: #008080;">fclose</span>(<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">fp);
        }    
    }
    
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">function</span> <span style="color: #008080;">flush</span>(<span style="color: #800080;">$data</span><span style="color: #000000;">)
    {
        </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$this</span>-&gt;<span style="color: #000000;">fp) {
            </span><span style="color: #008080;">fwrite</span>(<span style="color: #800080;">$this</span>-&gt;fp, <span style="color: #800080;">$data</span><span style="color: #000000;">);
        } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
            </span><span style="color: #0000ff;">echo</span> <span style="color: #800080;">$data</span><span style="color: #000000;">;            
        }
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p><span>在命令行执行：</span></p>
<div class="cnblogs_code">
<pre>php -<span style="color: #000000;">f extractor.php #直接输出
php </span>-f extractor.php output_file=<span style="color: #000000;">omnitrix.sql #输出到文件
php </span>-f extractor.php output_file=omnitrix.sql table_prefix=system_user #限定指定开头的表</pre>
</div>
<p>&nbsp;</p>
<p><span>在浏览器执行：</span></p>
<div class="cnblogs_code">
<pre>http:<span style="color: #008000;">//</span><span style="color: #008000;">localhost/omnitrix/utilities/extractor.php #直接输出</span>
http:<span style="color: #008000;">//</span><span style="color: #008000;">localhost/omnitrix/utilities/extractor.php?output_file=omnitrix.sql #输出到文件</span>
http:<span style="color: #008000;">//</span><span style="color: #008000;">localhost/omnitrix/utilities/extractor.php?output_file=omnitrix.sql&amp;table_prefix=system_user #限定指定开头的表</span></pre>
</div>]]></description></item><item><title>为Ubuntu安装build-essential软件包</title><link>http://www.cnblogs.com/eastson/archive/2012/10/04/2711767.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 04 Oct 2012 13:24:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/04/2711767.html</guid><description><![CDATA[<p>Ubuntu缺省情况下，并没有提供C/C++的编译环境，因此还需要手动安装。</p>
<p> <br />
	如果单独安装gcc以及g++比较麻烦，幸运的是，为了能够编译Ubuntu的内核，Ubuntu提供了一个build-essential软件包。</p>
<p>
	<br />
	查看该软件包的依赖关系，可以看到以下内容：</p>
<div class="cnblogs_code">
<pre>$ apt-cache depends build-<span style="color: #000000;">essential
build</span>-<span style="color: #000000;">essential
 </span>|Depends: libc6-<span style="color: #000000;">dev
  Depends: </span>&lt;libc-dev&gt;<span style="color: #000000;">
    libc6</span>-<span style="color: #000000;">dev
  Depends: </span><span style="color: #0000ff;">gcc</span><span style="color: #000000;">
  Depends: g</span>++<span style="color: #000000;">
  Depends: </span><span style="color: #0000ff;">make</span><span style="color: #000000;">
  Depends: dpkg</span>-<span style="color: #000000;">dev
  Conflicts: build</span>-essential:i386</pre>
</div>
<p>&nbsp;</p>
<p>也就是说，安装了该软件包，编译c/c++所需要的软件包也都会被安装。因此如果想在Ubuntu中编译c/c++程序，只需要安装该软件包就可以了。安装方法如下：</p>
<div class="cnblogs_code">
<pre>$<span style="color: #0000ff;">sudo</span> apt-get <span style="color: #0000ff;">install</span> build-essential</pre>
</div>]]></description></item><item><title>用ISO文件制作启动U盘</title><link>http://www.cnblogs.com/eastson/archive/2012/10/04/2711348.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 04 Oct 2012 13:22:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/10/04/2711348.html</guid><description><![CDATA[<p>今天帮一个朋友装电脑，没有光盘，只有ISO文件，就计划做一个启动U盘。</p>
<p>&nbsp;</p>
<p>1. 插入U盘，找到U盘设备文件：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">df</span><span style="color: #000000;">
Filesystem     1K</span>-blocks     Used Available Use%<span style="color: #000000;"> Mounted on
... ...
</span>/dev/sdb1        <span style="color: #800080;">2061348</span>  <span style="color: #800080;">1520856</span>    <span style="color: #800080;">540492</span>  <span style="color: #800080;">74</span>% /media/PENDRIVE</pre>
</div>
<p>&nbsp;</p>
<p>2. 将ISO文件传送到U盘：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">dd</span> <span style="color: #0000ff;">if</span>=/misc/YlmF_GhostXP_SP3_YN11.8_CD.iso of=/dev/<span style="color: #000000;">sdb
</span><span style="color: #800080;">1424400</span>+<span style="color: #800080;">0</span> records <span style="color: #0000ff;">in</span>
<span style="color: #800080;">1424400</span>+<span style="color: #800080;">0</span><span style="color: #000000;"> records out
</span><span style="color: #800080;">729292800</span> bytes (<span style="color: #800080;">729</span> MB) copied, <span style="color: #800080;">106.401</span> s, <span style="color: #800080;">6.9</span> MB/s</pre>
</div>
<p>注意：这里需要的是U盘对应的设备文件(/dev/sdb)，而不是分区文件(/dev/sdb1).</p>
<p>&nbsp;</p>
<p>3. OK, 现在开机试试看。</p>]]></description></item><item><title>xxxxxxxxxx</title><link>http://www.cnblogs.com/eastson/archive/2012/09/29/2708677.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 29 Sep 2012 08:16:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/29/2708677.html</guid><description><![CDATA[<p>&lt;!DOCTYPE html&gt;<br />&lt;!-- saved from url=(0043)http://propelui.com/themes/slate/forms.html --&gt;<br />&lt;html lang="en"&gt;&lt;head&gt;&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;<br />&lt;meta charset="utf-8"&gt;<br />&lt;title&gt;Forms | Slate Admin 2.0&lt;/title&gt;</p>
<p>&lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"&gt;<br />&lt;meta name="apple-mobile-web-app-capable" content="yes"&gt;</p>
<p>&lt;!-- Styles --&gt;<br />&lt;link href="http://propelui.com/themes/slate/css/bootstrap.css" rel="stylesheet"&gt;<br />&lt;link href="http://propelui.com/themes/slate/css/bootstrap-responsive.css" rel="stylesheet"&gt;<br />&lt;link href="http://propelui.com/themes/slate/css/bootstrap-overrides.css" rel="stylesheet"&gt;</p>
<p>&lt;link href="http://propelui.com/themes/slate/css/ui-lightness/jquery-ui-1.8.21.custom.css" rel="stylesheet"&gt;</p>
<p>&lt;link href="http://propelui.com/themes/slate/css/slate.css" rel="stylesheet"&gt;<br />&lt;link href="http://propelui.com/themes/slate/css/slate-responsive.css" rel="stylesheet"&gt;</p>
<p><br />&lt;!-- Javascript --&gt;<br />&lt;script src="./Forms   Slate Admin 2.0_files/jquery-1.7.2.min.js"&gt;&lt;/script&gt;<br />&lt;script src="./Forms   Slate Admin 2.0_files/jquery-ui-1.8.21.custom.min.js"&gt;&lt;/script&gt;<br />&lt;script src="./Forms   Slate Admin 2.0_files/jquery.ui.touch-punch.min.js"&gt;&lt;/script&gt;<br />&lt;script src="./Forms   Slate Admin 2.0_files/bootstrap.js"&gt;&lt;/script&gt;</p>
<p>&lt;script src="./Forms   Slate Admin 2.0_files/jquery.validate.js"&gt;&lt;/script&gt;</p>
<p>&lt;script src="./Forms   Slate Admin 2.0_files/Slate.js"&gt;&lt;/script&gt;</p>
<p>&lt;script src="./Forms   Slate Admin 2.0_files/demo.validate.js"&gt;&lt;/script&gt;</p>
<p><br />&lt;!-- Le HTML5 shim, for IE6-8 support of HTML5 elements --&gt;<br />&lt;!--[if lt IE 9]&gt;<br />  &lt;script src="http://html5shim.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;<br />&lt;![endif]--&gt;</p>
<p>&lt;style&gt;<br />#nav {<br />	top: 0;<br />	position: fixed;<br />	right: 0;<br />	left: 0;<br />	z-index: 1030;<br />	margin-bottom: 0;<br />}</p>
<p>#nav .container {<br />	height: 50px;<br />}</p>
<p>#content {<br />	margin-top: 72px;<br />}</p>
<p>#nav .divider-vertical {<br />xxxxxxxxxxbackground: black;<br />border-left: 1px solid #CCC;<br />width: 1px;</p>
<p>height:25px;<br />margin: 15px 9px;</p>
<p>}<br />&lt;/style&gt;<br />&lt;/head&gt;</p>
<p>&lt;body class=""&gt;<br /> 	<br />  </p>
<p><br />&lt;div id="nav"&gt;</p>
<p>	&lt;div class="container"&gt;</p>
<p>		&lt;div class="nav-collapse"&gt;<br />			<br />			&lt;ul class="nav"&gt;<br />		<br />				&lt;li class="nav-icon"&gt;<br />					&lt;a href="http://propelui.com/themes/slate/"&gt;<br />						&lt;i class="icon-home"&gt;&lt;/i&gt;<br />						&lt;span&gt;Home&lt;/span&gt;<br />					&lt;/a&gt;	    				<br />				&lt;/li&gt;<br />				<br />				&lt;li class="dropdown"&gt;					<br />					&lt;a href="javascript:;" class="dropdown-toggle" data-toggle="dropdown"&gt;<br />						&lt;i class="icon-th"&gt;&lt;/i&gt;<br />						Components<br />						&lt;b class="caret"&gt;&lt;/b&gt;<br />					&lt;/a&gt;	<br />				<br />					&lt;ul class="dropdown-menu"&gt;<br />						&lt;li&gt;&lt;a href="./Forms   Slate Admin 2.0_files/Forms   Slate Admin 2.0.html"&gt;Forms&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/ui-elements.html"&gt;UI Elements&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/grid.html"&gt;Grid Layout&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/tables.html"&gt;Tables&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/widgets.html"&gt;Widget Boxes&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/charts.html"&gt;Charts&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/tabs.html"&gt;Tabs &amp;amp; Accordion&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/buttons.html"&gt;Buttons&lt;/a&gt;&lt;/li&gt;<br />					&lt;/ul&gt;    				<br />				&lt;/li&gt;<br />				<br />				&lt;li class="dropdown"&gt;					<br />					&lt;a href="javascript:;" class="dropdown-toggle" data-toggle="dropdown"&gt;<br />						&lt;i class="icon-copy"&gt;&lt;/i&gt;<br />						Sample Pages<br />						&lt;b class="caret"&gt;&lt;/b&gt;<br />					&lt;/a&gt;	<br />				<br />					&lt;ul class="dropdown-menu"&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/invoice.html"&gt;Invoice&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/faq.html"&gt;FAQ&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/pricing.html"&gt;Pricing Plans&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/gallery.html"&gt;Image Gallery&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/wizard.html"&gt;Wizard&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/reports.html"&gt;Reports&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/calendar.html"&gt;Calendar&lt;/a&gt;&lt;/li&gt;<br />					&lt;/ul&gt;    				<br />				&lt;/li&gt;<br />				<br />				&lt;li class="dropdown"&gt;					<br />					&lt;a href="javascript:;" class="dropdown-toggle" data-toggle="dropdown"&gt;<br />						&lt;i class="icon-external-link"&gt;&lt;/i&gt;<br />						Other Pages<br />						&lt;b class="caret"&gt;&lt;/b&gt;<br />					&lt;/a&gt;	<br />				<br />					&lt;ul class="dropdown-menu"&gt;							<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/login.html"&gt;Login&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/signup.html"&gt;Signup&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/error.html"&gt;Error&lt;/a&gt;&lt;/li&gt;<br />						&lt;li class="dropdown"&gt;<br />							&lt;a href="javascript:;"&gt;<br />								Dropdown Menu									<br />								&lt;i class="icon-chevron-right sub-menu-caret"&gt;&lt;/i&gt;<br />							&lt;/a&gt;<br />							<br />							&lt;ul class="dropdown-menu sub-menu"&gt;<br />		                        &lt;li&gt;&lt;a href="javascript:;"&gt;Dropdown #1&lt;/a&gt;&lt;/li&gt;<br />		                        &lt;li&gt;&lt;a href="javascript:;"&gt;Dropdown #2&lt;/a&gt;&lt;/li&gt;<br />		                        &lt;li&gt;&lt;a href="javascript:;"&gt;Dropdown #3&lt;/a&gt;&lt;/li&gt;<br />		                        &lt;li&gt;&lt;a href="javascript:;"&gt;Dropdown #4&lt;/a&gt;&lt;/li&gt;<br />		                    &lt;/ul&gt;<br />						&lt;/li&gt;<br />					&lt;/ul&gt;    				<br />				&lt;/li&gt;<br />				<br />				<br />			<br />			&lt;/ul&gt;<br />			<br />			<br />			&lt;ul class="nav pull-right"&gt;<br />&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/invoice.html"&gt;My Profile&lt;/a&gt;&lt;/li&gt;<br />		&lt;li class="divider-vertical hidden-phone hidden-tablet"&gt;&lt;/li&gt;<br />				&lt;li class="dropdown"&gt;					<br />					&lt;a href="javascript:;" class="dropdown-toggle" data-toggle="dropdown"&gt;<br />						&lt;i class="icon-user"&gt;&lt;/i&gt;<br />						Administration<br />						&lt;b class="caret"&gt;&lt;/b&gt;<br />					&lt;/a&gt;	<br />				<br />					&lt;ul class="dropdown-menu"&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/invoice.html"&gt;My Profile&lt;/a&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/faq.html"&gt;Change Password&lt;/a&gt;&lt;/li&gt;<br />						&lt;li class="divider"&gt;&lt;/li&gt;<br />						&lt;li&gt;&lt;a href="http://propelui.com/themes/slate/calendar.html"&gt;Logout&lt;/a&gt;&lt;/li&gt;<br />					&lt;/ul&gt;    				<br />				&lt;/li&gt;<br />				<br />			&lt;/ul&gt;<br />		<br />		&lt;/div&gt; &lt;!-- /.nav-collapse --&gt;<br />	<br />	&lt;/div&gt; &lt;!-- /.container --&gt;<br />	<br />&lt;/div&gt; &lt;!-- /#nav --&gt;</p>
<p><br />&lt;div id="content"&gt;<br />		<br />	&lt;div class="container"&gt;<br />		<br />		&lt;div id="page-title" class="clearfix"&gt;<br />			<br />			&lt;ul class="breadcrumb"&gt;<br />			  &lt;li&gt;<br />			    &lt;a href="http://propelui.com/themes/slate/"&gt;Home&lt;/a&gt; &lt;span class="divider"&gt;/&lt;/span&gt;<br />			  &lt;/li&gt;<br />			  &lt;li&gt;<br />			    &lt;a href="http://propelui.com/themes/slate/forms.html#"&gt;Components&lt;/a&gt; &lt;span class="divider"&gt;/&lt;/span&gt;<br />			  &lt;/li&gt;<br />			  &lt;li class="active"&gt;Form Styles&lt;/li&gt;<br />			&lt;/ul&gt;<br />			<br />		&lt;/div&gt; &lt;!-- /.page-title --&gt;<br />		<br />		&lt;div class="row"&gt;<br />			<br />			&lt;div class="span8"&gt;<br />	      		<br />	      		&lt;div id="horizontal" class="widget widget-form"&gt;<br />	      			<br />	      			&lt;div class="widget-header"&gt;	      				<br />	      				&lt;h3&gt;<br />	      					&lt;i class="icon-pencil"&gt;&lt;/i&gt;<br />	      					Horizontal Layout	      					<br />      					&lt;/h3&gt;	<br />      				&lt;/div&gt; &lt;!-- /widget-header --&gt;<br />					<br />					&lt;div class="widget-content"&gt;<br />						<br />						&lt;form class="form-horizontal"&gt;<br />					        &lt;fieldset&gt;</p>
<p>&nbsp;</p>
<p>					          &lt;div class="form-actions"&gt;<br />					            &lt;button type="submit" class="btn btn-primary btn-large"&gt;Save changes&lt;/button&gt;<br />					            &lt;button class="btn btn-large"&gt;Cancel&lt;/button&gt;<br />					          &lt;/div&gt;</p>
<p>&nbsp;</p>
<p>					        &lt;/fieldset&gt;<br />					      &lt;/form&gt;	<br />						<br />					&lt;/div&gt; &lt;!-- /widget-content --&gt;<br />						<br />				&lt;/div&gt;	<br />				<br />	<br />		    &lt;/div&gt;<br />		    <br />      		 		<br />		&lt;/div&gt; &lt;!-- /row --&gt;<br />		<br />		<br />		<br />		<br />	&lt;/div&gt; &lt;!-- /.container --&gt;<br />	<br />&lt;/div&gt; &lt;!-- /#content --&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&lt;/body&gt;&lt;/html&gt;</p>]]></description></item><item><title>jQuery手动提交表单</title><link>http://www.cnblogs.com/eastson/archive/2012/09/28/2707269.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 28 Sep 2012 07:30:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/28/2707269.html</guid><description><![CDATA[<p>you could use the&nbsp;<a href="http://api.jquery.com/serialize/" rel="nofollow">.serialize()</a>&nbsp;method :</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">var</span> queryString = $('#myForm').serialize();</pre>
</div>
<p class="default prettyprint">which would give you something like :</p>
<div class="cnblogs_code">
<pre>EventType=All&amp;KeywordBox=blablabla</pre>
</div>
<pre class="default prettyprint"><code><span class="pln">&nbsp;</span></code></pre>
<p>you could then load the page you want like so :</p>
<div class="cnblogs_code">
<pre>document.location ='http://myschool.com/event.aspx?'+queryString;</pre>
</div>
<p class="default prettyprint">Summary :</p>
<div class="cnblogs_code">
<pre>&lt;formid="myForm" method="GET"&gt;&lt;div class="EventRadios" style="color:#574319;font:13px Trebuchet"&gt;
    &lt;input type="radio" name="EventType" value="All"/&gt;All &amp;nbsp;  
    &lt;input type="radio" name="EventType" value="Class"/&gt;Class &amp;nbsp;  
    &lt;input type="radio" name="EventType" value="Event"/&gt;Event &amp;nbsp;    
    &lt;input type="radio" name="EventType" value="Support Group"/&gt;Support Group &amp;nbsp;&amp;nbsp;&lt;br/&gt;&lt;br/&gt;
&lt;/div&gt;
&lt;input name="KeywordBox" class="BasicSearchInputBox" type="text" value="Keyword Search..."/&gt;
&lt;div class="searchBtnHolder"&gt;&lt;a class="searchButton" href="#"type="submit"&gt;&lt;span&gt;Search&lt;/span&gt;&lt;/a&gt;&lt;/div&gt;&lt;/form&gt;
&lt;scripttype="text/javascript"&gt;<span style="color: #000000;">
  $(</span>'.searchButton').click(<span style="color: #0000ff;">function</span><span style="color: #000000;">(ev){

    </span><span style="color: #0000ff;">var</span> queryString = $('#myForm'<span style="color: #000000;">).serialize();
    document.location </span>='http://myschool.com/event.aspx?'+<span style="color: #000000;">queryString;
  });
</span>&lt;/script&gt;</pre>
</div>
<p>&nbsp;</p>
<p>simple answer to your question is grab all your form value and make url string with your value and send to location.href = " your url + value ";</p>
<div class="cnblogs_code">
<pre>$(".searchButton").click(<span style="color: #0000ff;">function</span><span style="color: #000000;">(){

    </span><span style="color: #0000ff;">var</span> radioVal =  $('input:radio[name=EventType]:checked'<span style="color: #000000;">).val();
    </span><span style="color: #0000ff;">var</span> textVal = $("input:text[name=keywordBox]"<span style="color: #000000;">).val();

    value </span>="r="+ radioVal +"&amp;t="+<span style="color: #000000;"> textVal;
    location.href </span>="yourURL"+<span style="color: #000000;"> value;

});</span></pre>
</div>
<p>&nbsp;</p>
<p>原文地址：<a href="http://stackoverflow.com/questions/8645861/add-querystring-to-url-on-buttonclick-jquery">http://stackoverflow.com/questions/8645861/add-querystring-to-url-on-buttonclick-jquery</a></p>]]></description></item><item><title>为什么使用框架?</title><link>http://www.cnblogs.com/eastson/archive/2012/09/27/2705373.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 27 Sep 2012 03:48:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/27/2705373.html</guid><description><![CDATA[<p>我们是由于效率和易用性的考虑才产生框架。框架能节省开发时间。框架强制使用公共的约定，因此它能有效地解决一些共有的问题，比如页面渲染，assert判断，安全或者应用配置等。这些共有的问题有个共通的特性是会在每个web应用上都用到。</p>
<p>框架是非常好的，它能让决定更连贯。框架能避免我们写一大堆自定义模块来实现这些性能，我们所需要做的就是将这些共用模块放在框架中实现。框架节省了我们不少的时间和精力，并且让扩展变得更容易。但是这也是问题的根本所在。</p>
<p>由于框架能在我们做代码决策的时候提供很多的帮助，因此我们就变得懒了起来。我们不去考虑如何使用抽象思维搭建一个干净清晰的系统，不去考虑最后的代码是否干净清晰，却依赖着框架来替我们实现这些需求。</p>
<p>&nbsp;</p>
<p><strong>对锤子来说，所有事物都是钉子</strong></p>
<p>Abraham Kaplan说过的一句话能最好地控诉工具的缺点：把锤子给一个小孩，他会用锤子槌遇到的所有事物</p>
<p>当把这个道理用在框架上的时候，我们就是工具确定的牺牲者。当我们遇到需求不是很符合框架，我们就会犯懒。我们就会按照框架既定的方法来解决我们的问题。因为使用框架既定的方法来解决方法是最简单的，这时候我们已经忽略了如何设计对未来扩展等需求最好的代码了。</p>
<p>这就是衡量你是否更职业的时候了，交付对未来扩展最好的代码而不是交付最容易实现的代码。是为了以后的需求更好的设计你的代码还是让以后的人做需求的时候再考虑，这就是程序员的责任感问题了。作为一个更职业的开发者，我们必须不依赖框架独立思考。</p>
<p>&nbsp;</p>
<p><strong>这就是你的错</strong></p>
<p>是不是经常听到某人在抱怨某个框架？我已经听见好多人抱怨过Rails了：&ldquo;Rails应用总是糟糕的结构&rdquo;或者&ldquo;Rails测试总是这么慢&rdquo;。最开始，我也曾经这么认为。但是现在，每当我听到这些抱怨的时候，我就会意识到其实抱怨者是懒惰的。Rails，或者其他框架，只是一个工具而已，你要做的是控制它。把坏代码归咎于无生命的框架只能说明你的不专业。</p>
<p>&nbsp;</p>
<p><strong>选择正确的工具，或者正确地使用工具</strong></p>
<p>使用框架开发也是在写代码。作为一个开发者，你有权利选择如何实现需求。人们都希望能开发出干净整洁的代码，那样的话使用面向对象思想和合理的抽象就是非常重要的了。要开发出好的代码，我们必须仔细考虑我们的代码设计，特别是当使用框架的时候。</p>
<p>&nbsp;</p>
<p><strong>决定变得更专业</strong></p>
<p>我们必须根据基本的需求来选择工具。框架确实能做很多事情，并且需求会决定整个代码结构。有的时候框架会很适合某个需求。但是当框架不适合某些需求的时候，你就有责任为了代码的清晰和干净修改框架或者封装框架。</p>
<p>&nbsp;</p>
<p>原文地址：<a href="http://developer.51cto.com/art/201209/357962.htm" target="_blank">http://developer.51cto.com/art/201209/357962.htm</a></p>]]></description></item><item><title>揭秘BYOD五大隐藏成本</title><link>http://www.cnblogs.com/eastson/archive/2012/09/26/2703900.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 26 Sep 2012 06:12:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/26/2703900.html</guid><description><![CDATA[<p><span>越来越多的员工想要通过自己的iPhone、iPad或是Android设备来完成工作，CIO们可能会以为这样节省了公司开支，但事实并非如此。CIO们常常看到的不是BYOD节省成本，而是花费更多，以下是BYOD背后的五大隐藏成本。</span></p>
<p><span>&nbsp;</span></p>
<p>对此，Aberdeen分析师Hyoun Park表示，企业只看到了私人设备带来的生产力而忽略了它的成本。</p>
<p>移动私人设备可以帮助CIO跳出定期购买硬件的周期，至少可以抵消一部分成本。</p>
<p>思科从BYOD中节省了17%-22%的成本。Lance Perry，思科的IT部门负责人，表示&ldquo;我们不用支付费用，员工工作也更快乐，这不是一件美好的事吗？&rdquo;</p>
<p>事实是思科只是例外，而不是规律。CIO们常常看到的不是BYOD节省成本，而是花费更多，以下是BYOD背后的五大隐藏成本。</p>
<p>&nbsp;</p>
<p><strong>隐藏成本一：每月固定费用</strong></p>
<p>传统上，CIO的工作职责不包含很多移动设备，但随着BYOD的发展，CIO们不得不把这些纳入自己的工作范围，这意味着CIO们很可能不熟悉无线费用管理费用结构。Park表示，CIO们并没有看到BYOD的全部。</p>
<p>一家公司可以引入大量的智能手机，并获得最好的售后服务，但BYOD下，公司并没有这样的服务，当然这并不是最重要的，关键在于无线服务。公司如果选择自己购入移动设备，除了优质的服务外，还会有高速度的无线服务。</p>
<p>Aberdeen研究表明，公司采用自主购入移动设备方案在手机话费和数据服务上的花费约每人每月60美元，而BYOD是70美元。</p>
<p>&nbsp;</p>
<p><strong>隐藏成本二：报销费用</strong></p>
<p>看了上面的描述，许多CIO可能并不觉得BYOD费钱，因为就之前的调查结果而言，比起员工自带私人设备，相当于公司在自主购入移动设备上只花了每人每月10美元。由此，CIO们可以得出结论，BYOD反而省钱，然而并非如此。</p>
<p>Aberdeen显示，员工每月都将报销无线服务账单，一单大约18美元，由此计算，公司在BYOD下的花费变成了每人每月90美元。</p>
<p>值得注意的是，员工报销的可能不止无线服务账单，还有别的费用，这意味着公司为此付出的不仅是18美元。</p>
<p>&nbsp;</p>
<p><strong>隐藏成本三：安全、管理、数据丢失支出</strong></p>
<p>公司如果引入大量移动设备，可设计程序来自动化部署和管理移动设备，而在BYOD模式下，员工仅将一些私人设备的编号、手机号等输入公司系统。</p>
<p>Aberdeen并没有准确算出这中间的成本，然而，Park表示，管理这些私人设备让企业非常头痛。</p>
<p>管理这些私人设备意味着CIO们要引入更多的动设备管理解决方案和其他软件，甚至是一个虚拟（虚拟专用网络）层，&ldquo;管理成本和安全成本都将大大增加&rdquo;，Park说。技术服务公司Avanade的报告显示，因为BYOD，过半的公司报告遇到安全漏洞。</p>
<p>&nbsp;</p>
<p><strong>隐藏成本四：谁为技术支持买单</strong></p>
<p>在BYOD模式下，使用移动设备的是员工，故障问题也由自己解决，公司无法掌控，而当问题出现时需要追究责任，而当员工放弃使用私人设备后，他还需要大量时间把资料调整到公司的设备。</p>
<p><strong>&nbsp;</strong></p>
<p><strong>隐藏成本五：多平台</strong></p>
<p>BYOD意味着更多的平台开发应用程序和支持，由此产生更多的应用开发费用。</p>
<p>&nbsp;</p>
<p><strong>总结：</strong></p>
<p>由此我们可以得出BYOD模式部署起来并不便宜。</p>
<p><span>&nbsp;</span></p>
<p>原文地址：<a href="http://mobile.51cto.com/informatization-357554.htm" target="_blank">http://mobile.51cto.com/informatization-357554.htm</a></p>]]></description></item><item><title>HTTP_REFERER头的使用方法</title><link>http://www.cnblogs.com/eastson/archive/2012/09/25/2701598.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 25 Sep 2012 07:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/25/2701598.html</guid><description><![CDATA[<p><span>看UCHome和ECShop源码的时候，发现经常会用到$_SERVER['HTTP_REFERER']的值。HTTP&nbsp;REFERER是Header的一部分，当浏览器向WEB服务器发送请求的时候，一般会带上HTTP&nbsp;REFERER，告诉服务器我是从哪个页面链接过来的，服务器籍此可以获得一些信息用于处理。比如从我主页上链接到一个朋友那里，他的服务器就能够从HTTP&nbsp;REFERER中统计出每天有多少用户点击我主页上的链接访问他的网站。下面自己写了一个例子，来说明HTTP_REFERER的各种变化。</span><br /><br /><span>请将下面的代码保存到一个PHP文件中，文件名为referer.php：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">a </span><span style="color: #ff0000;">href</span><span style="color: #0000ff;">="?p=referer1"</span><span style="color: #ff0000;"> mce_href</span><span style="color: #0000ff;">="?p=referer1"</span><span style="color: #0000ff;">&gt;</span>referer1<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">a</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;"> |   
</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">a </span><span style="color: #ff0000;">href</span><span style="color: #0000ff;">="?p=referer2"</span><span style="color: #ff0000;"> mce_href</span><span style="color: #0000ff;">="?p=referer2"</span><span style="color: #0000ff;">&gt;</span>referer2<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">a</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;"> |   
</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">a </span><span style="color: #ff0000;">href</span><span style="color: #0000ff;">="?p=referer3"</span><span style="color: #ff0000;"> mce_href</span><span style="color: #0000ff;">="?p=referer3"</span><span style="color: #0000ff;">&gt;</span>referer3<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">a</span><span style="color: #0000ff;">&gt;</span>  
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">hr </span><span style="color: #0000ff;">/&gt;</span>  
<span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">php  
echo '[' . $_SERVER['HTTP_REFERER'] . ']';  
</span><span style="color: #0000ff;">?&gt;</span>  </pre>
</div>
<p>&nbsp;</p>
<p><span>在网址栏输入：http://localhost/hellophp/referer.php，执行结果如下：</span></p>
<div class="cnblogs_code">
<pre>[]                   </pre>
</div>
<p>&nbsp;</p>
<p><span>点击连接refer1，执行结果如下：</span></p>
<div class="cnblogs_code">
<pre>[http://localhost/hellophp/referer.php]  </pre>
</div>
<p>&nbsp;</p>
<p><span>点击连接refer2，执行结果如下：</span></p>
<div class="cnblogs_code">
<pre>[http://localhost/hellophp/referer.php?p=referer1]  </pre>
</div>
<p>&nbsp;</p>
<p><span>点击连接refer3，执行结果如下：</span></p>
<div class="cnblogs_code">
<pre>[http://localhost/hellophp/referer.php?p=referer2]  </pre>
</div>
<p>&nbsp;</p>
<p><span>点击连接refer1，执行结果如下：</span></p>
<div class="cnblogs_code">
<pre>[http://localhost/hellophp/referer.php?p=referer3]  </pre>
</div>
<p>&nbsp;</p>
<p><span>在网址栏输入：http://localhost/hellophp/referer.php?p=referer2，执行结果如下：</span></p>
<div class="cnblogs_code">
<pre>[]        </pre>
</div>
<p>&nbsp;</p>
<p><span>从上面的过程我们可以得出这样的结论：<strong>当从网址栏向WEB服务器发出请求时，$_SERVER['HTTP_REFERER']的值为空；当从链接向WEB服务器发出请求时，$_SERVER['HTTP_REFERER']的值就是发出请求的网址。</strong></span></p>]]></description></item><item><title>javascript:history的一些用法</title><link>http://www.cnblogs.com/eastson/archive/2012/09/25/2701593.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 25 Sep 2012 07:11:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/25/2701593.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">=button </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">=刷新 </span><span style="color: #ff0000;">onclick</span><span style="color: #0000ff;">="window.location.reload()"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">=button </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">=前进 </span><span style="color: #ff0000;">onclick</span><span style="color: #0000ff;">="window.history.go(1)"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">=button </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">=后退 </span><span style="color: #ff0000;">onclick</span><span style="color: #0000ff;">="window.history.go(-1)"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">=button </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">=前进 </span><span style="color: #ff0000;">onclick</span><span style="color: #0000ff;">="window.history.forward()"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">=button </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">=后退 </span><span style="color: #ff0000;">onclick</span><span style="color: #0000ff;">="window.history.back()"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">=button </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">=后退<span>+刷新</span> </span><span style="color: #ff0000;">onclick</span><span style="color: #0000ff;">="window.history.go(-1);window.location.reload()"</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p><span>Javascript刷新页面的几种方法：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">history.go(0)
location.reload()
location=location
location.assign(location)
document.execCommand('Refresh')
window.navigate(location)
location.replace(location)
document.URL=location.href</span></pre>
</div>
<p>&nbsp;</p>
<p>原文地址：<a href="http://www.mikebai.com/Article/2009-11/757.html" target="_blank">http://www.mikebai.com/Article/2009-11/757.html</a></p>]]></description></item><item><title>尚观Linux最佳入门高清视频教程033/133/253</title><link>http://www.cnblogs.com/eastson/archive/2012/09/24/2699888.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 24 Sep 2012 04:58:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/24/2699888.html</guid><description><![CDATA[<p align="left">【高清】Linux 最佳入门ULE112- RHCE033部分高清视频教程【尚观原创】 <br />
视频简介：高清RHCE033部分是RHCE考试中的基础部分，同时也是我们Linux入门的必 备学习资料。想学好Linux，就必须从基础做起，根基打好了，一切应付自如！尚观提供了 成套高清视频教程，只要你用心，尚观保证你一定能学好。 <br />
<br />
在线观看地址：<br />
<span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html">http://www.uplook.cn/video-Index-view-view921.html</a></span>&nbsp;</p>
<ul>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12218">ULE112-RHCE033-Linux-00-Linux学习建议1</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12219">ULE112-RHCE033-Linux-00-Linux学习建议2</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12220">ULE112-RHCE033-Linux-00-Unix Like系统学习建议</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12221">ULE112-RHCE033-Linux-00-入门建议</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12222">ULE112-RHCE033-Linux-01-RHEL4 Linux安装</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12223">ULE112-RHCE033-Linux-02-UNIX like系统的特点</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12224">ULE112-RHCE033-Linux-03-UNIX原则</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12225">ULE112-RHCE033-Linux-04-系统结构与终端控制台</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12226">ULE112-RHCE033-Linux-05-RHEL5 Linux安装</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12227">ULE112-RHCE033-Linux-06-1-Linux下寻求帮助</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12228">ULE112-RHCE033-Linux-06-2-文件相关命令初步</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12229">ULE112-RHCE033-Linux-06-3-系统命令初步</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12230">ULE112-RHCE033-Linux-06-4-用户及组管理初步</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12231">ULE112-RHCE033-Linux-06-5-文件属性</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12232">ULE112-RHCE033-Linux-07-文件夹属性及umask</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12233">ULE112-RHCE033-Linux-08-Linux编辑器及VIM初步</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12234">ULE112-RHCE033-Linux-09-Linux查找及压缩</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12235">ULE112-RHCE033-Linux-10-文本处理及正则表达式</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12236">ULE112-RHCE033-Linux-11-输入输出重定向及管道</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12237">ULE112-RHCE033-Linux-12-1-进程控制</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12238">ULE112-RHCE033-Linux-12-2-进程优先级前台后台</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12239">ULE112-RHCE033-Linux-13-1-bash变量快捷键</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12240">ULE112-RHCE033-Linux-13-2-bash运算符及启动脚本</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12241">ULE112-RHCE033-Linux-14-1-shell脚本及交互</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12242">ULE112-RHCE033-Linux-14-2-shell脚本流程控制</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12243">ULE112-RHCE033-Linux-14-3-shell脚本sed-awk</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12244">ULE112-RHCE033-Linux-15-Linux安装软件</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12245">ULE112-RHCE033-Linux-16-linux下X图形显示体系</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view921.html?video_id=12246">ULE112-RHCE033-Linux-basic-security-part1</a></span></li>


</ul>
<p align="left"><br />
【高清】Linux 最佳入门ULE115-RHCE133部分高清视频教程【原创】 <br />
视频简介：本视频系列是【尚观】优秀讲师为大家精心录制的RHCE&rdquo;成套&ldquo;&ldquo;高清&rdquo;视频
<br />
教程的第二部分。讲述的内容较RHCE033部分更深入一些，讲到了用户权限体系，文本控制台、Kernel编辑、modules 等！相信你学完了此部分，会对Linux本身有一个更加深入的认识！ <br />
<br />
在线观看地址：<br />
<span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html">http://www.uplook.cn/video-Index-view-view850.html</a></span>&nbsp;</p>
<ul>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2169">RH133-ULE115-1-0 RHEL kickstart 无人职守安装</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2170">RH133-ULE115-n1-1 tty ttyS0 pts termial</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2171">RH133-ULE115-1-2 autologin respawn</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2172">RH133-ULE115-2-1 用户权限体系及sudo</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2173">RH133-ULE115-2-2 screen 文本控制台的窗口操作</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2174">RH133-ULE115-3-1-syslog</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2175">RH133-ULE115-3-2-cron-anacron</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2176">RH133-ULE115-3-3-cups setenforcing</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2177">RH133-ULE115-4-1-grub grub troubleshooting</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2178">RH133-ULE115-4-2-grub kernel root</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2179">RH133-ULE115-4-3-initrd usb scsi</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2180">RH133-ULE115-4-4-init chkconfig rc</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2181">RH133-ULE115-5-1-proc sysctl</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2182">RH133-ULE115-5-2-mod tools</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2183">RH133-ULE115-5-3-modprobe.conf</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2184">RH133-ULE115-5-4-devices file dd</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2185">RH133-ULE115-6-1-network ifconfig ip route config</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2186">RH133-ULE115-6-2-network command troubleshooting</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2187">RH133-ULE115-6-3-dhclient nmap</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2188">RH133-ULE115-7-1-autofs nis ruser</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2189">RH133-ULE115-7-2-autofs nfs showmount</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2190">RH133-ULE115-8-kernel编译</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2191">RH133-ULE115-8-1-fdisk mkfs fsck</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2192">RH133-ULE115-8-2-file system</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2193">RH133-ULE115-8-3-mount usb fuser</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2194">RH133-ULE115-8-4-mount umount fuser</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2195">RH133-ULE115-8-5-fstab</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2196">RH133-ULE115-8-6-swap swapon</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2197">RH133-ULE115-9-modules</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2198">RH133-ULE115-10-1-user command shadow authconfig</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2199">RH133-ULE115-10-2-group setgid</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2200">RH133-ULE115-10-3-acl</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2201">RH133-ULE115-10-4-chattr</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2202">RH133-ULE115-11-1-mdadm software raid</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2203">RH133-ULE115-12-1-lvm extent reduce</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2204">RH133-ULE115-12-2-lvm reduce pvmove</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2205">RH133-ULE115-12-3-lvm backup</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view850.html?video_id=2206">RH133-ULE115-12-4-lvm snapshot</a></span></li>


</ul>
<p align="left"><br />
&nbsp;【高清】Linux 最佳入门ULE116-RHCE253部分高清视频教程【尚观原创】 <br />
视频简介：RHCE253高清视频教程是RHCE考试中最难也是在现实工作中经常用到的一部 分--"服务"！在本视频教程中尚观讲师为您结合实例，详细的讲述了 Sendmial,httpd、Squid 等一些常用的服务的安装与配置！通过RHCE考试绝对没有问题！ <br />
<br />
在线观看地址：<br />
<span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html">http://www.uplook.cn/video-Index-view-view913.html</a></span>&nbsp;</p>
<ul>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6139">RH253-ULE116-2-1-security system1</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6140">RH253-ULE116-2-1-xinetd security</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6141">RH253-ULE116-3-ntpdate ntp</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6142">RH253-ULE116-4-selinux chcon restorecon sealert</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6143">RH253-ULE116-5-1-iptables filter</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6144">RH253-ULE116-5-2-iptables snat masquerade</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6145">RH253-ULE116-5-3-iptables ipconntrack</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6146">RH253-ULE116-5-4-iptables squid</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6147">RH253-ULE116-5-5-iptables prerouting</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6148">RH253-ULE116-6-tcp_wrapper</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6149">RH253-ULE116-7-1-pam system login</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6150">RH253-ULE116-7-2-pam_access pam_listfile</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6151">RH253-ULE116-8-1-httpd main server auth</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6152">RH253-ULE116-8-2-httpd prefork worker</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6153">RH253-ULE116-8-3-httpd vhost</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6154">RH253-ULE116-8-4-httpd cgi</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6155">RH253-ULE116-8-5-squid</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6156">RH253-ULE116-8-6-mod ssl openssl</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6157">RH253-ULE116-9-1-bind rpm chroot caching nameserver</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6158">RH253-ULE116-9-2-bind dns system</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6159">RH253-ULE116-9-3-bind slave zone</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6160">RH253-ULE116-9-4-bind zone rndc</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6161">RH253-ULE116-9-5-windows nslookup</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6162">RH253-ULE116-9-6-bind PTR</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6163">RH253-ULE116-9-7-bind view round</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6164">RH253-ULE116-9-8-bind subzone</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6165">RH253-ULE116-10-1-pre ftp</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6166">RH253-ULE116-10-2-vsftp</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6167">RH253-ULE116-10-3-nfs</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6168">RH253-ULE116-13-0 rhel Email</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6169">RH253-ULE116-13-1 Email smtp</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6170">RH253-ULE116-13-2 Email体系结构</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6171">RH253-ULE116-13-3-1 sendmail监听IP</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6172">RH253-ULE116-13-3-2 sendmail localhostnames</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6173">RH253-ULE116-13-3-3 sendmail aliases</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6174">RH253-ULE116-13-3-4sendmail ip relay access</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6175">RH253-ULE116-13-4 sendmail bind dns</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6176">RH253-ULE116-13-4-1 sendmail 邮件互发的配置</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6177">RH253-ULE116-13-5 sendmail virtusertable</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6178">RH253-ULE116-13-6 sendmail sasl认证relay</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6179">RH253-ULE116-13-7 pop3 imap4 dovecot</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6180">RH253-ULE116-13-8 ssl pop3s dovecot</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6181">RH253-ULE116-13-11 alternatives sendmail postfix</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6182">RH253-ULE116-13-12 postfix监听所有IP并接外网邮件</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6183">RH253-ULE116-13-13 postfix smtp身份认证的配置</a></span></li>
<li><span style="text-decoration: underline;"><a href="http://www.uplook.cn/video-Index-view-view913.html?video_id=6184">RH253-ULE116-13-15 squirrelmail WebMail</a></span>&nbsp;</li>

</ul>]]></description></item><item><title>PHP中冒号、endif、endwhile、endfor使用介绍</title><link>http://www.cnblogs.com/eastson/archive/2012/09/24/2699717.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 24 Sep 2012 02:46:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/24/2699717.html</guid><description><![CDATA[<p><span>我们经常在wordpress一类博客程序的模板里面看到很多奇怪的PHP语法，比如：&nbsp;</span></p>
<div class="cnblogs_code">
<pre>&lt;?php <span style="color: #0000ff;">if</span>(<span style="color: #0000ff;">empty</span>(<span style="color: #800080;">$GET_</span>['a'])): ?&gt; 
&lt;font color="red"&gt;空的&lt;/font&gt; 
&lt;?php <span style="color: #0000ff;">endif</span>; ?&gt; </pre>
</div>
<p>&nbsp;</p>
<p><span>这些语法用得比较多的地方是在PHP和HTML混合页面的代码里面。好处如下：&nbsp;</span><br /><span>1.使HTML和PHP混合页面代码更加干净整齐。&nbsp;</span><br /><span>2.流程控制逻辑更清晰，代码更容易阅读。</span><span>写的太乱吧。&nbsp;</span><br /><span>3.一些从ASP等其他类basic语言家族转来的朋友，会更容易使用PHP。&nbsp;</span></p>
<p><span>&nbsp;</span></p>
<p><span><span>if语句的替代语法：&nbsp;</span></span></p>
<div class="cnblogs_code">
<pre>&lt;?php <span style="color: #0000ff;">if</span> (<span style="color: #800080;">$a</span> == 5): ?&gt; 
&lt;div&gt;等于5&lt;/div&gt; 
&lt;?php <span style="color: #0000ff;">elseif</span> (<span style="color: #800080;">$a</span> == 6): ?&gt; 
&lt;div&gt;等于5&lt;/div&gt; 
&lt;?php <span style="color: #0000ff;">else</span>: ?&gt; 
&lt;div&gt;不是5就是6&lt;/div&gt; 
&lt;?php <span style="color: #0000ff;">endif</span>; ?&gt; </pre>
</div>
<p>&nbsp;</p>
<p><span><span>while语句的替代语法：&nbsp;</span></span></p>
<div class="cnblogs_code">
<pre>&lt;?php <span style="color: #0000ff;">while</span> (expr): ?&gt; 
&lt;li&gt;循环点什么&lt;/li&gt; 
&lt;?php <span style="color: #0000ff;">endwhile</span>; ?&gt; </pre>
</div>
<p>&nbsp;</p>
<p><span><span>for语句的替代语法：&nbsp;</span></span></p>
<div class="cnblogs_code">
<pre>&lt;?php <span style="color: #0000ff;">for</span> (expr1; expr2; expr3): ?&gt; 
&lt;li&gt;循环点什么&lt;/li&gt; 
&lt;?php <span style="color: #0000ff;">endfor</span>; ?&gt; </pre>
</div>
<p>&nbsp;</p>
<p><span><span>foreach语句的替代语法：&nbsp;</span></span></p>
<div class="cnblogs_code">
<pre>&lt;?php <span style="color: #0000ff;">foreach</span> (expr1): ?&gt; 
&lt;li&gt;循环点什么&lt;/li&gt; 
&lt;?php <span style="color: #0000ff;">endforeach</span>; ?&gt; </pre>
</div>
<p>&nbsp;</p>
<p><span><span>switch语句的替代语法：&nbsp;</span></span></p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php 
</span><span style="color: #0000ff;">switch</span> (<span style="color: #800080;">$i</span>): 
<span style="color: #0000ff;">case</span> 0: 
<span style="color: #0000ff;">echo</span> "i equals 0"<span style="color: #000000;">; 
</span><span style="color: #0000ff;">break</span><span style="color: #000000;">; 
</span><span style="color: #0000ff;">case</span> 1: 
<span style="color: #0000ff;">echo</span> "i equals 1"<span style="color: #000000;">; 
</span><span style="color: #0000ff;">break</span><span style="color: #000000;">; 
</span><span style="color: #0000ff;">case</span> 2: 
<span style="color: #0000ff;">echo</span> "i equals 2"<span style="color: #000000;">; 
</span><span style="color: #0000ff;">break</span><span style="color: #000000;">; 
</span><span style="color: #0000ff;">default</span>: 
<span style="color: #0000ff;">echo</span> "i is not equal to 0, 1 or 2"<span style="color: #000000;">; 
</span><span style="color: #0000ff;">endswitch</span><span style="color: #000000;">; 
</span>?&gt; </pre>
</div>]]></description></item><item><title>面对业务开拓重任，CIO们普遍显得缺乏信心</title><link>http://www.cnblogs.com/eastson/archive/2012/09/23/2699092.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 23 Sep 2012 11:03:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/23/2699092.html</guid><description><![CDATA[<p><em>多年来的业务磨练已经使首席信息官积累了丰富的企业IT及运营知识，但面对充分发挥技术人员专长、推动利润持续增长并开展商业创新等课题，大多数IT领导者仍然显得缺乏信心。</em></p>
<p>由于职责所在，CIO们往往需要积累大量跨专业经验，并切实参与到企业中各部门的管理及运营流程中去。虽然多年来的业务磨练已经让他们积累了丰富的企业IT及运营知识，但面对充分发挥技术专长、推动利润持续增长并开展商业创新等课题，大多数IT领导者仍然显得缺乏信心。</p>
<p>Forrester研究公司副总裁兼研究主管Khalid Kark在一次采访中表达了上述观点。在他看来，与大多数企业部门管理者不同，CIO们对于整套业务流程及其管理机制都了如指掌。然而尽管基础知识相当扎实，但CIO们往往只擅长用这类经验指导IT实施工作进而满足业务策略需要。Kark补充称，很少有CIO能够创造机会帮助企业推动业务创新。</p>
<p>之所以如此消极，是因为大多数CIO都没有意识到企业业务增长也可以成为他们职权范围内的一项目标。&ldquo;CIO们把自己视为纯粹的技术管理者，他们其实缺乏足够的信心，认为自己很难胜任企业领导者的角色，&rdquo;Kark在上周四于新加坡举行的Forrester亚太周边地区CIO峰会上向ZDNet特派记者解释道。</p>
<p>无论出发点如何，这种观念必须得到扭转，他强调称。与其充当一位毫无亮点的业务参与者，CIO更应该扮演企业事务的共同缔造者&mdash;&mdash;以积极主动的姿态寻找业务解决方案，并专注于帮助机构持续创新。&ldquo;当企业面临发展战略决策的紧要关头，CIO必须以领导者的身份在高管层面上拿出自己的意见，&rdquo;他指出。</p>
<p>除此之外，他们也不能再仅仅满足于业务应与IT紧密合作、技术要为运营提供助力等空话套话。在瞬息万变的商业领域，紧跟时代步伐是保证企业长久生命力的必要前提。Kark这位浸淫研究事务多年的技术总监表示，企业对于CIO在业务领域的表现寄予重望，CIO也必须用技术武器帮助东家克制竞争对手、赢得市场份额。</p>
<p>时至今日，CIO职务的角色转变已经势在必行。大家必须从游离于团队之外的乐团指挥切换为参与其中的爵士音乐家&mdash;&mdash;前者注重精度与控制力，后者则更关心即兴发挥、创意思维以及团队协作，Kark告诉我们。</p>
<p>Forrester研究公司CIO小组副总裁兼首席分析师John Brand对上述观点深表赞同。他认为，随着技术与业务部门的传统定位被新时代的发展节奏与规模所打破，CIO们必须准备好从幕后事务处理者转型为台前商业执行者，IT部门也需要做好同样的发展预期。</p>
<p>在本次CIO峰会上，Brand公开指出优秀称职的CIO需要具备跨越业务与技术领域的多种管理能力。他还强调，CIO职位的存在不只是为了缓冲业务与技术之间的鸿沟，而更应该作为沟通二者的纽带。</p>
<p>&nbsp;</p>
<p><strong>亚洲企业领导者面对风险态度更加积极</strong></p>
<p>亚洲各企业的CIO们与西方同行相比态度更加积极开放，根据Kark的观察，这种健康的心态源自相对较轻的传统IT系统负担。当然，这并不是说亚洲企业在实施转型及应对变化时更为轻松。&ldquo;由于经验比较欠缺，因此亚洲企业的CIO们在创新过程中需要面临更大的商业风险，&rdquo;他表示。</p>
<p>有时候，创新项目的发展路线缺乏成熟的商业案例或现成的实施规划，这就使得企业很难准确量化其投资回报率（简称ROI）。举例来说，CIO们可能向决策层提出一套私有云部署方案，整个项目将耗资500万美元，但他们能够用来说服大家的理由仅仅是&ldquo;请组织相信我&rdquo;，Kark无奈地指出。</p>
<p>在这种情况下，良好的业绩记录与个人声誉就变得至关重要。CIO们很难通过大动作、大项目将自己的构想一蹴而就。恰恰相反，他们得从当前已经存在的业务入手，在提高现有技术产出的同时建立长远的发展眼光，并逐步将创新流程及服务引入日常业务，他建议道。</p>
<p>他同时补充称，值得优先处理的执行事务包括优化现有IT基础设施、提高技术运作效率以及实现商业用户容易解决的客观需求等等。</p>
<p>&nbsp;</p>
<p>原文名：<a href="http://www.zdnet.com/cios-lack-confidence-to-be-biz-leader-7000003827/" target="_blank">CIOs lack confidence to be biz leader</a></p>]]></description></item><item><title>Fixed Table Header jQuery Plug-in</title><link>http://www.cnblogs.com/eastson/archive/2012/09/22/2698496.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 22 Sep 2012 14:16:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/22/2698496.html</guid><description><![CDATA[<p>This plug-in depends on having a table that has a &lt;thead&gt; and &lt;tbody&gt; tag.</p>
<p>To get the plug-in working all you you need to do is run the&nbsp;<code>fixedHeader()</code>&nbsp;function on the selector for your table.</p>
<div class="cnblogs_code">
<pre>$("#dataset").fixedHeader();</pre>
</div>
<pre></pre>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012092222152596.png" alt="" /></p>
<p>&nbsp;</p>
<p>原文地址：<a href="http://ul2.bgsu.edu/labs/fixed-header/" target="_blank">http://ul2.bgsu.edu/labs/fixed-header/</a></p>]]></description></item><item><title>‘Scroll to Top’ jQuery Solutions</title><link>http://www.cnblogs.com/eastson/archive/2012/09/22/2698475.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 22 Sep 2012 13:49:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/22/2698475.html</guid><description><![CDATA[<p class="entry-title"><a href="http://www.flycan.com/article/javascript/jquery-animate-go-top-863.html" target="_blank">jQuery 入門教學 &ndash; 滑動式 go Top</a></p>
<p class="single-title"><a href="http://www.net-kit.com/7-scroll-to-top-jquery-solutions/" target="_blank">7 &lsquo;Scroll to Top&rsquo; jQuery Solutions</a></p>
<p><a href="http://webdesignandsuch.com/10-jquery-back-to-top-link-solutions-for-websites/" target="_blank">10 jQuery &lsquo;Back to Top&rsquo; link Solutions for Websites</a></p>]]></description></item><item><title>jquery实现置顶和置底特效</title><link>http://www.cnblogs.com/eastson/archive/2012/09/22/2698461.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 22 Sep 2012 13:36:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/22/2698461.html</guid><description><![CDATA[<div>Jquery实现置顶和置底特效是一款非常实用的效果，当你网站的内容多的时候，它就可以用上场了，有了它之后你就不用滚动你的鼠标就可以实让页面的滚动条滚动到顶部和底部，用法很简单，不说了，看效果吧</div>
<div>&nbsp;</div>
<div>效果如下：</div>
<div>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012092221342721.png" alt="" /></p>
<p>主要代码如下：</p>
<div class="cnblogs_code">
<pre>$(<span style="color: #0000ff;">function</span><span style="color: #000000;">(){  
    $(</span>"#updown").css("top",window.screen.availHeight/2-100+"px");  
    $(window).scroll(<span style="color: #0000ff;">function</span><span style="color: #000000;">() {         
        </span><span style="color: #0000ff;">if</span>($(window).scrollTop() &gt;= 100<span style="color: #000000;">){  
            $(</span>'#updown').fadeIn(300<span style="color: #000000;">);   
        }</span><span style="color: #0000ff;">else</span><span style="color: #000000;">{      
            $(</span>'#updown').fadeOut(300<span style="color: #000000;">);      
        }    
    });  
    $(</span>'#updown .up').click(<span style="color: #0000ff;">function</span>(){$('html,body').animate({scrollTop: '0px'}, 800<span style="color: #000000;">);});  
    $(</span>'#updown .down').click(<span style="color: #0000ff;">function</span>(){$('html,body').animate({scrollTop: document.body.clientHeight+'px'}, 800<span style="color: #000000;">);});  
}); </span></pre>
</div>
<p>&nbsp;</p>
<div><a href="http://www.jq-school.com/tool/32A/demo.html" target="_blank">在线演示</a>&nbsp; &nbsp;&nbsp;<a href="http://www.jq-school.com/DownLoad.aspx?id=38" target="_blank">打包下载</a></div>
<div>&nbsp;</div>
<div>原文地址：<a href="http://www.jq-school.com/Detail.aspx?id=38" target="_blank">http://www.jq-school.com/Detail.aspx?id=38</a></div>
</div>]]></description></item><item><title>Twitter Bootstrap 框架</title><link>http://www.cnblogs.com/eastson/archive/2012/09/20/2695401.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 20 Sep 2012 08:15:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/20/2695401.html</guid><description><![CDATA[<p><span>Bootstrap是Twitter推出的一个开源的用于前端开发的工具包。它由Twitter的设计师</span><a href="http://www.markdotto.com/" target="_blank">Mark Otto</a><span>和</span><a href="http://hellomynameisjacob.com/" target="_blank">Jacob Thornton</a><span>合作开发，是一个CSS/HTML框架。Bootstrap提供了优雅的HTML和CSS规范，它即是由动态CSS语言Less写成，与CSS框架</span><a href="http://www.blueprintcss.org/" target="_blank">Blueprint</a><span>存在很多相似之处。Bootstrap一经推出后颇受欢迎，一直是GitHub上的热门开源项目，包括NASA的</span><a href="http://code.nasa.gov/" target="_blank">code.nasa.gov</a><span>和MSNBC（微软全国广播公司）的</span><a href="http://www.breakingnews.com/" target="_blank">Breaking News</a><span>都使用了该项目。&nbsp;</span><br /><br /><a href="https://github.com/twitter/bootstrap/" target="_blank">Bootstrap 2.0</a><span>的一个重大改进是添加了响应设计特性，在1.0中它并不支持，这让很多开发人员抱怨。而且为了提供更好地针对移动设备的响应式设计方案，Bootstrap 2.0采用了更为灵活的12栏网格布局。此外，它还更新了一些进度栏以及可定制的图片缩略图，并增加了一些新样式。值得关注的是，Bootstrap是一个非常轻量级的框架，2.0在压缩后也只有10KB。&nbsp;</span><br /><br /><span>更多详细信息请参考Twitter的</span><a href="http://twitter.github.com/bootstrap/" target="_blank">官方指南</a><span>和</span><a href="http://twitter.github.com/bootstrap/examples.html" target="_blank">演示示例</a><span>。&nbsp;</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012092016151736.jpg" alt="" /></p>]]></description></item><item><title>Superfish - jQuery菜单插件</title><link>http://www.cnblogs.com/eastson/archive/2012/09/19/2693337.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 19 Sep 2012 02:49:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/19/2693337.html</guid><description><![CDATA[<p><span>Superfish是Suckerfish菜单样式的加强版。两者都是基于jQuery,结合现有纯CSS级联下拉菜单，还增加了以下这些网站管理员急需的功能。&nbsp;</span><br /><span>1.Superfish样式在IE 6支持悬停(hover属性），增加的默认类为&rdquo;sfHover&rdquo;，你也可以改变类名。&nbsp;</span><br /><span>2.鼠标移动的延时功能。为了更方便解决鼠标存在问题的朋友，默认延时为800毫秒，你也可以更改延时时间。&nbsp;</span><br /><span>3.子菜单以动画显示。显示是淡入淡出效果。淡入淡出的效果（如速度）也是可以自己设定的。默认为正常（normal）。</span><br /><span>4.菜单和子菜单可设定为显示或不显示。&nbsp;</span><br /><span>5.支持hoverIntent插件，Superfish自动查看是否含有hoverIntent插件，在有hoverIntent插件的情况下执行hoverIntent而忽视淡入淡出效果。如果基于某种原因在你使用superfish时不想使用hoverIntent，将disableHI设置为&ldquo; true&rdquo;。&nbsp;</span><br /><span>6.显示是否含有子菜单，可动过菜单添加一张小图片，你也可用通过改变&ldquo;autoArrows&rdquo;值来设定是否自动弹出子菜单。&nbsp;</span><br /><span>7.阴影效果，仅支持最新浏览器。在IE6下没什么效果。&nbsp;</span><br /><span>8.可突出显示当前所在页。</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012091910491112.png" alt="" /></p>
<p>下载地址：<a href="http://users.tpg.com.au/j_birch/plugins/superfish/" target="_blank">http://users.tpg.com.au/j_birch/plugins/superfish/</a></p>
<p><span>文档地址：<a href="http://users.tpg.com.au/j_birch/plugins/superfish/#getting-started" target="_blank">http://users.tpg.com.au/j_birch/plugins/superfish/#getting-started</a></span></p>]]></description></item><item><title>MySQL常用管理命令</title><link>http://www.cnblogs.com/eastson/archive/2012/09/17/2688498.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 17 Sep 2012 04:01:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/17/2688498.html</guid><description><![CDATA[<p>修改某个MySQL用户的密码：</p>
<div class="cnblogs_code">
<pre># mysqladmin -h localhost -u root -p password xxx</pre>
</div>]]></description></item><item><title>为iptables添加HTTP和MySQL规则</title><link>http://www.cnblogs.com/eastson/archive/2012/09/17/2688433.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 17 Sep 2012 03:25:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/17/2688433.html</guid><description><![CDATA[<p>CentOS默认的iptables规则除了允许SSH(端口22)连进来以外，其它都被禁止。</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">cat</span> /etc/sysconfig/<span style="color: #000000;">iptables
# Firewall configuration written by system</span>-config-<span style="color: #000000;">firewall
# Manual customization of this </span><span style="color: #0000ff;">file</span><span style="color: #000000;"> is not recommended.
</span>*<span style="color: #000000;">filter
:INPUT ACCEPT [</span><span style="color: #800080;">0</span>:<span style="color: #800080;">0</span><span style="color: #000000;">]
:FORWARD ACCEPT [</span><span style="color: #800080;">0</span>:<span style="color: #800080;">0</span><span style="color: #000000;">]
:OUTPUT ACCEPT [</span><span style="color: #800080;">0</span>:<span style="color: #800080;">0</span><span style="color: #000000;">]
</span>-A INPUT -m state --state ESTABLISHED,RELATED -<span style="color: #000000;">j ACCEPT
</span>-A INPUT -p icmp -<span style="color: #000000;">j ACCEPT
</span>-A INPUT -i lo -<span style="color: #000000;">j ACCEPT
</span>-A INPUT -m state --state NEW -m tcp -p tcp --dport <span style="color: #800080;">22</span> -<span style="color: #000000;">j ACCEPT
</span>-A INPUT -j REJECT --reject-with icmp-host-<span style="color: #000000;">prohibited
</span>-A FORWARD -j REJECT --reject-with icmp-host-<span style="color: #000000;">prohibited
COMMIT</span></pre>
</div>
<p>&nbsp;</p>
<p>为了允许HTTP(端口80)和MySQL(端口3309)能够连进来，需要修改iptables规则，将这两个端口加进来。</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">cat</span> /etc/sysconfig/<span style="color: #000000;">iptables
# Firewall configuration written by system</span>-config-<span style="color: #000000;">firewall
# Manual customization of this </span><span style="color: #0000ff;">file</span><span style="color: #000000;"> is not recommended.
</span>*<span style="color: #000000;">filter
:INPUT ACCEPT [</span><span style="color: #800080;">0</span>:<span style="color: #800080;">0</span><span style="color: #000000;">]
:FORWARD ACCEPT [</span><span style="color: #800080;">0</span>:<span style="color: #800080;">0</span><span style="color: #000000;">]
:OUTPUT ACCEPT [</span><span style="color: #800080;">0</span>:<span style="color: #800080;">0</span><span style="color: #000000;">]
</span>-A INPUT -m state --state ESTABLISHED,RELATED -<span style="color: #000000;">j ACCEPT
</span>-A INPUT -p icmp -<span style="color: #000000;">j ACCEPT
</span>-A INPUT -i lo -<span style="color: #000000;">j ACCEPT
</span>-A INPUT -m state --state NEW -m tcp -p tcp --dport <span style="color: #800080;">22</span> -<span style="color: #000000;">j ACCEPT
</span>-A INPUT -m state --state NEW -m tcp -p tcp --dport <span style="color: #800080;">80</span> -<span style="color: #000000;">j ACCEPT
</span>-A INPUT -m state --state NEW -m tcp -p tcp --dport <span style="color: #800080;">3306</span> -<span style="color: #000000;">j ACCEPT
</span>-A INPUT -j REJECT --reject-with icmp-host-<span style="color: #000000;">prohibited
</span>-A FORWARD -j REJECT --reject-with icmp-host-<span style="color: #000000;">prohibited
COMMIT</span></pre>
</div>
<p>&nbsp;</p>
<p>最后，重启iptables就可以了。</p>
<div class="cnblogs_code">
<pre># service iptables restart</pre>
</div>]]></description></item><item><title>如何切换SELinux模式？</title><link>http://www.cnblogs.com/eastson/archive/2012/09/17/2688376.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 17 Sep 2012 02:57:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/17/2688376.html</guid><description><![CDATA[<p>SELinux默认运作在"Enforcing"模式。</p>
<div class="cnblogs_code">
<pre>$ sestatus -<span style="color: #000000;">v
SELinux status:                 enabled
SELinuxfs </span><span style="color: #0000ff;">mount</span>:                /<span style="color: #000000;">selinux
Current mode:                   enforcing
Mode from config </span><span style="color: #0000ff;">file</span><span style="color: #000000;">:          enforcing
Policy version:                 </span><span style="color: #800080;">24</span><span style="color: #000000;">
Policy from config </span><span style="color: #0000ff;">file</span>:        targeted</pre>
</div>
<p>&nbsp;</p>
<p>"Enforcing"模式下Zend Server CE运行会有问题，安装时需要切换到"Permissive"模式。</p>
<div class="cnblogs_code">
<pre># setenforce permissive</pre>
</div>
<p>&nbsp;</p>
<p>但这需要每次开机后手动执行，我们可以通过修改SELinux配置实现自动切换。</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">cat</span> /etc/selinux/<span style="color: #000000;">config 
# This </span><span style="color: #0000ff;">file</span><span style="color: #000000;"> controls the state of SELinux on the system.
# SELINUX</span>=<span style="color: #000000;"> can take one of these three values:
#     enforcing </span>-<span style="color: #000000;"> SELinux security policy is enforced.
#     permissive </span>-<span style="color: #000000;"> SELinux prints warnings instead of enforcing.
#     disabled </span>-<span style="color: #000000;"> No SELinux policy is loaded.
SELINUX</span>=<span style="color: #000000;">permissive
# SELINUXTYPE</span>=<span style="color: #000000;"> can take one of these two values:
#     targeted </span>-<span style="color: #000000;"> Targeted processes are protected,
#     mls </span>-<span style="color: #000000;"> Multi Level Security protection.
SELINUXTYPE</span>=targeted </pre>
</div>
<p>&nbsp;</p>
<p>参考文档：<a href="http://it.toolbox.com/blogs/surachart/switch-selinux-enforcing-mode-to-permissive-mode-33758" target="_blank">Switch SELinux "Enforcing" mode to "Permissive" mode</a></p>]]></description></item><item><title>为Git添加忽略文件</title><link>http://www.cnblogs.com/eastson/archive/2012/09/17/2688259.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 17 Sep 2012 01:56:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/17/2688259.html</guid><description><![CDATA[<p>用Eclipse PDT开发PHP时，Eclipse会自动创建几个系统文件。这些文件在Git提交时可以忽略。</p>
<p>&nbsp;</p>
<p>使用git status可以看到这些文件(.project, .buildpath和.settings)：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ git status
# On branch master
# Untracked files:
#   (use </span><span style="color: #800000;">"</span><span style="color: #800000;">git add &lt;file&gt;...</span><span style="color: #800000;">"</span> to include <span style="color: #0000ff;">in</span><span style="color: #000000;"> what will be committed)
#
#    .buildpath
#    .project
#    .settings</span>/<span style="color: #000000;">
#    includes</span>/<span style="color: #000000;">
#    index.php
nothing added to commit but untracked files present (use </span><span style="color: #800000;">"</span><span style="color: #800000;">git add</span><span style="color: #800000;">"</span> to track)</pre>
</div>
<p>&nbsp;</p>
<p>怎么忽略呢？方法是创建.gitignore文件，将需要略过的文件名和目录名添加到.gitignore：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">cat</span><span style="color: #000000;"> .gitignore 
.project
.buildpath
.settings</span></pre>
</div>
<p>&nbsp;</p>
<p>再用git status查看，就看不到这几个文件了：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ git status
# On branch master
# Untracked files:
#   (use </span><span style="color: #800000;">"</span><span style="color: #800000;">git add &lt;file&gt;...</span><span style="color: #800000;">"</span> to include <span style="color: #0000ff;">in</span><span style="color: #000000;"> what will be committed)
#
#    .gitignore
#    includes</span>/<span style="color: #000000;">
#    index.php
nothing added to commit but untracked files present (use </span><span style="color: #800000;">"</span><span style="color: #800000;">git add</span><span style="color: #800000;">"</span> to track)</pre>
</div>]]></description></item><item><title>开始一个GitHub.com项目</title><link>http://www.cnblogs.com/eastson/archive/2012/09/17/2688197.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 17 Sep 2012 01:13:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/17/2688197.html</guid><description><![CDATA[<p>首先，我们要在<a href="https://github.com/" target="_blank">GitHub.com</a>注册一个帐号，然后创建一个repository。然后参考文档《<a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/archive/2012/07/28/2612880.html" target="_blank">git push 403的解决方法</a>》。</p>
<p>&nbsp;</p>
<p><strong>Create a new repository on the command line</strong></p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">touch</span> README.<span style="color: #000000;">md
git init
git add README</span>.<span style="color: #000000;">md
git commit </span>-m "first commit"<span style="color: #000000;">
git remote add origin https</span>:<span style="color: #008000;">//</span><span style="color: #008000;">github.com/amonest/php-omnitrix.git</span>
git push -u origin master</pre>
</div>
<p>&nbsp;</p>
<p><strong>Push an existing repository from the command line</strong></p>
<div class="cnblogs_code">
<pre>git remote add origin https:<span style="color: #008000;">//</span><span style="color: #008000;">github.com/amonest/php-omnitrix.git</span>
git push -u origin master</pre>
</div>]]></description></item><item><title>Apache处理应用目录和网站目录分开存放的问题</title><link>http://www.cnblogs.com/eastson/archive/2012/09/15/2686114.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 15 Sep 2012 04:04:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/15/2686114.html</guid><description><![CDATA[<p>为什么有这样的需求呢？我是用Eclipse PDT写PHP的，工作区一般都放在~/workspace。Apache HTTPD的网站根目录在</p>
<p>&nbsp;</p>
<p>方法一：使用符号链接方式</p>
<p>&nbsp;</p>
<p>方法二：使用Apache别名</p>]]></description></item><item><title>CentOS实验十二：安装Zend Server和Zend Eclipse PDT</title><link>http://www.cnblogs.com/eastson/archive/2012/09/15/2684827.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 15 Sep 2012 00:42:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/15/2684827.html</guid><description><![CDATA[<p>因为需要做一些PHP的开发，这时候通常会选择Zend Server CE和Zend Eclipse PDT。</p>
<p>&nbsp;</p>
<h3>设置Apache HTTPD</h3>
<p>httpd默认是和CentOS一起安装的。其配置目录是/etc/httpd，网站目录/var/www。我们可以将它配置成开机启动。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;"># chkconfig httpd on
# service httpd restart</span></pre>
</div>
<p>&nbsp;</p>
<h3>安装Zend Server CE</h3>
<p>1. 配置Zend软件源。新建文件/etc/yum.repos.d/zend.repo，内容如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">[Zend]
name</span>=<span style="color: #000000;">Zend Server
baseurl</span>=http:<span style="color: #008000;">//</span><span style="color: #008000;">repos.zend.com/zend-server/rpm/$basearch</span>
enabled=<span style="color: #800080;">1</span><span style="color: #000000;">
gpgcheck</span>=<span style="color: #800080;">1</span><span style="color: #000000;">
gpgkey</span>=http:<span style="color: #008000;">//</span><span style="color: #008000;">repos.zend.com/zend.key</span>
<span style="color: #000000;">
[Zend_noarch]
name</span>=Zend Server -<span style="color: #000000;"> noarch
baseurl</span>=http:<span style="color: #008000;">//</span><span style="color: #008000;">repos.zend.com/zend-server/rpm/noarch</span>
enabled=<span style="color: #800080;">1</span><span style="color: #000000;">
gpgcheck</span>=<span style="color: #800080;">1</span><span style="color: #000000;">
gpgkey</span>=http:<span style="color: #008000;">//</span><span style="color: #008000;">repos.zend.com/zend.key</span></pre>
</div>
<p>&nbsp;</p>
<p>2. 安装之前需要设置一下SELinux权限，否则启动httpd服务时会提示权限错误。</p>
<div class="cnblogs_code">
<pre># setenforce permissive</pre>
</div>
<p>&nbsp;</p>
<p>3. 安装Zend Server CE。可以先查询一下软件源提供了什么版本：</p>
<div class="cnblogs_code">
<pre># yum list --disablerepo=* --enablerepo=Zend* | <span style="color: #0000ff;">grep</span> zend-server-<span style="color: #000000;">ce
zend</span>-server-ce-php-<span style="color: #800080;">5.2</span><span style="color: #000000;">.noarch
zend</span>-server-ce-php-<span style="color: #800080;">5.3</span>.noarch</pre>
</div>
<p>选择自己需要的版本然后安装：</p>
<div class="cnblogs_code">
<pre># yum <span style="color: #0000ff;">install</span> zend-server-ce-php-<span style="color: #800080;">5.3</span></pre>
</div>
<p><span style="color: #ff0000;"><strong>&nbsp;</strong></span></p>
<p>4. 启动zend-server守护进程。</p>
<div class="cnblogs_code">
<pre># chkconfig zend-<span style="color: #000000;">server on
# service zend</span>-server restart</pre>
</div>
<p>&nbsp;</p>
<p>5. 测试zend server。</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">cat</span> &gt; /var/www/html/<span style="color: #000000;">index.php
</span>&lt;?<span style="color: #000000;">php
phpinfo();
</span>?&gt;</pre>
</div>
<p>&nbsp;用浏览器查看该页面：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012091417001093.png" alt="" /></p>
<p>&nbsp;</p>
<p>6. 加入Zend Server CE安装路径到系统环境变量。</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">echo</span> <span style="color: #800000;">'</span><span style="color: #800000;">export PATH=$PATH:/usr/local/zend/bin</span><span style="color: #800000;">'</span> &gt;&gt; /etc/<span style="color: #000000;">profile
</span><span style="color: #0000ff;">echo</span> <span style="color: #800000;">'</span><span style="color: #800000;">export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/zend/lib</span><span style="color: #800000;">'</span> &gt;&gt; /etc/profile</pre>
</div>
<p>&nbsp;</p>
<p>更多关于安装Zend Server的信息请参考《<a href="http://files-source.zend.com/help/Zend-Server-Community-Edition/zend-server-community-edition.htm#rpm_installation.htm" target="_blank">RPM Installation (RHEL, CentOS, Fedora and OEL</a>)》。</p>
<p>&nbsp;</p>
<h3>安装Zend Eclipse PDT</h3>
<p><a href="http://www.zend.com/community/pdt/?ecl=EclipseZend" target="_blank">Zend Eclipse PDT</a>和Zend Server CE配合在一起，可以大大简化我们配置PHP开发环境的过程。</p>
<p>&nbsp;</p>
<p>安装非常简单：下载<a href="http://www.zend.com/community/pdt/downloads" target="_blank">Zend Eclipse PDT</a>的压缩包，解开，执行包里面的eclipse-php就可以了。</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">tar</span> xvf ~/eclipse-php-<span style="color: #800080;">3.0</span>.<span style="color: #800080;">2</span>.v20120611144-x86_64.<span style="color: #0000ff;">tar</span><span style="color: #000000;">.gz
# </span><span style="color: #0000ff;">chown</span> -R root:root eclipse-<span style="color: #000000;">php
# cd eclipse</span>-<span style="color: #000000;">php
# .</span>/eclipse-php</pre>
</div>
<p>&nbsp;</p>
<p>为了方便启动，可以在顶部面板增加启动项。可以到<a href="http://www.easyicon.cn/icondetail/32896/" target="_blank">EasyIcon.cn</a>下载一个Eclipse的图标，png格式的，32和48尺寸都可以。</p>
<p><br />&nbsp;</p>
<p>更多关于LAMP环境的设定请参考：</p>
<p>《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/07/18/2596743.html" target="_blank">安装Apache+MySQL+PHP基本环境</a>》</p>
<p>《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/07/18/2597149.html" target="_blank">使用phpMyAdmin管理MySQL</a>》</p>
<p>《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/07/18/2597572.html" target="_blank">远程连接MySQL</a>》</p>]]></description></item><item><title>CentOS实验十三：使用VirtualBox共享文件夹</title><link>http://www.cnblogs.com/eastson/archive/2012/09/14/2685317.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 14 Sep 2012 09:31:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/14/2685317.html</guid><description><![CDATA[<p>使用共享文件夹功能之前，必须先<a href="http://www.cnblogs.com/eastson/archive/2012/09/14/2684355.html" target="_blank">安装VBoxAdditions</a>。</p>
<p>&nbsp;</p>
<p>在VirtualBox菜单(设备 &gt; 共享文件夹)中添加需要共享的文件夹：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012091417184134.png" alt="" /></p>
<p>&nbsp;</p>
<p>在Linux虚拟机中挂载该文件夹：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">mkdir</span><span style="color: #000000;"> shared
# </span><span style="color: #0000ff;">mount</span> -t vboxsf Shared_Folder shared</pre>
</div>
<p>&nbsp;</p>
<p>如果是Windows虚拟机，可以直接访问电脑 \\vboxsvr ，所有的共享文件夹都可以看得到。</p>]]></description></item><item><title>yum下载的包在哪里？</title><link>http://www.cnblogs.com/eastson/archive/2012/09/14/2685115.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 14 Sep 2012 08:11:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/14/2685115.html</guid><description><![CDATA[<p>这个是由/etc/yum.conf控制的：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">cat</span> /etc/<span style="color: #000000;">yum.conf
[main]
cachedir</span>=/var/cache/yum/$basearch/<span style="color: #000000;">$releasever
keepcache</span>=<span style="color: #800080;">0<br /></span><span style="color: #000000;">debuglevel</span>=<span style="color: #800080;">2</span><span style="color: #000000;">
logfile</span>=/var/log/<span style="color: #000000;">yum.log
exactarch</span>=<span style="color: #800080;">1</span><span style="color: #000000;">
obsoletes</span>=<span style="color: #800080;">1</span><span style="color: #000000;">
gpgcheck</span>=<span style="color: #800080;">1</span><span style="color: #000000;">
plugins</span>=<span style="color: #800080;">1</span><span style="color: #000000;">
installonly_limit</span>=<span style="color: #800080;">5</span><span style="color: #000000;">
... ...</span></pre>
</div>
<p>&nbsp;</p>
<p>cachedir是软件包下载后保存的目录。但默认是不保存的，因为keepcache=0。若想要保存下载的软件包，必须将keepcache设置1才可以。</p>]]></description></item><item><title>CentOS实验十一：安装OpenJDK</title><link>http://www.cnblogs.com/eastson/archive/2012/09/14/2684561.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 14 Sep 2012 03:02:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/14/2684561.html</guid><description><![CDATA[<p>OpenJDK 是 Sun 公司为著名的 Java 平台构建的 Java 开发环境的开源版本，完全自由，开放源码。Sun 公司在 2006 年的 JavaOne 大会上称将对 Java 开放源代码，于2009年4月15日正式发布 OpenJDK。</p>
<p>&nbsp;</p>
<p>查询软件源中提供的OpenJDK版本：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;"># yum search openjdk
Loaded plugins: fastestmirror, refresh</span>-<span style="color: #000000;">packagekit, security
Loading mirror speeds from cached hostfile
 </span>*<span style="color: #000000;"> epel: mirrors.ustc.edu.cn
 </span>*<span style="color: #000000;"> rpmforge: mirror.oscc.org.my
</span>============================================= N/S Matched: openjdk ==============================================<span style="color: #000000;">
java</span>-<span style="color: #800080;">1.6</span>.<span style="color: #800080;">0</span>-<span style="color: #000000;">openjdk.x86_64 : OpenJDK Runtime Environment
java</span>-<span style="color: #800080;">1.6</span>.<span style="color: #800080;">0</span>-openjdk-<span style="color: #000000;">demo.x86_64 : OpenJDK Demos
java</span>-<span style="color: #800080;">1.6</span>.<span style="color: #800080;">0</span>-openjdk-<span style="color: #000000;">devel.x86_64 : OpenJDK Development Environment
java</span>-<span style="color: #800080;">1.6</span>.<span style="color: #800080;">0</span>-openjdk-<span style="color: #000000;">javadoc.x86_64 : OpenJDK API Documentation
java</span>-<span style="color: #800080;">1.6</span>.<span style="color: #800080;">0</span>-openjdk-<span style="color: #000000;">src.x86_64 : OpenJDK Source Bundle
java</span>-<span style="color: #800080;">1.7</span>.<span style="color: #800080;">0</span>-<span style="color: #000000;">openjdk.x86_64 : OpenJDK Runtime Environment
java</span>-<span style="color: #800080;">1.7</span>.<span style="color: #800080;">0</span>-openjdk-<span style="color: #000000;">demo.x86_64 : OpenJDK Demos
java</span>-<span style="color: #800080;">1.7</span>.<span style="color: #800080;">0</span>-openjdk-<span style="color: #000000;">devel.x86_64 : OpenJDK Development Environment
java</span>-<span style="color: #800080;">1.7</span>.<span style="color: #800080;">0</span>-openjdk-<span style="color: #000000;">javadoc.noarch : OpenJDK API Documentation
java</span>-<span style="color: #800080;">1.7</span>.<span style="color: #800080;">0</span>-openjdk-<span style="color: #000000;">src.x86_64 : OpenJDK Source Bundle
icedtea</span>-web.x86_64 : Additional Java components <span style="color: #0000ff;">for</span> OpenJDK</pre>
</div>
<p>从上可以知道，OpenJDK提供了1.6和1.7两个版本。我通常用OpenJDK 1.6比较多。其中，<span style="color: #000000;">java</span>-<span style="color: #800080;">1.6</span>.<span style="color: #800080;">0</span>-<span style="color: #000000;">openjdk</span>是JRE，<span style="color: #000000;">java</span>-<span style="color: #800080;">1.6</span>.<span style="color: #800080;">0</span>-openjdk-<span style="color: #000000;">devel</span>是JDK。</p>
<p>&nbsp;</p>
<p>安装JRE和JDK：</p>
<div class="cnblogs_code">
<pre># yum <span style="color: #0000ff;">install</span> java-<span style="color: #800080;">1.6</span>.<span style="color: #800080;">0</span>-openjdk java-<span style="color: #800080;">1.6</span>.<span style="color: #800080;">0</span>-openjdk-devel</pre>
</div>
<p>&nbsp;</p>
<p>设置JAVA_HOME：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">echo</span> <span style="color: #800000;">"</span><span style="color: #800000;">export JAVA_HOME=/usr/lib/jvm/java</span><span style="color: #800000;">"</span> &gt;&gt; /etc/profile</pre>
</div>]]></description></item><item><title>CentOS实验十：安装Google Chrome</title><link>http://www.cnblogs.com/eastson/archive/2012/09/14/2684539.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 14 Sep 2012 02:45:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/14/2684539.html</guid><description><![CDATA[<p>我习惯使用Chrome浏览器，因此安装完Linux后一般都会再安装Chrome。</p>
<p>&nbsp;</p>
<p>1. 修改/etc/hosts。国内访问Google通常都会有一些莫名其妙的问题出现，这时候需要修改hosts。具体修改方法参考《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/08/13/2635680.html" target="_blank">Facebook、Twitter、Google+ hosts</a>》。</p>
<p>&nbsp;</p>
<p>2. 添加Google软件源。新增文件/etc/yum.repos.d/google-chrome.repo，内容如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #800000; font-weight: bold;">[</span><span style="color: #800000;">google-chrome</span><span style="color: #800000; font-weight: bold;">]</span><span style="color: #000000;">
name</span>=google-chrome - 64<span style="color: #000000;">-bit
baseurl</span>=<span style="color: #000000;">http://dl.google.com/linux/chrome/rpm/stable/x86_64
enabled</span>=1<span style="color: #000000;">
gpgcheck</span>=1<span style="color: #000000;">
gpgkey</span>=https://dl-ssl.google.com/linux/linux_signing_key.pub</pre>
</div>
<p>更多信息参考《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/07/28/2612812.html" target="_blank">Install Google Chrome on Fedora 17/16, CentOS/Red Hat (RHEL) 6.3</a>》。</p>
<p>&nbsp;</p>
<p>3. 安装Google Chorme浏览器稳定版。</p>
<div class="cnblogs_code">
<pre># yum <span style="color: #0000ff;">install</span> google-chrome-stable</pre>
</div>]]></description></item><item><title>CentOS实验九：安装VBoxAdditions</title><link>http://www.cnblogs.com/eastson/archive/2012/09/14/2684355.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 14 Sep 2012 02:08:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/14/2684355.html</guid><description><![CDATA[<p>我的CentOS是用VirtualBox做的虚拟机，安装好以后最好再将VBoxAdditions增强功能装上，主要目的是能够在虚拟机和宿主机之间能够共享文件。</p>
<p><br />1. 更新内核。CentOS 6.2对应的kernel默认为2.6.32-220.el6：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">uname</span> -<span style="color: #000000;">r
</span><span style="color: #800080;">2.6</span>.<span style="color: #800080;">32</span>-<span style="color: #800080;">220</span>.el6.x86_64</pre>
</div>
<p>安装增强功能需要kernel-devel包，必须保证kernel-devel和kernel版本的一致。查看软件源中kernel-devel的版本：</p>
<div class="cnblogs_code">
<pre>]# yum <span style="color: #0000ff;">info</span> kernel-<span style="color: #000000;">devel
Loaded plugins: fastestmirror, refresh</span>-<span style="color: #000000;">packagekit, security
Loading mirror speeds from cached hostfile
 </span>*<span style="color: #000000;"> epel: mirrors.ustc.edu.cn
 </span>*<span style="color: #000000;"> rpmforge: mirror.oscc.org.my
Available Packages
Name        : kernel</span>-<span style="color: #000000;">devel
Arch        : x86_64
Version     : </span><span style="color: #800080;">2.6</span>.<span style="color: #800080;">32</span><span style="color: #000000;">
Release     : </span><span style="color: #800080;">279.5</span>.<span style="color: #800080;">2</span><span style="color: #000000;">.el6
Size        : </span><span style="color: #800080;">7.6</span><span style="color: #000000;"> M
Repo        : updates
Summary     : Development package </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> building kernel modules to match the
            : kernel
URL         : http:</span><span style="color: #008000;">//</span><span style="color: #008000;">www.kernel.org/</span>
<span style="color: #000000;">License     : GPLv2
Description : This package provides kernel headers and makefiles sufficient to
            : build modules against the kernel package.</span></pre>
</div>
<p>当前的kernel-devel版本是2.6.32-279.5.2.e16。因此，必须升级kernel：</p>
<div class="cnblogs_code">
<pre># yum update kernel</pre>
</div>
<p>升级完后必须重启系统，新的kernel才能被使用。</p>
<p>&nbsp;</p>
<p>2. 安装kernel-devel和gcc。</p>
<div class="cnblogs_code">
<pre># yum <span style="color: #0000ff;">install</span> kernel-devel <span style="color: #0000ff;">gcc</span> <span style="color: #0000ff;">gcc</span>-c++</pre>
</div>
<p>&nbsp;</p>
<p>3. 安装增强功能。进入增强功能光盘根目录，执行Linux下的安装命令：</p>
<div class="cnblogs_code">
<pre># ./<span style="color: #000000;">VBoxLinuxAdditions.run 
Verifying archive integrity... All good.
Uncompressing VirtualBox </span><span style="color: #800080;">4.1</span>.<span style="color: #800080;">18</span> Guest Additions <span style="color: #0000ff;">for</span><span style="color: #000000;"> Linux.........
VirtualBox Guest Additions installer
Removing existing VirtualBox DKMS kernel modules           [  OK  ]
Removing existing VirtualBox non</span>-<span style="color: #000000;">DKMS kernel modules       [  OK  ]
Building the VirtualBox Guest Additions kernel modules
Building the main Guest Additions module                   [  OK  ]
Building the shared folder support module                  [  OK  ]
Building the OpenGL support module                         [FAILED]
(Look at </span>/var/log/vboxadd-<span style="color: #0000ff;">install</span>.log to <span style="color: #0000ff;">find</span><span style="color: #000000;"> out what went wrong)
Doing non</span>-<span style="color: #000000;">kernel setup of the Guest Additions              [  OK  ]
Installing the Window System drivers
Installing X.Org Server </span><span style="color: #800080;">1.10</span><span style="color: #000000;"> modules                       [  OK  ]
Setting up the Window System to use the Guest Additions    [  OK  ]
You may need to restart the hal service and the Window System (or just restart
the guest system) to enable the Guest Additions.

Installing graphics libraries and desktop services componen[  OK  ]</span></pre>
</div>
<p>&nbsp;</p>
<p>安装VBoxLinuxAdditions可能会报错：</p>
<div class="cnblogs_code">
<pre>$ ./VBoxLinuxAdditions.<span style="color: #000000;">run<br />... ...
Building the main Guest Additions module                   [FAILED]
(Look at </span>/var/<span style="color: #0000ff;">log</span>/vboxadd-install.<span style="color: #0000ff;">log</span><span style="color: #000000;"> to find out what went wrong)
... ...<br />
$ cat </span>/var/<span style="color: #0000ff;">log</span>/vboxadd-install.<span style="color: #0000ff;">log</span> 
/tmp/vbox.<span style="color: #800000;">0</span>/Makefile.include.header:<span style="color: #800000;">97</span>: *** Error: unable to find the sources of your current Linux kernel. Specify KERN_DIR=&lt;directory&gt; and run Make again.  Stop.<span style="color: #000000;">
Creating user </span><span style="color: #0000ff;">for</span> the Guest Additions.<span style="color: #000000;">
Creating udev rule </span><span style="color: #0000ff;">for</span> the Guest Additions kernel module.</pre>
</div>
<p>可能是内核目录和内核版本不一致造成的：</p>
<div class="cnblogs_code">
<pre>$ ls /usr/src/kernels/
<span style="color: #800000;">2.6</span>.<span style="color: #800000;">32</span>-<span style="color: #800000;">358.6</span>.<span style="color: #800000;">2</span>.el6.<span style="color: #000000;">x86_64

$ uname </span>-<span style="color: #000000;">r
</span><span style="color: #800000;">2.6</span>.<span style="color: #800000;">32</span>-<span style="color: #800000;">358</span>.el6.x86_64</pre>
</div>
<p>建立一个链接指向内核目录应该就可以解决问题：</p>
<div class="cnblogs_code">
<pre>$ ls -l /usr/src/kernels/<span style="color: #000000;">
total </span><span style="color: #800000;">4</span><span style="color: #000000;">
drwxr</span>-xr<span style="color: #0000ff;">-x</span>. <span style="color: #800000;">22</span> root root <span style="color: #800000;">4096</span> May <span style="color: #800000;">24</span> <span style="color: #800000;">17</span>:<span style="color: #800000;">39</span> <span style="color: #800000;">2.6</span>.<span style="color: #800000;">32</span>-<span style="color: #800000;">358.6</span>.<span style="color: #800000;">2</span>.el6.<span style="color: #000000;">x86_64
lrwxrwxrwx</span>.  <span style="color: #800000;">1</span> root root   <span style="color: #800000;">42</span> May <span style="color: #800000;">24</span> <span style="color: #800000;">17</span>:<span style="color: #800000;">38</span> <span style="color: #800000;">2.6</span>.<span style="color: #800000;">32</span>-<span style="color: #800000;">358</span>.el6.x86_64 -&gt; /usr/src/kernels/<span style="color: #800000;">2.6</span>.<span style="color: #800000;">32</span>-<span style="color: #800000;">358.6</span>.<span style="color: #800000;">2</span>.el6.x86_64</pre>
</div>]]></description></item><item><title>CentOS实验八：设置163软件镜像</title><link>http://www.cnblogs.com/eastson/archive/2012/09/14/2684322.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 14 Sep 2012 01:23:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/14/2684322.html</guid><description><![CDATA[<p>CentOS安装好以后，默认使用fastmirror插件动态地选择镜像源。这种方式的弊端是有可能每次都会选择到不同的镜像源，导致多次重复地下载软件列表。</p>
<p>&nbsp;</p>
<p>打开/etc/yum.repos.d/CentOS-Base.repo，可以看到类似下面的内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">[base]
name</span>=CentOS-$releasever -<span style="color: #000000;"> Base
mirrorlist</span>=http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os</span>
#baseurl=http:<span style="color: #008000;">//</span><span style="color: #008000;">mirror.centos.org/centos/$releasever/os/$basearch/</span>
gpgcheck=<span style="color: #800080;">1</span><span style="color: #000000;">
gpgkey</span>=<span style="color: #0000ff;">file</span>:<span style="color: #808080;">///</span><span style="color: #008000;">etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6</span></pre>
</div>
<p>&nbsp;</p>
<p>国内的<a href="http://www.cnblogs.com/eastson/archive/2012/07/18/2597239.html" target="_blank">搜狐和163</a>都提供了CentOS的镜像，下载速度是非常快的。我习惯使用163，将上面的内容进行修改：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">[base]
name</span>=CentOS-$releasever -<span style="color: #000000;"> Base
#mirrorlist</span>=http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os</span>
baseurl=http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/centos/$releasever/os/$basearch/</span>
gpgcheck=<span style="color: #800080;">1</span><span style="color: #000000;">
gpgkey</span>=<span style="color: #0000ff;">file</span>:<span style="color: #808080;">///</span><span style="color: #008000;">etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-6</span></pre>
</div>
<p>相同的，将CentOS-Base.repo文件内其它的镜像也指向163，然后保存。</p>
<p>&nbsp;</p>
<p>这样，下次我们使用yum命令时，就会从我们指定的镜像网站下载了。</p>]]></description></item><item><title>Maven实战系列文章</title><link>http://www.cnblogs.com/eastson/archive/2012/09/08/2676244.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 08 Sep 2012 00:51:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/08/2676244.html</guid><description><![CDATA[<p><a href="http://www.iteye.com/topic/1123187" target="_blank">Maven实战（一）安装和配置</a></p>
<p><a href="http://www.iteye.com/topic/1123221" target="_blank">Maven实战（二）构建简单Maven项目</a></p>
<p><a href="http://www.iteye.com/topic/1123225" target="_blank">Maven实战（三）Eclipse构建Maven项目</a></p>
<p><a href="http://www.iteye.com/topic/1123228" target="_blank">Maven实战（四）生命周期</a></p>
<p><a href="http://www.iteye.com/topic/1123231" target="_blank">Maven实战（五）坐标详解</a></p>
<p><a href="http://www.iteye.com/topic/1123232" target="_blank">Maven实战（六）依赖</a></p>
<p>&nbsp;</p>
<p><span>用来查找某个制品的maven路径</span><br /><a href="http://www.mvnrepository.com/" target="_blank">http://www.mvnrepository.com/</a><span>&nbsp;</span><br /><br /><span>maven官方plugin列表</span><br /><a href="http://maven.apache.org/plugins/index.html" target="_blank">http://maven.apache.org/plugins/index.html</a><span>&nbsp;</span><br /><br /><span>mojo项目的plugin的列表</span><br /><a href="http://mojo.codehaus.org/plugins.html" target="_blank">http://mojo.codehaus.org/plugins.html</a><span>&nbsp;</span><br /><br /><span>Maven手册的地址&nbsp;</span><br /><a href="http://www.sonatype.com/books/maven-book/reference_zh/public-book.html" target="_blank">http://www.sonatype.com/books/maven-book/reference_zh/public-book.html</a><span>&nbsp;</span><br /><a href="http://www.sonatype.com/books/maven-book/reference/" target="_blank">http://www.sonatype.com/books/maven-book/reference/</a><span>&nbsp;</span><br /><br /><span>官方POM文件完整参考</span><br /><a href="http://maven.apache.org/ref/2.2.1/maven-model/maven.html" target="_blank">http://maven.apache.org/ref/2.2.1/maven-model/maven.html</a><span>&nbsp;</span><br /><br /><span>官方settings文件完整参考</span><br /><a href="http://maven.apache.org/settings.html" target="_blank">http://maven.apache.org/settings.html</a><span>&nbsp;</span><br /><br /><span>官方依赖机制介绍</span><br /><a href="http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html" target="_blank">http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html</a><span>&nbsp;</span></p>]]></description></item><item><title>MSDN - 我告诉你</title><link>http://www.cnblogs.com/eastson/archive/2012/09/08/2676230.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 08 Sep 2012 00:12:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/08/2676230.html</guid><description><![CDATA[<p><a href="http://msdn.itellyou.cn/" target="_blank">msdn.itellyou</a>：一个专业的微软产品下载网站。去年一个深圳的朋友告诉我的，一直没有用过。昨天晚上需要一个XP系统，上去一找就找到了。真的非常方便。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090808103122.png" alt="" /></p>]]></description></item><item><title>添加绿色版UltraEdit到右键菜单</title><link>http://www.cnblogs.com/eastson/archive/2012/09/07/2676124.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 07 Sep 2012 15:22:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/07/2676124.html</guid><description><![CDATA[<p><span>最近重新安装了系统，由于新下载的UltraEdit是绿色版本的，故在右键菜单中不会显示，用起来实在麻烦。</span></p>
<p><span>无奈之下，网上搜索出几个手动添加的办法，试用了下，感觉添加注册表文件这个最容易。</span>不敢独享，贡献给有需要的人。</p>
<div class="cnblogs_code">
<pre>Windows Registry Editor Version <span style="color: #800080;">5.00</span><span style="color: #000000;"> 
[HKEY_CLASSES_ROOT\</span>*<span style="color: #000000;">\shell] 
[HKEY_CLASSES_ROOT\</span>*<span style="color: #000000;">\shell\UltraEdit] 
@</span>=<span style="color: #800000;">"</span><span style="color: #800000;">UltraEdit-32</span><span style="color: #800000;">"</span><span style="color: #000000;"> 
[HKEY_CLASSES_ROOT\</span>*<span style="color: #000000;">\shell\UltraEdit\Command] 
@</span>=<span style="color: #800000;">"</span><span style="color: #800000;">C:\\Program Files\\UltraEdit\\Uedit32.exe %1</span><span style="color: #800000;">"</span> </pre>
</div>
<p>请拷贝以上代码并保存为.reg类型，并双击添加进注册表。注意代码最后一行修改为自己的UltraEdit的安装目录。</p>]]></description></item><item><title>Maven的三套生命周期</title><link>http://www.cnblogs.com/eastson/archive/2012/09/07/2675409.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 07 Sep 2012 09:37:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/07/2675409.html</guid><description><![CDATA[<p><span><strong>1. 三套生命周期</strong>&nbsp;<br /></span>&nbsp; &nbsp; &nbsp;&nbsp;Maven拥有三套相互独立的生命周期，它们分别为clean，default和site。&nbsp;每个生命周期包含一些阶段，这些阶段是有顺序的，并且后面的阶段依赖于前面的阶段，用户和Maven最直接的交互方式就是调用这些生命周期阶段。&nbsp;以clean生命周期为例，它包含的阶段有pre-clean, clean 和 post clean。当用户调用pre-clean的时候，只有pre-clean得以执行，当用户调用clean的时候，pre-clean和clean阶段会得以顺序执行；当用户调用post-clean的时候，pre-clean,clean,post-clean会得以顺序执行。&nbsp;<br /><br />较之于生命周期阶段的前后依赖关系，三套生命周期本身是相互独立的，用户可以仅仅调用clean生命周期的某个阶段，或者仅仅调用default生命周期的某个阶段，而不会对其他生命周期产生任何影响。&nbsp;<br /><br /><span><strong>2. clean 生命周期</strong></span></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; clean生命周期的目的是清理项目，它包含三个阶段：</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 1）<strong>pre-clean</strong>&nbsp;执行一些清理前需要完成的工作。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 2）<strong>clean</strong>&nbsp;清理上一次构建生成的文件。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp; 3）<strong>post-clean</strong>&nbsp;执行一些清理后需要完成的工作。</p>
<p>&nbsp;</p>
<p><strong><span>3.&nbsp;default 生命周期</span></strong></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; default生命周期定义了真正构件时所需要执行的所有步骤，它是生命周期中最核心的部分，它包含的阶段如下：</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1）&nbsp;<strong>validate</strong>&nbsp;验证项目是否正确和所有需要的相关资源是否可用</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2）&nbsp;<strong>initialize</strong>&nbsp;初始化构建</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3）&nbsp;<strong>generate-sources</strong></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4)&nbsp;&nbsp;&nbsp;<strong>process-sources</strong>&nbsp;处理源代码</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 5）&nbsp;<strong>generate-resources&nbsp;</strong></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 6)&nbsp;&nbsp;&nbsp;<strong>process-resources</strong>&nbsp;处理项目主资源文件。对src/main/resources目录的内容进行变量替换等工作后，复制到项目输出的主classpath目录中。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7）&nbsp;<strong>compile</strong>&nbsp;编译项目的主源代码</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 8）&nbsp;<strong>process-classes</strong></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 9)&nbsp;&nbsp;&nbsp;<strong>generate-test-sources</strong></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10)<strong>&nbsp;process-test-sources</strong>&nbsp;处理项目测试资源文件</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11）<strong>generate-test-resources</strong></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;12)&nbsp;&nbsp;<strong>process-test-resources</strong>&nbsp;处理测试的资源文件</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 13）<strong>test-compile</strong>&nbsp;编译项目的测试代码</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 14）<strong>process-test-classes</strong></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 15)&nbsp;&nbsp;<strong>test</strong>&nbsp;使用单元测试框架运行测试，测试代码不会被打包或部署</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 16）<strong>prepare-package</strong>&nbsp;做好打包的准备</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;17）<strong>package</strong>&nbsp;接受编译好的代码，打包成可发布的格式</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 18)&nbsp;&nbsp;<strong>pre-integration-test</strong></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;19)&nbsp;&nbsp;<strong>integration-test</strong></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;20)&nbsp;&nbsp;<strong>post integration-test</strong></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 21)&nbsp;&nbsp;<strong>verify</strong></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 22)&nbsp;&nbsp;<strong>install</strong>&nbsp;将包安装到Maven本地仓库，供本地其他Maven项目使用</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 23）<strong>deploy</strong>&nbsp;将最终的包复制到远程仓库，供其他开发人员和Maven项目使用</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;</p>
<p><strong><span>4.&nbsp;site 生命周期</span></strong></p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; site生命周期的目的是建立和发布项目站点，Maven能够基于POM所包含的信息，自动生成一个友好的站点，方便团队交流和发布项目信息。该生命周期包含如下阶段：</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1）<strong>pre-site</strong>&nbsp;执行一些在生成项目站点之前需要完成的工作</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2）<strong>site</strong>&nbsp;生成项目站点文档</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3）<strong>post-site</strong>&nbsp;执行一些在生成项目站点之后需要完成的工作</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4）<strong>site-deploy</strong>&nbsp;将生成的项目站点发布到服务器上</p>
<p>&nbsp;</p>
<p>原文地址：<a href="http://www.iteye.com/topic/1123228" target="_blank">http://www.iteye.com/topic/1123228</a></p>]]></description></item><item><title>终于看到Adempiere WebUI了！</title><link>http://www.cnblogs.com/eastson/archive/2012/09/06/2673431.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 06 Sep 2012 06:28:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/06/2673431.html</guid><description><![CDATA[<p>折腾来折腾去，Adempiere WebUI就是不出来。今天认真看了下JBoss Log，居然出来了。原来HTTP访问时用IP地址才行，这是什么问题？localhost, 127.0.0.1或者机器名称都不行？看来JBoss哪里还是有问题，花时间还要再看看。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090614252441.png" alt="" /></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090614264628.png" alt="" /></p>]]></description></item><item><title>RUN_setup.bat都干了些什么？</title><link>http://www.cnblogs.com/eastson/archive/2012/09/06/2672839.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 06 Sep 2012 02:52:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/06/2672839.html</guid><description><![CDATA[<p>1. setupWin：根据模版产生一些工具文件。</p>
<div class="cnblogs_code">
<pre>utils/myDBcopyTemplate.bat =&gt; utils/myDBcopy.<span style="color: #000000;">bat
utils</span>/myEnvironmentTemplate.bat =&gt; utils/myEnvironment.<span style="color: #000000;">bat
utils</span>/RUN_GetAdempiereTemplate.bat =&gt; utils/RUN_GetAdempiere.<span style="color: #000000;">bat
utils</span>/RUN_PutExportTemplate.bat =&gt; utils/RUN_PutExport.<span style="color: #000000;">bat
utils</span>/RUN_WinEnvTemplate.bat =&gt; utils/RUN_WinEnv.bat</pre>
</div>
<p>&nbsp;</p>
<p>2. setupCLib：重新打包lib\AdempiereCLib.jar，Adempiere Client Library。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">jar </span><span style="color: #ff0000;">jarfile</span><span style="color: #0000ff;">="lib/AdempiereCLib.jar"</span><span style="color: #ff0000;"> index</span><span style="color: #0000ff;">="yes"</span><span style="color: #ff0000;"> duplicate</span><span style="color: #0000ff;">="preserve"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/${ADEMPIERE_APPS_TYPE}.jar"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/CCTools.jar"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/oracle.jar"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/postgresql.jar"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">jar</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>3. setupSLib：重新打包lib\AdempiereSLib.jar，Adempiere Server Library。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">jar </span><span style="color: #ff0000;">jarfile</span><span style="color: #0000ff;">="lib/AdempiereSLib.jar"</span><span style="color: #ff0000;"> index</span><span style="color: #0000ff;">="yes"</span><span style="color: #ff0000;"> duplicate</span><span style="color: #0000ff;">="preserve"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/CSTools.jar"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">exclude </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">="**/*.bsh"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/oracle.jar"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/postgresql.jar"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/CompiereJasperReqs.jar"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">jar</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>4. setupALib：重新打包lib\Adempiere.jar和lib\packages.jar。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">jar </span><span style="color: #ff0000;">jarfile</span><span style="color: #0000ff;">="lib/packages.jar"</span><span style="color: #ff0000;"> duplicate</span><span style="color: #0000ff;">="preserve"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipgroupfileset </span><span style="color: #ff0000;">dir</span><span style="color: #0000ff;">="packages"</span><span style="color: #ff0000;"> includes</span><span style="color: #0000ff;">="**/lib/*.jar"</span><span style="color: #ff0000;"> casesensitive</span><span style="color: #0000ff;">="no"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipgroupfileset</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">jar</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">copy </span><span style="color: #ff0000;">file</span><span style="color: #0000ff;">="lib/Adempiere.jar"</span><span style="color: #ff0000;"> tofile</span><span style="color: #0000ff;">="lib/AdempiereOriginal.jar"</span><span style="color: #ff0000;"> overwrite</span><span style="color: #0000ff;">="yes"</span> <span style="color: #0000ff;">/&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">jar </span><span style="color: #ff0000;">jarfile</span><span style="color: #0000ff;">="lib/Adempiere.jar"</span><span style="color: #ff0000;"> index</span><span style="color: #0000ff;">="yes"</span><span style="color: #ff0000;"> duplicate</span><span style="color: #0000ff;">="preserve"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/customization.jar"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/packages.jar"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/patches.jar"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/posterita.jar"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/AdempiereOriginal.jar"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">indexjars</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">pathelement </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="lib/AdempiereCLib.jar"</span><span style="color: #0000ff;">/&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">pathelement </span><span style="color: #ff0000;">path</span><span style="color: #0000ff;">="lib/CompiereJasperReqs.jar"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">indexjars</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">jar</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p><br />5. setupWLib：重新打包lib\webui.war和lib\zkpackages.jar。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">jar </span><span style="color: #ff0000;">jarfile</span><span style="color: #0000ff;">="lib/zkpackages.jar"</span><span style="color: #ff0000;"> duplicate</span><span style="color: #0000ff;">="preserve"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipgroupfileset </span><span style="color: #ff0000;">dir</span><span style="color: #0000ff;">="zkpackages"</span><span style="color: #ff0000;"> includes</span><span style="color: #0000ff;">="**/lib/*.jar"</span><span style="color: #ff0000;"> casesensitive</span><span style="color: #0000ff;">="no"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipgroupfileset</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">jar</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">copy </span><span style="color: #ff0000;">file</span><span style="color: #0000ff;">="lib/webui.war"</span><span style="color: #ff0000;"> tofile</span><span style="color: #0000ff;">="lib/webuiOriginal.war"</span><span style="color: #ff0000;"> overwrite</span><span style="color: #0000ff;">="yes"</span> <span style="color: #0000ff;">/&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zip </span><span style="color: #ff0000;">destfile</span><span style="color: #0000ff;">="lib/webui.war"</span><span style="color: #ff0000;"> duplicate</span><span style="color: #0000ff;">="preserve"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/zkcustomization.jar"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/zkpackages.jar"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/zkpatches.jar"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="lib/webuiOriginal.war"</span> <span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">patternset </span><span style="color: #ff0000;">refid</span><span style="color: #0000ff;">="manifest.exclude"</span><span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zipfileset</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zip</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>6. setupLib：创建lib\AdempiereClient.zip，应该是客户端执行时需要的所有文件打成一个压缩包。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zip </span><span style="color: #ff0000;">zipfile</span><span style="color: #0000ff;">="${basedir}/lib/AdempiereClient.zip"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">dir</span><span style="color: #0000ff;">="."</span><span style="color: #ff0000;"> prefix</span><span style="color: #0000ff;">="Adempiere"</span><span style="color: #ff0000;">
        includes</span><span style="color: #0000ff;">="*.html"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">dir</span><span style="color: #0000ff;">="."</span><span style="color: #ff0000;"> prefix</span><span style="color: #0000ff;">="Adempiere"</span><span style="color: #ff0000;">
        includes</span><span style="color: #0000ff;">="RUN_Adempiere.*"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">dir</span><span style="color: #0000ff;">="utils"</span><span style="color: #ff0000;"> prefix</span><span style="color: #0000ff;">="Adempiere"</span><span style="color: #ff0000;">
        includes</span><span style="color: #0000ff;">="WinEnv.js"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">dir</span><span style="color: #0000ff;">="lib"</span><span style="color: #ff0000;"> prefix</span><span style="color: #0000ff;">="Adempiere/lib"</span><span style="color: #ff0000;">
        includes</span><span style="color: #0000ff;">="Adempiere.exe,*.ico,customization.jar,patches.jar,CompiereJasperReqs.jar,Adempiere.jar,AdempiereCLib.jar,adempiereDirect.jnlp,index.html,*.0"</span> <span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zip</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>7. setupEAR：创建EAR发布包。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zip </span><span style="color: #ff0000;">destfile</span><span style="color: #0000ff;">="${basedir}/lib/adempiereRoot.war"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="${basedir}/lib/adempiereRootBase.war"</span> <span style="color: #0000ff;">/&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">dir</span><span style="color: #0000ff;">="${basedir}/lib"</span><span style="color: #ff0000;">
        includes</span><span style="color: #0000ff;">="AdempiereClient.zip,Adempiere.jar,AdempiereCLib.jar,*.jnlp,*.0,*.html,CompiereJasperReqs.jar,CompiereJasper.jar"</span><span style="color: #ff0000;">
        prefix</span><span style="color: #0000ff;">="adempiereHome"</span> <span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zip</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zip </span><span style="color: #ff0000;">destfile</span><span style="color: #0000ff;">="${basedir}/lib/adempiereWebCM.war"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">zipfileset </span><span style="color: #ff0000;">src</span><span style="color: #0000ff;">="${basedir}/lib/adempiereWebCMbase.war"</span> <span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">zip</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">ear </span><span style="color: #ff0000;">destfile</span><span style="color: #0000ff;">="${basedir}/lib/adempiere.ear"</span><span style="color: #ff0000;"> appxml</span><span style="color: #0000ff;">="${basedir}/lib/adempiereAll.xml"</span> <span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">fileset </span><span style="color: #ff0000;">dir</span><span style="color: #0000ff;">="${basedir}/lib"</span><span style="color: #ff0000;">
        includes</span><span style="color: #0000ff;">="Adempiere.jar,AdempiereSLib.jar,adempiereRoot.jar,adempiereApps.jar,adempiereApps.war,adempiereRoot.war,adempiereWebStore.war,adempiereWebCM.war,posterita.war,posterita.jar,webui.war"</span> <span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">ear</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>8. setupJBoss：设置JBoss应用服务器。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">copy </span><span style="color: #ff0000;">file</span><span style="color: #0000ff;">="${basedir}/jboss/server/adempiere/conf/jboss-serviceTemplate.xml"</span><span style="color: #ff0000;"> tofile</span><span style="color: #0000ff;">="${basedir}/jboss/server/adempiere/conf/jboss-service.xml"</span><span style="color: #ff0000;"> filtering</span><span style="color: #0000ff;">="yes"</span><span style="color: #ff0000;"> overwrite</span><span style="color: #0000ff;">="yes"</span> <span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">copy </span><span style="color: #ff0000;">file</span><span style="color: #0000ff;">="${basedir}/jboss/server/adempiere/conf/login-configTemplate.xml"</span><span style="color: #ff0000;"> tofile</span><span style="color: #0000ff;">="${basedir}/jboss/server/adempiere/conf/login-config.xml"</span><span style="color: #ff0000;"> filtering</span><span style="color: #0000ff;">="yes"</span><span style="color: #ff0000;"> overwrite</span><span style="color: #0000ff;">="yes"</span> <span style="color: #0000ff;">/&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">copy </span><span style="color: #ff0000;">file</span><span style="color: #0000ff;">="${basedir}/jboss/server/adempiere/deploy/jboss-web.deployer/serverTemplate.xml"</span><span style="color: #ff0000;"> tofile</span><span style="color: #0000ff;">="${basedir}/jboss/server/adempiere/deploy/jboss-web.deployer/server.xml"</span><span style="color: #ff0000;"> filtering</span><span style="color: #0000ff;">="yes"</span><span style="color: #ff0000;"> overwrite</span><span style="color: #0000ff;">="yes"</span> <span style="color: #0000ff;">/&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">unjar </span><span style="color: #ff0000;">dest</span><span style="color: #0000ff;">="${ADEMPIERE_APPS_DEPLOY}/adempiere.ear"</span><span style="color: #ff0000;"> src</span><span style="color: #0000ff;">="${basedir}/lib/adempiere.ear"</span><span style="color: #ff0000;"> overwrite</span><span style="color: #0000ff;">="true"</span><span style="color: #0000ff;">&gt;</span></pre>
</div>]]></description></item><item><title>创建Adempiere桌面图标</title><link>http://www.cnblogs.com/eastson/archive/2012/09/06/2672884.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 06 Sep 2012 01:30:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/06/2672884.html</guid><description><![CDATA[<p>Adempiere安装完毕，会在桌面多出两个图标：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090609260944.png" alt="" /></p>
<p>&nbsp;</p>
<p>如果不小心删除了怎么办？简单，<em><strong>双击utils\RUN_WinEnv.bat就OK了</strong></em>。&nbsp;</p>
<p>同样的道理，如果需要定制Adempiere安装后的桌面图标，修改对应文件(utils\WinEnv.js)也就可以啦。</p>]]></description></item><item><title>对ADempiere源码的一些理解</title><link>http://www.cnblogs.com/eastson/archive/2012/09/05/2671581.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 05 Sep 2012 08:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/05/2671581.html</guid><description><![CDATA[<p>1. ADempiere源码使用ant处理，所以很多子目录下都有一个build.xml文件。</p>
<p>2. 子目录下RUN_build.bat或者RUN_build.sh类似的文件只是ant的快捷调用方式。进过测试：直接使用ant xxx也是OK的。</p>
<p>3. 所有的build.xml共享同一个配置文件utils_dev\build.properties，可以根据自己情况自定修改该文件调整。</p>
<div class="cnblogs_code">
<pre>env.ADEMPIERE_SOURCE=${adempiere.<span style="color: #000000;">base}
env</span>.ADEMPIERE_ROOT=${env.ADEMPIERE_SOURCE}/<span style="color: #000000;">adempiere
env</span>.ADEMPIERE_HOME=${env.ADEMPIERE_ROOT}/<span style="color: #000000;">Adempiere
env</span>.ADEMPIERE_INSTALL=${env.ADEMPIERE_SOURCE}/adempiere/<span style="color: #000000;">install
env</span>.ADEMPIERE_VERSION=<span style="color: #000000;">ADempiere
env</span>.ADEMPIERE_VERSION_FILE=<span style="color: #000000;">360LTS
env</span>.ADEMPIERE_VENDOR=<span style="color: #000000;">ADempiere
env</span>.ENCODING=UTF-8<span style="color: #000000;">
env</span>.XDOCLET_HOME=${env.ADEMPIERE_SOURCE}/<span style="color: #000000;">tools
env</span>.ADEMPIERE_ENV=Y</pre>
</div>
<p>4. ant install完成以后生产的文件在ADEMPIERE_HOME目录，压缩档在ADEMPIERE_INSTALL目录（zip和tar.gz两种格式）。这里的安装只是ADempiere将必要的一些文件复制到ADEMPIERE_HOME目录，要能够使用还需要执行RUN_setup.bat等一系列的动作。实质上就是生成安装文件，同网络上下载回来的一样。</p>
<p>&nbsp;</p>
<h3>tools子项目</h3>
<p>该子项目会生产几个ADempiere共用的jar文件。</p>
<p>&nbsp;</p>
<p>服务器jar文件：</p>
<div class="cnblogs_code">
<pre>/lib/jboss.jar (ADempiere习惯将多个jar文件打包成一个jar文件，下面缩进的内容表示该目的jar文件的内容来源)
    /jboss/client/jboss-ejb3x.<span style="color: #000000;">jar
    </span>/jboss/client/jboss-ejb3-client.<span style="color: #000000;">jar
    </span>/jboss/client/jbossall-client.<span style="color: #000000;">jar

</span>/lib/glassfish.<span style="color: #000000;">jar
    </span>/glassfishfacet/lib/*.<span style="color: #000000;">jar
    </span>/tools/lib/javaee.jar</pre>
</div>
<p>&nbsp;</p>
<p>数据库jar文件：</p>
<div class="cnblogs_code">
<pre>/lib/oracle.<span style="color: #000000;">jar
    </span>/tools/lib/ojdbc6.<span style="color: #000000;">jar
    
</span>/lib/postgresql.<span style="color: #000000;">jar
  </span>/tools/lib/postgresql.jar</pre>
</div>
<p>&nbsp;</p>
<p>CSTools.jar，原文是Build Server Jar，我理解为Compiere Server Tools，因为ADempiere是基于Compiere，所以ADempiere里面包含了很多Compiere的代码：</p>
<div class="cnblogs_code">
<pre>/lib/CSTools.<span style="color: #000000;">jar
    </span>/tools/META-INF/services/<span style="color: #000000;">**
    </span>&lt;!-- JSTL --&gt;
    /tools/lib/jstl.<span style="color: #000000;">jar
    </span>/tools/lib/standard.<span style="color: #000000;">jar
    </span>&lt;!-- ECS --&gt;
    /tools/src/**/apache/ecs/<span style="color: #000000;">**
    </span>&lt;!-- Installing Script Based in JSR 223 Scripting APIs --&gt;
    /tools/lib/script-api.<span style="color: #000000;">jar
    </span>&lt;!-- BeanShell --&gt;
    /tools/lib/bsh-2.0b5.<span style="color: #000000;">jar
    </span>/tools/lib/bsh-engine.<span style="color: #000000;">jar
    </span>&lt;!-- Groovy --&gt;
    /tools/lib/groovy-all-1.5.1.<span style="color: #000000;">jar
    </span>/tools/lib/groovy-engine.<span style="color: #000000;">jar
    </span>&lt;!-- Groovy --&gt;
    /tools/lib/jython.<span style="color: #000000;">jar
    </span>/tools/lib/jython-engine.<span style="color: #000000;">jar
    </span>&lt;!-- Payment Processors    --&gt;
    /tools/lib/Verisign.<span style="color: #000000;">jar
    </span>/tools/lib/payflow.<span style="color: #000000;">jar
    </span>/tools/lib/miglayout-3.7.1-swing.<span style="color: #000000;">jar
    </span>/tools/lib/jpayment.<span style="color: #000000;">jar
    </span>&lt;!-- Log4J, jnlp --&gt;
    /tools/lib/commons-logging.<span style="color: #000000;">jar
    </span>/tools/lib/log4j.<span style="color: #000000;">jar
    </span>/tools/lib/jnlp.<span style="color: #000000;">jar
    </span>&lt;!-- Barcode, ftp --&gt;
    /tools/lib/barbecue-1.5-beta1.<span style="color: #000000;">jar
    </span>/tools/lib/commons-<span style="color: #0000ff;">net</span>-1.4.0.<span style="color: #000000;">jar
    </span>&lt;!-- Adempiere look and feel --&gt;
    /tools/lib/looks-2.0.4.<span style="color: #000000;">jar
    </span>&lt;!-- PDF --&gt;
    /tools/lib/jpedal.<span style="color: #000000;">jar
    </span>/tools/lib/iText-2.1.7.<span style="color: #000000;">jar
    </span>&lt;!-- JFreeChart --&gt;
    /tools/lib/jfreechart-1.0.13.<span style="color: #000000;">jar
    </span>/tools/lib/jcommon-1.0.16.<span style="color: #000000;">jar
    </span>&lt;!-- JMS --&gt;
    /tools/lib/activemq-core-5.0.0.<span style="color: #000000;">jar
    </span>&lt;!-- C3P0 connection pool --&gt;
    /tools/lib/c3p0-0.9.1.2.<span style="color: #000000;">jar
    </span>/tools/lib/c3p0-oracle-thin-extras-0.9.1.2.<span style="color: #000000;">jar
    </span>&lt;!-- POI --&gt;
    /tools/lib/poi-3.0.1-FINAL-20070705.<span style="color: #000000;">jar
    </span>&lt;!-- CGLib --&gt;
    /tools/lib/cglib.<span style="color: #000000;">jar
    </span>&lt;!-- Commons --&gt;
    /tools/lib/commons-collections-3.1.<span style="color: #000000;">jar
    </span>/tools/lib/commons-codec.<span style="color: #000000;">jar
    </span>&lt;!-- jars <span style="color: #0000ff;">for</span> 2pack --&gt;
    /tools/lib/ant.<span style="color: #000000;">jar
    </span>/tools/lib/xercesImpl.<span style="color: #000000;">jar
    </span>&lt;!-- cron job --&gt;
    /tools/lib/cron4j-2.2.1.jar            </pre>
</div>
<p>&nbsp;</p>
<p>CCTools.jar，也就是Compiere Client Tools：</p>
<div class="cnblogs_code">
<pre>/lib/CCTools.<span style="color: #000000;">jar
    </span>/lib/META-INF/services/<span style="color: #000000;">**
    </span>/lib/src/**/apache/ecs/<span style="color: #000000;">**
    </span>&lt;!-- Mail --&gt;
    /tools/lib/mail.<span style="color: #000000;">jar
    </span>&lt;!-- Installing Script Based in JSR 223 Scripting APIs --&gt;
    /tools/lib/script-api.<span style="color: #000000;">jar
    </span>&lt;!-- BeanShell --&gt;
    /tools/lib/bsh-2.0b5.<span style="color: #000000;">jar
    </span>/tools/lib/bsh-engine.<span style="color: #000000;">jar
    </span>&lt;!-- Groovy --&gt;
    /tools/lib/groovy-all-1.5.1.<span style="color: #000000;">jar
    </span>/tools/lib/groovy-engine.<span style="color: #000000;">jar
    </span>&lt;!-- Groovy --&gt;
    /tools/lib/jython.<span style="color: #000000;">jar
    </span>/tools/lib/jython-engine.<span style="color: #000000;">jar
    </span>&lt;!-- Payment Processors --&gt;
    /tools/lib/Verisign.<span style="color: #000000;">jar
    </span>/tools/lib/payflow.<span style="color: #000000;">jar
    </span>/tools/lib/miglayout-3.7.1-swing.<span style="color: #000000;">jar
    </span>/tools/lib/jpayment.<span style="color: #000000;">jar
    </span>&lt;!-- Log4J, jnlp --&gt;
    /tools/lib/commons-logging.<span style="color: #000000;">jar
    </span>/tools/lib/log4j.<span style="color: #000000;">jar
    </span>/tools/lib/jnlp.<span style="color: #000000;">jar
    </span>&lt;!-- Barcode, ftp --&gt;
    /tools/lib/barbecue-1.5-beta1.<span style="color: #000000;">jar
    </span>/tools/lib/commons-<span style="color: #0000ff;">net</span>-1.4.0.<span style="color: #000000;">jar
    </span>&lt;!-- JFreeChart --&gt;
    /tools/lib/jfreechart-1.0.13.<span style="color: #000000;">jar
    </span>/tools/lib/jcommon-1.0.16.<span style="color: #000000;">jar
    </span>&lt;!-- Graph --&gt;
    /tools/lib/jgraph.<span style="color: #000000;">jar
    </span>&lt;!-- Adempeire Look and Feal --&gt;
    /tools/lib/looks-2.0.4.<span style="color: #000000;">jar
    </span>&lt;!-- jars <span style="color: #0000ff;">for</span> 2pack --&gt;
    /tools/lib/ant.<span style="color: #000000;">jar
    </span>/tools/lib/xercesImpl.<span style="color: #000000;">jar
    </span>&lt;!-- PDF --&gt;
    /tools/lib/jpedal.<span style="color: #000000;">jar
    </span>/tools/lib/iText-2.1.7.<span style="color: #000000;">jar
    </span>/tools/lib/swingx-1.6.<span style="color: #000000;">jar
    </span>&lt;!-- JMS --&gt;
    /tools/lib/activemq-core-5.0.0.<span style="color: #000000;">jar
    </span>&lt;!-- C3P0 connection pool --&gt;
    /tools/lib/c3p0-0.9.1.2.<span style="color: #000000;">jar
    </span>/tools/lib/c3p0-oracle-thin-extras-0.9.1.2.<span style="color: #000000;">jar
    </span>&lt;!-- POI --&gt;
    /tools/lib/poi-3.0.1-FINAL-20070705.<span style="color: #000000;">jar
    </span>&lt;!-- Commons --&gt;
    /tools/lib/commons-collections-3.1.<span style="color: #000000;">jar
    </span>/tools/lib/commons-codec.jar</pre>
</div>
<p>&nbsp;</p>
<h3>base子项目</h3>
<p>该项目生成/base/Base.jar文件：</p>
<div class="cnblogs_code">
<pre>/base/Base.<span style="color: #000000;">jar
    Sources:
        </span>/base/<span style="color: #000000;">src
        </span>/glassfishfacet/<span style="color: #000000;">src
        </span>/jbossfacet/<span style="color: #000000;">src
    ClassPath:
        </span>/lib/CCTools.<span style="color: #000000;">jar
        </span>/lib/oracle.<span style="color: #000000;">jar
        </span>/lib/postgresql.<span style="color: #000000;">jar
        </span>/lib/jboss.<span style="color: #000000;">jar
        </span>/lib/glassfish.<span style="color: #000000;">jar
        </span>/tools/lib/junit.<span style="color: #000000;">jar
        </span>/tools/lib/j2ee.<span style="color: #000000;">jar
        </span>/tools/lib/jnlp.<span style="color: #000000;">jar
        </span>/tools/lib/servlet-api.<span style="color: #000000;">jar
        </span>/tools/lib/cron4j-2.2.1.jar</pre>
</div>
<p>&nbsp;</p>
<h3>extend子项目</h3>
<p>该项目生成/extend/Extend.jar文件：</p>
<div class="cnblogs_code">
<pre>/extend/Extend.<span style="color: #000000;">jar
  Sources:
        </span>/extend/<span style="color: #000000;">src
  ClassPath:
        </span>/lib/CCTools.<span style="color: #000000;">jar
        </span>/lib/jboss.<span style="color: #000000;">jar
        </span>/base/Base.jar<br />        /tools/lib/junit.<span>jar <br /></span>        /tools/lib/testing/*.jar</pre>
</div>
<p>&nbsp;</p>
<h3>client子项目</h3>
<p>该项目生成/lib/Adempiere.jar文件。<em><strong>需要特别注意：Adempiere.jar文件额外还包含了另外三个项目的文件：base(/base/build)，extend(/extend/build)和JasperReports(/JasperReports/CompiereJasper.jar)</strong></em>。</p>
<div class="cnblogs_code">
<pre>/lib/Adempiere.<span style="color: #000000;">jar （额外还包含base, extend和JasperReports三个项目的文）
     Sources:
        </span>/client/<span style="color: #000000;">src
    ClassPath:
        </span>/lib/CCTools.<span style="color: #000000;">jar
        </span>/base/Base.<span style="color: #000000;">jar
        </span>/extend/Extend.<span style="color: #000000;">jar
        </span>/lib/customization.<span style="color: #000000;">jar
        </span>/lib/patches.<span style="color: #000000;">jar
        </span>/lib/jcommon-1.0.16.<span style="color: #000000;">jar
        </span>/lib/jfreechart-1.0.13.<span style="color: #000000;">jar
        </span>/tools/lib/j2ee.<span style="color: #000000;">jar
        </span>/tools/lib/swinglabs-0.8.0.jar      </pre>
</div>
<p>&nbsp;</p>
<h3>JasperReports子项目</h3>
<p>该项目生成两个jar文件：/JasperReports/CompiereJasper.jar和/JasperReports/CompiereJasperReqs.jar，同时CompiereJasperReqs.jar被复制一份到/lib。</p>
<p>&nbsp;</p>
<p>CompiereJasper.jar：</p>
<div class="cnblogs_code">
<pre>/JasperReports/CompiereJasper.<span style="color: #000000;">jar
    Sources:
        </span>/JasperReports/<span style="color: #000000;">src
    ClassPath:
        </span>/client/<span style="color: #000000;">build
        </span>/base/Base.<span style="color: #000000;">jar
        </span>/extend/Extend.<span style="color: #000000;">jar
        </span>/lib/CSTools.<span style="color: #000000;">jar
        </span>/lib/oracle.<span style="color: #000000;">jar
        </span>/JasperReportsTools/lib/jasperreports-3.7.3.<span style="color: #000000;">jar
        </span>/JasperReportsTools/lib/commons-digester-1.7.<span style="color: #000000;">jar
        </span>/JasperReportsTools/lib/commons-beanutils-1.7.<span style="color: #000000;">jar 
        </span>/tools/lib/commons-logging.<span style="color: #000000;">jar
        </span>/tools/lib/xercesImpl.<span style="color: #000000;">jar
        </span>/tools/lib/xml-apis.<span style="color: #000000;">jar
        </span>/tools/lib/postgresql.<span style="color: #000000;">jar  
        </span>/tools/lib/iText-2.1.7.<span style="color: #000000;">jar
        </span>/jboss/client/*.jar</pre>
</div>
<p>&nbsp;</p>
<p>CompiereJasperReqs.jar，该文件实质是JasperReports必需文件的一个重新打包：</p>
<div class="cnblogs_code">
<pre>/JasperReports/CompiereJasperReqs.<span style="color: #000000;">jar
    </span>/JasperReportsTools/lib/iReport.jar/it/businesslogic/ireport/barcode/*.<span style="color: #000000;">class
    </span>/JasperReportsTools/lib/iReport.jar/it/businesslogic/ireport/chart/*.<span style="color: #000000;">class
    </span>/JasperReportsTools/lib/iReport.jar/it/businesslogic/ireport/util/*.<span style="color: #000000;">class
    </span>/JasperReportsTools/lib/iReport.jar/it/businesslogic/ireport/*Element.<span style="color: #000000;">class
    </span>/JasperReportsTools/lib/iReport.jar/it/businesslogic/dtds/<span style="color: #000000;">*
    </span>/JasperReportsTools/lib/jasperreports-3.7.3.<span style="color: #000000;">jar
    </span>/JasperReportsTools/lib/commons-digester-1.7.<span style="color: #000000;">jar
    </span>/tools/lib/commons-logging.<span style="color: #000000;">jar
    </span>/JasperReportsTools/lib/commons-beanutils-1.7.<span style="color: #000000;">jar
    </span>/tools/lib/xercesImpl.<span style="color: #000000;">jar
    </span>/tools/lib/xml-apis.jar</pre>
</div>
<p>&nbsp;</p>
<h3>serverRoot子项目</h3>
<p>该项目生成三个文件：/lib/adempiereRootBase.war,&nbsp;/lib/adempiereRoot.jar和/lib/adempiereRoot.xml。&nbsp;</p>
<div class="cnblogs_code">
<pre>/lib/adempiereRoot.<span style="color: #000000;">jar
        </span>/serverRoot/src/<span style="color: #000000;">main
        </span>/serverRoot/src/main/ejb/jboss.xml =&gt; META-INF/jboss.<span style="color: #000000;">xml
        </span>/serverRoot/src/main/ejb/sun-ejb-jar.xml =&gt; META-INF/sun-ejb-jar.<span style="color: #000000;">xml      
    ClassPath:
        </span>/lib/Adempiere.<span style="color: #000000;">jar
        </span>/lib/CSTools.<span style="color: #000000;">jar
        </span>/lib/oracle.<span style="color: #000000;">jar
        </span>/lib/jboss.<span style="color: #000000;">jar
        </span>/lib/postgresql.<span style="color: #000000;">jar        
        </span>/tools/lib/j2ee.<span style="color: #000000;">jar
        </span>/tools/lib/jnlp.<span style="color: #000000;">jar
        </span>/tools/lib/servlet-api.<span style="color: #000000;">jar
        </span>/tools/lib/mail.<span style="color: #000000;">jar
        </span>/tools/lib/bsh-1.3.0.<span style="color: #000000;">jar
        </span>/tools/lib/junit.<span style="color: #000000;">jar
        </span>/tools/lib/cron4j-2.2.1.<span style="color: #000000;">jar
    
</span>/lib/adempiereRootBase.war &lt;= /serverRoot/src/<span style="color: #000000;">web
    </span>/serverRoot/src/web/WEB-INF/web.xml =&gt; WEB-INF/web.<span style="color: #000000;">xml
    </span>/serverRoot/src/web/WEB-INF/lib =&gt; WEB-INF/<span style="color: #000000;">lib
    
</span>/lib/adempiereRoot.xml &lt;= /serverRoot/src/ear/application.xml</pre>
</div>
<p>&nbsp;</p>
<h3>serverApps子项目</h3>
<p>该项目生成三个文件：lib/adempiereApps.war,&nbsp;/lib/adempiereApps.jar和/lib/adempiereApps.xml。&nbsp;</p>
<div class="cnblogs_code">
<pre>/lib/adempiereApps.<span style="color: #000000;">jar
        </span>/serverApps/src/<span style="color: #000000;">main
    ClassPath:
        </span>/lib/Adempiere.<span style="color: #000000;">jar
        </span>/lib/CSTools.<span style="color: #000000;">jar
        </span>/tools/lib/servlet-api.<span style="color: #000000;">jar
        </span>/tools/lib/jsp-api.<span style="color: #000000;">jar
    
</span>/lib/adempiereApps.war &lt;= /serverApps/src/<span style="color: #000000;">web
    </span>/serverApps/src/web/WEB-INF/web.xml =&gt; WEB-INF/web.<span style="color: #000000;">xml
    </span>/serverApps/src/web/WEB-INF/lib =&gt; WEB-INF/<span style="color: #000000;">lib
    
</span>/lib/adempiereApps.xml &lt;= /serverApps/src/ear/application.xml</pre>
</div>
<p>&nbsp;</p>
<h3>webStore子项目</h3>
<p>该项目生成两个文件：/lib/adempiereWebStore.war和/lib/adempiereWebStore.xml。</p>
<div class="cnblogs_code">
<pre>/lib/adempiereWebStore.war &lt;= /webStore/src/<span style="color: #000000;">web
    
</span>/lib/adempiereWebStore.xml &lt;= /webStore/src/ear/application.xml</pre>
</div>
<p>&nbsp;</p>
<h3>webCM子项目</h3>
<p>该项目生成两个文件：/lib/adempiereWebCMbase.war和/lib/adempiereWebCM.xml</p>
<div class="cnblogs_code">
<pre>/lib/adempiereWebCMbase.war &lt;= /webCM/src/<span style="color: #000000;">web
        </span>/webCM/src/<span style="color: #000000;">main
    ClassPath:
        </span>/lib/Adempiere.<span style="color: #000000;">jar
        </span>/lib/CSTools.<span style="color: #000000;">jar
        </span>/tools/lib/javaee.<span style="color: #000000;">jar

</span>/lib/adempiereWebCM.xml &lt;= /webCM/src/ear/application.xml</pre>
</div>
<p>&nbsp;</p>
<h3>zkwebui子项目</h3>
<p>该项目生成一个文件：/lib/webui.war。</p>
<div class="cnblogs_code">
<pre>/lib/webui.war &lt;= /zkwebui/<span style="color: #000000;">**
        </span>/zkwebui/WEB-INF/<span style="color: #000000;">src
    ClassPath:
        </span>/base/<span style="color: #000000;">build
        </span>/client/<span style="color: #000000;">build
        </span>/JasperReports/<span style="color: #000000;">build
        </span>/lib/*.<span style="color: #000000;">jar
        </span>/tools/lib/servlet-api.<span style="color: #000000;">jar
        </span>/zkwebui/WEB-INF/lib/*.<span style="color: #000000;">jar
        </span>/zkwebui/WEB-INF/lib/classes   </pre>
</div>
<p>&nbsp;</p>
<h3>install子项目</h3>
<p>这里的安装指的是创建安装文件，不是安装到目标系统。</p>
<p>&nbsp;</p>
<p>首先，它会创建/lib/CInstall.jar文件。</p>
<div class="cnblogs_code">
<pre>/lib/CInstall.<span style="color: #000000;">jar
    Sources:
        </span>/install/<span style="color: #000000;">src
    ClassPath:
        </span>/lib/CCTools.<span style="color: #000000;">jar
        </span>/lib/Adempiere.<span style="color: #000000;">jar
        </span>/lib/oracle.<span style="color: #000000;">jar
        </span>/lib/postgresql.<span style="color: #000000;">jar
        </span>/tools/lib/ant.<span style="color: #000000;">jar
        </span>/tools/lib/ant-launcher.<span style="color: #000000;">jar   
    Includes:
        </span>/tools/lib/ant.<span style="color: #000000;">jar
        </span>/tools/lib/ant-launcher.<span style="color: #000000;">jar
        </span>/tools/lib/ant-commons-<span style="color: #0000ff;">net</span>.<span style="color: #000000;">jar
        </span>/tools/lib/commons-<span style="color: #0000ff;">net</span>-1.4.0.jar</pre>
</div>
<p>&nbsp;</p>
<p>然后，将安装程序需要的所有文件都放到ADEMPIERE_HOME目录:</p>
<div class="cnblogs_code">
<pre>ADEMPIERE_HOME &lt;= /install/<span style="color: #000000;">Adempiere
    RUN_Adempiere</span>.bat &lt;= /utils/RUN_Adempiere.<span style="color: #000000;">bat
    RUN_Adempiere</span>.sh &lt;= /utils/RUN_Adempiere.<span style="color: #000000;">sh
    images </span>&lt;= /install/Adempiere/<span style="color: #000000;">images
    packages
        liberoMFG</span>/lib/liberoMFG.jar &lt;= /packages/liberoMFG.<span style="color: #000000;">jar
        liberoHR</span>/lib/liberoHR.jar &lt;= /packages/liberoHR.<span style="color: #000000;">jar
    zkpackages
        liberoMFG</span>/lib/liberozkMFG.jar &lt;= /zkpackages/liberozkMFG.<span style="color: #000000;">jar
    lib </span>&lt;= /<span style="color: #000000;">lib
        CheckConflicts</span>.sh &lt;= /lib/CheckConflicts.<span style="color: #000000;">sh
        Adempiere</span>.ico &lt;= /launch/Adempiere.<span style="color: #000000;">ico
        Adempiere</span>.ico &lt;= /launch/Adempiere.<span style="color: #000000;">ico
        Adempiere</span>.exe &lt;= /launch/Release/Adempiere.<span style="color: #000000;">exe
        CInstall</span>.jar &lt;= /install/CInstall.<span style="color: #000000;">jar
        sqlj</span>.jar &lt;= /sqlj/sqlj.<span style="color: #000000;">jar
        CompiereJasperReqs</span>.jar &lt;= /JasperReports/CompiereJasperReqs.<span style="color: #000000;">jar
        index</span>.<span style="color: #000000;">html
    utils </span>&lt;= /<span style="color: #000000;">utils
        oracle
        postgresql
        oracleXE
    data
    jboss
    glassfish</span></pre>
</div>
<p>&nbsp;</p>
<p>最后，在ADEMPIERE_INSTALL目录创建安装压缩文件。</p>]]></description></item><item><title>Adempiere安装过程(Linux)</title><link>http://www.cnblogs.com/eastson/archive/2012/09/04/2670154.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 04 Sep 2012 03:42:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/04/2670154.html</guid><description><![CDATA[<p>本文记录了在CentOS 6.2操作系统环境下安装Adempiere 3.7LTS的整个过程。Windows操作系统下的安装请参考《<a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/archive/2012/09/03/2668343.html" target="_blank">Adempiere安装过程</a>》。</p>
<p>&nbsp;</p>
<h3>安装Java开发环境</h3>
<p>1. 安装JDK，注意不是JRE，而且版本最好是1.6。</p>
<div class="cnblogs_code">
<pre>yum <span style="color: #0000ff;">install</span> java-<span style="color: #800080;">1.6</span>.<span style="color: #800080;">0</span>-openjdk-devel</pre>
</div>
<p>2. &nbsp;设置JAVA_HOME环境变量：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">echo</span> <span style="color: #800000;">"</span><span style="color: #800000;">export JAVA_HOME=/usr/lib/jvm/java-1.6.0-openjdk-1.6.0.0.x86_64</span><span style="color: #800000;">"</span> &gt;&gt; /etc/profile</pre>
</div>
<p>&nbsp;</p>
<h3>安装PostgreSQL&nbsp;</h3>
<p>1. 安装PostgreSQL服务器和客户端</p>
<div class="cnblogs_code">
<pre>yum <span style="color: #0000ff;">install</span> postgresql-server postgresql</pre>
</div>
<p>2. 初始化数据库：</p>
<div class="cnblogs_code">
<pre>service postgresql initdb</pre>
</div>
<p>3. 启动PostgreSQL：</p>
<div class="cnblogs_code">
<pre>service postgresql restart</pre>
</div>
<p>4. 设置PostgreSQL开机启动：</p>
<div class="cnblogs_code">
<pre>chkconfig postgresql on</pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;1. 解压Adempiere(安装目录是/opt/Adempiere)：</p>
<div class="cnblogs_code">
<pre>cd /opt
<span style="color: #0000ff;">tar</span> zxvf Adempiere_370LTS.<span style="color: #0000ff;">tar</span><span style="color: #000000;">.gz
cd Adempiere</span></pre>
</div>
<p>2. 修改执行权限：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">chmod</span> a+x *.<span style="color: #0000ff;">sh</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>参考文档：<a href="http://www.adempiere.com/Install_on_Debian_Chinese" target="_blank">Install on Debian Chinese</a></p>
<p>&nbsp;</p>]]></description></item><item><title>编译Adempiere</title><link>http://www.cnblogs.com/eastson/archive/2012/09/04/2669969.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 04 Sep 2012 02:00:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/04/2669969.html</guid><description><![CDATA[<p>操作系统：Windows XP</p>
<p>Adempiere版本：360LTS</p>
<p>源码目录：C:\adempiere360</p>
<p>&nbsp;</p>
<p>1. 按照《<a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_2" href="http://www.cnblogs.com/eastson/archive/2012/09/03/2668720.html" target="_blank">如何取得Adempiere的源码</a>》方法获取Adempiere的源码到C:\adempiere360.</p>
<p>2. 修改字符编码，见注意事项第二条。</p>
<p>3. 进入DOS提示符，执行Adempiere编译和安装：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">cd</span> c:\adempiere360\<span style="color: #000000;">utils_dev
Run_build.bat</span></pre>
</div>
<p><em>经过测试，直接使用Ant也是可以的：</em></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">cd</span> c:\adempiere360\<span style="color: #000000;">utils_dev
ant complete</span></pre>
</div>
<p>4. 慢慢地等待命令执行完成。完成后在C:\adempiere360\adempiere目录下会多出两个子目录：Adempiere和install。install是打包后的压缩档，zip和tar.gz两种格式。Adempiere是Adempiere_360LTS.zip解压后的内容。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090409572490.png" alt="" /></p>
<p>&nbsp;</p>
<p>注意事项：</p>
<p>1.&nbsp;Adempiere的开发环境通过utils_dev\build.properties文件设置：</p>
<div class="cnblogs_code">
<pre>env.ADEMPIERE_SOURCE=${adempiere.<span style="color: #000000;">base}
env</span>.ADEMPIERE_ROOT=${env.ADEMPIERE_SOURCE}/<span style="color: #000000;">adempiere
env</span>.ADEMPIERE_HOME=${env.ADEMPIERE_ROOT}/<span style="color: #000000;">Adempiere
env</span>.ADEMPIERE_INSTALL=${env.ADEMPIERE_SOURCE}/adempiere/<span style="color: #000000;">install
env</span>.ADEMPIERE_VERSION=<span style="color: #000000;">ADempiere
env</span>.ADEMPIERE_VERSION_FILE=<span style="color: #000000;">360LTS
env</span>.ADEMPIERE_VENDOR=<span style="color: #000000;">ADempiere
env</span>.ENCODING=UTF-8<span style="color: #000000;">
env</span>.XDOCLET_HOME=${env.ADEMPIERE_SOURCE}/<span style="color: #000000;">tools
env</span>.ADEMPIERE_ENV=Y</pre>
</div>
<p>可以根据自己的环境调整相应的项目。</p>
<p>2. 编译过程中可能会出现错误，然后停止编译。这是UTF-8编码问题，解决方法见《<a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_0" href="http://www.cnblogs.com/eastson/archive/2012/09/03/2669105.html" target="_blank">编译Adempiere base报错</a>》。有三个目录下的build.xml文件需要修改：base, client和install。</p>]]></description></item><item><title>编译Adempiere base报错</title><link>http://www.cnblogs.com/eastson/archive/2012/09/03/2669105.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 03 Sep 2012 09:09:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/03/2669105.html</guid><description><![CDATA[<p>编译Adempiere base包的时候报错：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090317025160.png" alt="" /></p>
<p>&nbsp;</p>
<p>估计是字符集的问题。Adempiere个别Java文件使用了UTF-8编码，因而需要为javac命令指定encoding参数。编辑base\build.xml，修改javac命令：</p>
<div class="cnblogs_code">
<pre>&lt;javac target="1.6" fork="true" destdir="${build.dir}" deprecation="on" <span style="color: #0000ff;">debug</span>="on" memoryinitialsize="512m" memorymaximumsize="512m" encoding="UTF-8"&gt;
  &lt;src <span style="color: #0000ff;">path</span>="${src}"/&gt;
  &lt;src <span style="color: #0000ff;">path</span>="${looksSrc}"/&gt;
  &lt;src <span style="color: #0000ff;">path</span>="../glassfishfacet/src"/&gt;
  &lt;src <span style="color: #0000ff;">path</span>="../jbossfacet/src"/&gt;
  &lt;classpath refid="project.class.path"/&gt;
&lt;/javac&gt;</pre>
</div>]]></description></item><item><title>找不到myDevEnv.bat文件？</title><link>http://www.cnblogs.com/eastson/archive/2012/09/03/2669052.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 03 Sep 2012 08:46:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/03/2669052.html</guid><description><![CDATA[<p>编译Adempiere 360LTS提示需要utils_dev\myDevEnv.bat文件。该文件为Adempiere初始化编译环境：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">@CALL ..\utils_dev\myDevEnv.bat
@IF NOT </span>%ADEMPIERE_ENV%==Y GOTO NOBUILD</pre>
</div>
<p>&nbsp;</p>
<p>Adempiere提示使用myDevEnvTemplate.bat作为myDevEnv.bat的模板：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">:NOBUILD
@Echo Check myDevEnv.bat (copy from myDevEnvTemplate.bat)</span></pre>
</div>
<p>&nbsp;</p>
<p>可是在360LTS源码包中找不到myDevEnvTemplate.bat该文件，就在网上搜了一个：</p>
<div class="cnblogs_code">
<pre>@<span style="color: #008000;">Rem</span><span style="color: #008000;">    My Development Environment</span>
@<span style="color: #008000;">Rem
</span>@<span style="color: #008000;">Rem</span><span style="color: #008000;">    This script sets variable for compiling Adempiere from source</span>
@<span style="color: #008000;">Rem</span>    
@<span style="color: #008000;">Rem</span>    
@<span style="color: #008000;">Rem</span><span style="color: #008000;">     $Header: /cvsroot/adempiere/utils_dev/myDevEnvTemplate.bat,v 1.19 2005/09/10 01:51:13 jjanke Exp $</span>
<span style="color: #000000;">

@</span><span style="color: #008000;">Rem</span><span style="color: #008000;">  Check the following parameters:</span>
@<span style="color: #008000;">Rem</span><span style="color: #008000;">  -------------------------------</span>
<span style="color: #000000;">
@</span><span style="color: #008000;">Rem</span><span style="color: #008000;">    Set Java Home</span>
@<span style="color: #0000ff;">SET</span> JAVA_HOME=C:\Program <span style="color: #0000ff;">Files</span>\Java\jdk1.5.<span style="color: #000000;">0_04
@</span><span style="color: #0000ff;">IF</span> <span style="color: #0000ff;">NOT</span> <span style="color: #0000ff;">EXIST</span> "%JAVA_HOME%\bin" <span style="color: #0000ff;">ECHO</span> "** JAVA_HOME NOT found"<span style="color: #000000;">
@</span><span style="color: #0000ff;">SET</span> <span style="color: #0000ff;">PATH</span>=%JAVA_HOME%\bin;%<span style="color: #0000ff;">PATH</span><span style="color: #000000;">%

@</span><span style="color: #008000;">Rem</span><span style="color: #008000;">    Set Adempiere Source Directory</span>
@<span style="color: #0000ff;">SET</span> ADEMPIERE_SOURCE=C:\Adempiere\<span style="color: #000000;">adempiere-all
@</span><span style="color: #0000ff;">IF</span> <span style="color: #0000ff;">NOT</span> <span style="color: #0000ff;">EXIST</span> "%ADEMPIERE_SOURCE%" <span style="color: #0000ff;">ECHO</span> "** ADEMPIERE_SOURCE NOT found"<span style="color: #000000;">

@</span><span style="color: #008000;">Rem</span><span style="color: #008000;">    Passwords for the keystore</span>
@<span style="color: #0000ff;">SET</span> KEYTOOL_PASS=<span style="color: #000000;">%KEY_PASSWORD%
@</span><span style="color: #0000ff;">IF</span> "%KEYTOOL_PASS%"=="" <span style="color: #0000ff;">SET</span> KEYTOOL_PASS=<span style="color: #000000;">myPassword

@</span><span style="color: #008000;">Rem</span><span style="color: #008000;">    Keystore &amp; FTP Password</span>
@<span style="color: #0000ff;">SET</span> ANT_PROPERTIES=-Dpassword=%KEYTOOL_PASS% -DftpPassword=<span style="color: #000000;">%FTP_PASSWORD%

@</span><span style="color: #008000;">Rem</span><span style="color: #008000;">    Ant to send email after completion - change or delete</span>
@<span style="color: #0000ff;">SET</span> ANT_PROPERTIES=%ANT_PROPERTIES% -DMailLogger.mailhost=xxx -DMailLogger.from=xxxx -DMailLogger.failure.to=xxxx -DMailLogger.success.to=<span style="color: #000000;">xxxx

@</span><span style="color: #008000;">Rem</span><span style="color: #008000;">    Automatic Installation - Where Adempiere will be unzipped</span>
@<span style="color: #0000ff;">SET</span> ADEMPIERE_ROOT=C:\<span style="color: #000000;">
@</span><span style="color: #008000;">Rem</span><span style="color: #008000;">    Automatic Installation - Resulting Home Directory</span>
@<span style="color: #0000ff;">SET</span> ADEMPIERE_HOME=<span style="color: #000000;">%ADEMPIERE_ROOT%Adempiere
@</span><span style="color: #008000;">Rem</span><span style="color: #008000;">    Automatic Installation - Share for final Installers</span>
@<span style="color: #0000ff;">SET</span> ADEMPIERE_INSTALL=C:\<span style="color: #000000;">Install
@</span><span style="color: #0000ff;">IF</span> <span style="color: #0000ff;">NOT</span> <span style="color: #0000ff;">EXIST</span> %ADEMPIERE_INSTALL% <span style="color: #0000ff;">Mkdir</span><span style="color: #000000;"> %ADEMPIERE_INSTALL%


@</span><span style="color: #008000;">Rem</span><span style="color: #008000;">  ---------------------------------------------------------------</span>
@<span style="color: #008000;">Rem</span><span style="color: #008000;">  In most cases you don't need to change anything below this line</span>
@<span style="color: #008000;">Rem</span><span style="color: #008000;">  If you need to define something manually do it above this line,</span>
@<span style="color: #008000;">Rem</span><span style="color: #008000;">  it should work, since most variables are checked before set.</span>
@<span style="color: #008000;">Rem</span><span style="color: #008000;">  ---------------------------------------------------------------</span>
<span style="color: #000000;">
@</span><span style="color: #0000ff;">SET</span> CURRENTDIR=%<span style="color: #0000ff;">CD</span><span style="color: #000000;">%

@</span><span style="color: #008000;">Rem</span><span style="color: #008000;"> Set Version</span>
@<span style="color: #0000ff;">SET</span> ADEMPIERE_VERSION=<span style="color: #000000;">ADempiere
@</span><span style="color: #0000ff;">SET</span> ADEMPIERE_VERSION_FILE=315<span style="color: #000000;">
@</span><span style="color: #0000ff;">SET</span> ADEMPIERE_VENDOR=<span style="color: #000000;">ADempiere

@</span><span style="color: #0000ff;">SET</span> ENCODING=UTF-8<span style="color: #000000;">

@</span><span style="color: #008000;">Rem</span><span style="color: #008000;">    ClassPath</span>
@<span style="color: #0000ff;">IF</span> <span style="color: #0000ff;">NOT</span> <span style="color: #0000ff;">EXIST</span> "%JAVA_HOME%\lib\tools.jar" <span style="color: #0000ff;">ECHO</span> "** Need Full Java SDK **"<span style="color: #000000;">
@</span><span style="color: #0000ff;">SET</span> CLASSPATH=%CLASSPATH%;%JAVA_HOME%\lib\tools.<span style="color: #000000;">jar

@</span><span style="color: #0000ff;">IF</span> <span style="color: #0000ff;">NOT</span> <span style="color: #0000ff;">EXIST</span> %ADEMPIERE_SOURCE%\tools\lib\ant.jar <span style="color: #0000ff;">ECHO</span> "** Ant.jar NOT found **"<span style="color: #000000;">
@</span><span style="color: #0000ff;">SET</span> CLASSPATH=%CLASSPATH%;%ADEMPIERE_SOURCE%\tools\lib\ant.jar;%ADEMPIERE_SOURCE%\tools\lib\ant-launcher.jar;%ADEMPIERE_SOURCE%\tools\lib\ant-swing.jar;%ADEMPIERE_SOURCE%\tools\lib\ant-commons-<span style="color: #0000ff;">net</span>.jar;%ADEMPIERE_SOURCE%\tools\lib\commons-<span style="color: #0000ff;">net</span>-1.4.0.<span style="color: #000000;">jar
@</span><span style="color: #008000;">Rem</span><span style="color: #008000;"> SET CLASSPATH=%CLASSPATH%;%ADEMPIERE_SOURCE%\jboss\lib\xml-apis.jar</span>
<span style="color: #000000;">

@</span><span style="color: #008000;">Rem</span><span style="color: #008000;">    Set XDoclet 1.1.2 Environment</span>
@<span style="color: #0000ff;">SET</span> XDOCLET_HOME=%ADEMPIERE_SOURCE%\<span style="color: #000000;">tools

@</span><span style="color: #008000;">Rem</span><span style="color: #008000;">    Java Keystore for signing jars</span>
@<span style="color: #0000ff;">IF</span> <span style="color: #0000ff;">NOT</span> <span style="color: #0000ff;">EXIST</span> %ADEMPIERE_SOURCE%\keystore <span style="color: #0000ff;">MKDIR</span> %ADEMPIERE_SOURCE%\<span style="color: #000000;">keystore
@</span><span style="color: #0000ff;">IF</span> <span style="color: #0000ff;">EXIST</span> "%ADEMPIERE_SOURCE%\keystore\myKeystore" <span style="color: #0000ff;">GOTO</span><span style="color: #000000;"> CHECKKEYVALUE

</span><span style="color: #800000;">:CREATEADEMPIEREKEY</span>
<span style="color: #0000ff;">@Echo</span> No Java Keystore found, creating ...<span style="color: #000000;">
@</span><span style="color: #008000;">Rem</span><span style="color: #008000;">    .</span>
@<span style="color: #008000;">Rem</span><span style="color: #008000;">    This is the keystore for code signing.</span>
@<span style="color: #008000;">Rem</span><span style="color: #008000;">    Replace it with the official certificate.</span>
@<span style="color: #008000;">Rem</span><span style="color: #008000;">    Note that this is not the SSL certificate.</span>
@<span style="color: #008000;">Rem</span><span style="color: #008000;">    .</span>

<span style="color: #0000ff;">SET</span> KEYTOOL_DNAME="CN=myName, OU=myName, O=myOrg, L=myTown, ST=myState, C=US"

"%JAVA_HOME%\bin\keytool" -genkey -keyalg rsa -alias adempiere -dname %KEYTOOL_DNAME% -keypass %KEYTOOL_PASS% -validity 365 -keystore %ADEMPIERE_SOURCE%\keystore\<span style="color: #000000;">myKeystore -storepass %KEYTOOL_PASS%

</span>"%JAVA_HOME%\bin\keytool" -selfcert -alias adempiere -dname %KEYTOOL_DNAME% -keypass %KEYTOOL_PASS% -validity 180 -keystore %ADEMPIERE_SOURCE%\keystore\<span style="color: #000000;">myKeystore -storepass %KEYTOOL_PASS%

</span><span style="color: #800000;">:CHECKKEYVALUE</span><span style="color: #000000;">
@</span>"%JAVA_HOME%\bin\keytool" -list -alias adempiere -keyStore %ADEMPIERE_SOURCE%\keystore\<span style="color: #000000;">myKeystore -storepass %KEYTOOL_PASS%
@</span><span style="color: #0000ff;">IF</span> <span style="color: #0000ff;">ERRORLEVEL</span> 1 <span style="color: #0000ff;">GOTO</span> <span style="color: #800000;">:CREATEADEMPIEREKEY</span><span style="color: #000000;">

@</span><span style="color: #008000;">Rem</span><span style="color: #008000;"> Set ADEMPIERE_ENV for all other scripts.</span>
@<span style="color: #0000ff;">SET</span> ADEMPIERE_ENV=Y</pre>
</div>
<p>&nbsp;</p>
<p>将上面的代码复制到utils_dev\myDevEnv.bat，修改为自己的工作环境就可以了。</p>]]></description></item><item><title>如何取得Adempiere的源码？</title><link>http://www.cnblogs.com/eastson/archive/2012/09/03/2668720.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 03 Sep 2012 06:12:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/03/2668720.html</guid><description><![CDATA[<p>1. 安装SVN客户端，这里以<a href="http://tortoisesvn.net/">TortoiseSVN</a>为例。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090314021936.png" alt="" /></p>
<p>2. 使用Repo-browser功能打开Adempiere项目的SVN顶层路径<a href="https://adempiere.svn.sourceforge.net/svnroot/adempiere/"><em><strong>https://adempiere.svn.sourceforge.net/svnroot/adempiere/</strong></em></a>，找到对应版本的源码URL：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090314051816.png" alt="" /></p>
<p>例如版本360LTS对应的URL就是<a href="https://adempiere.svn.sourceforge.net/svnroot/adempiere/tags/adempiere360lts"><em><strong>https://adempiere.svn.sourceforge.net/svnroot/adempiere/tags/adempiere360lts</strong></em></a>。</p>
<p>3. 使用Export功能下载Adempiere的源码：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090314102736.png" alt="" /></p>
<p>4. 接下来就慢慢等吧，整个Adempiere 360LTS源码有270M。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090314382041.png" alt="" /></p>]]></description></item><item><title>Adempiere安装过程</title><link>http://www.cnblogs.com/eastson/archive/2012/09/03/2668343.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 03 Sep 2012 03:40:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/09/03/2668343.html</guid><description><![CDATA[<p>Adempiere：3.70 LTS</p>
<p>&nbsp;</p>
<h3>安装JDK</h3>
<p>1. 执行JDK安装程序。注意是JDK，不是JRE。<em><strong>JDK版本选择6，Adempiere 3.70配置程序暂时还识别不了JDK 7</strong></em>。<em><strong>Adempiere 3.80配置程序必需JDK 7</strong></em>。</p>
<p>2. 设置环境变量：</p>
<div class="cnblogs_code">
<pre>JAVA_HOME=C:\Program Files\Java\jdk1.6.0_21<span style="color: #000000;">
CLASSPATH</span>=.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%<span style="color: #000000;">\lib\tools.jar
Path</span>=.......;%JAVA_HOME%\bin</pre>
</div>
<p>&nbsp;</p>
<h3>安装PostgreSQL 9.1</h3>
<p>1. 执行PostgreSQL安装程序。安装时有两个地方需要注意：一个是管理员密码，一个是服务端口。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090310235517.png" alt="" /></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090310243630.png" alt="" /></p>
<p>2. 配置环境变量(导入Adempiere数据时需要该路径下的一些命令)：</p>
<div class="cnblogs_code">
<pre>Path=......;C:\Program Files\PostgreSQL\<span style="color: #800080;">9.1</span>\bin</pre>
</div>
<p>3. 配置pg_hda.conf。打开C:\Program Files\PostgreSQL\9.1\data\pg_hda.conf，找到原先的本机配置：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;"># IPv4 local connections:
host    all             all             </span><span style="color: #800080;">127.0</span>.<span style="color: #800080;">0.1</span>/<span style="color: #800080;">32</span>            md5</pre>
</div>
<p>修改为：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;"># IPv4 local connections:
host    all             all             </span><span style="color: #800080;">127.0</span>.<span style="color: #800080;">0.1</span>/<span style="color: #800080;">32</span><span style="color: #000000;">            trust
host    all             all             </span><span style="color: #800080;">192.168</span>.<span style="color: #800080;">197.169</span>/<span style="color: #800080;">32</span><span style="color: #000000;">            trust
host    all             all             amonest</span>-xp-chs            trust</pre>
</div>
<p>注意：这里都是假定PostgreSQL和Adempiere安装在同一台电脑上。</p>
<p>修改完毕后，重新启动PostgreSQL服务。</p>
<p>&nbsp;</p>
<h3>配置Adempiere</h3>
<p>1. 执行Run_Setup.bat，打开Adempiere服务器配置。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090310540996.png" alt="" /></p>
<p>重点注意数据库服务器的配置：</p>
<ul>
<li>数据库类型选择postgresql</li>
<li>数据库名称默认为xe，修改为adempiere以方便管理。此数据库可以预先创建好，如果不存在，Adempiere配置程序会自动创建该数据库。</li>
<li>数据库端口要和PostgreSQL安装时的服务端口相同。</li>
<li>系统用户口令，PostgreSQL安装时设置的管理员密码。Adempiere需要以管理员身份创建数据库和数据库帐号。</li>
<li>数据库帐号和密码：Adempiere会使用该帐号和密码连接数据库。此帐号可以预先创建好，如果不存在，Adempiere配置程序会自动创建该帐号。</li>
</ul>
<p>2. 点击"测试"按钮。如果配置错误会出现对应的错误提示。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090311034958.png" alt="" /></p>
<p>3. 点击"保存"按钮，提示接受用户许可协议。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090311054629.png" alt="" /></p>
<p>4. 等待Adempiere安装，安装完成后该DOS窗口会自动关闭。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090311090957.png" alt="" /></p>
<p>&nbsp;</p>
<h3>导入Adempiere数据</h3>
<p>运行C:\Adempiere\utils\RUN_ImportAdempiere.bat：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090311165476.png" alt="" /></p>
<p>&nbsp;</p>
<h3>运行Adempiere服务</h3>
<p>运行C:\Adempiere\utils\RUN_Server2.bat。</p>
<p>&nbsp;</p>
<h3>登录Adempiere ERP</h3>
<p>1. 双击桌面的Adempiere图标，会要求接受用户许可协议，然后出现连机配置窗口：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090311272721.png" alt="" /></p>
<p>2. 应用服务器主机默认为MyAppsServer，修改为自己的主机名字。点击"测试应用服务器"按钮，相关的数据库信息会自动带出来。</p>
<p>3. 点击"测试数据库"按钮。如果数据库连接成功，点击确认按钮关闭连机配置。</p>
<p>4. 使用默认帐号GardenAdmin登录系统，点击确认按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090311355557.png" alt="" /></p>
<p>5. 打开默认实体GardenWorld，点击确认按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090311370879.png" alt="" /></p>
<p>6. Adempiere ERP成功登录。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012090311382842.png" alt="" /></p>
<p>&nbsp;</p>
<h3>停止Adempiere服务</h3>
<p>运行C:\Adempiere\utils\RUN_Server2Stop.bat。</p>
<p>&nbsp;</p>
<p>参考文档：</p>
<p><a href="http://www.adempiere.com/Install_on_Debian_Chinese" target="_blank">在Debian及Postgres上安装Adempiere</a></p>
<p><a href="http://www.adempiere.com/Chinese" target="_blank">ADempiere中文首页</a></p>]]></description></item><item><title>CentOS 6.2 下编译内核</title><link>http://www.cnblogs.com/eastson/archive/2012/08/30/2663480.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 30 Aug 2012 04:04:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/30/2663480.html</guid><description><![CDATA[<p>本文记录了CentOS 6.2环境下编译Linux内核3.5.3的整个过程。</p>
<p>&nbsp;</p>
<p>操作系统：CentOS 6.2&nbsp;</p>
<p>原始内核：2.6.32-279.5.2.el6.x86_64</p>
<p>编译内核：3.5.3</p>
<p>&nbsp;</p>
<h3>第一步：安装必要的软件包</h3>
<p>编译内核需要一些必备软件包，例如make, path, gcc, gcc-c++, ncurses-devel等。使用yum命令可以方便的安装这些包。</p>
<div class="cnblogs_code">
<pre># yum groupinstall <span style="color: #800000;">"</span><span style="color: #800000;">Development tools</span><span style="color: #800000;">"<br /># yum install ncurses-devel<br /></span></pre>
</div>
<p>&nbsp;</p>
<h3>第二步：获取最新版本内核</h3>
<p>到<a href="http://www.cnblogs.com/eastson/admin/kernel.org" target="_blank">kernel.org</a>下载最新版本的内核，最好选择稳定版(<span>stable</span>)。当前最新的稳定版是3.5.3。</p>
<div class="cnblogs_code">
<pre># cd /usr/<span style="color: #000000;">src
# </span><span style="color: #0000ff;">tar</span> xvf ~/linux-<span style="color: #800080;">3.5</span>.<span style="color: #800080;">3</span>.<span style="color: #0000ff;">tar</span><span style="color: #000000;">.bz2</span></pre>
</div>
<p>&nbsp;</p>
<p>Linux&nbsp;3.5.3内核解压后有525M：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">du</span> -<span style="color: #0000ff;">sh</span> *
<span style="color: #800080;">4</span><span style="color: #000000;">.0K    debug
47M     kernels
525M    linux</span>-<span style="color: #800080;">3.5</span>.<span style="color: #800080;">3</span></pre>
</div>
<p>&nbsp;</p>
<h3>第三步：配置和编译内核</h3>
<p>首先进入内核目录，清理掉内核可能自带的编译结果。</p>
<div class="cnblogs_code">
<pre># cd linux-<span style="color: #800080;">3.5</span>.<span style="color: #800080;">3</span><span style="color: #000000;">
# </span><span style="color: #0000ff;">make</span> clean</pre>
</div>
<p>&nbsp;</p>
<p>内核的配置信息保存在.config文件。配置内核有两种方式：一种是基于当前已安装系统的内核配置，另外一种是基于要安装的内核默认配置。若基于第一种方式，则需要将/boot目录下的对应版本配置信息复制过来：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">cp</span> /boot/config-<span style="color: #800080;">2.6</span>.<span style="color: #800080;">32</span>-<span style="color: #800080;">279.5</span>.<span style="color: #800080;">2</span>.el6.x86_64 .config</pre>
</div>
<p>&nbsp;</p>
<p>配置内核：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">make</span> menuconfig</pre>
</div>
<p>&nbsp;</p>
<p>编译内核：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">make</span></pre>
</div>
<p>编译内核是一个很耗时的过程，在我的电脑上用了接近90分钟。</p>
<p>&nbsp;</p>
<h3>第四步：安装内核</h3>
<p>安装内核：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">make</span> modules_install <span style="color: #0000ff;">install</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>第一次编译LFS成功</title><link>http://www.cnblogs.com/eastson/archive/2012/08/30/2663164.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 30 Aug 2012 02:05:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/30/2663164.html</guid><description><![CDATA[<p>进过近两个星期的奋战，终于第一次编译LFS成功了，发帖留念。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012083010040352.png" alt="" /></p>
<p>&nbsp;</p>
<p>参考文档：<a href="http://blog.chinaunix.net/uid-436750-id-2123580.html" target="_blank">第二版 手把手教你如何建立自己的Linux系统</a></p>]]></description></item><item><title>Ubuntu 12.04更新源</title><link>http://www.cnblogs.com/eastson/archive/2012/08/24/2654163.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 24 Aug 2012 06:24:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/24/2654163.html</guid><description><![CDATA[<p>1、首先备份Ubuntu12.04源列表</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">cp</span> /etc/apt/sources.list /etc/apt/sources.list.backup （备份下当前的源列表）</pre>
</div>
<p>&nbsp;</p>
<p>2、修改更新源</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> gedit /etc/apt/sources.list （打开Ubuntu <span style="color: #800080;">12</span>.04源列表文件）</pre>
</div>
<p>&nbsp;</p>
<p>3、把里面的列表替换成下面的列表</p>
<p>163源</p>
<div class="cnblogs_code">
<pre>deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise main restricted</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise main restricted</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise-updates main restricted</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise-updates main restricted</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise universe</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise universe</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise-updates universe</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise-updates universe</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise-updates multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise-updates multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise-backports main restricted universe multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise-backports main restricted universe multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise-security main restricted</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise-security main restricted</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise-security universe</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise-security universe</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise-security multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.163.com/ubuntu/ precise-security multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">extras.ubuntu.com/ubuntu precise main</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">extras.ubuntu.com/ubuntu precise main</span></pre>
</div>
<p>&nbsp;</p>
<p>sohu源</p>
<div class="cnblogs_code">
<pre>deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise main restricted</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise main restricted</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise-updates main restricted</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise-updates main restricted</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise universe</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise universe</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise-updates universe</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise-updates universe</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise-updates multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise-updates multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise-backports main restricted universe multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise-backports main restricted universe multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise-security main restricted</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise-security main restricted</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise-security universe</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise-security universe</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise-security multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/ubuntu/ precise-security multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">extras.ubuntu.com/ubuntu precise main</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">extras.ubuntu.com/ubuntu precise main</span></pre>
</div>
<p>&nbsp;</p>
<p><em><strong>ubuntu.cn99.com源（推荐）:</strong></em></p>
<div class="cnblogs_code">
<pre>deb http:<span style="color: #008000;">//</span><span style="color: #008000;">ubuntu.cn99.com/ubuntu/ precise main restricted universe multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">ubuntu.cn99.com/ubuntu/ precise-updates main restricted universe multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">ubuntu.cn99.com/ubuntu/ precise-security main restricted universe multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">ubuntu.cn99.com/ubuntu/ precise-backports main restricted universe multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">ubuntu.cn99.com/ubuntu-cn/ precise main restricted universe multiverse</span></pre>
</div>
<p>&nbsp;</p>
<p>教育网源<br />如果你是在校大学生，可以使用校园网/教育网，就是用教育网的资源吧，尤其是支持ipv6的，那更新速度就按兆算了。</p>
<p>#电子科技大学</p>
<div class="cnblogs_code">
<pre>deb http:<span style="color: #008000;">//</span><span style="color: #008000;">ubuntu.uestc.edu.cn/ubuntu/ precise main restricted universe multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">ubuntu.uestc.edu.cn/ubuntu/ precise-backports main restricted universe multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">ubuntu.uestc.edu.cn/ubuntu/ precise-proposed main restricted universe multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">ubuntu.uestc.edu.cn/ubuntu/ precise-security main restricted universe multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">ubuntu.uestc.edu.cn/ubuntu/ precise-updates main restricted universe multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">ubuntu.uestc.edu.cn/ubuntu/ precise main restricted universe multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">ubuntu.uestc.edu.cn/ubuntu/ precise-backports main restricted universe multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">ubuntu.uestc.edu.cn/ubuntu/ precise-proposed main restricted universe multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">ubuntu.uestc.edu.cn/ubuntu/ precise-security main restricted universe multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">ubuntu.uestc.edu.cn/ubuntu/ precise-updates main restricted universe multiverse</span></pre>
</div>
<p>&nbsp;</p>
<p>#中国科技大学</p>
<div class="cnblogs_code">
<pre>deb http:<span style="color: #008000;">//</span><span style="color: #008000;">debian.ustc.edu.cn/ubuntu/ precise main restricted universe multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">debian.ustc.edu.cn/ubuntu/ precise-backports restricted universe multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">debian.ustc.edu.cn/ubuntu/ precise-proposed main restricted universe multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">debian.ustc.edu.cn/ubuntu/ precise-security main restricted universe multiverse</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">debian.ustc.edu.cn/ubuntu/ precise-updates main restricted universe multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">debian.ustc.edu.cn/ubuntu/ precise main restricted universe multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">debian.ustc.edu.cn/ubuntu/ precise-backports main restricted universe multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">debian.ustc.edu.cn/ubuntu/ precise-proposed main restricted universe multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">debian.ustc.edu.cn/ubuntu/ precise-security main restricted universe multiverse</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">debian.ustc.edu.cn/ubuntu/ precise-updates main restricted universe multiverse</span></pre>
</div>
<p>&nbsp;</p>
<p>#北京理工大学</p>
<div class="cnblogs_code">
<pre>deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirror.bjtu.edu.cn/ubuntu/ precise main multiverse restricted universe</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirror.bjtu.edu.cn/ubuntu/ precise-backports main multiverse restricted universe</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirror.bjtu.edu.cn/ubuntu/ precise-proposed main multiverse restricted universe</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirror.bjtu.edu.cn/ubuntu/ precise-security main multiverse restricted universe</span>
deb http:<span style="color: #008000;">//</span><span style="color: #008000;">mirror.bjtu.edu.cn/ubuntu/ precise-updates main multiverse restricted universe</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirror.bjtu.edu.cn/ubuntu/ precise main multiverse restricted universe</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirror.bjtu.edu.cn/ubuntu/ precise-backports main multiverse restricted universe</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirror.bjtu.edu.cn/ubuntu/ precise-proposed main multiverse restricted universe</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirror.bjtu.edu.cn/ubuntu/ precise-security main multiverse restricted universe</span>
deb-src http:<span style="color: #008000;">//</span><span style="color: #008000;">mirror.bjtu.edu.cn/ubuntu/ precise-updates main multiverse restricted universe</span></pre>
</div>
<p>&nbsp;</p>
<p>4、更新源</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> apt-get update</pre>
</div>]]></description></item><item><title>lfs 构建过程记录</title><link>http://www.cnblogs.com/eastson/archive/2012/08/24/2653779.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 24 Aug 2012 02:25:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/24/2653779.html</guid><description><![CDATA[<p>1. root</p>
<p>mkdir -pv /mnt/lfs</p>
<p>mkdir -pv /mnt/lfs/{tools,local,build}</p>
<p>ln -sv /mnt/lfs/tools /</p>
<p>&nbsp;</p>
<p>2. root</p>
<p>cd /mnt/lfs</p>
<p>cp lfs-packages-</p>
<p>tar xvf lfs-packages-6.6.tar</p>
<p>mv lfs-6.6-sources sources</p>
<p>rm -rf lfs-packages-6.6.tar</p>
<p>chown lfs:lfs -R /mnt/lfs<br /><br /></p>
<p class="title"><a href="http://www.ha97.com/book/lfs-book-6.6/" target="_blank">Linux From Scratch</a></p>
<p class="title"><a href="http://www.linuxfromscratch.org/lfs/download.html" target="_blank">Download LFS</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<pre class="userinput">groupadd lfs
useradd -s /bin/bash -g lfs -m -k /dev/null lfs<br />passwd lfs<br /><br /></pre>
<pre class="userinput">cat &gt; ~lfs/.bash_profile &lt;&lt; "EOF"
<code class="literal">exec env -i HOME=$HOME TERM=$TERM PS1='\u:\w\$ ' /bin/bash</code>
EOF<br /><br /></pre>
<pre class="userinput">cat &gt; ~lfs/.bashrc &lt;&lt; "EOF"
<code class="literal">set +h
umask 022
LFS=/mnt/lfs
LC_ALL=POSIX
LFS_TGT=$(uname -m)-lfs-linux-gnu
PATH=/tools/bin:/bin:/usr/bin
export LFS LC_ALL LFS_TGT PATH</code>
EOF</pre>
<pre class="userinput"><br />su - lfs</pre>]]></description></item><item><title>compute suffix of object files</title><link>http://www.cnblogs.com/eastson/archive/2012/08/23/2652367.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 23 Aug 2012 06:04:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/23/2652367.html</guid><description><![CDATA[<p><span>Indeed, adding the MPFR and GPM lib directories to LD_LIBRARY_PATH solves theproblem. For some reason I thought configure would handle this for me since Igave it --with-gmp and --with-mpfr settings. Would have been nice if configuretested for this and given a helpful error. In any event I'll close this out asan invalid bug report.</span></p>
<p><span>&nbsp;</span></p>
<p><span>需要安装gmp与mpfr并且需要在.bash_profile(一般在/root目录下）配置LD_LIBRARY_PATH,把GMP与MPFR对应的lib配置上如：</span></p>
<div class="cnblogs_code">
<pre>LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/mpfr/<span style="color: #800080;">2.4</span>.<span style="color: #800080;">0</span>/lib:/usr/local/gmp/<span style="color: #800080;">4.2</span>.<span style="color: #800080;">2</span>/<span style="color: #000000;">lib
export LD_LIBRARY_PATH</span></pre>
</div>
<p>一定要重启生效或者使用 source /root/.bash_profile</p>]]></description></item><item><title>modprobe命令</title><link>http://www.cnblogs.com/eastson/archive/2012/08/22/2650420.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 22 Aug 2012 03:05:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/22/2650420.html</guid><description><![CDATA[<p>命令语法：modprobe [-acdlrtvV][--help][模块文件][符号名称 = 符号值]<br />功能说明：自动处理可载入模块。<br />补充说明：modprobe可载入指定的个别模块，或是载入一组相依的模块。modprobe会根据depmod所产生的相依关系，决定要载入哪些模块。若在载入过程中发生错误，在modprobe会卸载整组的模块。</p>
<p>&nbsp;</p>
<p>insmod 与 modprobe 都是载入 kernel module，不过一般差别于 modprobe 能够处理 module 载入的相依问题。<br />比方你要载入 a module，但是 a module 要求系统先载入 b module 时，直接用 insmod 挂入通常都会出现错误讯息，不过 modprobe 倒是能够知道先载入 b module 后才载入 a module，如此相依性就会满足。<br />不过 modprobe 并不是大神，不会厉害到知道 module 之间的相依性为何，该程式是读取 /lib/modules/2.6.xx/modules.dep 档案得知相依性的。而该档案是透过 depmod 程式所建立。<br />补充说明：modprobe可载入指定的个别模块，或是载入一组相依的模块。modprobe会根据depmod所产生的相依关系，决定要载入哪些模块。若在载入过程中发生错误，在modprobe会卸载整组的模块。</p>
<p>&nbsp;</p>
<p><strong>[举例]</strong><br />*查看modules的配置文件：</p>
<div class="cnblogs_code">
<pre>$<span style="color: #0000ff;">modprobe</span> -c</pre>
</div>
<p>这里，可以查看modules 的配置文件，比如模块的alias.html' target='_blank'&gt;别名是什么等。会打印许多行信息，例如其中的一行会类似如下：</p>
<div class="cnblogs_code">
<pre>alias symbol:ieee80211_remove_wds_addr wlan</pre>
</div>
<p>&nbsp;</p>
<p>*列出内核中所有已经或者未挂载的所有模块：</p>
<div class="cnblogs_code">
<pre>$<span style="color: #0000ff;">modprobe</span> -l</pre>
</div>
<p>这里，我们能查看到我们所需要的模块，然后根据我们的需要来挂载；其实modprobe -l 读取的模块列表就位于 /lib/modules/'uname -r' 目录中；其中uname -r 是内核的版本.例如输出结果的其中一行是：</p>
<div class="cnblogs_code">
<pre>/lib/modules/<span style="color: #800080;">2.6</span>.<span style="color: #800080;">27</span>-<span style="color: #800080;">7</span>-generic/kernel/arch/x86/oprofile/oprofile.ko</pre>
</div>
<p>&nbsp;</p>
<p>*挂载vfat模块：</p>
<div class="cnblogs_code">
<pre>#<span style="color: #0000ff;">modprobe</span> vfat</pre>
</div>
<p>这里，使用格式"modprobe 模块名"来挂载一个模块。挂载之后，用lsmod可以查看已经挂载的模块。模块名是不能带有后缀的，我们通过modprobe -l 所看到的模块，都是带有.ko 或.o后缀。</p>
<p>&nbsp;</p>
<p>*移除已经加载的模块：</p>
<div class="cnblogs_code">
<pre>#<span style="color: #0000ff;">modprobe</span> -r 模块名</pre>
</div>
<p>这里，移除已加载的模块，和rmmod 功能相同。注意：模块名是不能带有后缀的，我们通过modprobe -l 所看到的模块，都是带有.ko 或.o后缀.</p>
<p>&nbsp;</p>
<p>与内核模块操作相关的命令还有:lsmod modinfo depmod rmmod inmod modprobe   </p>
<p>&nbsp;</p>
<p>modprobe 命令是根据depmod -a的输出/lib/modules/version/modules.dep来加载全部的所需要模块。　　<br />删除模块的命令是：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">modprobe</span> -r filename</pre>
</div>
<p>　　</p>
<p>系统启动后，正常工作的模块都在/proc/modules文件中列出。使用lsmod命令也可显示相同内容。　　<br />在内核中有一个&ldquo;Automatic kernel module loading"功能被编译到了内核中。当用户尝试打开某类型的文件时，内核会根据需要尝试加载相应的模块。/etc/modules.conf或 /etc/modprobe.conf文件是一个自动处理内核模块的控制文件。</p>
<p>&nbsp;</p>
<p>参　　数：</p>
<div class="cnblogs_code">
<pre>-a或--<span style="color: #000000;">all 　载入全部的模块。 
</span>-c或--show-<span style="color: #000000;">conf 　显示所有模块的设置信息。 
</span>-d或--<span style="color: #000000;">debug 　使用排错模式。 
</span>-l或--<span style="color: #000000;">list 　显示可用的模块。 
</span>-r或--<span style="color: #000000;">remove 　模块闲置不用时，即自动卸载模块。 
</span>-t或--<span style="color: #000000;">type 　指定模块类型。 
</span>-v或--<span style="color: #000000;">verbose 　执行时显示详细的信息。 
</span>-V或--<span style="color: #000000;">version 　显示版本信息。 
</span>-help 　显示帮助</pre>
</div>]]></description></item><item><title>Linux系统信息命令大全</title><link>http://www.cnblogs.com/eastson/archive/2012/08/22/2650156.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 22 Aug 2012 00:33:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/22/2650156.html</guid><description><![CDATA[<p>系统命令：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">uname</span> -a # 查看内核/操作系统/<span style="color: #000000;">CPU信息
# </span><span style="color: #0000ff;">head</span> -n <span style="color: #800080;">1</span> /etc/<span style="color: #000000;">issue # 查看操作系统版本
# </span><span style="color: #0000ff;">cat</span> /proc/<span style="color: #000000;">cpuinfo # 查看CPU信息
# </span><span style="color: #0000ff;">hostname</span><span style="color: #000000;"> # 查看计算机名
# lspci </span>-<span style="color: #000000;">tv # 列出所有PCI设备
# lsusb </span>-<span style="color: #000000;">tv # 列出所有USB设备
# </span><span style="color: #0000ff;">lsmod</span><span style="color: #000000;"> # 列出加载的内核模块
# </span><span style="color: #0000ff;">env</span> # 查看环境变量</pre>
</div>
<p>&nbsp;</p>
<p>资源命令：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">free</span> -<span style="color: #000000;">m # 查看内存使用量和交换区使用量
# </span><span style="color: #0000ff;">df</span> -<span style="color: #000000;">h # 查看各分区使用情况
# </span><span style="color: #0000ff;">du</span> -<span style="color: #0000ff;">sh</span><span style="color: #000000;"> # 查看指定目录的大小
# </span><span style="color: #0000ff;">grep</span> MemTotal /proc/<span style="color: #000000;">meminfo # 查看内存总量
# </span><span style="color: #0000ff;">grep</span> MemFree /proc/<span style="color: #000000;">meminfo # 查看空闲内存量
# </span><span style="color: #0000ff;">uptime</span><span style="color: #000000;"> # 查看系统运行时间、用户数、负载
# </span><span style="color: #0000ff;">cat</span> /proc/loadavg # 查看系统负载</pre>
</div>
<p>&nbsp;</p>
<p>磁盘和分区</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">mount</span> | column -<span style="color: #000000;">t # 查看挂接的分区状态
# fdisk </span>-<span style="color: #000000;">l # 查看所有分区
# swapon </span>-<span style="color: #000000;">s # 查看所有交换分区
# hdparm </span>-i /dev/<span style="color: #000000;">hda # 查看磁盘参数(仅适用于IDE设备)
# dmesg </span>| <span style="color: #0000ff;">grep</span> IDE # 查看启动时IDE设备检测状况</pre>
</div>
<p>&nbsp;</p>
<p>网络：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">ifconfig</span><span style="color: #000000;"> # 查看所有网络接口的属性
# iptables </span>-<span style="color: #000000;">L # 查看防火墙设置
# route </span>-<span style="color: #000000;">n # 查看路由表
# netstat </span>-<span style="color: #000000;">lntp # 查看所有监听端口
# netstat </span>-<span style="color: #000000;">antp # 查看所有已经建立的连接
# netstat </span>-s # 查看网络统计信息</pre>
</div>
<p>&nbsp;</p>
<p>进程：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">ps</span> -<span style="color: #000000;">ef # 查看所有进程
# top # 实时显示进程状态</span></pre>
</div>
<p>&nbsp;</p>
<p>用户：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">w</span><span style="color: #000000;"> # 查看活动用户
# </span><span style="color: #0000ff;">id</span> &lt;用户名&gt;<span style="color: #000000;"> # 查看指定用户信息
# </span><span style="color: #0000ff;">last</span><span style="color: #000000;"> # 查看用户登录日志
# </span><span style="color: #0000ff;">cut</span> -d: -f1 /etc/<span style="color: #0000ff;">passwd</span><span style="color: #000000;"> # 查看系统所有用户
# </span><span style="color: #0000ff;">cut</span> -d: -f1 /etc/<span style="color: #000000;">group # 查看系统所有组
# crontab </span>-l # 查看当前用户的计划任务</pre>
</div>
<p>&nbsp;</p>
<p>服务：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;"># chkconfig &ndash;list # 列出所有系统服务
# chkconfig &ndash;list </span>| <span style="color: #0000ff;">grep</span> on # 列出所有启动的系统服务</pre>
</div>
<p>&nbsp;</p>
<p>程序：</p>
<div class="cnblogs_code">
<pre># rpm -qa # 查看所有安装的软件包</pre>
</div>
<p>&nbsp;</p>
<p>原文地址：<a href="http://www.iiwnet.com/php_linux/252.html" target="_blank">http://www.iiwnet.com/php_linux/252.html</a></p>]]></description></item><item><title>xxxxxxx</title><link>http://www.cnblogs.com/eastson/archive/2012/08/21/2649269.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 21 Aug 2012 08:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/21/2649269.html</guid><description><![CDATA[<p><a href="http://blog.chinaunix.net/uid-436750-id-2123580.html">http://blog.chinaunix.net/uid-436750-id-2123580.html</a></p>
<p><a href="http://www.ha97.com/book/lfs-book-6.6/">http://www.ha97.com/book/lfs-book-6.6/</a></p>
<p><a href="http://lamp.linux.gov.cn/Linux/LFS-6.2/">http://lamp.linux.gov.cn/Linux/LFS-6.2/</a></p>
<p>&nbsp;</p>]]></description></item><item><title>shell 脚本重定向【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/08/21/2648837.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 21 Aug 2012 04:01:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/21/2648837.html</guid><description><![CDATA[<p>Linux Shell 环境中支持输入输出重定向，用符号&lt;和&gt;来表示。0、1和2分别表示标准输入、标准输出和标准错误信息输出，可以用来指定需要重定向的标准输入或输出，比如 2&gt;a.txt 表示将错误信息输出到文件a.txt中。</p>
<p>&nbsp;</p>
<p>同时，还可以在这三个标准输入输出之间实现重定向，比如将错误信息重定向到标准输出，可以用 2&gt;&amp;1来实现。</p>
<p>&nbsp;</p>
<p>Linux下还有一个特殊的文件/dev/null，它就像一个无底洞，所有重定向到它的信息都会消失得无影无踪。这一点非常有用，当我们不需要回显程序的所有信息时，就可以将输出重定向到/dev/null。</p>
<p>&nbsp;</p>
<p>如果想要正常输出和错误信息都不显示，则要把标准输出和标准错误都重定向到/dev/null， 例如：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">ls</span> <span style="color: #800080;">1</span>&gt;/dev/<span style="color: #0000ff;">null</span> <span style="color: #800080;">2</span>&gt;/dev/<span style="color: #0000ff;">null</span></pre>
</div>
<p>&nbsp;</p>
<p>还有一种做法是将错误重定向到标准输出，然后再重定向到 /dev/null，例如：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">ls</span> &gt;/dev/<span style="color: #0000ff;">null</span> <span style="color: #800080;">2</span>&gt;&amp;<span style="color: #800080;">1</span></pre>
</div>
<p>注意：此处的顺序不能更改，否则达不到想要的效果，此时先将标准输出重定向到 /dev/null，然后将标准错误重定向到标准输出，由于标准输出已经重定向到了/dev/null，因此标准错误也会重定向到/dev/null，于是一切静悄悄:-)</p>]]></description></item><item><title>Makefile中的cd用法</title><link>http://www.cnblogs.com/eastson/archive/2012/08/21/2648830.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 21 Aug 2012 03:57:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/21/2648830.html</guid><description><![CDATA[<p>今天在写makefile文件时，发现一个很奇怪的问题，那就是cd改变目录不管怎么样都不生效。</p>
<p>&nbsp;</p>
<p>最后google了下下，发现cd只有在当行起做用，这就有点意思了。</p>
<p>&nbsp;</p>
<p>比如在/opt下执行makefile，如果要tar开一个包在 /lib下：</p>
<div class="cnblogs_code">
<pre>cd /<span style="color: #000000;">lib
</span><span style="color: #0000ff;">tar</span> -xvf xxxx.<span style="color: #0000ff;">tar</span></pre>
</div>
<p>结果只会将这个tar包在执行makefile的当前目录下/opt解包。</p>
<p>&nbsp;</p>
<div>正确写法是：<br />
<div class="cnblogs_code">
<pre>cd /lib &amp;&amp; <span style="color: #0000ff;">tar</span> -xvf xxxx.<span style="color: #0000ff;">tar</span> 或者 cd /lib; <span style="color: #0000ff;">tar</span> -xvf xxxx.<span style="color: #0000ff;">tar</span></pre>
</div>
</div>]]></description></item><item><title>用UltraISO制作启动光盘</title><link>http://www.cnblogs.com/eastson/archive/2012/08/17/2644646.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 17 Aug 2012 12:38:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/17/2644646.html</guid><description><![CDATA[<p>1、安装UltraISO，&nbsp;下载地址：<a href="http://www.3987.com/soft/1/243/7808.html" target="_blank">http://www.3987.com/soft/1/243/7808.html</a>。</p>
<p>2、用UltraISO打开操作系统ISO文件，例如：CentOS-6.2-x86_64-bin-DVD1.iso。UltraISO显示该ISO文件是&ldquo;可启动光盘&rdquo;，这种格式可以用U盘直接启动系统。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012081720300772.png" alt="" /></p>
<p>3、将U盘接入电脑，选择"写入硬盘镜像"。注意先备份U盘的数据，也注意一下U盘的容量。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012081720340127.png" alt="" /></p>
<p>4、选择"USB-HDD+"写入方式，然后开始写入，完毕后显示"刻录成功"信息。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012081720344774.png" alt="" /></p>
<p>5、重启电脑，选择USB启动，后面就和光盘安装一样了。</p>]]></description></item><item><title>CentOS实验七：配置RPMForge软件源</title><link>http://www.cnblogs.com/eastson/archive/2012/08/17/2644286.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 17 Aug 2012 08:22:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/17/2644286.html</guid><description><![CDATA[<p>RPMForge是CentOS系统下的软件仓库，拥有4000多种的软件包，被CentOS社区认为是最安全也是最稳定的一个软件仓库。</p>
<p>&nbsp;</p>
<p><span>RPMForge官方网站：</span><a href="http://rpmforge.net/" target="_blank">RPMForge</a></p>
<p>RPMForge使用方法：<a href="http://repoforge.org/use/" target="_blank">Using RepoForge</a></p>
<p>&nbsp;</p>
<p>打开<a href="http://repoforge.org/use/" target="_blank">Using RepoForge</a>网址，找到对应rpm安装包，然后执行。</p>
<div class="cnblogs_code">
<pre># rpm -ivh http:<span style="color: #008000;">//</span><span style="color: #008000;">pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.2-2.el6.rf.x86_64.rpm</span></pre>
</div>
<p>上面的代码以CentOS 6.2 64位操作系统为例。</p>
<p>&nbsp;</p>
<p>安装完毕后，在/etc/yum.repos.d目录下就会多出一个名为rpmforge.repo的软件源。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;"># yum repolist all
... ...
repo </span><span style="color: #0000ff;">id</span><span style="color: #000000;">                repo name                                  status
base                   CentOS</span>-<span style="color: #800080;">6</span> - Base                            enabled: <span style="color: #800080;">6</span>,<span style="color: #800080;">346</span><span style="color: #000000;">
c6</span>-media               CentOS-<span style="color: #800080;">6</span> -<span style="color: #000000;"> Media                           disabled
centosplus             CentOS</span>-<span style="color: #800080;">6</span> -<span style="color: #000000;"> Plus                            disabled
contrib                CentOS</span>-<span style="color: #800080;">6</span> -<span style="color: #000000;"> Contrib                         disabled
debug                  CentOS</span>-<span style="color: #800080;">6</span> -<span style="color: #000000;"> Debuginfo                       disabled
extras                 CentOS</span>-<span style="color: #800080;">6</span> - Extras                          enabled:     <span style="color: #800080;">4</span><span style="color: #000000;">
rpmforge               RHEL </span><span style="color: #800080;">6</span> - RPMforge.net - dag                enabled: <span style="color: #800080;">4</span>,<span style="color: #800080;">403</span><span style="color: #000000;">
rpmforge</span>-extras        RHEL <span style="color: #800080;">6</span> - RPMforge.net -<span style="color: #000000;"> extras             disabled
rpmforge</span>-testing       RHEL <span style="color: #800080;">6</span> - RPMforge.net -<span style="color: #000000;"> testing            disabled
updates                CentOS</span>-<span style="color: #800080;">6</span> - Updates                         enabled:   <span style="color: #800080;">438</span></pre>
</div>]]></description></item><item><title>隐藏CentOS桌面图标</title><link>http://www.cnblogs.com/eastson/archive/2012/08/17/2644196.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 17 Aug 2012 07:49:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/17/2644196.html</guid><description><![CDATA[<p>CentOS默认会在桌面放三个图标：Computer，Home和Trash。我想把隐藏这些图标。</p>
<p>&nbsp;</p>
<p>第一步：安装gconf-editor，安装后多多出一个启动项：Applications -&gt; System Tools -&gt; Configuration Editor。</p>
<div class="cnblogs_code">
<pre># rpm -qa | <span style="color: #0000ff;">grep</span> gconf-<span style="color: #000000;">editor
# yum </span><span style="color: #0000ff;">install</span> gconf-editor</pre>
</div>
<p>&nbsp;</p>
<p>第二步：修改Gnome配置。打开Configuration Editor，找到/apps/nautilus/desktop，去掉相关图标显示参数前面的勾。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012081715485532.png" alt="" /></p>]]></description></item><item><title>自动登陆CentOS</title><link>http://www.cnblogs.com/eastson/archive/2012/08/17/2643418.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 17 Aug 2012 00:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/17/2643418.html</guid><description><![CDATA[<p>CentOS启动后会出现一个蓝色的登陆屏幕，输入帐号和密码后才能看到桌面。</p>
<p>&nbsp;</p>
<p>在该台电脑只是一个人使用的情况下，可以设置成自动登入。我们只需要修改/etc/gdm/custom.conf，为[daemon]添加下面的设置：</p>
<div class="cnblogs_code">
<pre>AutomaticLoginEnable=<span style="color: #000000;">True
AutomaticLogin</span>=amonest</pre>
</div>]]></description></item><item><title>设置Linux的屏幕保护</title><link>http://www.cnblogs.com/eastson/archive/2012/08/16/2642614.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 16 Aug 2012 08:44:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/16/2642614.html</guid><description><![CDATA[<p>CentOS系统在用户闲置一段时间(默认为5分钟)后，会启动屏幕保护程序(默认的屏保为黑屏)，并要求重新输入密码才能回到原来的桌面。</p>
<p>&nbsp;</p>
<p>设置屏幕保护：System -&gt; Preferences -&gt; Screensaver。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012081616422340.png" alt="" /></p>
<p>&nbsp;</p>
<p>如果需要取消屏幕保护的锁定功能，将Lock screen when screensaver is active前面的勾去掉就可以了。</p>]]></description></item><item><title>解决PATH中没有/sbin目录的问题</title><link>http://www.cnblogs.com/eastson/archive/2012/08/16/2642475.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 16 Aug 2012 07:46:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/16/2642475.html</guid><description><![CDATA[<p>Debian非特权用户的PATH变量不包含/sbin目录。我觉得解决方法可以有三种：</p>
<p>方法一：修改~/.bashrc，缺点是只影响当前用户一个人。</p>
<p>方法二：在/etc/profile.d目录添加脚本文件，这种方法可以影响所有的用户，建议使用。</p>
<p>方法二：Linux创建新用户时会以/etc/skel为模板建立HOME目录，因此可以修改该目录下都.profile文件。确定是只影响创建的新用户，对老用户无影响。</p>]]></description></item><item><title>ifconfig在哪里？</title><link>http://www.cnblogs.com/eastson/archive/2012/08/16/2642433.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 16 Aug 2012 07:30:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/16/2642433.html</guid><description><![CDATA[<p>Debian装完后，居然没有ifconfig命令？</p>
<div class="cnblogs_code">
<pre>$ ifconfig<br />bash: <span style="color: #0000ff;">ifconfig</span>: command not found</pre>
</div>
<p>&nbsp;</p>
<p>网上搜了一下，原来如果不是root用户，Debian是不会将/sbin加到PATH里面的。</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">echo</span><span style="color: #000000;"> $PATH
</span>/usr/local/bin:/usr/bin:/bin:/home/amonest/bin</pre>
</div>
<p>&nbsp;</p>
<p>解决方法：修改~/.bashrc，将/sbin添加到PATH后面。</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">echo</span> <span style="color: #800000;">"</span><span style="color: #800000;">export PATH=$PATH:/usr/local/sbin:/usr/sbin:/sbin</span><span style="color: #800000;">"</span> &gt;&gt; ~/.bashrc</pre>
</div>]]></description></item><item><title>自定义CentOS启动菜单</title><link>http://www.cnblogs.com/eastson/archive/2012/08/16/2642015.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 16 Aug 2012 03:33:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/16/2642015.html</guid><description><![CDATA[<p>CentOS默认不能自定义左上角启动菜单，alacart软件包提供了这个功能。</p>
<p>&nbsp;</p>
<p>安装alacarte软件包：</p>
<div class="cnblogs_code">
<pre># yum <span style="color: #0000ff;">install</span> alacarte</pre>
</div>
<p>&nbsp;</p>
<p>安装完成后会多出一项启动菜单: System -&gt; Preferences -&gt; Main Menu：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012081611322689.png" alt="" /></p>]]></description></item><item><title>去rpmfind.net下载rpm软件包</title><link>http://www.cnblogs.com/eastson/archive/2012/08/16/2641976.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 16 Aug 2012 03:13:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/16/2641976.html</guid><description><![CDATA[<p><a href="http://rpmfind.net" target="_blank">rpmfind.net</a>网站提供rpm软件包的搜索下载服务，里面收集了大量都软件包。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012081611124867.png" alt="" /></p>]]></description></item><item><title>为CentOS安装新字体</title><link>http://www.cnblogs.com/eastson/archive/2012/08/16/2641860.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 16 Aug 2012 02:27:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/16/2641860.html</guid><description><![CDATA[<p>1. 找到新的字体文件，字体文件一般以ttf或者fon结尾。可以到Windows下复制，Windows下字体文件目录是C:\Windows\fonts。</p>
<p>2. 将找到都字体文件复制到/usr/share/fonts目录。通常会创建一个子目录保存字体文件，这样方便管理。</p>
<p>3. 使用fc-cache命令更新字体缓存：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ fc</span>-cache -vf</pre>
</div>
<p>4. 修改系统字体设置：System -&gt; Preferences -&gt; Appearance -&gt; Fonts：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012081610263822.png" alt="" /></p>]]></description></item><item><title>让nautilus在同一个窗口打开文件夹</title><link>http://www.cnblogs.com/eastson/archive/2012/08/16/2641132.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 16 Aug 2012 00:45:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/16/2641132.html</guid><description><![CDATA[<p>CentOS默认的nautilus文件管理器打开文件夹时，总是另外开一个新窗口显示，而且没有操作菜单，很多人不是很习惯。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012081608404782.png" alt="" /></p>
<p>&nbsp;</p>
<p>这可以通过设置nautilus解决：勾选 Edit -&gt; Preferences -&gt; Behavior -&gt; Always open in browser windows，如下图：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012081608421685.png" alt="" /></p>
<p>&nbsp;</p>
<p>最后的结果：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012081608431439.png" alt="" /></p>]]></description></item><item><title>Facebook、Twitter、Google+ hosts</title><link>http://www.cnblogs.com/eastson/archive/2012/08/13/2635680.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 13 Aug 2012 00:04:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/13/2635680.html</guid><description><![CDATA[<p><span style="font-family: Arial;">持续更新：</span></p>
<p><span>1. 找到hosts这个文件，在Windows 系统下是位于C盘/windows/system32/drivers/ect目录里。</span></p>
<p><span style="font-family: Arial;">2.&nbsp;以记事本的方式打开hosts，添加以下文档中的地址并保存就可以了。</span></p>
<p><strong>如果您已经加入Google+，请关注我的Google+帐户：</strong></p>
<p><span><a href="https://plus.google.com/109561121415190390031"><span style="font-family: Arial;"><span>https://plus.google.com/109561121415190390031</span></span></a></span></p>
<p><span style="font-family: Arial;"><strong>新浪微博：</strong><a href="http://weibo.com/liubingshao" target="_blank">http://weibo.com/liubingshao</a></span></p>
<p><span style="font-family: Arial;"><strong>腾讯微博：</strong><a href="http://t.qq.com/liubingshao">http://t.qq.com/liubingshao</a></span></p>
<p><span style="font-family: Arial;"><strong>Twitter：</strong>&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://twitter.com/liubingshao" target="_blank">https://twitter.com/liubingshao</a></span></p>
<p><strong>欢迎加关注，有任何问题，可以微博中私信给我。</strong></p>
<p><span style="font-family: Arial;"><span><strong>以前的已经失效，请下载</strong></span><strong>最新</strong><strong>，我放在Hotmail的SkyDrive共享中以txt文本格式，地址：</strong></span></p>
<p><a href="http://goo.gl/A96CJ" target="_blank">点击下载</a></p>
<p><a href="https://skydrive.live.com/?cid=B567E039F53CE095&amp;id=B567E039F53CE095!120" target="_blank">直接访问</a></p>
<p>&nbsp;</p>
<p>原文地址：<a>http://blog.sina.com.cn/s/blog_4d8713560100ygec.html</a></p>
<p>&nbsp;</p>
<p>如果上面的网址不能访问，可以使用下面的内容(2012-09-10)：</p>
<div class="cnblogs_code">
<pre>#UPDATE:12-09-10

127.0.0.1<span style="color: #000000;">    localhost
#https://plus.google.com/</span>109561121415190390031<span style="color: #000000;">/posts
#http://weibo.com/liubingshao
#https://twitter.com/liubingshao
#QQ交流群：</span>182839793<span style="color: #000000;">，验证：hosts

#Google Services START

</span>203.208.46.161    0<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    0<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    1<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    1<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    10<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    10<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    11<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    11<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    12<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    12<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    13<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    13<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    14<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    14<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    15<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    15<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    16<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    16<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    2<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    2<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    3<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    3<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    4<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    4<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    5<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    5<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    6<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    6<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    7<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    7<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    8<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    8<span style="color: #000000;">.drive.google.com
</span>203.208.46.161    9<span style="color: #000000;">.docs.google.com
</span>203.208.46.161    9<span style="color: #000000;">.drive.google.com
</span>203.208.46.161<span style="color: #000000;">    accounts.google.com
</span>203.208.46.161<span style="color: #000000;">    accounts.l.google.com
</span>203.208.46.161<span style="color: #000000;">    answers.google.com
</span>203.208.46.161<span style="color: #000000;">    apis.google.com
</span>203.208.46.161<span style="color: #000000;">    appengine.google.com
</span>203.208.46.161<span style="color: #000000;">    apps.google.com
</span>203.208.46.161<span style="color: #000000;">    appspot.l.google.com
</span>203.208.46.161<span style="color: #000000;">    bks0.books.google.com
</span>203.208.46.161<span style="color: #000000;">    bks1.books.google.com
</span>203.208.46.161<span style="color: #000000;">    bks10.books.google.com
</span>203.208.46.161<span style="color: #000000;">    bks2.books.google.com
</span>203.208.46.161<span style="color: #000000;">    bks3.books.google.com
</span>203.208.46.161<span style="color: #000000;">    bks4.books.google.com
</span>203.208.46.161<span style="color: #000000;">    bks5.books.google.com
</span>203.208.46.161<span style="color: #000000;">    bks6.books.google.com
</span>203.208.46.161<span style="color: #000000;">    bks7.books.google.com
</span>203.208.46.161<span style="color: #000000;">    bks8.books.google.com
</span>203.208.46.161<span style="color: #000000;">    bks9.books.google.com
</span>203.208.46.161<span style="color: #000000;">    blogsearch.google.com
</span>203.208.46.161<span style="color: #000000;">    books.google.com
</span>203.208.46.161<span style="color: #000000;">    browserchannel-docs.l.google.com
</span>203.208.46.161<span style="color: #000000;">    browserchannel-spreadsheets.l.google.com
</span>203.208.46.161<span style="color: #000000;">    browsersync.google.com
</span>203.208.46.161<span style="color: #000000;">    browsersync.l.google.com
</span>203.208.46.161<span style="color: #000000;">    buzz.google.com
</span>203.208.46.161<span style="color: #000000;">    cache.l.google.com
</span>203.208.46.161<span style="color: #000000;">    cache.pack.google.com
</span>203.208.46.161<span style="color: #000000;">    calendar.google.com
</span>203.208.46.161<span style="color: #000000;">    cbk0.google.com
</span>203.208.46.161<span style="color: #000000;">    cbk1.google.com
</span>203.208.46.161<span style="color: #000000;">    cbk2.google.com
</span>203.208.46.161<span style="color: #000000;">    cbk3.google.com
</span>203.208.46.161<span style="color: #000000;">    cbks0.google.com
</span>203.208.46.161<span style="color: #000000;">    cbks1.google.com
</span>203.208.46.161<span style="color: #000000;">    cbks2.google.com
</span>203.208.46.161<span style="color: #000000;">    cbks3.google.com
</span>203.208.46.161<span style="color: #000000;">    chart.apis.google.com
</span>203.208.46.161<span style="color: #000000;">    chatenabled.mail.google.com
</span>203.208.46.161<span style="color: #000000;">    checkout.google.com
</span>203.208.46.161<span style="color: #000000;">    checkout.l.google.com
</span>203.208.46.161<span style="color: #000000;">    chrome.google.com
</span>203.208.46.161<span style="color: #000000;">    clients.l.google.com
</span>203.208.46.161<span style="color: #000000;">    clients1.google.com
</span>203.208.46.161<span style="color: #000000;">    clients2.google.com
</span>203.208.46.161<span style="color: #000000;">    clients3.google.com
</span>203.208.46.161<span style="color: #000000;">    clients4.google.com
</span>203.208.46.161<span style="color: #000000;">    clients5.google.com
</span>203.208.46.161<span style="color: #000000;">    clients6.google.com
</span>203.208.46.161<span style="color: #000000;">    clients7.google.com
</span>203.208.46.161<span style="color: #000000;">    code.google.com
</span>203.208.46.161<span style="color: #000000;">    code.l.google.com
</span>203.208.46.161<span style="color: #000000;">    csi.l.google.com
</span>203.208.46.161<span style="color: #000000;">    desktop.google.com
</span>203.208.46.161<span style="color: #000000;">    desktop.l.google.com
</span>203.208.46.161<span style="color: #000000;">    desktop2.google.com
</span>203.208.46.161<span style="color: #000000;">    developers.google.com
</span>203.208.46.161<span style="color: #000000;">    ditu.google.com
</span>203.208.46.161<span style="color: #000000;">    dl.google.com
</span>203.208.46.161<span style="color: #000000;">    dl.l.google.com
</span>203.208.46.161<span style="color: #000000;">    dl-ssl.google.com
</span>203.208.46.161<span style="color: #000000;">    docs.google.com
</span>203.208.46.161<span style="color: #000000;">    docs0.google.com
</span>203.208.46.161<span style="color: #000000;">    docs1.google.com
</span>203.208.46.161<span style="color: #000000;">    docs2.google.com
</span>203.208.46.161<span style="color: #000000;">    docs3.google.com
</span>203.208.46.161<span style="color: #000000;">    docs4.google.com
</span>203.208.46.161<span style="color: #000000;">    docs5.google.com
</span>203.208.46.161<span style="color: #000000;">    docs6.google.com
</span>203.208.46.161<span style="color: #000000;">    docs7.google.com
</span>203.208.46.161<span style="color: #000000;">    docs8.google.com
</span>203.208.46.161<span style="color: #000000;">    docs9.google.com
</span>203.208.46.161<span style="color: #000000;">    drive.google.com
</span>203.208.46.161<span style="color: #000000;">    earth.google.com
</span>203.208.46.161<span style="color: #000000;">    encrypted.google.com
</span>203.208.46.161<span style="color: #000000;">    encrypted-tbn.l.google.com
</span>203.208.46.161<span style="color: #000000;">    encrypted-tbn0.google.com
</span>203.208.46.161<span style="color: #000000;">    encrypted-tbn1.google.com
</span>203.208.46.161<span style="color: #000000;">    encrypted-tbn2.google.com
</span>203.208.46.161<span style="color: #000000;">    encrypted-tbn3.google.com
</span>203.208.46.161<span style="color: #000000;">    feedburner.google.com
</span>203.208.46.161<span style="color: #000000;">    feedproxy.google.com
</span>203.208.46.161<span style="color: #000000;">    filetransferenabled.mail.google.com
</span>203.208.46.161<span style="color: #000000;">    finance.google.com
</span>203.208.46.161<span style="color: #000000;">    fusion.google.com
</span>203.208.46.161<span style="color: #000000;">    geoauth.google.com
</span>203.208.46.161<span style="color: #000000;">    gg.google.com
</span>203.208.46.161<span style="color: #000000;">    ghs.google.com
</span>203.208.46.161<span style="color: #000000;">    ghs.l.google.com
</span>203.208.46.161<span style="color: #000000;">    ghs46.google.com
</span>203.208.46.161<span style="color: #000000;">    ghs46.l.google.com
</span>203.208.46.161<span style="color: #000000;">    google.com
</span>203.208.46.161<span style="color: #000000;">    googleapis.l.google.com
</span>203.208.46.161<span style="color: #000000;">    googleapis-ajax.google.com
</span>203.208.46.161<span style="color: #000000;">    googleapis-ajax.l.google.com
</span>203.208.46.161<span style="color: #000000;">    googlecode.l.google.com
</span>203.208.46.161<span style="color: #000000;">    google-public-dns-a.google.com
</span>203.208.46.161<span style="color: #000000;">    google-public-dns-b.google.com
</span>203.208.46.161<span style="color: #000000;">    goto.google.com
</span>203.208.46.161<span style="color: #000000;">    groups.google.com
</span>203.208.46.161<span style="color: #000000;">    groups.l.google.com
</span>203.208.46.161<span style="color: #000000;">    groups-beta.google.com
</span>203.208.46.161<span style="color: #000000;">    gxc.google.com
</span>203.208.46.161<span style="color: #000000;">    id.google.com
</span>203.208.46.161<span style="color: #000000;">    id.l.google.com
</span>203.208.46.161<span style="color: #000000;">    images.google.com
</span>203.208.46.161<span style="color: #000000;">    images.l.google.com
</span>203.208.46.161<span style="color: #000000;">    investor.google.com
</span>203.208.46.161<span style="color: #000000;">    jmt0.google.com
</span>203.208.46.161<span style="color: #000000;">    kh.google.com
</span>203.208.46.161<span style="color: #000000;">    kh.l.google.com
</span>203.208.46.161<span style="color: #000000;">    khm.google.com
</span>203.208.46.161<span style="color: #000000;">    khm.l.google.com
</span>203.208.46.161<span style="color: #000000;">    khm0.google.com
</span>203.208.46.161<span style="color: #000000;">    khm1.google.com
</span>203.208.46.161<span style="color: #000000;">    khm2.google.com
</span>203.208.46.161<span style="color: #000000;">    khm3.google.com
</span>203.208.46.161<span style="color: #000000;">    khmdb.google.com
</span>203.208.46.161<span style="color: #000000;">    khms.google.com
</span>203.208.46.161<span style="color: #000000;">    khms.l.google.com
</span>203.208.46.161<span style="color: #000000;">    khms0.google.com
</span>203.208.46.161<span style="color: #000000;">    khms1.google.com
</span>203.208.46.161<span style="color: #000000;">    khms2.google.com
</span>203.208.46.161<span style="color: #000000;">    khms3.google.com
</span>203.208.46.161<span style="color: #000000;">    labs.google.com
</span>203.208.46.161<span style="color: #000000;">    large-uploads.l.google.com
</span>203.208.46.161<span style="color: #000000;">    lh2.google.com
</span>203.208.46.161<span style="color: #000000;">    lh2.l.google.com
</span>203.208.46.161<span style="color: #000000;">    lh3.google.com
</span>203.208.46.161<span style="color: #000000;">    lh4.google.com
</span>203.208.46.161<span style="color: #000000;">    lh5.google.com
</span>203.208.46.161<span style="color: #000000;">    lh6.google.com
</span>203.208.46.161<span style="color: #000000;">    linkhelp.clients.google.com
</span>203.208.46.161<span style="color: #000000;">    local.google.com
</span>203.208.46.161<span style="color: #000000;">    m.google.com
</span>203.208.46.161<span style="color: #000000;">    mail.google.com
</span>203.208.46.161<span style="color: #000000;">    map.google.com
</span>203.208.46.161<span style="color: #000000;">    maps.google.com
</span>203.208.46.161<span style="color: #000000;">    maps.l.google.com
</span>203.208.46.161<span style="color: #000000;">    maps-api-ssl.google.com
</span>203.208.46.161<span style="color: #000000;">    mars.google.com
</span>203.208.46.161<span style="color: #000000;">    mobile.l.google.com
</span>203.208.46.161<span style="color: #000000;">    mobile-gtalk.l.google.com
</span>203.208.46.161<span style="color: #000000;">    mobilemaps.clients.google.com
</span>203.208.46.161<span style="color: #000000;">    mt.google.com
</span>203.208.46.161<span style="color: #000000;">    mt.l.google.com
</span>203.208.46.161<span style="color: #000000;">    mt0.google.com
</span>203.208.46.161<span style="color: #000000;">    mt1.google.com
</span>203.208.46.161<span style="color: #000000;">    mt2.google.com
</span>203.208.46.161<span style="color: #000000;">    mt3.google.com
</span>203.208.46.161<span style="color: #000000;">    mtalk.google.com
</span>203.208.46.161<span style="color: #000000;">    mts.google.com
</span>203.208.46.161<span style="color: #000000;">    mts.l.google.com
</span>203.208.46.161<span style="color: #000000;">    mts0.google.com
</span>203.208.46.161<span style="color: #000000;">    mts1.google.com
</span>203.208.46.161<span style="color: #000000;">    mts2.google.com
</span>203.208.46.161<span style="color: #000000;">    mts3.google.com
</span>203.208.46.161<span style="color: #000000;">    music.google.com
</span>203.208.46.161<span style="color: #000000;">    music-streaming.l.google.com
</span>203.208.46.161<span style="color: #000000;">    mw1.google.com
</span>203.208.46.161<span style="color: #000000;">    mw2.google.com
</span>203.208.46.161<span style="color: #000000;">    news.google.com
</span>203.208.46.161<span style="color: #000000;">    news.l.google.com
</span>203.208.46.161<span style="color: #000000;">    pack.google.com
</span>203.208.46.161<span style="color: #000000;">    photos.google.com
</span>203.208.46.161<span style="color: #000000;">    photos-ugc.l.google.com
</span>203.208.46.161<span style="color: #000000;">    picasa.google.com
</span>203.208.46.161<span style="color: #000000;">    picasaweb.google.com
</span>203.208.46.161<span style="color: #000000;">    picasaweb.l.google.com
</span>203.208.46.161<span style="color: #000000;">    places.google.com
</span>203.208.46.161<span style="color: #000000;">    productforums.google.com
</span>203.208.46.161<span style="color: #000000;">    profiles.google.com
</span>203.208.46.161<span style="color: #000000;">    reader.google.com
</span>203.208.46.161<span style="color: #000000;">    safebrowsing.cache.l.google.com
</span>203.208.46.161<span style="color: #000000;">    safebrowsing.clients.google.com
</span>203.208.46.161<span style="color: #000000;">    safebrowsing.google.com
</span>203.208.46.161<span style="color: #000000;">    safebrowsing-cache.google.com
</span>203.208.46.161<span style="color: #000000;">    sandbox.google.com
</span>203.208.46.161<span style="color: #000000;">    sb.google.com
</span>203.208.46.161<span style="color: #000000;">    sb.l.google.com
</span>203.208.46.161<span style="color: #000000;">    sb-ssl.google.com
</span>203.208.46.161<span style="color: #000000;">    sb-ssl.l.google.com
</span>203.208.46.161<span style="color: #000000;">    scholar.google.com
</span>203.208.46.161<span style="color: #000000;">    scholar.l.google.com
</span>203.208.46.161<span style="color: #000000;">    script.google.com
</span>203.208.46.161<span style="color: #000000;">    services.google.com
</span>203.208.46.161<span style="color: #000000;">    sites.google.com
</span>203.208.46.161<span style="color: #000000;">    sketchup.google.com
</span>203.208.46.161<span style="color: #000000;">    sketchup.l.google.com
</span>203.208.46.161<span style="color: #000000;">    spreadsheet.google.com
</span>203.208.46.161<span style="color: #000000;">    spreadsheets.google.com
</span>203.208.46.161<span style="color: #000000;">    spreadsheets.l.google.com
</span>203.208.46.161<span style="color: #000000;">    spreadsheets0.google.com
</span>203.208.46.161<span style="color: #000000;">    spreadsheets1.google.com
</span>203.208.46.161<span style="color: #000000;">    spreadsheets2.google.com
</span>203.208.46.161<span style="color: #000000;">    spreadsheets3.google.com
</span>203.208.46.161<span style="color: #000000;">    spreadsheets4.google.com
</span>203.208.46.161<span style="color: #000000;">    spreadsheets5.google.com
</span>203.208.46.161<span style="color: #000000;">    spreadsheets6.google.com
</span>203.208.46.161<span style="color: #000000;">    spreadsheets7.google.com
</span>203.208.46.161<span style="color: #000000;">    spreadsheets8.google.com
</span>203.208.46.161<span style="color: #000000;">    spreadsheets9.google.com
</span>203.208.46.161<span style="color: #000000;">    spreadsheets-china.l.google.com
</span>203.208.46.161<span style="color: #000000;">    suggestqueries.google.com
</span>203.208.46.161<span style="color: #000000;">    suggestqueries.l.google.com
</span>203.208.46.161<span style="color: #000000;">    support.google.com
</span>203.208.46.161<span style="color: #000000;">    talkgadget.google.com
</span>203.208.46.161<span style="color: #000000;">    tbn0.google.com
</span>203.208.46.161<span style="color: #000000;">    tbn1.google.com
</span>203.208.46.161<span style="color: #000000;">    tbn2.google.com
</span>203.208.46.161<span style="color: #000000;">    tbn3.google.com
</span>203.208.46.161<span style="color: #000000;">    toolbar.google.com
</span>203.208.46.161<span style="color: #000000;">    toolbarqueries.clients.google.com
</span>203.208.46.161<span style="color: #000000;">    toolbarqueries.google.com
</span>203.208.46.161<span style="color: #000000;">    toolbarqueries.l.google.com
</span>203.208.46.161<span style="color: #000000;">    tools.google.com
</span>203.208.46.161<span style="color: #000000;">    tools.l.google.com
</span>203.208.46.161<span style="color: #000000;">    translate.google.com
</span>203.208.46.161<span style="color: #000000;">    trends.google.com
</span>203.208.46.161<span style="color: #000000;">    upload.docs.google.com
</span>203.208.46.161<span style="color: #000000;">    upload.drive.google.com
</span>203.208.46.161<span style="color: #000000;">    uploads.code.google.com
</span>203.208.46.161<span style="color: #000000;">    uploadsj.clients.google.com
</span>203.208.46.161<span style="color: #000000;">    video.google.com
</span>203.208.46.161<span style="color: #000000;">    video-stats.l.google.com
</span>203.208.46.161<span style="color: #000000;">    voice.google.com
</span>203.208.46.161<span style="color: #000000;">    wallet.google.com
</span>203.208.46.161<span style="color: #000000;">    wifi.google.com
</span>203.208.46.161<span style="color: #000000;">    wifi.l.google.com
</span>203.208.46.161<span style="color: #000000;">    wire.l.google.com
</span>203.208.46.161<span style="color: #000000;">    writely.google.com
</span>203.208.46.161<span style="color: #000000;">    writely.l.google.com
</span>203.208.46.161<span style="color: #000000;">    writely-china.l.google.com
</span>203.208.46.161<span style="color: #000000;">    writely-com.l.google.com
</span>203.208.46.161<span style="color: #000000;">    www.google.com
</span>203.208.46.161<span style="color: #000000;">    www.l.google.com
</span>203.208.46.161<span style="color: #000000;">    www2.l.google.com
</span>203.208.46.161<span style="color: #000000;">    www3.l.google.com
</span>203.208.46.161<span style="color: #000000;">    www4.l.google.com
</span>203.208.46.161<span style="color: #000000;">    ytstatic.l.google.com

</span>203.208.46.170    0<span style="color: #000000;">-open-opensocial.googleusercontent.com
</span>203.208.46.170    0<span style="color: #000000;">-focus-opensocial.googleusercontent.com
</span>203.208.46.170    1<span style="color: #000000;">-focus-opensocial.googleusercontent.com
</span>203.208.46.170    1<span style="color: #000000;">-open-opensocial.googleusercontent.com
</span>203.208.46.170    2<span style="color: #000000;">-focus-opensocial.googleusercontent.com
</span>203.208.46.170    2<span style="color: #000000;">-open-opensocial.googleusercontent.com
</span>203.208.46.170    3<span style="color: #000000;">-focus-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    3hdrrlnlknhi77nrmsjnjr152ueo3soc-a-calendar-opensocial.googleusercontent.com
</span>203.208.46.170    3<span style="color: #000000;">-open-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    4fjvqid3r3oq66t548clrdj52df15coc-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    53rd6p0catml6vat6qra84rs0del836d-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    59cbv4l9s05pbaks9v77vc3mengeqors-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    8kubpeu8314p2efdd7jlv09an9i2ljdo-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    adstvca8k2ooaknjjmv89j22n9t676ve-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    blogger.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    bt26mravu2qpe56n8gnmjnpv2inl84bf-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    clients1.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    clients2.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    clients3.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    clients4.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    clients5.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    clients6.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    clients7.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    code-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    debh8vg7vd93bco3prdajidmm7dhql3f-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170    doc-00<span style="color: #000000;">-7o-docs.googleusercontent.com
</span>203.208.46.170    doc-08<span style="color: #000000;">-7o-docs.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    doc-0c-7o-docs.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    doc-0g-7o-docs.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    doc-0s-7o-docs.googleusercontent.com
</span>203.208.46.170    doc-10<span style="color: #000000;">-7o-docs.googleusercontent.com
</span>203.208.46.170    doc-14<span style="color: #000000;">-7o-docs.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    feedback.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    googlehosted.l.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    hsco54a20sh11q9jkmb51ad2n3hmkmrg-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    i8brh95qor6r54nkl52hidj2ggcs4jgm-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    images1-focus-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    images2-focus-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    images3-focus-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    images4-focus-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    images5-focus-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    images6-focus-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    images7-focus-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    images8-focus-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    images9-focus-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    images-docs-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    k6v18tjr24doa89b55o3na41kn4v73eb-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    lh1.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    lh2.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    lh3.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    lh4.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    lh5.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    lh6.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    mail-attachment.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    music.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    music-onebox.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    oauth.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    ob7f2qc0i50kbjnc81vkhgmb5hsv7a8l-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    ode25pfjgmvpquh3b1oqo31ti5ibg5fr-a-calendar.opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    qhie5b8u979rnch1q0hqbrmbkn9estf7-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    r70rmsn4s0rhk6cehcbbcbfbs31pu0va-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    rbjhe237k979f79d87gmenp3gejfonu9-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    s1.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    s2.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    s3.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    s4.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    s5.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    s6.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    spreadsheets-opensocial.googleusercontent.com
</span>203.208.46.170    t.doc-0-0<span style="color: #000000;">-sj.sj.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    themes.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    translate.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    u807isd5egseeabjccgcns005p2miucq-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    upt14k1i2veesusrda9nfotcrbp9d7p5-a-oz-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    webcache.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    www.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    www-calendar-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    www-fc-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    www-focus-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    www-gm-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    www-kix-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    www-open-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    www-opensocial.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    www-opensocial-sandbox.googleusercontent.com
</span>203.208.46.170<span style="color: #000000;">    www-oz-opensocial.googleusercontent.com

</span>203.208.46.175<span style="color: #000000;">    csi.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    g0.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    g1.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    g2.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    g3.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    maps.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    mt0.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    mt1.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    mt2.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    mt3.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    mt4.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    mt5.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    mt6.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    mt7.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    ssl.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    t0.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    t1.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    t2.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    t3.gstatic.com
</span>203.208.46.175<span style="color: #000000;">    www.gstatic.com

</span>203.208.46.170<span style="color: #000000;">    lh1.ggpht.com
</span>203.208.46.170<span style="color: #000000;">    lh2.ggpht.com
</span>203.208.46.170<span style="color: #000000;">    lh3.ggpht.com
</span>203.208.46.170<span style="color: #000000;">    lh4.ggpht.com
</span>203.208.46.170<span style="color: #000000;">    lh5.ggpht.com
</span>203.208.46.170<span style="color: #000000;">    lh6.ggpht.com
</span>203.208.46.170<span style="color: #000000;">    nt0.ggpht.com
</span>203.208.46.170<span style="color: #000000;">    nt1.ggpht.com
</span>203.208.46.170<span style="color: #000000;">    nt2.ggpht.com
</span>203.208.46.170<span style="color: #000000;">    nt3.ggpht.com
</span>203.208.46.170<span style="color: #000000;">    nt4.ggpht.com
</span>203.208.46.170<span style="color: #000000;">    nt5.ggpht.com

</span>203.208.46.161<span style="color: #000000;">    appspot.com
</span>173.194.64.141<span style="color: #000000;">    chrometophone.appspot.com
</span>203.208.46.161<span style="color: #000000;">    evolutionofweb.appspot.com
</span>203.208.46.161<span style="color: #000000;">    googcloudlabs.appspot.com
</span>203.208.46.161<span style="color: #000000;">    gv-gadget.appspot.com
</span>203.208.46.161<span style="color: #000000;">    magnifier.blogspot.com
</span>203.208.46.161<span style="color: #000000;">    moderator.appspot.com
</span>203.208.46.161<span style="color: #000000;">    newsfeed-dot-latest-dot-rovio-ad-engine.appspot.com
</span>203.208.46.161<span style="color: #000000;">    productideas.appspot.com
</span>203.208.46.161<span style="color: #000000;">    project-slingshot-gp.appspot.com
</span>203.208.46.161<span style="color: #000000;">    r2303.latest.project-slingshot-hr.appspot.com
</span>203.208.46.161<span style="color: #000000;">    r3085-dot-latest-dot-project-slingshot-gp.appspot.com
</span>203.208.46.161<span style="color: #000000;">    r3091-dot-latest-dot-project-slingshot-gp.appspot.com
</span>203.208.46.161<span style="color: #000000;">    r3101-dot-latest-dot-project-slingshot-gp.appspot.com
</span>203.208.46.161<span style="color: #000000;">    r3269-dot-latest-dot-project-slingshot-gp.appspot.com
</span>203.208.46.161<span style="color: #000000;">    r3432-dot-latest-dot-project-slingshot-hr.appspot.com
</span>203.208.46.161<span style="color: #000000;">    r4681-dot-latest-dot-project-slingshot-hr.appspot.com
</span>203.208.46.170<span style="color: #000000;">    r7647-dot-latest-dot-project-slingshot-hr.appspot.com
</span>203.208.46.161<span style="color: #000000;">    wcproxyx.appspot.com
</span>203.208.46.161<span style="color: #000000;">    www.appspot.com

</span>203.208.46.161<span style="color: #000000;">    ajax.googleapis.com
</span>203.208.46.161<span style="color: #000000;">    chart.googleapis.com
</span>203.208.46.161<span style="color: #000000;">    fonts.googleapis.com
</span>203.208.46.161<span style="color: #000000;">    maps.googleapis.com
</span>203.208.46.161<span style="color: #000000;">    mt0.googleapis.com
</span>203.208.46.161<span style="color: #000000;">    mt1.googleapis.com
</span>203.208.46.161<span style="color: #000000;">    mt2.googleapis.com
</span>203.208.46.161<span style="color: #000000;">    mt3.googleapis.com
</span>203.208.46.161<span style="color: #000000;">    redirector-bigcache.googleapis.com
</span>203.208.46.161<span style="color: #000000;">    translate.googleapis.com
#</span>203.208.46.161<span style="color: #000000;">    www.googleapis.com

</span>203.208.46.161<span style="color: #000000;">    autoproxy-gfwlist.googlecode.com
</span>203.208.46.161<span style="color: #000000;">    chromium.googlecode.com
</span>203.208.46.161<span style="color: #000000;">    closure-library.googlecode.com
</span>203.208.46.161<span style="color: #000000;">    earth-api-samples.googlecode.com
</span>203.208.46.161<span style="color: #000000;">    gmaps-samples-flash.googlecode.com
</span>203.208.46.161<span style="color: #000000;">    google-code-feed-gadget.googlecode.com

</span>203.208.46.161<span style="color: #000000;">    blogsearch.google.cn
</span>203.208.46.161<span style="color: #000000;">    ditu.google.cn
</span>203.208.46.161<span style="color: #000000;">    gg.google.cn
</span>203.208.46.161<span style="color: #000000;">    id.google.cn
</span>203.208.46.161<span style="color: #000000;">    maps.gstatic.cn
</span>203.208.46.161<span style="color: #000000;">    m.google.cn
</span>203.208.46.161<span style="color: #000000;">    mt.google.cn
</span>203.208.46.161<span style="color: #000000;">    mt0.google.cn
</span>203.208.46.161<span style="color: #000000;">    mt1.google.cn
</span>203.208.46.161<span style="color: #000000;">    mt2.google.cn
</span>203.208.46.161<span style="color: #000000;">    mt3.google.cn
</span>203.208.46.161<span style="color: #000000;">    news.google.cn
</span>203.208.46.161<span style="color: #000000;">    scholar.google.cn
</span>203.208.46.161<span style="color: #000000;">    translate.google.cn
</span>203.208.46.161<span style="color: #000000;">    www.google.cn
</span>203.208.46.161<span style="color: #000000;">    www.gstatic.cn

</span>203.208.46.161<span style="color: #000000;">    accounts.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    blogsearch.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    books.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    clients1.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    desktop.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    encrypted.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    groups.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    gxc.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    id.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    images.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    m.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    maps.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    news.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    picasaweb.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    plus.url.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    scholar.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    toolbar.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    toolbarqueries.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    translate.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    translate.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    wenda.google.com.hk
</span>203.208.46.161<span style="color: #000000;">    www.google.com.hk

</span>203.208.46.161<span style="color: #000000;">    android.googlesource.com
</span>203.208.46.161<span style="color: #000000;">    auth.keyhole.com
</span>203.208.46.161<span style="color: #000000;">    chrome.angrybirds.com
</span>203.208.46.161<span style="color: #000000;">    chromium.org
</span>203.208.46.161<span style="color: #000000;">    codereview.chromium.org
</span>203.208.46.161<span style="color: #000000;">    dev.chromium.org
</span>203.208.46.161<span style="color: #000000;">    developer.android.com
</span>203.208.46.161<span style="color: #000000;">    domains.googlesyndication.com
</span>203.208.46.161<span style="color: #000000;">    earthengine.googlelabs.com
</span>203.208.46.161<span style="color: #000000;">    feeds.feedburner.com
</span>203.208.46.161<span style="color: #000000;">    g.co
</span>203.208.46.161<span style="color: #000000;">    gmail.com
</span>203.208.46.161<span style="color: #000000;">    goo.gl
</span>203.208.46.162<span style="color: #000000;">    listen.googlelabs.com
</span>203.208.46.161<span style="color: #000000;">    m.gmail.com
</span>203.208.46.161<span style="color: #000000;">    m.googlemail.com
</span>203.208.46.161<span style="color: #000000;">    market.android.com
</span>203.208.46.163<span style="color: #000000;">    ngrams.googlelabs.com
</span>203.208.46.222<span style="color: #000000;">    ssl.google-analytics.com
</span>203.208.46.161<span style="color: #000000;">    www.chromium.org
</span>203.208.46.161<span style="color: #000000;">    www.gmail.com
</span>203.208.46.161<span style="color: #000000;">    www.googleadservices.com
</span>203.208.46.222<span style="color: #000000;">    www.google-analytics.com
</span>203.208.46.161<span style="color: #000000;">    www.googlelabs.com
</span>203.208.46.222<span style="color: #000000;">    www.googlesource.com

</span>203.208.45.206<span style="color: #000000;">    plus.google.com
</span>203.208.45.206<span style="color: #000000;">    plus.url.google.com
</span>203.208.45.206<span style="color: #000000;">    plusone.google.com
#Google Services END

#Facebook Start
</span>69.171.228.25    0<span style="color: #000000;">.facebook.com
</span>69.171.239.10<span style="color: #000000;">    ah8.facebook.com
</span>69.63.189.53<span style="color: #000000;">    api-read.facebook.com
</span>66.220.146.89<span style="color: #000000;">    api.connect.facebook.com
</span>69.171.225.13<span style="color: #000000;">    api.facebook.com
</span>69.171.229.39<span style="color: #000000;">    apps.facebook.com
</span>61.213.189.98<span style="color: #000000;">    b.static.ak.facebook.com
</span>61.213.189.120<span style="color: #000000;">    b.static.ak.fbcdn.net
</span>66.220.145.57<span style="color: #000000;">    beta.facebook.com
</span>66.220.145.63<span style="color: #000000;">    bigzipfiles.facebook.com
</span>61.213.189.113<span style="color: #000000;">    creative.ak.fbcdn.net
</span>97.65.135.139<span style="color: #000000;">    external.ak.fbcdn.net
</span>69.171.224.40<span style="color: #000000;">    c.facebook.com
</span>69.171.241.10<span style="color: #000000;">    chat.facebook.com
</span>66.220.144.11<span style="color: #000000;">    chat.thefacebook.com
</span>66.220.147.11<span style="color: #000000;">    check4.facebook.com
</span>69.171.228.40<span style="color: #000000;">    check6.facebook.com
</span>184.31.111.139<span style="color: #000000;">    connect.facebook.net
</span>69.171.227.19<span style="color: #000000;">    creativeupload.facebook.com
</span>69.171.240.99<span style="color: #000000;">    d.facebook.com
</span>66.220.156.33<span style="color: #000000;">    developers.facebook.com
</span>69.171.224.27<span style="color: #000000;">    error.facebook.com
</span>66.220.152.16<span style="color: #000000;">    facebook.com
</span>61.213.189.113<span style="color: #000000;">    fbcdn.net
</span>80.67.74.111<span style="color: #000000;">    fbcdn-photos-a.akamaihd.net
</span>64.213.102.26<span style="color: #000000;">    fbcdn-profile-a.akamaihd.net
</span>173.223.232.67<span style="color: #000000;">    fbcdn-sphotos-a.akamaihd.net
</span>69.171.239.10<span style="color: #000000;">    glb.facebook.com
</span>69.171.239.10<span style="color: #000000;">    glb1.facebook.com
</span>66.220.147.16<span style="color: #000000;">    graph.facebook.com
</span>69.171.228.27<span style="color: #000000;">    groups.facebook.com
</span>69.63.180.186<span style="color: #000000;">    hphotos-ak-snc1.facebook.com
</span>69.63.180.186<span style="color: #000000;">    hphotos-ak-snc3.facebook.com
</span>69.171.240.10<span style="color: #000000;">    hphotos-ash4.fbcdn.net
</span>69.63.183.180<span style="color: #000000;">    hphotos-pao1.fbcdn.net
</span>69.63.183.51<span style="color: #000000;">    hphotos-sjc1.fbcdn.net
</span>69.63.180.186<span style="color: #000000;">    hphotos-snc1.fbcdn.net
</span>69.63.183.3<span style="color: #000000;">        hphotos-snc3.fbcdn.net
</span>66.220.151.22<span style="color: #000000;">    hphotos-snc6.fbcdn.net
</span>69.171.227.24<span style="color: #000000;">    hphotos-snc7.fbcdn.net
</span>66.220.147.55<span style="color: #000000;">    iphone.facebook.com
</span>69.63.177.71<span style="color: #000000;">    irc.tfbnw.net
</span>66.220.144.43<span style="color: #000000;">    ldap.thefacebook.com
</span>66.220.144.49<span style="color: #000000;">    legacymail.thefacebook.com
</span>69.171.229.34<span style="color: #000000;">    m.facebook.com
</span>69.171.239.10<span style="color: #000000;">    mx.facebook.com
</span>69.63.190.12<span style="color: #000000;">    o.facebook.com
</span>69.171.227.28<span style="color: #000000;">    orcart.facebook.com
</span>69.63.186.26<span style="color: #000000;">    photos-ak-ash1.facebook.com
</span>69.63.186.24<span style="color: #000000;">    photos-ash1.facebook.com
</span>69.171.229.35<span style="color: #000000;">    pixel.facebook.com
</span>69.171.240.14<span style="color: #000000;">    pixmail.vip.tfbnw.net
</span>118.214.190.105<span style="color: #000000;">    profile.ak.facebook.com
</span>61.213.189.114<span style="color: #000000;">    profile.ak.fbcdn.net
</span>69.171.247.22<span style="color: #000000;">    s-static.facebook.com
</span>66.220.144.97<span style="color: #000000;">    sb-dev.thefacebook.com
</span>66.220.144.98<span style="color: #000000;">    sb-test.thefacebook.com
</span>66.220.144.99<span style="color: #000000;">    sb.thefacebook.com
</span>61.213.189.113<span style="color: #000000;">    s-hprofile-sf2p.fbcdn.net
</span>184.26.194.110<span style="color: #000000;">    s-static.ak.facebook.com
</span>23.5.157.177<span style="color: #000000;">    s-static.ak.fbcdn.net
</span>69.63.178.68<span style="color: #000000;">    secure-media.facebook.com
</span>69.63.178.67<span style="color: #000000;">    secure-media.fbcdn.net
</span>69.63.181.57<span style="color: #000000;">    secure-media-sf2p.facebook.com
</span>66.220.145.59<span style="color: #000000;">    secure-profile.facebook.com
</span>69.171.231.10<span style="color: #000000;">    secure.facebook.com
</span>69.171.239.10<span style="color: #000000;">    spraydns.fbops.com
</span>69.63.181.15<span style="color: #000000;">    ssl.facebook.com
</span>69.171.228.44<span style="color: #000000;">    ssl.connect.facebook.com
</span>69.63.189.76<span style="color: #000000;">    star.facebook.com
</span>61.213.189.98<span style="color: #000000;">    static.ak.facebook.com
</span>97.65.135.163<span style="color: #000000;">    static.ak.fbcdn.net
</span>69.171.239.10<span style="color: #000000;">    static.facebook.com
</span>66.220.155.43<span style="color: #000000;">    static.thefacebook.com
</span>66.220.147.58<span style="color: #000000;">    touch.facebook.com
</span>69.171.229.17<span style="color: #000000;">    upload.facebook.com
</span>66.220.144.41<span style="color: #000000;">    vpn.tfbnw.net
</span>120.29.145.50<span style="color: #000000;">    vthumb.ak.fbcdn.net
</span>66.220.151.31<span style="color: #000000;">    vupload.facebook.com
</span>69.171.225.31<span style="color: #000000;">    www.connect.facebook.com
</span>69.171.247.21<span style="color: #000000;">    www.facebook.com
</span>66.220.146.61<span style="color: #000000;">    www.fbplugin.com
</span>69.171.242.72<span style="color: #000000;">    zh-CN.facebook.com
#Facebook End

#Dropbox START
</span>199.47.217.179<span style="color: #000000;">    dropbox.com
</span>199.47.216.170<span style="color: #000000;">    www.dropbox.com
#</span>107.20.207.62<span style="color: #000000;">    dl.dropbox.com
#</span>107.20.207.62<span style="color: #000000;">    dl-web.dropbox.com
</span>174.36.51.42<span style="color: #000000;">    forums.dropbox.com
</span>174.36.51.42<span style="color: #000000;">    wiki.dropbox.com
#Dropbox END

#Flickr START
</span>66.94.233.186<span style="color: #000000;">    flickr.com
</span>66.94.233.186<span style="color: #000000;">    www.flickr.com
</span>68.142.214.43<span style="color: #000000;">    static.flickr.com
</span>66.196.118.49<span style="color: #000000;">    farm1.static.flickr.com
</span>69.147.90.159<span style="color: #000000;">    farm2.static.flickr.com
</span>76.13.18.78<span style="color: #000000;">    farm3.static.flickr.com
</span>67.195.19.66<span style="color: #000000;">    farm4.static.flickr.com
</span>76.13.18.79<span style="color: #000000;">    farm5.static.flickr.com
</span>98.139.197.254<span style="color: #000000;">    farm6.static.flickr.com
</span>98.139.102.46<span style="color: #000000;">    farm7.static.flickr.com
</span>98.136.43.76<span style="color: #000000;">    geo.yahoo.com
</span>68.142.250.161<span style="color: #000000;">    l.yimg.com
</span>96.6.93.227<span style="color: #000000;">    s.yimg.com
</span>98.137.88.88<span style="color: #000000;">    d.yimg.com
</span>68.142.196.57<span style="color: #000000;">    c5.ah.yahoo.com
</span>124.108.120.124<span style="color: #000000;">    sa.edit.yahoo.com
</span>76.13.6.132<span style="color: #000000;">    row.bc.yahoo.com
</span>66.163.168.247<span style="color: #000000;">    open.login.yahoo.com
</span>209.191.92.114<span style="color: #000000;">    login.yahoo.com
</span>209.191.92.115<span style="color: #000000;">    edit.yahoo.com
</span>209.191.121.31<span style="color: #000000;">    up.flickr.com
</span>209.191.105.102<span style="color: #000000;">    adjax.flickr.yahoo.com
</span>204.0.5.35<span style="color: #000000;">    content.yieldmanager.edgesuite.net
</span>76.13.6.132<span style="color: #000000;">    us.bc.yahoo.com
</span>204.0.5.34<span style="color: #000000;">    us.js2.yimg.com

#data from HostsX
</span>76.13.18.78<span style="color: #000000;">    bf1.farm3.static.flickr.com
</span>76.13.18.78<span style="color: #000000;">    farm3.static.flickr.com
</span>76.13.18.78<span style="color: #000000;">    gq1.farm3.static.flickr.com
</span>76.13.18.78<span style="color: #000000;">    sp1.farm3.static.flickr.com
</span>76.13.18.79<span style="color: #000000;">    bf1.farm5.static.flickr.com
</span>76.13.18.79<span style="color: #000000;">    farm5.static.flickr.com
</span>76.13.18.79<span style="color: #000000;">    gq1.farm5.static.flickr.com
</span>98.139.102.46<span style="color: #000000;">    bf1.farm7.static.flickr.com
</span>98.139.102.46<span style="color: #000000;">    farm7.static.flickr.com
</span>98.139.102.46<span style="color: #000000;">    gq1.farm7.static.flickr.com
</span>98.139.102.46<span style="color: #000000;">    ne1.farm7.static.flickr.com
</span>98.139.197.254<span style="color: #000000;">    bf1.farm6.static.flickr.com
</span>98.139.197.254<span style="color: #000000;">    farm6.static.flickr.com
</span>98.139.197.254<span style="color: #000000;">    gq1.farm6.static.flickr.com
#Flickr END

#Adobe Activation START
</span>0.0.0.0    3dns-2<span style="color: #000000;">.adobe.com
</span>0.0.0.0    3dns-3<span style="color: #000000;">.adobe.com
</span>0.0.0.0<span style="color: #000000;">    activate.adobe.com
</span>0.0.0.0<span style="color: #000000;">    activate-sea.adobe.com
</span>0.0.0.0<span style="color: #000000;">    activate-sjc0.adobe.com
</span>0.0.0.0<span style="color: #000000;">    adobe-dns.adobe.com
</span>0.0.0.0    adobe-dns-2<span style="color: #000000;">.adobe.com
</span>0.0.0.0    adobe-dns-3<span style="color: #000000;">.adobe.com
</span>0.0.0.0<span style="color: #000000;">    ereg.adobe.com
</span>0.0.0.0<span style="color: #000000;">    hl2rcv.adobe.com
</span>0.0.0.0<span style="color: #000000;">    practivate.adobe.com
</span>0.0.0.0<span style="color: #000000;">    wip3.adobe.com
</span>0.0.0.0<span style="color: #000000;">    activate.wip3.adobe.com
</span>0.0.0.0<span style="color: #000000;">    ereg.wip3.adobe.com
</span>0.0.0.0<span style="color: #000000;">    wwis-dubc1-vip60.adobe.com
#Adobe Activation END

#Wikipedia START
</span>208.80.152.201<span style="color: #000000;">    wikipedia.org
</span>208.80.152.201<span style="color: #000000;">    www.wikipedia.org
</span>208.80.152.201<span style="color: #000000;">    bits.wikipedia.org
</span>208.80.152.201<span style="color: #000000;">    en.wikipedia.org
</span>208.80.152.201<span style="color: #000000;">    zh.wikipedia.org
</span>208.80.152.201<span style="color: #000000;">    simple.wikipedia.org
</span>208.80.152.201<span style="color: #000000;">    wikibooks.org
</span>208.80.152.201<span style="color: #000000;">    www.wikibooks.org
</span>208.80.152.201<span style="color: #000000;">    en.wikibooks.org
</span>208.80.152.201<span style="color: #000000;">    zh.wikibooks.org
</span>208.80.152.201<span style="color: #000000;">    wikinews.org
</span>208.80.152.201<span style="color: #000000;">    www.wikinews.org
</span>208.80.152.201<span style="color: #000000;">    en.wikinews.org
</span>208.80.152.201<span style="color: #000000;">    zh.wikinews.org
</span>208.80.152.201<span style="color: #000000;">    wikiquote.org
</span>208.80.152.201<span style="color: #000000;">    www.wikiquote.org
</span>208.80.152.201<span style="color: #000000;">    en.wikiquote.org
</span>208.80.152.201<span style="color: #000000;">    zh.wikiquote.org
</span>208.80.152.201<span style="color: #000000;">    zh.wikisource.org
</span>208.80.152.201<span style="color: #000000;">    en.wikisource.org
</span>208.80.152.201<span style="color: #000000;">    wiktionary.org
</span>208.80.152.201<span style="color: #000000;">    www.wiktionary.org
</span>208.80.152.201<span style="color: #000000;">    en.wiktionary.org
</span>208.80.152.201<span style="color: #000000;">    zh.wiktionary.org
</span>208.80.152.201<span style="color: #000000;">    wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    www.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    bugs.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    bugzilla.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    commons.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    dumps.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    download.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    irc.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    ftp.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    ganglia.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    mail.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    meta.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    news.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    noc.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    kate.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    kohl.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    stats.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    ticket.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    tools.wikimedia.org
</span>208.80.152.211<span style="color: #000000;">    upload.wikimedia.org
</span>208.80.152.201<span style="color: #000000;">    wikimediafoundation.org
</span>208.80.152.201<span style="color: #000000;">    www.wikimediafoundation.org
</span>208.80.152.201<span style="color: #000000;">    mediawiki.org
</span>208.80.152.201<span style="color: #000000;">    www.mediawiki.org
#Wikipedia END

#YouTube START
</span>203.208.45.206<span style="color: #000000;">    apiblog.youtube.com
</span>203.208.45.206<span style="color: #000000;">    help.youtube.com
</span>203.208.45.206<span style="color: #000000;">    i.ytimg.com
</span>203.208.45.206<span style="color: #000000;">    i1.ytimg.com
</span>203.208.45.206<span style="color: #000000;">    i2.ytimg.com
</span>203.208.45.206<span style="color: #000000;">    i3.ytimg.com
</span>203.208.45.206<span style="color: #000000;">    i4.ytimg.com
</span>203.208.45.206<span style="color: #000000;">    insight.youtube.com
</span>203.208.45.206<span style="color: #000000;">    m.youtube.com
</span>203.208.45.206<span style="color: #000000;">    s.ytimg.com
</span>203.208.45.206<span style="color: #000000;">    ytimg.l.google.com
#YouTube END</span></pre>
</div>]]></description></item><item><title>How to Create Screen/Window in ADempiere</title><link>http://www.cnblogs.com/eastson/archive/2012/08/10/2631620.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 10 Aug 2012 03:54:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/10/2631620.html</guid><description><![CDATA[<p><em><strong>1 &ndash; Create database table by executing your script. For example:</strong> </em></p>
<div class="cnblogs_code">
<pre>CREATE TABLE <span style="color: #800000;">"</span><span style="color: #800000;">ITC_EMPLOYEE</span><span style="color: #800000;">"</span><span style="color: #000000;">
( </span><span style="color: #800000;">"</span><span style="color: #800000;">ITC_EMPLOYEE_ID</span><span style="color: #800000;">"</span> NUMBER(<span style="color: #800080;">10</span>,<span style="color: #800080;">2</span><span style="color: #000000;">) NOT NULL ENABLE,
</span><span style="color: #800000;">"</span><span style="color: #800000;">NAME</span><span style="color: #800000;">"</span> VARCHAR2(<span style="color: #800080;">50</span><span style="color: #000000;">) NOT NULL ENABLE,
</span><span style="color: #800000;">"</span><span style="color: #800000;">FATHERNAME</span><span style="color: #800000;">"</span> VARCHAR2(<span style="color: #800080;">50</span><span style="color: #000000;">),
</span><span style="color: #800000;">"</span><span style="color: #800000;">AD_CLIENT_ID</span><span style="color: #800000;">"</span> NUMBER(<span style="color: #800080;">10</span>,<span style="color: #800080;">0</span><span style="color: #000000;">) NOT NULL ENABLE,
</span><span style="color: #800000;">"</span><span style="color: #800000;">AD_ORG_ID</span><span style="color: #800000;">"</span> NUMBER(<span style="color: #800080;">10</span>,<span style="color: #800080;">0</span><span style="color: #000000;">) NOT NULL ENABLE,
</span><span style="color: #800000;">"</span><span style="color: #800000;">ISACTIVE</span><span style="color: #800000;">"</span> CHAR(<span style="color: #800080;">1</span>) DEFAULT <span style="color: #800000;">'</span><span style="color: #800000;">Y</span><span style="color: #800000;">'</span><span style="color: #000000;"> NOT NULL ENABLE,
</span><span style="color: #800000;">"</span><span style="color: #800000;">CREATED</span><span style="color: #800000;">"</span><span style="color: #000000;"> DATE DEFAULT SYSDATE NOT NULL ENABLE,
</span><span style="color: #800000;">"</span><span style="color: #800000;">CREATEDBY</span><span style="color: #800000;">"</span> NUMBER(<span style="color: #800080;">10</span>,<span style="color: #800080;">0</span><span style="color: #000000;">) NOT NULL ENABLE,
</span><span style="color: #800000;">"</span><span style="color: #800000;">UPDATED</span><span style="color: #800000;">"</span><span style="color: #000000;"> DATE DEFAULT SYSDATE NOT NULL ENABLE,
</span><span style="color: #800000;">"</span><span style="color: #800000;">UPDATEDBY</span><span style="color: #800000;">"</span> NUMBER(<span style="color: #800080;">10</span>,<span style="color: #800080;">0</span><span style="color: #000000;">) NOT NULL ENABLE,
CONSTRAINT </span><span style="color: #800000;">"</span><span style="color: #800000;">ITC_EMPLOYEE_PK</span><span style="color: #800000;">"</span> PRIMARY KEY (<span style="color: #800000;">"</span><span style="color: #800000;">ITC_EMPLOYEE_ID</span><span style="color: #800000;">"</span><span style="color: #000000;">) ENABLE
);</span></pre>
</div>
<p>&nbsp;</p>
<p>Following are the important point about database table:</p>
<ul>
<li>It is better to create primary-key (PK). The PK name should be: [table name] + &ldquo;_ID&rdquo; and type should be NUMBER if you want to leverage with full ADempiere AD features.</li>
<li>Along with PK there should be 7 other fields: &bull;AD_CLIENT_ID &bull;AD_ORG_ID &bull;ISACTIVE &bull;CREATED &bull;CREATEDBY&bull;UPDATED &bull;UPDATEDBY</li>
</ul>
<p><br /><em><strong>2 &ndash; Activating the new table in the AD</strong></em><br />Now we have to import that new table in ADempiere - here we again call it a Table :)</p>
<ul>
<li>&middot;         Login as System administrator in ADempiere. The user id and password is: SuperUser/System</li>
<li>&middot;         Open &lsquo;Table and Column&rsquo; window</li>
<li>&middot;         Create a new record</li>
<li>&middot;         Type into DB Table Name, the name of the newly created DB-table i.e ITC_EMPLOYEE</li>
<li>&middot;         Set &lsquo;Data Access Level&rsquo; to &lsquo;All&rsquo; and check the item &lsquo;Maintain Change Log&rsquo;</li>
<li>&middot;         Click on the button Create Columns from DB.</li>
</ul>
<p>o   This creates for each db-tablecolumn a corresponding AD Column.<br />o   Check the automatic created Columns, especially the ID references (e.g. Number instead of Integer)</p>
<p><br />Now you can say that we have a physical database table that we created in step 1 &amp; and we have an ADempiere logical table created in Step 2. First one is DB table and second one is AD table.<br /><br /><em><strong>3 &ndash;Create an ADempiere window</strong></em></p>
<ul>
<li>&middot;         Create a new entry in the &lsquo;Window Tab &amp; Field&rsquo; with the name ITC_EMPLOYEE . In the next tab i.e. &lsquo;Tab&rsquo; create a new entry with the name EMPLOYEE and select &lsquo;ITC_EMPLOYEE&rsquo; as it's table.</li>
<li>&middot;         Use the button &lsquo;Create Fields&rsquo; to create fields for all columns of the table. In the tab &lsquo;Field Sequence&rsquo; you can choose the sequence of the fields in the new window and in the tab &lsquo;Field&rsquo; you can select some view-related attributes. Set the read-only flag for &lsquo;ITC_EMPLOYEE _ID&rsquo; (the id should be unchangeable).</li>
<li>&middot;         To change the display properties (read-only, displayed or mandatory) of any fields see Display properties of columns and fields for more details.</li>
</ul>
<p><em><strong>4 &ndash; Create a MENU and attach your window with it. It's for your exercise.</strong></em></p>]]></description></item><item><title>Opentaps 相关文章</title><link>http://www.cnblogs.com/eastson/archive/2012/08/06/2624575.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 06 Aug 2012 01:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/06/2624575.html</guid><description><![CDATA[<p><a href="http://wenku.baidu.com/link?url=8CuvCx5fYhpmvk_B8BBfCrzWyabASm5CNz1vIWV8tLihJsncM37Xg0KSRSbsCqyMgqMKti8C7JzTH8y1q4vuaZYMamrWgF9wNaF2173V3By"><span id="doc-tittle-4">安装Opentaps1.5[Windows]</span></a></p>
<p><a href="http://www.opentaps.org/docs/index.php/Main_Page" target="_blank">Opentaps Wiki Main Page</a></p>
<p><a href="http://www.opentaps.org/docs/index.php/Opentaps_Users_Manual" target="_blank">Opentaps Users Manual</a></p>
<p><a href="http://www.opentaps.org/docs/index.php/Opentaps_Reference_Manual" target="_blank">Opentaps Reference Manual</a></p>
<p><a href="http://www.opentaps.org/docs/index.php/Opentaps_Testing_Manual" target="_blank">Opentaps Testing Manual</a></p>
<p><a href="http://www.opentaps.org/docs/index.php/Opentaps_Technical_Reference" target="_blank">Opentaps Technical Reference</a></p>
<p><a href="http://www.opentaps.org/docs/index.php/Opentaps_Installation_Manual" target="_blank">Opentaps Installation Manual</a></p>
<p><a href="http://www.opentaps.org/docs/index.php/Opentaps_Coding_Standards" target="_blank">Opentaps Coding Standards</a></p>
<p><a href="http://www.opentaps.org/docs/index.php/Screen_Widget_Actions_in_Java" target="_blank">Screen Widget Actions in Java</a></p>
<p><a href="http://www.opentaps.org/docs/index.php/Base_Entity_Classes" target="_blank">Base Entity Classes</a></p>
<p><a href="http://my.oschina.net/jkwoocn/blog" target="_blank">Jason 的博客(一些关于Opentaps的简要说明)</a></p>]]></description></item><item><title>OFBiz Tutorials</title><link>http://www.cnblogs.com/eastson/archive/2012/08/06/2624576.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 06 Aug 2012 00:59:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/06/2624576.html</guid><description><![CDATA[<p><em>These tutorials are designed to give you a basic knowledge of developing applications with OFBiz. Please read them in sequence. If you find any errors, please let us know.</em></p>
<ul>
<li><a href="http://www.opensourcestrategies.com/downloads/ofbiz_nutshell.pdf">OFBiz in a Nutshell</a>&nbsp;(PDF) - General overview of Open For Business.</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/running_ofbiz.php">Running OFBiz</a>&nbsp;- a short guide on how to run OFBiz.</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/developing_overview.php">Developing Applications with OFBiz</a>&nbsp;- an architectural overview.</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/java_knowledge.php">Tall, Grande, or Venti?</a>&nbsp;- How much Java do I need to know for OFBiz?</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/ofbiz_tour.php">A Tour of OFBiz</a>&nbsp;- Exploring the structure of an OFBiz application.</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/entities_services.php">Entities and Services</a>&nbsp;- How to use the entity and service engines to work with data and access business logic.</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/hello_world1.php">Hello World 1</a>&nbsp;- Your first OFBiz application.</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/hello_world2.php">Hello World 2</a>&nbsp;- Build a bigger web application with decorator pattern, screen widgets, and actions.</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/hello_world3.php">Hello World 3</a>&nbsp;- Building a complete application with data models, business logic, and user interface.</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/hello_svn_fixes.php">Fixes for More Recent OFBiz Versions</a>&nbsp;- If you are using a version of OFBiz later than opentaps 0.9.x, you may need to make these changes to the Hello World tutorials.</li>
<li><a href="http://www.opentaps.org/docs/index.php/Upgrading_from_opentaps_1.0_to_opentaps_1.4#Coding_Changes">Changes for opentaps 1.4/ofbiz 09.04</a>&nbsp;- If you are using opentaps 1.4 or later (or ofbiz 09.04 release), these are some important changes.</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/OFBIZ_SOAP_RMI_Tutorial.pdf">OFBiz SOAP/RMI Tutorial</a>&nbsp;by Vincenzo di Lorenzo - How to access OFBiz applications via SOAP and RMI. (<a href="http://www.opensourcestrategies.com/downloads/OfbizTutorial_WS_RMI.zip">Download files</a>). See&nbsp;<a href="http://www.opensourcesupport.it/products/ofbiz/index.html">additional OFBiz material on opensourcesupport.it</a></li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/security.php">Securing your OFBiz application</a>&nbsp;- General notes on security in OFBiz.</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/internationalizing_ofbiz.php">Internationalizing OFBiz</a>&nbsp;- Internationalizing OFBiz applications.</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/ofbiz_eclipse.php">OFBiz in Eclipse</a>&nbsp;- Debugging OFBiz with the&nbsp;<a href="http://www.eclipse.org/">Eclipse IDE</a>.</li>
<li><a href="http://docs.ofbiz.org/display/OFBADMIN/OFBiz+Contributors+Best+Practices">OFBiz Contributors Best Practices</a>&nbsp;- Please read this before you start working with or contributing back to OFBiz.</li>
<li><a href="http://www.opentaps.org/docs/index.php/Unit_Testing">Unit Testing</a></li>
<li><a href="http://docs.ofbiz.org/display/OFBIZ/Load+OpenI+%28Mondrian+Implementation%29+under+OFBiz">Loading wars into OFBiz</a>&nbsp;- This one in particular covers how to load&nbsp;<a href="http://www.openi.org/">openi</a>&nbsp;OLAP application. This is&nbsp;<em>far</em>&nbsp;easier than trying to deploy OFBIZ inside another Tomcat container.</li>
<li><a href="http://www.opentaps.org/docs/index.php/Using_the_Query_Tool">opentaps SQL Query Tool</a></li>
</ul>
<h3>opentaps tools</h3>
<p><em>These tools are part of the&nbsp;<a href="http://www.opentaps.org/">opentaps Open Source ERP + CRM</a>&nbsp;system based on OFBIZ and&nbsp;<strong>not</strong>&nbsp;part of OFBIZ.</em></p>
<ul>
<li><a href="http://www.opentaps.org/javadocs/">opentaps Javadocs</a>&nbsp;- opentaps is a superset of ofbiz</li>
<li><a href="http://www.opentaps.org/docs/index.php/Opentaps_Hibernate_Integration">opentaps - Hibernate integration</a>&nbsp;- opentaps allows you to use ofbiz with&nbsp;<a href="http://www.hibernate.org/">hibernate</a>. This tutorial shows you how.</li>
<li><a href="http://www.opentaps.org/docs/index.php/Domain_Driven_Architecture">Domain Driven Architecture</a>&nbsp;- an object-oriented architecture on top of ofbiz</li>
<li><a href="http://www.opentaps.org/docs/index.php/Base_Entity_Classes">Base Entity Classes</a>&nbsp;- auto generated Java classes for ofbiz entities</li>
<li><a href="http://www.opentaps.org/docs/index.php/Java_Wrapper_for_OFBiz_Services">Java Wrapper for OFBiz Services</a>&nbsp;- auto generated Java classes for ofbiz services</li>
<li><a href="http://www.opentaps.org/javadocs/version-1.0/tools/opentapsFormMacros.html">opentaps Form Macros</a></li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/opentaps_live_catalog.html">opentaps Live Catalog</a>&nbsp;for integrating with Joomla and other PHP or Ruby On Rails systems</li>
<li><a href="http://www.opentaps.org/docs/index.php/Opentaps_Coding_Standards">opentaps Coding Guidelines</a></li>
<li><a href="http://www.opentaps.org/docs/index.php/Opentaps_User_Interface_Guidelines">Developing better user interfaces</a></li>
<li><a href="http://www.opentaps.org/docs">Opentaps Online Manuals</a></li>
<li><a href="http://www.opentaps.org/docs/index.php/Opentaps_Technical_Reference#opentaps_and_Google_Web_Toolkit">opentaps and Google Web Toolkit (GWT)</a></li>
<li><a href="http://www.opentaps.org/docs/index.php/Screen_Widget_Actions_in_Java">Screen Widget Actions in Java</a>&nbsp;</li>
</ul>
<h4>OFBiz Cookbooks</h4>
<p><em>These are our howto notes for developing with OFBIZ, written as we work with it.</em></p>
<ul>
<li><a href="http://www.opensourcestrategies.com/ofbiz/ofbiz_debugging.txt">OFBIZ Debugging Guide</a>&nbsp;(text) -&nbsp;<strong>Read this!</strong></li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/ofbiz_form_widget_cookbook.txt">OFBIZ Form Widget Cookbook</a>&nbsp;(text)</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/ofbiz_screen_widget_cookbook.txt">OFBIZ Screen Widget Cookbook</a>&nbsp;(text)</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/ofbiz_menu_widget_cookbook.txt">OFBIZ Menu Widget Cookbook</a>&nbsp;(text)</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/ofbiz_entity_cookbook.txt">OFBIZ Entity Engine Cookbook</a>&nbsp;(text)</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/ofbiz_service_cookbook.txt">OFBIZ Service Engine Cookbook</a>&nbsp;(text)</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/ofbiz_webapp_cookbook.txt">OFBIZ Webapp/Controller Cookbook</a>&nbsp;(text)</li>
<li><a href="http://www.opensourcestrategies.com/ofbiz/ofbiz_minilang_cookbook.txt">OFBIZ Minilang Cookbook</a>&nbsp;(text)</li>
<li><a href="http://www.opentaps.org/docs/index.php/How_to_Use_Java_BigDecimal:_A_Tutorial">How to Use BigDecimal: a Tutorial</a>&nbsp;</li>
</ul>
<h4>Reporting</h4>
<ul>
<li><a href="http://www.opensourcestrategies.com/ofbiz/ofbiz-birt.pdf">Creating OFBiz Reports with BIRT</a>&nbsp;(PDF)&nbsp;</li>
</ul>
<h4>User Manuals</h4>
<ul>
<li><a href="http://sourceforge.net/project/showfiles.php?group_id=145855&amp;package_id=189005">opentaps User Manuals</a></li>
<li><a href="http://sourceforge.net/project/showfiles.php?group_id=145855&amp;package_id=161626">opentaps Video Demos</a></li>
<li><a href="http://docs.ofbiz.org/">docs.ofbiz.org</a>&nbsp;- OFBiz documentation wiki site</li>
</ul>
<p>The User Manuals and Video Demos are also included on the&nbsp;<a href="http://www.opensourcestrategies.com/ofbiz/ofbiz_sequoia_cd.php">opentaps/OFBiz CD</a>.&nbsp;</p>
<h4>Training Video</h4>
<p>If you would like additional training, the&nbsp;<a href="http://www.opensourcestrategies.com/ofbiz/ofbiz_opentaps_training_video.php">opentaps/OFBIZ Developer Training Video</a>&nbsp;offers you four and half hours of pre-recorded training and live development demonstration that cover many key aspects of developing with the OFBIZ framework.&nbsp;</p>
<h4>Thank you</h4>
<p>Thanks to Daniel Kunkel for the screenshots of the files and directories for the Hello World tutorials.</p>
<p>Thanks to Christopher Cullum, Robert Riggins, Manuel Meyer, and all the others who helped with comments, corrections, and suggestions to make these tutorials better.</p>
<p>&nbsp;</p>
<p>原文地址：<a href="http://www.opensourcestrategies.com/ofbiz/tutorials.php" target="_blank">http://www.opensourcestrategies.com/ofbiz/tutorials.php</a></p>]]></description></item><item><title>VirtualBox安装增强工具失败</title><link>http://www.cnblogs.com/eastson/archive/2012/08/03/2621703.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 03 Aug 2012 07:20:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/03/2621703.html</guid><description><![CDATA[<p>宿主机：Windows 7，64位操作系统</p>
<p>虚拟机：VirtualBox 4.1.18 + CentOS 6.2&nbsp;</p>
<p>&nbsp;</p>
<p>安装VirtualBox增强工具时报错：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">Verifying archive integrity... All good.
Uncompressing VirtualBox </span><span style="color: #800080;">4.1</span>.<span style="color: #800080;">18</span> Guest Additions <span style="color: #0000ff;">for</span><span style="color: #000000;"> Linux.........
VirtualBox Guest Additions installer
Removing installed version </span><span style="color: #800080;">4.1</span>.<span style="color: #800080;">18</span><span style="color: #000000;"> of VirtualBox Guest Additions...
Removing existing VirtualBox DKMS kernel modules           [  OK  ]
Removing existing VirtualBox non</span>-<span style="color: #000000;">DKMS kernel modules       [  OK  ]
Building the VirtualBox Guest Additions kernel modules
The </span><span style="color: #0000ff;">gcc</span> utility was not found. If the following module compilation fails <span style="color: #0000ff;">then</span><span style="color: #000000;">
this could be the reason and you should try installing it.

The headers </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> the current running kernel were not found. If the following
module compilation fails </span><span style="color: #0000ff;">then</span><span style="color: #000000;"> this could be the reason.
The missing package can be probably installed with
yum </span><span style="color: #0000ff;">install</span> kernel-devel-<span style="color: #800080;">2.6</span>.<span style="color: #800080;">32</span>-<span style="color: #800080;">220</span><span style="color: #000000;">.el6.x86_64

Building the main Guest Additions module                   [FAILED] ###### 注意，错误行在这里 ########
(Look at </span>/var/log/vboxadd-<span style="color: #0000ff;">install</span>.log to <span style="color: #0000ff;">find</span><span style="color: #000000;"> out what went wrong)
Doing non</span>-<span style="color: #000000;">kernel setup of the Guest Additions              [  OK  ]
Installing the Window System drivers
Installing X.Org Server </span><span style="color: #800080;">1.10</span><span style="color: #000000;"> modules                       [  OK  ]
Setting up the Window System to use the Guest Additions    [  OK  ]
You may need to restart the hal service and the Window System (or just restart
the guest system) to enable the Guest Additions.

Installing graphics libraries and desktop services componen[  OK  ]
Press Return to close this window...</span></pre>
</div>]]></description></item><item><title>Cisco模拟器(Boson NetSim for CCNP) 7.02【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/08/02/2619996.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 02 Aug 2012 06:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/02/2619996.html</guid><description><![CDATA[<p><span>近日在网上查找思科模拟器，发现有很多的NetSim 7.0 for CCNP破解补丁和替换文件供下载，因此迫不急待的下载了来装。</span><br /><br /><span>结果是：</span><br /><span>1.能够下载到的是Boson网站的最新版：7.06，7.02版的很难找到；</span><br /><span>2.替换文件则只能在7.02下用。</span><br /><span>3.破解补丁虽然声明只能在7.02的版本上用，结果，经过测试该补丁在7.02的版本上应用也不正常。</span><br /><span>因此为了大家的工作效率着想，特将找到的7.02版的安装共享出来。同时为了大家省得东奔西走，将需要用到的两个程序也放在一起，供大家选用，一个是Microsoft .Net Framework 1.1简体中文版，一个是</span><a href="http://www.cr173.com/k/Adobe/" target="_blank">Adobe</a><span>Acrobat Reader 8.12简体中文版。请大家在安装NetSim 7.02 for CCNP之前先检查一下，是否已经安装了这两个程序，如果没装的话，请先安装，省得NetSim安装程序直接从网上下载（需要很长时间的！）。</span><br /><br /><span>下载包中的文件列表：</span><br /><span>dotnetfx1.1chs.exe&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;Microsoft .Net Framework 1.1简体中文版</span><br /><span>AdbeRdr812_zh_CN.exe&hellip;&hellip;&hellip;&hellip;Adobe Acrobat Reader 8.12简体中文版</span><br /><span>ccnp_netsim7.02.exe&hellip;&hellip;&hellip;&hellip;&hellip;&hellip;Boson NetSim for CCNP 7.02英文版（注：最新的是7.06版，但无法破解）</span><br /><span>Boson NetSim for CCNP 7.06.RAR&hellip;&hellip;&hellip;&hellip;这是最新的7.06版安装后，在C:\Documents and Settings\All Users\Application Data\Boson Software\Boson NetSim for CCNP 7.0目录下的所有文件打的包，并且包含了替换补丁文件：mscon43demo.dll。</span><br /><span>Boson NetSim Ⅰ、Boson NetSim Ⅱ&hellip;&hellip;&hellip;&hellip;这是Boson NetSim的简易入门教程。</span><br /><br /><span>安装方法和步骤：</span><br /><span>1.检查是否安装了Microsoft .Net Framework 1.1，如果没有安装，请先安装它；</span><br /><span>2.检查是否安装了Adobe Acrobat Reader，没安装的请先安装，版本较低的也请先升级 ；</span><br /><span>3.如果上面两项都有安装好，那就直接安装ccnp_netsim7.02.exe，默认安装就可以了；</span><br /><span>4.安装好NetSim 7.02后，请先运行一遍，选第三个Demo方式就可以了，首次运行时间较长，请耐心等待它运行完成。</span><br /><span>5.运行完成，直到所有界面（共两个）都打开后，直接关闭它。</span><br /><span>6.将Boson NetSim for CCNP 7.06.RAR文件解压到在C:\Documents and Settings\All Users\Application Data\Boson Software\目录下，一定会有提示文件存在的，直接选&ldquo;全部覆盖&rdquo;它即可，如果没有提示，请检查路径选择是否正确。</span><br /><span>7.再次运行桌面的Boson NetSim for CCNP 7.0即可。不过较麻烦是每次都得选第三个demo选项，不过虽然是在demo模式下运行，但所有的功能和命令都已经可以运行了，并且能够使用7.06版的新增加的两个实验了。</span></p>
<p><span>&nbsp;</span></p>
<p><span>原文地址：<a href="http://www.cr173.com/soft/27781.html" target="_blank">http://www.cr173.com/soft/27781.html</a></span></p>]]></description></item><item><title>TCP序列号和确认号详解</title><link>http://www.cnblogs.com/eastson/archive/2012/08/02/2619580.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 02 Aug 2012 03:02:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/02/2619580.html</guid><description><![CDATA[<p>TCP协议工作在OSI的传输层，是一种可靠的面向连接的数据流协议，TCP之所以可靠，是因为它保证了传送数据包的顺序。顺序是用一个序列号来保证的。响应包内也包括一个序列号，表示接收方准备好这个序列号的包。在TCP传送一个数据包时，它会把这个数据包放入重发队列中，同时启动计时器，如果收到了关于这个包的确认信息，便将此数据包从队列中删除，如果在计时器超时的时候仍然没有收到确认信息，则需要重新发送该数据包。另外，TCP通过数据分段中的序列号来保证所有传输的数据可以按照正常的顺序进行重组，从而保障数据传输的完整。&nbsp;</p>
<p><span>&nbsp;</span></p>
<p>百度文库：<a href="http://wenku.baidu.com/view/88e16e85ec3a87c24028c4e9.html" target="_blank"><span id="doc-tittle-6">TCP序列号和确认号详解</span></a></p>
<p>道客巴巴：<a href="http://www.doc88.com/p-993595195280.html" target="_blank">TCP序列号和确认号例解</a></p>]]></description></item><item><title>ARP协议工作原理</title><link>http://www.cnblogs.com/eastson/archive/2012/08/01/2618376.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 01 Aug 2012 07:22:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/01/2618376.html</guid><description><![CDATA[<p align="left">ARP，全称Address Resolution Protocol，中文名为地址解析协议，它工作在数据链路层，在本层和硬件接口联系，同时对上层提供服务。</p>
<p><br />IP数据包常通过以太网发送，以太网设备并不识别32位IP地址，它们是以48位以太网地址传输以太网数据包。因此，必须把IP目的地址转换成以太网目的地址。在以太网中，一个主机要和另一个主机进行直接通信，必须要知道目标主机的MAC地址。但这个目标MAC地址是如何获得的呢？它就是通过地址解析协议获得的。ARP协议用于将网络中的IP地址解析为的硬件地址（MAC地址），以保证通信的顺利进行。</p>
<p align="left">&nbsp;</p>
<h3 align="left"><strong><span lang="EN-US">ARP</span>和<span lang="EN-US">RARP</span>报头结构</strong></h3>
<p align="left"><span lang="EN-US">ARP</span>和<span lang="EN-US">RARP</span>使用相同的报头结构，如下图所示。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012080115211958.gif" alt="" /></p>
<p>硬件类型字段：指明了发送方想知道的硬件接口类型，以太网的值为1；<br />协议类型字段：指明了发送方提供的高层协议类型，IP为0800（16进制）；<br />硬件地址长度和协议长度：指明了硬件地址和高层协议地址的长度，这样ARP报文就可以在任意硬件和任意协议的网络中使用；<br />操作字段：用来表示这个报文的类型，ARP请求为1，ARP响应为2，RARP请求为3，RARP响应为4；<br />发送方的硬件地址（0-3字节）：源主机硬件地址的前3个字节；<br />发送方的硬件地址（4-5字节）：源主机硬件地址的后3个字节；<br />发送方IP（0-1字节）：源主机硬件地址的前2个字节；<br />发送方IP（2-3字节）：源主机硬件地址的后2个字节；<br />目的硬件地址（0-1字节）：目的主机硬件地址的前2个字节；<br />目的硬件地址（2-5字节）：目的主机硬件地址的后4个字节；<br />目的IP（0-3字节）：目的主机的IP地址。</p>
<p>&nbsp;&nbsp;</p>
<h3 align="left"><strong><span lang="EN-US">ARP</span>和<span lang="EN-US">RARP</span>的工作原理</strong></h3>
<p>ARP的工作原理如下：<br />1. 首先，每台主机都会在自己的ARP缓冲区 (ARP Cache)中建立一个 ARP列表，以表示IP地址和MAC地址的对应关系。<br />2. 当源主机需要将一个数据包要发送到目的主机时，会首先检查自己 ARP列表中是否存在该 IP地址对应的MAC地址，如果有﹐就直接将数据包发送到这个MAC地址；如果没有，就向本地网段发起一个ARP请求的广播包，查询此目的主机对应的MAC地址。此ARP请求数据包里包括源主机的IP地址、硬件地址、以及目的主机的IP地址。<br />3. 网络中所有的主机收到这个ARP请求后，会检查数据包中的目的IP是否和自己的IP地址一致。如果不相同就忽略此数据包；如果相同，该主机首先将发送端的MAC地址和IP地址添加到自己的ARP列表中，如果ARP表中已经存在该IP的信息，则将其覆盖，然后给源主机发送一个 ARP响应数据包，告诉对方自己是它需要查找的MAC地址； <br />4.源主机收到这个ARP响应数据包后，将得到的目的主机的IP地址和MAC地址添加到自己的ARP列表中，并利用此信息开始数据的传输。如果源主机一直没有收到ARP响应数据包，表示ARP查询失败。</p>
<p>&nbsp;</p>
<p>RARP的工作原理：<br />1. 发送主机发送一个本地的RARP广播，在此广播包中，声明自己的MAC地址并且请求任何收到此请求的RARP服务器分配一个IP地址；<br />2. 本地网段上的RARP服务器收到此请求后，检查其RARP列表，查找该MAC地址对应的IP地址；<br />3. 如果存在，RARP服务器就给源主机发送一个响应数据包并将此IP地址提供给对方主机使用；<br />4. 如果不存在，RARP服务器对此不做任何的响应；<br />5. 源主机收到从RARP服务器的响应信息，就利用得到的IP地址进行通讯；如果一直没有收到RARP服务器的响应信息，表示初始化失败。</p>
<p>&nbsp;</p>
<h3 align="left"><strong>解码详解</strong></h3>
<p align="left">了解了<span lang="EN-US">ARP</span>和<span lang="EN-US">RARP</span>协议的报头结构和工作原理后，我们使用网络分析系统抓取<span lang="EN-US">ARP</span>包，其详细解码，如下图：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012080115221271.gif" alt="" /></p>
<p>上图显示是一个ARP的请求包的解码，下面我们来详细说明：<br />硬件类型：1，表示硬件借口类型为以太网类型<br />协议类型：0x0800，表示发送方提供的高层协议类型是IP<br />硬件地址长度：表示硬件地址长度为6字节=48位<br />协议地址长度：表示IP地址长度为4字节=32位<br />操作类型：1，表示ARP请求<br />源物理地址：00:14:85:CA:F5:22<br />源IP地址：192.168.0.92<br />目标物理地址：00:00:00:00:00:00<br />目标IP地址：192.168.0.208</p>
<p>ARP回应包和RARP的包类似，我们在这里就不再重复说明。</p>]]></description></item><item><title>法律之外还有良知</title><link>http://www.cnblogs.com/eastson/archive/2012/08/01/2617654.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 01 Aug 2012 00:08:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/08/01/2617654.html</guid><description><![CDATA[<p><span>　　1989年2月的一天傍晚，天空下着淅淅沥沥的小雨，大地笼罩在一片朦朦胧胧之中。东德士兵亨里奇正警惕地守卫在柏林墙东德一边。因为柏林墙的建立，常有东德人采用翻越柏林墙偷越到西德去。突然，他发现有一个人趁着雨雾，鬼鬼祟祟地攀爬到柏林墙上，企图逃到西德去。见此情景，亨里奇毫不犹豫地举起手中AK&mdash;47冲锋枪，屏住呼吸，瞄准那个人后&mdash;&mdash;&mdash;勾动了扳机。随着&ldquo;砰&mdash;&mdash;&mdash;&rdquo;的一声刺耳的枪声，只听一声惨叫，22岁的东德青年克里斯-格夫洛伊在企图偷越柏林墙时，被守卫士兵亨里奇开枪击毙。事后，亨里奇还受到上司的嘉奖，成为了英雄。</span><br /><br /><span>　　没想到，仅过了几个月。1989年底，柏林墙被推翻，东西德终于回归统一。这道分裂国家的柏林墙，也成为那段不堪回首的历史见证。当年士兵亨里奇射杀翻越柏林墙的东德青年格夫洛伊事件，遭到格夫洛伊家人的起诉，要求追究亨里奇的法律责任。</span><br /><br /><span>　　1992年2月，卫兵亨里奇因开枪射杀了攀爬柏林墙企图逃向自由的青年格夫洛伊而在统一后的柏林法庭上受审。这个士兵的辩护律师称，这些士兵是执行命令的人，他们根本没有选择的权利。不过这样的辩护最终没有得到法官的认可。因为类似的辩护，早在第二次世界大战后，在纽伦堡审判法西斯战犯时，已有先例。当时各国政府的立场不约而同：不道德的行为不能借口他们是奉政府的命令干出来的而求得宽恕。任何人都不能以服从命令为借口而超越一定的道德伦理界线。</span><br /><br /><span>　　柏林法庭最终的判决是：判处开枪射杀克利斯的卫兵英格&middot;亨里奇三年半徒刑，不予假释。英格&middot;亨里奇的律师辩称&ldquo;他们仅仅是执行命令的人，根本没有选择的权利，罪不在己&rdquo;。法官当庭指出：&ldquo;这个世界在法律之外，还有&lsquo;良知&rsquo;这个东西。当法律和良知冲突的时候，良知是最高的行为准则，不是法律。尊重生命，是一个放诸四海皆准的原则；你应该早在决定做围墙卫兵之前就知道，即使东德国法也不能抵触那最高的良知原则。东德的命令要你杀人，可是你明明知道这些逃亡者是无辜的，明知无辜而杀他，就是有罪。作为警察，不执行上级命令是有罪的，但是打不准是无罪的。作为一个心智健全的人，此时此刻，你有把枪口抬高一厘米的选择，这是你应主动承担的良心义务。&rdquo;</span></p>]]></description></item><item><title>Linux常用命令（二）- 网络</title><link>http://www.cnblogs.com/eastson/archive/2012/07/31/2616517.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 31 Jul 2012 03:22:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/31/2616517.html</guid><description><![CDATA[<p>网络监听的端口分析：</p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# netstat -<span style="color: #000000;">tulnp<br />### -t tcp<br />### -u udp<br />### -l, --listening display listening server sockets<br />### -n, --numeric don't resolve names<br />### -p, --programs display PID/Program name for sockets<br />Active Internet connections (only servers)
Proto Recv</span>-Q Send-Q Local Address               Foreign Address             State       PID/<span style="color: #000000;">Program name   
tcp        </span><span style="color: #800080;">0</span>      <span style="color: #800080;">0</span> <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:<span style="color: #800080;">111</span>                 <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:*                   LISTEN      <span style="color: #800080;">1222</span>/<span style="color: #000000;">rpcbind        
tcp        </span><span style="color: #800080;">0</span>      <span style="color: #800080;">0</span> <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:<span style="color: #800080;">22</span>                  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:*                   LISTEN      <span style="color: #800080;">1542</span>/<span style="color: #000000;">sshd           
tcp        </span><span style="color: #800080;">0</span>      <span style="color: #800080;">0</span> <span style="color: #800080;">127.0</span>.<span style="color: #800080;">0.1</span>:<span style="color: #800080;">631</span>               <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:*                   LISTEN      <span style="color: #800080;">1335</span>/<span style="color: #000000;">cupsd          
tcp        </span><span style="color: #800080;">0</span>      <span style="color: #800080;">0</span> <span style="color: #800080;">127.0</span>.<span style="color: #800080;">0.1</span>:<span style="color: #800080;">25</span>                <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:*                   LISTEN      <span style="color: #800080;">1636</span>/<span style="color: #000000;">master         
tcp        </span><span style="color: #800080;">0</span>      <span style="color: #800080;">0</span> <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:<span style="color: #800080;">58182</span>               <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:*                   LISTEN      <span style="color: #800080;">1287</span>/<span style="color: #000000;">rpc.statd      
tcp        </span><span style="color: #800080;">0</span>      <span style="color: #800080;">0</span> <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:<span style="color: #800080;">5672</span>                <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:*                   LISTEN      <span style="color: #800080;">1679</span>/<span style="color: #000000;">qpidd          
tcp        </span><span style="color: #800080;">0</span>      <span style="color: #800080;">0</span> :::<span style="color: #800080;">111</span>                      :::*                        LISTEN      <span style="color: #800080;">1222</span>/<span style="color: #000000;">rpcbind        
tcp        </span><span style="color: #800080;">0</span>      <span style="color: #800080;">0</span> :::<span style="color: #800080;">22</span>                       :::*                        LISTEN      <span style="color: #800080;">1542</span>/<span style="color: #000000;">sshd           
tcp        </span><span style="color: #800080;">0</span>      <span style="color: #800080;">0</span> ::<span style="color: #800080;">1</span>:<span style="color: #800080;">631</span>                     :::*                        LISTEN      <span style="color: #800080;">1335</span>/<span style="color: #000000;">cupsd          
tcp        </span><span style="color: #800080;">0</span>      <span style="color: #800080;">0</span> ::<span style="color: #800080;">1</span>:<span style="color: #800080;">25</span>                      :::*                        LISTEN      <span style="color: #800080;">1636</span>/<span style="color: #000000;">master         
tcp        </span><span style="color: #800080;">0</span>      <span style="color: #800080;">0</span> :::<span style="color: #800080;">39258</span>                    :::*                        LISTEN      <span style="color: #800080;">1287</span>/<span style="color: #000000;">rpc.statd      
udp        </span><span style="color: #800080;">0</span>      <span style="color: #800080;">0</span> <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:<span style="color: #800080;">60196</span>               <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:*                               <span style="color: #800080;">1287</span>/<span style="color: #000000;">rpc.statd      
udp        </span><span style="color: #800080;">0</span>      <span style="color: #800080;">0</span> <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:<span style="color: #800080;">68</span>                  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>:*                               <span style="color: #800080;">1260</span>/<span style="color: #000000;">dhclient<br /></span></pre>
</div>]]></description></item><item><title>如何使用 Example42 的 Puppet 模块【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/07/30/2614858.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 30 Jul 2012 02:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/30/2614858.html</guid><description><![CDATA[<p>现在我们差不多移植了100多台服务器到虚拟机，中间合并了很多功能类似的服务器（历史遗留问题）到同一虚拟机，并且整个配置过程完全用 Puppet 代码化，也就是说有一天我们实验室机房遭遇物理毁灭（刚看完&nbsp;Battleship，有点激动～），只要再给我们合适的硬件设备（异地有备份数据）我们应该能在6小时内恢复整个基础设施（OS, DNS, DHCP, Provision, Firewall, Squid, Web, Database, LDAP, Email, VPN, Kerberos, NFS, HPC, Cloud, Monitor, Backup, &hellip;）。自从 Puppet/Chef 之类的自动化配置工具流行以后，现在甚至有了一个新职位叫做 DevOps.</p>
<p>&nbsp;</p>
<p><a href="http://www.vpsee.com/2012/03/install-puppet-on-centos-6-2/" target="_blank">安装好 Puppet 后</a>，就可以开始自己写配置代码了，当然也可以在网上找到别人的配置代码直接拿过来用，更妙的是一些通用的 Puppet 配置代码，比如配置一台 Nginx/PHP/MySQL、配置 NFS、配置 DHCP、配置 DNS、配置 OpenNebula 等等已经有人写成模块了，直接拷过来就可以用了。<a href="https://github.com/example42" target="_blank">Example42 </a>就是这样的开源 Puppet 模块大集合，包含了众多常用的服务器配置。</p>
<p>&nbsp;</p>
<p>首先去 Example42 下载 Puppet 模块代码：</p>
<div class="cnblogs_code">
<pre>$ git clone http:<span style="color: #008000;">//</span><span style="color: #008000;">github.com/example42/puppet-modules.git</span></pre>
</div>
<p>&nbsp;</p>
<p>看看 Example42 包含了哪些模块吧，几乎常用的都有，不用自己亲自去写配置：</p>
<div class="cnblogs_code">
<pre>$ cd puppet-modules/<span style="color: #000000;">
$ </span><span style="color: #0000ff;">ls</span><span style="color: #000000;">
activemq     example42        lighttpd     ntp          puppet           selinux       tftp
apache       Example42</span>-<span style="color: #000000;">tools  link         openldap     puppetdashboard  sendmail      timezone
apt          exim             logrotate    openntpd     puppetdb         snmpd         tomcat
autofs       firewall         lsb          openssh      puppi            solr          trac
backup       foo              mailscanner  openvpn      rails            spamassassin  users
bind         foreman          mailx        oracle       Rakefile         splunk        vagrant
clamav       git              maven        orientdb     README.rdoc      sqlgrey       varnish
cobbler      haproxy          mcollective  pam          redis            squid         virtualbox
collectd     hardening        monit        pentaho      repo             squirrelmail  vmware
common       hosts            monitor      php          resolver         </span><span style="color: #0000ff;">ssh</span><span style="color: #000000;">           vsftpd
concat       icinga           munin        phpsyslogng  rootmail         ssmtp         </span><span style="color: #0000ff;">wget</span><span style="color: #000000;">
controltier  iptables         mysql        portmap      rpmbuild         stdlib42      wordpress
cron         java             nagios       postfix      rsync            </span><span style="color: #0000ff;">sudo</span><span style="color: #000000;">          xinetd
dhcpd        jboss            network      postgresql   rsyslog          synbak        yum
DOCS         jenkins          nfs          powerdns     rvm              sysctl        </span><span style="color: #0000ff;">zip</span><span style="color: #000000;">
dovecot      libvirt          nginx        psad         samba            sysklogd
drupal       LICENSE          nrpe         psick        sarg             syslog</span>-ng</pre>
</div>
<p>&nbsp;</p>
<p>把上面的 Example42 代码移到 /etc/puppet 目录，然后修改 Puppet 服务器的配置，加上 puppet-modules 模块路径，别忘了重启 puppetmaster 服务：</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">mv</span> puppet-modules /etc/<span style="color: #000000;">puppet

# vi </span>/etc/puppet/<span style="color: #000000;">puppet.conf
...
[master]
    modulepath </span>= /etc/puppet/puppet-<span style="color: #000000;">modules

# </span>/etc/init.d/puppetmaster</pre>
</div>
<p>&nbsp;</p>
<p>写个配置文件测试一下，自动配置 PHP + Apache + MySQL：</p>
<div class="cnblogs_code">
<pre># vi /etc/puppet/manifests/<span style="color: #000000;">node.pp

node </span><span style="color: #800000;">'</span><span style="color: #800000;">web.vpsee.com</span><span style="color: #800000;">'</span><span style="color: #000000;"> {
    include apache

    include php
    include php::pear
    include php::apc
    php::module { mysql: }
    php::module { curl: }
    php::module { gd: }
    php::module { idn: }
    php::module { imagick: }
    php::module { imap: }
    php::module { mcrypt: }
    php::module { ming: }
    php::module { </span><span style="color: #0000ff;">ps</span><span style="color: #000000;">: }
    php::module { pspell: }
    php::module { recode: }
    php::module { snmp: }
    php::module { tidy: }
    php::module { xmlrpc: }
    php::module { xsl: }
    php::module { ldap: }

    include mysql
}</span></pre>
</div>
<p>&nbsp;</p>
<p>在要配置的机器上执行下面一条命令就自动装上 Apache/PHP/MySQL 了，再不用自己手动去安装配置了：</p>
<div class="cnblogs_code">
<pre># puppet agent --test --server=master.vpsee.com</pre>
</div>
<p>&nbsp;</p>
<p>原文地址：<a href="http://www.vpsee.com/2012/05/using-puppet-modules-from-example42/" rel="bookmark" target="_blank">如何使用 Example42 的 Puppet 模块</a></p>]]></description></item><item><title>git push 403的解决方法</title><link>http://www.cnblogs.com/eastson/archive/2012/07/28/2612880.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 28 Jul 2012 02:59:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/28/2612880.html</guid><description><![CDATA[<p>创建一个GitHub.com项目，Push时总是提示403错误：</p>
<div class="cnblogs_code">
<pre>[amonest@localhost ~]$ git config --<span style="color: #000000;">global user.name amonest
[amonest@localhost </span>~]$ git config --<span style="color: #000000;">global user.email xxx@xxx.com

[amonest@localhost </span>~]$ git clone https:<span style="color: #008000;">//</span><span style="color: #008000;">github.com/amonest/python-scripts.git</span>
[amonest@localhost ~]$ cd python-<span style="color: #000000;">scripts

... 省略中间代码修改过程 ...

[amonest@localhost python</span>-scripts]$ git remote add orginal https:<span style="color: #008000;">//</span><span style="color: #008000;">github.com/amonest/python-scripts.git</span>
[amonest@localhost python-<span style="color: #000000;">scripts]$ git push orginal master
error: The requested URL returned error: </span><span style="color: #800080;">403</span> <span style="color: #0000ff;">while</span> accessing https:<span style="color: #008000;">//</span><span style="color: #008000;">github.com/amonest/python-scripts.git/info/refs</span>
<span style="color: #000000;">
fatal: HTTP request failed</span></pre>
</div>
<p>&nbsp;</p>
<p>网上搜索了半天，终于找到解决方法：《<a class="question-hyperlink" href="http://stackoverflow.com/questions/7438313/pushing-to-git-returning-error-code-403-fatal-http-request-failed" target="_blank">Pushing to Git returning Error Code 403 fatal: HTTP request failed</a>》</p>
<div class="cnblogs_code">
<pre>[amonest@localhost python-scripts]$ git remote set-url orginal https:<span style="color: #008000;">//</span><span style="color: #008000;">amonest@github.com/amonest/python-scripts.git</span>
[amonest@localhost python-scripts]$ git push orginal master</pre>
</div>
<p>稍等一下就会提示输入密码：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012072810585185.png" alt="" /></p>
<p>&nbsp;</p>
<p>这样就OK了。</p>
<p>&nbsp;</p>
<p>与Git有关的一些文档：</p>
<ul>
<li class="with-tabs"><a href="http://www.zikercn.com/node/19" target="_blank">Git-实战篇-GitHub</a></li>
<li class="with-tabs"><a href="http://zikercn.com/node/20" target="_blank">多个GitHub帐号的SSH key切换</a></li>
<li class="with-tabs"><a href="http://zikercn.com/taxonomy/term/16">http://zikercn.com/taxonomy/term/16</a></li>
<li class="with-tabs"><a href="http://zikercn.com/taxonomy/term/13">http://zikercn.com/taxonomy/term/13</a></li>
<li><a href="http://help.github.com/win-set-up-git/">http://help.github.com/win-set-up-git/</a></li>
<li><a href="http://help.github.com/multiple-ssh-keys/">http://help.github.com/multiple-ssh-keys/</a></li>
</ul>]]></description></item><item><title>Install Google Chrome on Fedora 17/16, CentOS/Red Hat (RHEL) 6.3</title><link>http://www.cnblogs.com/eastson/archive/2012/07/28/2612812.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 28 Jul 2012 01:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/28/2612812.html</guid><description><![CDATA[<h2>Enable Google YUM repository</h2>
<p>Add following to&nbsp;<em>/etc/yum.repos.d/google-chrome.repo</em>&nbsp;file:<br />32-bit</p>
<div class="cnblogs_code">
<pre>[google-<span style="color: #000000;">chrome]
name</span>=google-chrome - <span style="color: #800080;">32</span>-<span style="color: #000000;">bit
baseurl</span>=http:<span style="color: #008000;">//</span><span style="color: #008000;">dl.google.com/linux/chrome/rpm/stable/i386</span>
enabled=<span style="color: #800080;">1</span><span style="color: #000000;">
gpgcheck</span>=<span style="color: #800080;">1</span><span style="color: #000000;">
gpgkey</span>=https:<span style="color: #008000;">//</span><span style="color: #008000;">dl-ssl.google.com/linux/linux_signing_key.pub</span></pre>
</div>
<div class="wp_syntax">
<div class="code">
<p class="bash"><br />64-bit</p>


</div>


</div>
<div class="cnblogs_code">
<pre>[google-<span style="color: #000000;">chrome]
name</span>=google-chrome - <span style="color: #800080;">64</span>-<span style="color: #000000;">bit
baseurl</span>=http:<span style="color: #008000;">//</span><span style="color: #008000;">dl.google.com/linux/chrome/rpm/stable/x86_64</span>
enabled=<span style="color: #800080;">1</span><span style="color: #000000;">
gpgcheck</span>=<span style="color: #800080;">1</span><span style="color: #000000;">
gpgkey</span>=https:<span style="color: #008000;">//</span><span style="color: #008000;">dl-ssl.google.com/linux/linux_signing_key.pub</span></pre>
</div>
<p>&nbsp;</p>
<p><strong>Note: Both 32-bit and 64-bit repos can be placed in the same file.</strong></p>
<div>&nbsp;</div>
<h2>Install Google Chrome with YUM (as root user)</h2>
<p>Install Google Chrome Stable Version</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">## Install Google Chrome Stable version ##
yum </span><span style="color: #0000ff;">install</span> google-chrome-stable</pre>
</div>
<p>&nbsp;&nbsp;</p>
<p>Install Google Chrome Beta Version</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">## Install Google Chrome Beta version ##
yum </span><span style="color: #0000ff;">install</span> google-chrome-beta</pre>
</div>
<p>&nbsp;</p>
<p>Install Google Chrome Unstable Version</p>
<div class="wp_syntax">
<div class="code">
<div class="cnblogs_code">
<pre><span style="color: #000000;">## Install Google Chrome Unstable version ##
yum </span><span style="color: #0000ff;">install</span> google-chrome-unstable</pre>
</div>
</div>
</div>
<p>&nbsp;</p>
<p>原文地址：<a href="http://www.if-not-true-then-false.com/2010/install-google-chrome-with-yum-on-fedora-red-hat-rhel/" target="_blank">http://www.if-not-true-then-false.com/2010/install-google-chrome-with-yum-on-fedora-red-hat-rhel/</a></p>]]></description></item><item><title>XMLHttpRequest简要说明</title><link>http://www.cnblogs.com/eastson/archive/2012/07/28/2612730.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 27 Jul 2012 23:56:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/28/2612730.html</guid><description><![CDATA[<p><span>有关于XMLHttpRequest</span><span>的详细信息可以参阅</span><a href="http://www.phpx.com/man/Xmlhttp/" target="_blank">XMLHttp参考手册</a><span>。</span><br /><br /><span>1.&nbsp;创建XMLHttpRequest对象</span><br /><span>所有现代浏览器(IE7+、Firefox、Chrome、Safari&nbsp;以及&nbsp;Opera)&nbsp;都内建了XMLHttpRequest对象，老版本的Internet&nbsp;Explorer（IE5和IE6）使用ActiveX&nbsp;对象：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">function createXMLHttpRequest()
{
    var xmlhttp=null;
    
    if (window.XMLHttpRequest)
    {
        // code for all new browsers
        xmlhttp = new XMLHttpRequest();
    }
    else if (window.ActiveXObject)
    {
        // code for IE5 and IE6
        xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
    }
    
    if (xmlhttp == null)
    {
        alert("Your browser does not support XMLHTTP.");
    }
    
    return xmlhttp;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>2.&nbsp;同步还是异步？</p>
<p><span>XMLHttpRequest的open语法如下：</span></p>
<div class="cnblogs_code">
<pre>oXMLHttpRequest.open(bstrMethod, bstrUrl, varAsync, bstrUser, bstrPassword)</pre>
</div>
<p>&nbsp;varAsync是一个布尔型，指定此请求是否为异步方式，默认为true。</p>
<p><span>异步的意思是指脚本会在send()&nbsp;方法之后继续执行，而不等待来自服务器的响应，当状态改变时会调用onreadystatechange属性指定的回调函数。&nbsp;</span><br /><span>同步的意思是指脚本会在send()&nbsp;方法之后，等待服务器响应返回以后再继续执行。</span><br /><br /><span>3.&nbsp;onreadystatechange属性</span><br /><span>异步请求时通过onreadystatechange属性指定状态改变时需要回调的函数，通常需要和readyState属性，status属性以及statusText属性一起使用。</span><br /><span>readyState属性返回XMLHTTP请求的当前状态，有下面几种值：</span><br /><span>0&nbsp;(未初始化)&nbsp;&nbsp;&nbsp;&nbsp;对象已建立，但是尚未初始化（尚未调用open方法）&nbsp;</span><br /><span>1&nbsp;(初始化)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;对象已建立，尚未调用send方法&nbsp;</span><br /><span>2&nbsp;(发送数据)&nbsp;&nbsp;&nbsp;&nbsp;send方法已调用，但是当前的状态及http头未知&nbsp;</span><br /><span>3&nbsp;(数据传送中)&nbsp;已接收部分数据，因为响应及http头不全，这时通过responseBody和responseText获取部分数据会出现错误，&nbsp;</span><br /><span>4&nbsp;(完成)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;数据接收完毕，此时可以通过通过responseBody和responseText获取完整的回应数据&nbsp;</span><br /><span>status属性和statusText属性是</span><a href="http://www.nextphp.com/article.php?id=68" target="_blank">标准的HTTP响应代码和响应信息</a><span>。</span></p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">function demoMethod2()
{
    xmlhttp = createXMLHttpRequest();
    xmlhttp.onreadystatechange = handleStateChange;
    xmlhttp.open("GET", "http://localhost/xmlhttp/users.xml", true);
    xmlhttp.send();
}

function handleStateChange()
{
    if (xmlhttp.readyState == 4)
    {
        // 4 = "loaded"
        if (xmlhttp.status == 200)
        {
            // 200 = OK
            alert(xmlhttp.responseXML.xml);
        }
        else
        {
            alert("Problem retrieving XML data");
        }
    }
}</span></pre>
</div>
<p>&nbsp;&nbsp;</p>
<p><span>一个简单演示XMLHttpRequest的完整例子：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">script </span><span style="color: #ff0000;">language</span><span style="color: #0000ff;">="javascript"</span><span style="color: #0000ff;">&gt;</span>

<span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> createXMLHttpRequest()
{
    </span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> xmlhttp</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #0000ff;">null</span><span style="background-color: #f5f5f5; color: #000000;">;
    
    </span><span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;"> (window.XMLHttpRequest)
    {
        </span><span style="background-color: #f5f5f5; color: #008000;">//</span><span style="background-color: #f5f5f5; color: #008000;"> code for all new browsers</span>
<span style="background-color: #f5f5f5; color: #000000;">        xmlhttp </span><span style="background-color: #f5f5f5; color: #000000;">=</span> <span style="background-color: #f5f5f5; color: #0000ff;">new</span><span style="background-color: #f5f5f5; color: #000000;"> XMLHttpRequest();
    }
    </span><span style="background-color: #f5f5f5; color: #0000ff;">else</span> <span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;"> (window.ActiveXObject)
    {
        </span><span style="background-color: #f5f5f5; color: #008000;">//</span><span style="background-color: #f5f5f5; color: #008000;"> code for IE5 and IE6</span>
<span style="background-color: #f5f5f5; color: #000000;">        xmlhttp </span><span style="background-color: #f5f5f5; color: #000000;">=</span> <span style="background-color: #f5f5f5; color: #0000ff;">new</span><span style="background-color: #f5f5f5; color: #000000;"> ActiveXObject(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">Microsoft.XMLHTTP</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">);
    }
    
    </span><span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;"> (xmlhttp </span><span style="background-color: #f5f5f5; color: #000000;">==</span> <span style="background-color: #f5f5f5; color: #0000ff;">null</span><span style="background-color: #f5f5f5; color: #000000;">)
    {
        alert(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">Your browser does not support XMLHTTP.</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">);
    }
    
    </span><span style="background-color: #f5f5f5; color: #0000ff;">return</span><span style="background-color: #f5f5f5; color: #000000;"> xmlhttp;
}


</span><span style="background-color: #f5f5f5; color: #0000ff;">var</span><span style="background-color: #f5f5f5; color: #000000;"> xmlhttp </span><span style="background-color: #f5f5f5; color: #000000;">=</span> <span style="background-color: #f5f5f5; color: #0000ff;">null</span><span style="background-color: #f5f5f5; color: #000000;">;

</span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> demoMethod1()
{
    xmlhttp </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;"> createXMLHttpRequest();
    xmlhttp.open(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">GET</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">, </span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">http://localhost/xmlhttp/users.xml</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">, </span><span style="background-color: #f5f5f5; color: #0000ff;">false</span><span style="background-color: #f5f5f5; color: #000000;">);
    xmlhttp.send();
    alert(xmlhttp.responseText);
}

</span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> demoMethod2()
{
    xmlhttp </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;"> createXMLHttpRequest();
    xmlhttp.onreadystatechange </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;"> handleStateChange;
    xmlhttp.open(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">GET</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">, </span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">http://localhost/xmlhttp/users.xml</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">, </span><span style="background-color: #f5f5f5; color: #0000ff;">true</span><span style="background-color: #f5f5f5; color: #000000;">);
    xmlhttp.send();
}

</span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> handleStateChange()
{
    appendStatusDiv(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">readyStatus = </span><span style="background-color: #f5f5f5; color: #000000;">"</span> <span style="background-color: #f5f5f5; color: #000000;">+</span><span style="background-color: #f5f5f5; color: #000000;"> xmlhttp.readyState);
    </span><span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;"> (xmlhttp.readyState </span><span style="background-color: #f5f5f5; color: #000000;">==</span> <span style="background-color: #f5f5f5; color: #000000;">4</span><span style="background-color: #f5f5f5; color: #000000;">)
    {
        </span><span style="background-color: #f5f5f5; color: #008000;">//</span><span style="background-color: #f5f5f5; color: #008000;"> 4 = "loaded"</span>
        <span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;"> (xmlhttp.status </span><span style="background-color: #f5f5f5; color: #000000;">==</span> <span style="background-color: #f5f5f5; color: #000000;">200</span><span style="background-color: #f5f5f5; color: #000000;">)
        {
            </span><span style="background-color: #f5f5f5; color: #008000;">//</span><span style="background-color: #f5f5f5; color: #008000;"> 200 = OK</span>
<span style="background-color: #f5f5f5; color: #000000;">            alert(xmlhttp.responseXML.xml);
        }
        </span><span style="background-color: #f5f5f5; color: #0000ff;">else</span><span style="background-color: #f5f5f5; color: #000000;">
        {
            alert(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">Problem retrieving XML data</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">);
        }
    }
}

</span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> clearStatusDiv()
{
    document.getElementById(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">statusDiv</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">).innerHTML </span><span style="background-color: #f5f5f5; color: #000000;">=</span> <span style="background-color: #f5f5f5; color: #000000;">""</span><span style="background-color: #f5f5f5; color: #000000;">;
}

</span><span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> appendStatusDiv(text)
{
    document.getElementById(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">statusDiv</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">).innerHTML </span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #000000;"> document.getElementById(</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">statusDiv</span><span style="background-color: #f5f5f5; color: #000000;">'</span><span style="background-color: #f5f5f5; color: #000000;">).innerHTML </span><span style="background-color: #f5f5f5; color: #000000;">+</span> <span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">&lt;br /&gt;</span><span style="background-color: #f5f5f5; color: #000000;">"</span> <span style="background-color: #f5f5f5; color: #000000;">+</span><span style="background-color: #f5f5f5; color: #000000;"> text;
}

</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">html</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">head</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">meta </span><span style="color: #ff0000;">http-equiv</span><span style="color: #0000ff;">="Content-Type"</span><span style="color: #ff0000;"> content</span><span style="color: #0000ff;">="text/html; charset=utf-8"</span> <span style="color: #0000ff;">/&gt;</span> 
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">head</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">body</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">div </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="statusDiv"</span><span style="color: #ff0000;"> style</span><span style="color: #0000ff;">="border:1px solid #000000;"</span><span style="color: #0000ff;">&gt;</span><span style="color: #ff0000;">&amp;nbsp;</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">div</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">a </span><span style="color: #ff0000;">href</span><span style="color: #0000ff;">="javascript:clearStatusDiv(); demoMethod1();"</span><span style="color: #0000ff;">&gt;</span>同步调用XMLHttp，显示服务器文件users.xml<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">a</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">a </span><span style="color: #ff0000;">href</span><span style="color: #0000ff;">="javascript:clearStatusDiv(); demoMethod2();"</span><span style="color: #0000ff;">&gt;</span>异步调用XMLHttp，显示服务器文件users.xml<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">a</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">br </span><span style="color: #0000ff;">/&gt;</span>

<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">body</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">html</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p><span>W3C有关XMLHttpRequest&nbsp;对象的说明：</span><a href="http://www.w3school.com.cn/xml/xml_http.asp" target="_blank">http://www.w3school.com.cn/xml/xml_http.asp</a></p>]]></description></item><item><title>HTTP_REFERER</title><link>http://www.cnblogs.com/eastson/archive/2012/07/28/2612728.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 27 Jul 2012 23:54:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/28/2612728.html</guid><description><![CDATA[<p><span>看UCHome和ECShop源码的时候，发现经常会用到$_SERVER['HTTP_REFERER']的值。HTTP&nbsp;REFERER是Header的一部分，当浏览器向WEB服务器发送请求的时候，一般会带上HTTP&nbsp;REFERER，告诉服务器我是从哪个页面链接过来的，服务器籍此可以获得一些信息用于处理。比如从我主页上链接到一个朋友那里，他的服务器就能够从HTTP&nbsp;REFERER中统计出每天有多少用户点击我主页上的链接访问他的网站。下面自己写了一个例子，来说明HTTP_REFERER的各种变化。</span><br /><br /><span>请将下面的代码保存到一个PHP文件中，文件名为referer.php：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">a </span><span style="color: #ff0000;">href</span><span style="color: #0000ff;">="?p=referer1"</span><span style="color: #ff0000;"> mce_href</span><span style="color: #0000ff;">="?p=referer1"</span><span style="color: #0000ff;">&gt;</span>referer1<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">a</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;"> |   
</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">a </span><span style="color: #ff0000;">href</span><span style="color: #0000ff;">="?p=referer2"</span><span style="color: #ff0000;"> mce_href</span><span style="color: #0000ff;">="?p=referer2"</span><span style="color: #0000ff;">&gt;</span>referer2<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">a</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;"> |   
</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">a </span><span style="color: #ff0000;">href</span><span style="color: #0000ff;">="?p=referer3"</span><span style="color: #ff0000;"> mce_href</span><span style="color: #0000ff;">="?p=referer3"</span><span style="color: #0000ff;">&gt;</span>referer3<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">a</span><span style="color: #0000ff;">&gt;</span>  
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">hr </span><span style="color: #0000ff;">/&gt;</span>  
<span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">php  
echo '[' . $_SERVER['HTTP_REFERER'] . ']';  
</span><span style="color: #0000ff;">?&gt;</span> </pre>
</div>
<p>&nbsp;&nbsp;</p>
<p><span>在网址栏输入：http://localhost/hellophp/referer.php，执行结果如下：</span></p>
<div class="cnblogs_code">
<pre>[]</pre>
</div>
<p>&nbsp;&nbsp;</p>
<p><span>点击连接refer1，执行结果如下：</span></p>
<div class="cnblogs_code">
<pre>[http://localhost/hellophp/referer.php]  </pre>
</div>
<p>&nbsp;&nbsp;</p>
<p><span>点击连接refer2，执行结果如下：</span><br /><code></code></p>
<div class="cnblogs_code">
<pre>[http://localhost/hellophp/referer.php?p=referer1] </pre>
</div>
<p>&nbsp;</p>
<p><span>点击连接refer3，执行结果如下：</span></p>
<div class="cnblogs_code">
<pre>[http://localhost/hellophp/referer.php?p=referer2]  </pre>
</div>
<p>&nbsp;&nbsp;</p>
<p><span>点击连接refer1，执行结果如下：</span></p>
<div class="cnblogs_code">
<pre>[http://localhost/hellophp/referer.php?p=referer3]  </pre>
</div>
<p>&nbsp;&nbsp;</p>
<p><span>在网址栏输入：http://localhost/hellophp/referer.php?p=referer2，执行结果如下：</span></p>
<div class="cnblogs_code">
<pre>[]</pre>
</div>
<p>&nbsp;&nbsp;</p>
<p><span>从上面的过程我们可以得出这样的结论：当从网址栏向WEB服务器发出请求时，$_SERVER['HTTP_REFERER']的值为空；当从链接向WEB服务器发出请求时，$_SERVER['HTTP_REFERER']的值就是发出请求的网址。</span></p>]]></description></item><item><title>数据包分析工具HttpWatch</title><link>http://www.cnblogs.com/eastson/archive/2012/07/28/2612726.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 27 Jul 2012 23:52:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/28/2612726.html</guid><description><![CDATA[<p><span>HttpWatch&nbsp;是一款强大的网页数据分析工具，不用代理服务器或一些复杂的网络监控工具，就能够在显示网页同时显示网页请求和回应的日志信息。&nbsp;HttpWatch可以集成在Internet&nbsp;Explorer工具栏，也提供火狐插件功能。&nbsp;</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012072807511951.jpg" alt="" /></p>
<p><br /><a href="http://www.99d.com/down/32/490672.html" target="_blank">http://www.99d.com/down/32/490672.html</a></p>]]></description></item><item><title>HTTP响应代码</title><link>http://www.cnblogs.com/eastson/archive/2012/07/28/2612725.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 27 Jul 2012 23:50:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/28/2612725.html</guid><description><![CDATA[<p><span>Status-Code&nbsp;=</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.1.1" target="_blank">100</a><span>"&nbsp;&nbsp;:&nbsp;Continue</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.1.2" target="_blank">101</a><span>"&nbsp;&nbsp;:&nbsp;Switching&nbsp;Protocols</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.1" target="_blank">200</a><span>"&nbsp;&nbsp;:&nbsp;OK</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.2" target="_blank">201</a><span>"&nbsp;&nbsp;:&nbsp;Created</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.3" target="_blank">202</a><span>"&nbsp;&nbsp;:&nbsp;Accepted</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.4" target="_blank">203</a><span>"&nbsp;&nbsp;:&nbsp;Non-Authoritative&nbsp;Information</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.5" target="_blank">204</a><span>"&nbsp;&nbsp;:&nbsp;No&nbsp;Content</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.6" target="_blank">205</a><span>"&nbsp;&nbsp;:&nbsp;Reset&nbsp;Content</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.2.7" target="_blank">206</a><span>"&nbsp;&nbsp;:&nbsp;Partial&nbsp;Content</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.1" target="_blank">300</a><span>"&nbsp;&nbsp;:&nbsp;Multiple&nbsp;Choices</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.2" target="_blank">301</a><span>"&nbsp;&nbsp;:&nbsp;Moved&nbsp;Permanently</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.3" target="_blank">302</a><span>"&nbsp;&nbsp;:&nbsp;Found</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.4" target="_blank">303</a><span>"&nbsp;&nbsp;:&nbsp;See&nbsp;Other</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.5" target="_blank">304</a><span>"&nbsp;&nbsp;:&nbsp;Not&nbsp;Modified</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.6" target="_blank">305</a><span>"&nbsp;&nbsp;:&nbsp;Use&nbsp;Proxy</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.3.8" target="_blank">307</a><span>"&nbsp;&nbsp;:&nbsp;Temporary&nbsp;Redirect</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.1" target="_blank">400</a><span>"&nbsp;&nbsp;:&nbsp;Bad&nbsp;Request</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.2" target="_blank">401</a><span>"&nbsp;&nbsp;:&nbsp;Unauthorized</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.3" target="_blank">402</a><span>"&nbsp;&nbsp;:&nbsp;Payment&nbsp;Required</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.4" target="_blank">403</a><span>"&nbsp;&nbsp;:&nbsp;Forbidden</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.5" target="_blank">404</a><span>"&nbsp;&nbsp;:&nbsp;Not&nbsp;Found</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.6" target="_blank">405</a><span>"&nbsp;&nbsp;:&nbsp;Method&nbsp;Not&nbsp;Allowed</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.7" target="_blank">406</a><span>"&nbsp;&nbsp;:&nbsp;Not&nbsp;Acceptable</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.8" target="_blank">407</a><span>"&nbsp;&nbsp;:&nbsp;Proxy&nbsp;Authentication&nbsp;Required</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.9" target="_blank">408</a><span>"&nbsp;&nbsp;:&nbsp;Request&nbsp;Time-out</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.10" target="_blank">409</a><span>"&nbsp;&nbsp;:&nbsp;Conflict</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.11" target="_blank">410</a><span>"&nbsp;&nbsp;:&nbsp;Gone</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.12" target="_blank">411</a><span>"&nbsp;&nbsp;:&nbsp;Length&nbsp;Required</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.13" target="_blank">412</a><span>"&nbsp;&nbsp;:&nbsp;Precondition&nbsp;Failed</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.14" target="_blank">413</a><span>"&nbsp;&nbsp;:&nbsp;Request&nbsp;Entity&nbsp;Too&nbsp;Large</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.15" target="_blank">414</a><span>"&nbsp;&nbsp;:&nbsp;Request-URI&nbsp;Too&nbsp;Large</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.16" target="_blank">415</a><span>"&nbsp;&nbsp;:&nbsp;Unsupported&nbsp;Media&nbsp;Type</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.17" target="_blank">416</a><span>"&nbsp;&nbsp;:&nbsp;Requested&nbsp;range&nbsp;not&nbsp;satisfiable</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4.18" target="_blank">417</a><span>"&nbsp;&nbsp;:&nbsp;Expectation&nbsp;Failed</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.1" target="_blank">500</a><span>"&nbsp;&nbsp;:&nbsp;Internal&nbsp;Server&nbsp;Error</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.2" target="_blank">501</a><span>"&nbsp;&nbsp;:&nbsp;Not&nbsp;Implemented</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.3" target="_blank">502</a><span>"&nbsp;&nbsp;:&nbsp;Bad&nbsp;Gateway</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.4" target="_blank">503</a><span>"&nbsp;&nbsp;:&nbsp;Service&nbsp;Unavailable</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.5" target="_blank">504</a><span>"&nbsp;&nbsp;:&nbsp;Gateway&nbsp;Time-out</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;"</span><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5.6" target="_blank">505</a><span>"&nbsp;&nbsp;:&nbsp;HTTP&nbsp;Version&nbsp;not&nbsp;supported</span><br /><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;extension-code</span><br /><br /><span>extension-code&nbsp;=&nbsp;3DIGIT</span><br /><span>Reason-Phrase&nbsp;&nbsp;=&nbsp;*&lt;TEXT,&nbsp;excluding&nbsp;CR,&nbsp;LF&gt;</span><br /><br /><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html" target="_blank">http://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html</a></p>]]></description></item><item><title>Goolge DNS vs. OpenDNS【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/07/27/2612467.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 27 Jul 2012 13:17:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/27/2612467.html</guid><description><![CDATA[<h1>1.Google推出免费DNS服务</h1>
<p>谷歌发布了&nbsp;<a href="http://code.google.com/speed/public-dns/">Google Public DNS</a>&nbsp;服务，利用这个服务我们可以：</p>
<ol>
<li>加快 DNS 解析速度从而加快网页载入速度；</li>
<li>谷歌承诺不会给你重定向，避免一般 DNS 服务一打开敏感网页就给你重定向不知道哪里去；</li>
<li>更安全。</li>
</ol>
<p>使用的方法是：</p>
<p>网络连接 &rarr; 本地连接 &rarr; 属性 &rarr; Internet 协议 (TCP/IP) &rarr; 属性 &rarr; DNS 服务器填入 8.8.8.8 和 8.8.4.4。</p>
<p><strong>编注：</strong></p>
<p>以上方法仅适用于 Windows 平台，Linux 系统可将这组 IP 加入 /etc/resolv.conf 文件：</p>
<pre><code>nameserver 8.8.8.8
nameserver 8.8.4.4
</code>
</pre>
<p>使用 NetworkManager 的同学，设置方法请参考<a href="http://paste.ubuntu.org.cn/i47496">这里</a>。</p>
<h1 id="firstHeading" class="firstHeading">2.OpenDNS</h1>
<p><strong>OpenDNS</strong>&nbsp;是一个免费的域名解析服务提供商（<a class="mw-redirect" title="DNS" href="http://zh.wikipedia.org/wiki/DNS">DNS</a>）。将DNS服务选项设置成如下两个地址便可以开始使用OpenDNS的服务：</p>
<ul>
<li><strong>208.67.222.222</strong>&nbsp;(Resolver1.OpenDNS.com)</li>
<li><strong>208.67.220.220</strong>&nbsp;(Resolver2.OpenDNS.com)</li>
</ul>
<p>OpenDNS 在 2006年7月由 黑客／创业者 大卫&middot;尤里维奇（David Ulevitch）创建。之后获得了由CNET的创始人Halsey Minor创建的Minor Ventures公司提供的风险投资。 2006年7月10号，这项OpenDNS开始为digg、slashdot和Wired News网站提供服务，这直接导致DNS请求数从7月9日的一百万猛增到30日的三千万。 2006年10月2日，OpenDNS建立了第一个反钓鱼数据库Phishtank.com，收集、整理和发布钓鱼攻击信息。 2006年，OpenDNS开始使用DynDNS的接口来处理动态IP用户的DNS更新。 从2007年1月开始，OpenDNS开始在以下地区设置服务器来提供服务：西雅图、帕洛阿尔托、纽约、华盛顿和伦敦，并计划扩展到芝加哥和香港。 2007年6月11日，OpenDNS开始启用高级网页过滤系统来为他们的免费账户过滤成人内容。</p>
<p>OpenDNS 在 2006年7月由 黑客／创业者大卫&middot;尤里维奇（David Ulevitch）创建。之后获得了由CNET的创始人Halsey Minor创建的Minor Ventures公司提供的风险投资。</p>
<p>2006年7月10号，这项OpenDNS开始为digg、slashdot和Wired News网站提供服务，这直接导致DNS请求数从7月9日的一百万猛增到30日的三千万。</p>
<p>2006年10月2日，OpenDNS建立了第一个反钓鱼数据库Phishtank.com，收集、整理和发布钓鱼攻击信息。</p>
<p>2006年，OpenDNS开始使用DynDNS的接口来处理动态IP用户的DNS更新。</p>
<p>从2007年1月开始，OpenDNS开始在以下地区设置服务器来提供服务：西雅图、帕洛阿尔托、纽约、华盛顿和伦敦，并计划扩展到芝加哥和香港。</p>
<p>2007年6月11日，OpenDNS开始启用高级网页过滤系统来为他们的免费账户过滤成人内容。</p>
<h1>3.Google DNS vs. OpenDNS</h1>
<p><strong>Google今天宣布了一项新服务Google Public DNS，让消费者使用Google作为他们的DNS服务提供商。该服务给用户带来的好处是，理论上更快速、更稳定的浏览体验，以及针对恶意网站的更多安全 防护；而Google可以通过该服务获得大量的用户数据，以及某些可能的收入。</strong>目前Google Public DNS服务尚处于试验阶段，用户如果想使用它，必须修改网络设置，这样他们的网站访问请求才会被转向Google服务而不是ISP商。Google已经建立了专门网页来指导用户如何设置使用该服务。</p>
<p>该服务将直接挑战风投公司Sequoia和Greylock支持的OpenDNS服务，OpenDNS至今已经推出4年，目前每天解析200亿次DNS查询，拥有150万最终用户。</p>
<p>2008年，OpenDNS的日均解析量仅有70亿条，但是已经实现日进2万美元收入。其营收方式是，当用户输入了一个无法解析的网址时，该服务将显示它 自己的定制页面，其中包含搜索结果和广告。另外，企业用户非常愿意付费使用这种DNS服务，以防止用户访问恶意网站或其它网站（诸如色情网站或社交网站 Facebook等）。</p>
<p>不过，和OpenDNS不同的是，Google Public DNS并不重定向用户到广告页面。</p>
<p>针对Google推出DNS服务，OpenDNS创始人大卫&middot;尤勒维什(David Ulevitch)在官方博客上发表了五点声明，他认为该服务与OpenDNS并不完全相同，而且Google推出DNS服务的举动也说明了DNS在互联 网架构中的关键作用，以及帮助用户安全、可靠地浏览互联网的战略重要性。另外尤勒维什还指出，Google是互联网上最大的广告和重定向公司。</p>
<p>Google Public DNS产品经理普瑞姆&middot;拉玛斯瓦米(Prem Ramaswami)表示，该服务的目标是快速、安全和有效的DNS响应。他表示，Google将严格遵循DNS协议，即不阻挡、不劫持和不过滤用户查询。</p>
<p>Google还透露了该服务将收集的数据类型和保存时间。收集的数据包含IP地址（最长保存48小时，以检测针对该服务的恶意行为）、ISP信息和地理位置信息（最长保存2周）。这些数据将不会以任何方式关联用户的Google帐号。</p>
<p>据普瑞姆表示，普通用户每天大约进行1000次DNS查询。</p>
<p>&nbsp;</p>
<p>原文地址：<a href="http://www.binghe.org/2009/12/goolge-dns-vs-opendns/">http://www.binghe.org/2009/12/goolge-dns-vs-opendns/</a></p>]]></description></item><item><title>OpenDNS打造自由干净的网络环境【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/07/27/2612463.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 27 Jul 2012 13:15:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/27/2612463.html</guid><description><![CDATA[<p>目前的国内网络环境部容乐观，其中属于基础服务的DNS就问题多多，一些服务商出于盈利的目的往往会做出DNS劫持的恶事来，在你访问某个网站的时候自动将你所访问的网站跳向另外一个网站，比较大的DNS劫持事件就曾出现过用户访问google的时候却变成了百度。</p>
<p>　　另外出于某些原因电信营运商会将一些网站从DNS屏蔽掉，也就是说你想访问这些网站的时候，DNS会给你解析出一个不正确的IP地址，这样你就不能正常访问该网站了。</p>
<p>　　对于目前国内出现的类似DNS现象，有一个很简单的办法进行解决，就是使用国外更为安全可靠的DNS服务器进行域名解析，可以避免被本地电信或网通进行域名劫持。</p>
<p>　　我推荐大家使用OpenDNS提供的DNS服务器，OpenDNS是一个提供免费DNS服务的网站，口号是更安全、更快速、更智能。</p>
<p><img class="lightbox" title="" src="http://www.liusuping.com/upload/opendns-1.jpg" alt="" /></p>
<p>　　使用方法非常简单，对于宽带拨号用户来说，在&ldquo;设置&rdquo;-&ldquo;网络连接&rdquo;中找到宽带上网的连接，打开网络连接属性，选择Interner协议（TCP/IP）的属性页里，不要选择自动获取DNS，而要选择&ldquo;使用下面的DNS服务器地址&rdquo;，首选DNS服务器和备用DNS服务器分别设置为208.67.222.222和208.67.220.220，如下图所示，完成后重新连接上网，就可以摆脱服务商对我们的DNS劫持。</p>
<p><img class="lightbox" title="" src="http://www.liusuping.com/upload/opendns-2.jpg" alt="" /></p>
<p>内网用户的设置方法也类似，使用指定DNS，将首选和备用DNS设置为OpenDNS的地址208.67.222.222和208.67.220.220即可。</p>]]></description></item><item><title>国内外DNS服务器地址列表【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/07/27/2612455.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 27 Jul 2012 13:08:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/27/2612455.html</guid><description><![CDATA[<p>　　DNS（Domain Name System）是域名解析服务器的意思，它在互联网的作用是把域名转换成为网络可以识别的IP地址。目前国内电信运营商通过使用DNS劫持的方法，干扰用户正常上网，使得用户无法访问Google、Gmail、Google AdSense、Google Maps等常用服务，昨天我<a href="http://www.williamlong.info/archives/1841.html" target="_blank">介绍</a>了使用<a href="http://www.williamlong.info/archives/1101.html" target="_blank">OpenDNS</a>的方法解决这个问题，由于OpenDNS的服务器在美国，如果使用的人多了有可能会速度变慢，因此今天我介绍一些其他国外的DNS服务器地址，供大家选择。</p>
<p>　　通常来说，香港、韩国、日本等国的DNS服务器速度会比较快，大家可以多用几个试试，尽量选择一个自己访问最快的DNS服务器，中国的电信运营商都是流氓，DNS服务器，早换早轻松。</p>
<p>　　<strong>港澳台DNS服务器地址</strong></p>
<p>　　香港：<br />　　205.252.144.228<br />　　208.151.69.65<br />　　202.181.202.140<br />　　202.181.224.2</p>
<p>　　澳门：<br />　　202.175.3.8<br />　　202.175.3.3</p>
<p>　　台湾：<br />　　168.95.192.1<br />　　168.95.1.1</p>
<p>　　<strong>国外DNS服务器地址</strong></p>
<p>　　美国：<br />　　208.67.222.222<br />　　208.67.220.220<br />　　165.87.13.129<br />　　165.87.201.244<br />　　205.171.3.65<br />　　205.171.2.65<br />　　198.41.0.4<br />　　198.41.0.4<br />　　198.32.64.12<br />　　192.33.4.12<br />　　192.203.230.10<br />　　192.5.5.241<br />　　192.112.36.4<br />　　192.36.148.17<br />　　192.58.128.30<br />　　192.9.9.3<br />　　193.0.14.129<br />　　128.9.0.107<br />　　128.8.10.90<br />　　66.33.206.206.<br />　　208.96.10.221<br />　　66.33.216.216<br />　　205.171.3.65<br />　　205.171.2.65<br />　　165.87.13.129<br />　　165.87.201.244</p>
<p>　　加拿大：<br />　　209.166.160.36<br />　　209.166.160.132</p>
<p>　　英国：<br />　　193.0.14.129</p>
<p>　　日本<br />　　202.12.27.33<br />　　202.216.228.18</p>
<p>　　韩国：<br />　　164.124.101.31<br />　　203.248.240.31<br />　　168.126.63.60<br />　　168.126.63.61</p>
<p>　　新西兰：<br />　　202.27.184.3</p>
<p>　　泰国：<br />　　209.166.160.132<br />　　202.44.8.34<br />　　202.44.8.2</p>
<p>　　印度：<br />　　202.138.103.100<br />　　202.138.96.2</p>
<p>　　<strong>国内各省市DNS服务器地址</strong></p>
<p>　　北京：<br />　　202.96.199.133<br />　　202.96.0.133<br />　　202.106.0.20<br />　　202.106.148.1<br />　　202.97.16.195<br />　　202.138.96.2</p>
<p>　　深圳：<br />　　202.96.134.133<br />　　202.96.154.15</p>
<p>　　广州：<br />　　61.144.56.100<br />　　61.144.56.101</p>
<p>　　广东：<br />　　202.96.128.86<br />　　202.96.128.143</p>
<p>　　上海：<br />　　202.96.199.132<br />　　202.96.199.133<br />　　202.96.209.5<br />　　202.96.209.133</p>
<p>　　天津：<br />　　202.99.96.68<br />　　202.99.104.68</p>
<p>　　广西：<br />　　202.96.128.68<br />　　202.103.224.68<br />　　202.103.225.68</p>
<p>　　河南：<br />　　202.102.227.68<br />　　202.102.245.12<br />　　202.102.224.68</p>
<p>　　河北：<br />　　202.99.160.68</p>
<p>　　福建：<br />　　202.101.98.54<br />　　202.101.98.55</p>
<p>　　厦门：<br />　　202.101.103.55<br />　　202.101.103.54</p>
<p>　　湖南：<br />　　202.103.0.68<br />　　202.103.96.68<br />　　202.103.96.112</p>
<p>　　湖北：<br />　　202.103.0.68<br />　　202.103.0.117<br />　　202.103.24.68</p>
<p>　　江苏：<br />　　202.102.15.162<br />　　202.102.29.3<br />　　202.102.13.141<br />　　202.102.24.35</p>
<p>　　浙江：<br />　　202.96.102.3<br />　　202.96.96.68<br />　　202.96.104.18</p>
<p>　　陕西：<br />　　202.100.13.11<br />　　202.100.4.16<br />　　202.100.4.15<br />　　202.100.0.68</p>
<p>　　山东：<br />　　202.102.154.3<br />　　202.102.152.3<br />　　202.102.128.68<br />　　202.102.134.68</p>
<p>　　山西：<br />　　202.99.192.68<br />　　202.99.198.6</p>
<p>　　四川：<br />　　202.98.96.68<br />　　61.139.2.69</p>
<p>　　重庆：<br />　　61.128.128.68</p>
<p>　　成都：<br />　　202.98.96.68<br />　　202.98.96.69</p>
<p>　　辽宁：<br />　　202.98.0.68<br />　　202.96.75.68<br />　　202.96.75.64<br />　　202.96.69.38<br />　　202.96.86.18<br />　　202.96.86.24</p>
<p>　　安徽：<br />　　202.102.192.68<br />　　202.102.199.68<br />　　10.89.64.5</p>
<p>　　吉林：<br />　　202.98.5.68<br />　　202.98.14.18<br />　　202.98.14.19</p>
<p>　　江西：<br />　　202.101.224.68<br />　　202.109.129.2<br />　　202.101.240.36</p>
<p>　　新疆：<br />　　61.128.97.74<br />　　61.128.97.73</p>
<p>　　贵州：<br />　　202.98.192.68<br />　　10.157.2.15</p>
<p>　　云南：<br />　　202.98.96.68<br />　　202.98.160.68</p>
<p>　　黑龙江：<br />　　202.97.229.133<br />　　202.97.224.68<br />　　219.150.32.132</p>
<p>　　海南：<br />　　202.100.192.68<br />　　202.100.199.8</p>
<p>　　宁夏：<br />　　202.100.0.68<br />　　202.100.96.68</p>
<p>　　甘肃：<br />　　202.100.72.13</p>
<p>　　内蒙古：<br />　　202.99.224.68</p>
<p>　　青海：<br />　　202.100.128.68</p>
<p>　　<strong>全球路由DNS服务器</strong></p>
<p>　　全球只有13台路由DNS根服务器，在13台路由服务器中，名字分别为&ldquo;A&rdquo;至&ldquo;M&rdquo;，其中10台设置在美国，另外各有一台设置于英国、瑞典和日本。下表是这些机器的管理单位、设置地点及最新的IP地址。</p>
<p>　　名称　　管理单位及设置地点　　　　IP地址<br />　　A INTERNIC.NET（美国，弗吉尼亚州） 198.41.0.4<br />　　B 美国信息科学研究所（美国，加利弗尼亚州） 128.9.0.107<br />　　C PSINet公司（美国，弗吉尼亚州） 192.33.4.12<br />　　D 马里兰大学（美国马里兰州） 128.8.10.90<br />　　E 美国航空航天管理局[NASA]（美国加利弗尼亚州） 192.203.230.10<br />　　F 因特网软件联盟（美国加利弗尼亚州） 192.5.5.241<br />　　G 美国国防部网络信息中心（美国弗吉尼亚州） 192.112.36.4<br />　　H 美国陆军研究所（美国马里兰州） 128.63.2.53<br />　　I Autonomica公司（瑞典，斯德哥尔摩） 192.36.148.17<br />　　J VeriSign公司（美国，弗吉尼亚州） 192.58.128.30<br />　　K RIPE NCC（英国，伦敦） 193.0.14.129<br />　　L IANA （美国，弗吉尼亚州） 198.32.64.12</p>
<p>&nbsp;</p>
<p>原文地址：<a href="http://www.williamlong.info/archives/1842.html">http://www.williamlong.info/archives/1842.html</a></p>]]></description></item><item><title>CentOS实验七：定制CentOS安装包</title><link>http://www.cnblogs.com/eastson/archive/2012/07/26/2609701.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 26 Jul 2012 03:17:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/26/2609701.html</guid><description><![CDATA[<p><span>目的：根据自己的习惯，将CentOS重新打包成一个新ISO，可以自动分区、选择软件包，以实现快速安装系统。</span></p>
<p><span>&nbsp;</span></p>
<p><span>第一步：<span>安装CentOS，安装过程中选择最小化安装。安装完毕后在</span><span>root的根目录下会生成3个文件，我们用到两个:</span></span></p>
<ul>
<li><span>anaconda-ks.cfg - kisckstart脚本，记录安装过程的配置，包括选择语言，选择键盘，分区，root密码等等。</span></li>
<li><span><span>install.log - 记录安装过程中所安装的包。</span></span></li>
</ul>
<p><span><span>&nbsp;</span></span></p>
<p><span><span>第二步：创建基本工作环境：</span></span></p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# mkdir -p /media/cdrom  ##光盘挂载点<br />[root@localhost ~]# mount -o loop /dev/cdrom /media/cdrom  ##挂载CentOS原始安装光盘</pre>
<pre>[root@localhost ~]# mkdir -p /media/custom ##定制文件存放目录<br />[root@localhost ~]# rsync -a --exclude=Packages /media/cdrom/ /media/custom ##复制原始光盘所有文件到定制目录，除了Packages<br />[root@localhost ~]# mkdir -p /media/custom/Packages&nbsp;##创建定制目录的Packages</pre>
</div>
<p><span><span>&nbsp;</span></span></p>
<p><span><span>第三步：汇总安装时必需的包。安装过程中安装的所有包都有install.log中记录。</span></span></p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# <span style="color: #0000ff;">awk</span> <span style="color: #800000;">'</span><span style="color: #800000;">/Installing/{print $2}</span><span style="color: #800000;">'</span> <span style="color: #0000ff;">install</span>.log |<span style="color: #0000ff;">sed</span> <span style="color: #800000;">'</span><span style="color: #800000;">s/^[0-9]*://g</span><span style="color: #800000;">'</span> &gt;<span style="color: #000000;"> packages.list  ###创建packages.list
[root@localhost </span>~]# <span style="color: #0000ff;">cat</span><span style="color: #000000;"> packages.list  ###
libgcc</span>-<span style="color: #800080;">4.4</span>.<span style="color: #800080;">6</span>-<span style="color: #800080;">3</span><span style="color: #000000;">.el6.x86_64
setup</span>-<span style="color: #800080;">2.8</span>.<span style="color: #800080;">14</span>-<span style="color: #800080;">13</span><span style="color: #000000;">.el6.noarch
filesystem</span>-<span style="color: #800080;">2.4</span>.<span style="color: #800080;">30</span>-<span style="color: #800080;">3</span><span style="color: #000000;">.el6.x86_64
basesystem</span>-<span style="color: #800080;">10.0</span>-<span style="color: #800080;">4</span><span style="color: #000000;">.el6.noarch
ca</span>-certificates-<span style="color: #800080;">2010.63</span>-<span style="color: #800080;">3</span>.el6_1.<span style="color: #800080;">5</span><span style="color: #000000;">.noarch
ncurses</span>-base-<span style="color: #800080;">5.7</span>-<span style="color: #800080;">3.20090208</span><span style="color: #000000;">.el6.x86_64
tzdata</span>-<span style="color: #800080;">2011l</span>-<span style="color: #800080;">4</span><span style="color: #000000;">.el6.noarch
... ...</span></pre>
</div>
<p>&nbsp;</p>
<p>第四步：向packages.list添加自己需要的包，如果仅仅最小化安装就失去了定制自己的安装包的意义。添加之前需要先用yum安装一篇，记住包的依赖关系，把依赖的包也放入packages.list，例如man依赖xz和xz-lzma-compat。</p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# <span style="color: #0000ff;">cat</span><span style="color: #000000;"> packages.list  ###
... ...
rootfiles</span>-<span style="color: #800080;">8.1</span>-<span style="color: #800080;">6.1</span><span style="color: #000000;">.el6.noarch
</span><span style="color: #0000ff;">man   ###添加的包</span><span style="color: #000000;">
xz
xz</span>-lzma-compat</pre>
</div>
<p>&nbsp;</p>
<p>第五步：复制包，将packages.list中所有的包从光盘复制到定制目录。</p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# <span style="color: #0000ff;">touch</span> cprpms.<span style="color: #0000ff;">sh  ###创建cprpms.sh</span><span style="color: #000000;">
[root@localhost </span>~]# <span style="color: #0000ff;">cat</span> cprpms.<span style="color: #0000ff;">sh  ###  </span><span style="color: #000000;">
#</span>!/bin/<span style="color: #000000;">bash
SRC_RPMS</span>=/media/cdrom/<span style="color: #000000;">Packages
DST_RPMS</span>=/media/custom/<span style="color: #000000;">Packages
packages_list</span>=/root/<span style="color: #000000;">packages.list
number_of_packages</span>=`<span style="color: #0000ff;">cat</span> $packages_list | <span style="color: #0000ff;">wc</span> -<span style="color: #000000;">l`
i</span>=<span style="color: #800080;">1</span>
<span style="color: #0000ff;">while</span> [ $i -le $number_of_packages ] ; <span style="color: #0000ff;">do</span><span style="color: #000000;">
    name</span>=`<span style="color: #0000ff;">head</span> -n $i $packages_list | <span style="color: #0000ff;">tail</span> -n -<span style="color: #800080;">1</span><span style="color: #000000;">`
    </span><span style="color: #0000ff;">echo</span> <span style="color: #800000;">"</span><span style="color: #800000;">cp $SRC_RPMS/$name* $DST_RPMS/</span><span style="color: #800000;">"</span>
    <span style="color: #0000ff;">cp</span> $SRC_RPMS/$name* $DST_RPMS/<span style="color: #000000;">
    i</span>=`<span style="color: #0000ff;">expr</span> $i + <span style="color: #800080;">1</span><span style="color: #000000;">`
</span><span style="color: #0000ff;">done</span><span style="color: #000000;">

[root@localhost </span>~]# <span style="color: #0000ff;">chmod</span> a+x cprpms.<span style="color: #0000ff;">sh  ###</span><span style="color: #000000;">
[root@localhost </span>~]# ./cprpms.<span style="color: #0000ff;">sh   ###</span>
<span style="color: #0000ff;">cp</span> /media/cdrom/Packages/libgcc-<span style="color: #800080;">4.4</span>.<span style="color: #800080;">6</span>-<span style="color: #800080;">3</span>.el6.x86_64* /media/custom/Packages/
<span style="color: #0000ff;">cp</span> /media/cdrom/Packages/setup-<span style="color: #800080;">2.8</span>.<span style="color: #800080;">14</span>-<span style="color: #800080;">13</span>.el6.noarch* /media/custom/Packages/
<span style="color: #0000ff;">cp</span> /media/cdrom/Packages/filesystem-<span style="color: #800080;">2.4</span>.<span style="color: #800080;">30</span>-<span style="color: #800080;">3</span>.el6.x86_64* /media/custom/Packages/<span style="color: #000000;">
... ...</span></pre>
</div>
<p>&nbsp;</p>
<p>第六步：</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>参考文档：</p>
<ul>
<li><a href="http://www.linuxzen.com/index.php/archives/36" target="_blank">根据CentOS定制自己的发行版</a></li>
<li><a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/shitouer/archive/2012/07/22/2604207.html" target="_blank">定制CentOS 6.3 自动安装盘</a></li>
<li><a href="http://www.2cto.com/os/201202/119159.html" target="_blank">根据业务定制自动安装CentOS</a></li>
<li><a href="http://liyaoyi.blog.51cto.com/442933/823471" target="_blank">Linux定制自动安装</a></li>
</ul>]]></description></item><item><title>Puppet效果图【转]</title><link>http://www.cnblogs.com/eastson/archive/2012/07/24/2606481.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 24 Jul 2012 06:40:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/24/2606481.html</guid><description><![CDATA[<p>网上搜到一张Puppet的效果图，觉得很有代表性。</p>
<p>&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012072414400010.jpg" alt="" /></p>]]></description></item><item><title>Puppet常用配置与管理【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/07/24/2606466.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 24 Jul 2012 06:34:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/24/2606466.html</guid><description><![CDATA[<h3><span>puppet自动认证</span></h3>
<p>首先我们先来看一个问题，新服务器可以通过kickstart自动安装完，并且自动安装完puppet相关包，安装完后客户端会请求证书，然后服务器会给客户端颁发证书，如果手动颁发很麻烦，如下配置可以让服务器自动验证。 <br /> <br />前提是配置好hosts： <br />Master   192-168-0-130.APP.com <br />Client   192-168-0-131.APP.com<br /> <br />在服务器端的puppet.conf配置文件里面[main]下方加上autosign = true，重启puppetmaster服务即可！   <br />这样在客户端执行puppetd --server=192-168-0-130.APP.com --test 服务器端会自动认证！</p>
<p>&nbsp;</p>
<h3><span>重新生成证书</span></h3>
<p>很多时候由于更换主机名，我们需要重新配置认证：<br />（1）、首先在客户端删除 rm -rf /var/lib/puppet/ssl/文件夹  <br />（2）、然后在服务器端删除客户端的证书：puppetca --clean 192-168-0-131.APP.com 【 192-168-0-131.APP.com 客户端的主机名】  <br />（3）、然后再在客户端执行puppetd --server=192-168-0-130.APP.com --test 即可！</p>
<p>&nbsp;</p>
<h3><span>配置客户端自动同步</span></h3>
<p>在客户端安装完puppet后，并且认证完后，我们可以看到效果，那怎样让它自动与服务器同步呢？默认多少分钟跟服务器同步呢？怎样修改同步的时间呢，这时候我们需要配置客户端：</p>
<p>（1）、配置puppet相关参数和同步时间： <br />vi /etc/sysconfig/puppet   <br />PUPPET_SERVER=192-168-0-130.APP.com 服务器mater的host   <br />PUPPET_PORT=8140 访问服务器的8140端口   <br />PUPPET_LOG=/var/log/puppet/puppet.log 本地日志   <br />#PUPPET_EXTRA_OPTS=--waitforcert=500  【默认同步的时间，我这里不修改这行参数】   <br />然后启动 /etc/init.d/puppet start 即可  <br /> <br />（2）、默认配置完毕后，客户端会半个小时跟服务器同步一次，我们可以修改这个时间。 vi  /etc/puppet/puppet.conf 的 [agent]下加入：    <br />runinterval = 60  //代表60秒跟服务器同步一次   <br />修改完后重启puppet 过一分钟即可看到客户端同步的效果！</p>
<p>&nbsp;</p>
<h3><span>puppetrun的使用</span></h3>
<p>当我们配置完puppet服务器端和客户端后，客户端会默认半个小时跟服务器端同步，如果我们需要更新重要文件，是不是得立即生效呢，那有什么好的办法吗？答案：有！ <br />在服务器端使用puppetrun这个命令可以给客户端发送一段信号，告诉客户端立刻跟服务器同步，这样就达到我们的目的了！那怎样配置呢？  </p>
<p>（1）、修改客户端上的puppet的配置文件  <br />vi /etc/puppet/puppet.conf  <br />在[agent]后面添加  <br />listen = true  //这个是让puppet监听8139端口。  </p>
<p>（2）、修改管户端的puppet的/etc/sysconfig/puppet  <br />vim /etc/sysconfig/puppet   <br />PUPPET_SERVER=192-168-0-130.APP.com  //改为你对应的puppetmaster的主机名。  <br /> <br />（3）、新建namespaceauth.conf这个文件，vi /etc/puppet/namespaceauth.conf添加如下内容：  <br />[puppetrunner]  <br />allow *  <br /> <br />（4）、还需要修改auth.conf。  <br />在path /之前添加下内容,加粗部分：  <br />path /run  <br />method save  <br />allow *  <br />path /  <br />auth any  <br />即可！  <br />然后重启客户端:/etc/init.d/puppet restart  </p>
<p>（5）、在服务器端测试一下：执行一下命令  <br />puppetrun -p 10 &ndash;host 192-168-0-131.APP.com 后面也可以加多个客户端主机名！  <br /> <br />而且已经发送了信号给客户端！可以去客户端查看一下效果 tail -fn 100 /var/log/puppet/puppet.log  <br />提示finished表示发送信号完成，相反failed则表示失败。    <br />执行完在/tmp/下新建test.txt文件！puppetrun还有更高级的用法，可以查看puppetrun &ndash;help&nbsp;</p>
<p>&nbsp;</p>
<p><span>原文地址：<a href="http://wgkgood.blog.51cto.com/1192594/869694" target="_blank">http://wgkgood.blog.51cto.com/1192594/869694</a></span></p>]]></description></item><item><title>Puppet文档：模块基础</title><link>http://www.cnblogs.com/eastson/archive/2012/07/24/2606010.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 24 Jul 2012 02:27:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/24/2606010.html</guid><description><![CDATA[<p>原文地址：<a href="http://docs.puppetlabs.com/puppet/2.7/reference/modules_fundamentals.html" target="_blank"><span>Module Fundamentals</span></a></p>
<p><span>&nbsp;</span></p>
<h3 id="puppet-modules">Puppet模块</h3>
<p>模块是Puppet自包含的代码和数据集合。绝大多数的清单都可以放到模块中，唯一的例外是主清单site.pp，包含站点级和节点级的代码。</p>
<p>每个Puppet使用者都应该要求自己能够编写一些属于自己的模块：</p>
<ul>
<li>阅读完本文档将能够学习到如何编写和使用自己的Puppet模块。</li>
<li>通过"<a href="http://docs.puppetlabs.com/puppet/2.7/reference/modules_installing.html" target="_blank">安装模块</a>"学习如何从Puppet Forge安装模块。</li>
<li>通过"<a href="http://docs.puppetlabs.com/puppet/2.7/reference/modules_publishing.html" target="_blank">发布模块</a>"学习如何发布自己的模块到Puppet Forge。</li>
<li>通过"<a href="http://docs.puppetlabs.com/guides/plugins_in_modules.html" target="_blank">使用插件</a>"学习如何组织模块中的插件(例如自定义的行为和自定义的资源类型)和如何将它们同步到代理节点。</li>
</ul>
<p>&nbsp;</p>
<h3 id="using-modules">使用模块</h3>
<p>Puppet能够自动载入在模块中定义的类和函数。在清单或外部节点分类器(<a href="http://docs.puppetlabs.com/guides/external_nodes.html" target="_blank">external node classifier，ENC</a>)中，类或者函数都可以通过名字的方式被定义：</p>
<div class="cnblogs_code">
<pre># /etc/puppetlabs/puppet/<span style="color: #000000;">site.pp

node default {
    include apache

    class {</span><span style="color: #800000;">'</span><span style="color: #800000;">ntp</span><span style="color: #800000;">'</span><span style="color: #000000;">:
        enable </span>=&gt; <span style="color: #0000ff;">false</span><span style="color: #000000;">;
    }
    
    apache::vhost {</span><span style="color: #800000;">'</span><span style="color: #800000;">personal_site</span><span style="color: #800000;">'</span><span style="color: #000000;">:
        port    </span>=&gt; <span style="color: #800080;">80</span><span style="color: #000000;">,
        docroot </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">/var/www/personal</span><span style="color: #800000;">'</span><span style="color: #000000;">,
        options </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">Indexes MultiViews</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>同样地，Puppet也能够自动地载入在模块中定义的插件（例如自定义的行为和自定义的资源类型）。查阅"<a href="http://docs.puppetlabs.com/guides/plugins_in_modules.html" target="_blank">使用插件</a>"获取更多的细节。</p>
<p>&nbsp;</p>
<p>编写的模块要在Puppet中能够使用，必须将它放在<a href="http://docs.puppetlabs.com/references/stable/configuration.html#modulepath" target="_blank">moudlepath</a>配置的一个目录中。</p>
<p>modulepath配置是通过系统路径分隔符连起来的一系列目录。绝大多数情况下是这样的：</p>
<ul>
<li><code>/etc/puppetlabs/puppet/modules:/opt/puppet/share/puppet/modules</code>&nbsp;(针对Puppet企业版本)</li>
<li><code>/etc/puppet/modules:/usr/share/puppet/modules</code>&nbsp;(针对Puppet开源版本)</li>
</ul>
<p><span>使用</span><code><em><strong>puppet config print modulepath</strong></em>命令可以查看当前的modulepath配置。</code></p>
<p>使用<a href="http://docs.puppetlabs.com/guides/configuring.html" target="_blank">puppet.conf</a>配置时，如果需要Puppet服务器和代理都能够访问到模块，则modulepath配置必须出现在[main]节。modulepath也可以根据不同的<a href="http://docs.puppetlabs.com/guides/environment.html" target="_blank">环境</a>设置不同的配置。</p>
<p>&nbsp;</p>
<p>使用<em><strong>puppet module</strong></em>命令可以方便地安装其它使用者编写的模块。查阅"<a href="http://docs.puppetlabs.com/puppet/2.7/reference/modules_installing.html" target="_blank">安装模块</a>"获取更多的细节。</p>
<p>&nbsp;</p>
<h3>模块结构</h3>
<p>在磁盘上，一个模块对应一个特殊的目录结构：</p>
<ul>
<li>MODULE_NAME
<ul>
<li>manifests</li>
<li>files</li>
<li>templates</li>
<li>lib</li>
<li>tests</li>
<li>spec</li>
</ul>
</li>
</ul>
<p>&nbsp;</p>
<p>例如，一个名为"my_module"的模块，它的目录结构应该是：</p>
<ul>
<li>my_module - 顶层目录，对应到模块名称。
<ul>
<li>manifests/ - 模块所有的清单。
<ul>
<li>init.pp - 类定义。该文件中的类名必须对应到模块名称。</li>
<li>other_class.pp - 类定义。该文件中的类名必须是my_module::other_class。</li>
<li>my_defined_type.pp - 函数定义。该文件中的函数名必须是my_module::my_defined_type。</li>
<li>implementation/ - 清单子目录。
<ul>
<li>foo.pp - 类定义。该文件中的类名必须是my_module::implementation::foo。</li>
<li>bar.pp - 类定义。该文件中的类别必须是my_module::implementation::bar。</li>
</ul>
</li>
</ul>
</li>
<li>files/ - 静态文件目录，能够被被代理节点下载。
<ul>
<li>service.conf - 该文件对应的URL是puppet://modules/my_module/service.conf。</li>
</ul>
</li>
<li>lib/ - 插件目录，例如自定义的行为和自定义的资源类型。查阅"<a href="http://docs.puppetlabs.com/guides/plugins_in_modules.html" target="_blank">使用插件</a>"获取更多的细节。</li>
<li>templates/ - 清单中用到的模板文件目录。查阅"<a href="http://docs.puppetlabs.com/guides/templating.html" target="_blank">模版</a>"获取更多的细节。
<ul>
<li>component.erp - 在清单中可以使用template('my_module/component.erp')的方式使用该模版。</li>
</ul>
</li>
<li>tests/ - 讲述如何使用类和函数的一些实例。
<ul>
<li>init.pp</li>
<li>other_class.pp - 清单目录中的每个类和函数在实例目录中都可以有对应的实例。</li>
</ul>
</li>
<li>spec/ - 讲述如何使用插件的一些实例。</li>
</ul>
</li>
</ul>
<p>&nbsp;</p>
<p>manifests目录中的每个清单文件都只能定义一个类或函数，文件名称要与其中定义的类或函数名称对应。</p>
<p style="text-align: left;">init.pp是特殊的清单文件，包含的类名同模块名。其它清单文件包含的类或函数要满足下面的规则：</p>
<table style="float: left;" border="1">
<tbody>
<tr>
<td>模块名</td>
<td>::</td>
<td>其它目录::(如果存在)</td>
<td>文件名(不包含后缀)</td>
</tr>
<tr>
<td>my_module</td>
<td>::</td>
<td>&nbsp;</td>
<td>other_class</td>
</tr>
<tr>
<td>my_module</td>
<td>::</td>
<td>implementation::</td>
<td>foo</td>
</tr>
</tbody>
</table>
<p style="text-align: left;">&nbsp;</p>
<p>&nbsp;</p>
<p style="text-align: left;">&nbsp;</p>
<ul>
<li style="text-align: left;"><code>my_module::other_class必须在</code><code>my_module/manifests/other_class.pp文件中定义。</code></li>
<li><code>my_module::implementation::foo必须在</code><code>my_module/manifests/implementation/foo.pp定义。</code></li>
</ul>
<p>类名中间的双冒号(::)被称为命名空间分割符(namespace separator)<strong>。</strong></p>
<p><strong>&nbsp;</strong></p>
<p>模块名只能包含小写字母、数字和下划线，而且必须以小写字母开头，也就是必须满足正则表达式[a-z][a-z0-9_]*。类名在相同限制上再加上不能包含命名空间分隔符。一些特殊的名称是不允许的，例如：</p>
<ul>
<li>main</li>
<li>settings</li>
</ul>
<p>&nbsp;</p>
<p>模块中的静态文件都可以通过<a href="http://docs.puppetlabs.com/references/stable/type.html#file" target="_blank">file</a>资源类型的source属性访问。每个静态文件都可以映射到一个URL：</p>
<table border="1">
<thead>
<tr>
<td style="text-align: left;">协议</td>
<td>三个斜杠符号</td>
<td>&ldquo;modules&rdquo;/</td>
<td>模块名/</td>
<td>文件名</td>
</tr>
</thead>
<tbody>
<tr>
<td><code>puppet:</code></td>
<td><code>///</code></td>
<td><code>modules/</code></td>
<td><code>my_module/</code></td>
<td><code>service.conf</code></td>
</tr>
</tbody>
</table>
<p>例如，<code>puppet:///modules/my_module/service.conf对应的文件是</code><code>my_module/files/service.conf。</code></p>
<p>&nbsp;</p>
<p><code></code>每个ERB模版文件(查阅"<a href="http://docs.puppetlabs.com/guides/templating.html" target="_blank">模版</a>"获取更多信息)都可以通过template函数被输出。输出的内容是一个简单的字符串，通常作为<a href="http://docs.puppetlabs.com/references/stable/type.html#file" target="_blank">file</a>资源类型的content属性，或者保存到一个变量。</p>
<p>template函数按照下面的方式定位模版文件：</p>
<table>
<thead>
<tr>
<td>template函数</td>
<td>(&lsquo;</td>
<td>模块名/</td>
<td>模版名</td>
<td>&rsquo;)</td>
</tr>
</thead>
<tbody>
<tr>
<td><code>template</code></td>
<td><code>('</code></td>
<td><code>my_module/</code></td>
<td><code>component.erb</code></td>
<td><code>')</code></td>
</tr>
</tbody>
</table>
<p>例如，<code>template('my_module/component.erb')对应的文件是</code><code>my_module/templates/component.erb</code>。</p>
<p>&nbsp;</p>
<h3>编写模块</h3>
<p>通过上面的讲述，现在我们应该能够编写简单的类和函数了。</p>
<ul>
<li><a href="http://docs.puppetlabs.com/guides/language_guide.html#classes" target="_blank">Classes</a>：获取关于类的更多信息。</li>
<li><a href="http://docs.puppetlabs.com/guides/language_guide.html#defined-resource-types" target="_blank">Defined Resource Types</a>：获取关于函数的更多信息。</li>
</ul>
<p>&nbsp;</p>
<h3>最佳实践</h3>
<p>一个模块中的类、函数和插件可以是互相关联的。</p>
<p>一个模块中的清单绝不应该引用其它模块中的文件或模块。</p>
<p>如果有模块中的一个类使用了其它模块中的另外一个类，这种情况应该尽可能避免，它会让模块的发布变得非常困难。解决此问题的方法是创建一个包含很多&ldquo;超级类&rdquo;的公共模块。</p>]]></description></item><item><title>Puppet文档：语言指南</title><link>http://www.cnblogs.com/eastson/archive/2012/07/24/2605960.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 24 Jul 2012 01:34:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/24/2605960.html</guid><description><![CDATA[<p>原文地址：<a href="http://docs.puppetlabs.com/guides/language_guide.html" target="_blank"><span class="section-name">Language Guide</span></a></p>
<p>&nbsp;</p>
<p>Puppet语言通过资源描述的方式管理我们的机器，它让这一切工作都变得简单而有效。本指南展示了Puppet语言是如何工作的，以及Puppet语言的一些基础概念。学习Puppet语言非常重要，它是帮助你理解Puppet如何管理你的机器的关键。</p>
<p>&nbsp;</p>
<p>Puppet语言相比其它编程语言而言是相当简单的。阅读本指南，也可以帮助你了解大量其它人已经写好的Puppet模块。<a href="http://docs.puppetlabs.com/puppet/2.7/reference/modules_fundamentals.html" target="_blank">Modules</a>页提供了关于模块的更多信息和链接。</p>
<p>&nbsp;</p>
<h3>名称中可接受的字符集</h3>
<p>变量名只能够包含字母数字和下划线，大小写敏感。连字符是不允许的，有些Puppet版本允许它们，这是一个Bug。</p>
<p>类名，模块名，the names of defined，和自定义的资源类型被限制为只能使用小写字母，数字和下划线，且必须以小写字母开头，也就是必须匹配表达式[a-z][a-z0-9_]*。有些名称违反了这些限制，但是目前能够正常工作，这是不建议的。连字符是严重反对使用的，在新版本里面它会让类里面的变量不能够正常工作。</p>
<p>类和资源类型定义可以使用命名空间分割符(::)。Class and defined resource type names can use&nbsp;<code>::</code>&nbsp;as a namespace separator, which is both semantically useful and a means of directing the behavior of the module autoloader. The final segment of a&nbsp;<a href="http://docs.puppetlabs.com/guides/language_guide.html#qualified-variables" target="_blank">qualified variable</a>&nbsp;name must obey the restrictions on variable names, and the preceding segments must obey the restrictions on class names.</p>
<p>Parameters used in parameterized classes and defined resource types can include&nbsp;<strong>alphanumeric characters and underscores,</strong>&nbsp;cannot begin with an underscore, and are case-sensitive. In practice, they should be treated as though they were under the same restrictions as class names in order to maximize future compatibility.</p>
<p>There is no practical restriction on resource names.</p>
<p>Any word that the syntax uses for special meaning is a reserved word, meaning you cannot use it for variable or type names. Words like&nbsp;<code>true</code>,&nbsp;<code>define</code>,&nbsp;<code>inherits</code>, and&nbsp;<code>class</code>&nbsp;are all reserved. If you ever need to use a reserved word as a value, be sure to quote it.</p>
<p>&nbsp;</p>
<h3>资源</h3>
<p>Puppet的基础是资源。资源描述了系统的多个方面，例如一个文件，一个服务，一个包，甚至是一个自定义的资源。我们稍后会降到如何使用"defines"和"classes"将资源聚合在一起，如何使用"moudles"将"defines"和&ldquo;classes&rdquo;再组合在以前。但现在我们一切从资源开始。</p>
<p>每个资源都有一个类型、标题和其它很多的属性 - Puppet的资源能够支持各种各样的属性，它们中的很多都有对应的默认值，所以不用担心要为每一个都指定值。</p>
<p>可以在"<a href="http://docs.puppetlabs.com/references/stable/type.html" target="_blank">References</a>"找到Puppet支持的所有资源类型，它们的可用属性，以及很多的文档。</p>
<p>下面是一个简单的资源使用例子，定义了一个文件的权限和所有者：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">file</span> { <span style="color: #800000;">'</span><span style="color: #800000;">/etc/passwd</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    owner </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    group </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    mode  </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">0644</span><span style="color: #800000;">'</span><span style="color: #000000;">,
}</span></pre>
</div>
<p>这段代码在所有的机器上都能够执行，可以用它检查密码文件是否配置正确。</p>
<p>&nbsp;</p>
<p>冒号前面的内容是资源的标题，必须是唯一的，能够被其它的资源引用。标题后面是一系列的属性和它们的值。</p>
<p>绝大多数的资源都有这样一个属性（经常被定义为name），当没有为它指定值时默认与资源的标题相同。在Puppet内部，这被称之为"namevar"。例如file资源，path属性默认与标题相同。资源的namevar几乎都是唯一的，只有exec资源和notify资源是例外。</p>
<p>&nbsp;</p>
<p>对简单资源来说，不用明确地指定name或path属性，让Puppet自动设置成同title属性，这样就足够了。但是有些拥有很长名称的资源，或者在不同的操作系统拥有不同的文件名，这时候通常会使用更容易理解的符号标题：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">file</span> { <span style="color: #800000;">'</span><span style="color: #800000;">sshdconfig</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    path </span>=&gt; $operatingsystem ?<span style="color: #000000;"> {
        solaris </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">/usr/local/etc/ssh/sshd_config</span><span style="color: #800000;">'</span><span style="color: #000000;">,
        default </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">/etc/ssh/sshd_config</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    },
    owner </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    group </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    mode  </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">0644</span><span style="color: #800000;">'</span><span style="color: #000000;">,
}</span></pre>
</div>
<p>使用sshdconfig作为标题，使得该file资源更容易被其它资源应用，因为无论是何种操作系统，它的标题都是相同的。例如，我们增加一个依赖该file资源的服务：</p>
<div class="cnblogs_code">
<pre>service { <span style="color: #800000;">'</span><span style="color: #800000;">sshd</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    subscribe </span>=&gt; File[<span style="color: #800000;">'</span><span style="color: #800000;">sshdconfig</span><span style="color: #800000;">'</span><span style="color: #000000;">],
}</span></pre>
</div>
<p>这会使得sshd服务在sshdconfig被改变时重新启动。注意，当我们引用一个资源时，需要大写资源类型的首字母，例如<span>File[sshdconfig]。当看到一个大写的资源类型，需要明白那实际上就是一个资源引用。小写字母是用来定义的。资源只能被定义一次，重复定义相同的资源会导致错误。这是Puppet非常重要的特性，使得能够按照模块化非常好的组织配置信息。</span></p>
<p><span>&nbsp;</span></p>
<p>一个资源能够依赖多个资源吗？从Puppet 0.24.6开始可以安装下面的方式指定多个依赖：</p>
<div class="cnblogs_code">
<pre>service { <span style="color: #800000;">'</span><span style="color: #800000;">sshd</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    require </span>=&gt; File[<span style="color: #800000;">'</span><span style="color: #800000;">sshdconfig</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">sshconfig</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">authorized_keys</span><span style="color: #800000;">'</span><span style="color: #000000;">]
}</span></pre>
</div>
<p>&nbsp;</p>
<h3>元参数</h3>
<p>Puppet提供了一些被称为"元参数(metaparameters)"的全局属性。元参数能够象其它属性一样使用，所有的资源类型都支持元参数。</p>
<p>在上面的例子中就使用了两个元参数：subscribe和require，都是用来定义资源之间关系的。可以在&ldquo;<a href="http://docs.puppetlabs.com/references/stable/metaparameter.html" target="_blank">Metaparameter Reference</a>&rdquo;所有元参数的列表。</p>
<p>&nbsp;</p>
<h3>资源默认值</h3>
<p>有时候需要为某类资源指定一个默认的参数。Puppet提供实现这样功能的语法，使用没有标题的大写资源首字母方式。例如，为所有的执行命令设置默认的path参数：</p>
<div class="cnblogs_code">
<pre>Exec { path =&gt; <span style="color: #800000;">'</span><span style="color: #800000;">/usr/bin:/bin:/usr/sbin:/sbin</span><span style="color: #800000;">'</span><span style="color: #000000;"> }
exec { </span><span style="color: #800000;">'</span><span style="color: #800000;">echo this works</span><span style="color: #800000;">'</span>: }</pre>
</div>
<p>第一行代码为exec资源提供一个默认的path参数。exec资源需要一个完整的限定路径或者能够通过path参数找到具体的可执行文件。资源定义时若有必要可以覆盖path的默认设置。这种情况下我们可以为所有的配置指定一个默认path参数，特殊情况时覆盖它就可以了。</p>
<p>Puppet默认值支持所有的资源类型。</p>
<p>默认值不是全局的 - 它只在当前范围和当前范围下面有效。如果你想为所有的配置设置默认值，唯一选择是在任意类的外面定义它们。</p>
<p>&nbsp;</p>
<h3 id="resource-collections">Resource Collections</h3>
<p>Aggregation is a powerful concept in Puppet. There are two ways to combine multiple resources into one easier to use resource: Classes and defined resource types. Classes model fundamental aspects of nodes, they say &ldquo;this node IS a webserver&rdquo; or &ldquo;this node is one of these&rdquo;. In programming terminology classes are singletons &mdash; they only ever get evaluated once per node.</p>
<p>Defined resource types, on the other hand, can be reused many times on the same node. They essentially work as if you created your own Puppet type just by using the language. They are meant to be evaluated multiple times, with different inputs each time. This means you can pass variable values into the defines.</p>
<p>Both classes and defines are very useful and you should make use of them when building out your puppet infrastructure.</p>
<p>&nbsp;</p>
<h3>类</h3>
<p>类定义以class关键字开始，内容放在花括号里面。下面是一个管理两个文件的简单类例子：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">class unix {
    </span><span style="color: #0000ff;">file</span><span style="color: #000000;"> {
        </span><span style="color: #800000;">'</span><span style="color: #800000;">/etc/passwd</span><span style="color: #800000;">'</span><span style="color: #000000;">:
            owner </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">,
            group </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">,
            mode  </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">0644</span><span style="color: #800000;">'</span><span style="color: #000000;">;
        </span><span style="color: #800000;">'</span><span style="color: #800000;">/etc/shadow</span><span style="color: #800000;">'</span><span style="color: #000000;">:
            owner </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">,
            group </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">,
            mode  </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">0440</span><span style="color: #800000;">'</span><span style="color: #000000;">;
    }
}</span></pre>
</div>
<p>这里使用了一种简便写法。下面的例子是相同的：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">class unix {
    </span><span style="color: #0000ff;">file</span> { <span style="color: #800000;">'</span><span style="color: #800000;">/etc/passwd</span><span style="color: #800000;">'</span><span style="color: #000000;">:
        owner </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">,
        group </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">,
        mode  </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">0644</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    }
    </span><span style="color: #0000ff;">file</span> { <span style="color: #800000;">'</span><span style="color: #800000;">/etc/shadow</span><span style="color: #800000;">'</span><span style="color: #000000;">:
        owner </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">,
        group </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">,
        mode  </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">0440</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    }
}</span></pre>
</div>
<div class="highlight">&nbsp;</div>
<div class="highlight">Puppet类支持简单的对象继承，因而可以扩展父类的功能而不需要将将父类全部复制粘贴。继承也允许子类覆盖父类的资源定义。Puppet类只能够从单一父类继承，不能够从多个父类继承，这被称为"单继承"。</div>
<div class="highlight">
<div class="cnblogs_code">
<pre><span style="color: #000000;">class freebsd inherits unix {
    File[</span><span style="color: #800000;">'</span><span style="color: #800000;">/etc/passwd</span><span style="color: #800000;">'</span>] { group =&gt; <span style="color: #800000;">'</span><span style="color: #800000;">wheel</span><span style="color: #800000;">'</span><span style="color: #000000;"> }
    File[</span><span style="color: #800000;">'</span><span style="color: #800000;">/etc/shadow</span><span style="color: #800000;">'</span>] { group =&gt; <span style="color: #800000;">'</span><span style="color: #800000;">wheel</span><span style="color: #800000;">'</span><span style="color: #000000;"> }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>如果子类需要取消父类的某些设置，可以这样处理：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">class freebsd inherits unix {
    File[</span><span style="color: #800000;">'</span><span style="color: #800000;">/etc/passwd</span><span style="color: #800000;">'</span>] { group =&gt;<span style="color: #000000;"> undef }
}</span></pre>
</div>
<p>执行时，代理节点会包含/etc/shadow文件，群组属性变为wheel；同时也会包含/etc/passwd文件，群组属性保持不变。</p>
<p>&nbsp;</p>
</div>
<div class="highlight">在Puppet 0.24或更高版本，可以使用多重覆盖：</div>
<div class="highlight">
<div class="cnblogs_code">
<pre><span style="color: #000000;">class freebsd inherits unix {
    File[</span><span style="color: #800000;">'</span><span style="color: #800000;">/etc/passwd</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">/etc/shadow</span><span style="color: #800000;">'</span>] { group =&gt; <span style="color: #800000;">'</span><span style="color: #800000;">wheel</span><span style="color: #800000;">'</span><span style="color: #000000;"> }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>在Puppet 0.23.1或更高版本，可以使用&lsquo;+&gt;&rsquo; (&lsquo;plusignment&rsquo;) 操作符为资源参数添加值。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">class apache {
    service { </span><span style="color: #800000;">'</span><span style="color: #800000;">apache</span><span style="color: #800000;">'</span>: require =&gt; Package[<span style="color: #800000;">'</span><span style="color: #800000;">httpd</span><span style="color: #800000;">'</span><span style="color: #000000;">] }
}

class apache</span>-<span style="color: #000000;">ssl inherits apache {
    Service[</span><span style="color: #800000;">'</span><span style="color: #800000;">apache</span><span style="color: #800000;">'</span>] { require +&gt; File[<span style="color: #800000;">'</span><span style="color: #800000;">apache.pem</span><span style="color: #800000;">'</span><span style="color: #000000;">] }
}</span></pre>
</div>
<p>这个例子使得apache服务除了需要httpd包外，还需要apache.pem文件。</p>
<p>&nbsp;</p>
<p>为了增加多重需求，还可以使用数组方式：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">class apache {
    service { </span><span style="color: #800000;">'</span><span style="color: #800000;">apache</span><span style="color: #800000;">'</span>: require =&gt; Package[<span style="color: #800000;">'</span><span style="color: #800000;">httpd</span><span style="color: #800000;">'</span><span style="color: #000000;">] }
}

class apache</span>-<span style="color: #000000;">ssl inherits apache {
    Service[</span><span style="color: #800000;">'</span><span style="color: #800000;">apache</span><span style="color: #800000;">'</span>] { require +&gt; [ File[<span style="color: #800000;">'</span><span style="color: #800000;">apache.pem</span><span style="color: #800000;">'</span>], File[<span style="color: #800000;">'</span><span style="color: #800000;">/etc/httpd/conf/httpd.conf</span><span style="color: #800000;">'</span><span style="color: #000000;">] ] }
}</span></pre>
</div>
<p>这个例子中require参数等同于：</p>
<div class="cnblogs_code">
<pre>[Package[<span style="color: #800000;">'</span><span style="color: #800000;">httpd</span><span style="color: #800000;">'</span>], File[<span style="color: #800000;">'</span><span style="color: #800000;">apache.pem</span><span style="color: #800000;">'</span>], File[<span style="color: #800000;">'</span><span style="color: #800000;">/etc/httpd/conf/httpd.conf</span><span style="color: #800000;">'</span>]]</pre>
</div>
<p>&nbsp;</p>
<p>同资源一样，类与类之间也可以使用'require'参数建立关联：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">class apache {
    service { </span><span style="color: #800000;">'</span><span style="color: #800000;">apache</span><span style="color: #800000;">'</span>: require =&gt; Class[<span style="color: #800000;">'</span><span style="color: #800000;">squid</span><span style="color: #800000;">'</span><span style="color: #000000;">] }
}</span></pre>
</div>
<p>这个例子使用require参数使得apache类依赖于squid类。</p>
<p>&nbsp;</p>
<p>在Puppet 0.24.6或更高版本，可以像下面一样指定多重关联：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">class apache {
    service { </span><span style="color: #800000;">'</span><span style="color: #800000;">apache</span><span style="color: #800000;">'</span><span style="color: #000000;">:
        require </span>=&gt; Class[<span style="color: #800000;">'</span><span style="color: #800000;">squid</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">xml</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">jakarta</span><span style="color: #800000;">'</span><span style="color: #000000;">],
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>require不会自动地定义类，也就是说它可以使用多次，且兼容参数类，但是必须确保require中的类已经定义过。</p>
<div class="highlight">&nbsp;</div>
<div class="highlight">Puppet还有一个<a href="http://docs.puppetlabs.com/references/latest/function.html#require" target="_blank">require</a>函数，在类定义时使用，可以自动创建类，使用方式同include函数。require函数与参数类一起使用时不是工作得很好。require函数大部分情况下是不需要的，类与类之间的依赖都可以用另外的方式实现。</div>
<div class="highlight">&nbsp;</div>
<div class="highlight">&nbsp;</div>
<h3 class="highlight">参数类</h3>
<div class="highlight">在Puppet 2.6.0或更高版本，允许传递参数给类定义。</div>
<div class="highlight">&nbsp;</div>
<div class="highlight">&nbsp;</div>
<div class="highlight">创建一个带参数的类：</div>
<div class="highlight">
<div class="cnblogs_code">
<pre><span style="color: #000000;">class apache($version) {
    ... class contents ...
}</span></pre>
</div>
<p>&nbsp;</p>
</div>
<div class="highlight">参数类不可以使用include函数创建，但可以使用替代语法：</div>
<div class="highlight">
<div class="cnblogs_code">
<pre><span style="color: #000000;">node webserver {
    class { </span><span style="color: #800000;">'</span><span style="color: #800000;">apache</span><span style="color: #800000;">'</span>: version =&gt; <span style="color: #800000;">'</span><span style="color: #800000;">1.3.13</span><span style="color: #800000;">'</span><span style="color: #000000;"> }
}</span></pre>
</div>
<p>&nbsp;</p>
</div>
<div class="highlight">也可以为参数设置默认值：</div>
<div class="highlight">
<div class="cnblogs_code">
<pre>class apache($version = <span style="color: #800000;">'</span><span style="color: #800000;">1.3.13</span><span style="color: #800000;">'</span>, $home = <span style="color: #800000;">'</span><span style="color: #800000;">/var/www</span><span style="color: #800000;">'</span><span style="color: #000000;">) {
    ... class contents ...
}</span></pre>
</div>
<p>&nbsp;</p>
<h3>运行阶段</h3>
<p>运行阶段功能是从Puppet 2.6.0被加入的。运行阶段为我们提供了另外一种控制Puppet资源执行顺序的方法。如果有大量的资源要执行，而且它们之间的执行顺序很重要，这将是一个很头痛的问题，尤其是明确地管理资源之间的关系。这种情况下，运行阶段让我们可以将一个类关联到某个运行阶段。Puppet确保了所有的运行阶段都能够以一个预期的顺序执行。</p>
<p>为了使用运行阶段功能，除了预先定义的主阶段外，其它的阶段都必须先定义才能使用。我们可以使用与定义资源关系相同的语法（例如&nbsp;&ldquo;-&gt;&rdquo;和&ldquo;&lt;-&ldquo;）为运行阶段指定执行顺序。运行阶段质之间关系确保了与之关联的类的执行顺序。</p>
<p>Puppet预定义了一个名为"main"的运行阶段，所有的类默认地都关联到该阶段，除非有明确的指定。在只有一个运行阶段情况下，Puppet的执行效果和以前版本是相同的，除非有明确地指定资源之间的关系，否则资源会以一种不可预期的方式被执行。</p>
<p>&nbsp;</p>
<p>运行阶段的定义方法：</p>
<div class="cnblogs_code">
<pre>stage { <span style="color: #800000;">'</span><span style="color: #800000;">first</span><span style="color: #800000;">'</span>: before =&gt; Stage[<span style="color: #800000;">'</span><span style="color: #800000;">main</span><span style="color: #800000;">'</span><span style="color: #000000;">] }
stage { </span><span style="color: #800000;">'</span><span style="color: #800000;">last</span><span style="color: #800000;">'</span>: require =&gt; Stage[<span style="color: #800000;">'</span><span style="color: #800000;">main</span><span style="color: #800000;">'</span>] }</pre>
</div>
<p>所有关联到first阶段的类都会在关联到main阶段的类之前被执行。所有关联到last阶段的类都会在关联到main阶段的类之后被执行。</p>
<p>&nbsp;</p>
<p>运行阶段被定义后，可以使用"stage"参数关联一个类都某个阶段：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">class {
    </span><span style="color: #800000;">'</span><span style="color: #800000;">apt-keys</span><span style="color: #800000;">'</span>: stage =&gt;<span style="color: #000000;"> first;
    </span><span style="color: #800000;">'</span><span style="color: #800000;">sendmail</span><span style="color: #800000;">'</span>: stage =&gt;<span style="color: #000000;"> main;
    </span><span style="color: #800000;">'</span><span style="color: #800000;">apache</span><span style="color: #800000;">'</span>:   stage =&gt; <span style="color: #0000ff;">last</span><span style="color: #000000;">;
}</span></pre>
</div>
<p>关联apt-keys类的所有资源到first阶段，关联sendmain类的所有资源到main阶段，关联apache类的所有资源到last阶段。这段简短的定义确保了apt-keys类的所有资源都会在sendmain类的所有资源之前执行，apache类的所有资源都会在sendmain类的所有资源之后执行。</p>
<p>&nbsp;</p>
</div>
<h3 class="highlight">资源类型(Defined Resource Types)</h3>
<div class="highlight">资源类型与类使用相同的格式，区别是以define关键字开头(不是class)，支持参数但不支持继承。假设我们要在同一电脑上创建多个源代码仓库，这种情况下就可以定义一个资源类型，而不是类：</div>
<div class="highlight">&nbsp;
<div class="cnblogs_code">
<pre><span style="color: #000000;">define svn_repo($path) {
    exec { </span><span style="color: #800000;">"</span><span style="color: #800000;">/usr/bin/svnadmin create ${path}/${title}</span><span style="color: #800000;">"</span><span style="color: #000000;">:
        unless </span>=&gt; <span style="color: #800000;">"</span><span style="color: #800000;">/bin/test -d ${path}</span><span style="color: #800000;">"</span><span style="color: #000000;">,
    }
}

svn_repo { </span><span style="color: #800000;">'</span><span style="color: #800000;">puppet_repo</span><span style="color: #800000;">'</span>: path =&gt; <span style="color: #800000;">'</span><span style="color: #800000;">/var/svn_puppet</span><span style="color: #800000;">'</span><span style="color: #000000;"> }
svn_repo { </span><span style="color: #800000;">'</span><span style="color: #800000;">other_repo</span><span style="color: #800000;">'</span>:  path =&gt; <span style="color: #800000;">'</span><span style="color: #800000;">/var/svn_other</span><span style="color: #800000;">'</span> }</pre>
</div>
<p>&nbsp;</p>
<p>为资源类型创建资源时，参数($path)以资源属性的方式(<span>path =&gt; '/var/svn_puppet</span>)使用，同时在资源类型的内部也可以作为变量使用。参数可以使用等号(=)设置默认值，这样当为资源类型创建资源时就可以不需要强制指定。</p>
<p>&nbsp;</p>
<p>资源类型可以使用一些内置的变量，例如$name和$title，当资源被创建时这两个变量被设置成资源的标题属性。在Puppet 2.6.5或更高版本，$name和$title变量也可以作为参数的默认值：</p>
<div class="cnblogs_code">
<pre>define svn_repo($path = <span style="color: #800000;">"</span><span style="color: #800000;">/var/${name}</span><span style="color: #800000;">"</span>) {...}</pre>
</div>
<p>&nbsp;</p>
<p>创建资源时的参数在资源类型内部都可以作为变量使用：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">define svn_repo($path) {
    exec { </span><span style="color: #800000;">"</span><span style="color: #800000;">create_repo_${name}</span><span style="color: #800000;">"</span><span style="color: #000000;">:
        command </span>=&gt; <span style="color: #800000;">"</span><span style="color: #800000;">/usr/bin/svnadmin create ${path}/${title}</span><span style="color: #800000;">"</span><span style="color: #000000;">,
        unless  </span>=&gt; <span style="color: #800000;">"</span><span style="color: #800000;">/bin/test -d ${path}</span><span style="color: #800000;">"</span><span style="color: #000000;">,
    }
    </span><span style="color: #0000ff;">if</span><span style="color: #000000;"> $require {
        Exec[</span><span style="color: #800000;">"</span><span style="color: #800000;">create_repo_${name}</span><span style="color: #800000;">"</span><span style="color: #000000;">] {
            require </span>+&gt;<span style="color: #000000;"> $require,
        }
    }
}

svn_repo { </span><span style="color: #800000;">'</span><span style="color: #800000;">puppet</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    path    </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">/var/svn</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    require </span>=&gt; Package[<span style="color: #800000;">'</span><span style="color: #800000;">subversion</span><span style="color: #800000;">'</span><span style="color: #000000;">],
}</span></pre>
</div>
<p>这不是一个很专业的例子，大多数时候我们都知道subversion还需要svn签出，但它演示了require的用法和其它参数做为变量的使用。</p>
<p>&nbsp;</p>
<p>资源类型象类一样在名称里面可以使用命名空间分隔符(::)。当引用一个资源类型实例时，必须大写所有类型名称的手字母(例如：Apache::Vhost['wordpress'])。</p>
<p>&nbsp;</p>
<h3>类 vs. 资源类型</h3>
<p>类和资源类型定义方式很相似，但使用方法却很不同。</p>
<p>资源类型在同一主机可以重用，允许存在多个实例。Defined types are used to define reusable objects which will have multiple instances on a given host, so they cannot include any resources that will only have one instance. For instance, multiple uses of the same define cannot create the same file.</p>
<p>另一方面，类确保了它必定是单实例的 - 可以包含它们很多次，但都是指向同一个实例。</p>
<p>通常，服务会被定义成一个类，服务包、配置文件和守护进程都放在一起，因为同一主机大多数情况只有服务的一个实例。</p>
<p>资源类型用来管理诸如虚拟主机类似可以有多个的资源，或者用来包装一些重复的定义以减少输入。</p>
<p>&nbsp;</p>
<h3>模块</h3>
<p>可以(强烈建议)将很多的类，资源类型和资源定义封装在一起作为一个模块使用。模块是一种可以共享(portable)的配置信息集合，例如，一个模块可以包含配置Postfix或Apache服务所需要的全部资源。参阅"<a href="http://docs.puppetlabs.com/puppet/2.7/reference/modules_fundamentals.html" target="_blank">模块</a>"可以获取更详细的信息。</p>
<p>&nbsp;</p>
<p>链接资源</p>
<p>从Puppet 2.6.0开始，资源之间可以通过关系定义从而将它们链接在一起。</p>
<p>&nbsp;</p>
<p>按照下面的方式定义"before"关系：</p>
<div class="cnblogs_code">
<pre>File[<span style="color: #800000;">'</span><span style="color: #800000;">/etc/ntp.conf</span><span style="color: #800000;">'</span>] -&gt; Service[<span style="color: #800000;">'</span><span style="color: #800000;">ntpd</span><span style="color: #800000;">'</span>]</pre>
</div>
<p>要求ntp配置文件必须在ntpd服务之前被执行。</p>
<p>&nbsp;</p>
<p>按照下面的方式定义"notify"关系：</p>
<div class="cnblogs_code">
<pre>File[<span style="color: #800000;">'</span><span style="color: #800000;">/etc/ntp.conf</span><span style="color: #800000;">'</span>] ~&gt; Service[<span style="color: #800000;">'</span><span style="color: #800000;">ntpd</span><span style="color: #800000;">'</span>]</pre>
</div>
<p>要求ntp配置文件必须在ntpd服务之前被执行，同时ntpd服务改变时也通知ntp配置文件。</p>
<p>&nbsp;</p>
<p>可以在同一行指定多重关系，从而形成关系链：</p>
<div class="cnblogs_code">
<pre>Package[<span style="color: #800000;">'</span><span style="color: #800000;">ntp</span><span style="color: #800000;">'</span>] -&gt; File[<span style="color: #800000;">'</span><span style="color: #800000;">/etc/ntp.conf</span><span style="color: #800000;">'</span>] -&gt; Service[<span style="color: #800000;">'</span><span style="color: #800000;">ntpd</span><span style="color: #800000;">'</span>]</pre>
</div>
<p>首先执行ntp包，然后执行ntp配置文件，最后执行ntpd服务。</p>
<p>&nbsp;</p>
<p>有时也不需要所有的箭头都指向同一方向：&nbsp;</p>
<div class="cnblogs_code">
<pre>File[<span style="color: #800000;">'</span><span style="color: #800000;">/etc/ntp.conf</span><span style="color: #800000;">'</span>] -&gt; Service[<span style="color: #800000;">'</span><span style="color: #800000;">ntpd</span><span style="color: #800000;">'</span>] &lt;- Package[<span style="color: #800000;">'</span><span style="color: #800000;">ntp</span><span style="color: #800000;">'</span>]</pre>
</div>
<p>执行完ntp包和ntp配置文件后再执行ntpd服务。注意，使用这种语法定义关系必须是在相邻资源之间。例如，ntp包和ntp配置文件之间互相没有直接关系，Puppet有可能在执行ntp包之前就先执行ntp配置文件，这不是我们所期望的结果。这种语法提高了一些代码的可读性。</p>
<p>&nbsp;</p>
<p>也可以在资源定义时指定关系，上面的例子可以修改成：</p>
<div class="cnblogs_code">
<pre>package { <span style="color: #800000;">'</span><span style="color: #800000;">ntp</span><span style="color: #800000;">'</span>: } -&gt; <span style="color: #0000ff;">file</span> { <span style="color: #800000;">'</span><span style="color: #800000;">/etc/ntp.conf</span><span style="color: #800000;">'</span>: }</pre>
</div>
<p>确保在执行ntp配置文件之前先执行ntp包。</p>
<p>&nbsp;</p>
<p>But wait! There&rsquo;s more! You can also specify a collection on either side of the relationship marker:</p>
<div class="highlight">
<pre><code class="ruby">    <span class="n">yumrepo</span> <span class="p">{</span> <span class="s1">'localyumrepo'</span><span class="p">:</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span><span class="n">.</span> <span class="p">}</span>
    <span class="n">package</span> <span class="p">{</span> <span class="s1">'ntp'</span><span class="p">:</span> <span class="n">provider</span> <span class="o">=&gt;</span> <span class="n">yum</span><span class="p">,</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span> <span class="p">}</span>
    <span class="no">Yumrepo</span> <span class="o">&lt;|</span> <span class="o">|&gt;</span> <span class="o">-&gt;</span> <span class="no">Package</span> <span class="o">&lt;|</span> <span class="n">provider</span> <span class="o">==</span> <span class="n">yum</span> <span class="o">|&gt;</span>
</code></pre>
</div>
<p>This manages all yum repository resources before managing all package resources that explicitly specify the yum provider. (Note that it will not work for package resources that don&rsquo;t specify a provider but end up using Yum &mdash; since this relationship is created during catalog compilation, it can only act on attributes visible to the parser, not properties that must be read from the target system.)</p>
<p>This, finally, provides easy many to many relationships in Puppet, but it also opens the door to massive dependency cycles. This last feature is a very powerful stick, and you can considerably hurt yourself with it. In particular, watch out when using virtual resources, as the collection operator realizes resources as a side-effect.</p>
<p>&nbsp;</p>
<h3>节点</h3>
<p>理解了资源、类、资源类型和模块，就已经学会了Puppet的大部分内容，剩下的就是节点了。</p>
<p>节点定义也象类定义一样，支持继承。Puppet服务器包含一个节点定义列表，当一个节点（执行Puppet客户端的主机）连接到Puppet主进程，就按照它的名字在列表中查找。找到的节点信息被执行，然后发送给节点主机(Puppet客户端）.</p>
<p>节点名字可以是短的主机名，也可以是完整的限定域名(full qualified domain name,FQDN). 有些名字，特别是FQDN，必须要用引号包含起来，最好的方式是所有名字都引起来。例如：</p>
<div class="cnblogs_code">
<pre>node <span style="color: #800000;">'</span><span style="color: #800000;">www.testing.com</span><span style="color: #800000;">'</span><span style="color: #000000;"> {
    include common
    include apache, squid
}</span></pre>
</div>
<p>上面的代码定义了一个名为"www.testing.com"的节点，包含common, apache和squid类。</p>
<p>&nbsp;</p>
<p>也可以用逗号分割多个节点，为它们指定相同的配置：</p>
<div class="cnblogs_code">
<pre>node <span style="color: #800000;">'</span><span style="color: #800000;">www.testing.com</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">www2.testing.com</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">www3.testing.com</span><span style="color: #800000;">'</span><span style="color: #000000;"> {
    include common
    include apache, squid
}</span></pre>
</div>
<p>上面的代码定义了三个相同配置的节点：&nbsp;<code>www.testing.com</code>，<code>www2.testing.com和</code><code>www3.testing.com。</code></p>
<p>&nbsp;</p>
<h3>使用正则表达式匹配节点</h3>
<p>从Puppet 0.25.0或更高版本，节点可以使用正则表达式进行匹配。例如：</p>
<div class="cnblogs_code">
<pre>node /^www\d+$/<span style="color: #000000;"> {
    include common
}</span></pre>
</div>
<p>上面的代码匹配所有名称以www开头，后面有一个或多个数字的主机。</p>
<p>&nbsp;</p>
<p>另外一个例子：</p>
<div class="cnblogs_code">
<pre>node /^(foo|bar)\.testing\.com$/<span style="color: #000000;"> {
    include common
}</span></pre>
</div>
<p>上面的代码匹配test.com网域中名称为foo或bar的主机。</p>
<p>&nbsp;</p>
<p>如果同一个配置文件中，与当前连接客户端匹配的有使用主机名的节点定义，还有多个使用正则表达式的节点定义，Puppet会如何处理呢？</p>
<ul>
<li>如果存在使用主机名的节点定义，它会被优先使用。</li>
<li>否则，执行第一个匹配的正则表达式节点定义。</li>
</ul>
<p>&nbsp;</p>
<h3>节点继承</h3>
<p>节点支持受限的继承。和类一样，节点只允许单继承：</p>
<div class="cnblogs_code">
<pre>node <span style="color: #800000;">'</span><span style="color: #800000;">www2.testing.com</span><span style="color: #800000;">'</span> inherits <span style="color: #800000;">'</span><span style="color: #800000;">www.testing.com</span><span style="color: #800000;">'</span><span style="color: #000000;"> {
    include loadbalancer
}</span></pre>
</div>
<p>www2.testing.com节点继承了www.testing.com节点的所有配置，另外还包含loadbalancer类。</p>
<p>&nbsp;</p>
<h3>默认节点</h3>
<p>如果创建一个名为default的节点，它将作为默认配置被其它找不到匹配的所有节点使用。</p>
<h4 id="matching-nodes-with-regular-expressions">&nbsp;</h4>
<h3>外部节点</h3>
<p>有时候我们也许已经拥有了一些主机，它们正担负着一定的任务，例如LDAP，版本控制，或者数据库。这时候我们需要传递一些变量给这些节点。</p>
<p>这个时候，就需要在节点定义的时候编写一些"<a href="http://docs.puppetlabs.com/guides/external_nodes.html" target="_blank">外部节点</a>"脚本。更多信息参阅相关章节。</p>
<p>&nbsp;</p>
<p>我们已经讲述了诸如排序和分组这样的特性，现在来学习一些更多的内容。</p>
<p>Puppet不是一门编程语言，它以模型的方式描述我们的IT架构。这就是我们要做到全部事情，避免了要写大量的编程代码。</p>
<p>&nbsp;</p>
<h3>引号</h3>
<p>大部分时候，不需要用引号将字符串引起来。任何以字母开头的字母数字字符串（连字符也是允许的）都可以省略引号。</p>
<p>&nbsp;</p>
<h3>变量插入</h3>
<p>到目前为止，我们在自定义资源类型中用到了变量。如果要在字符串中使用这些变量，必须使用双引号，不能用单引号。单引号字符串不会解析其中的变量(interpolation)，双引号可以。字符串中的变量也可以使用{}括起来，这样子更容易理解：</p>
<div class="cnblogs_code">
<pre>$value = <span style="color: #800000;">"</span><span style="color: #800000;">${one}${two}</span><span style="color: #800000;">"</span></pre>
</div>
<p>&nbsp;</p>
<p>双引号字符串中的引号("或')和美元符号($)有特殊的意义，若要把它们放到双引号字符串中，必须在前面加转义字符(\)。如果要将转义字符(\)放到双引号中，需要这样用：\\.</p>
<p>单引号字符串只支持两种转义序列：单引号(\')和反斜杠(\\)。除此之外，单引号里面的任何字符都可以直接处理。</p>
<p>建议不需要变量插入的字符串都使用单引号，需要使用变量插入的时候才使用双引号。"<a href="http://docs.puppetlabs.com/guides/style_guide.html#quoting">Style Guide</a>"会详细的讨论这些，包含例子。</p>
<p>&nbsp;</p>
<h3>大写</h3>
<p>资源大写有三种主要使用方式：</p>
<p>引用：当需要引用一个已经定义的资源，通常是为了依赖另外一个资源，我们就必须大写资源名：</p>
<div class="cnblogs_code">
<pre>require =&gt; File[<span style="color: #800000;">'</span><span style="color: #800000;">sshdconfig</span><span style="color: #800000;">'</span>]</pre>
</div>
<p>继承：在一个资源子类中覆盖父类的定义，需要大写资源名。如果使用小写就会出现一个错误的结果。</p>
<p>设置默认值：使用没有标题的大写资源，实际上是为该类资源设置默认值。先前的例子就为需要执行的命令设置了默认的path。</p>
<p>&nbsp;</p>
<p>注意自定义资源类型中命名空间，需要大写所有部分，例如Apache::Vhost['wordpress']。</p>
<p>&nbsp;</p>
<h3>数组</h3>
<p>在前面的类和资源例子中有提到，Puppet在很多情况下都允许使用数组。数组的定义方式如下：</p>
<div class="cnblogs_code">
<pre>[ <span style="color: #800000;">'</span><span style="color: #800000;">one</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">two</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">three</span><span style="color: #800000;">'</span> ]</pre>
</div>
<p>&nbsp;</p>
<p>可以使用索引存取数组中的某个项目：</p>
<div class="cnblogs_code">
<pre>$foo = [ <span style="color: #800000;">'</span><span style="color: #800000;">one</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">two</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">three</span><span style="color: #800000;">'</span><span style="color: #000000;"> ]
notice $foo[</span><span style="color: #800080;">1</span>]</pre>
</div>
<p>&nbsp;</p>
<p>有几个属性成员，例如'host'中的'alias'，就可以接受数组作为它们的值。拥有多个别名的host资源象下面的这样：</p>
<div class="cnblogs_code">
<pre>host { <span style="color: #800000;">'</span><span style="color: #800000;">one.example.com</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    ensure </span>=&gt;<span style="color: #000000;"> present,
    alias  </span>=&gt; [ <span style="color: #800000;">'</span><span style="color: #800000;">satu</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">dua</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">tiga</span><span style="color: #800000;">'</span><span style="color: #000000;"> ],
    ip     </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">192.168.100.1</span><span style="color: #800000;">'</span><span style="color: #000000;">,
}</span></pre>
</div>
<p>这段代码会将主机'one.example.com'加入到主机列表，该主机拥有三个别名：'satu'，'dua'和'tiga'。</p>
<p>&nbsp;</p>
<p>如果一个资源依赖多个其它资源，也可以使用数组按下面的方式定义：</p>
<div class="cnblogs_code">
<pre>resource { <span style="color: #800000;">'</span><span style="color: #800000;">baz</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    require  </span>=&gt; [ Package[<span style="color: #800000;">'</span><span style="color: #800000;">foo</span><span style="color: #800000;">'</span>], File[<span style="color: #800000;">'</span><span style="color: #800000;">bar</span><span style="color: #800000;">'</span><span style="color: #000000;">] ],
}</span></pre>
</div>
<p>&nbsp;</p>
<p>另一个使用数组的例子是多次调用一个自定义资源类型，例如：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">define php::pear() {
    package { </span><span style="color: #800000;">"</span><span style="color: #800000;">php-${name}</span><span style="color: #800000;">"</span>: ensure =&gt;<span style="color: #000000;"> installed }
}

php::pear { [</span><span style="color: #800000;">'</span><span style="color: #800000;">ldap</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">mysql</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">ps</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">snmp</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">sqlite</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">tidy</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">xmlrpc</span><span style="color: #800000;">'</span>]: }</pre>
</div>
<p>&nbsp;</p>
<p>当然，上面的使用方法也适用于内置资源类型：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">file</span> { [ <span style="color: #800000;">'</span><span style="color: #800000;">foo</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">bar</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">foobar</span><span style="color: #800000;">'</span><span style="color: #000000;"> ]:
    owner </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    group </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">root</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    mode  </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">0600</span><span style="color: #800000;">'</span><span style="color: #000000;">,
}</span></pre>
</div>
<p>&nbsp;</p>
<h3>哈希</h3>
<p>从2.6.0开始，Puppet开始支持哈希功能。Puppet哈希定义类似Ruby：</p>
<div class="cnblogs_code">
<pre>{ key1 =&gt; val1, key2 =&gt; val2, ... }</pre>
</div>
<p>哈希键是字符串，但是值可以是任何可能的RHS值，例如函数调用，变量，等等。</p>
<p>&nbsp;</p>
<p>可以分配一个变量给哈希：</p>
<div class="cnblogs_code">
<pre>$myhash = { key1 =&gt; <span style="color: #800000;">'</span><span style="color: #800000;">myval</span><span style="color: #800000;">'</span>, key2 =&gt; $b }</pre>
</div>
<p>&nbsp;</p>
<p>递归的存取哈希成员（这也适用于数组）：&nbsp;</p>
<div class="cnblogs_code">
<pre>$myhash = { key =&gt; { subkey =&gt; <span style="color: #800000;">'</span><span style="color: #800000;">b</span><span style="color: #800000;">'</span><span style="color: #000000;"> }}
notice($myhash[key][subkey])</span></pre>
</div>
<p>&nbsp;</p>
<p>可以用哈希成员作为资源标题，或者参数的缺省定义，或者资源的参数。</p>
<p>&nbsp;</p>
<h3>变量</h3>
<p>Puppet也象大多数我们熟悉的编程语言一样支持变量。Puppet变量用美元符号($)标明：</p>
<div class="cnblogs_code">
<pre>$content = <span style="color: #800000;">'</span><span style="color: #800000;">some content\n</span><span style="color: #800000;">'</span>

<span style="color: #0000ff;">file</span> { <span style="color: #800000;">'</span><span style="color: #800000;">/tmp/testing</span><span style="color: #800000;">'</span>: content =&gt; $content }</pre>
</div>
<p>&nbsp;</p>
<p>Puppet语言是一门定义语言，意思是说它的范围和分配规则很多时候和通常的命令语言是不同的。主要的不同体现在一个范围内我们不能改变变量的值，因为那依赖与语句在文件中的顺序才能决定它的值。在定义语言中顺序是不重要的。</p>
<div class="cnblogs_code">
<pre>$user =<span style="color: #000000;"> root
</span><span style="color: #0000ff;">file</span> { <span style="color: #800000;">'</span><span style="color: #800000;">/etc/passwd</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    owner </span>=&gt;<span style="color: #000000;"> $user,
}

$user </span>=<span style="color: #000000;"> bin
</span><span style="color: #0000ff;">file</span> { <span style="color: #800000;">'</span><span style="color: #800000;">/bin</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    owner   </span>=&gt;<span style="color: #000000;"> $user,
    recurse </span>=&gt; <span style="color: #0000ff;">true</span><span style="color: #000000;">,
}</span></pre>
</div>
<p>&nbsp;</p>
<p>不能为变量重新赋值，替换的处理方式是使用内置条件：</p>
<div class="cnblogs_code">
<pre>$group = $operatingsystem ?<span style="color: #000000;"> {
    solaris </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">sysadmin</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    default </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">wheel</span><span style="color: #800000;">'</span><span style="color: #000000;">,
}</span></pre>
</div>
<p>&nbsp;</p>
<p>一个范围中，每个变量只能被赋值一次。当然，我们可以在非重叠范围为同一个变量赋另外的值。例如，设置顶级配置：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">node a {
    $setting </span>= <span style="color: #800000;">'</span><span style="color: #800000;">this</span><span style="color: #800000;">'</span><span style="color: #000000;">
    include class_using_setting
}

node b {
    $setting </span>= <span style="color: #800000;">'</span><span style="color: #800000;">that</span><span style="color: #800000;">'</span><span style="color: #000000;">
    include class_using_setting
}</span></pre>
</div>
<p>上面的例子，节点"a"和节点"b"有不同的范围，这不是为同一个变量重新赋值。</p>
<p>&nbsp;</p>
<h3>变量范围</h3>
<p>范围规定了变量在什么地方有效。Unlike early programming languages like BASIC, variables are only valid and accessible in certain places in a program. 同一个变量名在不同的范围，不是指向同一个值。</p>
<p>类和节点开始一个新范围。Puppet现在动态的定义范围，也就是说创建范围层次结构是依据代码执行的地方，而不是代码定义的地方。</p>
<p>&nbsp;</p>
<h4 id="variable-scope">Variable Scope</h4>
<p>Scoping may initially seem like a foreign concept, though in reality it is pretty simple. A scope defines where a variable is valid. Unlike early programming languages like BASIC, variables are only valid and accessible in certain places in a program. Using the same variable name in different parts of the language do not refer to the same value.</p>
<p>Classes and nodes introduce new scopes. Puppet is currently dynamically scoped, which means that scope hierarchies are created based on where the code is evaluated instead of where the code is defined.</p>
<p>For example:</p>
<div class="highlight">
<pre><code class="ruby">    <span class="vg">$test</span> <span class="o">=</span> <span class="s1">'top'</span>
    <span class="k">class</span> <span class="n">myclass</span> <span class="p">{</span>
      <span class="nb">exec</span> <span class="p">{</span> <span class="s2">"/bin/echo ${test}"</span><span class="p">:</span> <span class="n">logoutput</span> <span class="o">=&gt;</span> <span class="kp">true</span> <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">class</span> <span class="n">other</span> <span class="p">{</span>
      <span class="vg">$test</span> <span class="o">=</span> <span class="s1">'other'</span>
      <span class="kp">include</span> <span class="n">myclass</span>
    <span class="p">}</span>

    <span class="kp">include</span> <span class="n">other</span>
</code></pre>
</div>
<p>In this case, there&rsquo;s a top-level scope, a new scope for&nbsp;<code>other</code>, and the a scope below that for&nbsp;<code>myclass</code>. When this code is evaluated,&nbsp;<code>$test</code>&nbsp;evaluates to&nbsp;<code>other</code>, not&nbsp;<code>top</code>.</p>
<h4 id="qualified-variables">Qualified Variables</h4>
<p>Puppet supports qualification of variables inside a class. This allows you to use variables defined in other classes.</p>
<p>For example:</p>
<div class="highlight">
<pre><code class="ruby">    <span class="k">class</span> <span class="n">myclass</span> <span class="p">{</span>
      <span class="vg">$test</span> <span class="o">=</span> <span class="s1">'content'</span>
    <span class="p">}</span>

    <span class="k">class</span> <span class="n">anotherclass</span> <span class="p">{</span>
      <span class="vg">$other</span> <span class="o">=</span> <span class="vg">$myclass</span><span class="o">::</span><span class="nb">test</span>
    <span class="p">}</span>
</code></pre>
</div>
<p>In this example, the value of the&nbsp;<code>$other</code>&nbsp;variable evaluates to&nbsp;<code>content</code>. Qualified variables are read-only &mdash; you cannot set a variable&rsquo;s value from other class.</p>
<p>Variable qualification is dependent on the evaluation order of your classes. Class&nbsp;<code>myclass</code>&nbsp;must be evaluated before class&nbsp;<code>anotherclass</code>&nbsp;for variables to be set correctly.</p>
<h4 id="facts-as-variables">Facts as Variables</h4>
<p>In addition to user-defined variables, the facts generated by Facter are also available as variables. This allows values that you would see by running&nbsp;<code>facter</code>&nbsp;on a client system within Puppet manifests and also within Puppet templates. To use a fact as a variable prefix the name of the fact with&nbsp;<code>$</code>. For example, the value of the&nbsp;<code>operatingsystem</code>&nbsp;and&nbsp;<code>puppetversion</code>&nbsp;facts would be available as the variables<code>$operatingsystem</code>&nbsp;and&nbsp;<code>$puppetversion</code>.</p>
<h4 id="variable-expressions">Variable Expressions</h4>
<p>In Puppet 0.24.6 and later, arbitrary expressions can be assigned to variables, for example:</p>
<div class="highlight">
<pre><code class="ruby">    <span class="vg">$inch_to_cm</span> <span class="o">=</span> <span class="mi">2</span><span class="o">.</span><span class="mi">54</span>
    <span class="vg">$rack_length_cm</span> <span class="o">=</span> <span class="mi">19</span> <span class="o">*</span> <span class="vg">$inch_to_cm</span>
    <span class="vg">$gigabyte</span> <span class="o">=</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span>
    <span class="vg">$can_update</span> <span class="o">=</span> <span class="p">(</span><span class="vg">$ram_gb</span> <span class="o">*</span> <span class="vg">$gigabyte</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">24</span>
</code></pre>
</div>
<p>See the Expression section later on this page for further details of the expressions that are now available.</p>
<h4 id="appending-to-variables">Appending to Variables</h4>
<p>In Puppet 0.24.6 and later, values can be appended to array variables:</p>
<div class="highlight">
<pre><code class="ruby">    <span class="vg">$ssh_users</span> <span class="o">=</span> <span class="o">[</span> <span class="s1">'myself'</span><span class="p">,</span> <span class="s1">'someone'</span> <span class="o">]</span>

    <span class="k">class</span> <span class="nb">test</span> <span class="p">{</span>
      <span class="vg">$ssh_users</span> <span class="o">+=</span> <span class="o">[</span><span class="s1">'someone_else'</span><span class="o">]</span>
    <span class="p">}</span>
</code></pre>
</div>
<p>Here the&nbsp;<code>$ssh_users</code>&nbsp;variable contains an array with the elements&nbsp;<code>myself</code>&nbsp;and&nbsp;<code>someone</code>. Using the variable append syntax,&nbsp;<code>+=</code>, we added another element,&nbsp;<code>someone_else</code>&nbsp;to the array.</p>
<p>Please note, variables cannot be modified in the same scope because of the declarative nature of Puppet. As a result, $ssh_users contains the element &lsquo;someone_else&rsquo; only in the scope of class test and not outside scopes. Resources outside of this scope will &ldquo;see&rdquo; the original array containing only myself and someone.</p>
</div>
</div>]]></description></item><item><title>Puppet实验一：安装puppet</title><link>http://www.cnblogs.com/eastson/archive/2012/07/24/2605093.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 24 Jul 2012 00:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/24/2605093.html</guid><description><![CDATA[<p>安装puppet最方便的方式是使用EPEL软件源，因而在安装master和agent之前，请参考《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/07/18/2597166.html" target="_blank">配置EPEL软件源</a>》添加EPEL软件源。</p>
<p>&nbsp;</p>
<h3>安装master</h3>
<p>master环境：virtualbox虚拟机，操作系统为CentOS 6.2，机器名称为centos-server.s3lighting.com，IP地址为192.168.12.215。</p>
<p>&nbsp;</p>
<p>1. 使用yum方式安装puppet-master包：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ yum <span style="color: #0000ff;">install</span> puppet-server</pre>
</div>
<p>安装完成后使用chkconfig可以发现多出了两个服务：puppetmaster和puppet。</p>
<p>&nbsp;</p>
<p>2. 配置iptables防火墙。<span>原来的防火墙策略如下：</span></p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ iptables -L -n --line-<span style="color: #000000;">numbers
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination         
</span><span style="color: #800080;">1</span>    ACCEPT     all  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span><span style="color: #000000;">           state RELATED,ESTABLISHED 
</span><span style="color: #800080;">2</span>    ACCEPT     icmp --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           
<span style="color: #800080;">3</span>    ACCEPT     all  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           
<span style="color: #800080;">4</span>    ACCEPT     tcp  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           state NEW tcp dpt:<span style="color: #800080;">22</span> 
<span style="color: #800080;">5</span>    REJECT     all  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           reject-with icmp-host-<span style="color: #000000;">prohibited 

Chain FORWARD (policy ACCEPT)
num  target     prot opt source               destination         
</span><span style="color: #800080;">1</span>    REJECT     all  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           reject-with icmp-host-<span style="color: #000000;">prohibited 

Chain OUTPUT (policy ACCEPT)
num  target     prot opt source               destination  </span></pre>
</div>
<p>按照下面的方式开启puppet的8140端口：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ iptables -I INPUT <span style="color: #800080;">5</span> -p tcp -m tcp --dport <span style="color: #800080;">8140</span> -m state --state NEW -<span style="color: #000000;">j ACCEPT

[root@centos</span>-server ~<span style="color: #000000;">]$ service iptables save
iptables: Saving firewall rules to </span>/etc/sysconfig/<span style="color: #000000;">iptables:[  OK  ]

[root@centos</span>-server ~<span style="color: #000000;">]$ service iptables restart
iptables: Flushing firewall rules:                         [  OK  ]
iptables: Setting chains to policy ACCEPT: filter          [  OK  ]
iptables: Unloading modules:                               [  OK  ]
iptables: Applying firewall rules:                         [  OK  ]</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;3. 启动puppetmaster服务：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~<span style="color: #000000;">]$ chkconfig puppetmaster on
[root@centos</span>-server ~]$ service puppetmaster start</pre>
</div>
<p>&nbsp;</p>
<h3>安装agent</h3>
<p>agent环境：virtualbox虚拟机，操作系统为CentOS 6.2，机器名称为centos-client.s3lighting.com，IP地址为192.168.12.54。</p>
<p>&nbsp;</p>
<p>1. 使用yum方式安装puppet包：</p>
<div class="cnblogs_code">
<pre>[root@centos-client ~]$ yum <span>install</span> puppet</pre>
</div>
<p>安装完成后使用chkconfig可以发现多出了一个服务：puppet。&nbsp;</p>
<p>&nbsp;</p>
<p>2. 配置puppet server：</p>
<div class="cnblogs_code">
<pre>[root@centos-client etc]# <span style="color: #0000ff;">echo</span> <span style="color: #800000;">"</span><span style="color: #800000;">server = centos-server.s3lighting.com</span><span style="color: #800000;">"</span> &gt;&gt; /etc/puppet/puppet.conf</pre>
</div>
<p>&nbsp;</p>
<p>3. 在/etc/hosts中添加服务器地址：</p>
<div class="cnblogs_code">
<pre>[root@centos-client etc]# <span style="color: #0000ff;">echo</span> <span style="color: #800000;">"</span><span style="color: #800000;">192.168.12.215 centos-server centos-server.s3lighting.com</span><span style="color: #800000;">"</span> &gt;&gt; /etc/hosts</pre>
</div>
<p>&nbsp;</p>
<h3>服务器SSL认证</h3>
<p>每一个agent都需要通过master认证以后，才能从master获取配置信息。</p>
<p>&nbsp;</p>
<p>1. agent中发出请求：</p>
<div class="cnblogs_code">
<pre>[root@centos-client etc]# puppet agent --<span style="color: #000000;">test
</span><span style="color: #0000ff;">info</span>: Creating a new SSL key <span style="color: #0000ff;">for</span> centos-<span style="color: #000000;">client.s3lighting.com
warning: peer certificate won</span><span style="color: #800000;">'</span><span style="color: #800000;">t be verified in this SSL session</span>
<span style="color: #0000ff;">info</span>: Caching certificate <span style="color: #0000ff;">for</span><span style="color: #000000;"> ca
warning: peer certificate won</span><span style="color: #800000;">'</span><span style="color: #800000;">t be verified in this SSL session</span>
warning: peer certificate won<span style="color: #800000;">'</span><span style="color: #800000;">t be verified in this SSL session</span>
<span style="color: #0000ff;">info</span>: Creating a new SSL certificate request <span style="color: #0000ff;">for</span> centos-<span style="color: #000000;">client.s3lighting.com
</span><span style="color: #0000ff;">info</span>: Certificate Request fingerprint (md5): <span style="color: #800080;">92</span>:D8:<span style="color: #800080;">57</span>:A1:<span style="color: #800080;">83</span>:ED:F0:<span style="color: #800080;">30</span>:3C:<span style="color: #800080;">08</span>:<span style="color: #800080;">98</span>:6E:<span style="color: #800080;">41</span>:E7:1B:<span style="color: #800080;">03</span><span style="color: #000000;">
warning: peer certificate won</span><span style="color: #800000;">'</span><span style="color: #800000;">t be verified in this SSL session</span>
warning: peer certificate won<span style="color: #800000;">'</span><span style="color: #800000;">t be verified in this SSL session</span>
warning: peer certificate won<span style="color: #800000;">'</span><span style="color: #800000;">t be verified in this SSL session</span>
Exiting; no certificate found and waitforcert is disabled</pre>
</div>
<p>&nbsp;</p>
<p>2. master查询收到的认证请求：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~<span style="color: #000000;">]$ puppet cert list
centos</span>-client.s3lighting.com (<span style="color: #800080;">92</span>:D8:<span style="color: #800080;">57</span>:A1:<span style="color: #800080;">83</span>:ED:F0:<span style="color: #800080;">30</span>:3C:<span style="color: #800080;">08</span>:<span style="color: #800080;">98</span>:6E:<span style="color: #800080;">41</span>:E7:1B:<span style="color: #800080;">03</span>)</pre>
</div>
<p>使用sign命令认证收到的请求：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ puppet cert sign centos-<span style="color: #000000;">client.s3lighting.com
notice: Signed certificate request </span><span style="color: #0000ff;">for</span> centos-<span style="color: #000000;">client.s3lighting.com
notice: Removing </span><span style="color: #0000ff;">file</span> Puppet::SSL::CertificateRequest centos-client.s3lighting.com at <span style="color: #800000;">'</span><span style="color: #800000;">/var/lib/puppet/ssl/ca/requests/centos-client.s3lighting.com.pem</span><span style="color: #800000;">'</span></pre>
</div>
<p>&nbsp;</p>
<p>3. agent再次发出请求命令：</p>
<div class="cnblogs_code">
<pre>[root@centos-client puppet]# puppet agent --<span style="color: #000000;">test
warning: peer certificate won</span><span style="color: #800000;">'</span><span style="color: #800000;">t be verified in this SSL session</span>
<span style="color: #0000ff;">info</span>: Caching certificate <span style="color: #0000ff;">for</span> centos-<span style="color: #000000;">client.s3lighting.com
</span><span style="color: #0000ff;">info</span>: Caching certificate_revocation_list <span style="color: #0000ff;">for</span><span style="color: #000000;"> ca
</span><span style="color: #0000ff;">info</span>: Caching catalog <span style="color: #0000ff;">for</span> centos-<span style="color: #000000;">client.s3lighting.com
</span><span style="color: #0000ff;">info</span>: Applying configuration version <span style="color: #800000;">'</span><span style="color: #800000;">1343033559</span><span style="color: #800000;">'</span>
<span style="color: #0000ff;">info</span>: Creating state <span style="color: #0000ff;">file</span> /var/lib/puppet/state/<span style="color: #000000;">state.yaml
notice: Finished catalog run </span><span style="color: #0000ff;">in</span> <span style="color: #800080;">0.01</span> seconds</pre>
</div>
<p>OK，agent可以从master成功地获取配置信息了。</p>
<p>&nbsp;</p>
<h3>简单的测试</h3>
<p>1. 在master创建文件/etc/puppet/manifests/site.pp，内容如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">file</span> {<span style="color: #800000;">'</span><span style="color: #800000;">testfile</span><span style="color: #800000;">'</span><span style="color: #000000;">:
    path   </span>=&gt; <span style="color: #800000;">'</span><span style="color: #800000;">/tmp/testfile</span><span style="color: #800000;">'</span><span style="color: #000000;">,
    ensure </span>=&gt;<span style="color: #000000;"> present,
    mode   </span>=&gt; <span style="color: #800080;">0640</span><span style="color: #000000;">,
    content</span>=&gt; <span style="color: #800000;">"</span><span style="color: #800000;">I'm a test file.</span><span style="color: #800000;">"</span><span style="color: #000000;">
}</span></pre>
</div>
<p>&nbsp;</p>
<p>2. 在agent执行配置请求：</p>
<div class="cnblogs_code">
<pre>[root@centos-client ~]# puppet agent --<span style="color: #000000;">test
</span><span style="color: #0000ff;">info</span>: Caching catalog <span style="color: #0000ff;">for</span> centos-<span style="color: #000000;">client.s3lighting.com
</span><span style="color: #0000ff;">info</span>: Applying configuration version <span style="color: #800000;">'</span><span style="color: #800000;">1343091079</span><span style="color: #800000;">'</span><span style="color: #000000;">
notice: </span>/Stage[main]<span style="color: #008000;">//</span><span style="color: #008000;">File[testfile]/ensure: created</span>
notice: Finished catalog run <span style="color: #0000ff;">in</span> <span style="color: #800080;">0.02</span> seconds</pre>
</div>
<p>可以看到testfile被创建了。</p>
<p>&nbsp;</p>
<p>原文参考：<a href="http://docs.puppetlabs.com/guides/installation.html" target="_blank">http://docs.puppetlabs.com/guides/installation.html</a></p>]]></description></item><item><title>Python实现ssh批量登录并执行命令【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/07/21/2602123.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 21 Jul 2012 03:35:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/21/2602123.html</guid><description><![CDATA[<p>局域网内有一百多台电脑，全部都是linux操作系统，所有电脑配置相同，系统完全相同（包括用户名和密码），ip地址是自动分配的。现在有个任务是在这些电脑上执行某些命令，者说进行某些操作，比如安装某些软件，拷贝某些文件，批量关机等。如果一台一台得手工去操作，费时又费力，如果要进行多个操 作就更麻烦啦。</p>
<p><br />先让我们回忆一下ssh远程登录的过程：首先执行命令 ssh username@192.168.1.x ，第一次登录的时候系统会提示我们是否要继续连接，我们要输入&ldquo;yes&rdquo;，然后等一段时间后系统提示我们输入密码，正确地输入密码之后我们就能登录到远程计算机，然后我们就能执行命令了。我们注意到这里面有两次人机交互，一次是输入&lsquo;yes&rsquo;，另一次是输入密码。就是因为有两次交互我们不能简单的用某些命令去完成我们的任务。我们可以考虑把人机交互变成自动交互，python的pexpect模块可以帮我们实现自动交互。下面这段代码是用pexpect实 现自动交互登录并执行命令的函数：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;">!/usr/bin/env python </span><span style="color: #008000;">
#</span><span style="color: #008000;"> -*- coding: utf-8 -*- </span>
     
<span style="color: #0000ff;">import</span><span style="color: #000000;"> pexpect 
     
</span><span style="color: #0000ff;">def</span><span style="color: #000000;"> ssh_cmd(ip, passwd, cmd): 
    ret </span>= -1<span style="color: #000000;"> 
    ssh </span>= pexpect.spawn(<span style="color: #800000;">'</span><span style="color: #800000;">ssh root@%s "%s"</span><span style="color: #800000;">'</span> %<span style="color: #000000;"> (ip, cmd)) 
    </span><span style="color: #0000ff;">try</span><span style="color: #000000;">: 
       i </span>= ssh.expect([<span style="color: #800000;">'</span><span style="color: #800000;">password:</span><span style="color: #800000;">'</span>, <span style="color: #800000;">'</span><span style="color: #800000;">continue connecting (yes/no)?</span><span style="color: #800000;">'</span>], timeout=5<span style="color: #000000;">) 
       </span><span style="color: #0000ff;">if</span> i ==<span style="color: #000000;"> 0 : 
          ssh.sendline(passwd) 
       </span><span style="color: #0000ff;">elif</span> i == 1<span style="color: #000000;">: 
          ssh.sendline(</span><span style="color: #800000;">'</span><span style="color: #800000;">yes\n</span><span style="color: #800000;">'</span><span style="color: #000000;">) 
          ssh.expect(</span><span style="color: #800000;">'</span><span style="color: #800000;">password: </span><span style="color: #800000;">'</span><span style="color: #000000;">) 
          ssh.sendline(passwd) 
          ssh.sendline(cmd) 
          r </span>=<span style="color: #000000;"> ssh.read() 
          </span><span style="color: #0000ff;">print</span><span style="color: #000000;"> r 
          ret </span>=<span style="color: #000000;"> 0 
    </span><span style="color: #0000ff;">except</span><span style="color: #000000;"> pexpect.EOF: 
       </span><span style="color: #0000ff;">print</span> <span style="color: #800000;">"</span><span style="color: #800000;">EOF</span><span style="color: #800000;">"</span><span style="color: #000000;"> 
       ssh.close() 
       ret </span>= -1 
    <span style="color: #0000ff;">except</span><span style="color: #000000;"> pexpect.TIMEOUT: 
       </span><span style="color: #0000ff;">print</span> <span style="color: #800000;">"</span><span style="color: #800000;">TIMEOUT</span><span style="color: #800000;">"</span><span style="color: #000000;"> 
       ssh.close() 
       ret </span>= -2 
    <span style="color: #0000ff;">return</span> ret</pre>
</div>
<p>&nbsp;</p>
<p>利用pexpect模块我们可以做很多事情，由于他提供了自动交互功能，因此我们可以实现ftp，telnet，ssh，scp等的自动登录，还是比较实用的。根据上面的代码相信读者已经知道怎么实现了（python就是那么简单！）。</p>
<p>&nbsp;</p>
<p>用上面的代码去完成任务还是比较费时间的，因为程序要等待自动交互出现，另外ubuntu用ssh连接就是比较慢，要进行一系列的验证，这样才体现出ssh的安全。我们要提高效率，在最短的时间内完成。后来我发现了python里面的paramiko模块，用这个实现ssh登录更加简单。看下面的代码：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;">-*- coding: utf-8 -*-  </span><span style="color: #008000;">
#</span><span style="color: #008000;">!/usr/bin/python   </span>
<span style="color: #0000ff;">import</span><span style="color: #000000;"> paramiko  
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> threading  
</span><span style="color: #0000ff;">def</span><span style="color: #000000;"> ssh2(ip,username,passwd,cmd):  
    </span><span style="color: #0000ff;">try</span><span style="color: #000000;">:  
        ssh </span>=<span style="color: #000000;"> paramiko.SSHClient()  
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())  
        ssh.connect(ip,</span>22,username,passwd,timeout=5<span style="color: #000000;">)  
        </span><span style="color: #0000ff;">for</span> m <span style="color: #0000ff;">in</span><span style="color: #000000;"> cmd:  
            stdin, stdout, stderr </span>=<span style="color: #000000;"> ssh.exec_command(m)  
</span><span style="color: #008000;">#</span><span style="color: #008000;">           stdin.write("Y")   #简单交互，输入 &lsquo;Y&rsquo;   </span>
            out =<span style="color: #000000;"> stdout.readlines()  
            </span><span style="color: #008000;">#</span><span style="color: #008000;">屏幕输出  </span>
            <span style="color: #0000ff;">for</span> o <span style="color: #0000ff;">in</span><span style="color: #000000;"> out:  
                </span><span style="color: #0000ff;">print</span><span style="color: #000000;"> o,  
        </span><span style="color: #0000ff;">print</span> <span style="color: #800000;">'</span><span style="color: #800000;">%s\tOK\n</span><span style="color: #800000;">'</span>%<span style="color: #000000;">(ip)  
        ssh.close()  
    </span><span style="color: #0000ff;">except</span><span style="color: #000000;"> :  
        </span><span style="color: #0000ff;">print</span> <span style="color: #800000;">'</span><span style="color: #800000;">%s\tError\n</span><span style="color: #800000;">'</span>%<span style="color: #000000;">(ip)  
</span><span style="color: #0000ff;">if</span> <span style="color: #800080;">__name__</span>==<span style="color: #800000;">'</span><span style="color: #800000;">__main__</span><span style="color: #800000;">'</span><span style="color: #000000;">:  
    cmd </span>= [<span style="color: #800000;">'</span><span style="color: #800000;">cal</span><span style="color: #800000;">'</span>,<span style="color: #800000;">'</span><span style="color: #800000;">echo hello!</span><span style="color: #800000;">'</span>]<span style="color: #008000;">#</span><span style="color: #008000;">你要执行的命令列表  </span>
    username = <span style="color: #800000;">""</span>  <span style="color: #008000;">#</span><span style="color: #008000;">用户名  </span>
    passwd = <span style="color: #800000;">""</span>    <span style="color: #008000;">#</span><span style="color: #008000;">密码  </span>
    threads = []   <span style="color: #008000;">#</span><span style="color: #008000;">多线程  </span>
    <span style="color: #0000ff;">print</span> <span style="color: #800000;">"</span><span style="color: #800000;">Begin......</span><span style="color: #800000;">"</span> 
    <span style="color: #0000ff;">for</span> i <span style="color: #0000ff;">in</span> range(1,254<span style="color: #000000;">):  
        ip </span>= <span style="color: #800000;">'</span><span style="color: #800000;">192.168.1.</span><span style="color: #800000;">'</span>+<span style="color: #000000;">str(i)  
        a</span>=threading.Thread(target=ssh2,args=<span style="color: #000000;">(ip,username,passwd,cmd))   
        a.start() </span></pre>
</div>
<p>&nbsp;</p>
<p>上面的程序还是有些技巧的：</p>
<ol>
<li>利用多线程，同时发出登录请求，同时去连接电脑，这样速度快很多，我试了一下，如果不用多线程，直接一个一个挨着执行的话，大约5～10秒钟才 能对一台电脑操作完，具体时间要根据命令的来决定，如果是软件安装或者卸载时间要更长一些。这样下来怎么也要一二十分钟，用多线程后就快多了，所有的命令 执行完用了不到2分钟！</li>
<li>最好用root用户登录，因为安装或者卸载软件的时候如果用普通用户又会提示输入密码，这样又多了一次交互，处理起来就比较麻烦！安装软件时 apt-get install xxx 最好加上&ldquo;-y&rdquo;参数，因为有时安装或删除软件时提示是否继续安装或卸载，这又是一次自动交互！加上那个参数后就没有人机交互了。</li>
<li>循环时循环所有ip，因为计算机的ip是路由器自动分配的，保险起见，最好全部都执行，保证没有遗漏的主机。</li>
<li>远端执行命令时如果有交互，可以这样用 stdin.write("Y")来完成交互，&ldquo;Y&rdquo;就是输入&ldquo;Y&rdquo;。</li>
<li>把所有的命令放到一个列表里面，遍历列表可以依次执行列表里面的命令。</li>
<li>为了更好的进行控制，最好在电脑上提前把root用户打开，装好ssh服务器并让其开机自动执行。</li>
</ol>
<p>&nbsp;</p>
<p>原文地址：<a href="http://blog.chinaunix.net/uid-26354188-id-3279846.html" target="_blank">http://blog.chinaunix.net/uid-26354188-id-3279846.html</a></p>]]></description></item><item><title>rsyslog</title><link>http://www.cnblogs.com/eastson/archive/2012/07/20/2600616.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 20 Jul 2012 01:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/20/2600616.html</guid><description><![CDATA[<p>rsyslog官方主页：<a href="http://www.rsyslog.com/">http://www.rsyslog.com/</a></p>
<p>rsyslog文档中心：<a href="http://www.rsyslog.com/doc/manual.html" target="_blank">http://www.rsyslog.com/doc/manual.html</a></p>]]></description></item><item><title>LAMP实验三：远程连接MySQL</title><link>http://www.cnblogs.com/eastson/archive/2012/07/18/2597572.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 18 Jul 2012 07:58:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/18/2597572.html</guid><description><![CDATA[<p><span>MySQL-Front是Windows下一款小巧的管理Mysql的应用程序. 主要特性包括多文档界面, 语法突出, 拖拽方式的数据库和表格, 可编辑/可增加/删除的域, 可编辑/可插入/删除的记录, 可显示的成员, 可执行的SQL 脚本,提供与外程序接口, 保存数据到CSV文件等。</span></p>
<p><span>&nbsp;</span></p>
<p><span>1. 增加帐号。MySQL服务器root帐号被配置成了禁止远程登入，因此需要新增加一个MySQL帐号用于远程管理：</span></p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ mysql --host localhost --user root --<span style="color: #000000;">password mysql<br />mysql</span>&gt; CREATE USER <span style="color: #800000;">'</span><span style="color: #800000;">amonest</span><span style="color: #800000;">'</span>@<span style="color: #800000;">'</span><span style="color: #800000;">%</span><span style="color: #800000;">'</span> IDENTIFIED BY <span style="color: #800000;">'</span><span style="color: #800000;">xxx</span><span style="color: #800000;">'</span><span style="color: #000000;">;</span><span style="color: #000000;">
mysql</span>&gt; GRANT ALL PRIVILEGES ON *.* TO <span style="color: #800000;">'</span><span style="color: #800000;">amonest</span><span style="color: #800000;">'</span>@<span style="color: #800000;">'</span><span style="color: #800000;">%</span><span style="color: #800000;">'</span><span style="color: #000000;"> WITH GRANT OPTION;</span></pre>
</div>
<p>&nbsp;关于MySQL帐号和权限的信息请参考《<a href="http://dev.mysql.com/doc/refman/5.1/en/adding-users.html" target="_blank">6.3.2.&nbsp;Adding User Accounts</a>》和《<a href="http://dev.mysql.com/doc/refman/5.1/en/grant.html" target="_blank">13.7.1.3.&nbsp;<code class="literal">GRANT</code>&nbsp;Syntax</a>》。</p>
<p>&nbsp;</p>
<p>2.&nbsp;配置防火墙。原来的防火墙策略如下：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ iptables -L -n --line-<span style="color: #000000;">numbers
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination         
</span><span style="color: #800080;">1</span>    ACCEPT     all  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span><span style="color: #000000;">           state RELATED,ESTABLISHED 
</span><span style="color: #800080;">2</span>    ACCEPT     icmp --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           
<span style="color: #800080;">3</span>    ACCEPT     all  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           
<span style="color: #800080;">4</span>    ACCEPT     tcp  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           state NEW tcp dpt:<span style="color: #800080;">22</span> 
<span style="color: #800080;">5</span>    ACCEPT     tcp  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           tcp dpt:<span style="color: #800080;">80</span><span> state NEW 
</span>6    REJECT     all  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           reject-with icmp-host-<span style="color: #000000;">prohibited 

Chain FORWARD (policy ACCEPT)
num  target     prot opt source               destination         
</span><span style="color: #800080;">1</span>    REJECT     all  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           reject-with icmp-host-<span style="color: #000000;">prohibited 

Chain OUTPUT (policy ACCEPT)
num  target     prot opt source               destination </span></pre>
</div>
<p>按照下面的方式开启MySQL的3306端口：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ iptables -I INPUT <span>6</span> -p tcp -m tcp --dport <span>3306</span> -m state --state NEW -<span>j ACCEPT<br />
[root@centos</span>-server ~<span>]$ service iptables save
iptables: Saving firewall rules to </span>/etc/sysconfig/<span>iptables:[  OK  ]<br />
[root@centos</span>-server ~<span>]$ service iptables restart
iptables: Flushing firewall rules:                         [  OK  ]
iptables: Setting chains to policy ACCEPT: filter          [  OK  ]
iptables: Unloading modules:                               [  OK  ]
iptables: Applying firewall rules:                         [  OK  ]</span></pre>
</div>
<p>&nbsp;</p>
<p>3.&nbsp;OK，现在我们打开MySQL-Front，看看是不是出现了熟悉的Windows界面？</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071815575497.png" alt="" /></p>]]></description></item><item><title>LAMP实验二：使用phpMyAdmin管理MySQL</title><link>http://www.cnblogs.com/eastson/archive/2012/07/18/2597149.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 18 Jul 2012 07:27:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/18/2597149.html</guid><description><![CDATA[<p><span>phpMyAdmin是一个用PHP编写的，可以通过web方式控制和操作MySQL数据库。通过phpMyAdmin可以完全对数据库进行操作，例如建立、复制、删除数据等等。</span></p>
<p><span>&nbsp;</span></p>
<p>1. 安装phpMyAdmin。可以使用<a href="http://www.cnblogs.com/eastson/archive/2012/07/18/2597166.html" target="_blank">CentOS EPEL软件源</a>方便的安装phpMyAdmin包：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ yum <span style="color: #0000ff;">install</span> phpMyAdmin</pre>
</div>
<p>phpMyAdmin安装完成后程序文件在/usr/share/phpMyAdmin目录，对应的httpd配置文件在/etc/httpd/conf.d/phpMyAdmin.conf。</p>
<p>&nbsp;</p>
<p>2. 配置/etc/httpd/conf.d/phpMyAdmin.conf。phpMyAdmin默认配置是不允许除localhost之外的主机远程访问的：&nbsp;</p>
<div class="cnblogs_code">
<pre>&lt;Directory /usr/share/phpMyAdmin/&gt;
   &lt;IfModule mod_authz_core.c&gt;<span style="color: #000000;">
     # Apache </span><span style="color: #800080;">2.4</span>
     &lt;RequireAny&gt;<span style="color: #000000;">
       Require ip </span><span style="color: #800080;">127.0</span>.<span style="color: #800080;">0.1</span><span style="color: #000000;">
       Require ip ::</span><span style="color: #800080;">1</span>
     &lt;/RequireAny&gt;
   &lt;/IfModule&gt;
   &lt;IfModule !mod_authz_core.c&gt;<span style="color: #000000;">
     # Apache </span><span style="color: #800080;">2.2</span><span style="color: #000000;">
     Order Deny,Allow
     Deny from All
     Allow from </span><span style="color: #800080;">127.0</span>.<span style="color: #800080;">0.1</span><span style="color: #000000;">
     Allow from ::</span><span style="color: #800080;">1</span>   &lt;/IfModule&gt;
&lt;/Directory&gt;</pre>
</div>
<p>为了能够远程访问phpMyAdmin，将上面的内容稍作修改就可以了：</p>
<div class="cnblogs_code">
<pre>&lt;Directory /usr/share/phpMyAdmin/&gt;
   &lt;IfModule !mod_authz_core.c&gt;<span style="color: #000000;">
     # Apache </span><span style="color: #800080;">2.2</span><span style="color: #000000;">
     Order Allow,Deny
     Allow from All
   </span>&lt;/IfModule&gt;
&lt;/Directory&gt;</pre>
</div>
<p>&nbsp;</p>
<p>3. 进入/usr/share/phpMyAdmin目录，创建config.inc.php文件：</p>
<div class="cnblogs_code">
<pre>[root@centos-server /usr/share/phpMyAdmin]$ <span style="color: #0000ff;">cp</span> config.sample.inc.php config.inc.php </pre>
</div>
<p>&nbsp;</p>
<p>4. 重启httpd服务：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ service httpd restart</pre>
</div>
<p>&nbsp;</p>
<p>5. OK，打开网址http://192.168.12.215/phpmyadmin（服务器地址为<a href="http://192.168.12.215">http://192.168.12.215</a>），输入MySQL帐号和密码后，就可以看到phpMyAdmin主页了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071815263169.png" alt="" /></p>]]></description></item><item><title>CentOS实验六：配置EPEL软件源</title><link>http://www.cnblogs.com/eastson/archive/2012/07/18/2597166.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 18 Jul 2012 05:50:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/18/2597166.html</guid><description><![CDATA[<p>EPEL是企业版 Linux 附加软件包的简称。EPEL是一个由特别兴趣小组创建、维护并管理的，针对红帽企业版 Linux(RHEL)及其衍生发行版(比如 CentOS、 Scientific Linux)的一个高质量附加软件包项目。</p>
<p><span>&nbsp;</span></p>
<p><span>EPEL Wiki 中文主页：<a href="https://fedoraproject.org/wiki/EPEL/zh-cn">https://fedoraproject.org/wiki/EPEL/zh-cn</a></span></p>
<p><span>EPEL 提供的软件包：<a href="http://dl.fedoraproject.org/pub/epel/6/x86_64/repoview/" target="_blank">http://dl.fedoraproject.org/pub/epel/6/x86_64/repoview/</a>&nbsp;或&nbsp;<a href="http://mirrors.sohu.com/fedora-epel/6/x86_64/" target="_blank">http://mirrors.sohu.com/fedora-epel/6/x86_64/</a></span></p>
<p><span>&nbsp;</span></p>
<p>EPEL 包含一个叫做epel-release的包，这个包包含了 EPEL 源的 gpg 密钥和软件源信息。您可以通过 yum 安装到您的企业版 Linux 发行版上。该包除了epel-release源外，还有一个叫做epel-testing的源，这个源包含最新的测试软件包，其版本很新但是安装有风险，请自行斟酌。</p>
<p>注意: 有些第三方软件源需要 EPEL 的epel-testing源来安装依赖组件，请务必在系统设置中启用本源。&nbsp;(相关配置文件位于：/etc/yum.repos.d/epel-testing.repo)</p>
<p>&nbsp;</p>
<p>打开<a href="http://www.cnblogs.com/eastson/archive/2012/07/18/2597239.html" target="_blank">搜狐镜像站</a>，找到<a href="http://mirrors.sohu.com/fedora-epel/6/x86_64/epel-release-6-7.noarch.rpm" target="_blank">epel-release</a>包，然后在CentOS中安装：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ rpm -ivh http:<span style="color: #008000;">//</span><span style="color: #008000;">mirrors.sohu.com/fedora-epel/6/x86_64/epel-release-6-8.noarch.rpm</span></pre>
</div>
<p>&nbsp;</p>
<p>安装完成后在/etc/yum.repos.d目录下就会多出来两个软件源：epel.repo和epel-testing.repo。</p>]]></description></item><item><title>Sohu.com Open Source Mirror Site</title><link>http://www.cnblogs.com/eastson/archive/2012/07/18/2597239.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 18 Jul 2012 05:37:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/18/2597239.html</guid><description><![CDATA[<p><span>继</span>网易启动开源项目镜像<span>之后，国内的另一家门户网站搜狐也上线了开源镜像站。浏览该站点，其中镜像的项目包括 Arch Linux、CentOS、Debian、Fedora、Gentoo、Ubuntu 等 Linux 发行版，同时也包括 FreeBSD、OpenBSD 等 BSD 版本。</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071813323627.png" alt="" /></p>
<p>&nbsp;</p>
<p>搜狐开源镜像站的地址：<a href="http://mirrors.sohu.com" target="_blank">http://mirrors.sohu.com</a></p>
<p>网易开源镜像站的地址：<a href="http://mirrors.163.com/" target="_blank">http://mirrors.163.com/</a></p>
<p><span>&nbsp;</span></p>]]></description></item><item><title>LAMP实验一：安装Apache+MySQL+PHP基本环境</title><link>http://www.cnblogs.com/eastson/archive/2012/07/18/2596743.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 18 Jul 2012 02:43:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/18/2596743.html</guid><description><![CDATA[<h3>安装Httpd</h3>
<p>1. 安装httpd。先检查一下httpd是否已经有安装：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ rpm -qa | <span>grep</span><span> httpd</span></pre>
</div>
<p>如果httpd没有安装，可以使用下面l命令进行安装：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ yum <span>install</span><span> httpd<br /></span>[root@centos-server ~]$ chkconfig httpd on<br />[root@centos-server ~]$ service httpd start</pre>
</div>
<p>&nbsp;</p>
<p>2. 测试httpd。httpd的文档根目录位于/var/www/html。我们在该目录下创建一个index.html文件，测试是否可以正常访问。</p>
<div class="cnblogs_code">
<pre>[root@centos-server /var/www/html]$ <span style="color: #0000ff;">echo</span> <span style="color: #800000;">"</span><span style="color: #800000;">&lt;h1&gt;It Works&lt;/h1&gt;</span><span style="color: #800000;">"</span> &gt;<span style="color: #000000;"> index.html
[root@centos</span>-server /var/www/html]$ curl http:<span style="color: #008000;">//</span><span style="color: #008000;">localhost/index.html</span>
&lt;h1&gt;It Works&lt;/h1&gt;</pre>
</div>
<p>&nbsp;</p>
<p>3. 配置防火墙。CentOS默认的防火墙策略如下：</p>
<div class="cnblogs_code">
<pre>[root@centos-server /var/www/html]$ iptables -L -n --line-<span style="color: #000000;">numbers
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination         
</span><span style="color: #800080;">1</span>    ACCEPT     all  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span><span style="color: #000000;">           state RELATED,ESTABLISHED 
</span><span style="color: #800080;">2</span>    ACCEPT     icmp --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           
<span style="color: #800080;">3</span>    ACCEPT     all  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           
<span style="color: #800080;">4</span>    ACCEPT     tcp  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           state NEW tcp dpt:<span style="color: #800080;">22</span> 
<span style="color: #800080;">5</span>    REJECT     all  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           reject-with icmp-host-<span style="color: #000000;">prohibited 

Chain FORWARD (policy ACCEPT)
num  target     prot opt source               destination         
</span><span style="color: #800080;">1</span>    REJECT     all  --  <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>            <span style="color: #800080;">0.0</span>.<span style="color: #800080;">0.0</span>/<span style="color: #800080;">0</span>           reject-with icmp-host-<span style="color: #000000;">prohibited 

Chain OUTPUT (policy ACCEPT)
num  target     prot opt source               destination  </span></pre>
</div>
<p>该策略阻止了其它机器除了22（SSH）端口之外的所有端口对本机的访问。httpd服务需要开启80端口，按照下面的方式开启80端口：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ iptables -I INPUT <span style="color: #800080;">5</span> -p tcp -m tcp --dport <span style="color: #800080;">80</span> -m state --state NEW -<span style="color: #000000;">j ACCEPT<br />
[root@centos</span>-server ~<span style="color: #000000;">]$ service iptables save
iptables: Saving firewall rules to </span>/etc/sysconfig/<span style="color: #000000;">iptables:[  OK  ]<br />
[root@centos</span>-server ~<span style="color: #000000;">]$ service iptables restart
iptables: Flushing firewall rules:                         [  OK  ]
iptables: Setting chains to policy ACCEPT: filter          [  OK  ]
iptables: Unloading modules:                               [  OK  ]
iptables: Applying firewall rules:                         [  OK  ]</span></pre>
</div>
<p>OK，现在用其它机器访问一下http://192.168.12.215/index.html（服务器IP地址为192.168.12.215）试试看。</p>
<p>&nbsp;</p>
<h3>安装MySQL</h3>
<p>1. 安装MySQL。先检查一下mysql-server是否已经有安装：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ rpm -qa | grep mysql-server</pre>
</div>
<p>如果mysql-server没有安装，可以使用下面l命令进行安装：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ yum install mysql-server<br />[root@centos-server ~]$ chkconfig mysqld on<br />[root@centos-server ~]$ service mysqld start</pre>
</div>
<p>&nbsp;</p>
<p>2. 配置MySQL。MySQL提供了一个名为mysql_secure_installation的工具，协助我们在安装完毕后做一些必要的安全设置。</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~<span style="color: #000000;">]$ mysql_secure_installation 
... ...
In order to log into MySQL to secure it, we</span><span style="color: #800000;">'</span><span style="color: #800000;">ll need the current</span>
password <span style="color: #0000ff;">for</span> the root user.  If you<span style="color: #800000;">'</span><span style="color: #800000;">ve just installed MySQL, and</span>
you haven<span style="color: #800000;">'</span><span style="color: #800000;">t set the root password yet, the password will be blank,</span>
<span style="color: #000000;">so you should just press enter here.

Enter current password </span><span style="color: #0000ff;">for</span> root (enter <span style="color: #0000ff;">for</span><span style="color: #000000;"> none):  ###输入当前的root密码, 默认为空
OK, successfully used password, moving on...

Setting the root password ensures that nobody can log into the MySQL
root user without the proper authorisation.

Set root password</span>? [Y/<span style="color: #000000;">n]   ###是否需要重设root密码？
New password: 
Re</span>-<span style="color: #000000;">enter new password: 
Password updated successfully</span>!<span style="color: #000000;">
Reloading privilege tables..
 ... Success</span>!<span style="color: #000000;">


By default, a MySQL installation has an anonymous user, allowing anyone
to log into MySQL without having to have a user account created </span><span style="color: #0000ff;">for</span><span style="color: #000000;">
them.  This is intended only </span><span style="color: #0000ff;">for</span> testing, and to <span style="color: #0000ff;">make</span><span style="color: #000000;"> the installation
go a bit smoother.  You should remove them before moving into a
production environment.

Remove anonymous users</span>? [Y/<span style="color: #000000;">n]   ###是否移除匿名用户？
 ... Success</span>!<span style="color: #000000;">

Normally, root should only be allowed to connect from </span><span style="color: #800000;">'</span><span style="color: #800000;">localhost</span><span style="color: #800000;">'</span><span style="color: #000000;">.  This
ensures that someone cannot guess at the root password from the network.

Disallow root </span><span style="color: #0000ff;">login</span> remotely? [Y/<span style="color: #000000;">n]    ###是否禁用root远程连接？
 ... Success</span>!<span style="color: #000000;">

By default, MySQL comes with a database named </span><span style="color: #800000;">'</span><span style="color: #800000;">test</span><span style="color: #800000;">'</span><span style="color: #000000;"> that anyone can
access.  This is also intended only </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> testing, and should be removed
before moving into a production environment.

Remove test database and access to it</span>? [Y/<span style="color: #000000;">n] n   ###是否删除test数据库？
n
... skipping.

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now</span>? [Y/<span style="color: #000000;">n]   ###重新载入授权信息？
 ... Success</span>!<span style="color: #000000;">

Cleaning up...



All </span><span style="color: #0000ff;">done</span>!  If you<span style="color: #800000;">'</span><span style="color: #800000;">ve completed all of the above steps, your MySQL</span>
<span style="color: #000000;">installation should now be secure.

Thanks </span><span style="color: #0000ff;">for</span> using MySQL!</pre>
</div>
<p>&nbsp;</p>
<p>3. 检查MySQL是否正常运行。</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ mysqladmin -h localhost -u root -<span style="color: #000000;">p version
Enter password: 
mysqladmin  Ver </span><span style="color: #800080;">8.42</span> Distrib <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>, <span style="color: #0000ff;">for</span> redhat-linux-<span style="color: #000000;">gnu on x86_64
Copyright (c) </span><span style="color: #800080;">2000</span>, <span style="color: #800080;">2011</span>, Oracle and/<span style="color: #000000;">or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and</span>/<span style="color: #000000;">or its
affiliates. Other names may be trademarks of their respective
owners.

Server version        </span><span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span><span style="color: #000000;">
Protocol version    </span><span style="color: #800080;">10</span><span style="color: #000000;">
Connection        Localhost via UNIX socket
UNIX socket        </span>/var/lib/mysql/<span style="color: #000000;">mysql.sock
Uptime:            </span><span style="color: #800080;">16</span> min <span style="color: #800080;">14</span><span style="color: #000000;"> sec

Threads: </span><span style="color: #800080;">1</span>  Questions: <span style="color: #800080;">21</span>  Slow queries: <span style="color: #800080;">0</span>  Opens: <span style="color: #800080;">15</span>  Flush tables: <span style="color: #800080;">1</span>  Open tables: <span style="color: #800080;">8</span>  Queries per second avg: <span style="color: #800080;">0.21</span></pre>
</div>
<p>&nbsp;</p>
<h3>安装PHP</h3>
<p>1. 安装php。先检查一下php是否已经有安装：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ rpm -qa | grep php</pre>
</div>
<p>如果httpd没有安装，可以使用下面l命令进行安装：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ yum install php</pre>
</div>
<p>&nbsp;</p>
<p>2. 测试php。创建文件hello-world.php，文件内容如下：</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php

</span><span style="color: #0000ff;">print</span> "Hello World!\n"<span style="color: #000000;">;

</span>?&gt;</pre>
</div>
<p>执行hello-world.php，检查PHP是否有正常运行：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ php -f hello-world.<span style="color: #000000;">php 
Hello World</span>!</pre>
</div>
<p>&nbsp;</p>
<p>3. 测试与httpd的集成。在/var/www/html下创建文件php-info.php，文件内容如下：</p>
<div class="cnblogs_code">
<pre>&lt;?<span style="color: #000000;">php

</span><span style="color: #008080;">phpinfo</span><span style="color: #000000;">();

</span>?&gt;</pre>
</div>
<p>使用浏览器请求PHP文件之前必须重启httpd：</p>
<div class="cnblogs_code">
<pre>[root@centos-server /var/www/html]$ service httpd restart</pre>
</div>
<p>然后打开网址http://192.168.12.215/php-info.php试试看：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071810310946.png" alt="" /></p>
<p>&nbsp;</p>
<p>4. 安装php-mysql模块。默认php没有安装该模块。</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ yum <span style="color: #0000ff;">install</span> php-mysql<br />[root@centos-server ~]$ service httpd restart ###需要重启httpd</pre>
</div>
<p>再次打开网址http://192.168.12.215/php-info.php，发现找到mysql模块：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071810371252.png" alt="" /></p>
<p>其它的php模块也可以比照此种方式安装。使用下面的命令可以查询在CentOS软件源中可用的php模块：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~<span style="color: #000000;">]$ yum search php
cups</span>-php.x86_64 : Common Unix Printing System -<span style="color: #000000;"> php module
graphviz</span>-php.x86_64 : PHP extension <span style="color: #0000ff;">for</span><span style="color: #000000;"> graphviz
php.x86_64 : PHP scripting language </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> creating dynamic web sites
php</span>-bcmath.x86_64 : A module <span style="color: #0000ff;">for</span> PHP applications <span style="color: #0000ff;">for</span><span style="color: #000000;"> using the bcmath library
php</span>-cli.x86_64 : Command-line interface <span style="color: #0000ff;">for</span><span style="color: #000000;"> PHP
php</span>-common.x86_64 : Common files <span style="color: #0000ff;">for</span><span style="color: #000000;"> PHP
php</span>-dba.x86_64 : A database abstraction layer module <span style="color: #0000ff;">for</span><span style="color: #000000;"> PHP applications
php</span>-devel.x86_64 : Files needed <span style="color: #0000ff;">for</span><span style="color: #000000;"> building PHP extensions
php</span>-embedded.x86_64 : PHP library <span style="color: #0000ff;">for</span> embedding <span style="color: #0000ff;">in</span><span style="color: #000000;"> applications
php</span>-gd.x86_64 : A module <span style="color: #0000ff;">for</span> PHP applications <span style="color: #0000ff;">for</span><span style="color: #000000;"> using the gd graphics library
php</span>-imap.x86_64 : A module <span style="color: #0000ff;">for</span><span style="color: #000000;"> PHP applications that use IMAP
php</span>-intl.x86_64 : Internationalization extension <span style="color: #0000ff;">for</span><span style="color: #000000;"> PHP applications
php</span>-ldap.x86_64 : A module <span style="color: #0000ff;">for</span><span style="color: #000000;"> PHP applications that use LDAP
php</span>-mbstring.x86_64 : A module <span style="color: #0000ff;">for</span> PHP applications <span style="color: #0000ff;">which</span> need multi-<span style="color: #0000ff;">byte</span> <span style="color: #0000ff;">string</span><span style="color: #000000;"> handling
php</span>-mysql.x86_64 : A module <span style="color: #0000ff;">for</span><span style="color: #000000;"> PHP applications that use MySQL databases
php</span>-odbc.x86_64 : A module <span style="color: #0000ff;">for</span><span style="color: #000000;"> PHP applications that use ODBC databases
php</span>-pdo.x86_64 : A database access abstraction module <span style="color: #0000ff;">for</span><span style="color: #000000;"> PHP applications
php</span>-<span style="color: #000000;">pear.noarch : PHP Extension and Application Repository framework
php</span>-pecl-<span style="color: #000000;">apc.x86_64 : APC caches and optimizes PHP intermediate code
php</span>-pgsql.x86_64 : A PostgreSQL database module <span style="color: #0000ff;">for</span><span style="color: #000000;"> PHP
php</span>-process.x86_64 : Modules <span style="color: #0000ff;">for</span><span style="color: #000000;"> PHP script using system process interfaces
php</span>-pspell.x86_64 : A module <span style="color: #0000ff;">for</span> PHP applications <span style="color: #0000ff;">for</span><span style="color: #000000;"> using pspell interfaces
php</span>-recode.x86_64 : A module <span style="color: #0000ff;">for</span> PHP applications <span style="color: #0000ff;">for</span><span style="color: #000000;"> using the recode library
php</span>-snmp.x86_64 : A module <span style="color: #0000ff;">for</span> PHP applications that query SNMP-<span style="color: #000000;">managed devices
php</span>-soap.x86_64 : A module <span style="color: #0000ff;">for</span><span style="color: #000000;"> PHP applications that use the SOAP protocol
php</span>-<span style="color: #000000;">tidy.x86_64 : Standard PHP module provides tidy library support
php</span>-xml.x86_64 : A module <span style="color: #0000ff;">for</span> PHP applications <span style="color: #0000ff;">which</span><span style="color: #000000;"> use XML
php</span>-xmlrpc.x86_64 : A module <span style="color: #0000ff;">for</span> PHP applications <span style="color: #0000ff;">which</span> use the XML-<span style="color: #000000;">RPC protocol
php</span>-zts.x86_64 : Thread-safe PHP interpreter <span style="color: #0000ff;">for</span><span style="color: #000000;"> use with the Apache HTTP Server
rrdtool</span>-<span style="color: #000000;">php.x86_64 : PHP RRDtool bindings
uuid</span>-php.x86_64 : PHP support <span style="color: #0000ff;">for</span><span style="color: #000000;"> Universally Unique Identifier library
php</span>-<span style="color: #000000;">enchant.x86_64 : Human Language and Character Encoding Support
php</span>-pecl-apc-<span style="color: #000000;">devel.x86_64 : APC developer files (header)
php</span>-pecl-memcache.x86_64 : Extension to work with the Memcached caching daemon</pre>
</div>]]></description></item><item><title>iptables规则整理</title><link>http://www.cnblogs.com/eastson/archive/2012/07/17/2595468.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 17 Jul 2012 08:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/17/2595468.html</guid><description><![CDATA[<p>开启loopback：</p>
<div class="cnblogs_code">
<pre>iptables -A INPUT -i lo -<span style="color: #000000;">j ACCEPT  
iptables </span>-A OUTPUT -o lo -j ACCEPT  </pre>
</div>
<p>&nbsp;</p>
<p>开启SSH服务：</p>
<div class="cnblogs_code">
<pre>iptables -A INPUT -p tcp --dport <span style="color: #800080;">22</span> -<span style="color: #000000;">j ACCEPT  
iptables </span>-A OUTPUT -p tcp --sport <span style="color: #800080;">22</span> -j ACCEPT  </pre>
</div>
<p>&nbsp;</p>
<p>开启MySQL服务：</p>
<div class="cnblogs_code">
<pre>iptables -A INPUT -p tcp --dport <span style="color: #800080;">3306</span> -<span style="color: #000000;">j ACCEPT  
iptables </span>-A OUTPUT -p tcp --sport <span style="color: #800080;">3306</span> -j ACCEPT  </pre>
</div>]]></description></item><item><title>Linux 目录结构【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/07/16/2593348.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 16 Jul 2012 04:03:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/16/2593348.html</guid><description><![CDATA[<p><span><strong>/：</strong></span>根目录，一般根目录下只存放目录，不要存放文件，/etc、/bin、/dev、/lib、/sbin应该和根目录放置在一个分区中</p>
<p><span><strong>/bin:/usr/bin:</strong></span>可<span>执行二进制文件的目录，如常用的命令ls、tar、mv、cat等。</span></p>
<p><span><strong>/boot：</strong></span>放置linux系统启动时用到的一些文件。/boot/vmlinuz为linux的内核文件，以及/boot/gurb。<span><strong><span>建议单独分区，分区大小100M即可</span></strong></span></p>
<p><span><strong>/dev：</strong></span>存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，常用的是挂载光驱mount /dev/cdrom /mnt。</p>
<p><span><strong>/etc：</strong></span>系统配置文件存放的目录，不建议在此目录下存放可执行文件，重要的配置文件有/etc/inittab、/etc/fstab、/etc/init.d、/etc/X11、/etc/sysconfig、/etc/xinetd.d修改配置文件之前记得备份。</p>
<p>注：/etc/X11存放与x windows有关的设置。</p>
<p><span><strong>/home：</strong></span>系统默认的用户家目录，新增用户账号时，用户的家目录都存放在此目录下，~表示当前用户的家目录，~test表示用户test的家目录。<span><strong>建议单独分区，并设置较大的磁盘空间，方便用户存放数据</strong></span></p>
<p><span><strong>/lib:/usr/lib:/usr/local/lib：</strong></span>系统使用的函数库的目录，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，比较重要的目录为/lib/modules。</p>
<p><span><strong>/lost+fount：</strong></span>系统异常产生错误时，会将一些遗失的片段放置于此目录下，通常这个目录会自动出现在装置目录下。如加载硬盘于/disk 中，此目录下就会自动产生目录/disk/lost+found</p>
<p><span><strong>/mnt:/media：</strong></span>光盘默认挂载点，通常光盘挂载于/mnt/cdrom下，也不一定，可以选择任意位置进行挂载。</p>
<p><strong><span>/opt：</span></strong>给主机额外安装软件所摆放的目录。如：FC4使用的Fedora 社群开发软件，如果想要自行安装新的KDE 桌面软件，可以将该软件安装在该目录下。以前的 Linux 系统中，习惯放置在 /usr/local 目录下</p>
<p><span><strong>/proc：</strong></span>此目录的数据都在内存中，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有/proc/cpuinfo、/proc/interrupts、/proc/dma、/proc/ioports、/proc/net/*等</p>
<p><span><strong>/root：</strong></span>系统管理员root的家目录，系统第一个启动的分区为/，所以最好将/root和/放置在一个分区下。</p>
<p><span><strong>/sbin:/usr/sbin:/usr/local/sbin：</strong></span>放置系统管理员使用的可执行命令，如fdisk、shutdown、mount等。与/bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能"查看"而不能设置和使用。</p>
<p><span><strong>/tmp：</strong></span>一般用户或正在执行的程序临时存放文件的目录,任何人都可以访问,重要数据不可放置在此目录下</p>
<p><span><strong>/srv：</strong></span>服务启动之后需要访问的数据目录，如www服务需要访问的网页数据存放在/srv/www内</p>
<p><span><strong>/usr：</strong></span>应用程序存放目录，<span><strong>/usr/bin</strong></span>存放应用程序，<span><strong>/usr/share</strong></span>存放共享数据，<span><strong>/usr/lib</strong></span>存放不能直接运行的，却是许多程序运行所必需的一些函数库文件。<span><strong>/usr/local:</strong></span>存放软件升级包。<span><strong>/usr/share/doc:</strong></span>系统说明文件存放目录。<span><strong>/usr/share/man:</strong></span>&nbsp;程序说明文件存放目录，使用 man ls时会查询/usr/share/man/man1/ls.1.gz的内容<span><strong><span>建议单独分区，设置较大的磁盘空间</span></strong></span></p>
<p><span><strong>/var：</strong></span>放置系统执行过程中经常变化的文件，如随时更改的日志文件/var/log，<span><strong>/var/log/message：</strong></span>所有的登录文件存放目录，<span><strong>/var/spool/mail</strong></span>：邮件存放的目录，<span><strong>/var/run:</strong></span>程序或服务启动后，其PID存放在该目录下。<span><strong>建议单独分区，设置较大的磁盘空间</strong></span></p>
<p><span><strong>&nbsp;</strong></span></p>
<p>原文地址：<a href="http://www.cnblogs.com/cabin/archive/2010/10/13/1850019.html" target="_blank">http://www.cnblogs.com/cabin/archive/2010/10/13/1850019.html</a></p>]]></description></item><item><title>NFS</title><link>http://www.cnblogs.com/eastson/archive/2012/07/16/2593334.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 16 Jul 2012 03:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/16/2593334.html</guid><description><![CDATA[<h3>安装NFS Server</h3>
<p>1. 安装rpcbind（CentOS 6之前为portmap）。先检查一下rpcbind是否已经有安装的，默认是随CentOS一起安装的：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ rpm -qa | <span style="color: #0000ff;">grep</span><span style="color: #000000;"> rpcbind
rpcbind</span>-<span style="color: #800080;">0.2</span>.<span style="color: #800080;">0</span>-<span style="color: #800080;">9</span><span style="color: #000000;">.el6.x86_64<br />
[root@centos</span>-server ~]$ chkconfig --<span style="color: #000000;">list rpcbind
rpcbind            </span><span style="color: #800080;">0</span>:off    <span style="color: #800080;">1</span>:off    <span style="color: #800080;">2</span>:on    <span style="color: #800080;">3</span>:on    <span style="color: #800080;">4</span>:on    <span style="color: #800080;">5</span>:on    <span style="color: #800080;">6</span>:off</pre>
</div>
<p>如果rpcbind没有安装，可以使用下面l命令进行安装：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ yum <span style="color: #0000ff;">install</span><span style="color: #000000;"> rpcbind
[root@centos</span>-server ~]$ chkconfig rpcbind on  ##自动启动该服务</pre>
</div>
<p>&nbsp;</p>
<p>2. 安装nfs-utils。先检查一下nfs-utils是否已经有安装的：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ rpm -qa nfs-utils</pre>
</div>
<p>如果nfs-utils没有安装，可以使用下面的命令进行安装：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ yum <span>install</span><span> nfs-utils
[root@centos</span>-server ~]$ chkconfig nfs on</pre>
</div>
<p>&nbsp;</p>
<p>3. 启动服务。必须在启动nfs服务之前先启动rpcbind服务：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~<span style="color: #000000;">]$ service rpcbind restart
[root@centos</span>-server ~]$ service nfs start</pre>
</div>
<p>如果没有重新启动rpcbind，则有可能出现下面的错误信息：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~<span style="color: #000000;">]$ service nfs start
Starting NFS services: [ OK ]
Starting NFS mountd: [FAILED]
Starting NFS daemon: rpc.nfsd: writing fd to kernel failed: errno </span><span style="color: #800080;">111</span><span style="color: #000000;"> (Connection refused)
rpc.nfsd: unable to set any sockets </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> nfsd
[FAILED]</span></pre>
</div>
<p>&nbsp;</p>
<h3>配置NFS Server</h3>
<p>xx</p>
<p>&nbsp;</p>
<h3>客户端连接NFS Server</h3>
<p>xx</p>]]></description></item><item><title>CentOS 6.2安装portmap</title><link>http://www.cnblogs.com/eastson/archive/2012/07/16/2593329.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 16 Jul 2012 03:50:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/16/2593329.html</guid><description><![CDATA[<p>网上学习NFS的安装，发现很多文章都说要用到portmap，但是在CentOS的官方软件源里面又找不到该软件包。</p>
<p>&nbsp;</p>
<p>后来才知道portmap在CentOS 6上已经更名为rpcbind了。</p>
<p>&nbsp;</p>
<p>默认rpcbind是已经安装的，该服务随系统启动时自动启动：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ chkconfig rpcbind --<span style="color: #000000;">list
rpcbind            </span><span style="color: #800080;">0</span>:off    <span style="color: #800080;">1</span>:off    <span style="color: #800080;">2</span>:on    <span style="color: #800080;">3</span>:on    <span style="color: #800080;">4</span>:on    <span style="color: #800080;">5</span>:on    <span style="color: #800080;">6</span>:off</pre>
</div>
<p>&nbsp;</p>
<p>若要重新安装，可以使用下面的命令：</p>
<div class="cnblogs_code">
<pre>[root@centos-server ~]$ yum <span style="color: #0000ff;">install</span> rpcbind</pre>
</div>]]></description></item><item><title>Linux常用命令（一）- 基础</title><link>http://www.cnblogs.com/eastson/archive/2012/07/16/2592964.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 16 Jul 2012 00:43:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/16/2592964.html</guid><description><![CDATA[<p>查看用户标识和组标识</p>
<div class="cnblogs_code">
<pre>[amonest@centos-server ~]$ <span style="color: #0000ff;">id</span><span style="color: #000000;">
uid</span>=<span style="color: #800080;">500</span>(amonest) gid=<span style="color: #800080;">500</span>(amonest) <span style="color: #0000ff;">groups</span>=<span style="color: #800080;">500</span>(amonest),<span style="color: #800080;">10</span>(wheel) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023</pre>
</div>
<p>&nbsp;</p>
<p>查看当前登录到系统的用户</p>
<div class="cnblogs_code">
<pre>[amonest@centos-server ~]$ <span style="color: #0000ff;">who</span><span style="color: #000000;">
amonest pts</span>/<span style="color: #800080;">0</span> <span style="color: #800080;">2012</span>-<span style="color: #800080;">07</span>-<span style="color: #800080;">13</span> <span style="color: #800080;">17</span>:<span style="color: #800080;">59</span> (c60601199.xxxx.com)</pre>
</div>
<p>&nbsp;</p>
<p>查看机器在启动日期肯时间</p>
<div class="cnblogs_code">
<pre>[amonest@centos-server ~]$ <span style="color: #0000ff;">who</span> -<span style="color: #000000;">b
system boot </span><span style="color: #800080;">2012</span>-<span style="color: #800080;">07</span>-<span style="color: #800080;">13</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">49</span></pre>
</div>
<p>&nbsp;</p>
<p>查看机器运行时间</p>
<div class="cnblogs_code">
<pre>[amonest@centos-server ~]$ <span style="color: #0000ff;">uptime</span>
<span style="color: #800080;">18</span>:<span style="color: #800080;">15</span>:<span style="color: #800080;">04</span> up <span style="color: #800080;">1</span>:<span style="color: #800080;">25</span>, <span style="color: #800080;">1</span> user, load average: <span style="color: #800080;">0.00</span>, <span style="color: #800080;">0.00</span>, <span style="color: #800080;">0.00</span></pre>
</div>
<p>&nbsp;</p>
<p>查看机器运行时间和登录用户</p>
<div class="cnblogs_code">
<pre>[amonest@centos-server ~]$ <span style="color: #0000ff;">w</span>
<span style="color: #800080;">18</span>:<span style="color: #800080;">16</span>:<span style="color: #800080;">10</span> up <span style="color: #800080;">1</span>:<span style="color: #800080;">27</span>, <span style="color: #800080;">1</span> user, load average: <span style="color: #800080;">0.00</span>, <span style="color: #800080;">0.00</span>, <span style="color: #800080;">0.00</span><span style="color: #000000;">
USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT
amonest pts</span>/<span style="color: #800080;">0</span> c60601199.xxxxx. <span style="color: #800080;">17</span>:<span style="color: #800080;">59</span> <span style="color: #800080;">0</span>.00s <span style="color: #800080;">0</span>.07s <span style="color: #800080;">0</span>.00s <span style="color: #0000ff;">w</span></pre>
</div>
<p>&nbsp;</p>
<p>查看系统硬盘空间信息</p>
<div class="cnblogs_code">
<pre>[amonest@centos-server /etc]$ <span style="color: #0000ff;">df</span> -<span style="color: #000000;">ah
Filesystem Size Used Avail Use</span>%<span style="color: #000000;"> Mounted on
</span>/dev/sda2 18G <span style="color: #800080;">6</span>.3G 11G <span style="color: #800080;">39</span>% /<span style="color: #000000;">
proc </span><span style="color: #800080;">0</span> <span style="color: #800080;">0</span> <span style="color: #800080;">0</span> - /<span style="color: #000000;">proc
sysfs </span><span style="color: #800080;">0</span> <span style="color: #800080;">0</span> <span style="color: #800080;">0</span> - /<span style="color: #000000;">sys
devpts </span><span style="color: #800080;">0</span> <span style="color: #800080;">0</span> <span style="color: #800080;">0</span> - /dev/<span style="color: #000000;">pts
tmpfs 499M </span><span style="color: #800080;">0</span> 499M <span style="color: #800080;">0</span>% /dev/<span style="color: #000000;">shm
</span>/dev/sda1 485M 31M 429M <span style="color: #800080;">7</span>% /<span style="color: #000000;">boot
none </span><span style="color: #800080;">0</span> <span style="color: #800080;">0</span> <span style="color: #800080;">0</span> - /proc/sys/fs/binfmt_misc</pre>
</div>
<p>&nbsp;</p>
<p>查看系统进程信息</p>
<div class="cnblogs_code">
<pre>[amonest@centos-server /etc]$ <span style="color: #0000ff;">ps</span> -<span style="color: #000000;">ef
UID PID PPID C STIME TTY TIME CMD
root </span><span style="color: #800080;">1</span> <span style="color: #800080;">0</span> <span style="color: #800080;">0</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">49</span> ? <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span>:<span style="color: #800080;">01</span> /sbin/<span style="color: #000000;">init
root </span><span style="color: #800080;">2</span> <span style="color: #800080;">0</span> <span style="color: #800080;">0</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">49</span> ? <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span>:<span style="color: #800080;">00</span><span style="color: #000000;"> [kthreadd]
root </span><span style="color: #800080;">3</span> <span style="color: #800080;">2</span> <span style="color: #800080;">0</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">49</span> ? <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span>:<span style="color: #800080;">00</span> [migration/<span style="color: #800080;">0</span><span style="color: #000000;">]
root </span><span style="color: #800080;">4</span> <span style="color: #800080;">2</span> <span style="color: #800080;">0</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">49</span> ? <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span>:<span style="color: #800080;">00</span> [ksoftirqd/<span style="color: #800080;">0</span><span style="color: #000000;">]
root </span><span style="color: #800080;">5</span> <span style="color: #800080;">2</span> <span style="color: #800080;">0</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">49</span> ? <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span>:<span style="color: #800080;">00</span> [migration/<span style="color: #800080;">0</span><span style="color: #000000;">]
root </span><span style="color: #800080;">6</span> <span style="color: #800080;">2</span> <span style="color: #800080;">0</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">49</span> ? <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span>:<span style="color: #800080;">00</span> [watchdog/<span style="color: #800080;">0</span><span style="color: #000000;">]
root </span><span style="color: #800080;">7</span> <span style="color: #800080;">2</span> <span style="color: #800080;">0</span> <span style="color: #800080;">16</span>:<span style="color: #800080;">49</span> ? <span style="color: #800080;">00</span>:<span style="color: #800080;">00</span>:<span style="color: #800080;">00</span> [events/<span style="color: #800080;">0</span>]</pre>
</div>
<p>&nbsp;</p>
<p>显示进程树</p>
<div class="cnblogs_code">
<pre>[amonest@centos-server ~]$ pstree -<span style="color: #000000;">a
init
├─auditd
│ └─{auditd}
├─avahi</span>-<span style="color: #000000;">daemon
│ └─avahi</span>-<span style="color: #000000;">daemon
├─crond
├─rsyslogd </span>-i /var/run/syslogd.pid -c <span style="color: #800080;">4</span><span style="color: #000000;">
│ ├─{rsyslogd}
│ ├─{rsyslogd}
│ └─{rsyslogd}
├─sshd
│ └─sshd
│ └─sshd
│ └─bash
│ └─pstree </span>-<span style="color: #000000;">a
└─udevd </span>-<span style="color: #000000;">d
├─udevd </span>-<span style="color: #000000;">d
└─udevd </span>-d</pre>
</div>
<p>&nbsp;</p>
<p>在man page中搜索某个关键词(仅限在命令名称中搜索)</p>
<div class="cnblogs_code">
<pre>[amonest@centos-server ~]$ <span style="color: #0000ff;">man</span> -<span style="color: #000000;">f avahi
avahi</span>-daemon (<span style="color: #800080;">8</span>) - The Avahi mDNS/DNS-<span style="color: #000000;">SD daemon
avahi</span>-daemon.conf [avahi-daemon] (<span style="color: #800080;">5</span>) - avahi-daemon configuration <span style="color: #0000ff;">file</span><span style="color: #000000;">
avahi.hosts [avahi] (</span><span style="color: #800080;">5</span>) - avahi-daemon static host name <span style="color: #0000ff;">file</span><span style="color: #000000;">
avahi.service [avahi](</span><span style="color: #800080;">5</span>) - avahi-daemon static service <span style="color: #0000ff;">file</span></pre>
</div>
<p>&nbsp;</p>
<p>在man page中搜索某个关键词(在命令名称和命令说明中搜索)</p>
<div class="cnblogs_code">
<pre>[amonest@centos-server ~]$ <span style="color: #0000ff;">man</span> -<span style="color: #000000;">k print
arch (</span><span style="color: #800080;">1</span>) - print machine hardware name (same as <span style="color: #0000ff;">uname</span> -<span style="color: #000000;">m)
base64 (</span><span style="color: #800080;">1</span>) - base64 encode/<span style="color: #000000;">decode data and print to standard output
blkid (</span><span style="color: #800080;">8</span>) - command-line utility to <span style="color: #0000ff;">locate</span>/<span style="color: #000000;">print block device attributes
</span><span style="color: #0000ff;">cat</span> (<span style="color: #800080;">1</span>) -<span style="color: #000000;"> concatenate files and print on the standard output
consoletype (</span><span style="color: #800080;">1</span>) -<span style="color: #000000;"> print type of the console connected to standard input
</span><span style="color: #0000ff;">date</span> (<span style="color: #800080;">1</span>) - print or set the system <span style="color: #0000ff;">date</span> and <span style="color: #0000ff;">time</span></pre>
</div>
<p>&nbsp;</p>
<p>查询某个包是否已经安装：</p>
<div class="cnblogs_code">
<pre>[amonest@centos-server ~]$ rpm -qa | <span style="color: #0000ff;">grep</span> -i <span style="color: #0000ff;">ssh</span><span style="color: #000000;">
openssh</span>-server-<span style="color: #800080;">5</span>.3p1-<span style="color: #800080;">70</span><span style="color: #000000;">.el6.x86_64
libssh2</span>-<span style="color: #800080;">1.2</span>.<span style="color: #800080;">2</span>-<span style="color: #800080;">7</span>.el6_1.<span style="color: #800080;">1</span><span style="color: #000000;">.x86_64
openssh</span>-<span style="color: #800080;">5</span>.3p1-<span style="color: #800080;">70</span><span style="color: #000000;">.el6.x86_64
openssh</span>-askpass-<span style="color: #800080;">5</span>.3p1-<span style="color: #800080;">70</span><span style="color: #000000;">.el6.x86_64
openssh</span>-clients-<span style="color: #800080;">5</span>.3p1-<span style="color: #800080;">70</span>.el6.x86_64</pre>
</div>
<p>&nbsp;</p>
<p>查询某个包的配置文件：</p>
<div class="cnblogs_code">
<pre>[amonest@centos-server ~]$ rpm -qc openssh-<span style="color: #000000;">server
</span>/etc/pam.d/<span style="color: #0000ff;">ssh</span>-<span style="color: #000000;">keycat
</span>/etc/pam.d/<span style="color: #000000;">sshd
</span>/etc/<span style="color: #0000ff;">ssh</span>/<span style="color: #000000;">sshd_config
</span>/etc/sysconfig/sshd</pre>
</div>]]></description></item><item><title>man和info命令</title><link>http://www.cnblogs.com/eastson/archive/2012/07/16/2591938.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 16 Jul 2012 00:37:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/16/2591938.html</guid><description><![CDATA[<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071423293125.png" alt="" /></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071423301925.png" alt="" /></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071423304292.png" alt="" /></p>]]></description></item><item><title>系统管理员最需要自动化的十大任务【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/07/13/2590182.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 13 Jul 2012 06:33:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/13/2590182.html</guid><description><![CDATA[<p><span>一个做什么事情都亲自动手的系统管理员，他浪费的不仅仅是他自己的时间，也是你的时间。那些需要系统管理员重复执行的任务应该被自动化。通过脚本、专用的软件和系统调度把这些任务自动化，可以节省系统管理员的时间，也可以为你节省开支，防止人为错误的发生。这10个系统管理员的任务是自动化的首要目标，它们可以帮助你把日常工作自动化。</span><br /><br /><strong>1、打补丁</strong><br /><span>只有针对极少数没有提供自动打补丁机制的系统，才应该手动打补丁。Linux和Windows都提供了自动更新的工具，但是如果你想控制你的系统接收哪个补丁，何时接收它们，可以研究一下HP's Data Center Automation Center (HPDCAC)（过去叫做Opsware）。HPDCAC（HP's Data Center Automation Center ）不仅仅是一个自动打补丁的应用程序，它可以通过一个单一的，简单的用户界面管理复杂的基础设施。如果你正在找一个存粹的打补丁的解决方案，可以试试Ecora's Patch Manager，它支持无代理的补丁管理。</span><br /><br /><strong>2、用户和组的维护</strong><br /><span>你可能使用过Active Directory， LDAP， NIS+或其他的用户和组账户管理软件，但是，你使用过一个真正能令你满意的用户和组账户管理软件吗？它们都不能令你满意的原因是它们都没有提供太多的自动化机制。当然，你可以创建一个用户账户，删除一个用户账户，创建一些组，管理这些组，但是，当涉及到实际的管理任务的时候，你可能就找不到合适的工具了。你不得不通过脚本自己创建一个这样的工具。</span><br /><br /><span>在UNIX中，创建脚本来提醒你哪些账户是你希望删除的，让系统把用户的文件拷贝到一个新位置，改变权限，在所有系统中搜索某个用户的任意一些文件，改变这些文件的权限，或者通过从目录服务中删除一个用户账户来删除它们，都是很简单的。可以看看你选择的用户管理工具的附加模块是否提供了这样的功能。例如，微软提供了Active Directory Resource Kit Book和包含了常用的自动化脚本的CD。</span><br /><br /><strong>3、安全扫描</strong><br /><span>你应该定期地在你的整个网络中执行自动化的安全扫描，来发现和修复任何一个网络漏洞。扫描的频率和深度和你的网络的复杂性有关。通过编写脚本，你可以创建计划扫描，把扫描的结果发送到数据库，从数据库中提取被发送的扫描报告，然后email给你自己，或者是把这个报告制作成HTML版本，方便在线浏览。有这样的一个工具，它适用于所有的现代操作系统，它就是Nmap。Nmap是一个免费的网络安全扫描器，它是专门为快速地扫描大型的网络和报告漏洞而设计的。</span><br /><br /><strong>4、磁盘使用率扫描</strong><br /><span>在用户和系统管理员之间，存在着一场旷日持久的，激烈的&ldquo;地盘争夺战&rdquo;，这是一场系统管理员必须要获胜的&ldquo;战争&rdquo;。为了达到这个目的，系统管理员可以使用一些&ldquo;手段&rdquo;：磁盘空间限额，磁盘分区和磁盘空间扫描。那些扫描主要是定期地对用户的磁盘空间使用率进行检查。在私下里联系系统管理员以前，犯错误的人通常会收到一到两个警告。对于那些磁盘空间的&ldquo;蚕食者&rdquo;，通常的补救方法是临时禁用它的账户，删除文件，把文件移动到一个新的位置，或者是扩展磁盘空间的限额。那些定期（大约每周一次）进行的自动化扫描可以防止系统管理员做出粗暴的举动，让用户知道他们的磁盘空间的使用情况。</span><br /><br /><strong>5、性能监控</strong><br /><span>如果想要观察单一时间点的系统性能，做一个临时的性能快照是一个好方法。这种方法只能观察到整个性能图像中的一个像素。你需要具有一定的深度和广度的，可以提供性能趋势和高峰值和低估值预测的工具。使用Orca来建立一个这样的系统是很容易的。Orca可以汇编来自于不同数据源（UNIX， Windows， Linux）的性能数据，然后建立一个直观的性能图像。它可以自动地进行数据的收集，计算，图像的生成和显示。</span><br /><br /><strong>6、文件传输</strong><br /><span>使用命令行脚本（Windows， UNIX 和 Linux），你可以在主机之间自动地进行文件传输。你无需通过人机对话来完成这个任务。如果你足够聪明，你可以建立各种详细的自动化方案，实际上，不但传输你的文件的过程可以自动化，解压缩，改变权限，移动，拷贝和插入信息到一个数据库中等过程也可以自动化。使用文件传输协议的安全版本（例如：SSH， SFTP， SCP），可以确保任何人都无法从你的网络数据流中窃取重要的密码。</span><br /><br /><strong>7、代码升级</strong><br /><span>你如何把测试阶段的代码升级成正式产品，这会对营销活动和其他特定时间段的活动产生很大的影响。手动地把代码从一个环境迁移到另一个环境十分繁琐，而且容易出错，这需要开发者和系统管理员之间的紧密配合才能完成。可以让你的开发者们使用自动化的代码部署系统把代码从一个环境迁移到另一个环境。一些系统管理员使用RSYNC（官方主页：</span><a href="http://rsync.samba.org/" target="_blank">http://rsync.samba.org/</a><span>）来实现自动化的代码部署，如果和SSH key配合使用，可以让主机之间的文件传输更加安全。</span><br /><br /><strong>8、高级管理</strong><br /><span>你可以通过自动化来进行内务管理，重新启动服务和发送维护通知。你可以建立一些脚本，让它们在相对空闲的时间里清除各种临时文件，重新启动你喜欢的服务，通过email发送维护和宕机通知。你会发现，自动化这些任务会让你很难记住你需要在那一天，做哪个列表上的事情。没有必要把这些事情放在日程表中；让系统处理它们。</span><br /><br /><strong>9、重新启动</strong><br /><span>是的，你可以把系统重新启动的过程自动化。坐在那里等着系统恢复正常只是在浪费时间。应该在相对空闲的时间让这个过程自动化地进行。不用担心，如果这个系统没有在合适的时间内恢复正常状态，你的自动化监控系统会通知你。</span><br /><br /><strong>10、恶意软件扫描</strong><br /><span>你可以通过自动化的流程扫描间谍软件，恶意软件，病毒和其他有害程序。使用脚本，你可以映射和挂载一些驱动器，扫描你的文件系统，当扫描完成的时候中断连接，清除正常的文件的扫描日志，然后把扫描结果发送到一个数据库或一封email中。当你的系统运行良好，而且适合自己做这些事情的时候，你无需手动进行这些扫描。</span></p>
<p><span>&nbsp;</span></p>
<p><span>原文地址：<a href="http://bbs.chinaunix.net/thread-3731208-1-3.html" target="_blank">http://bbs.chinaunix.net/thread-3731208-1-3.html</a></span></p>]]></description></item><item><title>man page中的数字</title><link>http://www.cnblogs.com/eastson/archive/2012/07/12/2588447.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 12 Jul 2012 09:03:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/12/2588447.html</guid><description><![CDATA[<p>查看date命令的man page时，我们会发现&ldquo;DATE(1)&rdquo;这样的内容。DATE我们知道是命令的名称， 那后面的数字1代表什么呢？它代表的是&ldquo;一般用户可使用的指令&rdquo;的意思！</p>
<p>常见的几个数字的意义是这样的：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071217005122.png" alt="" /></p>
<p>&nbsp;</p>]]></description></item><item><title>CentOS实验六：设置命令提示符</title><link>http://www.cnblogs.com/eastson/archive/2012/07/12/2587984.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 12 Jul 2012 05:54:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/12/2587984.html</guid><description><![CDATA[<p>CentOS默认的命令提示符是这样的：</p>
<div class="cnblogs_code">
<pre>[amonest@centos-server profile.d]$ </pre>
</div>
<p>&nbsp;</p>
<p><span>只列出了当前工作目录的最后一部分，有时候不是很方便。我想把它改成能够显示完整的当前工作目录。</span></p>
<p><span>&nbsp;</span></p>
<p>在/etc/profile.d目录下创建文件shell-prompt，该文件内容如下：</p>
<div class="cnblogs_code">
<pre>export PS1=<span style="color: #800000;">"</span><span style="color: #800000;">[\u@\h \w]\$ </span><span style="color: #800000;">"</span></pre>
</div>
<p>&nbsp;</p>
<p>然后启用该脚本：</p>
<div class="cnblogs_code">
<pre>[amonest@centos-server profile.d]$ source /etc/profile.d/shell-prompt.<span style="color: #0000ff;">sh</span></pre>
</div>
<p>&nbsp;</p>
<p>OK，可以发现命令提示符成功地被改变了：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071213534275.png" alt="" /></p>
<p><span>&nbsp;</span></p>
<p>更多关于Linux命令提示符的信息请参考文档《<a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_0" href="http://www.cnblogs.com/eastson/archive/2012/07/12/2587863.html" target="_blank">Linux命令提示符设置</a>》。</p>]]></description></item><item><title>Linux命令提示符设置</title><link>http://www.cnblogs.com/eastson/archive/2012/07/12/2587863.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 12 Jul 2012 04:27:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/12/2587863.html</guid><description><![CDATA[<p>PS1（是数字1而不是字母l），每个版本bash的PS1变量内的特殊符号可能有些小的差异，你可以先man bash 一下。下面是FC4环境下</p>
<p>Linux系统提示符是用系统变量PS1来定义的。一般系统默认的形式是PS1='[\u@\h \W]\$ '，所以默认的提示符就是： [root@linux ~]#。</p>
<p>&nbsp;</p>
<p>PS1：就是用户平时的提示符。</p>
<p>PS2：第一行没输完，等待第二行输入的提示符。</p>
<p>&nbsp;</p>
<p>默认的特殊符号所代表的意义：</p>
<ul>
<li>\d ：代表日期，格式为weekday month date，例如："Mon Aug 1"</li>
<li>\H ：完整的主机名称。例如：我的机器名称为：fc4.linux，则这个名称就是fc4.linux</li>
<li>\h ：仅取主机的第一个名字，如上例，则为fc4，<strong>.</strong><a href="http://space.itpub.net/25380220/viewspace-710342" target="_self"><span style="text-decoration: underline;"><strong>linux</strong></span></a>则被省略</li>
<li>\t ：显示时间为24小时格式，如：HH：MM：SS</li>
<li>\T ：显示时间为12小时格式</li>
<li>\A ：显示时间为24小时格式：HH：MM</li>
<li>\u ：当前用户的账号名称</li>
<li>\v ：BASH的版本信息</li>
<li>\w ：完整的工作目录名称。家目录会以 ~代替</li>
<li>\W ：利用basename取得工作目录名称，所以只会列出最后一个目录</li>
<li>\# ：下达的第几个命令</li>
<li>\$ ：提示字符，如果是root时，提示符为：# ，普通用户则为：$</li>
</ul>
<p>&nbsp;</p>
<div>我们可以通过设置PS1变量使得提示符变成彩色。在PS1中设置字符序列颜色的格式为：</div>
<div>
<div class="cnblogs_code">
<pre>\<span style="color: #800000; font-weight: bold;">[</span><span style="color: #800000;">\e[F;Bm\</span><span style="color: #800000; font-weight: bold;">]</span>    </pre>
</div>
<p>其中：&ldquo;F&rdquo;为字体颜色，编号30~37；&ldquo;B&rdquo;为背景色，编号40~47。</p>
<p>&nbsp;</p>
<p>不过呢，能设置颜色，他就肯定能够取消设置，注意：这里的取消设置，和不设置是两吗事情！取消设置的格式为：</p>
<div class="cnblogs_code">
<pre>\<span style="color: #800000; font-weight: bold;">[</span><span style="color: #800000;">\e[m\</span><span style="color: #800000; font-weight: bold;">]</span></pre>
</div>
<p>&nbsp;</p>
</div>
<div>颜色表：</div>
<div>
<div class="cnblogs_code">
<pre><span style="color: #000000;">   前景    背景     颜色
　　</span>30      40<span style="color: #000000;">      黑色
　　</span>31      41<span style="color: #000000;">      红色
　　</span>32      42<span style="color: #000000;">      绿色
　　</span>33      43<span style="color: #000000;">      黄色
　　</span>34      44<span style="color: #000000;">      蓝色
　　</span>35      45<span style="color: #000000;">      紫红色
　　</span>36      46<span style="color: #000000;">      青蓝色
　　</span>37      47      白色</pre>
</div>
<p>&nbsp;</p>
</div>
<div>例如：</div>
<div>
<div class="cnblogs_code">
<pre><span style="color: #800000; font-weight: bold;">"[</span><span style="color: #800000;">\[\e[32m\</span><span style="color: #800000; font-weight: bold;">]</span>#\##\<span style="color: #800000; font-weight: bold;">[</span><span style="color: #800000;">\e[31m\</span><span style="color: #800000; font-weight: bold;">]</span>\u@\<span style="color: #800000; font-weight: bold;">[</span><span style="color: #800000;">\e[36m\</span><span style="color: #800000; font-weight: bold;">]</span>\h \w]\$\<span style="color: #800000; font-weight: bold;">[</span><span style="color: #800000;">\e[m\</span><span style="color: #800000; font-weight: bold;">]"</span></pre>
</div>
<p>&nbsp;最后的提示符应该是这样的：[<span style="color: #23ff23;">#4#</span><span style="color: #cc0000;">caopeng@</span>cp ~]$</p>
</div>]]></description></item><item><title>CentOS实验五：设置主机名称</title><link>http://www.cnblogs.com/eastson/archive/2012/07/12/2587792.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 12 Jul 2012 03:37:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/12/2587792.html</guid><description><![CDATA[<p>CentOS安装后默认的主机名称是localhost.localdomain，我想把它改成centos-server.virtual-domain。</p>
<p>&nbsp;</p>
<p>打开/etc/sysconfig/network文件，原先的内容应该是这样的：</p>
<div class="cnblogs_code">
<pre>NETWORKING=<span style="color: #000000;">yes
HOSTNAME</span>=localhost.localdomain</pre>
</div>
<p>&nbsp;</p>
<p>把最后一行HOSTNAME修改成需要的名称：</p>
<div class="cnblogs_code">
<pre>NETWORKING=<span style="color: #000000;">yes
HOSTNAME</span>=centos-server.virtual-domain</pre>
</div>
<p>&nbsp;</p>
<p>最后，重启主机（重启网络服务好像没有用，必须重启主机），可以看到修改后的名称了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071211364919.png" alt="" /></p>]]></description></item><item><title>CentOS实验四：为虚拟机配置双网卡</title><link>http://www.cnblogs.com/eastson/archive/2012/07/12/2587507.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 12 Jul 2012 03:01:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/12/2587507.html</guid><description><![CDATA[<p>我的CentOS Server是在Windows 7上用VMware Workstation实现的一个虚拟（<a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/archive/2012/07/10/2580863.html" target="_blank">安装CentOS Server</a>），为什么要为它配置双网卡呢？</p>
<p>&nbsp;</p>
<p>原因一：公司管控了电脑的Internet权限，绑定了网域帐号和IP地址。所以，在虚拟机中需要一块采用NAT模式的网卡，才能透过主机实现上网。</p>
<p>原因二：我需要在公司的其它电脑上能够用SSH方式登录虚拟机。这就需要一块Bridged模式的网卡，将虚拟机IP地址设置成与主机相同的网段。</p>
<p>&nbsp;</p>
<p>关于虚拟机网络配置的更多信息请参考文档《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/07/05/2577236.html" target="_blank">VirtualBox虚拟机网络设置</a>》。</p>
<p>&nbsp;</p>
<p>1. 配置虚拟机，在原有NAT网卡基础上再添加一块Bridged网卡。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071209403879.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. /etc/sysconfig/network-scripts是CentOS的网络配置目录。第一块网卡（NAT）的配置文件是ifcfg-eth0，相应的第二块网卡（Bridged）的配置文件是ifcfg-eth1，其余的以此类推。ifcfg-eth0文件安装后默认应该是存在的，该文件原来的内容应该类似下面这样：</p>
<div class="cnblogs_code">
<pre>DEVICE="eth0"<span style="color: #000000;">
HWADDR</span>="00:0C:29:16:7A:CA"<span style="color: #000000;">
NM_CONTROLLED</span>="yes"<span style="color: #000000;">
ONBOOT</span>="no"</pre>
</div>
<p>将该文件替换成下面的内容：</p>
<div class="cnblogs_code">
<pre>DEVICE=<span style="color: #000000;">eth0
BOOTPROTO</span>=<span style="color: #000000;">dhcp
ONBOOT</span>=yes</pre>
</div>
<p>该网卡采用dhcp动态分配IP地址，使用VMware提供的DHCP服务。</p>
<p>&nbsp;</p>
<p>3. 配置第二块网卡（Bridged）。该网卡的配置文件是ifcfg-eth1，默认是不存在的，需要先创建该文件。创建完成后用下面的内容替换该文件：</p>
<div class="cnblogs_code">
<pre>DEVICE=<span style="color: #000000;">eth1
BOOTPROTO</span>=<span style="color: #000000;">static
IPADDR</span>=192.168.12.215<span style="color: #000000;">
NETMASK</span>=255.255.255.0<span style="color: #000000;">
ONBOOT</span>=yes</pre>
</div>
<p>该网卡静态指定IP地址192.168.12.215，其它参数（子网掩码和网关）视网络情况具体而定。</p>
<p>&nbsp;</p>
<p>4. 重启网络服务。重启网络服务可以检查当前的配置是否正确。因为我们在两个配置文件里面都设了ONBOOT=yes，所以下次服务器重启后会自动按照配置文件设置网络服务。</p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# service network restart</pre>
</div>
<p>&nbsp;</p>
<p>5. OK，最后我们用ifconfig命令检查一下最终的结果。</p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# <span style="color: #0000ff;">ifconfig</span><span style="color: #000000;">
eth0      Link encap:Ethernet  HWaddr </span><span style="color: #800080;">00</span>:0C:<span style="color: #800080;">29</span>:<span style="color: #800080;">16</span><span style="color: #000000;">:7A:CA  
          inet addr:</span><span style="color: #800080;">192.168</span>.<span style="color: #800080;">197.143</span>  Bcast:<span style="color: #800080;">192.168</span>.<span style="color: #800080;">197.255</span>  Mask:<span style="color: #800080;">255.255</span>.<span style="color: #800080;">255.0</span><span style="color: #000000;">
          inet6 addr: fe80::20c:29ff:fe16:7aca</span>/<span style="color: #800080;">64</span><span style="color: #000000;"> Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:</span><span style="color: #800080;">1500</span>  Metric:<span style="color: #800080;">1</span><span style="color: #000000;">
          RX packets:</span><span style="color: #800080;">28</span> errors:<span style="color: #800080;">0</span> dropped:<span style="color: #800080;">0</span> overruns:<span style="color: #800080;">0</span> frame:<span style="color: #800080;">0</span><span style="color: #000000;">
          TX packets:</span><span style="color: #800080;">48</span> errors:<span style="color: #800080;">0</span> dropped:<span style="color: #800080;">0</span> overruns:<span style="color: #800080;">0</span> carrier:<span style="color: #800080;">0</span><span style="color: #000000;">
          collisions:</span><span style="color: #800080;">0</span> txqueuelen:<span style="color: #800080;">1000</span><span style="color: #000000;"> 
          RX bytes:</span><span style="color: #800080;">3618</span> (<span style="color: #800080;">3.5</span> KiB)  TX bytes:<span style="color: #800080;">6508</span> (<span style="color: #800080;">6.3</span><span style="color: #000000;"> KiB)

eth1      Link encap:Ethernet  HWaddr </span><span style="color: #800080;">00</span>:0C:<span style="color: #800080;">29</span>:<span style="color: #800080;">16</span><span style="color: #000000;">:7A:D4  
          inet addr:</span><span style="color: #800080;">192.168</span>.<span style="color: #800080;">12.215</span>  Bcast:<span style="color: #800080;">192.168</span>.<span style="color: #800080;">12.255</span>  Mask:<span style="color: #800080;">255.255</span>.<span style="color: #800080;">255.0</span><span style="color: #000000;">
          inet6 addr: fe80::20c:29ff:fe16:7ad4</span>/<span style="color: #800080;">64</span><span style="color: #000000;"> Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:</span><span style="color: #800080;">1500</span>  Metric:<span style="color: #800080;">1</span><span style="color: #000000;">
          RX packets:</span><span style="color: #800080;">8524</span> errors:<span style="color: #800080;">0</span> dropped:<span style="color: #800080;">0</span> overruns:<span style="color: #800080;">0</span> frame:<span style="color: #800080;">0</span><span style="color: #000000;">
          TX packets:</span><span style="color: #800080;">275</span> errors:<span style="color: #800080;">0</span> dropped:<span style="color: #800080;">0</span> overruns:<span style="color: #800080;">0</span> carrier:<span style="color: #800080;">0</span><span style="color: #000000;">
          collisions:</span><span style="color: #800080;">0</span> txqueuelen:<span style="color: #800080;">1000</span><span style="color: #000000;"> 
          RX bytes:</span><span style="color: #800080;">823502</span> (<span style="color: #800080;">804.2</span> KiB)  TX bytes:<span style="color: #800080;">31804</span> (<span style="color: #800080;">31.0</span><span style="color: #000000;"> KiB)

lo        Link encap:Local Loopback  
          inet addr:</span><span style="color: #800080;">127.0</span>.<span style="color: #800080;">0.1</span>  Mask:<span style="color: #800080;">255.0</span>.<span style="color: #800080;">0.0</span><span style="color: #000000;">
          inet6 addr: ::</span><span style="color: #800080;">1</span>/<span style="color: #800080;">128</span><span style="color: #000000;"> Scope:Host
          UP LOOPBACK RUNNING  MTU:</span><span style="color: #800080;">16436</span>  Metric:<span style="color: #800080;">1</span><span style="color: #000000;">
          RX packets:</span><span style="color: #800080;">0</span> errors:<span style="color: #800080;">0</span> dropped:<span style="color: #800080;">0</span> overruns:<span style="color: #800080;">0</span> frame:<span style="color: #800080;">0</span><span style="color: #000000;">
          TX packets:</span><span style="color: #800080;">0</span> errors:<span style="color: #800080;">0</span> dropped:<span style="color: #800080;">0</span> overruns:<span style="color: #800080;">0</span> carrier:<span style="color: #800080;">0</span><span style="color: #000000;">
          collisions:</span><span style="color: #800080;">0</span> txqueuelen:<span style="color: #800080;">0</span><span style="color: #000000;"> 
          RX bytes:</span><span style="color: #800080;">0</span> (<span style="color: #800080;">0.0</span> b)  TX bytes:<span style="color: #800080;">0</span> (<span style="color: #800080;">0.0</span> b)</pre>
</div>
<p>&nbsp;</p>
<p>参考链接：</p>
<ul>
<li id="questionTitle"><a href="http://wenwen.soso.com/z/q283970315.htm" target="_blank">linux 命令route add default dev eth0和route add default gw eth0的区别？</a></li>
</ul>
<ul>
<li class="_mce_tagged_br"><a href="http://www.tuicool.com/articles/FBRBny" target="_blank">Linux Route Command Examples (How to Add Route in Linux)</a></li>
</ul>]]></description></item><item><title>CentOS实验三：使用安装光盘建立本地软件源</title><link>http://www.cnblogs.com/eastson/archive/2012/07/11/2584937.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 11 Jul 2012 08:54:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/11/2584937.html</guid><description><![CDATA[<p>本实验的目的是使用CentOS的两张DVD安装光盘作为本地软件源，避免执行yum安装命令时每次都要从网络重新下载。</p>
<p>&nbsp;</p>
<h3>安装createrepo软件包</h3>
<p>createrepo是制作软件源所需要的一个工具，默认的CentOS最小安装不会安装该软件包。该软件包在CentOS第一张安装DVD里，需要我们手动安装。</p>
<p>&nbsp;</p>
<p>1. 启动CentOS Server。将CentOS第一张安装DVD放入光驱，挂载到/media/cdrom目录。</p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# <span style="color: #0000ff;">mkdir</span> -p /media/<span style="color: #000000;">cdrom
[root@localhost </span>~]# <span style="color: #0000ff;">mount</span> -t iso9660 /dev/cdrom /media/cdrom</pre>
</div>
<p>&nbsp;</p>
<p>2. CentOS所有的软件源都定义在/etc/yum.repos.d目录。默认安装已经定义了一个c6-media的软件源，处于禁用状态。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071114131169.png" alt="" /></p>
<p>打开/etc/yum.repos.d/CentOS-Media.repo文件，我们可以发现该软件源的位置列表中有一项刚好指向/media/cdrom目录：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071114170672.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 使用c6-media软件源安装createrepo软件包。</p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# yum --disablerepo=* --enablerepo=c6-media <span style="color: #0000ff;">install</span> createrepo</pre>
</div>
<p>&nbsp;</p>
<h3>制作安装DVD光盘镜像</h3>
<p>本过程将两张CentOS安装DVD制作成ISO镜像文件，放到/media目录。</p>
<p>&nbsp;</p>
<p>1. 将第一张DVD放进光驱，执行如下命令：</p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# <span style="color: #0000ff;">dd</span> <span style="color: #0000ff;">if</span>=/dev/cdrom of=/media/CentOS-<span style="color: #800080;">6.2</span>-x86_64-bin-DVD1.iso</pre>
</div>
<p>&nbsp;</p>
<p>2. 换第二张DVD放进光驱，执行如下命令：</p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# <span>dd</span> <span>if</span>=/dev/cdrom of=/media/CentOS-<span>6.2</span>-x86_64-bin-DVD2.iso</pre>
</div>
<p>&nbsp;</p>
<p>OK，现在/media目录下应该多出来了两个ISO文件。</p>
<p>&nbsp;</p>
<h3>制作本地软件源</h3>
<p>本实验制作的本地软件源计划放在/usr/local/yum目录下，其中子目录dvd1挂载第一个ISO文件，子目录dvd2挂载第二个ISO文件。</p>
<p>&nbsp;</p>
<p>1. 创建/usr/local/yum目录，挂载DVD ISO文件。&nbsp;</p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# <span style="color: #0000ff;">mkdir</span> -p /usr/local/yum/dvd{<span style="color: #800080;">1</span>,<span style="color: #800080;">2</span><span style="color: #000000;">}
[root@localhost </span>~]# <span style="color: #0000ff;">mount</span> -o loop /media/CentOS-<span style="color: #800080;">6.2</span>-x86_64-bin-DVD1.iso /usr/local/yum/<span style="color: #000000;">dvd1
[root@localhost </span>~]# <span style="color: #0000ff;">mount</span> -o loop /media/CentOS-<span style="color: #800080;">6.2</span>-x86_64-bin-DVD2.iso /usr/local/yum/dvd2</pre>
</div>
<p>&nbsp;</p>
<p>2. 使用createrepo命令创建软件源目录。</p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# createrepo /usr/local/yum</pre>
</div>
<p>该执行执行完毕后可以发现在/usr/local/yum目录下多出来了一个名为repodata的子目录。</p>
<p>&nbsp;</p>
<p>3. 建立软件源定义文件/etc/yum.repos.d/CentOS-ISO.repo。该文件内容如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #800000; font-weight: bold;">[</span><span style="color: #800000;">c6-iso</span><span style="color: #800000; font-weight: bold;">]</span><span style="color: #000000;">
name</span>=<span style="color: #000000;">CentOS-$releasever - ISO
baseurl</span>=<span style="color: #000000;">file:///usr/local/yum/
gpgcheck</span>=0<span style="color: #000000;">
enabled</span>=1</pre>
</div>
<p>&nbsp;</p>
<p>4. 打开/ect/yum.repos.d/CentOS-Base.repo文件，禁用其中定义的软件源（加上enabled=0）：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071116223853.png" alt="" /></p>
<p>如果还有其它启用的软件源，也按此方法将它们禁用。最后，所有软件源的状态应该类似下图：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071116281110.png" alt="" /></p>
<p>&nbsp;</p>
<p>OK，到此为止，本地软件源c6-iso成功建立了，使用yum命令测试一下我们的成果：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071116523056.png" alt="" /></p>
<p>&nbsp;&nbsp;</p>
<p>参考文档：<a href="http://www.cnblogs.com/eastson/archive/2012/07/06/2578758.html" target="_blank">http://www.cnblogs.com/eastson/archive/2012/07/06/2578758.html</a></p>]]></description></item><item><title>mount命令</title><link>http://www.cnblogs.com/eastson/archive/2012/07/10/2585010.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 10 Jul 2012 09:22:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/10/2585010.html</guid><description><![CDATA[<h3><span style="font-size: small;">命令格式</span></h3>
<p><strong><span style="font-size: small;">mount [-t vfstype] [-o options] device dir</span></strong></p>
<p><span style="font-size: small;">其中：</span></p>
<p><span style="font-size: small;">1.-t vfstype指定文件系统的类型，通常不必指定。mount会自动选择正确的类型。常用类型有：</span></p>
<p><span style="font-size: small;">　　光盘或光盘镜像：iso9660</span></p>
<p><span style="font-size: small;">　　DOS fat16文件系统：msdos</span></p>
<p><span style="font-size: small;">　　Windows 9x fat32文件系统：vfat</span></p>
<p><span style="font-size: small;">　　Windows NT ntfs文件系统：ntfs</span></p>
<p><span style="font-size: small;">　　Mount Windows文件网络共享：smbfs</span></p>
<p><span style="font-size: small;">　　UNIX(LINUX)文件网络共享：nfs</span></p>
<p><span style="font-size: small;">2.-o options主要用来描述设备或档案的挂接方式。常用的参数有：</span></p>
<p><span style="font-size: small;">　　loop：用来把一个文件当成硬盘分区挂接上系统</span></p>
<p><span style="font-size: small;">　　ro：采用只读方式挂接设备</span></p>
<p><span style="font-size: small;">　　rw：采用读写方式挂接设备</span></p>
<p><span style="font-size: small;">　　iocharset：指定访问文件系统所用字符集</span></p>
<p><span style="font-size: small;">3.device要挂接(mount)的设备。</span></p>
<p><span style="font-size: small;">4.dir设备在系统上的挂接点(mount point)。</span></p>
<p><span style="font-size: small;">&nbsp;</span></p>
<h3><span style="font-size: small;">挂接光盘镜像文件</span></h3>
<p><span style="font-size: small;">在Windows下许多人都习惯把软件和资料做成光盘镜像文件通过虚拟光驱来使用。linux系统下制作和使用光盘镜像比Windows系统更方便，不必借用任何第三方软件包。</span></p>
<p><span style="font-size: small;">&nbsp;</span></p>
<p><span style="font-size: small;">1、从光盘制作光盘镜像文件。将光盘放入光驱，执行下面的命令。</span>&nbsp;</p>
<div class="cnblogs_code">
<pre>#<span style="color: #0000ff;">cp</span> /dev/cdrom /home/sunky/<span style="color: #000000;">mydisk.iso或
#</span><span style="color: #0000ff;">dd</span> <span style="color: #0000ff;">if</span>=/dev/cdrom of=/home/sunky/mydisk.iso</pre>
</div>
<p>&nbsp;<span style="font-size: small;">注：执行上面的任何一条命令都可将当前光驱里的光盘制作成光盘镜像文件/home/sunky/mydisk.iso。</span></p>
<p><span style="font-size: small;">&nbsp;</span></p>
<p><span style="font-size: small;">2、将文件和目录制作成光盘镜像文件，执行下面的命令。</span>&nbsp;</p>
<div class="cnblogs_code">
<pre>#mkisofs -r -J -V mydisk -o /home/sunky/mydisk.iso /home/sunky/mydir</pre>
</div>
<p><span style="font-size: small;">注：这条命令将/home/sunky/mydir目录下所有的目录和文件制作成光盘镜像文件</span>/home/sunky/mydisk.iso<span style="font-size: small;">，光盘卷标为：mydisk。</span></p>
<p><span style="font-size: small;">&nbsp;</span></p>
<p><span style="font-size: small;">3、光盘镜像文件的挂接(mount)</span>&nbsp;</p>
<div class="cnblogs_code">
<pre>#<span style="color: #0000ff;">mkdir</span> /mnt/vcdrom<br /><span>#</span><strong>mount -o loop -t iso9660 /home/sunky/mydisk.iso /mnt/vcdrom</strong></pre>
</div>
<p>&nbsp;<span style="font-size: small;">注：先</span><span style="font-size: small;">建立一个目录用来作挂接点(mount point)，然后</span><span style="font-size: small;">使用/mnt/vcdrom就可以访问盘镜像文件mydisk.iso里的所有文件了。</span></p>
<p><span style="font-size: small;">&nbsp;</span></p>
<h3><span style="font-size: small;">挂接移动硬盘</span></h3>
<p><span style="font-size: small;">对linux系统而言，USB接口的移动硬盘是当作SCSI设备对待的。插入移动硬盘之前，应先用fdisk &ndash;l或more /proc/partitions查看系统的硬盘和硬盘分区情况。</span></p>
<p><span style="font-size: small;"><span style="line-height: 19px;">&nbsp;</span></span></p>
<p><span style="font-size: small;">大家应该可以发现多了一个SCSI硬盘/dev/sdc和它的两个磁盘分区/dev/sdc1?、/dev/sdc2,其中/dev/sdc5是/dev/sdc2分区的逻辑分区。我们可以使用下面的命令挂接/dev/sdc1和/dev/sdc5。</span>&nbsp;</p>
<div class="cnblogs_code">
<pre>#<span style="color: #0000ff;">mkdir</span> -p /mnt/<span style="color: #000000;">usbhd1
#</span><span style="color: #0000ff;">mkdir</span> -p /mnt/<span style="color: #000000;">usbhd2
#</span><span style="color: #0000ff;">mount</span> -t ntfs /dev/sdc1 /mnt/<span style="color: #000000;">usbhd1
#</span><span style="color: #0000ff;">mount</span> -t vfat /dev/sdc5 /mnt/usbhd2</pre>
</div>
<p>&nbsp;<span style="font-size: small;">注：对ntfs格式的磁盘分区应使用-t ntfs参数，对fat32格式的磁盘分区应使用-t vfat参数。若汉字文件名显示为乱码或不显示，可以使用下面的命令格式。</span>&nbsp;</p>
<div class="cnblogs_code">
<pre>#<span style="color: #0000ff;">mount</span> -t ntfs -o iocharset=cp936 /dev/sdc1 /mnt/<span style="color: #000000;">usbhd1
#</span><span style="color: #0000ff;">mount</span> -t vfat -o iocharset=cp936 /dev/sdc5 /mnt/usbhd2</pre>
</div>
<p>&nbsp;&nbsp;</p>
<p><span style="font-size: small;">linux系统下使用fdisk分区命令和mkfs文件系统创建命令可以将移动硬盘的分区制作成linux系统所特有的ext2、ext3格式。这样，在linux下使用就更方便了。使用下面的命令直接挂接即可。</span>&nbsp;</p>
<div class="cnblogs_code">
<pre>#<span style="color: #0000ff;">mount</span> /dev/sdc1 /mnt/usbhd1</pre>
</div>
<p>&nbsp;&nbsp;</p>
<h3><span style="font-size: small;">挂接U盘</span></h3>
<p><span style="font-size: small;">和USB接口的移动硬盘一样对linux系统而言U盘也是当作SCSI设备对待的。使用方法和移动硬盘完全一样。插入U盘之前，应先用fdisk &ndash;l或more /proc/partitions查看系统的硬盘和硬盘分区情况。</span>&nbsp;</p>
<div class="cnblogs_code">
<pre>#<span style="color: #0000ff;">mkdir</span> -p /mnt/<span style="color: #000000;">usb
#</span><span style="color: #0000ff;">mount</span> -t vfat /dev/sdd1 /mnt/usb</pre>
</div>
<p>&nbsp;<span style="font-size: small;">注：现在可以通过/mnt/usb来访问U盘了,若汉字文件名显示为乱码或不显示，可以使用下面的命令。</span>&nbsp;</p>
<div class="cnblogs_code">
<pre>#<span style="color: #0000ff;">mount</span> -t vfat -o iocharset=cp936 /dev/sdd1 /mnt/usb</pre>
</div>
<p>&nbsp;&nbsp;</p>
<h3><span style="font-size: small;">挂接Windows文件共享</span></h3>
<p><span style="font-size: small;">Windows网络共享的核心是SMB/CIFS，在linux下要挂接(mount)windows的磁盘共享，就必须安装和使用samba软件包。现在流行的linux发行版绝大多数已经包含了samba软件包，如果安装linux系统时未安装samba请首先安装samba。</span></p>
<p><span style="font-size: small;">&nbsp;</span></p>
<p><span style="font-size: small;"><span>查看共享:</span></span>&nbsp;</p>
<div class="cnblogs_code">
<pre>[root@iscsiserver ~]# smbclient  -L <span style="color: #800080;">192.168</span>.<span style="color: #800080;">230.1</span> -<span style="color: #000000;">U administartor (查看共享）
Password: 
Domain</span>=[PC-<span style="color: #800080;">201005281411</span>] OS=[Windows <span style="color: #800080;">5.1</span>] Server=[Windows <span style="color: #800080;">2000</span><span style="color: #000000;"> LAN Manager]

        Sharename       Type      Comment
        </span>---------       ----      -------<span style="color: #000000;">
        IPC$            IPC       杩滅▼ IPC</span></pre>
</div>
<p>&nbsp;&nbsp;</p>
<p><span style="font-size: small;">当windows系统共享设置好以后，就可以在linux客户端挂接(mount)了，具体操作如下：</span>&nbsp;</p>
<div class="cnblogs_code">
<pre># <span style="color: #0000ff;">mkdir</span>&ndash;p /mnt/<span style="color: #000000;">samba
# </span><span style="color: #0000ff;">mount</span> -t smbfs -o username=administrator,password=pldy123 <span style="color: #008000;">//</span><span style="color: #008000;">10.140.133.23/c$ /mnt/samba</span></pre>
</div>
<p>&nbsp;<span style="font-size: small;">注：administrator和pldy123是ip地址为10.140.133.23 windows计算机的一个用户名和密码，c$是这台计算机的一个磁盘共享</span></p>
<p><span style="font-size: small;">如此就可以在linux系统上通过/mnt/samba来访问windows系统磁盘上的文件了。</span></p>]]></description></item><item><title>CentOS实验二：添加操作员帐号</title><link>http://www.cnblogs.com/eastson/archive/2012/07/10/2584836.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 10 Jul 2012 08:06:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/10/2584836.html</guid><description><![CDATA[<p><span>因为root用户对系统具有全权的操作权限，为了避免一些失误的操作，建议在一般情况下，以一般用户登录系统，必要的时候需要root操作权限时，再通过&ldquo;su -&rdquo;命令来登录为root用户进行操作。</span></p>
<p><span>&nbsp;</span></p>
<p><span>1. 创建amonest帐号：</span></p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# useradd amonest</pre>
</div>
<p>&nbsp;</p>
<p>2. 设置amonest密码：</p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# <span style="color: #0000ff;">passwd</span><span style="color: #000000;"> amonest
Changing password </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> user amonest.
New password:             ##输入密码，不会显示
Retype new password:      ##再次输入密码，不会显示
</span><span style="color: #0000ff;">passwd</span>: all authentication tokens updated successfully.</pre>
</div>
<p>&nbsp;</p>
<p>3. 将amonest帐号加入到wheel组。</p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# usermod -G wheel amonest</pre>
</div>
<p>&nbsp;</p>
<p>4. 配置<span>只允许wheel这个组的用户执行&ldquo;su -&rdquo;命令登录为root用户，其他组的用户即使执行&ldquo;su -&rdquo;、输入了正确的root密码，也无法登录为root用户。打开<span>/etc/pam.d/su文件，找到下面这一行，去掉前面的注释后保存：</span></span></p>
<div class="cnblogs_code">
<pre>#auth required pam_wheel.so use_uid</pre>
</div>
<p><span>然后执行下面的命令：</span></p>
<div class="cnblogs_code">
<pre>[root@localhost ~]# <span style="color: #0000ff;">echo</span> <span style="color: #800000;">"</span><span style="color: #800000;">SU_WHEEL_ONLY yes</span><span style="color: #800000;">"</span> &gt;&gt; /etc/<span style="color: #0000ff;">login</span>.defs</pre>
</div>
<p>&nbsp;</p>
<p><span>OK，现在就可以登出root，用amonest登入了。需要root权限的时候使用&ldquo;su -&rdquo;命令就行了。</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071016074243.png" alt="" /></p>
<p><span>&nbsp;</span></p>
<p><span>参考连接：<a href="http://www.cnblogs.com/eastson/archive/2012/07/01/2572187.html" target="_blank">http://www.cnblogs.com/eastson/archive/2012/07/01/2572187.html</a></span></p>]]></description></item><item><title>CentOS实验一：安装CentOS Server</title><link>http://www.cnblogs.com/eastson/archive/2012/07/10/2580863.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 10 Jul 2012 07:30:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/10/2580863.html</guid><description><![CDATA[<p>本实验的目的是记录安装CentOS 6.2服务器的完整过程。</p>
<p>&nbsp;</p>
<p>宿主机：DELL OptiPlex 380，Intel Core2 Duo CPU E7500 2.93GHz，4Gb RAM，Windows 7 旗舰版 64位。</p>
<p>虚拟机软件：VMware Workstation&nbsp;7.0.1 build-227600。</p>
<p>CentOS版本：CentOS 6.2 DVD版本。</p>
<p>&nbsp;</p>
<p>1. 打开VMware Workstation，创建CentOS Server虚拟机。注意，这里的内存可以适当地分得多一点（我分了1024MB），网络选择<a href="http://www.cnblogs.com/eastson/archive/2012/07/05/2577236.html" target="_blank">NAT模式</a>。创建完毕后将下载的第一个CentOS&nbsp;DVD文件挂到虚拟机光驱上。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071014464215.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 启动CentOS Server虚拟机，出现CentOS的安装菜单。我们选择第一项&ldquo;Install or upgrade an existing system&rdquo;，按回车键继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071014565791.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. CentOS安装程序初始完毕后，提示找到了安装媒体，也就是光驱。确认需不需要检查安装媒体的完整性，我们选择&ldquo;Skip&rdquo;跳过。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071014595315.png" alt="" /></p>
<p>&nbsp;</p>
<p>4. CentOS安装程序的欢迎画面，点击右下角的&ldquo;Next&rdquo;按钮继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071015043570.png" alt="" /></p>
<p>&nbsp;</p>
<p>5. 安装过程中使用的语言。选择&ldquo;English&rdquo;，然后继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071015053937.png" alt="" /></p>
<p>&nbsp;</p>
<p>6. 系统所用的键盘类型。选择&ldquo;U.S. English&rdquo;，然后继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071015065782.png" alt="" /></p>
<p>&nbsp;</p>
<p>7. 存储设备的种类。选择&ldquo;Basic Storage Devices&rdquo;，然后继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071015092644.png" alt="" /></p>
<p>&nbsp;</p>
<p>8. CentOS存储设备警告。因为我们使用的是一个全新的硬盘，安装程序在上面找不到分区表和文件系统。选择&ldquo;Yes, discard any data&rdquo;，然后继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071015111590.png" alt="" /></p>
<p>&nbsp;</p>
<p>9. 设置电脑的名称。我们使用默认值"localhost.localdomain"，然后继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071015142173.png" alt="" /></p>
<p>&nbsp;</p>
<p>10. 设置时区。选择&ldquo;Asia/Shanghai&rdquo;，然后继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071015151953.png" alt="" /></p>
<p>&nbsp;</p>
<p>11. 设置root密码。设置完毕后点击&ldquo;Next&rdquo;按钮继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071015160492.png" alt="" /></p>
<p>&nbsp;</p>
<p>12. 硬盘的使用方式。因为是全新硬盘，我们简单的选择&ldquo;Use All Space&rdquo;，使用CentOS默认的分区方式，然后继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071015193883.png" alt="" /></p>
<p>&nbsp;</p>
<p>13. 警告，确认是否将分区信息写入到硬盘，这会丢失硬盘上的原有数据。选择&ldquo;Write changes to disk&rdquo;，然后继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071015195964.png" alt="" /></p>
<p>&nbsp;</p>
<p>14. 安装类型。选择默认类型"Minimal"，然后继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071015213113.png" alt="" /></p>
<p>&nbsp;</p>
<p>15. 执行安装。因为是最小安装，此过程耗时很短（5分钟以内）。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071015230880.png" alt="" /></p>
<p>&nbsp;</p>
<p>16. 安装完毕。提示我们重启系统，重启后建议我们做一次系统的更新。点击"Reboot"按钮重启系统。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071015241626.png" alt="" /></p>
<p>&nbsp;</p>
<p>17. 系统重启。因为是最小安装，所以进入的是文字界面。输入root帐号，密码就是第11步设置的密码。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071015260379.png" alt="" /></p>
<p>&nbsp;</p>
<p>至此，CentOS系统就被我们成功的安装了，后面就是漫长地设置过程了。</p>]]></description></item><item><title>常见装置在Linux系统中的命名</title><link>http://www.cnblogs.com/eastson/archive/2012/07/10/2584289.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 10 Jul 2012 03:15:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/10/2584289.html</guid><description><![CDATA[<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071011135494.png" alt="" /></p>
<p>&nbsp;</p>
<p>我们知道个人计算机常见癿磁盘接口有两种， 分别是IDE与SATA接口。目前的主流已经是SATA接口了，但是老一点的主机其实大部分还是使用IDE接口。 我们称呼<br />可连接到IDE接口的装置为IDE装置，丌管是磁盘还是光盘设备。</p>
<p>&nbsp;</p>
<p>以IDE接口来说，由于一个IDE扁平电缆可以连接两个IDE装置，又通常主机都会提供两个IDE接口，因此最多可以接到四个IDE装置。 也就是说，如果你已经有一个光盘设备了，那举最多就只能再接三个IDE接口的磁盘啰。 这两个IDE接口通常被称为IDE1(primary)及IDE2(secondary)， 而每条<br />扁平电缆上面的IDE装置可以被区分为Master和Slave。这四个IDE装置的文件名为： </p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012071011251260.png" alt="" /></p>
<p><br />例题： 假设你的主机仅有一个IDE接口的磁盘，而这一个磁盘接在IDE2的Master上面，请问他在Linux操作系统里面的装置文件名为何？  <br />答： 比较上表的装置文件名对照，IDE2的Master装置文件名为/dev/hdc 。<br /> <br />再以SATA接口来说，由于SATA/USB/SCSI等磁盘接口都是使用SCSI模块来驱动的， 因此这些接口的磁盘装置文件名都是/dev/sd[a-p]的格式。 但是与IDE接口不同的是，SATA/USB接口的磁盘根本就没有一定的顺序，那如何决定他的装置文件名呢？ 这个时候就得要根据Linux核心侦测到磁盘的顺序了！这里以底下的例子来让你了解啰。</p>
<p>&nbsp;</p>
<p>例题： 如果你的PC上面有两个SATA磁盘以及一个USB磁盘，而主板上面有六个SATA的插槽。这两个SATA磁盘分别安插在主板上的SATA1, SATA5插槽上， 请问这三个磁盘在Linux中的装置文件名为何？&nbsp;</p>
<p>答： 由于是使用侦测到的顺序来决定装置文件名，并非与实际插槽代号有关，因此装置的文件名如下：  <br />1.  SATA1插槽上的檔名：/dev/sda <br />2.  SATA5插槽上的檔名：/dev/sdb <br />3.  USB磁盘(开机完成后才被系统识别到)：/dev/sdc&nbsp;</p>]]></description></item><item><title>Google hosts修改器</title><link>http://www.cnblogs.com/eastson/archive/2012/07/09/2582979.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 09 Jul 2012 08:44:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/09/2582979.html</guid><description><![CDATA[<p><a href="http://cnzhx.net/blog/join-in-google-plus/#visit" target="_blank">如何访问Google+?</a></p>
<p><a href="http://www.qiankuns.com/2010/07/modify-hosts-file-in-windows-7-system.html" target="_blank">Windows 7 中修改hosts文件的方法</a></p>]]></description></item><item><title>Linux技术进阶示意图</title><link>http://www.cnblogs.com/eastson/archive/2012/07/09/2582913.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 09 Jul 2012 08:06:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/09/2582913.html</guid><description><![CDATA[<div id="article_content" class="article_content">
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012070916045930.png" alt="" /></p>
<table border="0" cellspacing="1" cellpadding="0" align="center" bgcolor="#cc3300"><colgroup span="1"><col span="1" width="223" /><col span="1" width="195" /><col span="1" width="186" /><col span="1" width="187" /><col span="1" width="194" /><col span="1" width="184" /></colgroup>
<tbody>
<tr>
<td class="font8" bgcolor="#ccffff" width="113" height="29"><strong>Linux 基础</strong></td>
<td class="font8" bgcolor="#ccffff" width="180"><a href="http://os.51cto.com/art/200512/13583.htm" target="_blank"><span>Linux 基础</span></a></td>
<td class="font8" bgcolor="#ccffff" width="180"><a href="http://os.51cto.com/art/200512/14184.htm" target="_blank"><span>Linux安装专题教程</span></a></td>
<td class="font8" bgcolor="#ccffff" width="180"><a href="http://os.51cto.com/art/200512/14716.htm" target="_blank"><span>Linux中文环境</span></a></td>
<td class="font8" bgcolor="#ccffff" width="180"><a href="http://os.51cto.com/art/200712/62180.htm" target="_blank"><span>Linux&mdash;从菜鸟到高手</span></a></td>
<td class="font8" bgcolor="#ccffff" width="125">　</td>
</tr>
<tr>
<td class="font8" bgcolor="#ccffff" height="29"><strong>　</strong></td>
<td class="font8" bgcolor="#ccffff"><a href="http://book.51cto.com/art/200709/57047.htm" target="_blank"><span>鸟哥的Linux私房菜 基础学习篇（第二版）</span></a></td>
<td class="font8" bgcolor="#ccffff"><a href="http://book.51cto.com/art/200706/49518.htm" target="_blank"><span>Ubuntu Linux入门到精通</span></a></td>
<td class="font8" bgcolor="#ccffff"><a href="http://book.51cto.com/art/200704/46237.htm" target="_blank"><span>Linux标准教程</span></a></td>
<td class="font8" bgcolor="#ccffff"><a href="http://book.51cto.com/art/200711/59804.htm" target="_blank"><span>Linux指令速查手册</span></a></td>
<td class="font8" bgcolor="#ccffff"><a href="http://book.51cto.com/art/200803/67098.htm" target="_blank"><span>Linux标准学习教程</span></a></td>
</tr>
<tr>
<td class="font8" bgcolor="#ccffff"><strong>　</strong></td>
<td class="font8" bgcolor="#ccffff"><a href="http://book.51cto.com/art/200809/90637.htm" target="_blank"><span>Red Hat Linux 指南：基础与系统管理篇</span></a></td>
<td class="font8" bgcolor="#ccffff"><a href="http://book.51cto.com/art/200811/96245.htm" target="_blank"><span>Red Hat Fedora Core Linux 基础应用与配置管理</span></a></td>
<td class="font8" bgcolor="#ccffff">&nbsp;</td>
<td class="font8" bgcolor="#ccffff">&nbsp;</td>
<td class="font8" bgcolor="#ccffff">&nbsp;</td>
</tr>
<tr>
<td class="font8" bgcolor="#ffff99" height="29"><strong>Linux 系统管理</strong></td>
<td class="font8" bgcolor="#ffff99"><a href="http://os.51cto.com/art/200512/14317.htm" target="_blank"><span>Linux系统管理</span></a></td>
<td class="font8" bgcolor="#ffff99"><a href="http://os.51cto.com/art/200712/62417.htm" target="_blank"><span>系统应用日志分析管理</span></a></td>
<td class="font8" bgcolor="#ffff99">　</td>
<td class="font8" bgcolor="#ffff99">　</td>
<td class="font8" bgcolor="#ffff99">　</td>
</tr>
<tr>
<td class="font8" bgcolor="#ffff99" height="29"><strong>　</strong></td>
<td class="font8" bgcolor="#ffff99"><a href="http://book.51cto.com/art/200804/69727.htm" target="_blank"><span>Linux系统管理技术手册（中文第二版）</span></a></td>
<td class="font8" bgcolor="#ffff99"><a href="http://book.51cto.com/art/200807/80538.htm" target="_blank"><span>CentOS 5系统管理</span></a></td>
<td class="font8" bgcolor="#ffff99"><a href="http://book.51cto.com/art/200811/96288.htm" target="_blank"><span>Red Hat Linux 9系统管理与服务器配置</span></a></td>
<td class="font8" bgcolor="#ffff99"><a href="http://book.51cto.com/art/200811/96211.htm" target="_blank"><span>Linux使用技巧与故障排除速查手册</span></a></td>
<td class="font8" bgcolor="#ffff99">　</td>
</tr>
<tr>
<td class="font8" bgcolor="#ffcccc" height="29"><strong>Linux 安全优化</strong></td>
<td class="font8" bgcolor="#ffcccc"><a href="http://book.51cto.com/art/200707/50861.htm" target="_blank"><span>Linux服务器安全策略详解</span></a></td>
<td class="font8" bgcolor="#ffcccc"><a href="http://book.51cto.com/art/200712/62907.htm" target="_blank"><span>Linux安全体系分析与编程</span></a></td>
<td class="font8" bgcolor="#ffcccc"><a href="http://book.51cto.com/art/200810/94193.htm" target="_blank"><span>SELinux实例：使用安全增强的Linux</span></a></td>
<td class="font8" bgcolor="#ffcccc">　</td>
<td class="font8" bgcolor="#ffcccc">　</td>
</tr>
<tr>
<td class="font8" bgcolor="#ccffff" height="29"><strong>Linux 服务器技术</strong></td>
<td class="font8" bgcolor="#ccffff"><a href="http://os.51cto.com/art/200804/71596.htm" target="_blank"><span>LAMP技术精解</span></a></td>
<td class="font8" bgcolor="#ccffff"><a href="http://os.51cto.com/art/200810/93255.htm" target="_blank"><span>DNS服务器安装优化全攻略</span></a></td>
<td class="font8" bgcolor="#ccffff"><a href="http://os.51cto.com/art/200512/12843.htm" target="_blank"><span>Samba服务器安装配置全攻略</span></a></td>
<td class="font8" bgcolor="#ccffff"><a href="http://os.51cto.com/art/200512/13182.htm" target="_blank"><span>FTP服务器安装配置全攻略</span></a></td>
<td class="font8" bgcolor="#ccffff">　</td>
</tr>
<tr>
<td class="font8" bgcolor="#ccffff" height="29"><strong>　</strong></td>
<td class="font8" bgcolor="#ccffff"><a href="http://book.51cto.com/art/200712/61597.htm" target="_blank"><span>鸟哥的Linux私房菜&mdash;&mdash;服务器架设篇（第二版）</span></a></td>
<td class="font8" bgcolor="#ccffff"><a href="http://book.51cto.com/art/200808/85237.htm" target="_blank"><span>Red Hat Enterprise Linux 5.0服务器构建与故障排除</span></a></td>
<td class="font8" bgcolor="#ccffff"><a href="http://book.51cto.com/art/200804/70583.htm" target="_blank"><span>网络服务器组建、配置和管理：Linux篇</span></a></td>
<td class="font8" bgcolor="#ccffff"><a href="http://book.51cto.com/art/200810/92821.htm" target="_blank"><span>Red Hat Linux指南：服务器设置与程序设计篇</span></a></td>
<td class="font8" bgcolor="#ccffff">　</td>
</tr>
<tr>
<td class="font8" bgcolor="#ffff99" height="29"><strong>Linux 高级应用(集群/DBA)</strong></td>
<td class="font8" bgcolor="#ffff99"><a href="http://os.51cto.com/art/200512/15073.htm" target="_blank"><span>Linux 集群技术专题</span></a></td>
<td class="font8" bgcolor="#ffff99">　</td>
<td class="font8" bgcolor="#ffff99">　</td>
<td class="font8" bgcolor="#ffff99">　</td>
<td class="font8" bgcolor="#ffff99">　</td>
</tr>
<tr>
<td class="font8" bgcolor="#ffff99" height="29"><strong>　</strong></td>
<td class="font8" bgcolor="#ffff99"><a href="http://book.51cto.com/art/200806/76015.htm" target="_blank"><span>Linux企业集群</span></a></td>
<td class="font8" bgcolor="#ffff99">　</td>
<td class="font8" bgcolor="#ffff99">　</td>
<td class="font8" bgcolor="#ffff99">　</td>
<td class="font8" bgcolor="#ffff99">　</td>
</tr>
<tr>
<td class="font8" bgcolor="#ffcccc" height="29"><strong>linux 开发</strong></td>
<td class="font8" bgcolor="#ffcccc"><a href="http://book.51cto.com/art/200811/95936.htm" target="_blank"><span>Linux C编程实战</span></a></td>
<td class="font8" bgcolor="#ffcccc"><a href="http://book.51cto.com/art/200803/66876.htm" target="_blank"><span>Linux设备驱动开发详解</span></a></td>
<td class="font8" bgcolor="#ffcccc"><a href="http://book.51cto.com/art/200711/59766.htm" target="_blank"><span>Linux编程技术详解</span></a></td>
<td class="font8" bgcolor="#ffcccc"><a href="http://book.51cto.com/art/200802/66198.htm" target="_blank"><span>详解定制一个Linux内核</span></a></td>
<td class="font8" bgcolor="#ffcccc"><a href="http://book.51cto.com/art/200810/93813.htm" target="_blank"><span>Linux 2.6内核标准教程</span></a></td>
</tr>
<tr>
<td class="font8" bgcolor="#ffcccc" height="29">&nbsp;</td>
<td class="font8" bgcolor="#ffcccc"><a href="http://book.51cto.com/art/200711/59581.htm" target="_blank"><span>Linux命令、编辑器与Shell编程</span></a></td>
<td class="font8" bgcolor="#ffcccc"><a href="http://book.51cto.com/art/200801/63467.htm" target="_blank"><span>Linux环境下C编程指南</span></a></td>
<td class="font8" bgcolor="#ffcccc"><a href="http://book.51cto.com/art/200811/96246.htm" target="_blank"><span>嵌入式Linux设备驱动开发详解</span></a></td>
<td class="font8" bgcolor="#ffcccc"><a href="http://book.51cto.com/art/200811/96180.htm" target="_blank"><span>Linux高级程序设计</span></a></td>
<td class="font8" bgcolor="#ffcccc"><a href="http://book.51cto.com/art/200811/96250.htm" target="_blank"><span>ARM嵌入式Linux系统开发技术详解</span></a></td>
</tr>
<tr>
<td class="font8" bgcolor="#ccffff" height="29"><strong>Ubuntu Linux发行版</strong></td>
<td class="font8" bgcolor="#ccffff"><a href="http://os.51cto.com/art/200706/49181.htm" target="_blank"><span>Ubuntu安装配置专题频道</span></a></td>
<td class="font8" bgcolor="#ccffff">　</td>
<td class="font8" bgcolor="#ccffff">　</td>
<td class="font8" bgcolor="#ccffff">　</td>
<td class="font8" bgcolor="#ccffff">　</td>
</tr>
<tr>
<td class="font8" bgcolor="#ccffff" height="29"><strong>　</strong></td>
<td class="font8" bgcolor="#ccffff"><a href="http://book.51cto.com/art/200811/96247.htm" target="_blank"><span>Ubuntu标准教程</span></a></td>
<td class="font8" bgcolor="#ccffff"><a href="http://book.51cto.com/art/200808/85158.htm" target="_blank"><span>完美应用Ubuntu</span></a></td>
<td class="font8" bgcolor="#ccffff">　</td>
<td class="font8" bgcolor="#ccffff">　</td>
<td class="font8" bgcolor="#ccffff">　</td>
</tr>
</tbody>
</table>
</div>
<div id="sharePanel" class="share_buttons">&nbsp;</div>
<div class="share_buttons">原文地址：</div>
<div class="share_buttons"><a href="http://blog.csdn.net/zdwzzu2006/article/details/4334791" target="_blank">http://blog.csdn.net/zdwzzu2006/article/details/4334791</a></div>
<div class="share_buttons"><a href="http://www.51cto.com/os/linux2008/index.html" target="_blank">http://www.51cto.com/os/linux2008/index.html</a></div>]]></description></item><item><title>内存地址转换与分段【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/07/09/2582868.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 09 Jul 2012 07:46:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/09/2582868.html</guid><description><![CDATA[<p>在支持Intel的<a href="http://blog.csdn.net/drshenlei/archive/2009/06/06/4246441.aspx">主板芯片组</a>上，CPU对内存的访问是通过连接着CPU和北桥芯片的前端总线来完成的。在前端总线上传输的内存地址都是<strong>物理内存地址</strong>，编号从0开始一直到可用物理内存的最高端。这些数字被北桥映射到实际的内存条上。物理地址是明确的、最终用在总线上的编号，不必转换，不必分页，也没有特权级检查。然而，在CPU内部，程序所使用的是<strong>逻辑内存地址</strong>，它必须被转换成物理地址后，才能用于实际内存访问。从概念上讲，地址转换的过程如下图所示：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012070915425819.png" alt="" /></p>
<p>&nbsp;&nbsp;</p>
<p>此图并未指出详实的转换方式，它仅仅描述了在CPU的分页功能开启的情况下内存地址的转换过程。如果CPU关闭了分页功能，或运行于16位实模式，那么从分段单元（segmentation unit）输出的就是最终的物理地址了。当CPU要执行一条引用了内存地址的指令时，转换过程就开始了。第一步是把逻辑地址转换成<strong>线性地址</strong>。但是，为什么不跳过这一步，而让软件直接使用线性地址（或物理地址呢？）其理由与：&ldquo;人类为何要长有阑尾？它的主要作用仅仅是被感染发炎而已&rdquo;大致相同。这是进化过程中产生的奇特构造。要真正理解x86分段功能的设计，我们就必须回溯到1978年。</p>
<p>&nbsp;</p>
<p>最初的<a href="http://en.wikipedia.org/wiki/8086">8086</a>处理器的寄存器是16位的，其指令集大多使用8位或16位的操作数。这使得代码可以控制2<sup>16</sup>个字节（或64KB）的内存。然而Intel的工程师们想要让CPU可以使用更多的内存，而又不用扩展寄存器和指令的位宽。于是他们引入了<strong>段寄存器</strong>（segment register），用来告诉CPU一条程序指令将操作<em>哪一个</em>64K的内存区块。一个合理的解决方案是：你先加载段寄存器，相当于说&ldquo;这儿！我打算操作开始于X处的内存区块&rdquo;；之后，再用16位的内存地址来表示相对于那个内存区块（或段）的偏移量。总共有4个段寄存器：一个用于栈（ss），一个用于程序代码（cs），两个用于数据（ds，es）。在那个年代，大部分程序的栈、代码、数据都可以塞进对应的段中，每段64KB长，所以分段功能经常是透明的。</p>
<p>&nbsp;</p>
<p>现今，分段功能依然存在，一直被x86处理器所使用着。每一条会访问内存的指令都隐式的使用了段寄存器。比如，一条跳转指令会用到代码段寄存器（cs），一条压栈指令（stack push instruction）会使用到堆栈段寄存器（ss）。在大部分情况下你可以使用指令明确的改写段寄存器的值。段寄存器存储了一个16位的段选择符（segment selector）；它们可以经由机器指令（比如MOV）被直接加载。唯一的例外是代码段寄存器（cs），它只能被影响程序执行顺序的指令所改变，比如CALL或JMP指令。虽然分段功能一直是开启的，但其在实模式与保护模式下的运作方式并不相同的。</p>
<p>&nbsp;</p>
<p>在实模式下，比如在<a href="http://blog.csdn.net/drshenlei/archive/2009/06/07/4250306.aspx">引导启动的初期</a>，段选择符是一个16位的数值，指示出一个段的开始处的物理内存地址。这个数值必须被以某种方式放大，否则它也会受限于64K当中，分段就没有意义了。比如，CPU可能会把这个段选择符当作物理内存地址的高16位（只需将之左移16位，也就是乘以2<sup>16</sup>）。这个简单的规则使得：可以按64K的段为单位，一块块的将4GB的内存都寻址到。遗憾的是，Intel做了一个很诡异的设计，让段选择符仅仅乘以2<sup>4</sup>（或16），一举将寻址范围限制在了1MB，还引入了过度复杂的转换过程。下述图例显示了一条跳转指令，cs的值是0x1000：&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012070915432649.png" alt="" />&nbsp;</p>
<p>&nbsp;</p>
<p>实模式的段地址以16个字节为步长，从0开始编号一直到0xFFFF0（即1MB）。你可以将一个从0到0xFFFF的16位偏移量（逻辑地址）加在段地址上。在这个<a href="http://mirror.href.com/thestarman/asm/debug/Segments.html">规则</a>下，对于同一个内存地址，会有多个段地址/偏移量的组合与之对应，而且物理地址可以超过1MB的边界，只要你的段地址足够高（参见臭名昭著的<a href="http://en.wikipedia.org/wiki/A20_line">A20线</a>）。同样的，在实模式的C语言代码中，一个<a href="http://en.wikipedia.org/wiki/C_memory_model">远指针</a>（far pointer）既包含了段选择符又包含了逻辑地址，用于寻址1MB的内存范围。真够&ldquo;远&rdquo;的啊。随着程序变得越来越大，超出了64K的段，分段功能以及它古怪的处理方式，使得x86平台的软件开发变得非常复杂。这种设定可能听起来有些诡异，但它却把当时的程序员推进了令人崩溃的深渊。</p>
<p>&nbsp;</p>
<p>在32位保护模式下，段选择符不再是一个单纯的数值，取而代之的是一个索引编号，用于引用段描述符表中的表项。这个表为一个简单的数组，元素长度为8字节，每个元素描述一个段。看起来如下：&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012070915434015.png" alt="" /></p>
<p>&nbsp;</p>
<p>有三种类型的段：代码，数据，系统。为了简洁明了，只有描述符的共有特征被绘制出来。<strong>基地址</strong>（base address）是一个32位的线性地址，指向段的开始；<strong>段界限</strong>（limit）指出这个段有多大。将基地址加到逻辑地址上就形成了线性地址。DPL是描述符的特权级（privilege level），其值从0（最高特权，内核模式）到3（最低特权，用户模式），用于控制对段的访问。</p>
<p>&nbsp;</p>
<p>这些段描述符被保存在两个表中：<strong>全局描述符表</strong>（GDT）和<strong>局部描述符表</strong>（LDT）。电脑中的每一个CPU（或一个处理核心）都含有一个叫做<strong>gdtr</strong>的寄存器，用于保存GDT的首个字节所在的线性内存地址。为了选出一个段，你必须向段寄存器加载符合以下格式的段选择符：&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012070915435028.png" alt="" /></p>
<p>&nbsp;</p>
<p>对GDT，TI位为0；对LDT，TI位为1；index指出想要表中哪一个段描述符（译注：原文是段选择符，应该是笔误）。对于RPL，请求特权级（Requested Privilege Level），以后我们还会详细讨论。现在，需要好好想想了。当CPU运行于32位模式时，不管怎样，寄存器和指令都可以寻址整个线性地址空间，所以根本就不需要再去使用基地址或其他什么鬼东西。那为什么不干脆将基地址设成0，好让逻辑地址与线性地址一致呢？Intel的文档将之称为&ldquo;扁平模型&rdquo;（flat model），而且在现代的x86系统内核中就是这么做的（特别指出，它们使用的是基本扁平模型）。基本扁平模型（basic flat model）等价于在转换地址时关闭了分段功能。如此一来多么美好啊。就让我们来看看32位保护模式下执行一个跳转指令的例子，其中的数值来自一个实际的Linux用户模式应用程序：&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012070915440167.png" alt="" /></p>
<p>&nbsp;</p>
<p>段描述符的内容一旦被访问，就会被cache（缓存），所以在随后的访问中，就不再需要去实际读取GDT了，否则会有损性能。每个段寄存器都有一个隐藏部分用于缓存段选择符所对应的那个段描述符。如果你想了解更多细节，包括关于LDT的更多信息，请参阅《Intel System Programming Guide》3A卷的第三章。2A和2B卷讲述了每一个x86指令，同时也指明了x86寻址时所使用的各种类型的操作数：16位，16位加段描述符（可被用于实现远指针），32位，等等。</p>
<p>&nbsp;</p>
<p>在Linux上，只有3个段描述符在引导启动过程被使用。他们使用<a href="http://lxr.linux.no/linux+v2.6.25.6/arch/x86/boot/pm.c#L103">GDT_ENTRY</a>宏来定义并存储在<a href="http://lxr.linux.no/linux+v2.6.25.6/arch/x86/boot/pm.c#L119">boot_gdt</a>数组中。其中两个段是扁平的，可对整个32位空间寻址：一个是代码段，加载到cs中，一个是数据段，加载到其他段寄存器中。第三个段是系统段，称为任务状态段（Task State Segment）。在完成引导启动以后，每一个CPU都拥有一份属于自己的GDT。其中大部分内容是相同的，只有少数表项依赖于正在运行的进程。你可以从<a href="http://lxr.linux.no/linux+v2.6.25.6/include/asm-x86/segment.h#L15">segment.h</a>看到Linux GDT的布局以及其<a href="http://lxr.linux.no/linux+v2.6.25.6/arch/x86/kernel/cpu/common.c#L24">实际的样子</a>。这里有4个主要的GDT表项：2个是扁平的，用于内核模式的代码和数据，另两个用于用户模式。在看这个Linux GDT时，请留意那些用于确保数据与CPU缓存线对齐的填充字节&mdash;&mdash;目的是克服<a href="http://en.wikipedia.org/wiki/Von_Neumann_bottleneck#Von_Neumann_bottleneck">冯&middot;诺依曼瓶颈</a>。最后要说说，那个经典的Unix错误信息&ldquo;Segmentation fault&rdquo;（分段错误）并不是由x86风格的段所引起的，而是由于分页单元检测到了非法的内存地址。唉呀，下次再讨论这个话题吧。</p>
<p>&nbsp;</p>
<p>Intel巧妙的绕过了他们原先设计的那个拼拼凑凑的分段方法，而是提供了一种富于弹性的方式来让我们选择是使用段还是使用扁平模型。由于很容易将逻辑地址与线性地址合二为一，于是这成为了标准，比如现在在64位模式中就强制使用扁平的线性地址空间了。但是即使是在扁平模型中，段对于x86的保护机制也十分重要。保护机制用于抵御用户模式进程对系统内核的非法内存访问，或各个进程之间的非法内存访问，否则系统将会进入一个狗咬狗的世界！在下一篇文章中，我们将窥视保护级别以及如何用段来实现这些保护功能。</p>
<p>&nbsp;</p>
<p>原文地址：<a href="http://blog.csdn.net/drshenlei/article/details/4261909" target="_blank">http://blog.csdn.net/drshenlei/article/details/4261909</a></p>]]></description></item><item><title>RHCE从入门到精通视频教程【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/07/09/2582409.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 09 Jul 2012 03:39:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/09/2582409.html</guid><description><![CDATA[<p><span>RHCE全称Red Hat Certified Engineer，他是RHCE是市场上第一项关于Linux的认证，它不是一个普通的认证测试，和其他操作系统认证考试相比，RHCE考试需要花费一整天的时间，而且在测试中更加注重考察考生的实践经验。因些，一个RHCE工程师是要通过扎实的理论及实践基础的。Red Hat在北京举行的RHCE十年庆典中统计表明，截至2009年6月，中国大陆通过人数为2037人。</span></p>
<p><span>&nbsp;</span></p>
<p><span>RHCE视频教程：</span></p>
<p><a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XMTI2NzI0NzYw&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC1" target="_blank">1</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XMTI2NzI0NzYw&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC2" target="_blank">2</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XMTI2NzI0ODAw&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC3" target="_blank">3</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XMTI2NzI0ODIw&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC4" target="_blank">4</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XMTI2NzI0OTYw&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC5" target="_blank">5</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XMTI2NzI1MDI4&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC6" target="_blank">6</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1MzQ2NjQ=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC7" target="_blank">7</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1MzQ5MjQ=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC8" target="_blank">8</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1MzUyMzI=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC9" target="_blank">9</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1MzU3NDA=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC10" target="_blank">10</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NDQ1MTI=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC11" target="_blank">11</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NDQ3MDA=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC12" target="_blank">12</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NDQ4MjQ=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC13" target="_blank">13</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NDUxMTY=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC14" target="_blank">14</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NDUzODQ=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC15" target="_blank">15</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NDU1Njg=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC16" target="_blank">16</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NTgzMzI=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC17" target="_blank">17</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NTUyNDQ=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC18" target="_blank">18</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NTU0Njg=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC19" target="_blank">19</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NTk1MDQ=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC20" target="_blank">20</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NTY2Mjg=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC21" target="_blank">21</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NTY2ODA=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC22" target="_blank">22</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NTY5MDg=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC23" target="_blank">23</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NTc5NjA=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC24" target="_blank">24</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NjA4Mjg=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC25" target="_blank">25</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NjEwNDg=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC26" target="_blank">26</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NTgyNzI=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC27" target="_blank">27</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NTg1MDg=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC28" target="_blank">28</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NjM4MzY=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC29" target="_blank">29</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NjQwNTI=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC30" target="_blank">30</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NjQzMzI=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC31" target="_blank">31</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NjQ1NTY=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC32" target="_blank">32</a>&nbsp;|&nbsp;<a href="http://www.xin3721.com/MainPlayer/?VTId=34&amp;newurl=XNDY1NjQ2NjQ=&amp;tN=RHCE%CA%D3%C6%B5%BD%CC%B3%CC33" target="_blank">33</a></p>
<p>&nbsp;</p>
<p><span>原文地址：<a href="http://www.xin3721.com/eschool/RHCE/" target="_blank">http://www.xin3721.com/eschool/RHCE/</a></span></p>]]></description></item><item><title>50个C/C++源代码网站【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/07/07/2580304.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 07 Jul 2012 00:52:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/07/2580304.html</guid><description><![CDATA[<p>C/C++是最主要的编程语言。这里列出了50名优秀网站和网页清单，这些网站提供c/c++源代码 。这份清单提供了源代码的链接以及它们的小说明。我已尽力包括最佳的C/C++源代码的网站。这不是一个完整的清单，您有建议可以联系我，我将欢迎您的建 议，以进一步加强这方面的清单。&nbsp;</p>
<p>添加：<a href="http://www.boost.org/">http://www.boost.org/</a></p>
<p>1、<a href="http://snippets.dzone.com/tag/c/" target="_blank">http://snippets.dzone.com/tag/c/</a>&nbsp;--数以千计的有用的C语言源代码片段&nbsp;<br />2、<a href="http://www.hotscripts.com/category/c-cpp/scripts-programs/" target="_blank">http://www.hotscripts.com/category/c-cpp/scripts-programs/</a>&nbsp;Hotscripts --提供数以百计的C和C++脚本和程序。所有程序都分为不同的类别。&nbsp;<br />3、<a href="http://www.planetsourcecode.com/vb/default.asp?lngWId=3" target="_blank">http://www.planetsourcecode.com/vb/default.asp?lngWId=3</a>&nbsp;--超过万行C和C++免费的源代码&nbsp;<br />4、<a href="http://freshmeat.net/browse/164/" target="_blank">http://freshmeat.net/browse/164/</a>&nbsp;--超过9000个C编写的项目。&nbsp;<br />5、<a href="http://www.daniweb.com/code/c.html" target="_blank">http://www.daniweb.com/code/c.html</a>&nbsp;--DANIWEB提供的实用代码段 。&nbsp;<br />6、<a href="http://www.programmersheaven.com/tags/C/" target="_blank">http://www.programmersheaven.com/tags/C/</a>&nbsp;--programmersheaven.com上的C编程资源。&nbsp;<br />7、<a href="http://www.ddj.com/code/ddj.html" target="_blank">http://www.ddj.com/code/ddj.html</a>&nbsp;--Dr. Dobb&rsquo;s Journal的源代码。&nbsp;<br />8、<a href="http://www.cprogramming.com/cgi-bin/source/source.cgi" target="_blank">http://www.cprogramming.com/cgi-bin/source/source.cgi</a>&nbsp;--C和C + +编程资源。&nbsp;<br />9、<a href="http://www.codecogs.com/" target="_blank">http://www.codecogs.com/</a>&nbsp;--CodeCogs是一项协作的开放源码库，C/C++的数值方面的组件。&nbsp;<br />10、<a href="http://www.google.com/codesearch?q=programming++lang:c&amp;cs_r=lang:c">http://www.google.com/codesearch?q=programming++lang:c&amp;cs_r=lang:c</a> --谷歌代码的C源代码。&nbsp;<br />11、<a href="http://www.codepedia.com/1/C" target="_blank">http://www.codepedia.com/1/C</a>&nbsp;--CodePedia是一个开放的关于系统编程和其他与电脑有关的议题。&nbsp;<br />12、<a href="http://www.cis.temple.edu/~ingargio/cis71/code/" target="_blank">http://www.cis.temple.edu/~ingargio/cis71/code/&nbsp;</a>--为学生提供的一个简单的C语言程序的列表。&nbsp;<br />13、<a href="http://www.codeproject.com/?cat=2" target="_blank">http://www.codeproject.com/?cat=2</a>&nbsp;--codeproject提供的C/C++资源代码项目。&nbsp;<br />14、<a href="http://www.thefreecountry.com/sourcecode/cpp.shtml" target="_blank">http://www.thefreecountry.com/sourcecode/cpp.shtml</a>&nbsp;--以下是一些C和C++库的DLL，VCLs，源代码，元件，模块，应用程序框架，类库，源代码片段等，你可以在您的项目中使用而不需要支付费用和版税。&nbsp;<br />15、<a href="http://people.sc.fsu.edu%20/~burkardt/cpp_src/cpp_src.html">http://people.sc.fsu.edu /~burkardt/cpp_src/cpp_src.html</a>&nbsp;--这是一个全面的关于C++的345个源代码清单。&nbsp;<br />16、<a href="http://www.cplusplus.com/src/" target="_blank">http://www.cplusplus.com/src/</a>&nbsp;--C++写的通用控制台程序和Windows程序代码清单。&nbsp;<br />17、<a href="http://users.cs.fiu.edu/~weiss/dsaa_c++/code/" target="_blank">http://users.cs.fiu.edu/~weiss/dsaa_c++/code/</a>&nbsp;--C++语言数据结构与算法分析（第二版）的源代码。&nbsp;<br />18、<a href="http://c.snippets.org/" target="_blank">http://c.snippets.org/</a>&nbsp;--C源代码片段。&nbsp;<br />19、<a href="http://www.bbdsoft.com/downloads.html" target="_blank">http://www.bbdsoft.com/downloads.html</a>&nbsp;--C++源代码。&nbsp;<br />20、<a href="http://www.moshier.net/" target="_blank">http://www.moshier.net/</a>&nbsp;天文学和数值软件源代码&nbsp;<br />21、<a href="http://cplus.about.com/od/cgames/C_Games_with_Source_Code.htm" target="_blank">http://cplus.about.com/od/cgames/C_Games_with_Source_Code.htm</a>&nbsp;--游戏有关的C++源代码。&nbsp;<br />22、<a href="http://cliodhna.cop.uop.edu%20/~hetrick/c-sources.html">http://cliodhna.cop.uop.edu /~hetrick/c-sources.html</a> --免费的C/C++数值计算源代码。&nbsp;<br />23、<a href="http://www.mathtools.net/C_C__/Utilities/index.html" target="_blank">http://www.mathtools.net/C_C__/Utilities/index.html</a>&nbsp;--C/C++工具。&nbsp;<br />24、<a href="http://www.programmerworld.net/resources/c_library.htm" target="_blank">http://www.programmerworld.net/resources/c_library.htm</a>&nbsp;--免费C++源代码和其它有用的工具。&nbsp;<br />25、<a href="http://www.cmcrossroads.com/bradapp/links/cplusplus-links.html" target="_blank">http://www.cmcrossroads.com/bradapp/links/cplusplus-links.html</a>&nbsp;--布拉德阿普尔顿的C++链接-资源，项目，图书馆，教学和编码。&nbsp;<br />26、<a href="http://www.robertnz.net/cpp_site.html" target="_blank">http://www.robertnz.net/cpp_site.html</a>&nbsp;--这是一个收集了数C/C++网站链接列表的网页。&nbsp;<br />27、<a href="http://www.josuttis.com/libbook/examples.html" target="_blank">http://www.josuttis.com/libbook/examples.html</a>&nbsp;--在这里，你可以看到并下载所有的本书的C++标准库例子 。&nbsp;<br />28、<a href="ftp://66.77.27.238/sourcecode/cuj/" target="_blank">ftp://66.77.27.238/sourcecode/cuj/</a>&nbsp;--C/C++用户杂志&nbsp;<br />29、<a href="ftp://66.77.27.238/sourcecode/wd/" target="_blank">ftp://66.77.27.238/sourcecode/wd/</a>&nbsp;--Windows开发者网络&nbsp;<br />30、<a href="http://www.einet.net/directory/65892/Developers.htm" target="_blank">http://www.einet.net/directory/65892/Developers.htm</a>&nbsp;--C程序&nbsp;<br />31、<a href="http://www.daniweb.com/code/cplusplus.html" target="_blank">http://www.daniweb.com/code/cplusplus.html</a>&nbsp;--实用代码段。&nbsp;<br />32、<a href="http://snippets.dzone.com/tag/c" target="_blank">http://snippets.dzone.com/tag/c</a>&nbsp;--C++源代码&nbsp;<br />33、<a href="http://www.programmersheaven.com/tags/C" target="_blank">http://www.programmersheaven.com/tags/C</a>&nbsp;--C++编程资源，programmersheaven.com&nbsp;<br />34、<a href="http://www.google.com/codesearch?hl=en&amp;lr=&amp;q=programming" target="_blank">http://www.google.com/codesearch?hl=en&amp;lr=&amp;q=programming</a>&nbsp;--谷歌代码搜索-C++编程语言&nbsp;<br />35、<a href="http://www.codepedia.com/1/Cpp" target="_blank">http://www.codepedia.com/1/Cpp</a>&nbsp;--CodePedia是一个开放的关于系统编程和其他与电脑有关的议题的网站。&nbsp;<br />36、<a href="http://www.codebeach.com/index.asp?TabID=1&amp;CategoryID=3" target="_blank">http://www.codebeach.com/index.asp?TabID=1&amp;CategoryID=3</a>&nbsp;--C++源代码，Codebeach提供&nbsp;<br />37、<a href="http://freshmeat.net/browse/165/" target="_blank">http://freshmeat.net/browse/165/</a>&nbsp;--5000项目写的C++编程语言&nbsp;<br />38、<a href="http://cplus.about.com/od/codelibrary/Code_Library_for_C_C_and_C.htm" target="_blank">http://cplus.about.com/od/codelibrary/Code_Library_for_C_C_and_C.htm</a>&nbsp;--代码库C、C + +和C＃。&nbsp;<br />39、<a href="http://www.c.happycodings.com/" target="_blank">http://www.c.happycodings.com/</a>&nbsp;--Visual Basic、PHP、ASP技术、C、C++大全。&nbsp;<br />40、<a href="http://www.blueparrots.com/" target="_blank">http://www.blueparrots.com/</a>&nbsp;--Borland C游戏，图像和声音源代码范例。&nbsp;<br />41、<a href="http://www.java2s.com/Code/Cpp/CatalogCpp.htm" target="_blank">http://www.java2s.com/Code/Cpp/CatalogCpp.htm</a>&nbsp;--C++源代码。&nbsp;<br />42、<a href="http://www.yeohhs.com/modules/mydownloads/" target="_blank">http://www.yeohhs.com/modules/mydownloads/</a>&nbsp;--C与C++电子书和源代码示例。&nbsp;<br />43、<a href="http://www.brpreiss.com/books/opus4/programs/index.html" target="_blank">http://www.brpreiss.com/books/opus4/programs/index.html</a>&nbsp;C++的数学方程和公式源代码。&nbsp;<br />44、<a href="http://users.cs.fiu.edu">http://users.cs.fiu.edu</a>&nbsp;-- C++。&nbsp;<br />45、<a href="http://www.josuttis.com/libbook/examples.html">http://www.josuttis.com/libbook/examples.html</a> --C++标准库-教程和参考资料。&nbsp;<br />46、<a href="http://emr.cs.uiuc.edu/~reingold/calendars.shtml" target="_blank">http://emr.cs.uiuc.edu/~reingold/calendars.shtml</a>&nbsp;Edward M. Reingold's Calendar Book, Papers, and Code。&nbsp;<br />47、<a href="http://cpp.snippets.org/" target="_blank">http://cpp.snippets.org/&nbsp;</a>--c++源代码档案。&nbsp;<br />48、<a href="http://ubiety.uwaterloo.ca/~tveldhui/papers/techniques/" target="_blank">http://ubiety.uwaterloo.ca/~tveldhui/papers/techniques/&nbsp;</a>--用C和C++的解决科学问题。&nbsp;<br />49、<a href="http://c.ittoolbox.com/topics/core-c/" target="_blank">http://c.ittoolbox.com/topics/core-c/</a>&nbsp;--C/C++的IT工具框。&nbsp;<br />50、<a href="http://www.le.ac.uk/cc/tutorials/c/ccccdbas.html" target="_blank">http://www.le.ac.uk/cc/tutorials/c/ccccdbas.html</a>&nbsp;--本文件中包含有大量的C示例程序。</p>]]></description></item><item><title>使用安装光盘建立本地yum仓库【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/07/06/2578758.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 06 Jul 2012 00:28:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/06/2578758.html</guid><description><![CDATA[<p><span>为了避免从网络下载软件包可能发生的软件包不完整、下载速度慢、网络故障等问题，我们强烈建议您使用本地的 DVD/CD iso 来创建 yum 仓库，这样在安装的时候速度快，而且可以保证所有软件包都能顺利安装。</span><br /><br /><span>1、将光盘放入光驱，安装必须的包，（下面这些包如果已经安装，可跳过；安装完ssh服务，就可以用putty等软件远程操作了。）：</span></p>
<div class="cnblogs_code">
<pre>[root@mjwdj ~]# <span style="color: #0000ff;">mkdir</span> /mnt/iso/<span style="color: #000000;">
[root@mjwdj </span>~]# <span style="color: #0000ff;">mount</span> /dev/hdc /mnt/iso/<span style="color: #000000;">
[root@mjwdj </span>~]# rpm -i --nodeps /mnt/iso/Server/fipscheck-lib-<span style="color: #800080;">1.2</span>.<span style="color: #800080;">0</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el5.i386.rpm
[root@mjwdj </span>~]# rpm -i --nodeps /mnt/iso/Server/fipscheck-<span style="color: #800080;">1.2</span>.<span style="color: #800080;">0</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el5.i386.rpm
[root@mjwdj </span>~]# rpm -ivh /mnt/iso/Server/openssh-<span style="color: #800080;">4</span>.3p2-<span style="color: #800080;">72</span><span style="color: #000000;">.el5.i386.rpm
[root@mjwdj </span>~]# rpm -ivh /mnt/iso/Server/tcp_wrappers-<span style="color: #800080;">7.6</span>-<span style="color: #800080;">40.7</span><span style="color: #000000;">.el5.i386.rpm
[root@mjwdj </span>~]# rpm -ivh /mnt/iso/Server/openssh-server-<span style="color: #800080;">4</span>.3p2-<span style="color: #800080;">72</span><span style="color: #000000;">.el5.i386.rpm
[root@mjwdj </span>~]# rpm -ivh /mnt/iso/Server/openssh-client-<span style="color: #800080;">4</span>.3p2-<span style="color: #800080;">72</span><span style="color: #000000;">.el5.i386.rpm
[root@mjwdj </span>~<span style="color: #000000;">]# service sshd start
[root@mjwdj </span>~<span style="color: #000000;">]# chkconfig sshd on
[root@mjwdj </span>~]# rpm -ivh /mnt/iso/Server/rpm-python-<span style="color: #800080;">4.4</span>.<span style="color: #800080;">2.3</span>-<span style="color: #800080;">22</span><span style="color: #000000;">.el5.i386.rpm
[root@mjwdj </span>~]# rpm -ivh /mnt/iso/Server/yum-metadata-parser-<span style="color: #800080;">1.1</span>.<span style="color: #800080;">2</span>-<span style="color: #800080;">3</span><span style="color: #000000;">.el5.i386.rpm
[root@mjwdj </span>~]# rpm -ivh /mnt/iso/Server/createrepo-<span style="color: #800080;">0.4</span>.<span style="color: #800080;">11</span>-<span style="color: #800080;">3</span><span style="color: #000000;">.el5.noarch.rpm
[root@mjwdj </span>~]# rpm -ivh /mnt/iso/Server/python-elementtree-<span style="color: #800080;">1.2</span>.<span style="color: #800080;">6</span>-<span style="color: #800080;">5</span><span style="color: #000000;">.i386.rpm
[root@mjwdj </span>~]# rpm -ivh /mnt/iso/Server/python-iniparse-<span style="color: #800080;">0.2</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">4</span><span style="color: #000000;">.el5.noarch.rpm
[root@mjwdj </span>~]# rpm -ivh /mnt/iso/Server/m2crypto-<span style="color: #800080;">0.16</span>-<span style="color: #800080;">6</span>.el5.<span style="color: #800080;">8</span><span style="color: #000000;">.i386.rpm
[root@mjwdj </span>~]# rpm -ivh /mnt/iso/Server/python-urlgrabber-<span style="color: #800080;">3.1</span>.<span style="color: #800080;">0</span>-<span style="color: #800080;">6</span><span style="color: #000000;">.el5.noarch.rpm
[root@mjwdj </span>~]# rpm -ivh /mnt/iso/Server/python-sqlite-<span style="color: #800080;">1.1</span>.<span style="color: #800080;">7</span>-<span style="color: #800080;">1.2</span>.<span style="color: #800080;">1</span><span style="color: #000000;">.i386.rpm
[root@mjwdj </span>~]# rpm -ivh /mnt/iso/Server/yum-<span style="color: #800080;">3.2</span>.<span style="color: #800080;">22</span>-<span style="color: #800080;">33</span><span style="color: #000000;">.el5.noarch.rpm
[root@mjwdj </span>~]# rpm -ivh /mnt/iso/Server/yum-utils-<span style="color: #800080;">1.1</span>.<span style="color: #800080;">16</span>-<span style="color: #800080;">13</span>.el5_4.<span style="color: #800080;">1</span>.noarch.rpm</pre>
</div>
<p>&nbsp;</p>
<p><span>a、如果您使用的是官方的 DVD ISO或多个CD ISO文件，则需要将它复制到系统上，挂载后制作 yum 仓库：</span></p>
<div class="cnblogs_code">
<pre>[root@mjwdj ~]# <span style="color: #0000ff;">mkdir</span> /mnt/<span style="color: #000000;">iso
[root@mjwdj </span>~]# <span style="color: #0000ff;">mount</span> -o loop /home/CentOS-<span style="color: #800080;">5.8</span>-i386-bin-DVD.iso /mnt/iso/<span style="color: #000000;">
[root@mjwdj </span>~]# cd /<span style="color: #000000;">mnt
[root@mjwdj mnt]# createrepo .

[root@mjwdj </span>~]# <span style="color: #0000ff;">mkdir</span> -p /mnt/{<span style="color: #800080;">1</span>,<span style="color: #800080;">2</span>,<span style="color: #800080;">3</span>,<span style="color: #800080;">4</span>,<span style="color: #800080;">5</span>,<span style="color: #800080;">6</span><span style="color: #000000;">}
[root@mjwdj </span>~]# <span style="color: #0000ff;">mount</span> -o loop /home/CentOS5.<span style="color: #800080;">8</span>-disc1.iso /mnt/<span style="color: #800080;">1</span><span style="color: #000000;">
[root@mjwdj </span>~]# <span style="color: #0000ff;">mount</span> -o loop /home/CentOS5.<span style="color: #800080;">8</span>-disc2.iso /mnt/<span style="color: #800080;">2</span><span style="color: #000000;">
[root@mjwdj </span>~]# <span style="color: #0000ff;">mount</span> -o loop /home/CentOS5.<span style="color: #800080;">8</span>-disc3.iso /mnt/<span style="color: #800080;">3</span><span style="color: #000000;">
[root@mjwdj </span>~]# <span style="color: #0000ff;">mount</span> -o loop /home/CentOS5.<span style="color: #800080;">8</span>-disc4.iso /mnt/<span style="color: #800080;">4</span><span style="color: #000000;">
[root@mjwdj </span>~]# <span style="color: #0000ff;">mount</span> -o loop /home/CentOS5.<span style="color: #800080;">8</span>-disc5.iso /mnt/<span style="color: #800080;">5</span><span style="color: #000000;">
[root@mjwdj </span>~]# cd /mnt/<span style="color: #000000;">
[root@mjwdj mnt]# createrepo .</span></pre>
</div>
<p>&nbsp;</p>
<p><span>b、如果您光盘，需要挂载后制作 yum 仓库。</span></p>
<div class="cnblogs_code">
<pre>[root@mjwdj ~]# <span style="color: #0000ff;">mount</span> /dev/hdc /media/iso/<span style="color: #000000;">
[root@mjwdj </span>~]# cd /mnt/<span style="color: #000000;">
[root@mjwdj mnt]# createrepo .</span></pre>
</div>
<p>&nbsp;</p>
<p><span>清空并重新定义yum仓库：</span></p>
<div class="cnblogs_code">
<pre>[root@mjwdj ~]# <span style="color: #0000ff;">rm</span> -f /etc/yum.repos.d<span style="color: #008000;">/*</span><span style="color: #008000;">
[root@mjwdj ~]# echo "[DVDISO]" &gt;&gt; /etc/yum.repos.d/dvdiso.repo
[root@mjwdj ~]# echo "name=DVD ISO" &gt;&gt; /etc/yum.repos.d/dvdiso.repo
[root@mjwdj ~]# echo "baseurl=file:///mnt/" &gt;&gt; /etc/yum.repos.d/dvdiso.repo
[root@mjwdj ~]# echo "enabled=1" &gt;&gt; /etc/yum.repos.d/dvdiso.repo
[root@mjwdj ~]# echo "gpgcheck=0" &gt;&gt; /etc/yum.repos.d/dvdiso.repo
[root@mjwdj ~]# yum clean all
[root@mjwdj ~]# yum list</span></pre>
</div>
<p>&nbsp;</p>
<p><span>如果在 'yum list' 命令的输出中能够看到刚才制作的仓库里的软件包的名字，那就是 OK 了。再试着安装一个软件包看是否成功：</span></p>
<div class="cnblogs_code">
<pre>[root@mjwdj ~]# yum <span style="color: #0000ff;">install</span> mysql-server</pre>
</div>
<p>&nbsp;</p>
<p><span>原文地址：<a href="http://blog.chinaunix.net/space.php?uid=20346344&amp;do=blog&amp;id=3264166" target="_blank">http://blog.chinaunix.net/space.php?uid=20346344&amp;do=blog&amp;id=3264166</a></span></p>]]></description></item><item><title>VirtualBox虚拟机网络设置【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/07/05/2577236.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 05 Jul 2012 01:32:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/05/2577236.html</guid><description><![CDATA[<p>VirtualBox是一款SUN出品的非常优秀的虚拟机程序，版本也非常齐全，你可以在官网上找到适合各种操作系统平台的版本。</p>
<p><br />这里我先给大家大致讲解下VBox的网络配置及应用。VirtualBox的提供了四种网络接入模式，它们分别是：</p>
<ol>
<li>NAT&nbsp;&nbsp;&nbsp; 网络地址转换模式(NAT,Network Address Translation)</li>
<li>Bridged Adapter&nbsp;&nbsp;&nbsp; 桥接模式</li>
<li>Internal&nbsp;&nbsp;&nbsp; 内部网络模式</li>
<li>Host-only Adapter&nbsp; 主机模式</li>





</ol>
<p>&nbsp;</p>
<h3>第一种 NAT模式</h3>
<p>NAT模式是最简单的实现虚拟机上网的方式，你可以这样理解：Vhost访问网络的所有数据都是由主机提供的，vhost并不真实存在于网络中，主机与网络中的任何机器都不能查看和访问到Vhost的存在。<br />虚拟机与主机关系：只能单向访问，虚拟机可以通过网络访问到主机，主机无法通过网络访问到虚拟机。<br />虚拟机与网络中其他主机的关系：只能单向访问，虚拟机可以访问到网络中其他主机，其他主机不能通过网络访问到虚拟机。<br />虚拟机与虚拟机之间的关系：相互不能访问，虚拟机与虚拟机各自完全独立，相互间无法通过网络访问彼此。<br />笔记本已插网线时： 虚拟机可以访问主机，虚拟机可以访问互联网，在做了端口映射后（最后有说明），主机可以访问虚拟机上的服务（如数据库）。。<br />笔记本没插网线时： 主机的&ldquo;本地连接&rdquo;有红叉的，虚拟机可以访问主机，虚拟机不可以访问互联网，在做了端口映射后，主机可以访问虚拟机上的服务（如数据库）。</p>
<p>&nbsp;</p>
<h3>第二种 Bridged Adapter模式</h3>
<p>网桥模式是我最喜欢的用的一种模式，同时，模拟度也是相当完美。你可以这样理解，它是通过主机网卡，架设了一条桥，直接连入到网络中了。因此，它使得虚拟机能被分配到一个网络中独立的IP，所有网络功能完全和在网络中的真实机器一样。<br />虚拟机与主机关系：可以相互访问，因为虚拟机在真实网络段中有独立IP，主机与虚拟机处于同一网络段中，彼此可以通过各自IP相互访问。<br />虚拟机于网络中其他主机关系：可以相互访问，同样因为虚拟机在真实网络段中有独立IP，虚拟机与所有网络其他主机处于同一网络段中，彼此可以通过各自IP相互访问。<br />虚拟机于虚拟机关系：可以相互访问，原因同上。<br />IP：一般是DHCP分配的，与主机的&ldquo;本地连接&rdquo;的IP 是同一网段的。虚拟机就能与主机互相通信。<br />笔记本已插网线时：（若网络中有DHCP服务器）主机与虚拟机会通过DHCP分别得到一个IP，这两个IP在同一网段。 主机与虚拟机可以ping通，虚拟机可以上互联网。<br />笔记本没插网线时：主机与虚拟机不能通信。主机的&ldquo;本地连接&rdquo;有红叉，就不能手工指定IP。虚拟机也不能通过DHCP得到IP地址，手工指定IP后，也无法与主机通信，因为主机无IP。<br />这时主机的VirtualBox Host-Only Network 网卡是有ip的，192.168.56.1。虚拟机就算手工指定了IP 192.168.56.*，也ping不能主机。</p>
<p>&nbsp;</p>
<h3>第三种 Internal模式</h3>
<p>内网模式，顾名思义就是内部网络模式，虚拟机与外网完全断开，只实现虚拟机于虚拟机之间的内部网络模式。<br />虚拟机与主机关系：不能相互访问，彼此不属于同一个网络，无法相互访问。<br />虚拟机与网络中其他主机关系：不能相互访问，理由同上。<br />虚拟机与虚拟机关系：可以相互访问，前提是在设置网络时，两台虚拟机设置同一网络名称。如上配置图中，名称为intnet。<br />IP: VirtualBox的DHCP服务器会为它分配IP ，一般得到的是192.168.56.101，因为是从101起分的，也可手工指定192.168.56.*。<br />笔记本已插网线时：虚拟机可以与主机的VirtualBox Host-Only Network 网卡通信<br />这种方案不受主机本地连接（网卡）是否有红叉的影响。</p>
<p>&nbsp;</p>
<h3>第四种 Host-only Adapter模式</h3>
<p>主机模式，这是一种比较复杂的模式，需要有比较扎实的网络基础知识才能玩转。可以说前面几种模式所实现的功能，在这种模式下，通过虚拟机及网卡的设置都可以被实现。<br />我们可以理解为Vbox在主机中模拟出一张专供虚拟机使用的网卡，所有虚拟机都是连接到该网卡上的，我们可以通过设置这张网卡来实现上网及其他很多功能，比如（网卡共享、网卡桥接等）。<br />虚拟机与主机关系：默认不能相互访问，双方不属于同一IP段，host-only网卡默认IP段为192.168.56.X 子网掩码为255.255.255.0，后面的虚拟机被分配到的也都是这个网段。通过网卡共享、网卡桥接等，可以实现虚拟机于主机相互访问。<br />虚拟机与网络主机关系：默认不能相互访问，原因同上，通过设置，可以实现相互访问。<br />虚拟机与虚拟机关系：默认可以相互访问，都是同处于一个网段。<br />虚拟机访问主机 用的是主机的VirtualBox Host-Only Network网卡的IP：192.168.56.1&nbsp; ，不管主机&ldquo;本地连接&rdquo;有无红叉，永远通。<br />主机访问虚拟机，用是的虚拟机的网卡3的IP： 192.168.56.101&nbsp; ，不管主机&ldquo;本地连接&rdquo;有无红叉，永远通。<br />虚拟机访问互联网，用的是自己的网卡2， 这时主机要能通过&ldquo;本地连接&rdquo;有线上网，（无线网卡不行）</p>
<p>&nbsp;</p>
<p>通过对以上几种网络模式的了解，我们就可以灵活运用，模拟组建出我们所想要的任何一种网络环境了。比如我想模拟出来一个一台主机，监控一个局域网上网情况的网络环境。<br />首先我开启了两台虚拟机vhost1与vhost2，当然如果硬件允许，我同样可以再增加vhost3、vhost4&hellip;<br />所有的vhost我都设置成internat内网模式，网络名称为intnal，网关为192.168.56.100，意思就是通过 192.168.56.100网卡上网。其中有一台vhost1我设置为双网卡，一张为内网模式（192.168.56.100），一张为网桥模式 （192.168.1.101）。两张网卡设置双网卡共享上网<br />虚拟机之间为局域网，其中有一台虚拟机vhost1通过与外网相连，所有局域网中的虚拟机又通过vhost1来实现上外网。这样vhost1就可以监控整个虚拟机局域网上网情况了。</p>
<p>&nbsp;</p>
<h3>NAT 设置端口映射</h3>
<p><br />http://huzhangsheng.blog.163.com/blog/static/34787784200802801435931/<br />你可以设置一个虚拟机的服务（比如 WEB&nbsp; 服务），通过使用命令行工具 VboxManage 代理。你需要知道虚拟机的服务使用哪个端口，然后决定在主机上使用哪个端口（通常但不总是想要使虚拟机和主机使用同一个端口）。在主机上提供一个服务需要使用一个端口，你能使用在主机上没有准备用来提供服务的任何端口。一个怎样设置新的 NAT 例子，在虚拟机上连接到一个 ssh 服务器，需要下面的三个命令：</p>
<div class="cnblogs_code">
<pre>VBoxManage setextradata <span style="color: #800000;">"</span><span style="color: #800000;">Linux Guest</span><span style="color: #800000;">"</span> <span style="color: #800000;">"</span><span style="color: #800000;">VBoxInternal/Devices/pcnet/0/LUN#0/Config/guestssh/Protocol</span><span style="color: #800000;">"</span><span style="color: #000000;"> TCP
VBoxManage setextradata </span><span style="color: #800000;">"</span><span style="color: #800000;">Linux Guest</span><span style="color: #800000;">"</span> <span style="color: #800000;">"</span><span style="color: #800000;">VBoxInternal/Devices/pcnet/0/LUN#0/Config/guestssh/GuestPort</span><span style="color: #800000;">"</span> <span style="color: #800080;">22</span><span style="color: #000000;">
VBoxManage setextradata </span><span style="color: #800000;">"</span><span style="color: #800000;">Linux Guest</span><span style="color: #800000;">"</span> <span style="color: #800000;">"</span><span style="color: #800000;">VBoxInternal/Devices/pcnet/0/LUN#0/Config/guestssh/HostPort</span><span style="color: #800000;">"</span> <span style="color: #800080;">2222</span></pre>
</div>
<p>说明：VboxManage 是一个命令行程序，请查询你的 VirtualBox 安装目录，"Linux Guest" 是虚拟主机名。guestssh 是一个自定义的名称，你可以任意设置，通过上面的三个命令，把虚拟机的 22 端口 转发到主机的 2222 端口。</p>
<p>&nbsp;又比如，我在虚拟机 debian 上安装了 apache2 服务器，使用 80 端口，映射到主机的 80 端口。使用下面的命令。</p>
<div class="cnblogs_code">
<pre><span style="color: #800000;">"</span><span style="color: #800000;">C:\Program Files\innotek VirtualBox\VBoxManage.exe</span><span style="color: #800000;">"</span> setextradata <span style="color: #800000;">"</span><span style="color: #800000;">debian</span><span style="color: #800000;">"</span> <span style="color: #800000;">"</span><span style="color: #800000;">VBoxInternal/Devices/pcnet/0/LUN#0/Config/huzhangsheng/Protocol</span><span style="color: #800000;">"</span><span style="color: #000000;"> TCP
</span><span style="color: #800000;">"</span><span style="color: #800000;">C:\Program Files\innotek VirtualBox\VBoxManage.exe</span><span style="color: #800000;">"</span> setextradata <span style="color: #800000;">"</span><span style="color: #800000;">debian</span><span style="color: #800000;">"</span> <span style="color: #800000;">"</span><span style="color: #800000;">VBoxInternal/Devices/pcnet/0/LUN#0/Config/huzhangsheng/GuestPort</span><span style="color: #800000;">"</span> <span style="color: #800080;">80</span>
<span style="color: #800000;">"</span><span style="color: #800000;">C:\Program Files\innotek VirtualBox\VBoxManage.exe</span><span style="color: #800000;">"</span> setextradata <span style="color: #800000;">"</span><span style="color: #800000;">debian</span><span style="color: #800000;">"</span> <span style="color: #800000;">"</span><span style="color: #800000;">VBoxInternal/Devices/pcnet/0/LUN#0/Config/huzhangsheng/HostPort</span><span style="color: #800000;">"</span> <span style="color: #800080;">80</span></pre>
</div>
<p>注意：要使设置生效，请关掉 VirtualBox 再运行虚拟机，我把 VirtualBox 安装在 winxp 上，在虚拟机中安装 debian 4.02r ，虚拟机名是 debian ，并安装了 apache2 php5 mysql-server ，在主机上用IE浏览 http://localhost，成功转发到虚拟机 debian 的 apache2 web 服务器上</p>
<p>&nbsp;</p>
<p>原文地址：<a href="http://www.cnblogs.com/coltiam/archive/2010/03/26/1696939.html" target="_blank">http://www.cnblogs.com/coltiam/archive/2010/03/26/1696939.html</a></p>]]></description></item><item><title>解决Apache启动时错误提示</title><link>http://www.cnblogs.com/eastson/archive/2012/07/03/2574910.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 03 Jul 2012 08:10:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/03/2574910.html</guid><description><![CDATA[<h3>Starting httpd: httpd: apr_sockaddr_info_get() failed for centos-minimal.xxxx.com</h3>
<p>apache启动时提示apr_sockaddr_info_get()错误，是因为/etc/hosts和hostname不一致造成的。</p>
<p>&nbsp;</p>
<p>使用hostname命令查到服务器的主机名称：</p>
<div class="cnblogs_code">
<pre>#&gt;<span style="color: #000000;"> hostname
centos</span>-minimal.xxxx.com</pre>
</div>
<p>&nbsp;</p>
<p>打开/etc/hosts文件，原先的内容应该是这样的：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">127.0</span>.<span style="color: #800080;">0.1</span>   localhost localhost.localdomain localhost4 localhost4.localdomain4<span style="color: #000000;">
::</span><span style="color: #800080;">1</span>         localhost localhost.localdomain localhost6 localhost6.localdomain6</pre>
</div>
<p>将刚才查到的主机名称加到最后：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">127.0</span>.<span style="color: #800080;">0.1</span>   localhost localhost.localdomain localhost4 localhost4.localdomain4 centos-<span style="color: #000000;">minimal.xxxx.com
::</span><span style="color: #800080;">1</span>         localhost localhost.localdomain localhost6 localhost6.localdomain6 centos-minimal.xxxx.com</pre>
</div>
<p>&nbsp;</p>
<p>重启httpd服务，这样就不会提示apr_sockaddr_info_get()错误了。</p>
<p>&nbsp;</p>
<h3>Starting httpd: httpd: Could not reliably determine the server's fully qualified domain name, using centos-minimal.xxxx.com for ServerName</h3>
<p>这是因为没有在httpd.conf设置ServerName造成的，httpd启动时就会使用hostname作为服务器的名称。这其实不应该说是错误，可以算作一条警告。</p>
<p>&nbsp;</p>
<p>打开/etc/httpd/conf/httpd.conf，找到ServerName：</p>
<div class="cnblogs_code">
<pre>#ServerName www.example.com:<span style="color: #800080;">80</span></pre>
</div>
<p>修改成实际的主机名称：</p>
<div class="cnblogs_code">
<pre>ServerName centos-minimal.xxxx.com:<span style="color: #800080;">80</span></pre>
</div>
<p>&nbsp;</p>
<p>重启httpd服务，上面的警告信息应该就不会有了。</p>]]></description></item><item><title>适合Web服务器的iptables规则【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/07/03/2574628.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 03 Jul 2012 05:45:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/03/2574628.html</guid><description><![CDATA[<div class="cnblogs_code">
<pre>IPT=<span style="color: #800000;">"</span><span style="color: #800000;">/sbin/iptables</span><span style="color: #800000;">"</span><span style="color: #000000;">
$IPT </span>--delete-<span style="color: #000000;">chain
$IPT </span>--<span style="color: #000000;">flush
$IPT </span>-P INPUT DROP    #<span style="color: #800080;">1</span><span style="color: #000000;">
$IPT </span>-P FORWARD DROP  #<span style="color: #800080;">1</span><span style="color: #000000;">
$IPT </span>-P OUTPUT DROP   #<span style="color: #800080;">1</span><span style="color: #000000;">
$IPT </span>-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT #<span style="color: #800080;">2</span><span style="color: #000000;">
$IPT </span>-A INPUT -p tcp -m tcp --dport <span style="color: #800080;">80</span> -j ACCEPT #<span style="color: #800080;">3</span><span style="color: #000000;">
$IPT </span>-A INPUT -p tcp -m tcp --dport <span style="color: #800080;">22</span> -j ACCEPT #<span style="color: #800080;">3</span><span style="color: #000000;">
$IPT </span>-A INPUT -p tcp -m tcp --dport <span style="color: #800080;">21</span> -j ACCEPT  #<span style="color: #800080;">3</span><span style="color: #000000;">
$IPT </span>-A INPUT -p tcp -m tcp --dport <span style="color: #800080;">873</span> -j ACCEPT #<span style="color: #800080;">3</span><span style="color: #000000;">
$IPT </span>-A INPUT -i lo -j ACCEPT #<span style="color: #800080;">4</span><span style="color: #000000;">
$IPT </span>-A INPUT -p icmp -m icmp --icmp-type <span style="color: #800080;">8</span> -j ACCEPT  #<span style="color: #800080;">5</span><span style="color: #000000;">
$IPT </span>-A INPUT -p icmp -m icmp --icmp-type <span style="color: #800080;">11</span> -j ACCEPT #<span style="color: #800080;">5</span><span style="color: #000000;">
$IPT </span>-A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT #<span style="color: #800080;">6</span><span style="color: #000000;">
$IPT </span>-A OUTPUT -p udp -m udp --dport <span style="color: #800080;">53</span> -j ACCEPT #<span style="color: #800080;">7</span><span style="color: #000000;">
$IPT </span>-A OUTPUT -o lo -j ACCEPT #<span style="color: #800080;">4</span><span style="color: #000000;">
$IPT </span>-A OUTPUT -p tcp -m tcp --dport <span style="color: #800080;">80</span> -j ACCEPT #<span style="color: #800080;">8</span><span style="color: #000000;">
$IPT </span>-A OUTPUT -p tcp -m tcp --dport <span style="color: #800080;">25</span> -j ACCEPT #<span style="color: #800080;">9</span><span style="color: #000000;">
$IPT </span>-A OUTPUT -p icmp -m icmp --icmp-type <span style="color: #800080;">8</span> -j ACCEPT  #<span style="color: #800080;">10</span><span style="color: #000000;">
$IPT </span>-A OUTPUT -p icmp -m icmp --icmp-type <span style="color: #800080;">11</span> -j ACCEPT #<span style="color: #800080;">10</span><span style="color: #000000;">
service iptables save
service iptables restart</span></pre>
</div>
<p>存为脚本<a title="iptables" href="http://www.centos.bz/tag/iptables/">iptables</a>.sh，执行sh iptables.sh自动配置防火墙。</p>
<p>&nbsp;</p>
<p>解释：<br />#1、设置INPUT,FORWARD,OUTPUT链默认target为DROP，也就是外部与服务器不能通信。<br />#2、设置当连接状态为RELATED和ESTABLISHED时，允许数据进入服务器。<br />#3、设置外部客户端连接服务器端口80,22,21,873。<br />#4、允许内部数据循回。<br />#5、允许外部ping服务器 。<br />#6、设置状态为RELATED和ESTABLISHED的数据可以从服务器发送到外部。<br />#7、允许服务器使用外部dns解析域名。<br />#8、设置服务器连接外部服务器端口80。<br />#9、允许服务器发送邮件。<br />#10、允许从服务器ping外部。</p>
<div class="clear">&nbsp;</div>
<p><span>文章来源：</span><a href="http://www.centos.bz/2011/09/example-webserver-iptable-ruleset/" rel="bookmark" target="_blank">http://www.centos.bz/2011/09/example-webserver-iptable-ruleset/</a></p>]]></description></item><item><title>Google免费的公共DNS服务器</title><link>http://www.cnblogs.com/eastson/archive/2012/07/02/2573480.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 02 Jul 2012 09:19:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/02/2573480.html</guid><description><![CDATA[<div class="special">
<p>The Google Public DNS IP addresses are as follows:</p>
</div>
<ul>
<li>8.8.8.8</li>
<li>8.8.4.4</li>
</ul>
<div>详情：<a href="http://code.google.com/speed/public-dns/docs/using.html" target="_blank">http://code.google.com/speed/public-dns/docs/using.html</a></div>]]></description></item><item><title>SSH数据交互过程【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/07/02/2573432.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 02 Jul 2012 08:56:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/02/2573432.html</guid><description><![CDATA[<p>最近发现一篇介绍SSH数据交互过程的文章，描述得很清楚，转载在这里。</p>
<p>&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012070216530623.jpg" alt="" /></p>
<p>&nbsp;</p>
<p>（1）SSH启动时，会主动找/etc/ssh/ssh_host*文档，系统刚安装好时是没有这些公钥密钥的，因此，SSH会计算这些公钥，同时也计算出自己需要的私玥文档</p>
<p>（2）当客户机请求连接到SSH服务器，这需要相应的软件，Putty（免费）、SecureCRT和Xshell 4，最好不要下载中文版，有后门。</p>
<p>（3）服务器接到请求后，传送通过第一步计算得到的公钥给客户端（这里可能是明码传送，公钥本来就是公开的）</p>
<p>（4）a.若客户端第一次连接服务器，则会将服务器公钥数据记录。&nbsp;&nbsp;&nbsp; b.若是已经记录过该服务器的公钥数据，则客户端会去比对此次接收到的与之前的记录是否有差异。若接受此公钥数据， 则开始计算客户端自己的公私钥数据</p>
<p>（5）用户将自己的公钥传送给服务器。此时服务器：『具有服务器的私钥与客户端的公钥』，客户端则是： 『具有服务器的公钥以及客户端自己的私钥』，你会看到，在此次联机的服务器与客户端的密钥系统 (公钥+私钥) 并不一样，所以才称为非对称式密钥系统喔。</p>
<p>（6）a.服务器到客户端：服务器传送数据时，拿用户的公钥加密后送出。客户端接收后，用自己的私钥解密；&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.客户端到服务器：客户端传送数据时，拿服务器的公钥加密后送出。服务器接收后，用服务器的私钥解密。</p>
<p>&nbsp;</p>
<p><span>SSH联机过程，前5步的目的要让服务器和客户端各自拥有自己的公私玥和对方的公钥，第六步则是实现，服务器拿客户端的公钥加密数据传给客户端，只有这个客户端的私玥才能解密，其它任何人截获其数据都会因为没有对应的私玥而无法打开（因为私玥和公钥是成对的！），反过来，客户端传数据给服务器也是一样。</span></p>
<p><span>&nbsp;</span></p>
<p>原文地址：<a href="http://isway.cn/?p=64" target="_blank">http://isway.cn/?p=64</a></p>]]></description></item><item><title>配置GNOME环境</title><link>http://www.cnblogs.com/eastson/archive/2012/07/02/2573225.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 02 Jul 2012 07:32:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/02/2573225.html</guid><description><![CDATA[<p><span>CentOS原先是以最小方式安装的，没有GNOME环境。CentOS的安装过程请参考《</span><a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_0" href="http://www.cnblogs.com/eastson/archive/2012/07/01/2571857.html" target="_blank">虚拟机最小安装CentOS 6.2</a><span>》。</span></p>
<p><span>&nbsp;</span></p>
<p><span>可以通过yum命令快速地安装GNOME：</span></p>
<div class="cnblogs_code">
<pre>yum groupinstall <span style="color: #800000;">"</span><span style="color: #800000;">Desktop</span><span style="color: #800000;">"    ##Gnome桌面</span><span style="color: #000000;">
yum groupinstall </span><span style="color: #800000;">"</span><span style="color: #800000;">X Window System</span><span style="color: #800000;">"    ##X11服务器</span><span style="color: #000000;">
yum groupinstall </span><span style="color: #800000;">"</span><span style="color: #800000;">Fonts</span><span style="color: #800000;">"    ##字体文件, 没有它即使是英文也会乱码, 一个个小方块</span></pre>
</div>
<p><span>&nbsp;安装完毕后，输入startx可以进入X11。</span></p>
<p><span>&nbsp;</span></p>
<p><span>我们可以修改/etc/inittab使得系统启动后自动进入X11。打开/etc/inittab，找到下面的行：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">id</span>:<span style="color: #800080;">3</span>:initdefault</pre>
</div>
<p>替换成:</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">id</span>:<span style="color: #800080;">5</span>:initdefault</pre>
</div>
<p>重启后生效。</p>]]></description></item><item><title>CentOS修改机器名称</title><link>http://www.cnblogs.com/eastson/archive/2012/07/02/2572645.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 02 Jul 2012 00:48:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/02/2572645.html</guid><description><![CDATA[<p>CentOS的机器名称可以用hostname修改：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">hostname</span> centos-minimal</pre>
</div>
<p>&nbsp;</p>
<p>但是，hostname命令好像只是对当前会话有效，重启以后又丢失了（不知道什么原因，可能是因为我用了DHCP自动取得IP的原因），最后还是需要手工修改/etc/sysconfig/network文件。</p>]]></description></item><item><title>CentOS 6.2系统安装后的初始环境设置</title><link>http://www.cnblogs.com/eastson/archive/2012/07/01/2572187.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 01 Jul 2012 12:51:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/01/2572187.html</guid><description><![CDATA[<p>按照《<a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_0" href="http://www.cnblogs.com/eastson/archive/2012/07/01/2571857.html" target="_blank">虚拟机最小安装CentOS 6.2</a>》安装好系统后，我们还需要做一些初始化设置。</p>
<p>&nbsp;</p>
<h3>安全方面的设置</h3>
<p><span>因为root用户对系统具有全权的操作权限，为了避免一些失误的操作，建议在一般情况下，以一般用户登录系统，必要的时候需要root操作权限时，再通过&ldquo;su -&rdquo;命令来登录为root用户进行操作。</span></p>
<p><span>&nbsp;</span></p>
<p>使用useradd命令建立名为amonest的新用户：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">useradd amonest</span></pre>
</div>
<p>然后用passwd命令设置其密码：</p>
<div class="cnblogs_code">
<pre><span>passwd</span> amonest</pre>
</div>
<p>&nbsp;</p>
<p><span>在 一般情况下，一般用户通过执行&ldquo;su -&rdquo;命令、输入正确的root密码，可以登录为root用户来对系统进行管理员级别的配置。但是，为了更进一步加强系统的安全性，有必要建立一个管理员的 组，只允许这个组的用户来执行&ldquo;su -&rdquo;命令登录为root用户，而让其他组的用户即使执行&ldquo;su -&rdquo;、输入了正确的root密码，也无法登录为root用户。在UNIX下，这个组的名称通常为&ldquo;wheel&rdquo;。</span></p>
<p><span>&nbsp;</span></p>
<p>编辑<span>/etc/pam.d/su文件，找到下面这一行，去掉前面的注释后保存：</span></p>
<div class="cnblogs_code">
<pre>#auth required /lib/security/$ISA/pam_wheel.so use_uid</pre>
</div>
<p>然后执行下面的命令：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">echo</span> <span style="color: #800000;">"</span><span style="color: #800000;">SU_WHEEL_ONLY yes</span><span style="color: #800000;">"</span> &gt;&gt; /etc/<span style="color: #0000ff;">login</span>.defs</pre>
</div>
<p>最后使用usermod命令将新用户添加到wheel组：</p>
<div class="cnblogs_code">
<pre>usermod -G wheel amonest</pre>
</div>
<p>&nbsp;</p>
<p><span>以上操作完成后，可以再建立一个新用户，然后用这个新建的用户测试会发现，没有加入到wheel组的用户，执行&ldquo;su -&rdquo;命令，即使输入了正确的root密码，也无法登录为root用户。</span></p>
<p><span>&nbsp;</span></p>
<p><em><strong>新用户建立好后，后面所有的操作都应该是以新用户身份来执行的。</strong></em></p>
<p>&nbsp;</p>
<p>更详细的设置可以参考《<a href="http://www.centospub.com/make/newenv.html" target="_blank">系统安装后的初始环境设置</a>》。</p>
<p>&nbsp;</p>
<h3>配置OpenSSH Server</h3>
<p>ssh的服务可以实现远程管理，不用每次都要跑到服务器前面。CentOS 6.2是默认有安装sshd的，该服务会服务器启动后自动启动。</p>
<p>&nbsp;</p>
<p>使用chkconfig命令查看sshd服务的情况：</p>
<div class="cnblogs_code">
<pre>$ chkconfig --<span style="color: #000000;">list sshd
sshd    </span><span style="color: #800080;">0</span>:off  <span style="color: #800080;">1</span>:off  <span style="color: #800080;">2</span>:on  <span style="color: #800080;">3</span>:on  <span style="color: #800080;">4</span>:on  <span style="color: #800080;">5</span>:on  <span style="color: #800080;">6</span>:off</pre>
</div>
<p>&nbsp;</p>
<p>更多信息可以参考《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/06/29/2570163.html" target="_blank">CentOS 6.2 安装OpenSSH Server</a>》和《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/06/28/2567745.html" target="_blank">CentOS设置服务开机自动启动</a>》。</p>
<p>&nbsp;</p>
<h3>软件包更新和安装新软件包</h3>
<p>系统安装好以后，有必要检查一下软件包是否需要更新：</p>
<div class="cnblogs_code">
<pre>$ yum check-<span style="color: #000000;">update
... ...
bash.x86_64                                </span><span style="color: #800080;">4.1</span>.<span style="color: #800080;">2</span>-<span style="color: #800080;">9</span><span style="color: #000000;">.el6_2                 updates
chkconfig.x86_64                           </span><span style="color: #800080;">1.3</span>.<span style="color: #800080;">49.3</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el6_2              updates
curl.x86_64                                </span><span style="color: #800080;">7.19</span>.<span style="color: #800080;">7</span>-<span style="color: #800080;">26</span>.el6_2.<span style="color: #800080;">4</span><span style="color: #000000;">             updates
... ...</span></pre>
</div>
<p>&nbsp;</p>
<p>执行yum update命令可以更新所有的软件包：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ yum update
... ...

</span>================================================================================<span style="color: #000000;">
 Package                       Arch    Version                   Repository
                                                                           Size
</span>================================================================================<span style="color: #000000;">
Installing:
 kernel                        x86_64  </span><span style="color: #800080;">2.6</span>.<span style="color: #800080;">32</span>-<span style="color: #800080;">220.23</span>.<span style="color: #800080;">1</span>.el6       updates   <span style="color: #800080;">24</span><span style="color: #000000;"> M
Updating:
 bash                          x86_64  </span><span style="color: #800080;">4.1</span>.<span style="color: #800080;">2</span>-<span style="color: #800080;">9</span>.el6_2             updates  <span style="color: #800080;">903</span><span style="color: #000000;"> k
 chkconfig                     x86_64  </span><span style="color: #800080;">1.3</span>.<span style="color: #800080;">49.3</span>-<span style="color: #800080;">1</span>.el6_2          updates  <span style="color: #800080;">159</span><span style="color: #000000;"> k
 curl                          x86_64  </span><span style="color: #800080;">7.19</span>.<span style="color: #800080;">7</span>-<span style="color: #800080;">26</span>.el6_2.<span style="color: #800080;">4</span>         updates  <span style="color: #800080;">192</span><span style="color: #000000;"> k
... ...</span></pre>
</div>]]></description></item><item><title>虚拟机最小安装CentOS 6.2</title><link>http://www.cnblogs.com/eastson/archive/2012/07/01/2571857.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 01 Jul 2012 06:31:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/07/01/2571857.html</guid><description><![CDATA[<p><span>家庭网络环境，台式机一台和笔记本电脑一台，两台电脑共享一个无线路由器通过ADSL上网。台式机是有线链接，笔记本是无线连接。</span><br /><span>路由器IP地址：192.168.1.1</span><br /><span>台式机IP地址：192.168.1.101</span><br /><span>笔记本IP地址：192.168.1.100</span><br /><span>子网掩码：255.255.255.0</span><br /><br /><span>现在在笔记本上通过VirtualBox 4.1.2装了CentOS 6.2。笔记本的操作系统是Ubuntu 12.04，虚拟机CentOS是最小安装。</span></p>
<p><span>&nbsp;</span></p>
<h3>安装CentOS 6.2</h3>
<p>首先运行VirtualBox，创建CentOS虚拟机。创建完毕后不要立即启动虚拟机，先设置一下虚拟机的网络配置。笔记本上应该有两块网卡：eth0是有线网卡，没有用；wlan0是无线网卡，当前用的就是它。所有我们要将虚拟机的网卡桥街到wlan0：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012070114121928.png" alt="" /></p>
<p>&nbsp;</p>
<p>网络配置完毕，就可以插入CentOS的安装光盘执行安装了。我当前用的是CentOS最小安装，安装完成后是文字界面。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012070114143160.png" alt="" /></p>
<p>&nbsp;</p>
<p>输入root帐号和安装过程中设置的root密码，登陆到CentOS。刚安装完毕的CentOS是没有配置网卡的。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012070114163956.png" alt="" /></p>
<p>&nbsp;</p>
<p>一般的路由器都会提供DHCP服务。我们需要执行dhclient命令手工获取IP地址：</p>
<div class="cnblogs_code">
<pre>dhclient eth0</pre>
</div>
<p>再次使用ifconfig命令，检查网卡eth0有没有获得IP地址：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012070114253915.png" alt="" /></p>
<p>&nbsp;</p>
<p>使用dhclient只是为本次登陆获得了IP地址，重启后还需要再次执行。为了能够启动时能自动获取IP地址，我们需要修改一下/etc/sysconfig/network-scripts/ifcfg-eth0：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012070114290097.png" alt="" /></p>
<p>&nbsp;</p>
<p>重启电脑，我们可以看到eth0自动获得了IP地址。OK，现在虚拟机可以上网了，后面就可以用yum命令慢慢配置它了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012070114305577.png" alt="" /></p>
<p>&nbsp;</p>
<p>本文之前，由于虚拟机不能上网的问题困扰了好几天，后来在ChinaUnix论坛的协助下终于解决了，可以参看论坛帖子《<a id="thread_subject" href="http://bbs.chinaunix.net/thread-3756250-1-1.html" target="_blank">CentOS 6.2最小安装不能上网</a>》。</p>]]></description></item><item><title>CentOS 6.2配置MySQL服务器</title><link>http://www.cnblogs.com/eastson/archive/2012/06/30/2570793.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 30 Jun 2012 04:04:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/30/2570793.html</guid><description><![CDATA[<h3>安装MySQL</h3>
<p>使用yum install命令安装MySQL：</p>
<div class="cnblogs_code">
<pre>yum <span style="color: #0000ff;">install</span> mysql-server mysql</pre>
</div>
<p>&nbsp;</p>
<p>更简单的方式，使用yum groupinstall命令：</p>
<div class="cnblogs_code">
<pre>yum groupinstall <span style="color: #800000;">"</span><span style="color: #800000;">MySQL Database server</span><span style="color: #800000;">"</span></pre>
</div>
<p>&nbsp;</p>
<p>检查mysqld服务是否正确安装：</p>
<div class="cnblogs_code">
<pre>$ chkconfig --<span style="color: #000000;">list mysqld
mysqld             </span><span style="color: #800080;">0</span>:off    <span style="color: #800080;">1</span>:off    <span style="color: #800080;">2</span>:off    <span style="color: #800080;">3</span>:off    <span style="color: #800080;">4</span>:off    <span style="color: #800080;">5</span>:off    <span style="color: #800080;">6</span>:off</pre>
</div>
<p>若有必要，还可以配置mysqld服务为开机自动启动：</p>
<div class="cnblogs_code">
<pre>chkconfig mysqld on</pre>
</div>
<p>&nbsp;</p>
<p>手工启动mysqld服务：</p>
<div class="cnblogs_code">
<pre>service mysqld start</pre>
</div>
<p>&nbsp;</p>
<h3>安全设置MySQL</h3>
<p>MySQL提供了一个mysql_secure_installation程序，以交互的方式帮助我们调整安全方面的设置。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ mysql_secure_installation<br />... ...
In order to log into MySQL to secure it, we</span><span style="color: #800000;">'</span><span style="color: #800000;">ll need the current</span>
password <span style="color: #0000ff;">for</span> the root user.  If you<span style="color: #800000;">'</span><span style="color: #800000;">ve just installed MySQL, and</span>
you haven<span style="color: #800000;">'</span><span style="color: #800000;">t set the root password yet, the password will be blank,</span>
<span style="color: #000000;">so you should just press enter here.

Enter current password </span><span style="color: #0000ff;">for</span> root (enter <span style="color: #0000ff;">for</span><span style="color: #000000;"> none):    ##输入MySQL的root密码，初始为空
OK, successfully used password, moving on...

Setting the root password ensures that nobody can log into the MySQL
root user without the proper authorisation.

Set root password</span>? [Y/<span style="color: #000000;">n] n    ##是否需要重设root密码？
 ... skipping.

By default, a MySQL installation has an anonymous user, allowing anyone
to log into MySQL without having to have a user account created </span><span style="color: #0000ff;">for</span><span style="color: #000000;">
them.  This is intended only </span><span style="color: #0000ff;">for</span> testing, and to <span style="color: #0000ff;">make</span><span style="color: #000000;"> the installation
go a bit smoother.  You should remove them before moving into a
production environment.

Remove anonymous users</span>? [Y/<span style="color: #000000;">n]    ##是否需要删除匿名帐号？
 ... Success</span>!<span style="color: #000000;">

Normally, root should only be allowed to connect from </span><span style="color: #800000;">'</span><span style="color: #800000;">localhost</span><span style="color: #800000;">'</span><span style="color: #000000;">.  This
ensures that someone cannot guess at the root password from the network.

Disallow root </span><span style="color: #0000ff;">login</span> remotely? [Y/n]    ##是否禁用root帐号在其它电脑登录?<span style="color: #000000;">
 ... Success</span>!<span style="color: #000000;">

By default, MySQL comes with a database named </span><span style="color: #800000;">'</span><span style="color: #800000;">test</span><span style="color: #800000;">'</span><span style="color: #000000;"> that anyone can
access.  This is also intended only </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> testing, and should be removed
before moving into a production environment.

Remove test database and access to it</span>? [Y/n]    ##是否需要删除test数据库?
 -<span style="color: #000000;"> Dropping test database...
 ... Success</span>!
 -<span style="color: #000000;"> Removing privileges on test database...
 ... Success</span>!<span style="color: #000000;">

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now</span>? [Y/n]    ##是否需要重新装入授权信息?<span style="color: #000000;">
 ... Success</span>!<span style="color: #000000;">

Cleaning up...



All </span><span style="color: #0000ff;">done</span>!  If you<span style="color: #800000;">'</span><span style="color: #800000;">ve completed all of the above steps, your MySQL</span>
<span style="color: #000000;">installation should now be secure.

Thanks </span><span style="color: #0000ff;">for</span> using MySQL!</pre>
</div>
<p>&nbsp;&nbsp;</p>
<h3>MySQL相关目录和文件</h3>
<p>/etc/my.cnf：MySQL服务器配置文件。</p>
<p>/var/lib/mysql：MySQL数据目录，可以通过my.cnf修改。</p>
<p>/usr/bin/mysqlamdin：MySQL服务器命令行程序。</p>
<p>/usr/bin/mysql：MySQL客户端命令行程序。</p>]]></description></item><item><title>yum和rpm使用方法总结</title><link>http://www.cnblogs.com/eastson/archive/2012/06/30/2570766.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 30 Jun 2012 00:31:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/30/2570766.html</guid><description><![CDATA[<p>&nbsp;使用search命令可以搜索软件包：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ yum search mysql        ##search SOME_STRING
... ...
mysql.x86_64 : MySQL client programs and shared libraries
mysql</span>-<span style="color: #000000;">bench.x86_64 : MySQL benchmark scripts and data
mysql</span>-connector-java.x86_64 : Official JDBC driver <span style="color: #0000ff;">for</span><span style="color: #000000;"> MySQL
mysql</span>-connector-odbc.x86_64 : ODBC driver <span style="color: #0000ff;">for</span><span style="color: #000000;"> MySQL
mysql</span>-devel.i686 : Files <span style="color: #0000ff;">for</span><span style="color: #000000;"> development of MySQL applications
mysql</span>-devel.x86_64 : Files <span style="color: #0000ff;">for</span><span style="color: #000000;"> development of MySQL applications
mysql</span>-<span style="color: #000000;">server.x86_64 : The MySQL server and related files
mysql</span>-<span style="color: #000000;">test.x86_64 : The test suite distributed with MySQL
... ...</span></pre>
</div>
<p>&nbsp;</p>
<p>使用info命令可以查询软件包的详细信息：</p>
<div class="cnblogs_code">
<pre>$yum <span style="color: #0000ff;">info</span> mysql-<span style="color: #000000;">server        ##info [PACKAGE|all|installed|updates|extras|obsoletes|recent]<br />... ...
Installed Packages
Name        : mysql
Arch        : x86_64
Version     : </span><span style="color: #800080;">5.1</span>.<span style="color: #800080;">52</span><span style="color: #000000;">
Release     : </span><span style="color: #800080;">1</span>.el6_0.<span style="color: #800080;">1</span><span style="color: #000000;">
Size        : </span><span style="color: #800080;">2.4</span><span style="color: #000000;"> M
Repo        : installed
From repo   : base
Summary     : MySQL client programs and shared libraries
URL         : http:</span><span style="color: #008000;">//</span><span style="color: #008000;">www.mysql.com</span>
<span style="color: #000000;">License     : GPLv2 with exceptions
Description : MySQL is a multi</span>-user, multi-<span style="color: #000000;">threaded SQL database server. MySQL is a
            : client</span>/<span style="color: #000000;">server implementation consisting of a server daemon (mysqld)
            : and many different client programs and libraries. The base package
            : contains the standard MySQL client programs and generic MySQL files.

Available Packages
Name        : mysql
Arch        : x86_64
Version     : </span><span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span><span style="color: #000000;">
Release     : </span><span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;">
Size        : </span><span style="color: #800080;">881</span><span style="color: #000000;"> k
Repo        : updates
Summary     : MySQL client programs and shared libraries
URL         : http:</span><span style="color: #008000;">//</span><span style="color: #008000;">www.mysql.com</span>
<span style="color: #000000;">License     : GPLv2 with exceptions
Description : MySQL is a multi</span>-user, multi-<span style="color: #000000;">threaded SQL database server. MySQL is a
            : client</span>/<span style="color: #000000;">server implementation consisting of a server daemon (mysqld)
            : and many different client programs and libraries. The base package
            : contains the standard MySQL client programs and generic MySQL files.</span></pre>
</div>
<p>&nbsp;</p>
<p>使用deplist命令可以检查软件包的依赖关系：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ yum deplist mysql        ##deplist PACKAGE...
... ...
package: mysql.x86_64 </span><span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;">
  dependency: </span><span style="color: #0000ff;">perl</span><span style="color: #000000;">(File::Temp)
   provider: </span><span style="color: #0000ff;">perl</span>.x86_64 <span style="color: #800080;">4</span>:<span style="color: #800080;">5.10</span>.<span style="color: #800080;">1</span>-<span style="color: #800080;">119</span>.el6_1.<span style="color: #800080;">1</span><span style="color: #000000;">
  dependency: libc.so.</span><span style="color: #800080;">6</span>(GLIBC_2.<span style="color: #800080;">3.4</span><span style="color: #000000;">)(64bit)
   provider: glibc.x86_64 </span><span style="color: #800080;">2.12</span>-<span style="color: #800080;">1.47</span><span style="color: #000000;">.el6
   provider: glibc.x86_64 </span><span style="color: #800080;">2.12</span>-<span style="color: #800080;">1.47</span>.el6_2.<span style="color: #800080;">9</span><span style="color: #000000;">
   provider: glibc.x86_64 </span><span style="color: #800080;">2.12</span>-<span style="color: #800080;">1.47</span>.el6_2.<span style="color: #800080;">12</span><span style="color: #000000;">
   provider: glibc.x86_64 </span><span style="color: #800080;">2.12</span>-<span style="color: #800080;">1.47</span>.el6_2.<span style="color: #800080;">5</span><span style="color: #000000;">
  dependency: </span><span style="color: #0000ff;">grep</span><span style="color: #000000;">
   provider: </span><span style="color: #0000ff;">grep</span>.x86_64 <span style="color: #800080;">2.6</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">2</span><span style="color: #000000;">.el6
... ...</span></pre>
</div>
<p>&nbsp;</p>
<p>使用update命令可以升级已经安装的软件包：</p>
<div class="cnblogs_code">
<pre>$ yum update mysql-<span style="color: #000000;">server        ##update [PACKAGE...]<br />... ...
Setting up Update Process
Resolving Dependencies
</span>--&gt;<span style="color: #000000;"> Running transaction check
</span>---&gt; Package mysql-server.x86_64 <span style="color: #800080;">0</span>:<span style="color: #800080;">5.1</span>.<span style="color: #800080;">52</span>-<span style="color: #800080;">1</span>.el6_0.<span style="color: #800080;">1</span><span style="color: #000000;"> will be updated
</span>---&gt; Package mysql-server.x86_64 <span style="color: #800080;">0</span>:<span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;"> will be an update
</span>--&gt; Processing Dependency: mysql = <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span> <span style="color: #0000ff;">for</span> package: mysql-server-<span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;">.x86_64
</span>--&gt;<span style="color: #000000;"> Running transaction check
</span>---&gt; Package mysql.x86_64 <span style="color: #800080;">0</span>:<span style="color: #800080;">5.1</span>.<span style="color: #800080;">52</span>-<span style="color: #800080;">1</span>.el6_0.<span style="color: #800080;">1</span><span style="color: #000000;"> will be updated
</span>---&gt; Package mysql.x86_64 <span style="color: #800080;">0</span>:<span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;"> will be an update
</span>--&gt; Processing Dependency: mysql-libs = <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span> <span style="color: #0000ff;">for</span> package: mysql-<span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;">.x86_64
</span>--&gt;<span style="color: #000000;"> Running transaction check
</span>---&gt; Package mysql-libs.x86_64 <span style="color: #800080;">0</span>:<span style="color: #800080;">5.1</span>.<span style="color: #800080;">52</span>-<span style="color: #800080;">1</span>.el6_0.<span style="color: #800080;">1</span><span style="color: #000000;"> will be updated
</span>---&gt; Package mysql-libs.x86_64 <span style="color: #800080;">0</span>:<span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;"> will be an update
</span>--&gt;<span style="color: #000000;"> Finished Dependency Resolution

Dependencies Resolved

</span>============================================================================================================<span style="color: #000000;">
 Package                    Arch                 Version                        Repository             Size
</span>============================================================================================================<span style="color: #000000;">
Updating:
 mysql</span>-server               x86_64               <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span>               updates               <span style="color: #800080;">8.1</span><span style="color: #000000;"> M
Updating </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> dependencies:
 mysql                      x86_64               </span><span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span>               updates               <span style="color: #800080;">881</span><span style="color: #000000;"> k
 mysql</span>-libs                 x86_64               <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span>               updates               <span style="color: #800080;">1.2</span><span style="color: #000000;"> M

Transaction Summary
</span>============================================================================================================<span style="color: #000000;">
Upgrade       </span><span style="color: #800080;">3</span> Package(s)<br />... ...</pre>
</div>
<p>&nbsp;</p>
<p>使用check-update命令可以检查软件包的升级信息：</p>
<div class="cnblogs_code">
<pre>$ yum check-update        ##check-<span style="color: #000000;">update [PACKAGE...]
... ...
bash.x86_64                                                </span><span style="color: #800080;">4.1</span>.<span style="color: #800080;">2</span>-<span style="color: #800080;">9</span><span style="color: #000000;">.el6_2                             updates
bind</span>-libs.x86_64                                           <span style="color: #800080;">32</span>:<span style="color: #800080;">9.7</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">8</span>.P3.el6_2.<span style="color: #800080;">3</span><span style="color: #000000;">                     updates
bind</span>-utils.x86_64                                          <span style="color: #800080;">32</span>:<span style="color: #800080;">9.7</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">8</span>.P3.el6_2.<span style="color: #800080;">3</span><span style="color: #000000;">                     updates
chkconfig.x86_64                                           </span><span style="color: #800080;">1.3</span>.<span style="color: #800080;">49.3</span>-<span style="color: #800080;">1</span><span style="color: #000000;">.el6_2                          updates
cups.x86_64                                                </span><span style="color: #800080;">1</span>:<span style="color: #800080;">1.4</span>.<span style="color: #800080;">2</span>-<span style="color: #800080;">44</span>.el6_2.<span style="color: #800080;">3</span><span style="color: #000000;">                        updates
... ...</span></pre>
</div>
<p>&nbsp;</p>
<p>使用erase命令可以移除安装的软件包：</p>
<div class="cnblogs_code">
<pre>$ yum erase mysql mysql-<span style="color: #000000;">server        ##erase PACKAGE...
... ...
</span>============================================================================================================<span style="color: #000000;">
 Package                      Arch            Version                      Repository                  Size
</span>============================================================================================================<span style="color: #000000;">
Removing:
 mysql                        x86_64          </span><span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span>             @updates                   <span style="color: #800080;">2.4</span><span style="color: #000000;"> M
 mysql</span>-server                 x86_64          <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span>             @updates                    <span style="color: #800080;">23</span><span style="color: #000000;"> M
Removing </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> dependencies:
 akonadi                      x86_64          </span><span style="color: #800080;">1.2</span>.<span style="color: #800080;">1</span>-<span style="color: #800080;">2</span>.el6                  @base/$releasever          <span style="color: #800080;">1.8</span><span style="color: #000000;"> M
 kdepim                       x86_64          </span><span style="color: #800080;">6</span>:<span style="color: #800080;">4.3</span>.<span style="color: #800080;">4</span>-<span style="color: #800080;">5</span>.el6                @base/$releasever           <span style="color: #800080;">21</span><span style="color: #000000;"> M
 kdepim</span>-libs                  x86_64          <span style="color: #800080;">6</span>:<span style="color: #800080;">4.3</span>.<span style="color: #800080;">4</span>-<span style="color: #800080;">5</span>.el6                @base/$releasever           <span style="color: #800080;">20</span><span style="color: #000000;"> M
 kdepim</span>-runtime               x86_64          <span style="color: #800080;">4.3</span>.<span style="color: #800080;">4</span>-<span style="color: #800080;">5</span>.el6                  @base/$releasever          <span style="color: #800080;">3.2</span><span style="color: #000000;"> M
 kdepim</span>-runtime-libs          x86_64          <span style="color: #800080;">4.3</span>.<span style="color: #800080;">4</span>-<span style="color: #800080;">5</span>.el6                  @base/$releasever          <span style="color: #800080;">834</span><span style="color: #000000;"> k
 kdepimlibs</span>-akonadi           x86_64          <span style="color: #800080;">4.3</span>.<span style="color: #800080;">4</span>-<span style="color: #800080;">4</span>.el6                  @base/$releasever          <span style="color: #800080;">1.2</span><span style="color: #000000;"> M
... ...</span></pre>
</div>
<p>&nbsp;</p>
<p>使用list命令可以查询已经安装的软件包：</p>
<div class="cnblogs_code">
<pre>$yum list mysql*        ##list [PACKAGE|all|installed|updates|extras|obsoletes|<span style="color: #000000;">recent]
Installed Packages
mysql.x86_64                                          </span><span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;">                              @updates
mysql</span>-libs.x86_64                                     <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;">                              @updates
mysql</span>-server.x86_64                                   <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;">                              @updates
Available Packages
MySQL</span>-python.x86_64                                   <span style="color: #800080;">1.2</span>.<span style="color: #800080;">3</span>-<span style="color: #800080;">0.3</span>.c1.<span style="color: #800080;">1</span><span style="color: #000000;">.el6                            base    
mysql</span>-bench.x86_64                                    <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;">                              updates 
mysql</span>-connector-java.x86_64                           <span style="color: #800080;">1</span>:<span style="color: #800080;">5.1</span>.<span style="color: #800080;">12</span>-<span style="color: #800080;">2</span><span style="color: #000000;">.el6                                base    
mysql</span>-connector-odbc.x86_64                           <span style="color: #800080;">5.1</span>.5r1144-<span style="color: #800080;">7</span><span style="color: #000000;">.el6                              base    
mysql</span>-devel.i686                                      <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;">                              updates 
mysql</span>-devel.x86_64                                    <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;">                              updates 
mysql</span>-embedded.i686                                   <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;">                              updates 
mysql</span>-embedded.x86_64                                 <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;">                              updates 
mysql</span>-embedded-devel.i686                             <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;">                              updates 
mysql</span>-embedded-devel.x86_64                           <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;">                              updates 
mysql</span>-libs.i686                                       <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span><span style="color: #000000;">                              updates 
mysql</span>-test.x86_64                                     <span style="color: #800080;">5.1</span>.<span style="color: #800080;">61</span>-<span style="color: #800080;">1</span>.el6_2.<span style="color: #800080;">1</span>                              updates</pre>
</div>
<p>&nbsp;</p>
<p>使用repolist命令可以查询系统安装的软件库：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ yum repolist all        ##repolist [all|enabled|disabled]
... ...
repo </span><span style="color: #0000ff;">id</span><span style="color: #000000;">                       repo name                               status
base                          CentOS</span>-<span style="color: #800080;">6</span> - Base                         enabled: <span style="color: #800080;">6</span>,<span style="color: #800080;">294</span><span style="color: #000000;">
c6</span>-media                      CentOS-<span style="color: #800080;">6</span> -<span style="color: #000000;"> Media                        disabled
centosplus                    CentOS</span>-<span style="color: #800080;">6</span> -<span style="color: #000000;"> Plus                         disabled
contrib                       CentOS</span>-<span style="color: #800080;">6</span> -<span style="color: #000000;"> Contrib                      disabled
debug                         CentOS</span>-<span style="color: #800080;">6</span> -<span style="color: #000000;"> Debuginfo                    disabled
extras                        CentOS</span>-<span style="color: #800080;">6</span> - Extras                       enabled:     <span style="color: #800080;">6</span><span style="color: #000000;">
testing                       CentOS</span>-<span style="color: #800080;">6</span> -<span style="color: #000000;"> Testing                      disabled
updates                       CentOS</span>-<span style="color: #800080;">6</span> - Updates                      enabled: <span style="color: #800080;">1</span>,<span style="color: #800080;">147</span><span style="color: #000000;">
repolist: </span><span style="color: #800080;">7</span>,<span style="color: #800080;">447</span></pre>
</div>
<p>&nbsp;</p>
<p>使用grouplist命令可以列出所有可用的软件包组：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ yum grouplist
... ...
Installed Groups:
   Additional Development
   Base
   Debugging Tools
... ...
Installed Language Groups:
   Arabic Support [</span><span style="color: #0000ff;">ar</span><span style="color: #000000;">]
   Armenian Support [hy]
   Assamese Support [as]
... ...
Available Groups:
   Backup Client
   Backup Server
   CIFS </span><span style="color: #0000ff;">file</span><span style="color: #000000;"> server
... ...
Available Language Groups:
   Afrikaans Support [af]
   Albanian Support [sq]
   Amazigh Support [ber]
... ...</span></pre>
</div>
<p>&nbsp;</p>
<p>使用groupinfo命令可以查询软件包组的详细信息：</p>
<div class="cnblogs_code">
<pre>$ yum groupinfo <span style="color: #800000;">"</span><span style="color: #800000;">FTP Server</span><span style="color: #800000;">"<br />... ...</span><span style="color: #000000;">
Group: FTP server
 Description: Allows the system to act as an FTP server.
 Mandatory Packages:
   vsftpd
 Optional Packages:
   xferstats</span></pre>
</div>
<p>&nbsp;</p>
<p>安装某个软件包：</p>
<div class="cnblogs_code">
<pre>$ rpm &ndash;ivh portmap-<span>4.0</span>-<span>54</span>.i386.rpm</pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;查询软件包是否已经安装：</p>
<div class="cnblogs_code">
<pre>$ rpm -<span>q openssh
openssh</span>-<span>5</span>.3p1-<span>70</span>.el6.x86_64</pre>
</div>
<p>&nbsp;</p>
<p>查询所有已安装的软件包：</p>
<div class="cnblogs_code">
<pre>$ rpm -qa<br />... ...<span>
openssh</span>-<span>5</span>.3p1-<span>81</span><span>.el6.x86_64
openssh</span>-server-<span>5</span>.3p1-<span>81</span><span>.el6.x86_64
libssh2</span>-<span>1.2</span>.<span>2</span>-<span>11</span>.el6_3.x86_64<br />... ...</pre>
</div>
<p>&nbsp;</p>
<p>查询软件包详细信息：</p>
<div class="cnblogs_code">
<pre>]$ rpm -<span style="color: #000000;">qi openssh
Name        : openssh                      Relocations: (not relocatable)
Version     : </span><span style="color: #800080;">5</span><span style="color: #000000;">.3p1                             Vendor: CentOS
Release     : </span><span style="color: #800080;">70</span>.el6                        Build Date: Thu <span style="color: #800080;">08</span> Dec <span style="color: #800080;">2011</span> <span style="color: #800080;">04</span>:<span style="color: #800080;">25</span>:<span style="color: #800080;">12</span><span style="color: #000000;"> AM CST
Install Date: Sat </span><span style="color: #800080;">11</span> Aug <span style="color: #800080;">2012</span> <span style="color: #800080;">03</span>:<span style="color: #800080;">57</span>:<span style="color: #800080;">26</span><span style="color: #000000;"> PM CST      Build Host: c6b18n2.bsys.dev.centos.org
Group       : Applications</span>/Internet         Source RPM: openssh-<span style="color: #800080;">5</span>.3p1-<span style="color: #800080;">70</span><span style="color: #000000;">.el6.src.rpm
Size        : </span><span style="color: #800080;">679713</span><span style="color: #000000;">                           License: BSD
... ...</span></pre>
</div>
<p>&nbsp;</p>
<p>查询软件包所有文件：</p>
<div class="cnblogs_code">
<pre>$ rpm -<span style="color: #000000;">ql openssh
</span>/etc/<span style="color: #0000ff;">ssh</span>
/etc/<span style="color: #0000ff;">ssh</span>/<span style="color: #000000;">moduli
</span>/usr/bin/<span style="color: #0000ff;">ssh-keygen</span>
/usr/libexec/<span style="color: #000000;">openssh
</span>/usr/libexec/openssh/<span style="color: #0000ff;">ssh</span>-<span style="color: #000000;">keysign
</span>/usr/share/doc/openssh-<span style="color: #800080;">5</span><span style="color: #000000;">.3p1
</span>/usr/share/doc/openssh-<span style="color: #800080;">5</span>.3p1/<span style="color: #000000;">CREDITS
</span>/usr/share/doc/openssh-<span style="color: #800080;">5</span>.3p1/<span style="color: #000000;">ChangeLog
</span>/usr/share/doc/openssh-<span style="color: #800080;">5</span>.3p1/<span style="color: #000000;">INSTALL
</span>/usr/share/doc/openssh-<span style="color: #800080;">5</span>.3p1/<span style="color: #000000;">LICENCE
... ...</span></pre>
</div>
<p>&nbsp;</p>
<p>查询软件包所有文档：</p>
<div class="cnblogs_code">
<pre>$ rpm -<span style="color: #000000;">qd openssh
</span>/usr/share/doc/openssh-<span style="color: #800080;">5</span>.3p1/<span style="color: #000000;">CREDITS
</span>/usr/share/doc/openssh-<span style="color: #800080;">5</span>.3p1/<span style="color: #000000;">ChangeLog
</span>/usr/share/doc/openssh-<span style="color: #800080;">5</span>.3p1/<span style="color: #000000;">INSTALL
</span>/usr/share/doc/openssh-<span style="color: #800080;">5</span>.3p1/<span style="color: #000000;">LICENCE
</span>/usr/share/doc/openssh-<span style="color: #800080;">5</span>.3p1/<span style="color: #000000;">OVERVIEW
</span>/usr/share/doc/openssh-<span style="color: #800080;">5</span>.3p1/<span style="color: #000000;">PROTOCOL
</span>/usr/share/doc/openssh-<span style="color: #800080;">5</span>.3p1/<span style="color: #000000;">PROTOCOL.agent
</span>/usr/share/doc/openssh-<span style="color: #800080;">5</span>.3p1/README</pre>
</div>
<p>&nbsp;</p>
<p>查询软件包所有配置：</p>
<div class="cnblogs_code">
<pre>$ rpm -<span style="color: #000000;">qc coreutils
</span>/etc/<span style="color: #000000;">DIR_COLORS
</span>/etc/<span style="color: #000000;">DIR_COLORS.256color
</span>/etc/<span style="color: #000000;">DIR_COLORS.lightbgcolor
</span>/etc/pam.d/<span style="color: #000000;">runuser
</span>/etc/pam.d/runuser-<span style="color: #000000;">l
</span>/etc/pam.d/<span style="color: #0000ff;">su</span>
/etc/pam.d/<span style="color: #0000ff;">su</span>-<span style="color: #000000;">l
</span>/etc/profile.d/<span style="color: #000000;">colorls.csh
</span>/etc/profile.d/colorls.<span style="color: #0000ff;">sh</span></pre>
</div>
<p>&nbsp;</p>
<p>查询某个文件所在的软件包(必须是绝对路径)：</p>
<div class="cnblogs_code">
<pre>$ rpm -qf /bin/<span style="color: #0000ff;">ls</span><span style="color: #000000;">
coreutils</span>-<span style="color: #800080;">8.4</span>-<span style="color: #800080;">16</span>.el6.x86_64</pre>
</div>
<p>&nbsp;</p>
<p>rpm查询命令(-q)加上v参数可以显示长文件信息：</p>
<div class="cnblogs_code">
<pre>$ rpm -<span style="color: #000000;">qcv coreutils
</span>-rw-r--r--    <span style="color: #800080;">1</span> root    root                     <span style="color: #800080;">4439</span> Apr <span style="color: #800080;">28</span>  <span style="color: #800080;">2010</span> /etc/<span style="color: #000000;">DIR_COLORS
</span>-rw-r--r--    <span style="color: #800080;">1</span> root    root                     <span style="color: #800080;">5139</span> Apr <span style="color: #800080;">28</span>  <span style="color: #800080;">2010</span> /etc/<span style="color: #000000;">DIR_COLORS.256color
</span>-rw-r--r--    <span style="color: #800080;">1</span> root    root                     <span style="color: #800080;">4113</span> Apr <span style="color: #800080;">28</span>  <span style="color: #800080;">2010</span> /etc/<span style="color: #000000;">DIR_COLORS.lightbgcolor
</span>-rw-r--r--    <span style="color: #800080;">1</span> root    root                      <span style="color: #800080;">143</span> Feb <span style="color: #800080;">14</span>  <span style="color: #800080;">2007</span> /etc/pam.d/<span style="color: #000000;">runuser
</span>-rw-r--r--    <span style="color: #800080;">1</span> root    root                      <span style="color: #800080;">105</span> Feb <span style="color: #800080;">14</span>  <span style="color: #800080;">2007</span> /etc/pam.d/runuser-<span style="color: #000000;">l
</span>-rw-r--r--    <span style="color: #800080;">1</span> root    root                      <span style="color: #800080;">487</span> Feb <span style="color: #800080;">14</span>  <span style="color: #800080;">2007</span> /etc/pam.d/<span style="color: #0000ff;">su</span>
-rw-r--r--    <span style="color: #800080;">1</span> root    root                      <span style="color: #800080;">137</span> Feb <span style="color: #800080;">14</span>  <span style="color: #800080;">2007</span> /etc/pam.d/<span style="color: #0000ff;">su</span>-<span style="color: #000000;">l
</span>-rw-r--r--    <span style="color: #800080;">1</span> root    root                     <span style="color: #800080;">1133</span> Apr <span style="color: #800080;">28</span>  <span style="color: #800080;">2010</span> /etc/profile.d/<span style="color: #000000;">colorls.csh
</span>-rw-r--r--    <span style="color: #800080;">1</span> root    root                     <span style="color: #800080;">1143</span> Apr <span style="color: #800080;">28</span>  <span style="color: #800080;">2010</span> /etc/profile.d/colorls.<span style="color: #0000ff;">sh</span></pre>
</div>
<p>&nbsp;</p>
<p>删除某个软件包，但不删除以来它的软件包：</p>
<div class="cnblogs_code">
<pre>$ rpm -ev --nodeps httpd</pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>Linux相关文章索引</title><link>http://www.cnblogs.com/eastson/archive/2012/06/29/2570128.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 29 Jun 2012 09:10:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/29/2570128.html</guid><description><![CDATA[<h3 class="title">Linux系统</h3>
<p><a href="http://man.chinaunix.net/" target="_blank"><span style="color: #235cc7;">Linux手册中心</span></a>&nbsp;|&nbsp;<a href="https://access.redhat.com/knowledge/docs/" target="_blank">RedHat产品文档</a></p>
<p class="title"><a href="http://www.ubuntu.com/" target="_blank">Ubuntu.com</a>&nbsp;|&nbsp;<a href="https://one.ubuntu.com/dashboard/" target="_blank">Ubuntu One</a>&nbsp;|&nbsp;<span class="title"><a href="http://people.ubuntu.com/~happyaron/ubuntu-docs/precise-html/" target="_blank">Ubuntu桌面指南</a>&nbsp;|&nbsp;</span><a href="http://people.ubuntu.com/~happyaron/udc-cn/lucid-html/" target="_blank">Ubuntu桌面培训</a>&nbsp;|&nbsp;<a href="http://forum.ubuntu.org.cn/" target="_blank">Ubuntu中文论坛</a>&nbsp;|&nbsp;<a href="http://www.chinaunix.net/" target="_blank">ChinaUnix.net</a></p>
<p><a href="https://launchpad.net/+help-soyuz/ppa-sources-list.html" target="_blank">How do I use software from a PPA?</a></p>
<p class="post-title"><a href="http://blog.webwlan.net/wordpress/?p=5377" target="_blank">深入 Linux PAM 体系结构</a>&nbsp;|&nbsp;<a href="http://blog.webwlan.net/wordpress/?p=5374" target="_blank">vsftpd+mysql+pam实现ftp登录验证</a></p>
<p>&nbsp;</p>
<h3>服务器安装和初始化</h3>
<p><a href="http://www.cnblogs.com/eastson/archive/2012/07/01/2571857.html" target="_blank">虚拟机最小安装CentOS 6.2</a><a href="http://www.cnblogs.com/eastson/archive/2012/06/29/2570163.html" target="_blank"><br /></a></p>
<p><a href="http://www.cnblogs.com/eastson/archive/2012/07/01/2572187.html" target="_blank">CentOS 6.2系统安装后的初始环境设置</a><a href="http://www.cnblogs.com/eastson/archive/2012/06/29/2570163.html" target="_blank"><br /></a></p>
<p><a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/07/06/2578758.html" target="_blank">使用安装光盘建立本地yum仓库</a></p>
<p>&nbsp;</p>
<h3>SSH服务器</h3>
<p><a href="http://www.cnblogs.com/eastson/archive/2012/06/29/2570163.html" target="_blank">CentOS 6.2 安装OpenSSH Server【原】</a></p>
<p><a href="http://wiki.centos.org/zh/HowTos/Network/SecuringSSH" target="_blank">CentOS Wiki -&nbsp;保卫 OpenSSH</a></p>
<p class="entry-title"><a href="http://www.cyberciti.biz/tips/linux-unix-bsd-openssh-server-best-practices.html" target="_blank">Top 20 OpenSSH Server Best Security Practices</a></p>
<p class="entry-title">&nbsp;</p>
<h3 class="entry-title">Apache网站服务器&nbsp;</h3>
<p><a href="http://httpd.apache.org/docs/2.4/" target="_blank">Apache HTTP 服务器 2.4 文档</a></p>
<p><a href="http://www.phpchina.com/resource/manual/apache/" target="_blank">Apache HTTP Server Version 2.2 文档</a></p>
<p><a href="http://www.phpv.net/html/1396.html" target="_blank">Apache2 httpd.conf 中文版</a></p>
<p><a href="http://wenku.baidu.com/view/beab4df8aef8941ea76e05ab.html?from=related&amp;hasrec=1" target="_blank">htaccess使用手册</a></p>
<p>&nbsp;</p>
<h3 class="entry-title">MySQL数据库服务器</h3>
<p><a href="http://www.cnblogs.com/eastson/archive/2012/06/30/2570793.html" target="_blank">CentOS 6.2配置MySQL服务器【原】</a></p>
<p class="title"><a href="http://www.phpchina.com/resource/manual/mysql/" target="_blank">MySQL 5.1参考手册</a></p>
<p class="title"><a href="http://dev.mysql.com/doc/refman/5.6/en/index.html" target="_blank">MySQL 5.6 Reference Manual</a></p>
<p class="title"><a href="http://www.chedong.com/tech/mysql.html" target="_blank">MySQL服务维护笔记：Linux下的安装与分布式规划</a></p>
<p class="title">&nbsp;</p>
<h3 class="title">mongoDB相关链接</h3>
<p class="title"><a href="http://www.mongodb.org/pages/viewpage.action?pageId=5079126" target="_blank">mongoDB官方文档 - 中文版</a></p>
<p class="title"><a href="http://www.mongodb.org/display/DOCS/Home" target="_blank">mongoDB官方文档 - 英文版</a></p>
<p class="title">&nbsp;</p>
<h3 class="title">Puppet：强大的中心配置管理系统</h3>
<p class="title"><a href="http://www.puppetlabs.com/" target="_blank">Puppet官方网站</a>&nbsp;|&nbsp;<a href="http://docs.puppetlabs.com/" target="_blank">Documentation</a>&nbsp;|&nbsp;<a href="http://puppet.chinaec2.com/" target="_blank">中文wiki</a></p>
<p class="posttitle"><a href="http://www.vpsee.com/2012/03/install-puppet-on-centos-6-2/" rel="bookmark" target="_blank">在 CentOS 6.2 上安装 Puppet 配置管理工具</a></p>
<p class="posttitle"><a href="http://wenku.baidu.com/view/cfd6c8ee172ded630b1cb613.html" target="_blank">puppet2.6配置手册</a>&nbsp;| <a href="http://wenku.baidu.com/view/7e7cb4d376a20029bd642dfb.html" target="_blank">入门</a>&nbsp;|&nbsp;<a href="http://forge.puppetlabs.com/" target="_blank">Puppet Forge</a>&nbsp;|&nbsp;<a href="https://github.com/camptocamp" target="_blank"><span class="username">camptocamp</span></a>&nbsp;|&nbsp;<a href="https://github.com/example42" target="_blank">example42</a> |&nbsp;<a href="http://www.vpsee.com/2012/05/using-puppet-modules-from-example42/" rel="bookmark" target="_blank">如何使用Example42的Puppet模块</a></p>
<p class="title">&nbsp;</p>
<h3 class="ts">系统自动化安装&nbsp;</h3>
<p class="ts"><a href="http://bbs.chinaunix.net/thread-3754429-1-1.html" target="_blank">ChinaUnit论坛 -&nbsp;系统自动化安装</a></p>
<p class="ts"><a href="http://wenku.baidu.com/view/fd9d9068011ca300a6c390b5.html" target="_blank"><span>红</span><span>帽</span><span>企</span><span>业</span><span>版</span><span>L</span><span>i</span><span>n</span><span>u</span><span>x</span><span>-</span><span>K</span><span>i</span><span>c</span><span>k</span><span>s</span><span>t</span><span>a</span><span>r</span><span>t</span><span>安</span><span>装</span><span>手</span><span>册</span></a></p>
<p class="ts"><a href="http://wenku.baidu.com/view/6fc37441336c1eb91a375db6.html" target="_blank"><span>R</span><span>H</span><span>E</span><span>L</span><span>6</span><span>.</span><span>1</span><span>K</span><span>i</span><span>c</span><span>k</span><span>s</span><span>t</span><span>a</span><span>r</span><span>t</span><span>安</span><span>装</span><span>配</span><span>置</span><span>手</span><span>册</span></a></p>
<p class="ts"><a href="http://wenku.baidu.com/view/8a002b3567ec102de2bd8959.html" target="_blank"><span id="doc-tittle-5">KickStart无人值守批量安装Linux</span></a></p>
<p class="ts"><a href="http://wenku.baidu.com/view/b4d5e923482fb4daa58d4b8a.html" target="_blank"><span>定</span><span>制</span><span>基</span><span>于</span><span>k</span><span>i</span><span>c</span><span>k</span><span>s</span><span>t</span><span>a</span><span>r</span><span>t</span><span>的</span><span>R</span><span>HEL</span><span>自</span><span>动</span><span>安</span><span>装</span><span>光</span><span>盘</span></a></p>
<p class="ts"><a id="thread_subject" href="http://bbs.chinaunix.net/thread-3757201-1-1.html" target="_blank">讨论：如何同步上百/千台服务器的某一个配置文件？</a></p>
<p><span class="xw0 xs1">&nbsp;</span></p>
<h3>Linux研究</h3>
<p><a href="http://www.sooset.com/linux-kernel-codex.php" target="_blank">热门索引工程</a> |&nbsp;<a href="http://www.sooset.com/xref/prj?pid=0cb74-44303685" target="_blank">linux 0.01</a> | <a href="http://www.sooset.com/xref/prj?pid=50faa-cc6bd6ba" target="_blank">linux 0.11</a>&nbsp;| <a href="http://oldlinux.org/" target="_blank">oldlinux.org</a> |&nbsp;<a href="http://www.doc88.com/p-69111410247.html" target="_blank">Linux内核源代码完全注释(0.11)</a></p>
<p id="head-ecc5142b6cdbebef2b4c0e696ec01e54c6eaf24a"><a href="http://wiki.centos.org/zh/HowTos/BuildingKernelModules" target="_blank">创建你自己的内核模块</a></p>
<p>&nbsp;</p>
<h3 class="title">iptables防火墙</h3>
<p class="r"><a href="http://www.frozentux.net/iptables-tutorial/cn/iptables-tutorial-cn-1.1.19.html" target="_blank">iptables 指南1.1.19</a></p>
<p class="r"><span><a href="http://www.centos.bz/2011/06/iptables-basic-guide/" target="_blank">Iptables静态防火墙基础教程</a>&nbsp;|&nbsp;<span><a href="http://www.centos.bz/2011/09/example-webserver-iptable-ruleset/" target="_blank">适合Web服务器的iptables规则</a>&nbsp;|&nbsp;</span></span><a href="http://www.centos.bz/2011/10/setup-iptables-for-ftp/" rel="bookmark" target="_blank">设置iptables之后不能正常访问ftp解决方法</a></p>
<p class="r"><a href="http://blog.chinaunix.net/uid-26963748-id-3267168.html" target="_blank">利用iptables开放被动模式下的FTP服务</a></p>]]></description></item><item><title>CentOS 6.2 安装OpenSSH Server</title><link>http://www.cnblogs.com/eastson/archive/2012/06/29/2570163.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 29 Jun 2012 09:06:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/29/2570163.html</guid><description><![CDATA[<p>安装好了CentOS 6.2，我想让它作为一个服务器，可以让我的Windows 7电脑远程登录。</p>
<p>&nbsp;</p>
<h3>安装OpenSSH Server</h3>
<p>首先，我们搜索一下CentOS的软件库里面有没有已经定义好的SSH服务器包：</p>
<div class="cnblogs_code">
<pre>$ yum search <span style="color: #0000ff;">ssh<br />... ...</span><span style="color: #000000;">
openssh.x86_64 : An open source implementation of SSH protocol versions </span><span style="color: #800080;">1</span> and <span style="color: #800080;">2</span><span style="color: #000000;">
openssh</span>-askpass.x86_64 : A passphrase <span style="color: #0000ff;">dialog</span> <span style="color: #0000ff;">for</span><span style="color: #000000;"> OpenSSH and X
openssh</span>-<span style="color: #000000;">clients.x86_64 : An open source SSH client applications
openssh</span>-ldap.x86_64 : A LDAP support <span style="color: #0000ff;">for</span><span style="color: #000000;"> open source SSH server daemon
openssh</span>-server.x86_64 : An open source SSH server daemon<br />... ...</pre>
</div>
<p>&nbsp;</p>
<p>OpenSSH是Secure Shell的一个开源实现。从上面的搜索结果可以看到，CentOS的软件库里面已经有了OpenSSH的服务器包(openssh-server)和客户端包(openssh-clients)，用yum install可以直接安装。</p>
<div class="cnblogs_code">
<pre>$ yum <span style="color: #0000ff;">install</span> openssh-server</pre>
</div>
<p>&nbsp;</p>
<p>OpenSSH Server安装完成后在/etc/init.d目录下应该会增加一个名为sshd的服务。可以参考《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/06/28/2567745.html" target="_blank">CentOS设置服务开机自动启动</a>》的方式配置sshd服务开机自动启动。</p>
<div class="cnblogs_code">
<pre>$ chkconfig --<span style="color: #000000;">list sshd
sshd      </span><span style="color: #800080;">0</span>:off    <span style="color: #800080;">1</span>:off    <span style="color: #800080;">2</span>:on    <span style="color: #800080;">3</span>:on    <span style="color: #800080;">4</span>:on    <span style="color: #800080;">5</span>:on    <span style="color: #800080;">6</span>:off</pre>
</div>
<p>&nbsp;</p>
<p>手动启动sshd服务，方便后面客户端的连接：</p>
<div class="cnblogs_code">
<pre>$ /etc/init.d/sshd start</pre>
</div>
<p>&nbsp;</p>
<h3>用密码方式登录远程服务器</h3>
<p>WIndows 7里面的SSH客户端软件我用的是<a href="http://www.netsarang.com/products/xsh_overview.html" target="_blank">XShell</a>。打开XShell，新建连接，选择Password验证方式，输入用户名和密码，这样就可以连接到服务器了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012062916495372.png" alt="" /></p>
<p>&nbsp;</p>
<p>登录成功后的画面：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012062916523392.png" alt="" /></p>
<p>&nbsp;</p>
<h3>用RSA密钥登录远程服务器</h3>
<p>OpenSSH允许使用RSA的方式登录服务器。RSA加密方式会有两个文件：一个是公钥文件，放在服务器$HOME/.ssh/authorized_keys文件里面；另外一个是私钥文件，放在客户端电脑上。</p>
<p>&nbsp;</p>
<p>产生RSA密钥对，可以在服务器产生，也可以在客户端产生：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">ssh-keygen</span></pre>
</div>
<p>执行完毕后，会在$HOME/.ssh目录下多出来两个文件：id_rsa.pub(公钥文件)和id_rsa(私钥文件)。</p>
<p>&nbsp;</p>
<p>将公钥文件追加到$HOME/.ssh/authorized_keys文件后面：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">cat</span> id_rsa.pub &gt;&gt; authorized_keys</pre>
</div>
<p>&nbsp;</p>
<p>将私钥文件下载到客户端电脑（可以使用SFTP方式，例如XFtp，WinSCP等很多软件），然后新建XShell连接，选择Public Key验证方式：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012062917043443.png" alt="" /></p>
<p>&nbsp;</p>
<p>配置完毕，现在我们可以不用输入密码也能够连接到服务器了。</p>
<p>&nbsp;</p>
<h3>OpenSSH相关目录和文件</h3>
<p>所有配置信息保存的目录：/etc/ssh</p>
<p>sshd服务配置文件：/etc/ssh/sshd_config</p>
<p>&nbsp;</p>
<h3>OpenSSH相关链接</h3>
<p>《<a href="http://www.centospub.com/make/sshd.html" target="_blank">用OpenSSH构建SSH服务器</a>》：安装O盆SSH服务器。</p>
<p>《<a href="http://www.centospub.com/make/sshcl.html" target="_blank">用SSH客户端软件登录到服务器</a>》：如何用PUTTY+RSA登陆远程服务器。</p>
<p>《<a href="http://wiki.centos.org/zh/HowTos/Network/SecuringSSH" target="_blank">CentOS Wiki -&nbsp;保卫 OpenSSH</a>》：OpenSSH的安全设置。</p>
<p>《<a href="http://www.cyberciti.biz/tips/linux-unix-bsd-openssh-server-best-practices.html" target="_blank">Top 20 OpenSSH Server Best Security Practices</a>》：20个需要遵守的SSH安全建议。</p>]]></description></item><item><title>CentOS设置服务开机自动启动【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/06/28/2567745.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 28 Jun 2012 08:00:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/28/2567745.html</guid><description><![CDATA[<p>CentOS安装好apache、mysql等服务器程序后，并没有设置成开机自动启动的，为避免重启后还要手动开启web等服务器，还是做下设置好，其实设置很简单，用<em><strong>chkconfig</strong></em>命令就行了。</p>
<p>&nbsp;</p>
<p>例如，要开机后自动启动mysql、apache、vsftpd服务，用以下命令即可：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">chkconfig mysqld on
chkconfig httpd on
chkconfig vsftpd on</span></pre>
</div>
<p>&nbsp;</p>
<p>要关闭自动启动的话，把<em><strong>on</strong></em>改为<em><strong>off</strong></em>就行了。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">chkconfig mysqld off
chkconfig httpd off
chkconfig vsftpd off</span></pre>
</div>
<p>&nbsp;</p>
<p>不过要注意的是，如果某个服务尚未被添加到chkconfig列表中，则现需要使用<em><strong>&ndash;add</strong></em>参数将其添加进去：</p>
<div class="cnblogs_code">
<pre>chkconfig &ndash;add postfix</pre>
</div>
<p>&nbsp;</p>
<p>如果要查询当前所有自动启动的服务，可以输入：</p>
<div class="cnblogs_code">
<pre>chkconfig &ndash;list</pre>
</div>
<p>但是这样显示东西太多了，看起来很晕。如果只想看指定的服务怎么办呢？这个时候只需要在&ldquo;<em><strong>&ndash;list</strong></em>&rdquo;之后加上服务名就好了，比如查看httpd服务是否为自动启动，就输入：</p>
<div class="cnblogs_code">
<pre>chkconfig &ndash;list httpd</pre>
</div>
<p>这个时候输出的结果：</p>
<div class="cnblogs_code">
<pre>httpd           <span style="color: #800080;">0</span>:off   <span style="color: #800080;">1</span>:off   <span style="color: #800080;">2</span>:off   <span style="color: #800080;">3</span>:off   <span style="color: #800080;">4</span>:off   <span style="color: #800080;">5</span>:off   <span style="color: #800080;">6</span>:off</pre>
</div>
<p>此时0~6均为off，则说明httpd服务不会在系统启动的时候自动启动。我们输入<em><strong>chkconfig httpd on</strong></em>后，再次检查输出结果变为：</p>
<div class="cnblogs_code">
<pre>httpd           <span style="color: #800080;">0</span>:off   <span style="color: #800080;">1</span>:off   <span style="color: #800080;">2</span>:on    <span style="color: #800080;">3</span>:on    <span style="color: #800080;">4</span>:on    <span style="color: #800080;">5</span>:on    <span style="color: #800080;">6</span>:off</pre>
</div>
<p>这个时候2~5都是on，就表明会自动启动了。</p>
<p>&nbsp;</p>
<p><a href="http://www.wincold.com/archives/151.html" target="_blank">http://www.wincold.com/archives/151.html</a></p>]]></description></item><item><title>Ubuntu安装小技巧 - 拔掉网线</title><link>http://www.cnblogs.com/eastson/archive/2012/06/27/2565706.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 27 Jun 2012 05:57:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/27/2565706.html</guid><description><![CDATA[<p><span>Ubuntu同网络的联系太紧密了，在安装的时候往往会自动选择下载一些软件包，如果网速很慢的话，提示你还有几十个小时都有可能。</span></p>
<p><span>&nbsp;</span></p>
<p><em><strong>我用的是Ubuntu 12.04，安装开始的时候将网线拔掉，整个安装过程用时不到十分钟。</strong></em></p>
<p><em><strong>&nbsp;</strong></em></p>
<p>采用这种方式安装完毕后进入系统会提示说&ldquo;<em><strong>语言支持没有完整安装</strong></em>&rdquo;，还是需要再下载一些语言包。不过相对来说我还是觉得安装完毕后再慢慢下载感觉上更好一些。</p>]]></description></item><item><title>设置Ubuntu的IP地址</title><link>http://www.cnblogs.com/eastson/archive/2012/06/27/2565394.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 27 Jun 2012 02:34:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/27/2565394.html</guid><description><![CDATA[<p><span>Ubuntu的IP地址放在<em><strong>/etc/network/interfaces</strong></em>，DNS设置放在<em><strong>/etc/resolv.conf</strong></em>。</span></p>
<p><span>&nbsp;</span></p>
<h3>设置静态IP地址</h3>
<p><span>1.&nbsp;备份<em><strong>/etc/network/interfaces</strong></em>：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">cp</span> /etc/network/interfaces /etc/network/interfaces.backup</pre>
</div>
<p>2.&nbsp;编辑<em><strong>/etc/network/interfaces</strong></em>，将下面的内容替换到有关<em><strong>eth0</strong></em>的行：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">auto eth0  
iface eth0 inet static  
address </span><span style="color: #800080;">192.168</span>.<span style="color: #800080;">3.90</span><span style="color: #000000;">  
gateway </span><span style="color: #800080;">192.168</span>.<span style="color: #800080;">3.1</span><span style="color: #000000;">  
netmask </span><span style="color: #800080;">255.255</span>.<span style="color: #800080;">255.0</span>  </pre>
</div>
<p>3.&nbsp;重启网络服务：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> /etc/init.d/networking restart</pre>
</div>
<p>&nbsp;</p>
<h3><span>设置动态IP地址</span></h3>
<p><span>1.&nbsp;备份<em><strong>/etc/network/interfaces</strong></em>：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">cp</span> /etc/network/interfaces /etc/network/interfaces.backup</pre>
</div>
<p>2.&nbsp;编辑<em><strong>/etc/network/interfaces</strong></em>，将下面的内容替换到有关<em><strong>eth0</strong></em>的行：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">auto eth0  
iface eth0 inet dhcp  </span></pre>
</div>
<p>3.&nbsp;重启网络服务：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> /etc/init.d/networking restart</pre>
</div>
<p>4.&nbsp;可以使用<em><strong>dhclient</strong></em>刷新IP地址：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> dhclient eth0</pre>
</div>
<p>&nbsp;</p>
<h3><span>设置DNS</span></h3>
<p><span>1.&nbsp;备份<em><strong>/etc/resolv.conf</strong></em>：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">cp</span> /etc/resolv.conf /etc/resolv.conf.backup</pre>
</div>
<p>2.&nbsp;编辑<em><strong>/etc/resolv.conf</strong></em>，将原来的内容替换成：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">domain xxx.com  
search xxx.com  
nameserver </span><span style="color: #800080;">10.3</span>.<span style="color: #800080;">1.1</span><span style="color: #000000;">  
nameserver </span><span style="color: #800080;">10.3</span>.<span style="color: #800080;">1.14</span>  </pre>
</div>
<p>3.&nbsp;重启网络服务：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> /etc/init.d/networking restart</pre>
</div>
<p>&nbsp;</p>
<h3><span>设置主机名称</span></h3>
<p><span>1.&nbsp;使用<em><strong>hostname</strong></em>查看当前主机名称：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">hostname</span></pre>
</div>
<p>2.&nbsp;使用<em><strong>hostname</strong></em>修改当前主机名称：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">hostname</span> newname</pre>
</div>]]></description></item><item><title>编译PHP错误：undefined reference to `ts_resource_ex'</title><link>http://www.cnblogs.com/eastson/archive/2012/06/25/2561621.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 25 Jun 2012 11:43:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/25/2561621.html</guid><description><![CDATA[<p>执行PHP的编译命令：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> ./configure --<span style="color: #000000;">with-apxs2=/usr/local/apache2/bin/apxs --with-mysql
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">make</span></pre>
</div>
<p>&nbsp;</p>
<p>产生下面的错误信息：</p>
<div class="cnblogs_code">
<pre>/usr/local/src/php-<span style="color: #800080;">5.4</span>.<span style="color: #800080;">3</span>/ext/standard/<span style="color: #0000ff;">info</span>.c:<span style="color: #800080;">105</span><span style="color: #000000;">: 
ext</span>/standard/.libs/<span style="color: #0000ff;">info</span>.o: In <span style="color: #0000ff;">function</span> `php_info_printf<span style="color: #800000;">'</span><span style="color: #800000;">:</span>
/usr/local/src/php-<span style="color: #800080;">5.4</span>.<span style="color: #800080;">3</span>/ext/standard/<span style="color: #0000ff;">info</span>.c:<span style="color: #800080;">83</span>: undefined reference to `ts_resource_ex<span style="color: #800000;">'
</span>ext/standard/.libs/<span style="color: #0000ff;">info</span>.o: In <span style="color: #0000ff;">function</span> `php_info_print_html_esc<span style="color: #800000;">'</span><span style="color: #800000;">:</span>
/usr/local/src/php-<span style="color: #800080;">5.4</span>.<span style="color: #800080;">3</span>/ext/standard/<span style="color: #0000ff;">info</span>.c:<span style="color: #800080;">69</span>: undefined reference to `ts_resource_ex<span style="color: #800000;">'
</span>ext/standard/.libs/<span style="color: #0000ff;">info</span>.o: In <span style="color: #0000ff;">function</span> `php_print_gpcse_array<span style="color: #800000;">'</span><span style="color: #800000;">:</span>
/usr/local/src/php-<span style="color: #800080;">5.4</span>.<span style="color: #800080;">3</span>/ext/standard/<span style="color: #0000ff;">info</span>.c:<span style="color: #800080;">208</span>: undefined reference to `executor_globals_id<span style="color: #800000;">'
</span>ext/standard/.libs/<span style="color: #0000ff;">info</span>.o: In <span style="color: #0000ff;">function</span> `php_info_print_request_uri<span style="color: #800000;">'</span><span style="color: #800000;">:</span>
/usr/local/src/php-<span style="color: #800080;">5.4</span>.<span style="color: #800080;">3</span>/ext/standard/<span style="color: #0000ff;">info</span>.c:<span style="color: #800080;">97</span>: undefined reference to `sapi_globals_id<span style="color: #800000;">'
</span>ext/standard/.libs/<span style="color: #0000ff;">info</span>.o: In <span style="color: #0000ff;">function</span> `php_print_info<span style="color: #800000;">'</span><span style="color: #800000;">:</span>
/usr/local/src/php-<span style="color: #800080;">5.4</span>.<span style="color: #800080;">3</span>/ext/standard/<span style="color: #0000ff;">info</span>.c:<span style="color: #800080;">874</span>: undefined reference to `executor_globals_id<span style="color: #800000;">'
</span>collect2: <span style="color: #0000ff;">ld</span> returned <span style="color: #800080;">1</span><span style="color: #000000;"> exit status
</span><span style="color: #0000ff;">make</span>: *** [sapi/cli/php] 错误 <span style="color: #800080;">1</span></pre>
</div>
<p>&nbsp;</p>
<p>出现这样的错误信息可能是我以前用不同的参数编译过PHP。</p>
<p>&nbsp;</p>
<p>解决方法：执行make clean删除上次的编译结果，然后再重新编译就OK了。</p>]]></description></item><item><title>apache2启动时共享库libpcre找不到</title><link>http://www.cnblogs.com/eastson/archive/2012/06/25/2561575.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 25 Jun 2012 09:27:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/25/2561575.html</guid><description><![CDATA[<p>安装好Apache，启动时提示找不到libpcre.so.1：</p>
<div class="cnblogs_code">
<pre>/usr/local/apache2/bin/httpd: error <span style="color: #0000ff;">while</span> loading shared libraries: libpcre.so.<span style="color: #800080;">1</span>: cannot open shared <span style="color: #0000ff;">object</span> <span style="color: #0000ff;">file</span>: No such <span style="color: #0000ff;">file</span> or directory</pre>
</div>
<p>&nbsp;</p>
<p>使用ldd查看httpd的依赖库信息：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;"># ldd httpd
linux</span>-vdso.so.<span style="color: #800080;">1</span> =&gt; (<span style="color: #800080;">0x00007fff691ff000</span><span style="color: #000000;">)
libpcre.so.</span><span style="color: #800080;">1</span> =&gt;<span style="color: #000000;"> not found
libaprutil</span>-<span style="color: #800080;">1</span>.so.<span style="color: #800080;">0</span> =&gt; /usr/local/apache2/lib/libaprutil-<span style="color: #800080;">1</span>.so.<span style="color: #800080;">0</span> (<span style="color: #800080;">0x00007ff847f31000</span><span style="color: #000000;">)
libapr</span>-<span style="color: #800080;">1</span>.so.<span style="color: #800080;">0</span> =&gt; /usr/local/apache2/lib/libapr-<span style="color: #800080;">1</span>.so.<span style="color: #800080;">0</span> (<span style="color: #800080;">0x00007ff847d00000</span><span style="color: #000000;">)
libpthread.so.</span><span style="color: #800080;">0</span> =&gt; /lib/x86_64-linux-gnu/libpthread.so.<span style="color: #800080;">0</span> (<span style="color: #800080;">0x00007ff847ae3000</span><span style="color: #000000;">)
libc.so.</span><span style="color: #800080;">6</span> =&gt; /lib/x86_64-linux-gnu/libc.so.<span style="color: #800080;">6</span> (<span style="color: #800080;">0x00007ff847726000</span><span style="color: #000000;">)
libexpat.so.</span><span style="color: #800080;">0</span> =&gt; /usr/local/apache2/lib/libexpat.so.<span style="color: #800080;">0</span> (<span style="color: #800080;">0x00007ff8474fb000</span><span style="color: #000000;">)
libcrypt.so.</span><span style="color: #800080;">1</span> =&gt; /lib/x86_64-linux-gnu/libcrypt.so.<span style="color: #800080;">1</span> (<span style="color: #800080;">0x00007ff8472c2000</span><span style="color: #000000;">)
libdl.so.</span><span style="color: #800080;">2</span> =&gt; /lib/x86_64-linux-gnu/libdl.so.<span style="color: #800080;">2</span> (<span style="color: #800080;">0x00007ff8470be000</span><span style="color: #000000;">)
</span>/lib64/<span style="color: #0000ff;">ld</span>-linux-x86-<span style="color: #800080;">64</span>.so.<span style="color: #800080;">2</span> (<span style="color: #800080;">0x00007ff848165000</span>)</pre>
</div>
<p>libpcre.so.1库果然没有找到。</p>
<p>&nbsp;</p>
<p>解决方法：</p>
<p>1. 搜索libpcre.so.1文件，发现该文件在/usr/local/lib目录下。</p>
<p>2. 在/etc/ld.so.conf.d目录下新建文件libc.conf，将/usr/local/lib目录加到该文件：</p>
<div class="cnblogs_code">
<pre>/usr/local/lib</pre>
</div>
<p>3. 执行ldconfig命令：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> ldconfig</pre>
</div>
<p>4. 使用ldd命令确认libpcre.so.1是否已找到：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;"># ldd httpd
linux</span>-vdso.so.<span style="color: #800080;">1</span> =&gt;  (<span style="color: #800080;">0x00007fffcc3ff000</span><span style="color: #000000;">)
libpcre.so.</span><span style="color: #800080;">1</span> =&gt; /usr/local/lib/libpcre.so.<span style="color: #800080;">1</span> (<span style="color: #800080;">0x00007f2f68f98000</span><span style="color: #000000;">)
libaprutil</span>-<span style="color: #800080;">1</span>.so.<span style="color: #800080;">0</span> =&gt; /usr/local/apache2/lib/libaprutil-<span style="color: #800080;">1</span>.so.<span style="color: #800080;">0</span> (<span style="color: #800080;">0x00007f2f68d76000</span><span style="color: #000000;">)
libapr</span>-<span style="color: #800080;">1</span>.so.<span style="color: #800080;">0</span> =&gt; /usr/local/apache2/lib/libapr-<span style="color: #800080;">1</span>.so.<span style="color: #800080;">0</span> (<span style="color: #800080;">0x00007f2f68b45000</span><span style="color: #000000;">)
libpthread.so.</span><span style="color: #800080;">0</span> =&gt; /lib/x86_64-linux-gnu/libpthread.so.<span style="color: #800080;">0</span> (<span style="color: #800080;">0x00007f2f68928000</span><span style="color: #000000;">)
libc.so.</span><span style="color: #800080;">6</span> =&gt; /lib/x86_64-linux-gnu/libc.so.<span style="color: #800080;">6</span> (<span style="color: #800080;">0x00007f2f6856b000</span><span style="color: #000000;">)
libexpat.so.</span><span style="color: #800080;">0</span> =&gt; /usr/local/apache2/lib/libexpat.so.<span style="color: #800080;">0</span> (<span style="color: #800080;">0x00007f2f68340000</span><span style="color: #000000;">)
libcrypt.so.</span><span style="color: #800080;">1</span> =&gt; /lib/x86_64-linux-gnu/libcrypt.so.<span style="color: #800080;">1</span> (<span style="color: #800080;">0x00007f2f68107000</span><span style="color: #000000;">)
libdl.so.</span><span style="color: #800080;">2</span> =&gt; /lib/x86_64-linux-gnu/libdl.so.<span style="color: #800080;">2</span> (<span style="color: #800080;">0x00007f2f67f03000</span><span style="color: #000000;">)
</span>/lib64/<span style="color: #0000ff;">ld</span>-linux-x86-<span style="color: #800080;">64</span>.so.<span style="color: #800080;">2</span> (<span style="color: #800080;">0x00007f2f691c7000</span>)</pre>
</div>]]></description></item><item><title>pcre安装错误的解决方法</title><link>http://www.cnblogs.com/eastson/archive/2012/06/23/2559614.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 23 Jun 2012 15:29:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/23/2559614.html</guid><description><![CDATA[<p>安装pcre 8.30总提示libtool错误，这是因为Ubuntu系统中只安装了 c compiler, 没有安装c++ compiler。</p>
<p>&nbsp;</p>
<p>我们可以使用<em><strong>apt-get install g++</strong></em>（gcc-c++在Ubuntu中称为g++）命令安装C++ compiler 后，再重新安装PCRE，OK。</p>]]></description></item><item><title>SharePoint集成报表服务查看Sybase数据</title><link>http://www.cnblogs.com/eastson/archive/2012/06/22/2558702.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 22 Jun 2012 06:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/22/2558702.html</guid><description><![CDATA[<p>本文记录的是使用SSRS制作Sybase报表，然后放到SharePoint的过程中需要注意的一些要点。</p>
<p>&nbsp;</p>
<p>测试环境：<em><strong>Windows Server 2008 + SQL Server 2008 R2 + SharePoint Server 2010 + Sybase ASE 15</strong></em>，SQL Server是以<em><strong>集成模式</strong></em>配置的。</p>
<p>&nbsp;</p>
<h3>安装Sybase客户端</h3>
<p>安装Sybase客户端时，我们应该选择&ldquo;定制&rdquo;安装：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012062214164143.png" alt="" /></p>
<p>&nbsp;</p>
<p>在选择功能组件时将所有的<em><strong>ASE Data Providers</strong></em>全都勾上：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012062214180365.png" alt="" /></p>
<p>&nbsp;</p>
<p>其它地都&ldquo;<em><strong>下一步</strong></em>&rdquo;操作就可以了。</p>
<p>&nbsp;</p>
<h3>创建SSRS报表</h3>
<p>打开<em><strong>SQL Server Business Intelligence Development Studio</strong></em>，创建报表项目。需要注意的是新建数据源时，我们需要选择<em><strong>OLE DB</strong></em>连接Sybase数据库，服务器名用"<em><strong>IP地址:端口号"</strong></em>的格式。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012062214264961.png" alt="" /></p>
<p>&nbsp;</p>
<h3>发布Sybase报表到SharePoint网站</h3>
<p><span>SharePoint网站是<em><strong>http://win-d319be86opu</strong></em>，创建一个名为<em><strong>ReportLibrary</strong></em>的报告库，完成后我们应该可以用<em><strong>http://win-d319be86opu/ReportLibrary</strong></em>进行访问。根据需要可以在报告库下建立一些目录用来区分后面发布的报表。</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012062214405960.png" alt="" /></p>
<p><span>&nbsp;</span></p>
<p><span>打开报表项目，设置与SharePoint有关的属性：</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012062214422061.png" alt="" /></p>
<p><em><strong>TargetDatasetFolder</strong></em>：http://win-d319be86opu/ReportLibrary/销售管理报表，共享数据集存放目录，注意不要最后的斜杠。</p>
<p><em><strong>TargetDataSourceFolder</strong></em>：http://win-d319be86opu/ReportLibrary/销售管理报表，共享数据源存放目录，注意不要最后的斜杠。</p>
<p><em><strong>TargetReportFolder</strong></em>：http://win-d319be86opu/ReportLibrary/销售管理报表，报告文件存放目录，注意不要最后的斜杠。</p>
<p><em><strong>TargetReportPartFolder</strong></em>：http://win-d319be86opu/ReportLibrary/销售管理报表，报告部件存放目录，注意不要最后的斜杠。</p>
<p><em><strong>TargetServerURL</strong></em>：http://win-d319be86opu/，报告服务器地址，注意带上最后的斜杠。</p>
<p>这里<em><strong>不要使用localhost或者127.0.0.1</strong></em>来指代SharePoint服务器，虽然也可以发布，但是后面在查看报表时会&ldquo;<em><strong>报表服务器不支持您指定的目标位置</strong></em>&rdquo;这样的错误。</p>
<p>&nbsp;</p>
<p>最后发布报表，打开报表库看看能否正确地执行我们的报表。</p>
<p><span>&nbsp;</span></p>
<p><span>&nbsp;</span></p>]]></description></item><item><title>钟山说事：高考天问！！！</title><link>http://www.cnblogs.com/eastson/archive/2012/06/22/2558456.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 22 Jun 2012 00:44:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/22/2558456.html</guid><description><![CDATA[<p><object width="640" height="480" data="http://player.youku.com/player.php/sid/XNDExNjc3MzU2/v.swf" type="application/x-shockwave-flash"><param name="src" value="http://player.youku.com/player.php/sid/XNDExNjc3MzU2/v.swf" /></object></p>
<p><a href="http://v.youku.com/v_show/id_XNDExNjc3MzU2.html" target="_blank">http://v.youku.com/v_show/id_XNDExNjc3MzU2.html</a></p>]]></description></item><item><title>程序员怎么提高英语阅读水平【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/06/21/2557644.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 21 Jun 2012 05:52:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/21/2557644.html</guid><description><![CDATA[<p>其实学英语和其他技能没什么太大区别，无论是你想在英语阅读、口语或写作方面提升自己，都需要进行长期的不间断的练习，坚持一段时间后（时间长短根据你自己的效率、每天用时、频率都有关系），你会发现自己的水平自然就提升了。举个例子，现在写博客似乎是最难坚持的，但是如果你每个月都能写一篇略有价值文章的话，5年就会有60篇高质量的博客，你几乎都能集结出书了。最简单的坚持，最后的结果都是惊人的。但很多人往往每年只能写1篇，或者干脆一放就几年过去了。所以你知道，成事的人总是少数的。</p>
<p>&nbsp;</p>
<p>作为程序员，英语阅读能力是最基本的要求，相对口语和写作来说也是最容易达到的，因为计算机类图书的那些常用单词就那么多，多读几本英语类技术图书，想不认识都难。</p>
<p>&nbsp;</p>
<p><span style="color: #ff0000; font-size: 16px;"><em><strong>一个相对容易坚持的办法就是，找一本和当前工作相关的、急需的技术图书，每天拿出一小时阅读，不认识的单词，如果不影响阅读可以不查词典。如果某个单词多次出现，那么就该查下词典并计入生词本。如果你能坚持查阅英英词典，那么提高就会更快了。</strong></em></span></p>
<p>&nbsp;</p>
<p><span style="color: #ff0000; font-size: 16px;"><em><strong>每天坚持一小时，这本书读完，你就会发现自己的阅读能力提高了一大截。</strong></em></span></p>
<p>&nbsp;</p>
<p>这样看来提高阅读能力似乎很简单，但是，问题的关键是，你能否坚持下来，尤其是阅读初期，你只能看懂20%，需要不停的查字典，单词记了又忘，几个星期过去了，进展依然缓慢。这时候最容易放弃，你会痛苦的怀疑自己，我究竟是不是这块料。</p>
<p>&nbsp;</p>
<p>毕竟人类的大脑都是倾向于舒适和懒惰的，谁都知道花一个或几个小时看看美剧或刷刷微薄，是容易的，嗨皮的，时间在感知上也是，刷一下就过去了。学英语、学一门新的编程语言、写博客是痛苦的，有时候你甚至会有意识的去避免开始这件事情，先干点这个，再干点那个，熬到最后，发现没时间了，再拿起书来读一会，困了，今天先睡吧。就这样，一天天很快过去了，你发现自己似乎每天都在坚持，但依然没效果。但事实是，你既没坚持，也没效率。</p>
<p>&nbsp;</p>
<p>所以，提高英语阅读能力这事，和学其他的技能区别不大，而且是相对容易的，比提高英语口语和写作能力容易多了。如果程序员缺乏英语阅读能力，这将是你非常大的一块短板，如果意识到了，尽早补上。</p>
<p>&nbsp;</p>
<p>另外说一点，英语翻译对提升英语阅读有一定的帮助，但这个要求比较高，必须要查字典，遣词造句，力求原汁原味的表达作者的意图。并不是提升阅读能力的捷径。</p>
<p>&nbsp;</p>
<p>最后说一句，10000小时的练习时间，真不是盖的！</p>
<p>&nbsp;</p>
<p>原文地址：<a href="http://www.cnblogs.com/chijianqiang/archive/2012/06/20/learn-english.html" target="_blank">http://www.cnblogs.com/chijianqiang/archive/2012/06/20/learn-english.html</a></p>]]></description></item><item><title>Linux后台执行【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/06/21/2547510.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 21 Jun 2012 04:01:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/21/2547510.html</guid><description><![CDATA[<p>当我们在终端或控制台工作时，可能不希望由于运行一个作业而占住了屏幕，因为可能还有更重要的事情要做，比如阅读电子邮件。对于密集访问磁盘的进程，你可能希望它能够在每天的非负荷高峰时间段运行。为了使这些进程能够在后台运行，也就是说不在终端屏幕上运行，有几种选择方法可供使用：</p>
<ul>
<li>设置crontab文件，并用它来提交作业。</li>
<li>使用at命令来提交作业。</li>
<li>在后台提交作业。</li>
<li>使用nohup命令提交作业。</li>
</ul>
<p>cron：系统调度进程。可以使用它在每天的非高峰负荷时间段运行作业，或在一周或一月中的不同时段运行。</p>
<p>at命令：使用它在一个特定的时间运行一些特殊的作业，或在晚一些的非负荷高峰时间段或高峰负荷时间段运行。</p>
<p>&amp;：使用它在后台运行一个占用时间不长的进程。</p>
<p>nohup：使用它在后台运行一个命令，即使在用户退出时也不受影响。</p>
<p>&nbsp;</p>
<h3>cron和crontab</h3>
<p>cron是系统主要的调度进程，可以在无需人工干预的情况下运行作业。有一个叫做crontab的命令允许用户提交、编辑或删除相应的作业。每一个用户都可以有一个crontab文件来保存调度信息。可以使用它运行任意一个shell脚本或某个命令，每小时运行一次，或一周三次，这完全取决于你。每一个用户都可以有自己的crontab文件，但在一个较大的系统中，系统管理员一般会禁止这些文件，而只在整个系统保留一个这样的文件。</p>
<p>&nbsp;</p>
<p>系统管理员是通过cron.deny和cron.allow两个文件来禁止或允许用户拥有自己的crontab文件。</p>
<p>&nbsp;</p>
<p>关于cron的更多信息请参阅文档《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/06/19/2554358.html" target="_blank">crontab文件</a>》和《<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/06/19/2554502.html" target="_blank">Linux定时任务系统cron</a>》。</p>
<p>&nbsp;</p>
<h3>at命令</h3>
<p>at命令允许用户向cron守护进程提交作业，使其在稍后的时间运行。这里稍后的时间可能是指10min以后，也可能是指几天以后。如果你希望在一个月或更长的时间以后运行，最好还是使用crontab文件。</p>
<p>&nbsp;</p>
<p>一旦一个作业被提交， at命令将会保留所有当前的环境变量，包括路径，不象crontab，只提供缺省的环境。该作业的所有输出都将以电子邮件的形式发送给用户，除非你对其输出进行了重定向，绝大多数情况下是重定向到某个文件中。</p>
<p><br />和crontab一样，根用户可以通过/etc目录下的at.allow和at.deny文件来控制哪些用户可以使用at命令，哪些用户不行。不过一般来说，对at命令的使用不如对crontab的使用限制那么严格。</p>
<p>&nbsp;</p>
<h3>&amp;命令</h3>
<p>当在前台运行某个作业时，终端被该作业占据；而在后台运行作业时，它不会占据终端。可以使用&amp;命令把作业放到后台执行。</p>
<p>该命令的一般形式为：</p>
<div class="cnblogs_code">
<pre>命令 &amp;</pre>
</div>
<p>&nbsp;</p>
<p>为什么要在后台执行命令？因为当在后台执行命令时，可以继续使用你的终端做其他事情。适合在后台运行的命令有find、费时的打印作业、费时的排序及一些shell脚本。在后台运行作业时要当心：需要用户交互的命令不要放在后台执行，因为这样你的机器就会在那里傻等。不过，作业在后台运行一样会将结果输出到屏幕上，干扰你的工作。如果放在后台运行的作业会产生大量的输出，最好使用下面的方法把它的输出重定向到某个文件中：</p>
<div class="cnblogs_code">
<pre>command &gt;out.<span style="color: #0000ff;">file</span> <span style="color: #800080;">2</span>&gt;&amp;<span style="color: #800080;">1</span> &amp;</pre>
</div>
<p>在上面的例子中，所有的标准输出和错误输出都将被重定向到一个叫做out.file 的文件中。</p>
<p>&nbsp;</p>
<p>当你成功地提交进程以后，就会显示出一个进程号，可以用它来监控该进程，或杀死它。</p>
<p>&nbsp;</p>
<h3>nohup命令</h3>
<p>如果你正在运行一个进程，而且你觉得在退出帐户时该进程还不会结束，那么可以使用nohup命令。该命令可以在你退出帐户之后继续运行相应的进程。nohup就是不挂起的意思( no&nbsp;hang up)。</p>
<p>&nbsp;</p>
<p>该命令的一般形式为：</p>
<div class="cnblogs_code">
<pre>nohup command &amp;</pre>
</div>
<p>&nbsp;</p>
<p>如果使用nohup命令提交作业，那么在缺省情况下该作业的所有输出都被重定向到一个名为nohup.out的文件中，除非另外指定了输出文件：</p>
<div class="cnblogs_code">
<pre>nohup command &gt; myout.<span style="color: #0000ff;">file</span> <span style="color: #800080;">2</span>&gt;&amp;<span style="color: #800080;">1</span></pre>
</div>
<p>在上面的例子中，输出被重定向到myout.file文件中。</p>]]></description></item><item><title>安装vsftp</title><link>http://www.cnblogs.com/eastson/archive/2012/06/21/2556461.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 21 Jun 2012 03:04:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/21/2556461.html</guid><description><![CDATA[<p>本文讲述了在<em><strong>Ubuntu 12.04</strong></em>环境下以源码编译方式安装<em><strong>vsftp 2.3.2</strong></em>的整个过程。更多关于vsftp的文章请参阅《<em><strong><a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/06/20/2556453.html" target="_blank">Ubuntu 12.04 中 vsftp 的应用</a></strong></em>》。</p>
<p>&nbsp;</p>
<h3>下载vsftp</h3>
<p>vsftp的官方网站是<em><strong><a href="http://vsftpd.beasts.org/" target="_blank">http://vsftpd.beasts.org/</a></strong></em>，现在国内好像访问不了。可以另外通过代理的方式，或者搜索国内的下载地址，例如<em><strong><a href="http://down.chinaz.com/soft/4804.htm" target="_blank">站长下载</a></strong></em>。</p>
<p>&nbsp;</p>
<p>下载vsftp到/usr/local/src目录：</p>
<div class="cnblogs_code">
<pre>cd /usr/local/<span style="color: #000000;">src
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">wget</span> http:<span style="color: #008000;">//</span><span style="color: #008000;">zj.down.chinaz.com/201101/vsftpd-2.3.2.tar.gz<br />sudo tar zxvf </span>vsftpd-2.3.2.tar.gz</pre>
</div>
<p>&nbsp;</p>
<p>将下载的文件解压缩，解压缩后的目录为/usr/local/src/vsftpd-2.3.2。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">tar</span> zxvf vsftpd-<span style="color: #800080;">2.3</span>.<span style="color: #800080;">2</span>.<span style="color: #0000ff;">tar</span><span style="color: #000000;">.gz
cd  vsftpd</span>-<span style="color: #800080;">2.3</span>.<span style="color: #800080;">2</span></pre>
</div>
<p>&nbsp;</p>
<h3>配置builddefs.h</h3>
<p>vsftp使用<em><strong>builddefs.h</strong></em>处理编译时的配置信息，该文件默认的内容如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">#ifndef VSF_BUILDDEFS_H
</span><span style="color: #0000ff;">#define</span> VSF_BUILDDEFS_H

<span style="color: #0000ff;">#undef</span> VSF_BUILD_TCPWRAPPERS
<span style="color: #0000ff;">#define</span> VSF_BUILD_PAM
<span style="color: #0000ff;">#undef</span> VSF_BUILD_SSL

<span style="color: #0000ff;">#endif</span> /* VSF_BUILDDEFS_H */</pre>
</div>
<p>&nbsp;</p>
<p>默认的<em><strong>builddefs.h</strong></em>只开启了<em><strong>pam</strong></em>，<em><strong>tcp_wrappers</strong></em>和<em><strong>ssh</strong></em>是关闭的。我们可以根据自己的需要进行调整这些配置。</p>
<p>&nbsp;</p>
<h3>编译vsftp</h3>
<p>vsftp使用<em><strong>vsf_findlibs.sh</strong></em>脚本来查找相关的库文件。但是，由于我的Ubuntu是64位版本，库文件的位置与<em><strong>vsf_findlibs.sh</strong></em>脚本定义的位置不同，需要修改<em><strong>vsf_findlibs.sh</strong></em>脚本。</p>
<p>&nbsp;</p>
<p>查看自己电脑的硬件架构：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">uname</span> -<span style="color: #000000;">m
x86</span>-<span style="color: #800080;">64</span></pre>
</div>
<p>如果输出<em><strong>x86_64</strong></em>，说明是64位平台。</p>
<p>&nbsp;</p>
<p>vsftp使用<em><strong>了libpam.so</strong></em>库，我们可以使用<em><strong>locate</strong></em>命令快速地定位到Ubuntu当前的库文件存放位置：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">locate</span><span style="color: #000000;"> libpam
</span>/lib/x86_64-linux-gnu/libpam.so.<span style="color: #800080;">0</span>
/lib/x86_64-linux-gnu/libpam.so.<span style="color: #800080;">0.83</span>.<span style="color: #800080;">0</span>
/lib/x86_64-linux-gnu/libpam_misc.so.<span style="color: #800080;">0</span>
/lib/x86_64-linux-gnu/libpam_misc.so.<span style="color: #800080;">0.82</span>.<span style="color: #800080;">0</span>
/lib/x86_64-linux-gnu/libpamc.so.<span style="color: #800080;">0</span>
/lib/x86_64-linux-gnu/libpamc.so.<span style="color: #800080;">0.82</span>.<span style="color: #800080;">1</span><span style="color: #000000;">
... ...</span></pre>
</div>
<p>由此可知，Ubuntu将库文件位置移到了<em><strong>/lib/x86_64-linux-gnu</strong></em>目录。</p>
<p>&nbsp;</p>
<p>先备份<em><strong>vsf_findlibs.sh</strong></em>，然后用<em><strong>vi编辑器</strong></em>将其打开，简单的用下面的命令将原来的<em><strong>/lib</strong></em>目录替换为新的<em><strong>/lib/x86_64-linux-gnu</strong></em>目录：</p>
<div class="cnblogs_code">
<pre>:%s?/lib/?/lib/x86_64-linux-gnu/?</pre>
</div>
<p>&nbsp;</p>
<p>现在我们可以执行<em><strong>make</strong></em>命令编译vsftp了：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">make</span></pre>
</div>
<p>&nbsp;</p>
<p>编译完成后检查是否成功：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">ls</span> -<span style="color: #000000;">l vsftpd
</span>-rwxrwxr-x <span style="color: #800080;">1</span> amonest amonest <span style="color: #800080;">124088</span>  6月 <span style="color: #800080;">21</span> <span style="color: #800080;">09</span>:<span style="color: #800080;">31</span> vsftpd</pre>
</div>
<p>&nbsp;</p>
<h3>vsftp的先决条件</h3>
<p>vsftp默认配置需要"<em><strong>nobody</strong></em>"帐户，用下面的命令确认该帐户是否存在：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">$ useradd nobody
useradd: user </span><span style="color: #800000;">'</span><span style="color: #800000;">nobody</span><span style="color: #800000;">'</span> already exists</pre>
</div>
<p>&nbsp;</p>
<p>vsftp默认配置需要空目录"<em><strong>/usr/share/empty</strong></em>"，用下面的命令确认该目录是否存在：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">mkdir</span> /usr/share/empty</pre>
</div>
<p>&nbsp;</p>
<p>对于匿名FTP，vsftp需要一个"<em><strong>ftp</strong></em>"的帐户和一个有效的home目录。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">mkdir</span> /var/<span style="color: #0000ff;">ftp</span>
<span style="color: #0000ff;">sudo</span> useradd -d /var/<span style="color: #0000ff;">ftp</span> <span style="color: #0000ff;">ftp<br /></span></pre>
</div>
<p>&nbsp;</p>
<p><em><strong>注意：创建的/var/ftp目录默认所有者为root，不要将所有者修改为ftp，否则后面在客户端用ftp帐户连接时会提示&ldquo;refusing to run with writable anonymous root&rdquo;错误。</strong></em></p>
<p>&nbsp;</p>
<p>创建"<em><strong>ftp</strong></em>"的帐户后，应该再使用<em><strong>passwd</strong></em>命令修改它的密码：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">passwd</span> <span style="color: #0000ff;">ftp</span></pre>
</div>
<p>&nbsp;</p>
<h3>安装vsftp</h3>
<p>执行命令<em><strong>make install</strong></em>安装<em><strong>vsftp</strong></em>：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">make</span> <span style="color: #0000ff;">install</span></pre>
</div>
<p>&nbsp;</p>
<p>安装过程中处理的内容定义在<em><strong>Makefile</strong></em>文件：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">install</span><span style="color: #000000;">:
        </span><span style="color: #0000ff;">if</span> [ -x /usr/local/sbin ]; <span style="color: #0000ff;">then</span><span style="color: #000000;"> \
                $(INSTALL) </span>-m <span style="color: #800080;">755</span> vsftpd /usr/local/sbin/<span style="color: #000000;">vsftpd; \
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> \
                $(INSTALL) </span>-m <span style="color: #800080;">755</span> vsftpd /usr/sbin/vsftpd; <span style="color: #0000ff;">fi</span>
        <span style="color: #0000ff;">if</span> [ -x /usr/local/<span style="color: #0000ff;">man</span> ]; <span style="color: #0000ff;">then</span><span style="color: #000000;"> \
                $(INSTALL) </span>-m <span style="color: #800080;">644</span> vsftpd.<span style="color: #800080;">8</span> /usr/local/<span style="color: #0000ff;">man</span>/man8/vsftpd.<span style="color: #800080;">8</span><span style="color: #000000;">; \
                $(INSTALL) </span>-m <span style="color: #800080;">644</span> vsftpd.conf.<span style="color: #800080;">5</span> /usr/local/<span style="color: #0000ff;">man</span>/man5/vsftpd.conf.<span style="color: #800080;">5</span><span style="color: #000000;">; \
        </span><span style="color: #0000ff;">elif</span> [ -x /usr/share/<span style="color: #0000ff;">man</span> ]; <span style="color: #0000ff;">then</span><span style="color: #000000;"> \
                $(INSTALL) </span>-m <span style="color: #800080;">644</span> vsftpd.<span style="color: #800080;">8</span> /usr/share/<span style="color: #0000ff;">man</span>/man8/vsftpd.<span style="color: #800080;">8</span><span style="color: #000000;">; \
                $(INSTALL) </span>-m <span style="color: #800080;">644</span> vsftpd.conf.<span style="color: #800080;">5</span> /usr/share/<span style="color: #0000ff;">man</span>/man5/vsftpd.conf.<span style="color: #800080;">5</span><span style="color: #000000;">; \
        </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> \
                $(INSTALL) </span>-m <span style="color: #800080;">644</span> vsftpd.<span style="color: #800080;">8</span> /usr/<span style="color: #0000ff;">man</span>/man8/vsftpd.<span style="color: #800080;">8</span><span style="color: #000000;">; \
                $(INSTALL) </span>-m <span style="color: #800080;">644</span> vsftpd.conf.<span style="color: #800080;">5</span> /usr/<span style="color: #0000ff;">man</span>/man5/vsftpd.conf.<span style="color: #800080;">5</span>; <span style="color: #0000ff;">fi</span>
        <span style="color: #0000ff;">if</span> [ -x /etc/xinetd.d ]; <span style="color: #0000ff;">then</span><span style="color: #000000;"> \
                $(INSTALL) </span>-m <span style="color: #800080;">644</span> xinetd.d/vsftpd /etc/xinetd.d/vsftpd; <span style="color: #0000ff;">fi</span></pre>
</div>
<p>&nbsp;</p>
<p>如果安装时提示man目录找不到，可以手工创建这些目录：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">mkdir</span> /usr/local/<span style="color: #0000ff;">man</span>/<span style="color: #000000;">man5
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">mkdir</span> /usr/local/<span style="color: #0000ff;">man</span>/man8</pre>
</div>
<p>&nbsp;</p>
<p>安装过程没有复制默认配置文件，建议这样处理：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">cp</span> vsftpd.conf /etc</pre>
</div>
<p>&nbsp;</p>
<h3>测试vsftp</h3>
<p>vsftp可以运行在<em><strong>独立模式(standalone)</strong> </em>，也可以运行在<em><strong>inetd模式（inetd或xinetd）</strong></em>。以inetd模式运行vsftp，可以有更多的控制权，例如流量和连接数等。我们这里简单的以独立模式运行vsftp测试安装是否成功。</p>
<p>&nbsp;</p>
<p>编辑<em><strong>/etc/vsftpd.conf</strong></em>，确保<em><strong>listen</strong></em>选项是开启的：</p>
<div class="cnblogs_code">
<pre>listen=YES</pre>
</div>
<p>这实际上就是告诉vsftp，当前以独立模式运行。</p>
<p>&nbsp;</p>
<p>启动vsftp：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> /usr/local/sbin/vsftpd &amp;</pre>
</div>
<p>&nbsp;</p>
<p>连接vsftp，测试是否正常运行：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">ftp</span><span style="color: #000000;"> localhost
Connected to localhost.
</span><span style="color: #800080;">220</span> (vsFTPd <span style="color: #800080;">2.3</span>.<span style="color: #800080;">2</span><span style="color: #000000;">)
Name (localhost:amonest): </span><span style="color: #0000ff;">ftp</span>
<span style="color: #800080;">331</span><span style="color: #000000;"> Please specify the password.
Password:
</span><span style="color: #800080;">230</span><span style="color: #000000;"> Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
</span><span style="color: #0000ff;">ftp</span>&gt; <span style="color: #0000ff;">ls</span>
<span style="color: #800080;">200</span><span style="color: #000000;"> PORT command successful. Consider using PASV.
</span><span style="color: #800080;">150</span><span style="color: #000000;"> Here comes the directory listing.
</span>-rw-r--r--    <span style="color: #800080;">1</span> <span style="color: #800080;">0</span>        <span style="color: #800080;">0</span>            <span style="color: #800080;">1361</span> Jun <span style="color: #800080;">21</span> <span style="color: #800080;">03</span>:<span style="color: #800080;">03</span><span style="color: #000000;"> README
</span>-rw-r--r--    <span style="color: #800080;">1</span> <span style="color: #800080;">0</span>        <span style="color: #800080;">0</span>             <span style="color: #800080;">112</span> Jun <span style="color: #800080;">21</span> <span style="color: #800080;">03</span>:<span style="color: #800080;">03</span><span style="color: #000000;"> README.security
</span>-rw-r--r--    <span style="color: #800080;">1</span> <span style="color: #800080;">0</span>        <span style="color: #800080;">0</span>            <span style="color: #800080;">2115</span> Jun <span style="color: #800080;">21</span> <span style="color: #800080;">03</span>:<span style="color: #800080;">03</span><span style="color: #000000;"> README.ssl
</span>-rw-r--r--    <span style="color: #800080;">1</span> <span style="color: #800080;">0</span>        <span style="color: #800080;">0</span>             <span style="color: #800080;">125</span> Jun <span style="color: #800080;">21</span> <span style="color: #800080;">03</span>:<span style="color: #800080;">03</span><span style="color: #000000;"> REWARD
</span><span style="color: #800080;">226</span><span style="color: #000000;"> Directory send OK.
</span><span style="color: #0000ff;">ftp</span>&gt;</pre>
</div>
<p>&nbsp;</p>
<p>最后上一张FlashFXP连接vsftp的图：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012062111090627.png" alt="" /></p>]]></description></item><item><title>vsftp 的应用</title><link>http://www.cnblogs.com/eastson/archive/2012/06/21/2556453.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 21 Jun 2012 00:37:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/21/2556453.html</guid><description><![CDATA[<p><span>FTP服务器是平时应用最为广泛的服务之一。vsFTP是Very Secure FTP的缩写，意指非常安全的FTP服务。vsFTP功能强大，通过结合本地系统的用户认证模块及其多功能的配置项目，可以快速有效的搭建强大的多用户FTP服务。</span></p>
<p>&nbsp;</p>
<p>1.&nbsp;<a id="cb_post_title_url" href="http://www.cnblogs.com/eastson/archive/2012/06/20/2556461.html" target="_blank">安装vsftp</a></p>
<p>&nbsp;</p>
<h3>网络上关于vsftp的文章</h3>
<p><a href="http://viong.blog.51cto.com/844766/261291/" target="_blank"><span>Vsftpd完全攻略（一）ftp原理与vsftp安装</span></a></p>
<p><a href="http://viong.blog.51cto.com/844766/261296" target="_blank"><span><span>Vsftpd完全攻略（二）设置匿名用户也支持下载和上传与创建目录</span></span></a></p>
<p><a href="http://viong.blog.51cto.com/844766/261342" target="_blank"><span>Vsftpd完全攻略（三）基于系统用户支持ftp上传和访问</span></a></p>
<p><a href="http://viong.blog.51cto.com/844766/261354" target="_blank"><span>Vsftpd完全攻略（四）搭建支持SSL加密传输的vftpd</span></a></p>
<p><a href="http://viong.blog.51cto.com/844766/261390" target="_blank"><span>Vsftpd完全攻略（五）vsftpd.conf配置详解</span></a></p>
<p><a href="http://viong.blog.51cto.com/844766/261410" target="_blank"><span>Vsftpd完全攻略（六）建立多个虚拟用户支持ftp不同访问权限【1】</span></a></p>
<p><a href="http://viong.blog.51cto.com/844766/261415" target="_blank"><span>Vsftpd完全攻略（六）建立多个虚拟用户支持ftp不同访问权限【2】</span></a></p>
<p><a href="http://viong.blog.51cto.com/844766/269485" target="_blank"><span>Vsftpd完全攻略（七）利用quota对Vsftpd做磁盘配额</span></a></p>
<p><span>&nbsp;</span></p>
<p id="firstHeading" class="firstHeading"><a href="http://en.wikipedia.org/wiki/File_Transfer_Protocol" target="_blank"><span dir="auto">File Transfer Protocol - wiki</span></a></p>
<p class="firstHeading"><a href="http://tools.ietf.org/html/rfc959" target="_blank">RFC959 -&nbsp;File Transfer Protocol</a></p>
<p class="firstHeading"><a href="http://www.docin.com/p-70355230.html" target="_blank">RFC959 - 文件传输协议</a></p>]]></description></item><item><title>用Python实现动态的切换桌面背景</title><link>http://www.cnblogs.com/eastson/archive/2012/06/20/2556234.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 20 Jun 2012 07:19:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/20/2556234.html</guid><description><![CDATA[<p>前两天看了一篇文章《<a href="http://forum.ubuntu.org.cn/viewtopic.php?f=33&amp;t=368884" target="_blank"><span>自己写脚本自动更换桌面</span></a>》，觉得用Python实现起来应该更容易理解，于是就有了下面的dynamic-wallpaper.py脚本。</p>
<p>&nbsp;</p>
<p>dynamic-wallpaper.py脚本的完整内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;">!/usr/bin/python</span><span style="color: #008000;">
#</span><span style="color: #008000;"> -*- coding: utf-8 -*-</span>

<span style="color: #0000ff;">import</span><span style="color: #000000;"> os, os.path, fnmatch, commands

</span><span style="color: #008000;">#</span><span style="color: #008000;"> 壁纸图片所在的目录</span>
wallpaper_path = <span style="color: #800000;">'</span><span style="color: #800000;">/usr/share/backgrounds</span><span style="color: #800000;">'</span>


<span style="color: #008000;">#</span><span style="color: #008000;"> 搜索所有可用的壁纸</span>
avail_wallpapers =<span style="color: #000000;"> []

</span><span style="color: #0000ff;">for</span> file <span style="color: #0000ff;">in</span><span style="color: #000000;"> os.listdir(wallpaper_path):
    </span><span style="color: #0000ff;">if</span> <span style="color: #0000ff;">not</span> os.path.isfile(wallpaper_path + <span style="color: #800000;">'</span><span style="color: #800000;">/</span><span style="color: #800000;">'</span> +<span style="color: #000000;"> file):
        </span><span style="color: #0000ff;">continue</span>

    <span style="color: #0000ff;">if</span> <span style="color: #0000ff;">not</span> fnmatch.fnmatch(file, <span style="color: #800000;">'</span><span style="color: #800000;">*.jpg</span><span style="color: #800000;">'</span>) <span style="color: #0000ff;">and</span><span style="color: #000000;"> \
       </span><span style="color: #0000ff;">not</span> fnmatch.fnmatch(file, <span style="color: #800000;">'</span><span style="color: #800000;">*.png</span><span style="color: #800000;">'</span><span style="color: #000000;">):
        </span><span style="color: #0000ff;">continue</span><span style="color: #000000;">

    avail_wallpapers.append(</span><span style="color: #800000;">'</span><span style="color: #800000;">file://</span><span style="color: #800000;">'</span> + wallpaper_path + <span style="color: #800000;">'</span><span style="color: #800000;">/</span><span style="color: #800000;">'</span> +<span style="color: #000000;"> file)

</span><span style="color: #0000ff;">if</span> len(avail_wallpapers) ==<span style="color: #000000;"> 0:
amonest@amonest</span>-virtual-machine:~/<span style="color: #000000;">python$ cat dynamic_wallpaper.py
</span><span style="color: #008000;">#</span><span style="color: #008000;">!/usr/bin/python</span><span style="color: #008000;">
#</span><span style="color: #008000;"> -*- coding: utf-8 -*-</span>

<span style="color: #0000ff;">import</span><span style="color: #000000;"> os, os.path, fnmatch, commands

</span><span style="color: #008000;">#</span><span style="color: #008000;"> 壁纸图片所在的目录</span>
wallpaper_path = <span style="color: #800000;">'</span><span style="color: #800000;">/usr/share/backgrounds</span><span style="color: #800000;">'</span>


<span style="color: #008000;">#</span><span style="color: #008000;"> 搜索所有可用的壁纸</span>
avail_wallpapers =<span style="color: #000000;"> []

</span><span style="color: #0000ff;">for</span> file <span style="color: #0000ff;">in</span><span style="color: #000000;"> os.listdir(wallpaper_path):
    </span><span style="color: #0000ff;">if</span> <span style="color: #0000ff;">not</span> os.path.isfile(wallpaper_path + <span style="color: #800000;">'</span><span style="color: #800000;">/</span><span style="color: #800000;">'</span> +<span style="color: #000000;"> file):
        </span><span style="color: #0000ff;">continue</span>

    <span style="color: #0000ff;">if</span> <span style="color: #0000ff;">not</span> fnmatch.fnmatch(file, <span style="color: #800000;">'</span><span style="color: #800000;">*.jpg</span><span style="color: #800000;">'</span>) <span style="color: #0000ff;">and</span><span style="color: #000000;"> \
       </span><span style="color: #0000ff;">not</span> fnmatch.fnmatch(file, <span style="color: #800000;">'</span><span style="color: #800000;">*.png</span><span style="color: #800000;">'</span><span style="color: #000000;">):
        </span><span style="color: #0000ff;">continue</span><span style="color: #000000;">

    avail_wallpapers.append(</span><span style="color: #800000;">'</span><span style="color: #800000;">file://</span><span style="color: #800000;">'</span> + wallpaper_path + <span style="color: #800000;">'</span><span style="color: #800000;">/</span><span style="color: #800000;">'</span> +<span style="color: #000000;"> file)

</span><span style="color: #0000ff;">if</span> len(avail_wallpapers) ==<span style="color: #000000;"> 0:
    exit


</span><span style="color: #008000;">#</span><span style="color: #008000;"> 对所有可用的壁纸排序</span>
<span style="color: #000000;">avail_wallpapers.sort()


</span><span style="color: #008000;">#</span><span style="color: #008000;"> 获取当前使用的壁纸</span>
current_wallpaper = commands.getoutput(<span style="color: #800000;">'</span><span style="color: #800000;">gsettings get org.gnome.desktop.background picture-uri</span><span style="color: #800000;">'</span>).strip(<span style="color: #800000;">'</span><span style="color: #800000;">\'</span><span style="color: #800000;">'</span><span style="color: #000000;">)


</span><span style="color: #008000;">#</span><span style="color: #008000;"> 计算下一张壁纸索引</span>
<span style="color: #0000ff;">try</span><span style="color: #000000;">:
    current_index </span>=<span style="color: #000000;"> avail_wallpapers.index(current_wallpaper)
</span><span style="color: #0000ff;">except</span><span style="color: #000000;">:
    current_index </span>= -1<span style="color: #000000;">

next_index </span>= current_index + 1

<span style="color: #0000ff;">if</span> next_index &gt;=<span style="color: #000000;"> len(avail_wallpapers):
    next_index </span>=<span style="color: #000000;"> 0


</span><span style="color: #008000;">#</span><span style="color: #008000;"> 设置下一张新壁纸</span>
os.system(<span style="color: #800000;">'</span><span style="color: #800000;">gsettings set org.gnome.desktop.background picture-uri \'</span><span style="color: #800000;">'</span> + avail_wallpapers[next_index] + <span style="color: #800000;">'</span><span style="color: #800000;">\'</span><span style="color: #800000;">'</span>)</pre>
</div>]]></description></item><item><title>Ubuntu的cron日志在哪里？</title><link>http://www.cnblogs.com/eastson/archive/2012/06/19/2554787.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 19 Jun 2012 06:52:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/19/2554787.html</guid><description><![CDATA[<p>Ubuntu 12.04使用<em><strong>rsyslog</strong></em>作为日志服务，默认cron日志记录是关闭的，需要开启后才能用。</p>
<p>&nbsp;</p>
<p>打开<em><strong>/etc/rsyslog.d/50-default.conf</strong></em>，找到下面的行：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">#
# First some standard log files.  Log by facility.
#
auth,authpriv.</span>*            /var/log/<span style="color: #000000;">auth.log
</span>*.*;auth,authpriv.none        -/var/log/<span style="color: #000000;">syslog
#cron.</span>*                /var/log/<span style="color: #000000;">cron.log
#daemon.</span>*            -/var/log/<span style="color: #000000;">daemon.log
kern.</span>*                -/var/log/<span style="color: #000000;">kern.log
#</span><span style="color: #0000ff;">lpr</span>.*                -/var/log/<span style="color: #0000ff;">lpr</span><span style="color: #000000;">.log
mail.</span>*                -/var/log/<span style="color: #000000;">mail.log
#user.</span>*                -/var/log/user.log</pre>
</div>
<p>将<em><strong>cron.*</strong></em>前面的注释去掉，像这样：</p>
<div class="cnblogs_code">
<pre>cron.*                /var/log/cron.log</pre>
</div>
<p>&nbsp;</p>
<p>然后重启<em><strong>rsyslog</strong></em>和<em><strong>cron</strong></em>服务：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> /etc/init.d/<span style="color: #000000;">rsyslog restart
</span><span style="color: #0000ff;">sudo</span> /etc/init.d/cron restart</pre>
</div>
<p>&nbsp;</p>
<p>现在，就可以在<em><strong>/var/log/cron.log</strong></em>找到cron的日志了。</p>]]></description></item><item><title>Linux定时任务系统cron</title><link>http://www.cnblogs.com/eastson/archive/2012/06/19/2554502.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 19 Jun 2012 03:11:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/19/2554502.html</guid><description><![CDATA[<p><span>在Linux系统中，计划任务一般是由cron承担，我们可以把cron设置为开机时自动启动。cron启动后，它会读取它的所有配置文件（全局性配置文件<em><strong>/etc/crontab</strong></em>，每个用户的配置文件），然后cron会根据命令和执行时间按时来调用度工作任务。</span></p>
<p><span>&nbsp;</span></p>
<p><span><em><strong>/etc/crontab</strong></em>文件格式的说明请参看另外一篇文章《</span><a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/archive/2012/06/19/2554358.html" target="_blank">crontab文件</a>》。</p>
<p>&nbsp;</p>
<p>全局性配置文件<em><strong>/etc/crontab</strong></em>可以通过诸如vi、gedit等文字编辑器直接修改，而每个用户的配置文件则只能通过<em><strong>crontab</strong></em>命令来修改。</p>
<p>&nbsp;</p>
<p><em><strong>crontab</strong></em>命令的基本用法：</p>
<ul>
<li><em><strong>crontab -u</strong></em> //设定某个用户的cron服务，一般root用户在执行这个命令的时候需要此参数</li>
<li><em><strong>crontab -l</strong> </em>//列出某个用户cron服务的详细内容</li>
<li><em><strong>crontab -r</strong> </em>//删除没个用户的cron服务</li>
<li><strong><em>crontab -e</em></strong> //编辑某个用户的cron服务</li>
</ul>
<p>例如，root查看自己的cron设置：</p>
<div class="cnblogs_code">
<pre>crontab -u root -l</pre>
</div>
<p>再例如，root想删除fred的cron设置：</p>
<div class="cnblogs_code">
<pre>crontab -u fred -r</pre>
</div>
<p>&nbsp;</p>
<p>我的操作系统是Ubuntu 12.04，我们可以打开<em><strong>/ets/crontab</strong></em>看看其内容：</p>
<div class="cnblogs_code">
<pre># /etc/crontab: system-<span style="color: #000000;">wide crontab
# Unlike any other crontab you don</span><span style="color: #800000;">'</span><span style="color: #800000;">t have to run the `crontab</span><span style="color: #800000;">'</span><span style="color: #000000;">
# command to </span><span style="color: #0000ff;">install</span> the new version when you edit this <span style="color: #0000ff;">file</span><span style="color: #000000;">
# and files </span><span style="color: #0000ff;">in</span> /etc/<span style="color: #000000;">cron.d. These files also have username fields,
# that none of the other crontabs </span><span style="color: #0000ff;">do</span><span style="color: #000000;">.

SHELL</span>=/bin/<span style="color: #0000ff;">sh</span><span style="color: #000000;">
PATH</span>=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/<span style="color: #000000;">bin

# m h dom mon dow user    command
</span><span style="color: #800080;">17</span> *    * * *    root    cd / &amp;&amp; run-parts --report /etc/<span style="color: #000000;">cron.hourly
</span><span style="color: #800080;">25</span> <span style="color: #800080;">6</span>    * * *    root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --<span style="color: #000000;">report </span>/etc/<span style="color: #000000;">cron.daily )
</span><span style="color: #800080;">47</span> <span style="color: #800080;">6</span>    * * <span style="color: #800080;">7</span>    root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --<span style="color: #000000;">report </span>/etc/<span style="color: #000000;">cron.weekly )
</span><span style="color: #800080;">52</span> <span style="color: #800080;">6</span>    <span style="color: #800080;">1</span> * *    root    test -x /usr/sbin/anacron || ( cd / &amp;&amp; run-parts --<span style="color: #000000;">report </span>/etc/<span style="color: #000000;">cron.monthly )</span></pre>
</div>
<p><span>&nbsp;</span></p>
<p><span>前两行是用来配置cron任务运行环境的变量。<em><strong>SHELL</strong></em> 变量的值告诉系统要使用哪个 shell 环境（在这个例子里是 bash shell），<em><strong>PATH</strong></em> 变量定义用来执行命令的路径。</span></p>
<p><span>&nbsp;</span></p>
<p><span><span>后面的四行使用<em><strong>run-parts</strong></em>脚本来执行<em><strong>/etc/cron.hourly、/etc/cron.daily、/etc/cron.weekly和/etc/cron.monthly目录</strong></em>中的脚本，</span><span>这些脚本被相应地每小时、每日、每周、或每月执行。</span><span>这些目录中的文件应该是shell脚本。</span></span></p>
<p><span><span>&nbsp;</span></span></p>
<p><span><span>在/etc目录下还有一个<em><strong>cron.d</strong></em>的子目录，这个目录是干什么的呢？当我们要增加全局性的计划任务时，一种方式是直接修改<em><strong>/etc/crontab</strong></em>。但是，一般不建议这样做，<em><strong>/etc/cron.d</strong></em>目录就是为了解决这种问题而创建的。例如，增加一项定时的备份任务，我们可以这样处理：在<em><strong>/etc/cron.d</strong></em>目录下新建文件<em><strong>python-backup</strong></em>，内容如下：</span></span></p>
<div class="cnblogs_code">
<pre><span style="color: #000000;"># m h dom mon dow user command
</span><span style="color: #800080;">26</span> <span style="color: #800080;">16</span> * * * root <span style="color: #0000ff;">tar</span> zcvf /var/backups/home.<span style="color: #0000ff;">tar</span>.gz /home/amonest/python</pre>
</div>
<p>cron进程执行时，就会自动扫描该目录下的所有文件，按照文件中的时间设定执行后面的命令。</p>
<p>&nbsp;</p>
<p>总结成一句话：<em><strong>cron执行时，要读取三个地方的配置文件：一是/etc/crontab，二是/etc/cron.d目录下的所有文件，三是每个用户的配置文件.&nbsp;</strong></em></p>
<p>&nbsp;</p>
<p>/etc/cron.d目录的更多信息可以参考文档《<a title="Fine-grained task scheduling with cron.d" href="http://articles.slicehost.com/2010/8/6/fine-grained-task-scheduling-with-cron-d" target="_blank">Fine-grained task scheduling with cron.d</a>》<em><strong>。</strong></em></p>]]></description></item><item><title>crontab文件【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/06/19/2554358.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 19 Jun 2012 01:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/19/2554358.html</guid><description><![CDATA[<p>crontab文件包含送交cron守护进程的一系列作业和指令。每个用户可以拥有自己的crontab文件；同时，操作系统保存一个针对整个系统的crontab文件，该文件通常存放于/etc或者/etc之下的子目录中，而这个文件只能由系统管理员来修改。</p>
<p>&nbsp;</p>
<p>crontab文件的每一行均遵守特定的格式，由空格或tab分隔为数个领域，每个领域可以放置单一或多个数值。</p>
<p>&nbsp;</p>
<h3><span id=".E6.93.8D.E4.BD.9C.E7.AC.A6.E5.8F.B7" class="mw-headline">操作符号</span></h3>
<p>在一个区域里填写多个数值的方法：</p>
<ul>
<li>逗号 (',') 分开的值，例如：&ldquo;1,3,4,7,8&rdquo;</li>
<li>连词符 ('-') 指定值的范围，例如：&ldquo;1-6&rdquo;，意思等同于&ldquo;1,2,3,4,5,6&rdquo;</li>
<li>星号 ('*') 代表任何可能的值。例如，在&ldquo;小时域&rdquo; 里的星号等于是&ldquo;每一个小时&rdquo;，等等</li>
</ul>
<p>某些cron程序的扩展版本也支持斜线 ('/') 操作符，用于表示跳过某些给定的数。例如，&ldquo;*/3&rdquo;在小时域中等于&ldquo;0,3,6,9,12,15,18,21&rdquo;等被3整除的数。</p>
<p>&nbsp;</p>
<h3><span id=".E6.97.B6.E9.97.B4.E8.AE.BE.E7.BD.AE" class="mw-headline">时间设置</span></h3>
<div class="cnblogs_code">
<pre><span style="color: #000000;"># 文件格式说明
#  &mdash;&mdash;分钟 (</span><span style="color: #800080;">0</span> - <span style="color: #800080;">59</span><span style="color: #000000;">)
# </span>|  &mdash;&mdash;小时 (<span style="color: #800080;">0</span> - <span style="color: #800080;">23</span><span style="color: #000000;">)
# </span>| |  &mdash;&mdash;日   (<span style="color: #800080;">1</span> - <span style="color: #800080;">31</span><span style="color: #000000;">)
# </span>| | |  &mdash;&mdash;月   (<span style="color: #800080;">1</span> - <span style="color: #800080;">12</span><span style="color: #000000;">)
# </span>| | | |  &mdash;&mdash;星期 (<span style="color: #800080;">0</span> - <span style="color: #800080;">7</span>)（星期日=<span style="color: #000000;">0或7）
# </span>| | | | |<span style="color: #000000;">
# </span>* * * * * 被执行的命令</pre>
</div>
<p>注：</p>
<ol>
<li>在&ldquo;星期域&rdquo;（第五个域），0和7都被视为星期日。</li>
<li>不很直观的用法：如果日期和星期同时被设定，那么其中的一个条件被满足时，指令便会被执行。</li>
<li>前5个域称之<strong>分时日月周</strong>，可方便个人记忆。</li>
</ol>
<p>从第六个域起，指明要执行的命令。</p>
<p>&nbsp;</p>
<h4><span id="AIX.E7.B3.BB.E7.BB.9F.E7.AE.A1.E7.90.86.E5.91.98.E7.9A.84Crontab.E6.96.87.E4.BB.B6" class="mw-headline">AIX系统管理员的Crontab文件</span></h4>
<div class="cnblogs_code">
<pre> #=================================================================<span style="color: #000000;">
 #  SYSTEM ACTIVITY REPORTS
 #  8am</span>-5pm activity reports every <span style="color: #800080;">20</span><span style="color: #000000;"> mins during weekdays.
 #  activity reports every hour on Saturday and Sunday.
 #  6pm</span>-<span style="color: #000000;">7am activity reports every hour during weekdays.
 #  summary prepared at </span><span style="color: #800080;">18</span>:<span style="color: #800080;">05</span><span style="color: #000000;"> every weekday.
 #</span>=================================================================
 <span style="color: #800080;">0</span>,<span style="color: #800080;">20</span>,<span style="color: #800080;">40</span> <span style="color: #800080;">8</span>-<span style="color: #800080;">17</span> * * <span style="color: #800080;">1</span>-<span style="color: #800080;">5</span> /usr/lib/sa/sa1 <span style="color: #800080;">1200</span> <span style="color: #800080;">3</span> &amp;
 <span style="color: #800080;">0</span> * * * <span style="color: #800080;">0</span>,<span style="color: #800080;">6</span> /usr/lib/sa/sa1 &amp;
 <span style="color: #800080;">0</span> <span style="color: #800080;">18</span>-<span style="color: #800080;">7</span> * * <span style="color: #800080;">1</span>-<span style="color: #800080;">5</span> /usr/lib/sa/sa1 &amp;
 <span style="color: #800080;">5</span> <span style="color: #800080;">18</span> * * <span style="color: #800080;">1</span>-<span style="color: #800080;">5</span> /usr/lib/sa/sa2 -s <span style="color: #800080;">8</span>:<span style="color: #800080;">00</span> -e <span style="color: #800080;">18</span>:<span style="color: #800080;">01</span> -i <span style="color: #800080;">3600</span> -ubcwyaqvm &amp;</pre>
</div>
<p>&nbsp;</p>
<h4><span id=".E5.B8.B8.E8.A7.81.E9.94.99.E8.AF.AF" class="mw-headline">常见错误</span></h4>
<p>一个常见的错误是，命令行双引号中使用%时，未加反斜线\，例如：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;"># 错误的例子:
</span><span style="color: #800080;">1</span> <span style="color: #800080;">2</span> <span style="color: #800080;">3</span> <span style="color: #800080;">4</span> <span style="color: #800080;">5</span> <span style="color: #0000ff;">touch</span> ~/error_`<span style="color: #0000ff;">date</span> <span style="color: #800000;">"</span><span style="color: #800000;">+%Y%m%d</span><span style="color: #800000;">"</span>`.txt</pre>
</div>
<p>在守护进程发出的电子邮件中会见到错误信息：</p>
<div class="cnblogs_code">
<pre>/bin/<span style="color: #0000ff;">sh</span>: unexpected EOF <span style="color: #0000ff;">while</span> looking <span style="color: #0000ff;">for</span> `<span style="color: #800000;">'''''''</span></pre>
</div>
<p>正确的使用方法：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;"># 正确的例子:
</span><span style="color: #800080;">1</span> <span style="color: #800080;">2</span> <span style="color: #800080;">3</span> <span style="color: #800080;">4</span> <span style="color: #800080;">5</span> <span style="color: #0000ff;">touch</span> ~/right_$(<span style="color: #0000ff;">date</span> +\%Y\%m\%<span style="color: #000000;">d).txt

# 使用单引号也可以解决问题：
</span><span style="color: #800080;">1</span> <span style="color: #800080;">2</span> <span style="color: #800080;">3</span> <span style="color: #800080;">4</span> <span style="color: #800080;">5</span> <span style="color: #0000ff;">touch</span> ~/error_$(<span style="color: #0000ff;">date</span> <span style="color: #800000;">'</span><span style="color: #800000;">+%Y%m%d</span><span style="color: #800000;">'</span><span style="color: #000000;">).txt

# 使用单引号就不用加反斜线了。这个例子会产生这样一个文件 </span>~/error_\<span style="color: #800080;">2006</span>\<span style="color: #800080;">04</span>\<span style="color: #800080;">03</span><span style="color: #000000;">.txt
</span><span style="color: #800080;">1</span> <span style="color: #800080;">2</span> <span style="color: #800080;">3</span> <span style="color: #800080;">4</span> <span style="color: #800080;">5</span> <span style="color: #0000ff;">touch</span> ~/error_$(<span style="color: #0000ff;">date</span> <span style="color: #800000;">'</span><span style="color: #800000;">+\%Y\%m\%d</span><span style="color: #800000;">'</span>).txt</pre>
</div>
<pre><span style="font-family: verdana, Arial, Helvetica, sans-serif;"><span style="font-size: 14px; line-height: 21px; white-space: normal;">&nbsp;</span></span></pre>
<p>下例是另一个常见错误：</p>
<div class="cnblogs_code">
<pre># Prepare <span style="color: #0000ff;">for</span> the daylight savings <span style="color: #0000ff;">time</span> <span style="color: #0000ff;">shift</span>
<span style="color: #800080;">59</span> <span style="color: #800080;">1</span> <span style="color: #800080;">1</span>-<span style="color: #800080;">7</span> <span style="color: #800080;">4</span> <span style="color: #800080;">0</span> /root/shift_my_times.<span style="color: #0000ff;">sh</span></pre>
</div>
<p>初看似要在四月的第一个星期日早晨1时59分运行shift_my_times.sh，但是这样设置不对。</p>
<p>与其他域不同，第三和第五个域之间执行的是&ldquo;或&rdquo;操作。所以这个程序会在4月1日至7日以及4月余下的每一个星期日执行。</p>
<p>这个例子可以重写如下：</p>
<div class="cnblogs_code">
<pre># Prepare <span style="color: #0000ff;">for</span> the daylight savings <span style="color: #0000ff;">time</span> <span style="color: #0000ff;">shift</span>
<span style="color: #800080;">59</span> <span style="color: #800080;">1</span> <span style="color: #800080;">1</span>-<span style="color: #800080;">7</span> <span style="color: #800080;">4</span> * test `<span style="color: #0000ff;">date</span> +\%<span style="color: #0000ff;">w</span>` = <span style="color: #800080;">0</span> &amp;&amp; /root/shift_my_times.<span style="color: #0000ff;">sh</span></pre>
</div>
<p>&nbsp;</p>
<p>另一个常见错误是对分钟设置的误用。下例欲一个程两个小时运行一次：</p>
<div class="cnblogs_code">
<pre># adds <span style="color: #0000ff;">date</span> to a log <span style="color: #0000ff;">file</span>
* <span style="color: #800080;">0</span>,<span style="color: #800080;">2</span>,<span style="color: #800080;">4</span>,<span style="color: #800080;">6</span>,<span style="color: #800080;">8</span>,<span style="color: #800080;">10</span>,<span style="color: #800080;">12</span>,<span style="color: #800080;">14</span>,<span style="color: #800080;">16</span>,<span style="color: #800080;">18</span>,<span style="color: #800080;">20</span>,<span style="color: #800080;">22</span> * * * <span style="color: #0000ff;">date</span> &gt;&gt; /var/log/<span style="color: #0000ff;">date</span>.log</pre>
</div>
<p>而上述设置会使该程序在偶数小时内的每一分钟执行一次。正确的设置是：</p>
<div class="cnblogs_code">
<pre># runs the <span style="color: #0000ff;">date</span><span style="color: #000000;"> command every even hour at the top of the hour
</span><span style="color: #800080;">0</span> <span style="color: #800080;">0</span>,<span style="color: #800080;">2</span>,<span style="color: #800080;">4</span>,<span style="color: #800080;">6</span>,<span style="color: #800080;">8</span>,<span style="color: #800080;">10</span>,<span style="color: #800080;">12</span>,<span style="color: #800080;">14</span>,<span style="color: #800080;">16</span>,<span style="color: #800080;">18</span>,<span style="color: #800080;">20</span>,<span style="color: #800080;">22</span> * * * <span style="color: #0000ff;">date</span> &gt;&gt; /var/log/<span style="color: #0000ff;">date</span><span style="color: #000000;">.log
# an even better way
</span><span style="color: #800080;">0</span> */<span style="color: #800080;">2</span> * * * <span style="color: #0000ff;">date</span> &gt;&gt; /var/log/<span style="color: #0000ff;">date</span>.log</pre>
</div>
<p>&nbsp;</p>
<h3><span id=".E4.B8.8D.E5.8F.91.E9.80.81.E7.94.B5.E5.AD.90.E9.82.AE.E4.BB.B6" class="mw-headline">不发送电子邮件</span></h3>
<p>如果输出结果来自crontab里的命令，那么cron守护进程会用电子邮件将它发给用户。</p>
<p>&nbsp;</p>
<p>若想关闭某个命令的输出结果，可以将输出结果重定向至<code>/dev/null</code>。</p>
<div class="cnblogs_code">
<pre>&gt;/dev/<span style="color: #0000ff;">null</span> <span style="color: #800080;">2</span>&gt;&amp;<span style="color: #800080;">1</span></pre>
</div>
<p>&nbsp;</p>
<p>在常用的Vixie cron中，也可以在文件的开始部分加入命令来关闭所有命令的邮件输出：</p>
<div class="cnblogs_code">
<pre>MAILTO=<span style="color: #800000;">""</span></pre>
</div>]]></description></item><item><title>用SourceForge管理开源项目</title><link>http://www.cnblogs.com/eastson/archive/2012/06/18/2553339.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 18 Jun 2012 03:52:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/18/2553339.html</guid><description><![CDATA[<p><span>SourceForge.net是开源软件开发者进行开发管理的集中式场所，也是全球最大开源软件开发平台和仓库。</span></p>
<p><span>&nbsp;</span></p>
<p><span>S</span>ourceforge为开源软件开发测试提供了高性能的免费空间：&nbsp;</p>
<p><span>1、空间稳定性非常高，无广告，速度快，无限空间容量以及流量。&nbsp;</span></p>
<p><span>2、支持PHP&nbsp;、Perl、Python、&nbsp;Ruby、shell等多种脚本，支持FTP上传。</span></p>
<p><span>3、可以绑定自己的顶级域名，当然他也给我们提供一个二级免费域名。&nbsp;</span></p>
<p><span>4、提供无限免费MySQL数据库，支持在线管理数据库功能。&nbsp;</span></p>
<p><span>5、外链图片，安全模式关闭，allow_url_fopen开启，可自定义.htaccess等特性。&nbsp;</span></p>
<p><br /><span>Sourceforge.net可以使用WinSCP上传和下载文件。使用WinSCP时要注意的是服务器为web.sourceforge.net，用户名为&ldquo;用户名,项目名&rdquo;，密码就是sourceforge的登录密码，空间根目录在&ldquo;htdocs&rdquo;文件夹下。</span></p>
<p><br /><span>下面是一篇文章，该篇文章详细的描述了sourceforge的申请过程：</span><br /><a href="http://www.cnfree.org/html/kj/kj_2/2011/0304/11490.html" target="_blank">http://www.cnfree.org/html/kj/kj_2/2011/0304/11490.html</a></p>
<p>&nbsp;</p>
<p><span>我们可以把我们的代码放在SourceForge.net上，通过SVN的方式来存储我们的代码。SVN地址格式：</span></p>
<div class="cnblogs_code">
<pre>https:<span style="color: #008000;">//</span><span style="color: #008000;">project-name.svn.sourceforge.net/svnroot/project-name</span></pre>
</div>
<p>&nbsp;</p>
<p><span>SourceForge.net不仅提供项目的托管功能，还提供MySQL。</span><br /><span>管理首页：</span><a href="https://sourceforge.net/project/admin/database.php?group_id=567702" target="_blank">https://sourceforge.net/project/admin/database.php?group_id=567702</a><br /><span>phpMyAdmin：</span><a href="https://mysql-a.sourceforge.net/" target="_blank">https://mysql-a.sourceforge.net/</a></p>]]></description></item><item><title>远程桌面连接使用空密码的administrator账号</title><link>http://www.cnblogs.com/eastson/archive/2012/06/16/2551889.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 16 Jun 2012 14:13:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/16/2551889.html</guid><description><![CDATA[<p>&nbsp;Linux系统可以通过<a href="http://www.cnblogs.com/eastson/archive/2012/06/14/2548965.html" target="_blank">Remmina</a>或者<a href="http://www.cnblogs.com/eastson/archive/2012/06/13/2546917.html" target="_blank">Rdesktop</a>远程连接Windows系统的桌面。但是，如果Windows系统的连接帐号没有设置密码，默认的组策略是不允许远程客户端连接的。</p>
<p>&nbsp;</p>
<p>我的XP系统就是这样：管理员帐号administrator没有设置密码，这样XP每次启动时可以自动登陆，但就是因为这个原因，造成Remmina不能远程连接。</p>
<p>&nbsp;</p>
<p>我们可以修改Windows的组策略解决这个问题：</p>
<p>启动&ldquo;<em><strong>组策略编辑器</strong></em>&rdquo;（<em><strong>开始-&gt;运行-&gt;gpedit.msc</strong></em>），在&ldquo;<em><strong>Windows设置-&gt;安全设置-&gt;本地策略-&gt;安全选项</strong></em>&rdquo;中找到&ldquo;<em><strong>帐户 - 使用空白密码的本地帐户只允许进行控制台登录</strong></em>&rdquo;，将其设置为&ldquo;<em><strong>已停用</strong></em>&rdquo;，.这样就可以使用administrator账号、空密码进行远程桌面连接了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061615294243.png" alt="" /></p>]]></description></item><item><title>Eclipse Python插件PyDev的安装</title><link>http://www.cnblogs.com/eastson/archive/2012/06/16/2551881.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 16 Jun 2012 13:47:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/16/2551881.html</guid><description><![CDATA[<p><span>2003年7月16日，以 Fabio Zadrozny 为首的三人开发小组在全球最大的开放源代码软件开发平台和仓库 SourceForge 上注册了一款新的项目，该项目实现了一个功能强大的 Eclipse插件，用户可以完全利用 Eclipse 来进行 Python 应用程序的开发和调试。这个能够将 Eclipse当作 Python IDE 的项目就是 PyDev。</span></p>
<div class="spctrl">&nbsp;</div>
<p><span>PyDev 插件的出现方便了众多的 Python 开发人员，它提供了一些很好的功能，如：语法错误提示、源代码编辑助手、Quick Outline、Globals Browser、Hierarchy View、运行和调试等等。基于 Eclipse 平台，拥有诸多强大的功能，同时也非常易于使用，PyDev 的这些特性使得它越来越受到人们的关注。</span></p>
<p><span>&nbsp;</span></p>
<h3 class="headline-2 bk-sidecatalog-title"><span class="headline-content">安装 PyDev</span></h3>
<p><span><span>启动 Eclipse，打开菜单<em><strong>Help &gt; Eclipse Marketplace</strong></em>，搜索<em><strong>PyDev</strong></em>：</span></span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061615070443.png" alt="" /></p>
<p><span><span>&nbsp;</span></span></p>
<p>找到<em><strong>PyDel</strong></em>插件后点击旁边的&ldquo;<em><strong>Install</strong></em>&rdquo;按钮，然后按照Eclipse的提示进行安装，安装完毕重启Eclipse。</p>
<p>&nbsp;</p>
<h3>配置PyDev</h3>
<p>安装好PyDev后需要先配置Python解释器才能创建项目。打开菜单<em><strong>Windows &gt; Preferences</strong></em>，找到<em><strong>PyDev &gt; Interpreter - Python</strong></em>：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061621394337.png" alt="" /></p>
<p>&nbsp;</p>
<p>点击右侧的&ldquo;<em><strong>Auto Config</strong></em>&rdquo;按钮PyDev会自动地帮我们找到已经安装的Python解释器和系统库目录。</p>
<p>&nbsp;</p>
<p>配置完毕，OK，现在我们可以创建Python项目了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061621455967.png" alt="" /></p>
<p>&nbsp;</p>
<p><span><span><span>&nbsp;</span></span></span></p>]]></description></item><item><title>让你的Ubuntu桌面丰富起来</title><link>http://www.cnblogs.com/eastson/archive/2012/06/16/2551715.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 16 Jun 2012 03:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/16/2551715.html</guid><description><![CDATA[<p><span>Screenlets 是一款能够在桌面上添加各种小玩意的软件，如即时贴、时钟、天气预报、月历等等。这个软件和 Mac OS X 中的 Dashboard 很类似，可与 Compiz 或 Beryl 配合使用，以便装饰或扩展桌面。</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061611162444.png" alt="" /></p>
<p><span>&nbsp;</span></p>
<p><span class="wp_keywordlink">Ubuntu</span>用户可以在软件中心搜索安装，也可以使用下面的PPA源安装：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> add-apt-repository ppa:screenlets/<span style="color: #000000;">ppa
</span><span style="color: #0000ff;">sudo</span> apt-<span style="color: #000000;">get update
</span><span style="color: #0000ff;">sudo</span> apt-get <span style="color: #0000ff;">install</span> screenlets</pre>
</div>
<p>&nbsp;</p>
<p>安装完毕后，重启电脑，打开screenlets管理器：</p>
<div class="cnblogs_code">
<pre>screenlets</pre>
</div>
<p>&nbsp;</p>
<p>screenlets管理器的主画面：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061611474114.png" alt="" /></p>
<p>&nbsp;</p>
<p>双击管理器右侧对应的图标，该screenlet就加到桌面上了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061611550487.png" alt="" /></p>]]></description></item><item><title>argparser库测试脚本</title><link>http://www.cnblogs.com/eastson/archive/2012/06/15/2550855.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 15 Jun 2012 08:25:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/15/2550855.html</guid><description><![CDATA[<p>测试argparser库的，主要用来处理命令行参数。更多信息请参考文档《<a href="http://docs.python.org/howto/argparse.html" target="_blank">Argparse Tutorial</a>》。</p>
<p>&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">import</span><span style="color: #000000;"> argparse

parser </span>= argparse.ArgumentParser(description=<span style="color: #800000;">"</span><span style="color: #800000;">calculate X to the power of Y</span><span style="color: #800000;">"</span><span style="color: #000000;">)

parser.add_argument(</span><span style="color: #800000;">"</span><span style="color: #800000;">x</span><span style="color: #800000;">"</span>, type=int, help=<span style="color: #800000;">"</span><span style="color: #800000;">the base</span><span style="color: #800000;">"</span><span style="color: #000000;">)
parser.add_argument(</span><span style="color: #800000;">"</span><span style="color: #800000;">y</span><span style="color: #800000;">"</span>, type=int, help=<span style="color: #800000;">"</span><span style="color: #800000;">the exponent</span><span style="color: #800000;">"</span><span style="color: #000000;">)

group </span>=<span style="color: #000000;"> parser.add_mutually_exclusive_group()
group.add_argument(</span><span style="color: #800000;">"</span><span style="color: #800000;">-v</span><span style="color: #800000;">"</span>, <span style="color: #800000;">"</span><span style="color: #800000;">--verbose</span><span style="color: #800000;">"</span>, action=<span style="color: #800000;">"</span><span style="color: #800000;">store_true</span><span style="color: #800000;">"</span><span style="color: #000000;">)
group.add_argument(</span><span style="color: #800000;">"</span><span style="color: #800000;">-q</span><span style="color: #800000;">"</span>, <span style="color: #800000;">"</span><span style="color: #800000;">--quiet</span><span style="color: #800000;">"</span>, action=<span style="color: #800000;">"</span><span style="color: #800000;">store_true</span><span style="color: #800000;">"</span><span style="color: #000000;">)

args </span>=<span style="color: #000000;"> parser.parse_args()
answer </span>= args.x**<span style="color: #000000;">args.y

</span><span style="color: #0000ff;">if</span><span style="color: #000000;"> args.quiet:
    </span><span style="color: #0000ff;">print</span><span style="color: #000000;"> answer
</span><span style="color: #0000ff;">elif</span><span style="color: #000000;"> args.verbose:
    </span><span style="color: #0000ff;">print</span> <span style="color: #800000;">"</span><span style="color: #800000;">{} to the power {} equals {}</span><span style="color: #800000;">"</span><span style="color: #000000;">.format(args.x, args.y, answer)
</span><span style="color: #0000ff;">else</span><span style="color: #000000;">:
    </span><span style="color: #0000ff;">print</span> <span style="color: #800000;">"</span><span style="color: #800000;">{}^{} == {}</span><span style="color: #800000;">"</span>.format(args.x, args.y, answer)</pre>
</div>]]></description></item><item><title>Python源文件中使用UTF-8编码</title><link>http://www.cnblogs.com/eastson/archive/2012/06/15/2550824.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 15 Jun 2012 08:12:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/15/2550824.html</guid><description><![CDATA[<p>测试文件hello.py：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">print</span> <span style="color: #800000;">"</span><span style="color: #800000;">你好！</span><span style="color: #800000;">"</span></pre>
</div>
<p>&nbsp;</p>
<p>运行一般都会报错：</p>
<div class="cnblogs_code">
<pre>File <span style="color: #800000;">"</span><span style="color: #800000;">hello.py</span><span style="color: #800000;">"</span>, line 1<span style="color: #000000;">
SyntaxError: Non</span>-ASCII character <span style="color: #800000;">'</span><span style="color: #800000;">\xe4</span><span style="color: #800000;">'</span> <span style="color: #0000ff;">in</span> file hello.py on line 1, but no encoding declared; see http://www.python.org/peps/pep-0263.html <span style="color: #0000ff;">for</span> details</pre>
</div>
<p>&nbsp;</p>
<p><span>加上编码注释就能运行：</span></p>
<div class="cnblogs_code">
<pre><span style="color: #008000;">#</span><span style="color: #008000;"> -*- coding: utf-8 -*-</span>
<span style="color: #0000ff;">print</span> <span style="color: #800000;">"</span><span style="color: #800000;">你好！</span><span style="color: #800000;">"</span></pre>
</div>]]></description></item><item><title>Linux下vi命令大全</title><link>http://www.cnblogs.com/eastson/archive/2012/06/15/2550466.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 15 Jun 2012 04:04:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/15/2550466.html</guid><description><![CDATA[<h3>进入vi的命令</h3>
<p>vi filename :打开或新建文件，并将光标置于第一行首 <br />vi +n filename ：打开文件，并将光标置于第n行首 <br />vi + filename ：打开文件，并将光标置于最后一行首 <br />vi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处 <br />vi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename <br />vi filename....filename ：打开多个文件，依次进行编辑</p>
<p>&nbsp;&nbsp;</p>
<h3>移动光标类命令</h3>
<p>h ：光标左移一个字符 <br />l ：光标右移一个字符 <br />space：光标右移一个字符 <br />Backspace：光标左移一个字符 <br />k或Ctrl+p：光标上移一行 <br />j或Ctrl+n ：光标下移一行 <br />Enter ：光标下移一行 <br />w或W ：光标右移一个字至字首 <br />b或B ：光标左移一个字至字首 <br />e或E ：光标右移一个字至字尾 <br />) ：光标移至句尾 <br />( ：光标移至句首 <br />}：光标移至段落开头 <br />{：光标移至段落结尾 <br />nG：光标移至第n行首 <br />n+：光标下移n行 <br />n-：光标上移n行 <br />n$：光标移至第n行尾 <br />H ：光标移至屏幕顶行 <br />M ：光标移至屏幕中间行 <br />L ：光标移至屏幕最后行 <br />0：（注意是数字零）光标移至当前行首 <br />$：光标移至当前行尾</p>
<p>&nbsp;&nbsp;</p>
<h3>屏幕翻滚类命令</h3>
<p>Ctrl+u：向文件首翻半屏 <br />Ctrl+d：向文件尾翻半屏 <br />Ctrl+f：向文件尾翻一屏 <br />Ctrl＋b；向文件首翻一屏 <br />nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。</p>
<p>&nbsp;</p>
<h3>插入文本类命令&nbsp;</h3>
<p>i ：在光标前 <br />I ：在当前行首 <br />a：光标后 <br />A：在当前行尾 <br />o：在当前行之下新开一行 <br />O：在当前行之上新开一行 <br />r：替换当前字符 <br />R：替换当前字符及其后的字符，直至按ESC键 <br />s：从当前光标位置处开始，以输入的文本替代指定数目的字符 <br />S：删除指定数目的行，并以所输入文本代替之 <br />ncw或nCW：修改指定数目的字 <br />nCC：修改指定数目的行</p>
<p>&nbsp;&nbsp;</p>
<h3>删除命令</h3>
<p>ndw或ndW：删除光标处开始及其后的n-1个字 <br />do：删至行首 <br />d$：删至行尾 <br />ndd：删除当前行及其后n-1行 <br />x或X：删除一个字符，x删除光标后的，而X删除光标前的 <br />Ctrl+u：删除输入方式下所输入的文本 </p>
<p>&nbsp;</p>
<h3>搜索及替换命令 </h3>
<p>/pattern：从光标开始处向文件尾搜索pattern <br />?pattern：从光标开始处向文件首搜索pattern <br />n：在同一方向重复上一次搜索命令 <br />N：在反方向上重复上一次搜索命令 <br />：s/p1/p2/g：将当前行中所有p1均用p2替代 <br />：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代 <br />：g/p1/s//p2/g：将文件中所有p1均用p2替换</p>
<p>&nbsp;&nbsp;</p>
<h3>选项设置</h3>
<p>all：列出所有选项设置情况 <br />term：设置终端类型 <br />ignorance：在搜索中忽略大小写 <br />list：显示制表位(Ctrl+I)和行尾标志（$) <br />number：显示行号 <br />report：显示由面向行的命令修改过的数目 <br />terse：显示简短的警告信息 <br />warn：在转到别的文件时若没保存当前文件则显示NO write信息 <br />nomagic：允许在搜索模式中，使用前面不带&ldquo;\&rdquo;的特殊字符 <br />nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始 <br />mesg：允许vi显示其他用户用write写到自己终端上的信息 </p>
<p>&nbsp;</p>
<h3>最后行方式命令 </h3>
<p>：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下 <br />：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下 <br />：n1,n2 d ：将n1行到n2行之间的内容删除 <br />：w ：保存当前文件 <br />：e filename：打开文件filename进行编辑 <br />：x：保存当前文件并退出 <br />：q：退出vi <br />：q!：不保存文件并退出vi <br />：!command：执行shell命令command <br />：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入 <br />：r!command：将命令command的输出结果放到当前行</p>
<p>&nbsp;&nbsp;</p>
<h3>寄存器操作</h3>
<p>"?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字 <br />"?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字 <br />"?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字 <br />"?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字 <br />ndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。</p>]]></description></item><item><title>Python相关文章索引</title><link>http://www.cnblogs.com/eastson/archive/2012/06/15/2550222.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 15 Jun 2012 03:27:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/15/2550222.html</guid><description><![CDATA[<h3>Python参考资料</h3>
<p><a href="http://www.php100.com/manual/Python/" target="_blank">Python 教程</a>&nbsp;|&nbsp;<a href="http://woodpecker.org.cn/diveintopython/" target="_blank">深入Python</a> | &nbsp;<a href="http://woodpecker.org.cn/diveintopython3/" target="_blank">深入 Python 3</a></p>
<p><a href="http://docs.python.org/release/2.4.1/tut/tut.html" target="_blank">Python Tutorial</a></p>
<p><a href="http://www.bsdmap.com/manuals/Python/python_standard_lib/" target="_blank">Python Standard Library 中文</a></p>
<p><a href="http://docs.python.org/release/2.4.1/lib/lib.html" target="_blank">Python Library Reference</a></p>
<p><a href="http://docs.python.org/index.html" target="_blank">Python v2.7.3 documentation</a></p>
<p><a href="http://docs.python.org/py3k/" target="_blank">Python v3.2 documentation</a></p>
<p><a href="http://www.doughellmann.com/PyMOTW/" target="_blank">Python Module of the Week</a></p>
<p class="postTitle"><a id="cb_post_title_url" href="http://www.cnblogs.com/yuxc/archive/2011/03/24/2029786.html" target="_blank">Python二三事</a></p>
<p class="postTitle"><a href="http://pydev.org/index.html" target="_blank">PyDev</a></p>
<p>&nbsp;</p>
<h3>Python库</h3>
<p><a href="http://docs.python.org/howto/argparse.html#id1" target="_blank">Argparse Tutorial</a></p>
<p>&nbsp;</p>
<h3>Django</h3>
<p><a href="http://djangobook.py3k.cn/2.0/" target="_blank">Django电子书中文版</a></p>]]></description></item><item><title>PHP相关文章索引</title><link>http://www.cnblogs.com/eastson/archive/2012/06/15/2550184.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 15 Jun 2012 01:21:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/15/2550184.html</guid><description><![CDATA[<h3>PHP资源网站</h3>
<p><a href="http://www.php.net/" target="_blank">PHP.net</a>&nbsp;|&nbsp;<a href="http://pear.php.net/" target="_blank">PEAR</a>&nbsp;|&nbsp;<a href="http://pecl.php.net/" target="_blank">PECL</a>&nbsp;| <a href="http://www.php.net/manual/zh/index.php" target="_blank">PHP手册</a>&nbsp;| <a href="http://www.php.net/manual/zh/funcref.php" target="_blank">函数参考</a></p>
<p class="title"><a href="http://www.php-open.com/" target="_blank">PHP开源大全</a></p>
<p class="title"><a href="http://www.oschina.net/code/list/4/php" target="_blank">PHP代码分享</a></p>
<p class="title">&nbsp;</p>
<h3 class="title">PHP Shell</h3>
<p><a href="http://www.php.net/cli" target="_blank">PHP 的命令行模式</a></p>
<p><a href="http://wenku.baidu.com/view/fea5c5fafab069dc502201ce.html" target="_blank">用PHP写SHELL</a></p>
<p class="title"><a href="http://www.enet.com.cn/article/2004/0720/A20040720326185.shtml" target="_blank">将PHP作为Shell脚本语言使</a></p>
<p class="title"><strong class="p24">&nbsp;</strong></p>
<h3 class="title">Smarty相关资料</h3>
<p class="title"><a href="http://www.smarty.net/docs/en/" target="_blank"><span>Smarty 3 Manual</span></a></p>
<p class="title"><a href="http://www.php100.com/manual/smarty/" target="_blank">Smarty中文参考手册</a></p>]]></description></item><item><title>Ubuntu系统环境变量配置文件</title><link>http://www.cnblogs.com/eastson/archive/2012/06/15/2550151.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 15 Jun 2012 01:03:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/15/2550151.html</guid><description><![CDATA[<p>在Ubuntu中有如下几个文件可以设置环境变量：</p>
<p><br />/etc/profile：在登录时,操作系统定制用户环境时使用的第一个文件,此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行。</p>
<p><br />/etc/environment：在登录时操作系统使用的第二个文件,系统在读取你自己的profile前,设置环境文件的环境变量。</p>
<p><br />~/.profile：在登录时用到的第三个文件是.profile文件,每个用户都可使用该文件输入专用于自己使用的shell信息,当用户登录时,该文件仅仅执行一次!默认情况下,他设置一些环境变量,执行用户的.bashrc文件。</p>
<p><br />/etc/bashrc：为每一个运行bash shell的用户执行此文件.当bash shell被打开时,该文件被读取.</p>
<p><br />~/.bashrc：该文件包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该该文件被读取。</p>]]></description></item><item><title>Remmina：Linux下的远程桌面客户端</title><link>http://www.cnblogs.com/eastson/archive/2012/06/14/2548965.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 14 Jun 2012 02:54:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/14/2548965.html</guid><description><![CDATA[<p>Remmina 是一个新进的 <a href="http://www.oschina.net/p/gtk">GTK+</a> 远程桌面客户端，提供了 RDP、VNC、XDMCP、SSH 等远程连接协议的支持。</p>
<p>&nbsp;</p>
<p>这个客户端最大的优点在于界面清爽，方便易用，创建远程连接的界面与 Windows 自带的远程桌面十分相近，即使是熟习于 Windows 的朋友也不会感到陌生。</p>
<p>&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061410530037.png" alt="" /></p>]]></description></item><item><title>X11VNC：让Windows可以远程管理Ubuntu桌面</title><link>http://www.cnblogs.com/eastson/archive/2012/06/14/2548804.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 14 Jun 2012 02:42:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/14/2548804.html</guid><description><![CDATA[<h3>Ubuntu下VNC Server安装过程</h3>
<p>首先在Ubuntu机器中安装x11vnc：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> apt-get <span style="color: #0000ff;">install</span> x11vnc</pre>
</div>
<p>&nbsp;</p>
<p>然后设置VNC的连接密码：</p>
<div class="cnblogs_code">
<pre>x11vnc -storepasswd</pre>
</div>
<p>上面的命令会提示输入密码，然后将密码加密以后保存在<em><strong>~/.vnc/passwd</strong></em>文件。</p>
<p>&nbsp;</p>
<p>启动VNC Server：</p>
<div class="cnblogs_code">
<pre>x11vnc -forever -shared -rfbauth ~/.vnc/<span style="color: #0000ff;">passwd</span> </pre>
</div>
<p>&nbsp;</p>
<p>也可以将VNC Server设置成随系统启动后自动在后台启动：</p>
<p>1. 将密码文件复制到<em><strong>/etc</strong></em>目录：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">cp</span> ~/.vnc/<span style="color: #0000ff;">passwd</span> /etc/x11vnc.pass</pre>
</div>
<p>2. 创建<em><strong>/etc/init/</strong></em><span><em><strong>x11vnc.conf</strong></em>文件，将下面的内容复制进去：</span></p>
<div class="cnblogs_code">
<pre>start on <span style="color: #0000ff;">login</span>-session-<span style="color: #000000;">start  
  
script  
    x11vnc </span>-display :<span style="color: #800080;">0</span> -auth /var/run/lightdm/root/:<span style="color: #800080;">0</span> -forever -bg -o /var/log/x11vnc.log -rfbauth /etc/x11vnc.pass -rfbport <span style="color: #800080;">5900</span><span style="color: #000000;">  
end script  </span></pre>
</div>
<p>3. 重启电脑，<span>等重启好了以后，到Windows下就可以连接了。</span></p>
<p><span>&nbsp;</span></p>
<h3>Windows下的连接过程</h3>
<p>在Windows机器中安装<em><strong><a href="http://www.realvnc.com/products/vnc/" target="_blank">RealVNC Viewer</a></strong></em>，完成后启动VNC Viwer：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061409424671.png" alt="" /></p>
<p>&nbsp;</p>
<p>在VNC Server中输入Ubuntu机器的IP地址或者机器名称，点击&ldquo;Connect&rdquo;按钮，提示密码输入：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061409475119.png" alt="" /></p>
<p>&nbsp;</p>
<p>在密码框输入我们刚才设定的VNC连接密码，点击&ldquo;OK&rdquo;按钮，然后就可以看到Ubuntu机器的图形化桌面了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061409521335.png" alt="" /></p>]]></description></item><item><title>Linux 文件颜色的含义</title><link>http://www.cnblogs.com/eastson/archive/2012/06/13/2547752.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 13 Jun 2012 05:58:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/13/2547752.html</guid><description><![CDATA[<div class="postTitle"><span style="color: #0000ff; font-size: small;">蓝色代表目录</span></div>
<p><span style="font-size: small;"><span style="color: #99cc00;">绿色代表可执行文件</span><br /><span style="color: #993300;">红色表示压缩文件</span><br /><span style="color: #3366ff;">浅蓝色表示链接文件</span><br /><span style="color: #999999;">灰色表示其他文件</span><br />红色闪烁表示链接的文件有问题了</span></p>]]></description></item><item><title>WinSCP： Windows下使用的开源图形化 SFTP 客户端</title><link>http://www.cnblogs.com/eastson/archive/2012/06/13/2547737.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 13 Jun 2012 05:51:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/13/2547737.html</guid><description><![CDATA[<p><a href="http://winscp.net/eng/docs/lang:chs" target="_blank">WinSCP</a> 是一个 Windows 环境下使用&nbsp;<acronym title="Secure Shell">SSH</acronym>&nbsp;的开源图形化&nbsp;<acronym title="SSH File Transfer Protocol">SFTP</acronym>&nbsp;客户端。同时支持&nbsp;<acronym title="Secure Copy Protocol">SCP</acronym>&nbsp;协议。它的主要功能就是在本地与远程计算机间安全的复制文件等。</p>
<p><span>&nbsp;</span></p>
<p>启动WinSCP，文件协议选择SFTP（这需要服务器有安装OpenSSH Server），然后输入主机地址，用户名和密码。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061313442674.png" alt="" /></p>
<p>&nbsp;</p>
<p>为了避免在WinSCP中看到乱码的服务器中文文件名，需要开启文件名的UTF-8转换。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061313473017.png" alt="" /></p>
<p>&nbsp;</p>
<p>然后，点击&ldquo;Login&rdquo;按钮，就可以看到图形化的文件导航画面了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061313485564.png" alt="" /></p>]]></description></item><item><title>Putty 登录 Ubuntu 12.04</title><link>http://www.cnblogs.com/eastson/archive/2012/06/13/2547578.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 13 Jun 2012 03:55:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/13/2547578.html</guid><description><![CDATA[<p><em><strong>Putty</strong></em>是一个免费的、Windows 32平台下的telnet、rlogin和ssh客户端，但是功能丝毫不逊色于商业的telnet类工具。用它来远程管理Linux十分好用，其主要优点如下：</p>
<ul>
<li>全面支持ssh1和ssh2；</li>
<li>绿色软件，无需安装，下载后在桌面建个快捷方式即可使用；</li>
<li>体积很小，仅364KB (0.54 beta版本)；</li>
<li>操作简单，所有的操作都在一个控制面板中实现。</li>
</ul>
<p>&nbsp;</p>
<p>Ubuntu自身默认是不带<em><strong>OpenSSH Server</strong></em>，而是只有<em><strong>OpenSSH Client</strong></em>。<em><strong>OpenSSH Server</strong></em>的安装方法：&nbsp;</p>
<div class="cnblogs_code">
<pre><em><span style="color: #0000ff;">sudo</span> apt-get <span style="color: #0000ff;">install</span> openssh-</em><span style="color: #000000;"><em>server</em></span></pre>
</div>
<p>&nbsp;&nbsp;</p>
<p>打开网站<em><strong><a href="http://www.putty.org/" target="_blank">http://www.putty.org/</a></strong></em>，下载Putty的最新版。下载完毕后双击putty.exe执行：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061311434477.png" alt="" /></p>
<p>&nbsp;</p>
<p>输入目标机器的IP地址，选择连接类型<em><strong>SSH</strong></em>，点击&ldquo;<em><strong>Open</strong></em>&rdquo;按钮，就可以打开目标机器的登录画面。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061311455994.png" alt="" /></p>
<p>&nbsp;</p>
<p>输入目标机器的帐号和密码，OK，成功登录。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061311482781.png" alt="" /></p>
<p>&nbsp;</p>
<p>使用Putty查看目标机器的中文目录和文件时可能会乱码，这需要设置一下：点击Putty右边的<em><strong>Windows &gt; Appearance</strong></em>，然后设置<em><strong>Remote character set</strong></em>为<em><strong>UTF-8</strong></em>，这样就不会乱码了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061311511167.png" alt="" /></p>]]></description></item><item><title>如何在Linux下创建与解压zip, tar, tar.gz和tar.bz2文件【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/06/13/2547459.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 13 Jun 2012 02:47:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/13/2547459.html</guid><description><![CDATA[<p>这么多年来，数据压缩对我们来说是非常有用的。无论是在邮件中发送的图片用的zip文件还是在服务器压缩数据文件，我们都可以让下载更容易或者有效的节约磁盘空间。某些压缩格式有时允许我们以60％的比率（甚至更高）压缩文件。下面我将会给大家演示如何用这些命令在Linux下面去压缩文件或者目录。我们将学习zip, tar, tar.gz和tar.bz2等压缩格式的基本用法。这几个是在Linux里面常用的压缩格式。</p>
<p>在我们探究这些用法之前，我想先跟大家分享一下使用不同压缩格式的经验。当然，我这里讲到的只是其中的一些用法，除我讲到的之外，他们还有更多的地方值得我们探讨。我已经意识到我需要了解两到三种压缩格式，才能更好的使用他们。zip格式是第一个需要了解的格式。因为它实际上已成为压缩文件的标准选择，而且它在windows上也能使用。我经常用zip格式压缩那些需要共享给windows用户的文件。如果只是共享给linux用户或者Mac用户，那我偏向于选择tar.gz格式。</p>
<p>&nbsp;</p>
<p><strong>ZIP</strong><br />zip可能是目前使用得最多的文档压缩格式。它最大的优点就是在不同的操作系统平台，比如Linux， Windows以及Mac OS，上使用。缺点就是支持的压缩率不是很高，而tar.gz和tar.gz2在压缩率方面做得非常好。闲话少说，我们步入正题吧：<br />我们可以使用下面的命令压缩一个目录：</p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">zip</span> -r archive_name.<span style="color: #0000ff;">zip</span> directory_to_compress</pre>
</div>
<p>下面是如何解压一个zip文档：</p>
<div class="hl">
<div class="hl">
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">unzip</span> archive_name.<span style="color: #0000ff;">zip</span></pre>
</div>
<p>&nbsp;</p>
</div>
</div>
<p><strong>TAR</strong><br />Tar是在Linux中使用得非常广泛的文档打包格式。它的好处就是它只消耗非常少的CPU以及时间去打包文件，它仅仅只是一个打包工具，并不负责压缩。下面是如何打包一个目录：</p>
<div class="hl">
<div class="hl">
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">tar</span> -cvf archive_name.<span style="color: #0000ff;">tar</span> directory_to_compress</pre>
</div>
<p>如何解包：</p>
</div>
</div>
<div class="hl">
<div class="hl">
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">tar</span> -xvf archive_name.<span style="color: #0000ff;">tar</span>.gz</pre>
</div>
<p>上面这个解包命令会将文档解开在当前目录下面。当然，你也可以用这个命令来指定解包的路径：</p>
</div>
</div>
<div class="hl">
<div class="hl">
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">tar</span> -xvf archive_name.<span style="color: #0000ff;">tar</span> -C /tmp/extract_here/</pre>
</div>
<p>&nbsp;</p>
</div>
</div>
<p><strong>TAR.GZ</strong><br />这种格式是我使用得最多的压缩格式。它在压缩时不会占用太多CPU的，而且可以得到一个非常理想的压缩率。使用下面这种命令去压缩一个目录：</p>
<div class="hl">
<div class="hl">
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">tar</span> -zcvf archive_name.<span style="color: #0000ff;">tar</span>.gz directory_to_compress</pre>
</div>
<p>解压缩：</p>
</div>
</div>
<div class="hl">
<div class="hl">
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">tar</span> -zxvf archive_name.<span style="color: #0000ff;">tar</span>.gz</pre>
</div>
<p>上面这个解包命令将会将文档解开在当前目录下面。当然，你也可以用这个命令来指定解包的路径：</p>
</div>
</div>
<div class="hl">
<div class="hl">
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">tar</span> -zxvf archive_name.<span style="color: #0000ff;">tar</span>.gz -C /tmp/extract_here/</pre>
</div>
<p>&nbsp;</p>
</div>
</div>
<p><strong>TAR.BZ2</strong><br />这种压缩格式是我们提到的所有方式中压缩率最好的。当然，这也就意味着，它比前面的方式要占用更多的CPU与时间。下面的命使用tar.bz2压缩一个目录。</p>
<div class="hl">
<div class="hl">
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">tar</span> -jcvf archive_name.<span style="color: #0000ff;">tar</span>.bz2 directory_to_compress</pre>
</div>
<p>上面这个解包命令将会将文档解开在当前目录下面。当然，你也可以用这个命令来指定解包的路径：</p>
</div>
</div>
<div class="hl">
<div class="hl">
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">tar</span> -jxvf archive_name.<span style="color: #0000ff;">tar</span>.bz2 -C /tmp/extract_here/</pre>
</div>
<p>&nbsp;</p>
</div>
</div>
<p>数据压缩是非常有用的，尤其是对于备份来说。所以，你现在应该考虑在你的备份脚本中使用你在这里学到的压缩方式备份你基本的规则文件以减小你备份文件的大小。</p>
<p>&nbsp;</p>
<p>过段时间之后，你就会意识到，在压缩率与CPU占用时间上会有一个平衡，你也要学会如何去权衡什么时候你需要一个快但是压缩率低，什么时候需要一个压缩率高但是CPU点用高的压缩方式，然后你才能避免无谓的空间与时间。</p>
<p>&nbsp;</p>
<p>原文地址：<a href="http://hi.baidu.com/huazhixu_127/blog/item/6deaeaede8c776ceb21cb14b.html" target="_blank">http://hi.baidu.com/huazhixu_127/blog/item/6deaeaede8c776ceb21cb14b.html</a></p>]]></description></item><item><title>/etc/fstab文件简要说明【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/06/13/2547399.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 13 Jun 2012 02:31:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/13/2547399.html</guid><description><![CDATA[<p>能玩Linux的朋友都知道fstab这个文件，如果要用好linux，熟悉linux的一些核心配置文件是必要的，而fstab则是其中之一。这个文件描述系统中各种文件系统的信息，应用程序读取这个文件，然后根据其内容进行自动挂载的工作。因此，我们需要理解其中的内容，了解它如何与mount命令配合工作，并能够针对自己的情况进行修改。</p>
<p><br />作为系统配置文件，fstab通常都位于/etc目录下，它包括了所有分区和存储设备的信息，以及它们应该挂载到哪里，以什么样子的方式挂载。如果遇到一 些类似于无法挂载你的windows分区，无法使用你的光驱，无法对某个分区进行写入操作，那么基本上可以断定，你的fstab内容有问题了。也就是说，你可以通过修改它来搞定这些问题。</p>
<p><br />说了半天，/etc/fstab其实就是一个文本文件，用gedit或者vi都可以打开，当然，前提是root权限。在这个文件中，每个文件系统（包括分 区或者设备）用一行来描述，在每一行中，用空格或TAB符号来分隔各个字段，文件中以*开头的行是注释信息。fstab文件中的纪录的排序十分重要。因为 fsck，mount或umount等程序在做它们的工作时会按此顺序进行本。下面进行详细的讲解，本文假设读者已经有挂载文件系统和分区的基础知识。 <br /><br />在讲解之前要说一下，每个人所使用的系统情况都是不同的，包括硬件种类，所用系统等，因此fstab文件肯定是有所差异的。但是其基本结构，如上所述，都不会变。所以我们先以一个fstab内容作为模板进行讲解。 <br /><br />首先请看下面这个例子： </p>
<div class="cnblogs_code">
<pre>/dev/hda2     /                       ext2  defaults                    <span style="color: #800080;">1</span> <span style="color: #800080;">1</span>
/dev/hdb1     /home               ext2  defaults                    <span style="color: #800080;">1</span> <span style="color: #800080;">2</span>
/dev/cdrom  /media/cdrom  auto  ro,noauto,user,exec <span style="color: #800080;">0</span> <span style="color: #800080;">0</span>
/dev/fd0      /media/floppy auto  rw,noauto,user,<span style="color: #0000ff;">sync</span> <span style="color: #800080;">0</span> <span style="color: #800080;">0</span><span style="color: #000000;">
proc            </span>/proc               proc  defaults                    <span style="color: #800080;">0</span> <span style="color: #800080;">0</span>
/dev/hda1     swap                swap  pri=<span style="color: #800080;">42</span>                      <span style="color: #800080;">0</span> <span style="color: #800080;">0</span> </pre>
</div>
<p><br />这些看起来毫无意义的字符代表了什么？在对应相应分区或者存储设备信息的每一行中，每一列又是什么意思？先大体讲一下，第一列表示设备的名称，第二列表示 该设备的挂载点，第三列是文件系统，第四列是挂载选项，第五列是dump选项（用一个数字表示），第六列（接下来的数字）表示文件系统检查选项。好了，接下来就要详细介绍这些参数的具体含义了。 <br /><br /><strong>第一、二列：设备和默认挂载点</strong><br />第一列和第二列的内容是最简单最直接的，它们的作用就是告诉mount命令，我想挂载什么分区或者什么设备，以及我所希望的挂载点在哪里。在 fstab中为某一个设备指定的挂载点是其默认挂载点，也就是当你在挂载目录的时候没有手工指定其他目录的话，系统就将该设备挂载到这个目录。大多数 Linux发行版都会为挂载点创建专门的目录，大多数是在/mnt下，但是一些发行版（比如SUSE或者ubuntu）是在/media下。笔者使用的是 ubuntu，所以示例信息中也是用的/media目录。 <br /><br />按照我们给出的fstab示例，如果你敲入命令 </p>
<div class="cnblogs_code">
<pre>$ <span style="color: #0000ff;">mount</span> /dev/fd0 </pre>
</div>
<p>你的软驱就将挂载到/media/floppy，因为这是你告诉系统的软驱默认挂载点。如果没有这个信息，当你敲入mount命令时，mount会感到很 困惑：该死的，你想让我把这玩意挂载到哪里去呢？当然，如果你看fstab中发行版给你指定的默认挂载点不顺眼，也可以自由修改它，修改成任何一个你希望 的目录都可以。如果还不存在，就首先创建这个目录。要知道，fstab是不会把所有工作都给你包干的。 <br /><br />另外，有一些分区和存储设备是在Linux系统启动的时候就自动挂载的，比如，让我们看看刚才列出来的fstab示例信息，有两行是这样的： </p>
<div class="cnblogs_code">
<pre>/dev/hda2 / ext2 defaults <span style="color: #800080;">1</span> <span style="color: #800080;">1</span>
/dev/hdb1 /home ext2 defaults <span style="color: #800080;">1</span> <span style="color: #800080;">2</span> </pre>
</div>
<p>正如刚才我们讲到的那样，这两行表示/dev/hda2默认挂载到/根目录，而 /dev/hdb1则默认挂载到/home目录，。这些工作在你Linux系统启动的时候就会通过读取fstab自动完成，否则的话&hellip;&hellip;想象你会遭受什么 样的折磨吧，所有的程序都在/根目录下，而你却无法使用，因为你没有挂载/根目录！恩，我保证，这将是一次让人沮丧的系统使用经历。</p>
<p><br />除了显示的使用设备名，你可以使用设备的UUID或设备的卷标签，例如，你可以在这个字段写成&ldquo;LABAL=root&rdquo;或&ldquo;UUID= 3e6be9de- 8139-11d1-9106-a43f08d823a6&rdquo;，这将使系统更具伸缩性。例如，如果你的系统添加或移除了一个SCSI硬盘，这有可以改变你的 设备名，但它不会修改你的卷标签。</p>
<p> <br />对于NFS mount操作，这个字段应该包含host:dir格式的信息，例如:knuth.aeb.nl:/，对于进程文件系统procfs，使用proc。 <br /><br /><strong>第三列：文件系统类型</strong> <br />fstab中的第三列指示了设备或者分区的文件系统类型。它支持很多种类的文件系统，我们在这里只介绍最为常用的。如果想了解你的kernel目前支持哪 些文件系统，可以查看/proc/filesystems的内容。如果这个字段定义为swap，这条纪录将关联到一个用于交换目的的文件或分区。如果这个 字段定义为ignored，这行将被忽略。这对于显示目前没有使用的分区非常有用。 </p>
<p><br />ext2 和 ext3： Linux下的Ext2文件系统，是 GNU/Linux 系统中标准的文件系统，其特点为存取文件的性能极好，对于中小型的文件更显示出优势，这主要得利于其簇快取层的优良设计。至于Ext3文件系统，它属于一 种日志文件系统，是对ext2系统的扩展。日志式文件系统的优越性在于，它会将整个磁盘的写入动作完整记录在磁盘的某个区域上，以便有需要时可以回朔追 踪。由于详细纪录了每个细节，故当在某个过程中被中断时，系统可以根据这些记录直接回朔并重整被中断的部分，而不必花时间去检查其他的部分，故文件系统检 测不一致时，重整的工作速度相当快，几乎不需要花时间。 </p>
<p><br />reiserfs： ReiserFS是一个非常优秀的文件系统。也是最早用于Linux的日志文件系统之一，其机制比Ext3要先进得多，风雷小弟一直使用的就是它，很多发 行版现在也把它作为默认文件系统了。可惜其作者前段时间出事了&hellip;&hellip;具体情况就不说了，也不知道下一代reiserfs4还能不能出来，因为ext4都有 了。 </p>
<p><br />swap： Swap，即交换区，把它想象成虚拟内存就行了。 </p>
<p><br />vfat 和 ntfs：一看就知道是Windows分区格式了，呵呵。98，me等系统都是使用的vfat，也就是最流行的fat32格式，而NT系列则多使用 NTFS，当然也不是固定的，因此2000或者XP系统要具体情况具体分析。当初Linux对NTFS的写入支持不好，所以大多数资料都建议用户使用 vfat格式，但是现在支持已经很好了，即使不重新编译内核，也可以通过ntfs-3g来进行写入支持（具体方法请参考这篇文章），因此不用太在意这个 了。 </p>
<p><br />auto：当然，这不是一个文件系统类型。auto只是表示，文件系统的类型将被自动检测。在上面的示例中，你会发现软驱和光驱的文件系统类型都是 auto，为什么呢？因为它们的文件系统类型随时都可能改变，比如软驱，优盘这种设备，可能今天是vfat格式，明天你就把它格式化成了ntfs，因此， 最明智的做法就是告诉系统，我没法确定这东西的当前类型，还是你自己检测吧。 </p>
<p><br />udf： 由于刻录光驱越来越流行，现在很多发行版自带的fstab中，光驱的文件格式类型是UDF，UDF是Universal Disc Format的缩写，与ISO 9660格式相容。它采用标准的封装写入技术（PW，Packet Writing）将CD-R/CD-RW当作硬盘使用，用户可以在光盘上修改和删除文件。利用UDF格式进行刻录时，刻录软件将数据打包，并在内存中临时 建立一个特殊文件目录表，同时接管系统对光盘的访问。 </p>
<p><br />iso9660： 很多光驱也使用的这个选项。ISO9660是一种描述适合CD盘片的电脑文件结构的国际标准。采用此标准的盘片可以在不同的操作系统上使用，如MAC和Windows。 <br /><br /><strong>第四列：挂载选项</strong> <br />fstab中的第四列表示设备或者分区所需要的挂载选项。这一列也是fstab中最复杂最容易出错的一列，当然，只要你能知道一些最常用的选项是什么意 思，就可以让你从头疼中解脱出来。如果要把可用的选项一项一项介绍&hellip;&hellip;恩，我估计我会写到明天，所以，我还是只是分析最常用的一些选项，如果你想知道更多 的东西，还是求助于man吧。 </p>
<p><br />auto 和 noauto： 这是控制设备是否自动挂载的选项。auto是默认选择的选项，这样，设备会在启动或者你使用mount -a命令时按照fstab的内容自动挂载。如果你不希望这样，就使用noauto选项，如果这样的话，你就只能明确地通过手工来挂载设备。 </p>
<p><br />user 和 nouser：这是一个非常有用的选项，user选项允许普通用户也能挂载设备，而nouser则只允许root用户挂载。nouser是默认选项，这也 是让很多 Linux新手头疼的东西，因为他们发现没有办法正常挂载光驱，Windows分区等。如果你作为普通身份用户遇到类似问题，或者别的其他问题，就请把 user属性增加到fstab中。 </p>
<p><br />exec 和 noexec： exec允许你执行对应分区中的可执行二进制程序，同理，noexec的作用刚好相反。如果你拥有一个分区，分区上有一些可执行程序，而恰好你又不愿意， 或者不能在你的系统中执行他们，就可以使用noexec属性。这种情况多发生于挂载Windows分区时。exec是默认选项，理由很简单，如果 noexec变成了你/根分区的默认选项的话&hellip;&hellip; </p>
<p><br />ro： 以只读来挂载文件系统。 </p>
<p><br />rw： 以可读可写的属性来挂载系统。 </p>
<p><br />sync 和 async：对于该文件系统的输入输出应该以什么方式完成。sync的意思就是同步完成，通俗点讲，就是当你拷贝一个东西到设备或者分区中时，所有的写入 变化将在你输入cp命令后立即生效，这个东西应该立马就开始往设备或者分区里面拷贝了。而如果是async，也就是输入输出异步完成的话，当你拷贝一个东 西到设备或者分区中时，可能在你敲击cp命令后很久，实际的写入操作才会执行，换句话说，就是进行了缓冲处理。 <br />有时候这种机制蛮不错的，因为sync会影响你系统的运行速度，但是这也会带来一些问题。想一想，当你希望将一个文件拷贝到u盘上时，你执行了cp 命令，却忘记执行umount命令（它会强行将缓冲区内容写入），那么你拷贝的文件实际上并没有在u盘上面。如果你是使用的mv命令，而你又很快将u盘拔 出&hellip;&hellip;恭喜你，文件会从这个星球上消失的。因此，虽然async是默认属性，但是对于u盘，移动硬盘这种可移动存储设备，最好还是让他们使用sync选 项。 </p>
<p><br />defaults： 所有选项全部使用默认配置，包括rw, suid, dev, exec, auto, nouser, 和 async。 一般用户没有特殊需求，直接使用defaults就可以了。</p>
<p>&nbsp;</p>
<p>看完介绍，我们再回过头去看看前面的示例内容，以光驱为例，主要关注挂载选项这里，可以看到，光驱和其他分区设备的不同是ro，因为普通光驱是只读的。而exec则让你可以从光驱上直接执行某些程序。 <br /><br /><strong>第五、六列：dump和fsck选项</strong> <br />dump和fsck？这是什么东西？恩，dump是一个备份工具，而fsck是一个文件系统扫描检查工具。我不会在这里详细介绍它们，因为用man或者google都可以获得更加详细的信息。 <br />fstab的第五列是表示dump选项，dump工具通过这个选项位置上的数字来决定文件系统是否需要备份。如果是0，dump就会被忽略，事实上，大多 数的dump设置都是0。而第六列是fsck选项，fsck命令通过检测该字段来决定文件系统通过什么顺序来扫描检查，根文件系统/对应该字段的值应该为 1，其他文件系统应该为2。若文件系统无需在启动时扫描检查，则设置该字段为0。</p>]]></description></item><item><title>Ubuntu添加硬盘实验</title><link>http://www.cnblogs.com/eastson/archive/2012/06/13/2546853.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 13 Jun 2012 02:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/13/2546853.html</guid><description><![CDATA[<p>今天要做一个虚拟机添加硬盘的实验。</p>
<p>&nbsp;</p>
<p>实验简述：在现有Ubuntu 12.04虚拟机基础上添加一块8G的虚拟硬盘。该硬盘分成两个区：3G和5G，对应的挂载点为~/docs和~/photos，用来保存个人文档和家庭照片。</p>
<p>&nbsp;</p>
<p>本实验的目的是熟悉Linux下硬盘的分区，创建文件系统，挂载分区等一系列的操作。</p>
<p>&nbsp;</p>
<h3>实验过程</h3>
<p>1. 打开Ubuntu 12.04虚拟机，添加一个8G的虚拟硬盘。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061308553966.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 启动虚拟机，进入终端，查看系统当前的文件系统情况。当前系统应该可以看到有两块硬盘，第一块是sda，第一块是sdb。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">ls</span> /dev/sd*</pre>
</div>
<p>查询结果：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061309081592.png" alt="" /></p>
<p>从上面的查询结果我们可以找到sda和sdb这两块硬盘。但是，我们也发现了一个问题：为什么sda被分成了三个区，我记得明明只有一个主分区的？用<strong><em>f<em>d</em>isk /dev/sda</em></strong>显示分区表看看：</p>
<div class="cnblogs_code">
<pre>Disk /dev/sda: <span style="color: #800080;">21.5</span> GB, <span style="color: #800080;">21474836480</span><span style="color: #000000;"> bytes
</span><span style="color: #800080;">255</span> heads, <span style="color: #800080;">63</span> sectors/track, <span style="color: #800080;">2610</span> cylinders, total <span style="color: #800080;">41943040</span><span style="color: #000000;"> sectors
Units </span>= sectors of <span style="color: #800080;">1</span> * <span style="color: #800080;">512</span> = <span style="color: #800080;">512</span><span style="color: #000000;"> bytes
Sector size (logical</span>/physical): <span style="color: #800080;">512</span> bytes / <span style="color: #800080;">512</span><span style="color: #000000;"> bytes
I</span>/O size (minimum/optimal): <span style="color: #800080;">512</span> bytes / <span style="color: #800080;">512</span><span style="color: #000000;"> bytes
Disk identifier: </span><span style="color: #800080;">0x000afcb0</span><span style="color: #000000;">

   Device Boot      Start         End      Blocks   Id  System
</span>/dev/sda1   *        <span style="color: #800080;">2048</span>    <span style="color: #800080;">40894463</span>    <span style="color: #800080;">20446208</span>   <span style="color: #800080;">83</span><span style="color: #000000;">  Linux
</span>/dev/sda2        <span style="color: #800080;">40896510</span>    <span style="color: #800080;">41940991</span>      <span style="color: #800080;">522241</span>    <span style="color: #800080;">5</span><span style="color: #000000;">  Extended
</span>/dev/sda5        <span style="color: #800080;">40896512</span>    <span style="color: #800080;">41940991</span>      <span style="color: #800080;">522240</span>   <span style="color: #800080;">82</span>  Linux swap / Solaris</pre>
</div>
<p>原来多出来的是Ubuntu安装程序自动创建的扩展分区sda2和交换分区sda5。</p>
<p>我们用<strong><em>fdisk /dev/sdb</em></strong>看看新硬盘的分区情况：</p>
<div class="cnblogs_code">
<pre>Disk /dev/sdb: <span style="color: #800080;">8589</span> MB, <span style="color: #800080;">8589934592</span><span style="color: #000000;"> bytes
</span><span style="color: #800080;">255</span> heads, <span style="color: #800080;">63</span> sectors/track, <span style="color: #800080;">1044</span> cylinders, total <span style="color: #800080;">16777216</span><span style="color: #000000;"> sectors
Units </span>= sectors of <span style="color: #800080;">1</span> * <span style="color: #800080;">512</span> = <span style="color: #800080;">512</span><span style="color: #000000;"> bytes
Sector size (logical</span>/physical): <span style="color: #800080;">512</span> bytes / <span style="color: #800080;">512</span><span style="color: #000000;"> bytes
I</span>/O size (minimum/optimal): <span style="color: #800080;">512</span> bytes / <span style="color: #800080;">512</span><span style="color: #000000;"> bytes
Disk identifier: </span><span style="color: #800080;">0x25a3446b</span><span style="color: #000000;">

   Device Boot      Start         End      Blocks   Id  System</span></pre>
</div>
<p>分区表是空的，说明还没有分区存在。</p>
<p>&nbsp;</p>
<p>3. 用fdisk将sdb硬盘分成两个区：3G和5G。</p>
<div class="cnblogs_code">
<pre>Disk /dev/sdb: 8589 MB, 8589934592 bytes<br />86 heads, 1 sectors/track, 195083 cylinders, total 16777216 sectors<br />Units = sectors of 1 * 512 = 512 bytes<br />Sector size (logical/physical): 512 bytes / 512 bytes<br />I/O size (minimum/optimal): 512 bytes / 512 bytes<br />Disk identifier: 0x25a3446b<br /><br />&nbsp;&nbsp; Device Boot&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Start&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Blocks&nbsp;&nbsp; Id&nbsp; System<br />/dev/sdb1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2048&nbsp;&nbsp;&nbsp; 16777215&nbsp;&nbsp;&nbsp;&nbsp; 8387584&nbsp;&nbsp;&nbsp; 5&nbsp; Extended<br />/dev/sdb5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4096&nbsp;&nbsp;&nbsp;&nbsp; 6295551&nbsp;&nbsp;&nbsp;&nbsp; 3145728&nbsp;&nbsp; 83&nbsp; Linux<br />/dev/sdb6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 6297600&nbsp;&nbsp;&nbsp; 16777215&nbsp;&nbsp;&nbsp;&nbsp; 5239808&nbsp;&nbsp; 83&nbsp; Linux</pre>
</div>
<p>分区完毕，使用<em><strong>ls /dev/sdb*</strong></em>命令就可以在/dev目录下找到我们的新分区了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061309343996.png" alt="" /></p>
<p>&nbsp;</p>
<p>4. 使用<em><strong>mke2fs</strong></em>创建文件系统，这里两个分区都使用ext4文件系统。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> mke2fs -t ext4 /dev/<span style="color: #000000;">sdb5
</span><span style="color: #0000ff;">sudo</span> mke2fs -t ext4 /dev/sdb6</pre>
</div>
<p>&nbsp;</p>
<p>5. 挂载两个新分区到<em><strong>~/docs和~/photos目录</strong></em>，同时修改两个挂载点所有者，这样才有权限方便写入。</p>
<div class="cnblogs_code">
<pre>cd ~
<span style="color: #0000ff;">mkdir</span><span style="color: #000000;"> docs
</span><span style="color: #0000ff;">mkdir</span><span style="color: #000000;"> photos
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">mount</span> /dev/<span style="color: #000000;">sdb5 docs
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">mount</span> /dev/sdb6 photos<br />sudo chown -R amonest:amonest docs<br />sudo chown -R amonest:amonest photos</pre>
</div>
<p>&nbsp;</p>
<p>6. 最后，我们要想办法让这两个新分区在启动后可以自动挂载。使用mount命令只是在本次登陆挂载了分区，但电脑一重新启动，还需要再次挂载。<em><strong>/etc/fstab</strong></em>文件记录了电脑启动后需要自动挂载的分区信息，要实现自动挂载，只需要向<em><strong>/etc/fstab</strong></em>文件增加记录就可以。关于fstab的更详细信息请参考《<a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/archive/2012/06/13/2547399.html" target="_blank">/etc/fstab文件简要说明</a>》。</p>
<p>我们先用<em><strong>blkid</strong></em>命令查到新分区的UUID：</p>
<div class="cnblogs_code">
<pre>Shell$ <span style="color: #0000ff;">sudo</span><span style="color: #000000;"> blkid
</span>/dev/sda1: UUID=<span style="color: #800000;">"</span><span style="color: #800000;">4c298c2c-2b21-417e-b7ab-4ba4a64c3e1e</span><span style="color: #800000;">"</span> TYPE=<span style="color: #800000;">"</span><span style="color: #800000;">ext4</span><span style="color: #800000;">"</span> 
/dev/sda5: UUID=<span style="color: #800000;">"</span><span style="color: #800000;">ff694e58-0b7e-473e-9d02-c91404202b8d</span><span style="color: #800000;">"</span> TYPE=<span style="color: #800000;">"</span><span style="color: #800000;">swap</span><span style="color: #800000;">"</span> 
/dev/sdb5: UUID=<span style="color: #800000;">"</span><span style="color: #800000;">f23cd423-9a4d-4e4e-aa9d-4220f1383760</span><span style="color: #800000;">"</span> TYPE=<span style="color: #800000;">"</span><span style="color: #800000;">ext4</span><span style="color: #800000;">"</span> 
/dev/sdb6: UUID=<span style="color: #800000;">"</span><span style="color: #800000;">202ce7e5-8afd-4926-b3b6-c052770e8640</span><span style="color: #800000;">"</span> TYPE=<span style="color: #800000;">"</span><span style="color: #800000;">ext4</span><span style="color: #800000;">"</span> </pre>
</div>
<p>然后打开<em><strong>/etc/fstab</strong></em>文件，将下面的两行内容添加到最后：</p>
<div class="cnblogs_code">
<pre>UUID=f23cd423-9a4d-4e4e-aa9d-4220f1383760 /home/amonest/docs ext4 defaults <span style="color: #800080;">0</span> <span style="color: #800080;">0</span><span style="color: #000000;">
UUID</span>=202ce7e5-8afd-<span style="color: #800080;">4926</span>-b3b6-c052770e8640 /home/amonest/photos ext4 defaults <span style="color: #800080;">0</span> <span style="color: #800080;">0</span></pre>
</div>
<p>重启电脑，检查看两个新分区有没有被自动挂载。</p>
<p>&nbsp;</p>
<p>最后上一张在GParted下看到的新硬盘完整的分区情况：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061310515332.png" alt="" /></p>]]></description></item><item><title>rdesktop：Linux下远程连接Windows</title><link>http://www.cnblogs.com/eastson/archive/2012/06/13/2546917.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 13 Jun 2012 00:48:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/13/2546917.html</guid><description><![CDATA[<p><span>rdesktop是linux下支持Windows远程桌面连接的客户端程序，在linux系统下可通过它远程访问Windows桌面，支持多种版本。rdesktop是sourceforge下支持GPL协议的一个开源项目，采用RDP（Remote Desktop Protocol,远程桌面协议），几乎可以连接windows的所有版本，诸如NT 4 Terminal Server, 2000, XP, 2003, 2003 R2, Vista, 2008, 7, and 2008 R2等。目前，rdesktop可运行于所有的基于X Window平台的Unix系统中，当前稳定版本是1.7.1。</span></p>
<p><span>&nbsp;</span></p>
<h3>启用目标计算机的远程桌面</h3>
<p><strong>1、Windows XP上启用远程桌面</strong></p>
<p>在桌面上鼠标右键点击&ldquo;我的电脑&rdquo;图标，选择&ldquo;属性&rdquo;，在属性窗口中，点击&ldquo;远程&rdquo;选项卡，如下图：</p>
<p><img title="设置远程选项卡" src="http://www.metsky.com/upload/2010/07/201007081711014602.jpg" alt="" /></p>
<p>点击&ldquo;允许用户远程连接到此计算机&rdquo;，默认管理员具有此权限。远程桌面登录需要输入对应的账户和密码，如果你只打算让某个用户远程访问，可以在&ldquo;远程用户&rdquo;里添加。设置完成后点击确定即可。默认的端口是3389，设置后，Windows XP或Windows 2003都会默认为防火墙添加此规则，但是如果你手动修改了远程桌面端口，切忌一定要把防火墙中的端口号一定记得修改或单独添加许可规则，否则远程计算机连接可能都会被Windows 防火墙阻止。</p>
<p><strong>&nbsp;</strong></p>
<p><strong>2、Windows 7远程桌面功能开启</strong></p>
<p>本设置方法同样适用用Vista和Windows Server 2008，依次点击&ldquo;开始&rdquo;菜单-控制面板-系统和<a href="http://www.metsky.com/archives/309.html" target="_blank">安全</a>-系统，再点击左侧的远程设置，如下图：</p>
<p><img title="打开系统-远程设置" src="http://www.metsky.com/upload/2010/07/201007081714033545.jpg" alt="" /></p>
<p>要开启Windows 7远程桌面，有三个选项，第一个如果是不允许连接到本机，则选择&ldquo;不允许连接到这台计算机&rdquo;，这样可以阻止任何人使用远程桌面或 RemoteApp连接到您的计算机。后面两个选项，&ldquo;允许任意版本远程桌面计算机&rdquo;和&ldquo;仅运行使用网络级别身份验证的远程桌面的计算机&rdquo;，两者差别如下：</p>
<ul>
<li>&ldquo;允许运行任意版本远程桌面的计算机连接&rdquo;&mdash;&mdash;如果不确定将要连接过来的计算机操作系统，可以选择这一项。安全性较第三个选项低。</li>
<li>&ldquo;只允许运行带网络级身份验证的远程桌面的计算机连接&rdquo;&mdash;&mdash;允许使用运行带网络级身份验证的远程桌面或 RemoteApp 版本计算机的人连接到您的计算机。目前Vista、Windows 2008、Windows 7均支持网络级身份验证，Windows XP等可以通过修改注册表等方法支持，如需要请自行GOOGLE搜索。</li>
</ul>
<p>&nbsp;</p>
<p><strong>网络级别身份验证查看方法：</strong></p>
<p>鼠标点击远程桌面连接左上角的小图标，选中关于，如下窗口，有是否支持提示。</p>
<p><img title="如何查看网络级别身份验证" src="http://www.metsky.com/upload/2010/07/201007081703392847.jpg" alt="" /></p>
<p>&nbsp;</p>
<h3>Ubuntu中使用rdesktop远程连接</h3>
<p>打开Ubuntu的软件中心，搜索rdesktop，点击安装。</p>
<p>&nbsp;<img src="http://pic002.cnblogs.com/images/2012/111826/2012061308423175.png" alt="" /></p>
<p>&nbsp;开启终端，使用下面的命令启动目标机器的远程桌面：</p>
<div class="cnblogs_code">
<pre>rdesktop <span style="color: #800080;">192.168</span>.<span style="color: #800080;">1.101</span> #目标机器的IP地址</pre>
</div>
<p>稍等一会，出现目标机器的登录窗口：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061222013157.png" alt="" /></p>
<p>输入用户名和密码，点击&ldquo;确定&rdquo;按钮，这样就可以看到对方的桌面了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061222031917.png" alt="" /></p>]]></description></item><item><title>Ubuntu与磁盘有关的命令</title><link>http://www.cnblogs.com/eastson/archive/2012/06/12/2546834.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 12 Jun 2012 13:21:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/12/2546834.html</guid><description><![CDATA[<p>查询当前有哪些文件系统可用，使用df命令：</p>
<div class="cnblogs_code">
<pre><span>sudo</span> <span>df</span>&nbsp;</pre>
</div>
<p>&nbsp;返回的结果类似下面：</p>
<div class="cnblogs_code">
<pre>文件系统          1K-块    已用     可用 已用%<span style="color: #000000;"> 挂载点
</span>/dev/sda5      <span style="color: #800080;">19465264</span> <span style="color: #800080;">4360132</span> <span style="color: #800080;">14128648</span>   <span style="color: #800080;">24</span>% /<span style="color: #000000;">
udev            </span><span style="color: #800080;">1007588</span>      <span style="color: #800080;">12</span>  <span style="color: #800080;">1007576</span>    <span style="color: #800080;">1</span>% /<span style="color: #000000;">dev
tmpfs            </span><span style="color: #800080;">406552</span>     <span style="color: #800080;">900</span>   <span style="color: #800080;">405652</span>    <span style="color: #800080;">1</span>% /<span style="color: #000000;">run
none               </span><span style="color: #800080;">5120</span>       <span style="color: #800080;">0</span>     <span style="color: #800080;">5120</span>    <span style="color: #800080;">0</span>% /run/<span style="color: #000000;">lock
none            </span><span style="color: #800080;">1016372</span>     <span style="color: #800080;">548</span>  <span style="color: #800080;">1015824</span>    <span style="color: #800080;">1</span>% /run/<span style="color: #000000;">shm
</span>/dev/sda1        <span style="color: #800080;">192534</span>   <span style="color: #800080;">59009</span>   <span style="color: #800080;">123797</span>   <span style="color: #800080;">33</span>% /<span style="color: #000000;">boot
</span>/dev/sda7      <span style="color: #800080;">97502732</span> <span style="color: #800080;">5979672</span> <span style="color: #800080;">86640324</span>    <span style="color: #800080;">7</span>% /<span style="color: #000000;">home
</span>/dev/sda6      <span style="color: #800080;">29223512</span> <span style="color: #800080;">2279036</span> <span style="color: #800080;">25479696</span>    <span style="color: #800080;">9</span>% /usr/local</pre>
</div>
<p>&nbsp;</p>
<p>df命令的结果实际上就是/etc/mtab文件的内容。/etc/mtab文件记录的是成功挂载后所有文件系统的信息。</p>
<div class="cnblogs_code">
<pre>/dev/sda5 / ext4 rw,errors=remount-ro <span style="color: #800080;">0</span> <span style="color: #800080;">0</span><span style="color: #000000;">
proc </span>/proc proc rw,noexec,nosuid,nodev <span style="color: #800080;">0</span> <span style="color: #800080;">0</span><span style="color: #000000;">
sysfs </span>/sys sysfs rw,noexec,nosuid,nodev <span style="color: #800080;">0</span> <span style="color: #800080;">0</span><span style="color: #000000;">
none </span>/sys/fs/fuse/connections fusectl rw <span style="color: #800080;">0</span> <span style="color: #800080;">0</span><span style="color: #000000;">
none </span>/sys/kernel/debug debugfs rw <span style="color: #800080;">0</span> <span style="color: #800080;">0</span><span style="color: #000000;">
none </span>/sys/kernel/security securityfs rw <span style="color: #800080;">0</span> <span style="color: #800080;">0</span><span style="color: #000000;">
udev </span>/dev devtmpfs rw,mode=<span style="color: #800080;">0755</span> <span style="color: #800080;">0</span> <span style="color: #800080;">0</span><span style="color: #000000;">
devpts </span>/dev/pts devpts rw,noexec,nosuid,gid=<span style="color: #800080;">5</span>,mode=<span style="color: #800080;">0620</span> <span style="color: #800080;">0</span> <span style="color: #800080;">0</span><span style="color: #000000;">
tmpfs </span>/run tmpfs rw,noexec,nosuid,size=<span style="color: #800080;">10</span>%,mode=<span style="color: #800080;">0755</span> <span style="color: #800080;">0</span> <span style="color: #800080;">0</span><span style="color: #000000;">
none </span>/run/lock tmpfs rw,noexec,nosuid,nodev,size=<span style="color: #800080;">5242880</span> <span style="color: #800080;">0</span> <span style="color: #800080;">0</span><span style="color: #000000;">
none </span>/run/shm tmpfs rw,nosuid,nodev <span style="color: #800080;">0</span> <span style="color: #800080;">0</span>
/dev/sda1 /boot ext4 rw <span style="color: #800080;">0</span> <span style="color: #800080;">0</span>
/dev/sda7 /home ext4 rw <span style="color: #800080;">0</span> <span style="color: #800080;">0</span>
/dev/sda6 /usr/local ext4 rw <span style="color: #800080;">0</span> <span style="color: #800080;">0</span><span style="color: #000000;">
gvfs</span>-fuse-daemon /home/amonest/.gvfs fuse.gvfs-fuse-daemon rw,nosuid,nodev,user=amonest <span style="color: #800080;">0</span> <span style="color: #800080;">0</span></pre>
</div>
<p>&nbsp;</p>
<p>/etc目录下还有一个fstab文件，规定了哪些分区是开机后可以直接挂载的。</p>
<div class="cnblogs_code">
<pre># /etc/fstab: static <span style="color: #0000ff;">file</span><span style="color: #000000;"> system information.
#
# Use </span><span style="color: #800000;">'</span><span style="color: #800000;">blkid</span><span style="color: #800000;">'</span> to print the universally unique identifier <span style="color: #0000ff;">for</span><span style="color: #000000;"> a
# device; this may be used with UUID</span>= as a <span style="color: #0000ff;">more</span><span style="color: #000000;"> robust way to name devices
# that works even </span><span style="color: #0000ff;">if</span> disks are added and removed. See fstab(<span style="color: #800080;">5</span><span style="color: #000000;">).
#
# </span>&lt;<span style="color: #0000ff;">file</span> system&gt; &lt;<span style="color: #0000ff;">mount</span> point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;<span style="color: #000000;">
proc            </span>/proc           proc    nodev,noexec,nosuid <span style="color: #800080;">0</span>       <span style="color: #800080;">0</span><span style="color: #000000;">
# </span>/ was on /dev/<span style="color: #000000;">sda5 during installation
UUID</span>=3e2ffdd5-b780-<span style="color: #800080;">4705</span>-8b91-e22f429cd256 /               ext4    errors=remount-ro <span style="color: #800080;">0</span>       <span style="color: #800080;">1</span><span style="color: #000000;">
# </span>/boot was on /dev/<span style="color: #000000;">sda1 during installation
UUID</span>=5e879318-93cb-4ea7-842f-18ba7e7964cb /boot           ext4    defaults        <span style="color: #800080;">0</span>       <span style="color: #800080;">2</span><span style="color: #000000;">
# </span>/home was on /dev/<span style="color: #000000;">sda7 during installation
UUID</span>=d097dbe5-fdc6-475c-bad4-1a11200f7fec /home           ext4    defaults        <span style="color: #800080;">0</span>       <span style="color: #800080;">2</span><span style="color: #000000;">
# </span>/usr/local was on /dev/<span style="color: #000000;">sda6 during installation
UUID</span>=1d7fbe50-5cb6-<span style="color: #800080;">4584</span>-87da-024353d8af56 /usr/local      ext4    defaults        <span style="color: #800080;">0</span>       <span style="color: #800080;">2</span><span style="color: #000000;">
# swap was on </span>/dev/<span style="color: #000000;">sda8 during installation
UUID</span>=f540049d-<span style="color: #800080;">5049</span>-<span style="color: #800080;">4963</span>-a069-49e05060aed0 none            swap    sw              <span style="color: #800080;">0</span>       <span style="color: #800080;">0</span></pre>
</div>
<p>&nbsp;</p>
<p>从/etc/fstab可以看到，Ubuntu中，每个分区都有一个UUID与之对应。可以使用blkid查询每个分区的UUID。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> blkid</pre>
</div>
<p>返回的结果类似下面：</p>
<div class="cnblogs_code">
<pre>/dev/sda1: UUID=<span style="color: #800000;">"</span><span style="color: #800000;">5e879318-93cb-4ea7-842f-18ba7e7964cb</span><span style="color: #800000;">"</span> TYPE=<span style="color: #800000;">"</span><span style="color: #800000;">ext4</span><span style="color: #800000;">"</span> 
/dev/sda5: UUID=<span style="color: #800000;">"</span><span style="color: #800000;">3e2ffdd5-b780-4705-8b91-e22f429cd256</span><span style="color: #800000;">"</span> TYPE=<span style="color: #800000;">"</span><span style="color: #800000;">ext4</span><span style="color: #800000;">"</span> 
/dev/sda6: UUID=<span style="color: #800000;">"</span><span style="color: #800000;">1d7fbe50-5cb6-4584-87da-024353d8af56</span><span style="color: #800000;">"</span> TYPE=<span style="color: #800000;">"</span><span style="color: #800000;">ext4</span><span style="color: #800000;">"</span> 
/dev/sda7: UUID=<span style="color: #800000;">"</span><span style="color: #800000;">d097dbe5-fdc6-475c-bad4-1a11200f7fec</span><span style="color: #800000;">"</span> TYPE=<span style="color: #800000;">"</span><span style="color: #800000;">ext4</span><span style="color: #800000;">"</span> 
/dev/sda8: UUID=<span style="color: #800000;">"</span><span style="color: #800000;">f540049d-5049-4963-a069-49e05060aed0</span><span style="color: #800000;">"</span> TYPE=<span style="color: #800000;">"</span><span style="color: #800000;">swap</span><span style="color: #800000;">"</span> </pre>
</div>
<p>也可以通过直接查询/etc/blkid.tab文件得到：</p>
<div class="cnblogs_code">
<pre>&lt;device DEVNO=<span style="color: #800000;">"</span><span style="color: #800000;">0x0801</span><span style="color: #800000;">"</span> TIME=<span style="color: #800000;">"</span><span style="color: #800000;">1339507071.210539</span><span style="color: #800000;">"</span> UUID=<span style="color: #800000;">"</span><span style="color: #800000;">5e879318-93cb-4ea7-842f-18ba7e7964cb</span><span style="color: #800000;">"</span> TYPE=<span style="color: #800000;">"</span><span style="color: #800000;">ext4</span><span style="color: #800000;">"</span>&gt;/dev/sda1&lt;/device&gt;
&lt;device DEVNO=<span style="color: #800000;">"</span><span style="color: #800000;">0x0805</span><span style="color: #800000;">"</span> TIME=<span style="color: #800000;">"</span><span style="color: #800000;">1339507071.210708</span><span style="color: #800000;">"</span> UUID=<span style="color: #800000;">"</span><span style="color: #800000;">3e2ffdd5-b780-4705-8b91-e22f429cd256</span><span style="color: #800000;">"</span> TYPE=<span style="color: #800000;">"</span><span style="color: #800000;">ext4</span><span style="color: #800000;">"</span>&gt;/dev/sda5&lt;/device&gt;
&lt;device DEVNO=<span style="color: #800000;">"</span><span style="color: #800000;">0x0806</span><span style="color: #800000;">"</span> TIME=<span style="color: #800000;">"</span><span style="color: #800000;">1339507071.210828</span><span style="color: #800000;">"</span> UUID=<span style="color: #800000;">"</span><span style="color: #800000;">1d7fbe50-5cb6-4584-87da-024353d8af56</span><span style="color: #800000;">"</span> TYPE=<span style="color: #800000;">"</span><span style="color: #800000;">ext4</span><span style="color: #800000;">"</span>&gt;/dev/sda6&lt;/device&gt;
&lt;device DEVNO=<span style="color: #800000;">"</span><span style="color: #800000;">0x0807</span><span style="color: #800000;">"</span> TIME=<span style="color: #800000;">"</span><span style="color: #800000;">1339507071.210943</span><span style="color: #800000;">"</span> UUID=<span style="color: #800000;">"</span><span style="color: #800000;">d097dbe5-fdc6-475c-bad4-1a11200f7fec</span><span style="color: #800000;">"</span> TYPE=<span style="color: #800000;">"</span><span style="color: #800000;">ext4</span><span style="color: #800000;">"</span>&gt;/dev/sda7&lt;/device&gt;
&lt;device DEVNO=<span style="color: #800000;">"</span><span style="color: #800000;">0x0808</span><span style="color: #800000;">"</span> TIME=<span style="color: #800000;">"</span><span style="color: #800000;">1339507071.211068</span><span style="color: #800000;">"</span> UUID=<span style="color: #800000;">"</span><span style="color: #800000;">f540049d-5049-4963-a069-49e05060aed0</span><span style="color: #800000;">"</span> TYPE=<span style="color: #800000;">"</span><span style="color: #800000;">swap</span><span style="color: #800000;">"</span>&gt;/dev/sda8&lt;/device&gt;</pre>
</div>
<p>&nbsp;</p>
<p>查询某个目录的空间使用情况，可以使用du命令：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">du</span> -h --max-depth=<span style="color: #800080;">1</span> /usr/local | <span style="color: #0000ff;">sort</span> -h</pre>
</div>
<p>返回的结果类似下面：</p>
<div class="cnblogs_code">
<pre><span style="color: #800080;">4</span>.0K    /usr/local/<span style="color: #000000;">bin
</span><span style="color: #800080;">4</span>.0K    /usr/local/<span style="color: #000000;">etc
</span><span style="color: #800080;">4</span>.0K    /usr/local/<span style="color: #000000;">games
</span><span style="color: #800080;">4</span>.0K    /usr/local/<span style="color: #000000;">include
</span><span style="color: #800080;">4</span>.0K    /usr/local/<span style="color: #000000;">sbin
16K    </span>/usr/local/<span style="color: #000000;">lib
16K    </span>/usr/local/lost+<span style="color: #000000;">found
60K    </span>/usr/local/<span style="color: #000000;">share
410M    </span>/usr/local/<span style="color: #000000;">src
</span><span style="color: #800080;">1</span>.3G    /usr/local/<span style="color: #000000;">development
</span><span style="color: #800080;">1</span>.7G    /usr/local</pre>
</div>]]></description></item><item><title>PEAR简要使用说明</title><link>http://www.cnblogs.com/eastson/archive/2012/06/12/2546448.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 12 Jun 2012 07:53:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/12/2546448.html</guid><description><![CDATA[<p><a href="http://pear.php.net/packages.php">http://pear.php.net/packages.php</a>有大量的包可以用。</p>
<p>&nbsp;</p>
<p>pear list 已经安装的包</p>
<p>&nbsp;</p>
<p>pear list-all 找到有那些包可以用</p>
<p>&nbsp;</p>
<p>pear search Command 搜索摸个包</p>
<p>&nbsp;</p>
<p>pear instll pear/Console_CommandLine 安装某个包</p>
<p>&nbsp;</p>
<p>pear uninstll pear/Console_CommandLine 删除某个包</p>
<p>&nbsp;</p>
<p>pear list-upgrades 查看那些包需要更新</p>
<p>&nbsp;</p>
<p>pear upgrade pear/Console_Getopt 更新某包</p>]]></description></item><item><title>Ubuntu 12.04 下安装PEAR</title><link>http://www.cnblogs.com/eastson/archive/2012/06/12/2546390.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 12 Jun 2012 07:17:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/12/2546390.html</guid><description><![CDATA[<p>sudo apt-get install php5-cli</p>
<p>&nbsp;</p>
<p><a href="http://pear.php.net/go-pear">http://pear.php.net/go-pear</a>.phar 下载到任意的目录</p>
<p>sudo&nbsp;php -q go-pear.phar</p>
<p>&nbsp;</p>
<p>cd /usr/local/bin</p>
<p>sudo ln -s /home/amonest/pear/bin/pear</p>
<p>sudo ln -s /home/amonest/pear/bin/pecl</p>
<p>&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061215152987.png" alt="" /></p>
<p>&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061215153734.png" alt="" /></p>
<p>&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061215154535.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span>Installing PEAR environment: /usr/local/lib/php/</span><br /><span>[PEAR] Archive_Tar - installed: 1.3.7</span><br /><span>[PEAR] Console_Getopt - installed: 1.3.0</span><br /><span>[PEAR] Structures_Graph- installed: 1.0.4</span><br /><span>[PEAR] XML_Util - installed: 1.2.1</span><br /><span>[PEAR] PEAR - installed: 1.9.4</span><br /><span>Wrote PEAR system config file at: /usr/local/etc/pear.conf</span><br /><span>You may want to add: /usr/local/lib/php to your php.ini include_path</span><br /><span>/usr/local/src/php-5.4.3/build/shtool install -c ext/phar/phar.phar /usr/local/bin</span><br /><span>ln -s -f /usr/local/bin/phar.phar /usr/local/bin/phar</span></p>]]></description></item><item><title>使用Web服务器下载文件</title><link>http://www.cnblogs.com/eastson/archive/2012/06/12/2546304.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 12 Jun 2012 06:22:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/12/2546304.html</guid><description><![CDATA[<p>有没有想过使用Web服务器来帮助我们下载文件？</p>
<p>&nbsp;</p>
<p>假设这样一个例子：我们有一台托管的Web服务器，使用Discuz作为论坛程序。现在要对Discuz程序做升级，该怎样处理呢？</p>
<p>&nbsp;</p>
<p>传统的方法是在我们的个人电脑上打开Discuz网站，下载Discuz的最新压缩包，然后再将压缩包上传到托管的Web服务器，使用Web服务器提供的在线压缩工具将压缩包解压缩到指定目录实现程序升级。</p>
<p>&nbsp;</p>
<p>我们使用的ADSL下载速度还可以，但要是上传就是非常的慢。有没有方法可以避免这种下载后又再上传的操作，转而让Web服务器直接去下载呢？</p>
<p>&nbsp;</p>
<p>今天在CU论坛上得到了别人的启发。</p>
<p>&nbsp;</p>
<p>基本思路：上传一段脚本到Web服务器，这段脚本的目的就是打开一个远端文件的连接，下载远端文件到本地。这里的本地是指Web服务器的本地。然后在浏览器中请求执行该段脚本，也就是开始执行下载。这样就实现了Web服务器的直接下载。</p>
<p>&nbsp;</p>
<p>这个功能实际上早有人帮我们做好了，请参看文章：<a href="http://www.bacysoft.cn/home-space-uid-2-do-blog-id-97.html" target="_blank">PHP远程文件下载工具</a></p>
<p>&nbsp;</p>
<p>工具里面的代码（httpget.php）是这样的：</p>
<div class="cnblogs_code">
<pre>&lt;!DOCTYPE html <span style="color: #0000ff;">PUBLIC</span> "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" lang="zh-cn"&gt;
&lt;head&gt;
&lt;title&gt;PHP远程文件下载工具 Ver 1.00 Bete Bacysoft.cn 开发&lt;/title&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=gbk" /&gt;
&lt;meta http-equiv="Content-Language" content="gbk" /&gt;
&lt;meta name="author" content="Bacysoft.cn" /&gt;
&lt;meta name="keywords" content="PHP 远程 文件下载" /&gt;
&lt;meta name="description" content="本工具有PHP编程实现，可以实现远程服务器通过http url下载指定文件到当前服务器。本工具由Bacysoft.cn开发。更多信息请访问：http://www.Bacysoft.cn" /&gt;
&lt;/head&gt;
&lt;?<span style="color: #000000;">php
</span><span style="color: #008080;">set_time_limit</span> (24 * 60 * 60<span style="color: #000000;">); 
</span><span style="color: #800080;">$act</span> = <span style="color: #800080;">$_POST</span>['act'<span style="color: #000000;">];
</span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$act</span> == "getfile"<span style="color: #000000;">){

    </span><span style="color: #800080;">$tt</span> = <span style="color: #008080;">time</span><span style="color: #000000;">();

    </span><span style="color: #800080;">$url</span> = <span style="color: #800080;">$_POST</span>['url'<span style="color: #000000;">];
    </span><span style="color: #800080;">$newfname</span> = <span style="color: #008080;">basename</span>(<span style="color: #800080;">$url</span><span style="color: #000000;">);

    </span><span style="color: #800080;">$file</span> = <span style="color: #008080;">fopen</span> (<span style="color: #800080;">$url</span>, "rb"<span style="color: #000000;">);

    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$file</span><span style="color: #000000;">){
        </span><span style="color: #800080;">$newf</span> = <span style="color: #008080;">fopen</span> (<span style="color: #800080;">$newfname</span>, "wb"<span style="color: #000000;">);
        </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$newf</span><span style="color: #000000;">)
            </span><span style="color: #0000ff;">while</span>(!<span style="color: #008080;">feof</span>(<span style="color: #800080;">$file</span><span style="color: #000000;">)) {
                </span><span style="color: #008080;">fwrite</span>(<span style="color: #800080;">$newf</span>, <span style="color: #008080;">fread</span>(<span style="color: #800080;">$file</span>, 1024 * 8 ), 1024 * 8<span style="color: #000000;"> );
            }
    } 
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$file</span>) <span style="color: #008080;">fclose</span>(<span style="color: #800080;">$file</span><span style="color: #000000;">);
    </span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$newf</span>)     <span style="color: #008080;">fclose</span>(<span style="color: #800080;">$newf</span><span style="color: #000000;">);

    </span><span style="color: #800080;">$tt</span> = <span style="color: #008080;">time</span>()-<span style="color: #800080;">$tt</span><span style="color: #000000;">;

    </span><span style="color: #0000ff;">echo</span> "文件 ".<span style="color: #800080;">$newfname</span>." 下载完毕！共计:".<span style="color: #008080;">filesize</span>(<span style="color: #800080;">$newfname</span>)." 字节。&lt;br/&gt;"<span style="color: #000000;">;
    </span><span style="color: #0000ff;">echo</span> "一共耗时 <span style="color: #800080;">$tt</span> 秒，平均下载速度为:".<span style="color: #008080;">filesize</span>(<span style="color: #800080;">$newfname</span>)/1024/<span style="color: #800080;">$tt</span>." KB/s"<span style="color: #000000;">;
    </span><span style="color: #0000ff;">exit</span><span style="color: #000000;">;
}

</span><span style="color: #800080;">$pass</span> = <span style="color: #800080;">$_REQUEST</span>['password'<span style="color: #000000;">];

</span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$pass</span> == "http://www.Bacysoft.cn"<span style="color: #000000;">){
    </span><span style="color: #800080;">$_SESSION</span>['login'] = <span style="color: #0000ff;">true</span><span style="color: #000000;">;
}
</span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$pass</span> == "logout"<span style="color: #000000;">){
    </span><span style="color: #800080;">$_SESSION</span>['login'] = <span style="color: #0000ff;">false</span><span style="color: #000000;">;
}

</span><span style="color: #0000ff;">if</span> (<span style="color: #800080;">$_SESSION</span>['login'] == <span style="color: #0000ff;">true</span><span style="color: #000000;">){
</span>?&gt;
&lt;body&gt;
    &lt;form method="post" target="insideframe"&gt;<span style="color: #000000;">
        Http Url</span>:&lt;input name="url" size="50" /&gt;
        &lt;input name="act" value="getfile" type="hidden" /&gt;
        &lt;input name="submit" type="submit" /&gt;
        &lt;a href="httpget.php?password=logout" &gt;退出&lt;/a&gt;
    &lt;/form&gt;
    &lt;iframe name="insideframe" width="100%" height="100" &gt;&lt;/iframe&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;?<span style="color: #000000;">php
}</span><span style="color: #0000ff;">else</span><span style="color: #000000;">{
</span>?&gt;
&lt;body&gt;
    &lt;form method="post"&gt;<span style="color: #000000;">
        Password</span>:&lt;input name="password" type="password" /&gt;
        &lt;input type="submit" /&gt;
    &lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;?<span style="color: #000000;">php
}
</span>?&gt;</pre>
</div>
<p>&nbsp;</p>
<p>httpget.php使用方法：</p>
<p>1、将httpget.php上传到Web服务器一个浏览器可以访问的目录。</p>
<p>2、打开浏览器，输入httpget.php对应的网址，在密码框中输入密码，原始密码为http://www.Bacysoft.cn。</p>
<p>3、在URL文本框中输入你想下载到服务器的文件的URL地址。比如，Discuz X2 中文简体GBK压缩包的地址：</p>
<div class="cnblogs_code">
<pre>http:<span style="color: #008000;">//</span><span style="color: #008000;">download.comsenz.com/DiscuzX/2.0/Discuz_X2_SC_GBK.zip</span></pre>
</div>
<p>5、下载完成后，会在信息框中输出相关提示信息。例如：</p>
<div class="cnblogs_code">
<pre>文件 Discuz_X2_SC_GBK.zip 下载完毕！共计:8436348<span style="color: #000000;"> 字节。
一共耗时 </span>116 秒，平均下载速度为:71.02259 KB/s</pre>
</div>
<p>&nbsp;</p>
<p>如果是Web服务器是Linux操作系统，我想在PHP脚本里简单调用wget应该也是可以的，不过没试过：</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">&lt;?php<br />system</span>("wget '<span style="color: #800080;">$url</span>' -o <span style="color: #800080;">$myfile</span>");<br />?&gt;</pre>
</div>]]></description></item><item><title>使用cd命令的几个小技巧</title><link>http://www.cnblogs.com/eastson/archive/2012/06/12/2546257.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 12 Jun 2012 05:57:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/12/2546257.html</guid><description><![CDATA[<p>这里介绍几个使用cd命令的几个小技巧。</p>
<p>&nbsp;</p>
<h3>快速切换到HOME目录</h3>
<p>Linux环境下，~表示当前用户的HOME目录，如果要快速切换到自己的HOME目录，可以用命令：</p>
<div class="cnblogs_code">
<pre>cd ~</pre>
</div>
<p>或者直接用cd也可以。</p>
<div class="cnblogs_code">
<pre>cd</pre>
</div>
<p>&nbsp;</p>
<h3>快速切换到某个用户的HOME目录</h3>
<p>如何切换到某一个用户的HOME目录呢？例如，我们要切换到root用户的HOME目录，可以用命令：</p>
<div class="cnblogs_code">
<pre>cd ~root</pre>
</div>
<p>&nbsp;</p>
<h3>切换到上一次使用的当前目录</h3>
<p>假设我们现在需要在/usr/local/src目录下做很多的事情，这个过程中需要临时地切换到HOME目录：</p>
<div class="cnblogs_code">
<pre>cd ~<span style="color: #000000;">

...... # 在HOME目录下做的一些处理<br /><br /></span></pre>
</div>
<p>HOME目录下的事情我们做完了，现在要回到/usr/local/src目录，怎么回去呢？</p>
<p>方法一：传统的方式：</p>
<div class="cnblogs_code">
<pre>cd /usr/local/src</pre>
</div>
<p>方法二：这就是我们想说的新方式，使用-（短横线）可以快速地帮助我们返回到上一次使用的当前目录。</p>
<div class="cnblogs_code">
<pre>cd -</pre>
</div>]]></description></item><item><title>MySQL启动时必需/usr/local/mysql目录的问题解决方法</title><link>http://www.cnblogs.com/eastson/archive/2012/06/11/2545531.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 11 Jun 2012 13:03:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/11/2545531.html</guid><description><![CDATA[<p>在文章《<em><strong><a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/archive/2012/06/09/2543489.html" target="_blank">Ubuntu 12.04 下安装MySQL 5.5.25</a></strong></em>》中，介绍了我安装MySQL的整个过程。由于我的MySQL不是安装在标准的<em><strong>/usr/local/mysql</strong></em>目录，而是安装在<em><strong>/usr/local/development/mysql-5.5.25</strong></em>目录，导致在启动MySQL服务时报告找不到<em><strong>/usr/local/mysql</strong></em>目录的错误。最后我就创建了符号链<em><strong>/usr/local/mysql</strong></em>链接到<em><strong>/usr/local/development/mysql-5.5.25</strong></em>，解决了服务启动不了的问题。</p>
<p>&nbsp;</p>
<p>为什么会出现此问题呢？我们可以打开<em><strong>mysql.server</strong></em>脚本文件，里面有这样的代码：</p>
<div class="cnblogs_code">
<pre># If you <span style="color: #0000ff;">install</span> MySQL on some other places than /usr/local/mysql, <span style="color: #0000ff;">then</span><span style="color: #000000;"> you
# have to </span><span style="color: #0000ff;">do</span> one of the following things <span style="color: #0000ff;">for</span><span style="color: #000000;"> this script to work:
#
# </span>-<span style="color: #000000;"> Run this script from within the MySQL installation directory
# </span>- Create a /etc/my.cnf <span style="color: #0000ff;">file</span><span style="color: #000000;"> with the following information:
#   [mysqld]
#   basedir</span>=&lt;path-to-mysql-installation-directory&gt;<span style="color: #000000;">
# </span>- Add the above to any other configuration <span style="color: #0000ff;">file</span> (<span style="color: #0000ff;">for</span> example ~/<span style="color: #000000;">.my.ini)
#   and copy my_print_defaults to </span>/usr/<span style="color: #000000;">bin
# </span>- Add the path to the mysql-installation-<span style="color: #000000;">directory to the basedir variable
#   below.
#
# If you want to affect other MySQL variables, you should </span><span style="color: #0000ff;">make</span><span style="color: #000000;"> your changes
# </span><span style="color: #0000ff;">in</span> the /etc/my.cnf, ~/<span style="color: #000000;">.my.cnf or other MySQL configuration files.

# If you change base </span><span style="color: #0000ff;">dir</span><span style="color: #000000;">, you must also change datadir. These may get
# overwritten by settings </span><span style="color: #0000ff;">in</span><span style="color: #000000;"> the MySQL configuration files.

basedir</span>=<span style="color: #000000;">
datadir</span>=<span style="color: #000000;">

# The following variables are only set </span><span style="color: #0000ff;">for</span> letting mysql.server <span style="color: #0000ff;">find</span><span style="color: #000000;"> things.

# Set some defaults
mysqld_pid_file_path</span>=
<span style="color: #0000ff;">if</span> test -z <span style="color: #800000;">"</span><span style="color: #800000;">$basedir</span><span style="color: #800000;">"</span>
<span style="color: #0000ff;">then</span><span style="color: #000000;">
  basedir</span>=/usr/local/<span style="color: #000000;">mysql
  bindir</span>=/usr/local/mysql/<span style="color: #000000;">bin
  </span><span style="color: #0000ff;">if</span> test -z <span style="color: #800000;">"</span><span style="color: #800000;">$datadir</span><span style="color: #800000;">"</span>
  <span style="color: #0000ff;">then</span><span style="color: #000000;">
    datadir</span>=/usr/local/mysql/<span style="color: #000000;">data
  </span><span style="color: #0000ff;">fi</span><span style="color: #000000;">
  sbindir</span>=/usr/local/mysql/<span style="color: #000000;">bin
  libexecdir</span>=/usr/local/mysql/<span style="color: #000000;">bin
</span><span style="color: #0000ff;">else</span><span style="color: #000000;">
  bindir</span>=<span style="color: #800000;">"</span><span style="color: #800000;">$basedir/bin</span><span style="color: #800000;">"</span>
  <span style="color: #0000ff;">if</span> test -z <span style="color: #800000;">"</span><span style="color: #800000;">$datadir</span><span style="color: #800000;">"</span>
  <span style="color: #0000ff;">then</span><span style="color: #000000;">
    datadir</span>=<span style="color: #800000;">"</span><span style="color: #800000;">$basedir/data</span><span style="color: #800000;">"</span>
  <span style="color: #0000ff;">fi</span><span style="color: #000000;">
  sbindir</span>=<span style="color: #800000;">"</span><span style="color: #800000;">$basedir/sbin</span><span style="color: #800000;">"</span><span style="color: #000000;">
  libexecdir</span>=<span style="color: #800000;">"</span><span style="color: #800000;">$basedir/libexec</span><span style="color: #800000;">"</span>
<span style="color: #0000ff;">fi</span></pre>
</div>
<p>&nbsp;</p>
<p>也就是说，<em><strong>/usr/local/mysql</strong></em>目录是它的默认安装目录。要解决此问题，需要有两个步骤。</p>
<p>&nbsp;</p>
<p>步骤一：创建<em><strong>/etc/my.cnf</strong></em>文件，里面包含<em><strong>basedir</strong></em>目录设定。</p>
<div class="cnblogs_code">
<pre>cd /usr/local/development/mysql-<span style="color: #800080;">5.5</span>.<span style="color: #800080;">25</span>/support-<span style="color: #000000;">files
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">cp</span> my-<span style="color: #000000;">medium.cnf my.cnf
cd </span>/<span style="color: #000000;">etc
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">ln</span> -s /usr/local/development/mysql-<span style="color: #800080;">5.5</span>.<span style="color: #800080;">25</span>/support-files/my.cnf</pre>
</div>
<p>然后将<em><strong>basedir=/usr/local/development/mysql-5.5.25</strong></em>这一条指令放到<em><strong>my.cnf</strong></em>文件的<em><strong>mysqld</strong></em>段。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;"># The MySQL server
</span><span style="color: #800000; font-weight: bold;">[</span><span style="color: #800000;">mysqld</span><span style="color: #800000; font-weight: bold;">]</span><span style="color: #000000;">

......

basedir</span>=/usr/local/development/mysql-5.5.25</pre>
</div>
<p>&nbsp;</p>
<p>步骤二：将mysql目录下的<em><strong>bin/my_print_defaults</strong></em>链接到<em><strong>/usr/bin</strong></em>目录下。</p>
<div class="cnblogs_code">
<pre>cd /usr/<span style="color: #000000;">bin
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">ln</span> -s /usr/local/development/mysql-<span style="color: #800080;">5.5</span>.<span style="color: #800080;">25</span>/bin/my_print_defaults</pre>
</div>
<p>为什么需要<em><strong>my_print_defaults</strong></em>呢？这是因为<em><strong>mysql.server</strong></em>执行时就是通过<em><strong>my_print_defaults</strong></em>来读取<em><strong>my.cnf</strong></em>配置变量的。</p>
<p>&nbsp;</p>
<p>完成上面两个步骤后，删除<em><strong>/usr/local/mysql</strong></em>，也应该是可以正常启动和停止<em><strong>mysql</strong></em>服务的。</p>]]></description></item><item><title>兔窝的故事【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/06/11/2545160.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 11 Jun 2012 07:42:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/11/2545160.html</guid><description><![CDATA[<p>兔子月薪5千，打算用20万建一个窝。<br />狼不允许，说私自建就是违章建筑，只允许向王八买。<br />王八是搞房地产的，先用20万贿赂狼取得开发权，再用50万元向狼买这块地，投资10万元把兔子窝盖好，向兔子要价200万元。<br />兔子拿不出这么多钱于是向狐狸借200万元，连本带利300万，20年还清，<br />兔子全家二十年给狐狸打工。<br />狼、狐狸、王八都挣了钱，只有兔子亏，连孩子也不敢生了。<br />兔子越来越少，狼觉得这样下去大家没肉吃，于是调控。<br />狼显得非常重视兔窝价格太贵的问题，研究部署了遏制兔窝价格过快上涨的政策措施。最后认定兔窝价格卖得太高的原因是因为有的兔子买了兔窝后自己不住而进行倒卖所致。<br />于是狼规定：兔子买了兔窝5年内卖了的，要向狼交纳营业税。<br />结果兔窝价格没降下来，狼却发了大财。<br />狼又对狐狸说：只借钱给首先交了更多钱的兔子，并提高高利贷的利息，多买兔子窝的不借，全交现钱。<br />这样狐狸在兔子的购窝过程中也发了财。<br />王八借着兔窝价格上涨的行情，以更高的价格向狼买地，并转嫁到兔窝价格上，再加价后卖给兔子。<br />看到狼辛苦地为自己操劳，兔子很感谢狼，但还是发现兔窝价格越来越贵。<br />狼说：这事挺复杂，还真不太好办，不过兔子们放心，我们将继续调控，可以向已经有兔窝的兔子征收兔窝税┉</p>]]></description></item><item><title>Linux系统的启动引导过程【转】</title><link>http://www.cnblogs.com/eastson/archive/2012/06/11/2544707.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 11 Jun 2012 03:06:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/11/2544707.html</guid><description><![CDATA[<p><em><strong>启动第一步－－加载BIOS</strong></em><br />打开计算机电源，计算机会首先加载BIOS信息， BIOS中包含了CPU的相关信息、设备启动顺序信息、硬盘信息、内存信息、时钟信息等等。</p>
<p>&nbsp;</p>
<p><em><strong>启动第二步－－读取MBR</strong></em><br />硬盘上第0磁道第一个扇区被称为MBR，也就是Master Boot Record，即主引导记录，它的大小是512字节，存放了预启动信息、分区表信息。<br />系统找到BIOS所指定的硬盘的MBR后，就会将其复制到0&times;7c00地址所在的物理内存中。其实被复制到物理内存的内容就是Boot Loader，而具体到你的电脑，那就是lilo或者grub了。</p>
<p>&nbsp;</p>
<p><em><strong>启动第三步－－Boot Loader</strong></em><br />Boot Loader 就是在操作系统内核运行之前运行的一段小程序。通过这段小程序，我们可以初始化硬件设备、建立内存空间的映射图，从而将系统的软硬件环境带到一个合适的状态，以便为最终调用操作系统内核做好一切准备。Boot Loader有若干种，其中Grub、Lilo是常见的Loader。系统读取内存中的grub配置信息（一般为menu.lst或grub.lst），并依照此配置信息来启动不同的操作系统。</p>
<p>&nbsp;</p>
<p><em><strong>启动第四步－－加载内核</strong></em><br />根据grub设定的内核映像所在路径，系统读取内存映像，并进行解压缩操作。此时，屏幕一般会输出&ldquo;Uncompressing Linux&rdquo;的提示。当解压缩内核完成后，屏幕输出&ldquo;OK, booting the kernel&rdquo;。<br />系统将解压后的内核放置在内存之中，并调用start_kernel()函数来启动一系列的初始化函数并初始化各种设备，完成Linux核心环境的建立。至此，Linux内核已经建立起来，基于Linux的程序应该可以正常运行。</p>
<p>&nbsp;</p>
<p><em><strong>启动第五步－－用户层init依据inittab文件来设定运行等级</strong></em><br />内核被加载后，第一个运行的程序便是/sbin/init，该文件会读取/etc/inittab文件，并依据此文件来进行初始化工作。<br />/etc/inittab文件最主要的作用就是设定Linux的运行等级，其设定形式是&ldquo;：id:5:initdefault:&rdquo;，这就表明Linux需要运行在等级5上。Linux的运行等级设定如下：</p>
<ul>
<li>0：关机</li>
<li>1：单用户模式</li>
<li>2：无网络支持的多用户模式</li>
<li>3：有网络支持的多用户模式</li>
<li>4：保留，未使用</li>
<li>5：有网络支持有X-Window支持的多用户模式</li>
<li>6：重新引导系统，即重启</li>



</ul>
<p><em><strong>&nbsp;</strong></em></p>
<p><em><strong>启动第六步－－init进程执行rc.sysinit</strong></em><br />在设定了运行等级后，Linux系统执行的第一个用户层文件就是/etc/rc.d/rc.sysinit脚本程序，它设定PATH、设定网络配置（/etc/sysconfig/network）、启动swap分区、设定/proc等等。</p>
<p>&nbsp;</p>
<p><em><strong>启动第七步－－启动内核模块</strong></em><br />具体是依据/etc/modules.conf文件或/etc/modules.d目录下的文件来装载内核模块。</p>
<p>&nbsp;</p>
<p><em><strong>启动第八步－－执行不同运行级别的脚本程序</strong></em><br />根据运行级别的不同，系统会运行rc0.d到rc6.d中的相应的脚本程序，来完成相应的初始化工作和启动相应的服务。</p>
<p>&nbsp;</p>
<p><em><strong>启动第九步－－执行/etc/rc.d/rc.local</strong></em><br />你如果打开了此文件，里面有一句话，读过之后，你就会对此命令的作用一目了然：</p>
<div class="cnblogs_code">
<pre># This script will be executed *after*<span style="color: #000000;"> all the other init scripts.
# You can put your own initialization stuff </span><span style="color: #0000ff;">in</span> here <span style="color: #0000ff;">if</span><span style="color: #000000;"> you don&rsquo;t
# want to </span><span style="color: #0000ff;">do</span> the full Sys V style init stuff.</pre>
</div>
<p>rc.local就是在一切初始化工作后，Linux留给用户进行个性化的地方。你可以把你想设置和启动的东西放到这里。</p>
<p>&nbsp;</p>
<p><em><strong>启动第十步－－执行/bin/login程序，进入登录状态</strong></em><br />此时，系统已经进入等待用户输入username和password状态，用户可以用自己的帐号登入系统&nbsp;\</p>
<p>&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061111050069.jpg" alt="" /></p>]]></description></item><item><title>Ubuntu 12.04 下安装 PHP 5.4.3</title><link>http://www.cnblogs.com/eastson/archive/2012/06/10/2544178.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 10 Jun 2012 10:56:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/10/2544178.html</guid><description><![CDATA[<p>依照《<a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/archive/2012/06/10/2543707.html" target="_blank">Ubuntu 12.04 下安装Apache 2.4.2</a>》方法安装好Apache后，我们现在来集成PHP。</p>
<p>&nbsp;</p>
<p><em><strong>Ubuntu版本：12.04 LTS</strong></em></p>
<p><em><strong>PHP版本：PHP 5.4.2</strong></em></p>
<p><em><strong>安装目录：/usr/local/development/php-5.4.2</strong></em></p>
<p><strong><em>源码目录：/usr/local/src/<em><strong>php-5.4.2</strong></em></em></strong></p>
<p><strong><em>&nbsp;</em></strong></p>
<h3><strong><em>安装PHP 5.4.3</em></strong></h3>
<p>1.&nbsp;<span>打开网址<em><strong><a href="http://www.php.net/downloads.php" target="_blank">http://www.php.net/downloads.php</a></strong></em></span><span>，下载相应的PHP版本（本文选择的是tar.gz源码版本）。</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061018444254.png" alt="" /></p>
<p><span>2.&nbsp;</span><span>将下载的文件解压缩到<em><strong>/usr/local/src/php-5.4.3</strong></em></span><span>目录。</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061018460817.png" alt="" /></p>
<p><span>3. 配置PHP。</span></p>
<div class="cnblogs_code">
<pre>cd /usr/local/src/php-<span style="color: #800080;">5.4</span>.<span style="color: #800080;">3</span>
<span style="color: #0000ff;">sudo</span> ./configure --prefix=/usr/local/development/php-<span style="color: #800080;">5.4</span>.<span style="color: #800080;">3</span></pre>
</div>
<p>4. 发现有错误，是因为缺少<em><strong>libxml2</strong></em>。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061018522636.png" alt="" /></p>
<p>5. 打开网站<em><strong><a href="ftp://xmlsoft.org/libxml2/" target="_blank">ftp://xmlsoft.org/libxml2/</a></strong></em>，下载<em><strong>libxml2</strong></em>最新版本，然后安装。</p>
<div class="cnblogs_code">
<pre>cd /usr/local/<span style="color: #000000;">src
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">tar</span> zxvf ~/下载/libxml2-<span style="color: #800080;">2.8</span>.<span style="color: #800080;">0</span>.<span style="color: #0000ff;">tar</span><span style="color: #000000;">.gz 
cd libxml2</span>-<span style="color: #800080;">2.8</span>.<span style="color: #800080;">0</span>
<span style="color: #0000ff;">sudo</span> ./configure --prefix=/usr/local/development/libxml2-<span style="color: #800080;">2.8</span>.<span style="color: #800080;">0</span>
<span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">make</span>
<span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">make</span> <span style="color: #0000ff;">install</span></pre>
</div>
<p>6. 再次配置http，使用<em><strong>--with-libxml-dir</strong></em>选项。OK，成功了。</p>
<div class="cnblogs_code">
<pre>cd /usr/local/development/php-<span style="color: #800080;">5.4</span>.<span style="color: #800080;">3</span>
<span style="color: #0000ff;">sudo</span> ./configure --prefix=/usr/local/development/php-<span style="color: #800080;">5.4</span>.<span style="color: #800080;">3</span> --with-libxml-<span style="color: #0000ff;">dir</span>=/usr/local/development/libxml2-<span style="color: #800080;">2.8</span>.<span style="color: #800080;">0</span></pre>
</div>
<p>7. 编译和安装PHP。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">make</span>
<span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">make</span> <span style="color: #0000ff;">install</span></pre>
</div>
<p>8. 设置PHP路径，新建文件<em><strong>/etc/profile.d/set-php-env.sh</strong></em>，内容如下：</p>
<div class="cnblogs_code">
<pre>export PHP_HOME=/usr/local/development/php-<span style="color: #800080;">5.4</span>.<span style="color: #800080;">3</span><span style="color: #000000;">
export PATH</span>=$PHP_HOME/bin:$PATH</pre>
</div>
<p>9. 重启电脑，使用命令<em><strong>php --version</strong></em>检查PHP是否安装成功。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061020593819.png" alt="" /></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h3>集成Apache和PHP</h3>
<p>xx</p>
<p>&nbsp;</p>
<p><span>&nbsp;</span></p>
<p><span>&nbsp;</span></p>
<p>Installing PEAR environment: /usr/local/lib/php/<br />[PEAR] Archive_Tar    - installed: 1.3.7<br />[PEAR] Console_Getopt - installed: 1.3.0<br />[PEAR] Structures_Graph- installed: 1.0.4<br />[PEAR] XML_Util       - installed: 1.2.1<br />[PEAR] PEAR           - installed: 1.9.4<br />Wrote PEAR system config file at: /usr/local/etc/pear.conf<br />You may want to add: /usr/local/lib/php to your php.ini include_path<br />/usr/local/src/php-5.4.3/build/shtool install -c ext/phar/phar.phar /usr/local/bin<br />ln -s -f /usr/local/bin/phar.phar /usr/local/bin/phar</p>]]></description></item><item><title>Eclipse 安装PDT</title><link>http://www.cnblogs.com/eastson/archive/2012/06/10/2544166.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 10 Jun 2012 10:36:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/10/2544166.html</guid><description><![CDATA[<p><a href="http://www.eclipse.org/projects/project.php?id=tools.pdt">http://www.eclipse.org/projects/project.php?id=tools.pdt</a></p>
<p>&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061018290032.png" alt="" /></p>
<p>&nbsp;</p>
<p><span>http://download.eclipse.org/tools/pdt/updates</span></p>
<p><span>&nbsp;</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061018310691.png" alt="" /></p>
<p><span>&nbsp;</span></p>
<p><span>&nbsp;</span></p>]]></description></item><item><title>Ubuntu 12.04 下安装Apache 2.4.2</title><link>http://www.cnblogs.com/eastson/archive/2012/06/10/2543707.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 10 Jun 2012 06:30:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/10/2543707.html</guid><description><![CDATA[<p>Apache的安装请参考文档《<a href="http://httpd.apache.org/docs/2.4/install.html" target="_blank"><em><strong>Compiling and Installing</strong></em></a>》，里面说得比较清楚了。</p>
<p>&nbsp;</p>
<p><em><strong>Ubuntu版本：12.04 LTS</strong></em></p>
<p><em><strong>Apache版本：Apache httpd 2.4.2</strong></em></p>
<p><em><strong>安装目录：/usr/local/development/httpd-2.4.2</strong></em></p>
<p><strong><em>源码目录：/usr/local/src/httpd-2.4.2</em></strong></p>
<p><em>&nbsp;</em></p>
<p>1.&nbsp;<span>打开网址<em><strong><a href="http://httpd.apache.org/download.cgi" target="_blank">http://httpd.apache.org/download.cgi</a></strong></em></span><span>，下载相应的Apache版本（本文选择的是tar.gz源码版本）。</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061013245874.png" alt="" /></p>
<p><span>2.&nbsp;<span>将下载的文件解压缩到<em><strong>/usr/local/src/<em><strong>httpd-2.4.2</strong></em></strong></em></span><span>目录。</span></span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061013290224.png" alt="" /></p>
<p><span><span>3. 使用configure命令配置httpd。</span></span></p>
<div class="cnblogs_code">
<pre>sudo ./configure --prefix=/usr/local/development/http-<span style="color: #800080;">2.4</span>.<span style="color: #800080;">2</span></pre>
</div>
<p>4. 配置报错，缺少Apache Portable Runtime library。我们从网站<a href="http://apr.apache.org/" target="_blank">http://apr.apache.org/</a>下载<em><strong>apr</strong></em>和<em><strong>apr-util</strong></em>，然后解压缩到<em><strong><strong><em>/usr/local/src/httpd-2.4.2/srclib</em></strong></strong></em>目录。注意不要使用默认的解压缩后的目录名。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061013413283.png" alt="" /></p>
<p>5. 带上<span>--with-included-apr选项重新配置httpd。</span></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> ./configure --prefix=/usr/local/development/http-<span style="color: #800080;">2.4</span>.<span style="color: #800080;">2</span> --with-included-apr</pre>
</div>
<p>6. 还是有错，这次是缺少PCRE（Perl Compatible Regular Expressions）。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061014083461.png" alt="" /></p>
<p>7. 从网站<em><strong><a href="http://www.pcre.org/" target="_blank">http://www.pcre.org/</a></strong></em>下载PCRE，然后安装。</p>
<div class="cnblogs_code">
<pre>cd /usr/local/<span style="color: #000000;">src
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">tar</span> zxvf ~/下载/pcre-<span style="color: #800080;">8.30</span>.<span style="color: #0000ff;">tar</span><span style="color: #000000;">.gz
cd pcre</span>-<span style="color: #800080;">8.30</span>/
<span style="color: #0000ff;">sudo</span> ./configure --prefix=/usr/local/development/pcre-<span style="color: #800080;">8.30</span>
<span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">make</span>
<span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">make</span> <span style="color: #0000ff;">install</span></pre>
</div>
<p>8. 带上--with-pcre选项再次配置httpd试试看。哦，成功了。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> ./configure --prefix=/usr/local/development/http-<span style="color: #800080;">2.4</span>.<span style="color: #800080;">2</span> --with-included-apr --with-pcre=/usr/local/development/pcre-<span style="color: #800080;">8.30</span></pre>
</div>
<p>9.&nbsp;编译和安装httpd。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">make</span>
<span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">make</span> <span style="color: #0000ff;">install</span></pre>
</div>
<p>10.&nbsp;<span>配置apache</span><span>服务，然后启动。</span></p>
<div class="cnblogs_code">
<pre>cd /etc/<span style="color: #000000;">init.d
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">ln</span> -s /usr/local/development/http-<span style="color: #800080;">2.4</span>.<span style="color: #800080;">2</span>/bin/<span style="color: #000000;">apachectl
</span><span style="color: #0000ff;">sudo</span> /etc/init.d/apachectl start</pre>
</div>
<p>11. 服务启动成功，打开浏览器试试看。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012061014284813.png" alt="" /></p>
<p>12. 最后我们配置一下每次开机时自动启动apache服务。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> update-rc.d apachectl defaults</pre>
</div>]]></description></item><item><title>Ubuntu 12.04 下安装MySQL 5.5.25</title><link>http://www.cnblogs.com/eastson/archive/2012/06/09/2543489.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 09 Jun 2012 15:20:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/09/2543489.html</guid><description><![CDATA[<p>MySQL官方的安装文档请参考《<em><span style="text-decoration: underline;"><strong><a href="http://dev.mysql.com/doc/refman/5.0/en/binary-installation.html" target="_blank">Installing MySQL from Generic Binaries on Other Unix-Like Systems</a></strong></span></em>》和《<a href="http://dev.mysql.com/doc/refman/5.0/en/unix-postinstallation.html" target="_blank"><em><strong>Unix Postinstallation Procedures</strong></em></a>》。</p>
<p>&nbsp;</p>
<p><em><strong>Ubuntu版本：12.04 LTS</strong></em></p>
<p><em><strong>MySQL版本：</strong><strong>MySQL Community Server 5.5.25</strong></em></p>
<p><em><strong>安装目录：/usr/local/development/mysql-5.5.25</strong></em></p>
<p>&nbsp;</p>
<p>1. 打开网址<em><strong><a href="http://www.mysql.com/downloads/mysql/" target="_blank">http://www.mysql.com/downloads/mysql/</a></strong></em>，下载相应的MySQL版本（本文选择的是64位tar压缩版本）。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060922101919.png" alt="" /></p>
<p>2.&nbsp;<span>将下载的文件解压缩到<em><strong>/usr/local/development/mysql-5.5.25</strong></em></span><span>目录。</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060922354538.png" alt="" /></p>
<p>3. 创建<em><strong>mysql用户和组</strong></em>。注意，我们创建的mysql用户只是为了控制文件所有权的目的，因此我们执行<em><strong>useradd</strong></em>的时候使用了<em><strong>-r参数</strong></em>让它不需要登陆。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span><span style="color: #000000;"> groupadd mysql
</span><span style="color: #0000ff;">sudo</span> useradd -r -g mysql mysql</pre>
</div>
<p>4. 改变<em><strong>/usr/local/development/mysql-5.5.25</strong></em>目录的所有者为mysql。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">chown</span> -R mysql:mysql /usr/local/development/mysql-<span style="color: #800080;">5.5</span>.<span style="color: #800080;">25</span>/</pre>
</div>
<p>5. 使用<em><strong>mysql_install_db</strong></em>初始化授权表。此操作只是在MySQL初次安装时才需要执行，如果是已存在的安装，则可以跳过此步骤，否则会覆盖先前的授权信息。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> scripts/mysql_install_db --user=mysql</pre>
</div>
<p>6. 发现<em><strong>mysql_install_db</strong></em>执行有错误。看错误提示，原来是因为缺少共享库<em><strong>libaio1</strong></em>。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060922474029.png" alt="" /></p>
<p>7. 安装共享库<em><strong>libaio1</strong></em>。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060922495977.png" alt="" /></p>
<p>8. 再次执行<em><strong>mysql_install_db</strong></em>，这次执行成功。</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">Installing MySQL system tables...
OK
Filling help tables...
OK

To start mysqld at boot </span><span style="color: #0000ff;">time</span><span style="color: #000000;"> you have to copy
support</span>-files/mysql.server to the right place <span style="color: #0000ff;">for</span><span style="color: #000000;"> your system

PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER </span>!<span style="color: #000000;">
To </span><span style="color: #0000ff;">do</span> so, start the server, <span style="color: #0000ff;">then</span><span style="color: #000000;"> issue the following commands:

.</span>/bin/mysqladmin -u root password <span style="color: #800000;">'</span><span style="color: #800000;">new-password</span><span style="color: #800000;">'</span><span style="color: #000000;">
.</span>/bin/mysqladmin -u root -h amonest-Satellite-C600 password <span style="color: #800000;">'</span><span style="color: #800000;">new-password</span><span style="color: #800000;">'</span><span style="color: #000000;">

Alternatively you can run:
.</span>/bin/<span style="color: #000000;">mysql_secure_installation

</span><span style="color: #0000ff;">which</span><span style="color: #000000;"> will also give you the option of removing the test
databases and anonymous user created by default.  This is
strongly recommended </span><span style="color: #0000ff;">for</span><span style="color: #000000;"> production servers.

See the manual </span><span style="color: #0000ff;">for</span> <span style="color: #0000ff;">more</span><span style="color: #000000;"> instructions.

You can start the MySQL daemon with:
cd . ; .</span>/bin/mysqld_safe &amp;<span style="color: #000000;">

You can test the MySQL daemon with mysql</span>-test-<span style="color: #000000;">run.pl
cd .</span>/mysql-test ; <span style="color: #0000ff;">perl</span> mysql-test-<span style="color: #000000;">run.pl

Please report any problems with the .</span>/bin/mysqlbug script!</pre>
</div>
<p>9. 配置<em><strong>mysql</strong></em>服务，然后启动。</p>
<div class="cnblogs_code">
<pre>cd /etc/<span style="color: #000000;">init.d
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">ln</span> -s /usr/local/development/mysql-<span style="color: #800080;">5.5</span>.<span style="color: #800080;">25</span>/support-files/<span style="color: #000000;">mysql.server<br />sudo /etc/init.d/mysql.server start </span></pre>
</div>
<p>10. 启动<em><strong>mysql</strong></em>服务时报错了，原来是没有<em><strong>/usr/local/mysql</strong></em>目录。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060923015669.png" alt="" /></p>
<p>11. 创建符号链接<em><strong>/usr/local/mysql</strong></em>到<em><strong>/usr/local/development/mysql-5.5.25。</strong></em></p>
<div class="cnblogs_code">
<pre>cd /usr/<span style="color: #000000;">local
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">ln</span> -s /usr/local/development/mysql-<span style="color: #800080;">5.5</span>.<span style="color: #800080;">25</span><span style="color: #000000;"> mysql
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">chown</span> -R mysql:mysql mysql</pre>
</div>
<p>12. 再次启动<em><strong>mysql</strong></em>服务试试看，OK，这次成功了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060923140848.png" alt="" /></p>
<p>13. 使用<code><em><strong>mysqladmin version</strong></em>命令检查一下是否可以连接<em><strong>mysql</strong></em>。</code></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060923170633.png" alt="" /></p>
<p>14. 最后我们配置一下每次开机时自动启动<em><strong>mysql</strong></em>服务。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> update-rc.d mysql.server defaults</pre>
</div>]]></description></item><item><title>Ubuntu下管理服务</title><link>http://www.cnblogs.com/eastson/archive/2012/06/09/2543478.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 09 Jun 2012 12:21:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/09/2543478.html</guid><description><![CDATA[<p><em><strong>添加一个服务&nbsp;</strong></em></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> update-rc.d 服务名 defaults </pre>
</div>
<p>&nbsp;</p>
<p><em><strong>删除一个服务&nbsp;</strong></em></p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">sudo</span> update-rc.d -f 服务名 remove</pre>
</div>
<p>&nbsp;</p>
<p><em><strong>服务启动和停止&nbsp;</strong></em></p>
<div class="cnblogs_code">
<pre>/etc/init.d/服务名 start|restart|stop</pre>
</div>]]></description></item><item><title>Ubuntu安装RPM软件包</title><link>http://www.cnblogs.com/eastson/archive/2012/06/09/2543467.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 09 Jun 2012 12:08:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/09/2543467.html</guid><description><![CDATA[<p>RedHat的软件包格式是rpm，Ubuntu的软件包格式是deb。Ubuntu如果要安装rpm，必须先使用alien将rpm转换成deb。</p>
<p>&nbsp;</p>
<p>1. 安装alien：sudo apt-get install alien</p>
<p>2. 转换rpm：sudo alien xxx.rpm</p>
<p>3. 执行deb：sudo dpkg --install xxx.deb</p>]]></description></item><item><title>衡水中学 天下第一操</title><link>http://www.cnblogs.com/eastson/archive/2012/06/09/2542977.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 09 Jun 2012 04:01:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/09/2542977.html</guid><description><![CDATA[<p><object width="640" height="480" data="http://player.youku.com/player.php/sid/XMjY3ODExNTEy/v.swf" type="application/x-shockwave-flash"><param name="src" value="http://player.youku.com/player.php/sid/XMjY3ODExNTEy/v.swf" /></object></p>
<p><a href="http://v.youku.com/v_show/id_XMjY3ODExNTEy.html">http://v.youku.com/v_show/id_XMjY3ODExNTEy.html</a></p>
<p><a href="http://news.sina.com.cn/c/2012-06-09/023924561899.shtml" target="_blank">河北衡水中学军事化备考被指为大学生加工厂</a></p>
<p>&nbsp;</p>
<p><em><strong>你的孩子在不在这样的学校？</strong></em></p>]]></description></item><item><title>使用Visual Studio部署报表到SharePoint服务器</title><link>http://www.cnblogs.com/eastson/archive/2012/06/09/2542867.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 09 Jun 2012 02:19:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/09/2542867.html</guid><description><![CDATA[<p>最近公司在测试SharePoint，2007和2010都有试过。本文是我用Visual Studio部署开发好的报表时的一些配置参数，方便后续查阅。</p>
<p>&nbsp;</p>
<h3>部署到SharePoint 2010服务器</h3>
<p>服务器软件环境：</p>
<ul>
<li>Windows Server 2008 R2</li>
<li>SQL Server 2008 R2</li>
<li>SharePoint Server 2010</li>
</ul>
<p>&nbsp;</p>
<p>宿主网站是http://localhost，创建报告库ReportLibrary，完毕后我们就可以用http://localhost/ReportLibrary访问该报告库。</p>
<p>&nbsp;</p>
<p>开启SQL Server Business Intelligence Development Studio，创建报表项目，然后配置项目属性。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060909511629.png" alt="" /></p>
<p>TargetDatasetFolder：http://localhost/ReportLibrary/，共享数据集存放文件夹。</p>
<p>TargetDataSourceFolder：http://localhost/ReportLibrary/，共享数据源存放文件夹。</p>
<p>TargetReportFolder：http://localhost/ReportLibrary/ReportFiles，报告文件存放文件夹，这里为报告文件单独规划了一个文件夹。</p>
<p>TargetReportPartFolder：http://localhost/ReportLibrary/，报告部件存放文件夹。</p>
<p>TargetServerURL：http://localhost/ReportLibrary/，报告服务器地址。</p>
<p>&nbsp;</p>
<h3>部署到SharePoint 2007服务器</h3>
<p>服务器软件环境：</p>
<ul>
<li>Windows Server 2003</li>
<li>SQL Server 2008 R2</li>
<li>SharePoint Server 2007</li>
</ul>
<p>&nbsp;</p>
<p>宿主网站是http://localhost:5090，使用的默认的报表中心模板。</p>
<p>&nbsp;</p>
<p>首先确认是否有报告库存在，默认应该有ReportsLibrary库存在，注意它的文档类型。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060910070238.png" alt="" /></p>
<p>&nbsp;</p>
<p>然后确认是否数据源库存在，默认应该有Data Connections库存在，也注意一下它的文档类型。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060910115570.png" alt="" /></p>
<p>&nbsp;</p>
<p>开启SQL Server Business Intelligence Development Studio，创建报表项目，然后配置项目属性。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060910151246.png" alt="" /></p>
<p>TargetDataSourceFolder：http://softtest:5090/Data%20Connections，共享数据源存放文件夹。</p>
<p>TargetReportFolder：http://softtest:5090/ReportsLibrary，报告文件存放文件夹。</p>
<p>TargetServerURL：http://softtest:5090/ReportLibrary/，报告服务器地址。</p>
<p>这里有一个很奇怪的问题：softtest是服务器的名称，如果使用http://localhost:5090/ReportLibrary/就会报错，但是使用http://softtest:5090/ReportLibrary/就没有问题。</p>]]></description></item><item><title>在Ubuntu 12.04 为 Eclipse 添加快速启动项</title><link>http://www.cnblogs.com/eastson/archive/2012/06/08/2541266.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 08 Jun 2012 14:49:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/08/2541266.html</guid><description><![CDATA[<p>按照《<a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/archive/2012/06/08/2542297.html" target="_blank">Ubuntu 12.04 下安装Eclipse Indigo 3.7.2</a>》安装好Eclipse后，启动不是很方便，需要切换到终端状态下执行<em><strong>eclipse</strong></em>命令才能启动。</p>
<p>&nbsp;</p>
<p>Ubuntu 12.04使用了<em><strong>Unity</strong></em>界面，在桌面左侧侧多了一个启动器栏。我们可以将自己常用的软件在启动器栏放一个图标，实现快速地启动。启动器栏的每一个图标实际上都对应了<em><strong>/usr/share/applications</strong></em>目录下的一个文件。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060821503113.png" alt="" /></p>
<p>&nbsp;</p>
<p>为了给eclipse创建启动栏图标，我们可以在<em><strong>/usr/share/applications</strong></em>目录下创建文件<em><strong>eclipse.desktop</strong></em>（文件名可以任意，但是文件名后缀必须是<em><strong>.desktop</strong></em>）,再将下面的内容复制过来：</p>
<div class="cnblogs_code">
<pre><span style="color: #800000; font-weight: bold;">[</span><span style="color: #800000;">Desktop Entry</span><span style="color: #800000; font-weight: bold;">]</span><span style="color: #000000;">
Type</span>=<span style="color: #000000;">Application
Name</span>=<span style="color: #000000;">Eclipse
Comment</span>=<span style="color: #000000;">Eclipse Integrated Development Environment
Icon</span>=/usr/local/development/eclipse-indigo-3.7.2<span style="color: #000000;">/icon.xpm
Exec</span>=<span style="color: #000000;">eclipse
Terminal</span>=<span style="color: #000000;">false
Categories</span>=Development<span style="color: #008000;">;</span><span style="color: #008000;">IDE;Java;</span></pre>
</div>
<p>&nbsp;</p>
<p>然后我们在<em><strong>Dash主页搜索关键字&ldquo;eclipse&rdquo;</strong></em>，是不是就可以看到一个Eclipse的图标？点击执行，Eclipse应用被打开，同时Eclipse的图标也出现在了桌面左侧的启动栏上。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060822385213.png" alt="" /></p>
<p>&nbsp;</p>
<p>我们可以将Eclipse图标锁定在侧边栏上，避免每次执行Eclipse时都必须再到Dash主页进行搜索。当Eclipse应用执行时，鼠标右键单击侧边栏上的Eclipse图标，在弹出的菜单里面选择&ldquo;<em><strong>锁定到启动器</strong></em>&rdquo;，这样就可以锁定了。</p>
<p>&nbsp;</p>
<p>小技巧：我们可以将<strong>eclipse.desktop</strong>文件移动到<em><strong>/usr/local/development/eclipse-indigo-3.7.2</strong></em>目录下，然后做一个符号链链接到<em><strong>/usr/share/applications</strong></em>，这样做的好处是重装系统时不用重做该文件（我的系统<em><strong>/和/usr/local</strong></em>是两个不同的分区）。</p>
<div class="cnblogs_code">
<pre>cd /usr/share/<span style="color: #000000;">applications
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">ln</span> -s /usr/local/development/eclipse-indigo-<span style="color: #800080;">3.7</span>.<span style="color: #800080;">2</span>/eclipse.desktop</pre>
</div>]]></description></item><item><title>Ubuntu 12.04 下安装Eclipse Indigo 3.7.2</title><link>http://www.cnblogs.com/eastson/archive/2012/06/08/2542297.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 08 Jun 2012 13:35:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/08/2542297.html</guid><description><![CDATA[<p>安装Eclipse之前请先按照《<a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/archive/2012/06/06/2538964.html" target="_blank">Ubuntu下安装JDK1.7</a>》的步骤安装好JDK。</p>
<p>&nbsp;</p>
<p><em><strong>Ubuntu版本：12.04 LTS</strong></em></p>
<p><em><strong>Eclipse版本：<span>Eclipse Indig</span></strong><strong>o (3.7.2) for Java EE</strong><strong>&nbsp;</strong><strong><span class="title">Developers</span><br /></strong></em></p>
<p><em><strong>安装目录：/usr/local/development/eclipse-indigo-3.7.2</strong></em></p>
<p><em><strong>&nbsp;</strong></em></p>
<p>1. 打开网址<em><strong><a href="http://www.eclipse.org/downloads/">http://www.eclipse.org/downloads/</a></strong></em>，下载相应的Eclipse版本。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060821233738.png" alt="" /></p>
<p><span>2. 将下载的文件解压缩到<em><strong>/usr/local/development/eclipse-indigo-3.7.2</strong></em></span><span>目录。</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060821324813.png" alt="" /></p>
<p>3. 将<em><strong>eclipse</strong></em>执行文件符号链接到<em><strong>/usr/local/bin</strong></em>。</p>
<div class="cnblogs_code">
<pre>cd /usr/local/<span style="color: #000000;">bin
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">ln</span> -s /usr/local/development/eclipse-indigo-<span style="color: #800080;">3.7</span>.<span style="color: #800080;">2</span>/eclipse</pre>
</div>
<p>4.&nbsp;<span>使用命令</span><em><strong>eclipse</strong></em><span>检查是否安装成功。</span></p>]]></description></item><item><title>Ubuntu下安装JDK1.7</title><link>http://www.cnblogs.com/eastson/archive/2012/06/06/2538964.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 06 Jun 2012 15:20:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/06/2538964.html</guid><description><![CDATA[<p>Ubuntu操作系统下如何手动安装JDK1.7呢？本文是我经历的全过程。</p>
<p>&nbsp;</p>
<p><em><strong>Ubuntu版本：12.04 LTS</strong></em></p>
<p><em><strong>JDK版本：1.7.0_04</strong></em></p>
<p><em><strong>安装目录：/usr/local/development/jdk1.7.0_04</strong></em></p>
<p>&nbsp;</p>
<h3>安装JDK1.7的过程</h3>
<p>1. 打开网址<em><strong><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk-7u4-downloads-1591156.html" target="_blank">http://www.oracle.com/technetwork/java/javase/downloads/jdk-7u4-downloads-1591156.html</a></strong></em>，下载相应的JDK文件。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060622510965.png" alt="" /></p>
<p>2. 将下载的文件解压缩到<em><strong>/usr/local/development/jdk1.7.0_04</strong></em>目录。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060622524039.png" alt="" /></p>
<p>3. 创建文件<em><strong>/etc/profile.d/development.sh</strong></em>，将下面的内容复制到该文件。</p>
<div class="cnblogs_code">
<pre>export JAVA_HOME=/usr/local/development/jdk1.<span style="color: #800080;">7</span><span style="color: #000000;">.0_04
export JRE_HOME</span>=$JAVA_HOME/<span style="color: #000000;">jre
export CLASSPATH</span>=.:$JAVA_HOME/lib:$JRE_HOME/<span style="color: #000000;">lib:$CLASSPATH
export PATH</span>=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH</pre>
</div>
<p>4. 重启电脑，使用命令<em><strong>java -version</strong></em>检查JDK是否安装成功。</p>
<p>&nbsp;</p>
<h3>技巧一：使用<em><strong>development.sh</strong></em>设置环境变量</h3>
<p>网络上很多关于设置JDK环境变量的方法，都是说修改<em><strong>/etc/environment，/etc/profile，~/,bash_profile</strong></em>等文件。</p>
<p>其实如果打开<em><strong>/etc/profile</strong></em>，在最后我们可以发现有这样一段代码：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">if</span> [ -d /etc/profile.d ]; <span style="color: #0000ff;">then</span>
  <span style="color: #0000ff;">for</span> i <span style="color: #0000ff;">in</span> /etc/profile.d<span style="color: #008000;">/*</span><span style="color: #008000;">.sh; do
    if [ -r $i ]; then
      . $i
    fi
  done
  unset i
fi</span></pre>
</div>
<p>也就是说，在<em><strong>/etc/profile</strong></em>执行的最后，它会自动的执行<em><strong>/etc/profile.d</strong></em>目录下的所有可读的文件。这就是我们将设置JDK环境变量的工作放<em><strong>在/etc/profile.d/development.sh</strong></em>的原因，可以不用修改操作系统自带的<em><strong>/etc/profile</strong></em>内容，方便系统的移植。</p>
<p>&nbsp;</p>
<h3>技巧二：将<em><strong>development.sh</strong></em>放到<em>/usr/local/profile.d</em></h3>
<p>我的系统<em><strong>/usr/local</strong></em>挂载点是一个单独的磁盘分区，这样做的目的是方便系统的维护。<em><strong>/usr/local</strong></em>目录除了存放安装的软件以外，其实还可以将配置文件放在这个目录下面，例如上面的<em><strong>development.sh</strong></em>，这样重装系统的时候就不需要重做该文件。所以，可以新建目录<em><strong>/usr/local</strong></em>/<em><strong>profile.d</strong></em>，然后将development.sh复制到该新目录。至于怎么放到<em><strong>/etc/profile.d</strong></em>下面，我觉得可以采用符号链接的方式。</p>
<div class="cnblogs_code">
<pre>cd /ect/<span style="color: #000000;">profile.d
</span><span style="color: #0000ff;">sudo</span> <span style="color: #0000ff;">ln</span> -s /usr/local/profile.d/development.<span style="color: #0000ff;">sh</span></pre>
</div>]]></description></item><item><title>安装Adventure Works 2008 R2演示数据库</title><link>http://www.cnblogs.com/eastson/archive/2012/06/06/2538454.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 06 Jun 2012 09:02:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/06/2538454.html</guid><description><![CDATA[<p class="page_title">SQL Server 2008 R2很多相关的文章都是以Adventure Works数据库为基础的，但是该数据库在SQL Server 2008 R2安装时不会默认安装，需要另外从CodePlex网站下载然后手动安装。</p>
<p class="page_title">&nbsp;</p>
<p class="page_title">微软提供了两种Adventure Works数据库的安装方式，第一种是数据文件方式，只要在SQL Server Management Stuido附加上该数据文件就可以了；第二种是脚本方式，需要用SQLCMD手动执行脚本文件才能安装。</p>
<p class="page_title">&nbsp;</p>
<p class="page_title">打开网站<a href="http://msftdbprodsamples.codeplex.com/releases/view/59211">http://msftdbprodsamples.codeplex.com/releases/view/59211</a>，选择相应的安装方式文件下载。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060616332367.png" alt="" /></p>
<p>&nbsp;</p>
<h3>使用数据文件方式安装Adventure Works</h3>
<p>1. 选择下载方式<em><strong>"AdventureWorks2008R2 Data File</strong></em>"，下载的文件<em><strong>AdventureWorks2008R2_Data.mdf</strong></em>保存到目录<em><strong>C:\AdventureWorks 2008R2</strong></em>。</p>
<p>2. 打开<em><strong>SQL Server Management Studio</strong></em>，执行<em><strong>附加数据库</strong></em>任务。在附加数据库对话框添加<em><strong>AdventureWorks2008R2_Data.mdf</strong></em>文件。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060616414680.png" alt="" /></p>
<p>4. 在<em><strong>数据库详细信息</strong></em>列表里将日志文件删除，然后点击<em><strong>&ldquo;确定</strong></em>&rdquo;按钮，这样AdventureWorks数据库就附加成功了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060616420627.png" alt="" /></p>
<p>&nbsp;</p>
<h3>使用脚本方式安装Adventure Works</h3>
<p>1.&nbsp;&nbsp;选择下载方式<em><strong>"AdventureWorks 2008R2 OLTP Script</strong></em>"，将下载的文件解压缩到<em><strong>C:\AdventureWorks 2008R2\AdventureWorks 2008R2 OLTP</strong></em>目录。<em><strong>解压缩后的目录里面应该会有很多的CSV文件和一个名为instawdb.sql的文件</strong></em>。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060616491674.png" alt="" /></p>
<p>2. 用记事本打开<em><strong>instawdb.sql</strong></em>文件，找到下面的内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">--</span><span style="color: #008080;">:setvar SqlSamplesDatabasePath   "C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\"</span><span style="color: #008080;">
--</span><span style="color: #008080;">:setvar SqlSamplesSourceDataPath "C:\Program Files\Microsoft SQL Server\100\Tools\Samples\"</span></pre>
</div>
<p>替换成：</p>
<div class="cnblogs_code">
<pre><span style="color: #000000;">:setvar SqlSamplesDatabasePath   "C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\"
:setvar SqlSamplesSourceDataPath "C:\AdventureWorks 2008R2\AdventureWorks 2008R2 Data Warehouse\"</span></pre>
</div>
<p>这里使用<em><strong>setvar</strong></em>添加两个环境变量：<em><strong>SqlSamplesDatabasePath</strong></em>变量指示AdventureWorks数据库安装成功后数据文件和日志文件存放的目录，可以使用默认值，不需要修改；<em><strong>SqlSamplesSourceDataPath</strong></em>变量指示CSV文件存放的位置。<em><strong>两个变量的值记着不要漏掉最后面的斜杠。</strong></em></p>
<p><em><strong>两个变量设置完毕后，还需要删除前面的注释。</strong></em></p>
<p>3. 打开命令提示窗口，执行命令：</p>
<div class="cnblogs_code">
<pre>sqlcmd -S (local) -E -i <span style="color: #800000;">"</span><span style="color: #800000;">C:\AdventureWorks 2008R2\AdventureWorks 2008R2 Data Warehouse\instawdwdb.sql</span><span style="color: #800000;">"</span></pre>
</div>
<p>4. 命令执行完毕，打开<em><strong>SQL Server Management Studio</strong></em>，就可以看到<em><strong>AdventureWorks2008R2</strong></em>数据库了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060617010254.png" alt="" /></p>
<p><em><strong>&nbsp;</strong></em></p>]]></description></item><item><title>我的第一个SharePoint WebPart</title><link>http://www.cnblogs.com/eastson/archive/2012/06/04/2534813.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 04 Jun 2012 08:41:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/04/2534813.html</guid><description><![CDATA[<p>本文是我的第一个WebPart开发过程，参考文档<a href="http://msdn.microsoft.com/zh-cn/library/ee231551" target="_blank">演练：为 SharePoint 创建 Web 部件</a>。</p>
<p>&nbsp;</p>
<p>1. 启动Visual Studio 2010，新建一SharePoint项目，项目模板选择<em><strong>SharePoint &gt; 2010 &gt; 空白SharePoint项目</strong></em>。确定项目名称和存放位置后点击&ldquo;<em><strong>确定</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060415291688.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 指定用于调试的SharePoint网站和安全级别：注意：这里我们选择<em><strong>&ldquo;部署为场解决方案</strong></em>&rdquo;。点击&ldquo;<em><strong>完成</strong></em>&rdquo;按钮，项目创建成功。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060415321578.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 为新建的SharePoint项目添加新项，项目模版选择<em><strong>SharePoint &gt; 2010 &gt; Web部件</strong></em>。确定部件名称后点击&ldquo;<em><strong>添加</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060415340134.png" alt="" /></p>
<p>&nbsp;</p>
<p>4. 打开新添加Web部件的代码文件（本文中是WebPart1.cs），用下面的代码替换。</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">using</span><span style="color: #000000;"> System;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.ComponentModel;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Data;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Web;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Web.UI;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Web.UI.WebControls;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> System.Web.UI.WebControls.WebParts;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> Microsoft.SharePoint;
</span><span style="color: #0000ff;">using</span><span style="color: #000000;"> Microsoft.SharePoint.WebControls;

</span><span style="color: #0000ff;">namespace</span><span style="color: #000000;"> HelloWebPart.WebPart1
{
    [ToolboxItemAttribute(</span><span style="color: #0000ff;">false</span><span style="color: #000000;">)]
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> WebPart1 : WebPart
    {
        </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> DataGrid grid;
        </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">string</span> verbText = <span style="color: #800000;">"</span><span style="color: #800000;">Show Managers Only</span><span style="color: #800000;">"</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">private</span> Label errorMessage = <span style="color: #0000ff;">new</span><span style="color: #000000;"> Label();
        </span><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">string</span><span style="color: #000000;"> xmlFilePath;

        [Personalizable(PersonalizationScope.Shared), WebBrowsable(</span><span style="color: #0000ff;">true</span><span style="color: #000000;">),
        WebDisplayName(</span><span style="color: #800000;">"</span><span style="color: #800000;">Path to Employee Data File</span><span style="color: #800000;">"</span><span style="color: #000000;">),
        WebDescription(</span><span style="color: #800000;">"</span><span style="color: #800000;">Location of the XML file that contains employee data</span><span style="color: #800000;">"</span><span style="color: #000000;">)]
        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">string</span><span style="color: #000000;"> DataFilePath
        {
            </span><span style="color: #0000ff;">get</span><span style="color: #000000;">
            {
                </span><span style="color: #0000ff;">return</span><span style="color: #000000;"> xmlFilePath;
            }
            </span><span style="color: #0000ff;">set</span><span style="color: #000000;">
            {
                xmlFilePath </span>=<span style="color: #000000;"> value;
            }
        }

        </span><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">override</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> CreateChildControls()
        {
            </span><span style="color: #008000;">//</span><span style="color: #008000;"> Define the grid control that displays employee data in the Web Part.</span>
            grid = <span style="color: #0000ff;">new</span><span style="color: #000000;"> DataGrid();
            grid.Width </span>= Unit.Percentage(<span style="color: #800080;">100</span><span style="color: #000000;">);
            grid.GridLines </span>=<span style="color: #000000;"> GridLines.Horizontal;
            grid.HeaderStyle.CssClass </span>= <span style="color: #800000;">"</span><span style="color: #800000;">ms-vh2</span><span style="color: #800000;">"</span><span style="color: #000000;">;
            grid.CellPadding </span>= <span style="color: #800080;">2</span><span style="color: #000000;">;
            grid.BorderWidth </span>= Unit.Pixel(<span style="color: #800080;">5</span><span style="color: #000000;">);
            grid.HeaderStyle.Font.Bold </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
            grid.HeaderStyle.HorizontalAlign </span>=<span style="color: #000000;"> HorizontalAlign.Center;

            </span><span style="color: #008000;">//</span><span style="color: #008000;"> Populate the grid control with data in the employee data file.</span>
            <span style="color: #0000ff;">try</span><span style="color: #000000;">
            {
                DataSet dataset </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> DataSet();
                dataset.ReadXml(xmlFilePath, XmlReadMode.InferSchema);
                grid.DataSource </span>=<span style="color: #000000;"> dataset;
                grid.DataBind();
            }
            </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception x)
            {
                errorMessage.Text </span>+=<span style="color: #000000;"> x.Message;
            }

            </span><span style="color: #008000;">//</span><span style="color: #008000;"> Add control to the controls collection of the Web Part.</span>
<span style="color: #000000;">            Controls.Add(grid);
            Controls.Add(errorMessage);
            </span><span style="color: #0000ff;">base</span><span style="color: #000000;">.CreateChildControls();
        }

        </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">override</span><span style="color: #000000;"> WebPartVerbCollection Verbs
        {
            </span><span style="color: #0000ff;">get</span><span style="color: #000000;">
            {
                WebPartVerb customVerb </span>= <span style="color: #0000ff;">new</span> WebPartVerb(<span style="color: #800000;">"</span><span style="color: #800000;">Manager_Filter_Verb</span><span style="color: #800000;">"</span><span style="color: #000000;">,
                    </span><span style="color: #0000ff;">new</span><span style="color: #000000;"> WebPartEventHandler(CustomVerbEventHandler));

                customVerb.Text </span>=<span style="color: #000000;"> verbText;
                customVerb.Description </span>= <span style="color: #800000;">"</span><span style="color: #800000;">Shows only employees that are managers</span><span style="color: #800000;">"</span><span style="color: #000000;">;

                WebPartVerb[] newVerbs </span>= <span style="color: #0000ff;">new</span><span style="color: #000000;"> WebPartVerb[] { customVerb };

                </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">new</span> WebPartVerbCollection(<span style="color: #0000ff;">base</span><span style="color: #000000;">.Verbs, newVerbs);
            }
        }

        </span><span style="color: #0000ff;">protected</span> <span style="color: #0000ff;">void</span> CustomVerbEventHandler(<span style="color: #0000ff;">object</span><span style="color: #000000;"> sender, WebPartEventArgs args)
        {
            </span><span style="color: #0000ff;">int</span> titleColumn = <span style="color: #800080;">2</span><span style="color: #000000;">;

            </span><span style="color: #0000ff;">foreach</span> (DataGridItem item <span style="color: #0000ff;">in</span><span style="color: #000000;"> grid.Items)
            {
                </span><span style="color: #0000ff;">if</span> (item.Cells[titleColumn].Text != <span style="color: #800000;">"</span><span style="color: #800000;">Manager</span><span style="color: #800000;">"</span><span style="color: #000000;">)
                {
                    </span><span style="color: #0000ff;">if</span> (item.Visible == <span style="color: #0000ff;">true</span><span style="color: #000000;">)
                    {
                        item.Visible </span>= <span style="color: #0000ff;">false</span><span style="color: #000000;">;
                    }
                    </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
                    {
                        item.Visible </span>= <span style="color: #0000ff;">true</span><span style="color: #000000;">;
                    }
                }

            }
            </span><span style="color: #0000ff;">if</span> (verbText == <span style="color: #800000;">"</span><span style="color: #800000;">Show Managers Only</span><span style="color: #800000;">"</span><span style="color: #000000;">)
            {
                verbText </span>= <span style="color: #800000;">"</span><span style="color: #800000;">Show All Employees</span><span style="color: #800000;">"</span><span style="color: #000000;">;
            }
            </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
            {
                verbText </span>= <span style="color: #800000;">"</span><span style="color: #800000;">Show Managers Only</span><span style="color: #800000;">"</span><span style="color: #000000;">;
            }
        }
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p><br class="Apple-interchange-newline" />5. 将下面的XML内容保存到一个文件，这里以<em><strong>C:\Shared Folders\Tutorials\HelloWebPart\HelloWebPart\data.xml</strong></em>为例。</p>
<div class="cnblogs_code">
<pre><span>&lt;?</span><span>xml version="1.0" encoding="utf-8" </span><span>?&gt;</span>
    <span>&lt;</span><span>employees </span><span>xmlns</span><span>="http://schemas.microsoft.com/vsto/samples"</span><span>&gt;</span>
       <span>&lt;</span><span>employee</span><span>&gt;</span>
           <span>&lt;</span><span>name</span><span>&gt;</span>David Hamilton<span>&lt;/</span><span>name</span><span>&gt;</span>
           <span>&lt;</span><span>hireDate</span><span>&gt;</span>2001-05-11<span>&lt;/</span><span>hireDate</span><span>&gt;</span>
           <span>&lt;</span><span>title</span><span>&gt;</span>Sales Associate<span>&lt;/</span><span>title</span><span>&gt;</span>
       <span>&lt;/</span><span>employee</span><span>&gt;</span>
       <span>&lt;</span><span>employee</span><span>&gt;</span>
           <span>&lt;</span><span>name</span><span>&gt;</span>Karina Leal<span>&lt;/</span><span>name</span><span>&gt;</span>
           <span>&lt;</span><span>hireDate</span><span>&gt;</span>1999-04-01<span>&lt;/</span><span>hireDate</span><span>&gt;</span>
           <span>&lt;</span><span>title</span><span>&gt;</span>Manager<span>&lt;/</span><span>title</span><span>&gt;</span>
       <span>&lt;/</span><span>employee</span><span>&gt;</span>
       <span>&lt;</span><span>employee</span><span>&gt;</span>
           <span>&lt;</span><span>name</span><span>&gt;</span>Nancy Davolio<span>&lt;/</span><span>name</span><span>&gt;</span>
           <span>&lt;</span><span>hireDate</span><span>&gt;</span>1992-05-01<span>&lt;/</span><span>hireDate</span><span>&gt;</span>
           <span>&lt;</span><span>title</span><span>&gt;</span>Sales Associate<span>&lt;/</span><span>title</span><span>&gt;</span>
       <span>&lt;/</span><span>employee</span><span>&gt;</span>
       <span>&lt;</span><span>employee</span><span>&gt;</span>
           <span>&lt;</span><span>name</span><span>&gt;</span>Steven Buchanan<span>&lt;/</span><span>name</span><span>&gt;</span>
           <span>&lt;</span><span>hireDate</span><span>&gt;</span>1955-03-04<span>&lt;/</span><span>hireDate</span><span>&gt;</span>
           <span>&lt;</span><span>title</span><span>&gt;</span>Manager<span>&lt;/</span><span>title</span><span>&gt;</span>
       <span>&lt;/</span><span>employee</span><span>&gt;</span>
       <span>&lt;</span><span>employee</span><span>&gt;</span>
           <span>&lt;</span><span>name</span><span>&gt;</span>Suyama Michael<span>&lt;/</span><span>name</span><span>&gt;</span>
           <span>&lt;</span><span>hireDate</span><span>&gt;</span>1963-07-02<span>&lt;/</span><span>hireDate</span><span>&gt;</span>
           <span>&lt;</span><span>title</span><span>&gt;</span>Sales Associate<span>&lt;/</span><span>title</span><span>&gt;</span>
       <span>&lt;/</span><span>employee</span><span>&gt;</span>
    <span>&lt;/</span><span>employees</span><span>&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>6.&nbsp;在 Visual Studio 中按<span class="label">&ldquo;<em><strong>F5</strong></em>&rdquo;，启动调试SharePoint项目，</span>SharePoint 网站将自动打开。单击<span class="label">&ldquo;<em><strong>网站操作</strong></em>&rdquo;，</span>然后单击<span class="label">&ldquo;<em><strong>更多选项</strong></em>&rdquo;，出现选择创建类型窗口。我们选择&ldquo;<em><strong>Web部件页</strong></em>&rdquo;类型，然后点击右边的<em><strong>&ldquo;创建</strong></em>&rdquo;按钮。</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060508181926.png" alt="" /></p>
<p><span class="label">&nbsp;</span></p>
<p><span class="label">7. 在新建Web部件页页面，输入页面的名称，然后点击&ldquo;<em><strong>创建</strong></em>&rdquo;按钮。</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060508194167.png" alt="" /></p>
<p><span class="label">&nbsp;</span></p>
<p><span class="label">8. Web部件页内容编辑页面被打开，见下图。</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060508194852.png" alt="" /></p>
<p><span class="label">&nbsp;</span></p>
<p>9. 点击页眉区域的&ldquo;<em><strong>添加Web部件</strong></em>&rdquo;链接，从&ldquo;<em><strong>类别</strong></em>&rdquo;列表中选择&ldquo;<em><strong>Custom</strong></em>&rdquo;，从&ldquo;<em><strong>Web部件</strong></em>&rdquo;列表中选择&ldquo;<em><strong>WebPart1</strong></em>&rdquo;（这里的名称就是我们在第3步添加的WebPart名称），然后点击&ldquo;<em><strong>添加</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060508195775.png" alt="" /></p>
<p>&nbsp;</p>
<p>10. WebPart1部件被成功的添加到了页面，下图红框。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060508200528.png" alt="" /></p>
<p>&nbsp;</p>
<p>11. 点击WebPart1右上角的箭头，然后点击&ldquo;<em><strong>编辑Web部件</strong></em>&rdquo;。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060508212128.png" alt="" /></p>
<p>&nbsp;</p>
<p>12.&nbsp;Web部件属性窗格在右侧被打开。展开<span class="label">&ldquo;<em><strong>杂项</strong></em>&rdquo;</span>节点，输入先前创建的 XML 文件的路径（<em><strong>C:\Shared Folders\Tutorials\HelloWebPart\HelloWebPart\data.xml</strong></em>），然后点击<span class="label">&ldquo;<em><strong>确定</strong></em>&rdquo;按钮</span>。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060508213482.png" alt="" /></p>
<p>&nbsp;</p>
<p>13. XML文件的内容被成功的显示在了WebPart1部件里。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060508214428.png" alt="" /></p>
<p>&nbsp;</p>
<p>14.&nbsp;点击WebPart1右上角的箭头，然后再点击<em><strong>&ldquo;Show Manager Only</strong></em>&rdquo;或&ldquo;<em><strong>Show All Employees</strong></em>&rdquo;，还可以实现显示数据范围的切换。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060508215278.png" alt="" /></p>]]></description></item><item><title>Windows分区改Linux系统实验</title><link>http://www.cnblogs.com/eastson/archive/2012/06/04/2531526.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 04 Jun 2012 01:06:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/04/2531526.html</guid><description><![CDATA[<p>最近碰到一个这样的问题：我家里有一台笔记本电脑，原先安装的Windows 7系统。该电脑只有一个硬盘，分区格式如下：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060208295376.png" alt="" /></p>
<p>&nbsp;</p>
<p>现在我想将操作系统换成Ubuntu，但是又不想重新分区硬盘，只是将Ubuntu安装到现在的C盘。于是我就用VMware做了下面的实验。</p>
<p>&nbsp;</p>
<h3>实验环境准备</h3>
<p>1. 使用VMWare新建一个Ubuntu虚拟机，硬盘20G。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060208391730.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 使用FreeDos（<a href="http://www.freedos.org/" target="_blank">http://www.freedos.org/</a>）启动虚拟机，将硬盘分成三个区。分区完毕后重启虚拟机，将三个分区做格式化。若有必要还可以在D盘和E盘放一些文件，方便Ubuntu系统安装好以后测试是否可以访问FAT32分区。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060209360444.png" alt="" /></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060209350718.png" alt="" /></p>
<p>&nbsp;</p>
<h3>实验过程</h3>
<p>1. 插入Ubuntu Live CD，启动虚拟机，执行Ubuntu安装。在选择磁盘空间分配方式时，我们选择&ldquo;<em><strong>手动指定分区（高级）</strong></em>&rdquo;。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060408342481.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 出现磁盘分区维护窗口。当前显示的是磁盘本身的分区方式，下图的就是原先的15G主分区，也就是C盘。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060408374381.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 将原先的FAT32格式主分区删除，变成下面的样子。<img src="http://pic002.cnblogs.com/images/2012/111826/2012060408391128.png" alt="" /></p>
<p>&nbsp;</p>
<p>4. 将空闲分区重新分配成三个区：swap、/和/home。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060408440350.png" alt="" /></p>
<p>&nbsp;</p>
<p>5. OK，后面安装正常执行。安装完毕重启虚拟机，看看我们原先的D盘和E盘是否可以正常访问。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060408472086.png" alt="" /></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060408463439.png" alt="" /></p>
<p>&nbsp;</p>
<h3>实验结论</h3>
<p>一个Windows系统，可以在不破坏现有资料分区（这里是D盘和E盘）的基础上将操作系统换成Ubuntu。Windows系统只需要一个主分区就可以将操作系统完全装起来，Ubuntu系统不行，swap交换分区、目录分区，实际上都是一个个独立的分区。在Windows转Ubuntu过程中，需要将Windows主分区拆成多个Ubuntu分区。</p>
<p>反过来想，我们是否可以大胆地这样假设：如果要Ubuntu转Windows，是否也可以将原来的Ubuntu分区删除，然后合并成一个Windows分区呢？</p>]]></description></item><item><title>为Empathy增加QQ支持</title><link>http://www.cnblogs.com/eastson/archive/2012/06/03/2533309.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 03 Jun 2012 14:33:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/03/2533309.html</guid><description><![CDATA[<p>操作系统是Ubuntu 12.04，Empathy版本是3.4.1。</p>
<p>&nbsp;</p>
<p>添加QQ插件步骤：</p>
<p>1.&nbsp;<em><strong>sudo add-apt-repository ppa:lainme/libqq</strong></em></p>
<p>2.&nbsp;<em><strong>sudo apt-get update</strong></em></p>
<p>3.&nbsp;<strong><em>sudo apt-get install libqq-pidgin</em></strong></p>
<p>以上三歩执行完成后，打开Empathy即时通讯程序，添加帐号协议选择QQ就OK了。</p>
<p>&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060322315835.png" alt="" /></p>]]></description></item><item><title>我的Ubuntu 12.04系统分区</title><link>http://www.cnblogs.com/eastson/archive/2012/06/02/2532350.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 02 Jun 2012 15:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/02/2532350.html</guid><description><![CDATA[<p>今天晚上我将我的笔记本电脑操作系统换成了Ubuntu 12.04。硬盘上的资料本来不多，先用移动硬盘备份起来。后来一狠心，就将整个硬盘的分区都删了，全部换成ext4格式。</p>
<p>&nbsp;</p>
<p>安装Ubuntu时采用的是手动分区，分区方案如下，这里贴出来供各位参考，希望能有Linux的高手提出指点意见。硬盘只有一块，500G，此次只用了150G左右，剩下的空间以后再用。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060223134245.png" alt="" /></p>]]></description></item><item><title>Chrome书签不能同步的问题处理方法</title><link>http://www.cnblogs.com/eastson/archive/2012/06/02/2532314.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 02 Jun 2012 14:36:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/02/2532314.html</guid><description><![CDATA[<p>我的公司电脑用的是Windows7系统，家里电脑用的是Ubuntu系统。为了让两台电脑的书签同步，我决定使用Chrome浏览器。可是发现由于部分Google网站国内不能访问，导致Chrome的书签总是同步不成功。该怎么解决呢？</p>
<p>&nbsp;</p>
<p>Ubuntu上解决方法：</p>
<p>1.&nbsp;进入<em><strong>Terminal</strong></em>，输入<em><strong>sudo gedit /etc/hosts</strong></em>。</p>
<p>2.&nbsp;在打开的文件尾部添加以下内容即可。</p>
<div class="cnblogs_code">
<pre>74.125.39.99<span style="color: #000000;"> chrome.google.com
</span>74.125.39.99<span style="color: #000000;"> clients2.google.com
</span>209.85.225.100<span style="color: #000000;"> clients4.google.com
</span>209.85.225.100<span style="color: #000000;"> docs.google.com
</span>209.85.225.100<span style="color: #000000;"> www.google.com
</span>209.85.225.100 tools.google.com</pre>
</div>
<p>&nbsp;</p>
<p>Windows上解决方法(与上面差不多)：</p>
<p>1. 找到<em><strong>C:\WINDOWS\system32\drivers\etc\hosts</strong></em>文件，用文本编辑器（如记事本）将其打开。</p>
<p>2. 将上面的代码内容添加到打开的文件尾部即可。</p>]]></description></item><item><title>Universal USB Installer - U盘操作系统安装工具</title><link>http://www.cnblogs.com/eastson/archive/2012/06/02/2532215.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 02 Jun 2012 12:54:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/06/02/2532215.html</guid><description><![CDATA[<p><a href="http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/" target="_blank">Universal USB Installer</a>是一个可以在U盘上安装Linux操作系统的工具，他可以选择一个Linux发行版并将它安装的USB闪盘中。Universal USB Installer使用起来十分方便，只需简单选择一个linux发行版的ISO文件和USB盘符，然后，点击安装就可以将Linux操作系统安装到U盘中了。</p>
<p><span>&nbsp;</span></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012060220514967.png" alt="" /></p>
<p><span>&nbsp;</span></p>]]></description></item><item><title>SharePoint 2010的数据库在哪？</title><link>http://www.cnblogs.com/eastson/archive/2012/05/31/2528817.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 31 May 2012 09:26:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/31/2528817.html</guid><description><![CDATA[<p>以前用过SharePoint 2007，知道SharePoint 2007创建应用程序时自动建立的数据库都放在<em><strong>SQL Server的默认实例（MSSQLSERVER）</strong></em>下。这两天安装了SharePoint 2010，可以一直找不到这些数据库，感觉好奇怪。</p>
<p>&nbsp;</p>
<p>后来还是在&ldquo;<em><strong>服务</strong></em>&rdquo;里面发现了玄机。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053117175771.png" alt="" /></p>
<p>&nbsp;</p>
<p>原来SharePoint 2010在配置时<em><strong>自动地创建一个名为SharePoint的实例</strong></em>，而且内存还非常的高，800多兆。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053117202498.png" alt="" /></p>
<p>&nbsp;</p>
<p>在<em><strong>SQL Server Management Studio</strong></em>我们也可以找到这个SharePoint实例。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053117220744.png" alt="" /></p>
<p>&nbsp;</p>
<p>SharePoint 2010创建Web应用程序时也可以发现默认的SQL Server实例是SharePoint。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053117241772.png" alt="" /></p>]]></description></item><item><title>FlexPaper 在线文档显示组件</title><link>http://www.cnblogs.com/eastson/archive/2012/05/31/2528019.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 31 May 2012 02:23:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/31/2528019.html</guid><description><![CDATA[<p><span class="hilite1">FlexPaper</span>是一个开源轻量级的在浏览器上显示各种文档的组件，被设计用来与<a href="http://www.oschina.net/p/swftools" target="_blank">PDF2SWF</a>一起使用， 使在Flex中显示PDF成为可能，而这个过程并无需PDF软件环境的支持。它可以被当做Flex的库来使用。</p>
<p>&nbsp;</p>
<p>另外你也可以通过将一些例如Word、PPT等文档转成PDF，然后实现在线浏览。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053110220219.png" alt="" /></p>
<p>&nbsp;</p>
<p>一. 使用PDF2SWF准备好你的文档</p>
<p>首先要将PDF转成SWF，这步可以使用开源的<a href="http://www.oschina.net/p/swftools" target="_blank">SwfTools</a>自动完成</p>
<p>1.下载安装 SwfTools，当前最新版本是0.9<br />2. 转换PDF到SWF，可以通过命令行的方式，例如将Paper3.pdf转换成Paper3.swf<br />C:\SWFTools\pdf2swf Paper3.pdf -o Paper3.swf</p>
<p>&nbsp;</p>
<p>二. 使用已经编译好的<span class="hilite1">FlexPaper</span>的flash版本浏览你的文档</p>
<ol>
<li>下载并解压出已经编译好的<span class="hilite1">FlexPaper</span></li>
<li>zip文件包含一个例子文件叫做FlexPaperViewer.html，它向你展示了需要传给<span class="hilite1">FlexPaper</span>的 基本参数&nbsp;<br />var params = {<br />SwfFile : "Paper.swf",<br />Scale : 0.6<br />}<br />swfobject.embedSWF("FlexPaperViewer.swf","cb","500","500","9.0.0","js/swfobject/expressInstall.swf", params);<br /><br />//SwfFile参数是你想显示的文件，Scale是0-1之间的数，表示显示的放大参数</li>
<li>复制你创建出来的swf和PDF2SWF到解压缩出的相同目录</li>
<li>确定你添加了FlexPaperViewer.swf</li>




</ol>
<p>&nbsp;</p>
<p>三. 在Flex中使用<span class="hilite1">FlexPaper</span></p>
<p>1. 下载<span class="hilite1">FlexPaper</span>&nbsp;SWC，添加到你的Flex项目libs中<br />2. 复制你用PDF2SWF创建的SWF到你的bin-debug目录，如Paper3.swf，添加<span class="hilite1">FlexPaper</span>组 件到你的flex代码中Xml代码</p>
<p>&lt;?xml version="1.0" encoding="utf-8"?&gt;<br />&lt;mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"&nbsp;<br />&nbsp;&nbsp;&nbsp; layout="absolute"<br />&nbsp;&nbsp;&nbsp; width="800" height="500"<br />&nbsp;&nbsp;&nbsp; xmlns:flexpaper="com.devaldi.controls.flexpaper.*"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp; &lt;flexpaper:FlexPaperViewer width="800" height="500"&nbsp;<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Scale="1" SwfFile="Paper3.swf" /&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&lt;/mx:Application&gt;</p>]]></description></item><item><title>SharePoint Server 2010安装过程</title><link>http://www.cnblogs.com/eastson/archive/2012/05/31/2526221.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 31 May 2012 02:11:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/31/2526221.html</guid><description><![CDATA[<p>SharePoint Server&nbsp;2010安装除了需要Windows Server 2008 x64和SQL Server 2008 R2之外，还需要操作系统另外再打很多的补丁（参考文档<a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/jianyus/archive/2011/10/28/2228212.html" target="_blank">SharePoint2010安装简介及相关补丁下载</a>） 。本文介绍使用<em><strong>SharePoint Server&nbsp;2010产品准备工具</strong></em>实现自动这些必要组件的自动安装。</p>
<p>&nbsp;</p>
<p>准备好SharePoint Server&nbsp;2010安装光盘，放入光驱。<em><strong>请注意，不要直接执行setup.exe，应该执行splash.hta，见下图。</strong></em></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053013585048.png" alt="" /></p>
<p>&nbsp;</p>
<h3>自动安装必备组件</h3>
<p>1. 从SharePoint Server 2010安装菜单中点击&ldquo;<em><strong>安装必备软件</strong></em>&rdquo;，启动<em><strong>SharePoint Server&nbsp;2010产品准备工具</strong></em>安装程序。安装程序会检查系统缺少的必备组件，点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053014021898.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 确认软件许可条款。我们选择&ldquo;<em><strong>我接受许可协议的条款</strong></em>&rdquo;，然后点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053014052376.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 开始安装必备组件。<em><strong>请注意，安装过程中会下载缺少的必备组件，所以请保持网络连接正常。</strong></em></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053014084497.png" alt="" /></p>
<p>&nbsp;</p>
<p>4. 必备组件安装完毕，点击&ldquo;<em><strong>完成</strong></em>&rdquo;按钮关闭。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053014085333.png" alt="" /></p>
<p>&nbsp;</p>
<h3>安装SharePoint Server 2010</h3>
<p>1. 从SharePoint Server 2010安装菜单中点击&ldquo;<em><strong>安装 SharePoint Server</strong></em>&rdquo;，启动SharePoint安装程序。首先要求输入SharePoint Server 2010的产品密钥，输入正确后，点击右边的&ldquo;<em><strong>继续</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053014182255.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 确认软件许可条款。我们选择&ldquo;<em><strong>我接受此协议的条款</strong></em>&rdquo;，然后点击&ldquo;<em><strong>继续</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053014203298.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 选择安装类型。因为我们只是单一的SharePoint服务器，所以我们选择&ldquo;<em><strong>独立</strong></em>&rdquo;。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053014212915.png" alt="" /></p>
<p>&nbsp;</p>
<p>4. 开始安装，此安装过程耗时会比较长。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053014231752.png" alt="" /></p>
<p>&nbsp;</p>
<p>5. 安装完毕。我们可以选择是否&ldquo;<em><strong>立即运行SharePoint产品配置向导</strong></em>&rdquo;，点击&ldquo;<em><strong>关闭</strong></em>&rdquo;按钮结束SharePoint安装。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053015080213.png" alt="" /></p>
<p>&nbsp;</p>
<h3>配置SharePoint Server 2010</h3>
<p>1. 从&ldquo;<em><strong>开始</strong></em>&rdquo;菜单打开&ldquo;<em><strong>SharePoint 2010 产品配置向导</strong></em>&rdquo;。点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053109591478.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 向导会提示在配置过程中需要重启IIS等服务，选择&ldquo;<em><strong>是</strong></em>&rdquo;继续执行。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053109595260.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 开始执行配置，配置任务共有10项。此过程超级耗时，我用了差不多1个小时，估计还是内存太小了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053110011117.png" alt="" /></p>
<p>&nbsp;</p>
<p>4. 配置完毕，点击&ldquo;<em><strong>关闭</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053110041283.png" alt="" /></p>
<p>&nbsp;</p>
<p>5. 配置向导在关闭后会自动打卡浏览器导航到<em><strong>默认的SharePoint Web应用程序主页</strong></em>。如果浏览器打开&ldquo;<em><strong>Windows 安全</strong></em>&rdquo;对话框提示输入用户名和密码，则输入登录Windows的系统帐号和密码就可以了。</p>
<p>&nbsp;</p>
<h3>配置默认SharePoint Web应用程序</h3>
<p>SharePoint 2010安装完毕后与SharePoint 2007稍有不同。SharePoint 2007没有创建默认Web应用程序和网站集，<em><strong>SharePoint 2010会自动创建端口为80的默认Web应用程序和网站集</strong></em>，安装完毕后直接在浏览器浏览<em><strong>http://localhost/</strong></em>就可以访问默认Web应用程序主页了。</p>
<p>&nbsp;</p>
<p>1. 开启浏览器，打开网址<em><strong>http://localhost/</strong></em>，出现默认Web应用程序的模板选择页面。因为这是我们首次访问该Web应用程序，SharePoint需要为该Web应用程序配置一些参数。选择一个模板，点击&rdquo;<em><strong>确定</strong></em>&ldquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053110061668.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 网站配置处理，此过程需要1~2分钟。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053114121578.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 配置完毕，SharePoint自动导航到该Web应用程序的首页。以后在浏览器访问<em><strong>http://localhost/</strong></em>出现的就不是模板选择页，而是该首页了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053114131953.png" alt="" /></p>
<p>&nbsp;</p>
<h3>启动SharePoint 2010 管理中心</h3>
<p>从开始菜单中运行&ldquo;<em><strong>SharePoint 2010 管理中心</strong></em>&rdquo;，正常的结果应该如下图：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053113535114.png" alt="" /></p>
<p>&nbsp;</p>
<p>因为我是用虚拟机安装的SharePoint Server 2010，分配的内存只有2G。如果出现下图这样的&ldquo;<em><strong>意外错误</strong></em>&rdquo;，很有可能都是系统内存不足造成的。这个时候增加系统内存，重启虚拟机，多试几次应该就可以了。感觉如果要装SharePoint Server 2010，内存至少要4G才有可能跑得比较顺畅。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053113564833.png" alt="" /></p>]]></description></item><item><title>SharePoint 2010相关文章索引</title><link>http://www.cnblogs.com/eastson/archive/2012/05/30/2526325.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 30 May 2012 06:52:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/30/2526325.html</guid><description><![CDATA[<p>此文的目的是希望能将与SharePoint有关的所有文章做一个索引，方便以后的学习和查询。&nbsp;</p>
<p>&nbsp;</p>
<h3>SharePoint安装系列</h3>
<p><a id="homepage1_HomePageDays_DaysList_DayItem_1_DayList_1_TitleUrl_1" href="http://www.cnblogs.com/eastson/archive/2012/05/29/2523527.html" target="_blank">Windows Server 2008 R2安装过程</a></p>
<p><a id="homepage1_HomePageDays_DaysList_DayItem_1_DayList_1_TitleUrl_0" href="http://www.cnblogs.com/eastson/archive/2012/05/29/2524264.html" target="_blank">SQL Server 2008 R2 安装过程</a></p>
<p><a id="homepage1_HomePageDays_DaysList_DayItem_0_DayList_0_TitleUrl_0" href="http://www.cnblogs.com/eastson/archive/2012/05/30/2525831.html" target="_blank">Visual Studio 2010安装过程</a></p>
<p><a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/archive/2012/05/31/2526221.html" target="_blank">SharePoint Server 2010安装过程</a></p>
<p>&nbsp;</p>
<h3>SharePoint相关文章</h3>
<p><a href="http://technet.microsoft.com/zh-cn/dd787677(l=zh-cn)" target="_blank">SharePoint Server 2007管理与应用系列讲座</a></p>
<p><a href="http://wenku.baidu.com/view/112aa0cf050876323112129b.html" target="_blank">SharePoint 2007图文开发教程</a>&nbsp;</p>
<p class="title"><a href="http://technet.microsoft.com/zh-cn/library/ms367238" target="_blank">Developing Web Parts in SharePoint Foundation</a></p>
<p class="title"><a href="http://technet.microsoft.com/en-us/library/cc263199.aspx" target="_blank">Technical diagrams (SharePoint Server 2010)</a></p>
<p class="title"><a href="http://technet.microsoft.com/zh-cn/library/bb326356" target="_blank">将 Reporting Services 配置为 SharePoint 2010 集成模式</a></p>
<p class="title"><a href="http://msdn.microsoft.com/zh-cn/library/bb326286.aspx" target="_blank">在 SharePoint Web 应用程序中设置报表服务器操作的权限</a></p>
<p class="title"><a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/jonyzhu/archive/2012/05/30/2523608.html" target="_blank">用 SharePoint 实现实用的请假管理</a></p>
<p class="title"><a href="http://technet.microsoft.com/zh-cn/library/ms452873" target="_blank">专题：一位微软MVP的SharePoint 2010体验笔记</a></p>
<p class="cdTitleEx"><a href="http://office.microsoft.com/zh-cn/infopath-help/HA010277692.aspx?CTT=1" target="_blank">使用 InfoPath 和 SharePoint 创建会议笔记系统</a></p>
<p><a href="http://www.amrein.com/apps/page.asp?Q=5728" target="_blank">Free Microsoft Sharepoint Web Parts</a></p>
<p><a href="http://blogs.msdn.com/b/bethmassi/archive/2010/01/28/creating-a-sharepoint-visual-web-part-using-visual-studio-2010.aspx" target="_blank">Creating a SharePoint Visual Web Part using Visual Studio 2010</a></p>
<p class="postTitle"><a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/yunliang1028/archive/2012/01/15/2323051.html" target="_blank">SharePoint 2010 集成 ReportingServices</a></p>
<p class="title"><a href="http://msdn.microsoft.com/zh-cn/library/ee210689(v=sql.105)" target="_blank">SQL Server 与 SharePoint 的集成</a></p>
<p class="postTitle"><a id="cb_post_title_url" href="http://www.cnblogs.com/arnold/archive/2011/12/31/2308861.html" target="_blank">SSRS中报表参数设置注意事项</a></p>
<p><strong>&nbsp;</strong></p>
<h3><strong>MSDN上有关于SharePoint的文章</strong></h3>
<p class="title"><a href="http://msdn.microsoft.com/zh-cn/library/ms473633.aspx" target="_blank">服务器和网站体系结构：对象模型概述</a></p>
<p class="title"><a href="http://msdn.microsoft.com/zh-cn/library/cc768557" target="_blank">Microsoft SharePoint Foundation 的物理对象层次结构</a></p>
<p class="title"><a href="http://msdn.microsoft.com/zh-cn/library/cc768564" target="_blank">Microsoft SharePoint Foundation 的服务层次结构</a></p>
<p class="title"><a href="http://msdn.microsoft.com/zh-cn/library/cc768619" target="_blank">Microsoft SharePoint Foundation 的内容层次结构</a></p>
<p class="title"><a href="http://msdn.microsoft.com/zh-cn/library/ee534971" target="_blank">SharePoint Foundation 构造块</a></p>
<p class="title"><a href="http://msdn.microsoft.com/zh-cn/library/ee539092" target="_blank">SharePoint Foundation 开发详解</a></p>
<p class="title"><a href="http://msdn.microsoft.com/zh-cn/library/ff803420" target="_blank">SharePoint Foundation 2010 代码示例</a></p>
<p class="title"><a href="http://msdn.microsoft.com/zh-cn/library/ff512781" target="_blank">SharePoint Server 2010 代码示例</a></p>
<p class="title"><a href="http://msdn.microsoft.com/zh-cn/library/ee330921" target="_blank">Visual Studio 中的 SharePoint 开发</a></p>
<p class="title"><a href="http://msdn.microsoft.com/zh-cn/library/ee231579" target="_blank">为 SharePoint 创建 Web 部件</a></p>
<p class="title"><a href="http://msdn.microsoft.com/zh-cn/library/ee231551" target="_blank">演练：为 SharePoint 创建 Web 部件</a></p>
<p><strong>&nbsp;</strong></p>
<h3>SharePoint相关网站</h3>
<p><a href="http://msdn.microsoft.com/zh-cn/sharepoint/default" target="_blank">SharePoint 开发中心</a></p>
<p><a href="http://msdn.microsoft.com/zh-cn/library/ms123401" target="_blank">MSDN Library（中文）</a></p>
<p><a href="http://msdnwebcast.net/" target="_blank">MSDN WebCast （</a><a href="http://msdn.microsoft.com/zh-cn/library/ms123401" target="_blank">中文</a><a href="http://msdnwebcast.net/" target="_blank">）</a></p>
<p><a href="http://technet.microsoft.com/zh-cn/dd630684.aspx" target="_blank">TechhNet中文网络广播</a></p>
<p><a href="http://eallies.blog.51cto.com/" target="_blank">Denny_Zhang&nbsp;博客</a></p>
<div class="logo_blogname">
<div class="blogName">
<div class="logo_blogname">
<div class="blogName">
<div class="logo_blogname">
<div class="blogName">
<p><a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/jonyzhu/" target="_blank">Software Craft&nbsp;博客</a></p>
<p><a id="Header1_HeaderTitle" class="headermaintitle" href="http://www.cnblogs.com/kaneboy/" target="_blank">Kaneboy 博客</a></p>
<p><a href="http://www.cnblogs.com/ahjxxy/category/321624.html" target="_blank">小师傅 博客</a></p>
<p><a href="http://www.cnblogs.com/yunliang1028/category/315910.html" target="_blank">yun_liang1028&nbsp;博客</a>&nbsp;</p>
</div>
</div>
</div>
</div>
</div>
</div>]]></description></item><item><title>Visual Studio 2010安装过程</title><link>http://www.cnblogs.com/eastson/archive/2012/05/30/2525831.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 30 May 2012 02:26:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/30/2525831.html</guid><description><![CDATA[<p>本文安装的是<em><strong>Visual Studio 2010&nbsp;</strong><strong>Ultimate版</strong></em>，也就是<em><strong>旗舰版</strong></em>。</p>
<p>&nbsp;</p>
<h3>Visual Studio 2010的安装</h3>
<p>1. 准备好Visual Studio 2010光盘，放入光驱，执行<em><strong>setup.exe</strong></em>文件开始安装。点击"<em><strong>安装Microsoft Visual Studio 2010</strong></em>"继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053010152442.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 欢迎画面。我可以可以选择是否向Microsoft发送安装信息，点击&ldquo;<em><span style="text-decoration: underline;"><strong>下一步</strong></span></em>&rdquo;按钮继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053010172421.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 确认软件许可条款。安装程序会检查安装Visual Studio 2010所必需的组件，点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮开始安装这些必需组件。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053010181875.png" alt="" /></p>
<p>&nbsp;</p>
<p>4. 选择安装方式和安装路径。我们选择&ldquo;<em><strong>自定义</strong></em>&rdquo;安装，然后点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053010202560.png" alt="" /></p>
<p>&nbsp;</p>
<p>5. 选择要安装的功能，点击&ldquo;<em><strong>安装</strong></em>&rdquo;按钮开始执行安装。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053010212631.png" alt="" /></p>
<p>&nbsp;</p>
<p>6. 执行安装过程，这个过程比较耗时。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053010224586.png" alt="" /></p>
<p>&nbsp;</p>
<p>7. 安装执行完毕，点击&ldquo;<em><strong>完成</strong></em>&rdquo;按钮结束整个安装过程。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012053010233238.png" alt="" /></p>
<p>&nbsp;</p>
<h3>MSDN for&nbsp;Visual Studio 2010的安装</h3>
<p>Visual Studio 2010中的MSDN帮助文档较之前版本有了很大的不同，它使用了Microsoft Help Viewer。在安装Visual Studio 2010的时候会自动安装Microsoft Help Viewer。相关的安装过程可以参考下面几篇文档：</p>
<ul>
<li><a href="http://blog.csdn.net/bitfan/article/details/5484938" target="_blank">MSDN for 2010的那些麻烦事</a></li>
<li><a href="http://blog.csdn.net/bitfan/article/details/5946662" target="_blank">再谈MSDN Library For Visual Studio 2010</a></li>
<li><a id="cb_post_title_url" class="postTitle2" href="http://www.cnblogs.com/snowdream/archive/2010/05/10/help-documentation-in-visual-studio-2010.html" target="_blank">Visual Studio 2010 中的 MSDN 帮助文档</a></li>
</ul>]]></description></item><item><title>SQL Server 2008 R2 安装过程</title><link>http://www.cnblogs.com/eastson/archive/2012/05/29/2524264.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 29 May 2012 09:46:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/29/2524264.html</guid><description><![CDATA[<p><em><strong>Window Server 2008 x64</strong></em>安装完毕后，我们接着来安装<em><strong>SQL Server 2008 R2</strong></em>。</p>
<p>&nbsp;</p>
<p>1. 将<em><strong>SQL Server 2008 R2</strong></em>安装光盘插入光驱，点击<em><strong>setup.exe</strong></em>文件执行安装。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917075867.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. SQL Server 2008 R2<em><strong>安装中心</strong></em>被打开。从左侧分类中选择&ldquo;<em><strong>安装</strong></em>&rdquo;，然后再从右侧选择&ldquo;<em><strong>全新安装或向现有安装添加功能</strong></em>&rdquo;。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917212252.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 安装程序支持规则检查，检查安装SQL Server 2008 R2所需的必要软件是否都已安装。点击&ldquo;<em><strong>确定</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917211089.png" alt="" /></p>
<p>&nbsp;</p>
<p>4. 输入产品密钥。如果没有密钥，可以通过&ldquo;<em><strong>指定可用版本</strong></em>&rdquo;安装180天的试用版本。点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917210017.png" alt="" /></p>
<p>&nbsp;</p>
<p>5. 确认软件许可条款。我们选择&ldquo;<em><strong>我接受许可条款</strong></em>&rdquo;，然后点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917220169.png" alt="" /></p>
<p>&nbsp;</p>
<p>6. 安装SQL Server 2008 R2必须的组件。点击&ldquo;<em><strong>安装</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917234922.png" alt="" /></p>
<p>&nbsp;</p>
<p>7. 安装程序支持规则检查，如果检查全部通过，则点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917245644.png" alt="" /></p>
<p>&nbsp;</p>
<p>8. 设置SQL Server 2008 R2角色。我们选择&ldquo;<em><strong>SQL Server 功能安装</strong></em>&rdquo;，然后点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917262932.png" alt="" /></p>
<p>&nbsp;</p>
<p>9. 选择要安装的功能。我们选择安装全部功能，然后点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917280334.png" alt="" /></p>
<p>&nbsp;</p>
<p>10.&nbsp;安装规则检查，如果检查全部通过，则点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917284819.png" alt="" /></p>
<p>&nbsp;</p>
<p>11. 指定实例名称和实例安装目录。我们选择&ldquo;<em><strong>默认实例</strong></em>&rdquo;，其它都用默认值，然后点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917293482.png" alt="" /></p>
<p>&nbsp;</p>
<p>12. 检查磁盘空间要求。确认安装磁盘空间是否足够，然后点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917312642.png" alt="" /></p>
<p>&nbsp;</p>
<p>13. 指定服务帐户和启动类型。设置完毕后点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917322814.png" alt="" /></p>
<p>&nbsp;</p>
<p>14. 配置数据库引擎。我们选择<em><strong>混合验证模式</strong></em>，然后<em><strong>添加当前用户为SQL Server管理员</strong></em>。设置完毕后点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917333690.png" alt="" /></p>
<p>&nbsp;</p>
<p>15. 配置Analysis Services。我们<em><strong>添加当前用户为管理员</strong></em>，然后点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917350026.png" alt="" /></p>
<p>&nbsp;</p>
<p>16. 配置Reporting Services。我们选择&ldquo;<em><strong>安装但不配置报表服务器</strong></em>&rdquo;，然后点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917355917.png" alt="" /></p>
<p>&nbsp;</p>
<p>17. 设置是否向Microsoft发送错误报关，点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮继续。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917375257.png" alt="" /></p>
<p>&nbsp;</p>
<p>18. 配置规则检查，如果检查全部通过，则点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917385976.png" alt="" /></p>
<p>&nbsp;</p>
<p>19. 准备安装，确认安装设置。点击&ldquo;<em><strong>安装</strong></em>&rdquo;按钮执行安装。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917395593.png" alt="" /></p>
<p>&nbsp;</p>
<p>20. 执行安装，这个安装过程时间比较长。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917405249.png" alt="" /></p>
<p>&nbsp;</p>
<p>21. 所有安装过程执行完毕后，安装程序就会提示完成安装。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052917421492.png" alt="" /></p>]]></description></item><item><title>Windows Server 2008 R2安装过程</title><link>http://www.cnblogs.com/eastson/archive/2012/05/29/2523527.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 29 May 2012 03:41:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/29/2523527.html</guid><description><![CDATA[<p>公司这段时间要测试SharePoint 2010，为了配合服务器的安装，使用VMWare安装了一个Windows Server 2008 R2虚拟操作系统。</p>
<p>&nbsp;</p>
<h3>创建VMware虚拟机</h3>
<p>1. 打开VMWare 7.0，从菜单中选择<em><strong>File &gt; New &gt; Virtual Machine</strong></em>，启动虚拟机新建向导。选择<em><strong>Typical(recommended)</strong></em>，然后点击<em><strong>Next</strong></em>按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052910421696.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 选择虚拟机操作系统的安装方式，我们选择<em><strong>I will install the operation system later</strong></em>，然后点击<em><strong>Next</strong></em>按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052910433983.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 选择虚拟机操作系统的类型，我们选择<em><strong>Windows 2008 Server x64</strong></em>，然后点击<em><strong>Next</strong></em>按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052910454173.png" alt="" /></p>
<p>&nbsp;</p>
<p>4. 指定虚拟机的名称以及存放位置，整个操作系统安装完成后预计在40G以内，所有最好选择有足够空间的磁盘分区。点击<em><strong>Next</strong></em>按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052910482551.png" alt="" /></p>
<p>&nbsp;</p>
<p>5. 指定虚拟机磁盘空间大小，我们选择默认大小，然后点击<em><strong>Next</strong></em>按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052910533670.png" alt="" /></p>
<p>&nbsp;</p>
<p>6. 确认配置参数，点击<em><strong>Finish</strong></em>按钮确认创建虚拟机。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052910541453.png" alt="" /></p>
<p>&nbsp;</p>
<p>7. 虚拟机创建成功，点击P<em><strong>ower on the virtual machine</strong></em>就可以启动刚创建的虚拟机了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052910575291.png" alt="" /></p>
<p>&nbsp;</p>
<h3>安装Windows Server 2008 R2操作系统</h3>
<p>1. 准备好Windows Server 2008 R2操作系统的安装光盘。我这里是ISO文件，可以直接选择挂载镜像文件的方式。双击虚拟机的CD/DVD设备（见下图红色方框），出现Virtual Machine Settings对话框。选择Use ISO image file，指定ISO文件所在的位置，然后点击OK按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911080641.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 点击P<em><strong>ower on the virtual machine，</strong></em>启动<em><strong>Windows Server 2008 x64</strong></em>虚拟机。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911021832.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 配置地区选项，我们选择默认值，然后点击"<em><strong>下一步</strong></em>"按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911103770.png" alt="" /></p>
<p>&nbsp;</p>
<p>4. 点击&ldquo;<em><strong>现在安装</strong></em>&rdquo;，确认安装过程开始。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911120977.png" alt="" /></p>
<p>&nbsp;</p>
<p>5. 选择服务器类型，我们选择<em><strong>Windows Server 2008 R2 Standard(完全安装)</strong></em>，然后点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911131477.png" alt="" /></p>
<p>&nbsp;</p>
<p>6. 确认软件许可条款，我们选择&ldquo;<em><strong>我接受许可条款</strong></em>&rdquo;，然后点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911143457.png" alt="" /></p>
<p>&nbsp;</p>
<p>7. 选择安装类型，我们选择&ldquo;<em><strong>自定义（高级）</strong></em>&rdquo;，安装Windows的新副本。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911160162.png" alt="" /></p>
<p>&nbsp;</p>
<p>8. 选择操作系统安装到哪一个磁盘分区，这个需要根据实际情况确定。选择完成后，然后点击&ldquo;<em><strong>下一步</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911173445.png" alt="" /></p>
<p>&nbsp;</p>
<p>9. 安装程序开始复制文件安装，这个过程时间比较长，我的虚拟机使用默认配置，耗时在30分钟左右。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911193213.png" alt="" /></p>
<p>&nbsp;</p>
<p>10. 安装过程执行完毕，操作系统自动重启。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911223554.png" alt="" /></p>
<p>&nbsp;</p>
<p>11. 操作系统要求用户首次登入之前必须修改密码，点击&ldquo;<em><strong>确认</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911230427.png" alt="" /></p>
<p>&nbsp;</p>
<p>12. 输入管理员Administrator的新密码，然后点击密码输入框旁边的蓝色确认按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911242950.png" alt="" /></p>
<p>&nbsp;</p>
<p>13. 管理员密码修改成功，点击&ldquo;<em><strong>确认</strong></em>&rdquo;按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911260569.png" alt="" /></p>
<p>&nbsp;</p>
<p>14. 操作系统初始化管理员个人设置。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911264389.png" alt="" /></p>
<p>&nbsp;</p>
<p>15. 初始化设置完毕，就可以看到管理员的个人桌面了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911291071.png" alt="" /></p>
<p>&nbsp;</p>
<h3>激活Windows Server 2008 R2</h3>
<p>1. 刚安装完成的<em><strong>Windows Server 2008 R2</strong></em>是没有激活的，还需要执行激活程序。下载<em><strong>Windows Loader.exe</strong></em>激活程序，通过VMWare共享目录的方式（参考文档<a id="ArchiveDay1_SingleDay_DayList_TitleUrl_0" href="http://www.cnblogs.com/eastson/archive/2012/05/29/2523542.html" target="_blank">VMWare实现共享目录</a>）让虚拟机执行此程序，点击<em><strong>Install</strong></em>按钮。此过程会花几分钟时间，执行完毕后重启虚拟机。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911350075.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 查看<em><strong>Windows Server 2008 R2</strong></em>是否已被激活。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052911375687.png" alt="" /></p>]]></description></item><item><title>VMWare实现共享目录</title><link>http://www.cnblogs.com/eastson/archive/2012/05/29/2523542.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 29 May 2012 02:37:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/29/2523542.html</guid><description><![CDATA[<p><span>我用<em><strong>VMWare 7.0</strong></em>安装了一个虚拟<em><strong>Windows Server 2008</strong></em>操作系统，想在虚拟机里面访问宿主机的目录。</span></p>
<p><span>&nbsp;</span></p>
<p>解决方法如下：</p>
<p>1. 在虚拟机里面安装<em><strong>VMware Tools</strong></em>。</p>
<p>&nbsp;</p>
<p>2. 打开VMWare菜单<em><strong>VM &gt; Settings</strong></em>，找到<em><strong>Options</strong></em>选项页，里面有一个<em><strong>Shared&nbsp;Folders</strong></em>功能。选择<em><strong>Always enabled</strong></em>，然后添加需要共享的目录。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052910352512.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 在虚拟机里面访问电脑<em><strong>vmware-host</strong></em>，就可以看到宿主机共享的目录了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052910373492.png" alt="" /></p>]]></description></item><item><title>Java反编译器 Java Decompiler</title><link>http://www.cnblogs.com/eastson/archive/2012/05/27/2519904.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 27 May 2012 02:42:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/27/2519904.html</guid><description><![CDATA[<p>这款反编译器叫 "Java Decompiler", 由 Pavel Kouznetsov开发，目前最新版本为0.3.3。它由 C++开发，并且<span>官方可以下载</span>&nbsp;windows、linux和苹果Mac Os三个平台的可执行程序。</p>
<p><img src="http://java.decompiler.free.fr/sites/default/screenshots/screenshot1.png" alt="" width="660" height="564" /></p>
<p>&nbsp;</p>
<p>其有下面几个功能：</p>
<p>&nbsp; 1. 支持对整个Jar文件进行反编译，并本源代码可直接点击进行相关代码的跳转<br />&nbsp; 2. 支持众多Java编译器的反编译(支持泛型， Annotation和enum枚举类型)</p>
<ul>
<ul>
<li>jdk1.1.8</li>
<li>jdk1.3.1</li>
<li>jdk1.4.2</li>
<li>jdk1.5.0</li>
<li>jdk1.6.0</li>
<li>jikes-1.22</li>
<li>harmony-jdk-r533500</li>
<li>Eclipse Java Compiler v_677_R32x, 3.2.1 release</li>
<li>jrockit90_150_06</li>




</ul>




</ul>
<p>&nbsp;</p>
<p>官方网站：<a href="http://java.decompiler.free.fr/" target="_blank">http://java.decompiler.free.fr/</a></p>]]></description></item><item><title>Groovy系列 - Groovy集合</title><link>http://www.cnblogs.com/eastson/archive/2012/05/27/2519781.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 27 May 2012 00:49:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/27/2519781.html</guid><description><![CDATA[<p>在Groovy脚本里面，集合Collection可以理解为泛指Map和List。</p>
<p>&nbsp;</p>
<p>List的定义：</p>
<div class="cnblogs_code">
<pre>def list = [1, 2, 'hello', <span style="color: #0000ff;">new</span><span style="color: #000000;"> java.util.Date()]
</span><span style="color: #0000ff;">assert</span> list.size() == 4
<span style="color: #0000ff;">assert</span> list.get(2) == 'hello'
<span style="color: #0000ff;">assert</span> list[2] == 'hello'</pre>
</div>
<p>&nbsp;</p>
<p>Map的定义：</p>
<div class="cnblogs_code">
<pre>def map = ['name':'James', 'location':'London'<span style="color: #000000;">]
</span><span style="color: #0000ff;">assert</span> map.size() == 2
<span style="color: #0000ff;">assert</span> map.get('name') == 'James'
<span style="color: #0000ff;">assert</span> map['name'] == 'James'</pre>
</div>
<p>&nbsp;</p>
<h3>collection.each(closure)</h3>
<p>遍历，对集合中每项都执行一次闭包，无返回值。</p>
<div class="cnblogs_code">
<pre>[1, 2, 3].each({item -&gt; print "${item}-"})<br />//1-2-3-</pre>
</div>
<p>&nbsp;</p>
<h3>collection.collect(closure)</h3>
<p>收集，对集合中每项都执行一次闭包，将每项执行的结果组合成一个新的集合然后返回。</p>
<div class="cnblogs_code">
<pre>def value = [1, 2, 3].collect { it * 2<span style="color: #000000;"> }
</span><span style="color: #0000ff;">assert</span> value == [2, 4, 6]</pre>
</div>
<p>&nbsp;</p>
<h3>collection.find(closure)</h3>
<p>查找，返回闭包执行结果为true的第一项。</p>
<div class="cnblogs_code">
<pre>def value = [1, 2, 3].find { it &gt; 1<span style="color: #000000;"> }
</span><span style="color: #0000ff;">assert</span> value == 2</pre>
</div>
<p>&nbsp;</p>
<h3>collection.findAll(closure)</h3>
<p>查找全部，返回闭包执行结果为true的所有项。</p>
<div class="cnblogs_code">
<pre>def value = [1, 2, 3].findAll { it &gt; 1<span style="color: #000000;"> }
</span><span style="color: #0000ff;">assert</span> value == [2, 3]</pre>
</div>
<p>&nbsp;</p>
<h3>collection.inject(first, closure)</h3>
<p><span>allows you to pass a value into the first iteration and then pass the result of that iteration into the next iteration and so on. This is ideal for counting and other forms of processing</span></p>
<div class="cnblogs_code">
<pre>def value = [1, 2, 3].inject('counting: ') { str, item -&gt; str +<span style="color: #000000;"> item }
</span><span style="color: #0000ff;">assert</span> value == "counting: 123"<span style="color: #000000;">

value </span>= [1, 2, 3].inject(0) { count, item -&gt; count +<span style="color: #000000;"> item }
</span><span style="color: #0000ff;">assert</span> value == 6</pre>
</div>
<p>&nbsp;</p>
<h3>collection.every(closure)</h3>
<p>检查每一个，如果集合中每项执行闭包结果都为true，则返回true，否则返回false。</p>
<div class="cnblogs_code">
<pre>def value = [1, 2, 3].every { it &lt; 5<span style="color: #000000;"> }
</span><span style="color: #0000ff;">assert</span><span style="color: #000000;"> value

value </span>= [1, 2, 3].every { item -&gt; item &lt; 3<span style="color: #000000;"> }
</span><span style="color: #0000ff;">assert</span> ! value</pre>
</div>
<p>&nbsp;</p>
<h3>collection.any(closure)</h3>
<p>检查任一项，如果集合中有任意一项执行闭包结果为true，则返回true，否则返回false。</p>
<div class="cnblogs_code">
<pre>def value = [1, 2, 3].any { it &gt; 2<span style="color: #000000;"> }
</span><span style="color: #0000ff;">assert</span><span style="color: #000000;"> value

value </span>= [1, 2, 3].any { item -&gt; item &gt; 3<span style="color: #000000;"> }
</span><span style="color: #0000ff;">assert</span> value == <span style="color: #0000ff;">false</span></pre>
</div>
<p>&nbsp;</p>
<h3>collection.max()和collection.min()</h3>
<p>返回集合中的最大项和最小项。</p>
<div class="cnblogs_code">
<pre>value = [9, 4, 2, 10, 5<span style="color: #000000;">].max()
</span><span style="color: #0000ff;">assert</span> value == 10<span style="color: #000000;">
value </span>= [9, 4, 2, 10, 5<span style="color: #000000;">].min()
</span><span style="color: #0000ff;">assert</span> value == 2<span style="color: #000000;">
value </span>= ['x', 'y', 'a', 'z'<span style="color: #000000;">].min()
</span><span style="color: #0000ff;">assert</span> value == 'a'</pre>
</div>
<p>&nbsp;</p>
<h3>collection.join(str)</h3>
<p>用字符串str连接集合。</p>
<div class="cnblogs_code">
<pre>def value = [1, 2, 3].join('-'<span style="color: #000000;">)
</span><span style="color: #0000ff;">assert</span> value == '1-2-3'</pre>
</div>
<p>&nbsp;</p>]]></description></item><item><title>Groovy系列 - 闭包Closure</title><link>http://www.cnblogs.com/eastson/archive/2012/05/26/2519411.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 26 May 2012 10:08:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/26/2519411.html</guid><description><![CDATA[<p>闭包是什么？看看Groovy Documentation里面的定义：<em><strong>Closures are similar to Java's inner classes, except they are a single method which is invokable, with arbitrary parameters.</strong></em>&nbsp;</p>
<p><em><strong>&nbsp;</strong></em></p>
<p>我自己的理解：<em><strong>闭包就是一个method变量，可以有很多的参数。</strong></em></p>
<p>&nbsp;</p>
<p>简单的闭包实例：</p>
<div class="cnblogs_code">
<pre>def closure = { param -&gt; println("hello ${param}"<span style="color: #000000;">) }
closure.call(</span>"world!"<span style="color: #000000;">)

closure </span>= { greeting, name -&gt; println(greeting +<span style="color: #000000;"> name) }
closure.call(</span>"hello ", "world!")</pre>
</div>
<p>&nbsp;</p>
<p>从上面的例子可以看出：</p>
<ul>
<li>闭包的定义放在<em><strong>{}</strong></em>中间。</li>
<li>参数放在<strong><em>-&gt;</em></strong>符号的左边，语句放在<em><strong>-&gt;</strong></em>符号的右边。如果有多个参数，参数之间用逗号分割。</li>
<li>使用<em><strong>call()</strong></em>可以执行闭包。</li>
</ul>
<p>&nbsp;</p>
<p>如果在-&gt;符号的左边没有指定参数，Groovy会默认一个<em><strong>it</strong></em>的参数：</p>
<div class="cnblogs_code">
<pre>def closure = { println "hello " +<span style="color: #000000;"> it }
closure.call(</span>"world!")</pre>
</div>
<p>&nbsp;</p>
<p>使用闭包可以很方便的处理集合：</p>
<div class="cnblogs_code">
<pre>[1, 2, 3].each({item -&gt; println "${item}-"<span style="color: #000000;">})
[</span>"k1":"v1", "k2":"v2"].each({key, value -&gt; println key + "=" + value})</pre>
</div>
<p>&nbsp;</p>
<p>如果闭包是某个方法调用的最后一个参数，则闭包的定义允许放在方法调用圆括号的外边：</p>
<div class="cnblogs_code">
<pre>def fun(<span style="color: #0000ff;">int</span><span style="color: #000000;"> i, Closure c) {
  c.call(i)
}

</span><span style="color: #008000;">//</span><span style="color: #008000;"> put Closure out of ()</span>
[1, 2, 3].each() { item -&gt; print "${item}-" } <span style="color: #008000;">//</span><span style="color: #008000;"> 1-2-3-</span>
fun(123) { i -&gt; println i } <span style="color: #008000;">//</span><span style="color: #008000;"> 123

</span><span style="color: #008000;">//</span><span style="color: #008000;"> omit ()</span>
[1, 2, 3].each ({ item -&gt; print "${item}-" }) <span style="color: #008000;">//</span><span style="color: #008000;"> 1-2-3-

</span><span style="color: #008000;">//</span><span style="color: #008000;"> omit enclosing ()</span>
[1, 2, 3].each { item -&gt; print "${item}-" } <span style="color: #008000;">//</span><span style="color: #008000;"> 1-2-3-

</span><span style="color: #008000;">//</span><span style="color: #008000;"> normal</span>
[1, 2, 3].each(({ item -&gt; print "${item}-" })) <span style="color: #008000;">//</span><span style="color: #008000;"> 1-2-3-

</span><span style="color: #008000;">//</span><span style="color: #008000;"> using the fun function to do the same thing</span>
[1,2,3].each {fun(it,{item -&gt; print "${item}-"})} <span style="color: #008000;">//</span><span style="color: #008000;"> 1-2-3-</span>
<span style="color: #000000;">
def closure </span>= { i -&gt;<span style="color: #000000;"> println i}

</span><span style="color: #008000;">//</span><span style="color: #008000;">[1, 2, 3].each() closure </span><span style="color: #008000;">//</span><span style="color: #008000;"> error. closure has been previously defined</span></pre>
</div>
<p>&nbsp;</p>
<p>本文参考文档：<a href="http://groovy.codehaus.org/Quick+Start" target="_blank">http://groovy.codehaus.org/Quick+Start</a></p>]]></description></item><item><title>Groovy系列 - Groovy概览</title><link>http://www.cnblogs.com/eastson/archive/2012/05/26/2519189.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 26 May 2012 05:07:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/26/2519189.html</guid><description><![CDATA[<p><em><strong>Groovy类会编译成Java的bytecode，也就是说，Groovy类和Java类之间是一对一的映射关系。每一个Groovy类都可以在Java代码中被使用，因为Groovy类也是一个Java类。</strong></em></p>
<p>&nbsp;</p>
<p>Groovy List的使用：</p>
<div class="cnblogs_code">
<pre>def list = [1, 2, 'hello', new java.util.<span style="color: #0000ff;">Date</span>()<span style="color: #000000;">]
assert list</span>.size() == 4<span style="color: #000000;">
assert list</span>.get(2) ==<span style="color: #000000;"> 'hello'
assert list[</span>2] == 'hello'</pre>
</div>
<p>&nbsp;</p>
<p>Groovy Map的使用：</p>
<div class="cnblogs_code">
<pre>def map = ['name':'James',<span style="color: #000000;"> 'location':'London']
assert map</span>.size() == 2<span style="color: #000000;">
assert map</span>.get('name') ==<span style="color: #000000;"> 'James'
assert map['name'] </span>== 'James'</pre>
</div>
<p>&nbsp;</p>
<p>遍历一个List：</p>
<div class="cnblogs_code">
<pre>def list = [1, 2, 3<span style="color: #000000;">]
</span><span style="color: #0000ff;">for</span> (i in list) { println i }</pre>
</div>
<p>&nbsp;</p>
<p>本文参考文档：<a href="http://groovy.codehaus.org/Quick+Start" target="_blank">http://groovy.codehaus.org/Quick+Start</a></p>]]></description></item><item><title>Groovy系列 - Hello， Groovy！</title><link>http://www.cnblogs.com/eastson/archive/2012/05/26/2518946.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 26 May 2012 04:50:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/26/2518946.html</guid><description><![CDATA[<p>Groovy脚本文件是一个包含了很多语句和类的文字文件。同其它脚本语言一样，也有多种方法可以运行Groovy脚本文件。</p>
<p>&nbsp;</p>
<p>在Groovy安装目录（<strong><em>D:\develop\groovy-1.8.6</em></strong>）下新增文件<strong><em>foo\hello.groovy</em></strong>，内容如下：</p>
<div class="cnblogs_code">
<pre>println "Hello, World"<span style="color: #000000;">;
</span><span style="color: #0000ff;">for</span> (arg in <span style="color: #0000ff;">this</span><span style="color: #000000;">.args) {
  println </span>"Argument:" +<span style="color: #000000;"> arg;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>使用命令行方式执行hello.groovy：</p>
<div class="cnblogs_code">
<pre>groovy foo\hello.groovy MyName YourName HisName</pre>
</div>
<p>&nbsp;</p>
<p>执行完毕后应该会有如下的画面：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052612354415.png" alt="" /></p>
<p>&nbsp;</p>
<p>也可以在命令提示符下输入<em><strong>groovyConsole</strong></em>，打开Groovy图形交互式界面执行脚本文件：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052612493224.png" alt="" /></p>
<p>&nbsp;</p>
<p>本文参考文档：<a href="http://groovy.codehaus.org/Running" target="_blank">http://groovy.codehaus.org/Running</a></p>]]></description></item><item><title>Groovy系列 - Groovy-Eclipse</title><link>http://www.cnblogs.com/eastson/archive/2012/05/25/2517429.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 25 May 2012 00:47:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/25/2517429.html</guid><description><![CDATA[<p>Groovy-Eclipse是一个Eclipse插件集合，提供了Eclipse开发Groovy项目的支持。</p>
<p>&nbsp;</p>
<h3>安装Groovy-Eclipse</h3>
<p>1. 启动Eclipse，从菜单中选择<em><strong>Help &gt; Eclipse Marketplace</strong></em>。输入关键字<em><strong>Groovy-Eclipse</strong></em>，点击<em><strong>Go</strong></em>按钮开始搜索，如下图。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052809310279.png" alt="" /></p>
<p>&nbsp;</p>
<p>2.&nbsp;点击相应搜素结果旁边的<em><strong>Install</strong></em>按钮，确认需要安装的特性。这里我们选择安装全部特性，然后点击<em><strong>Next</strong></em>按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052809373591.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 授权协议确认，选择<em><strong>I accept the terms of the license agreements</strong></em>，点击<em><strong>Finish</strong></em>按钮，Eclipse开始安装：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052809434254.png" alt="" /></p>
<p>&nbsp;</p>
<p>4. 安装过程中可能会出现安全警告，直接点击<em><strong>OK</strong></em>按钮就可以了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052809564510.png" alt="" /></p>
<p>&nbsp;</p>
<p>5. 安装完毕，选择<em><strong>Restart Now</strong></em>，重新启动Eclipse。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052809584598.png" alt="" /></p>
<p>&nbsp;</p>
<h3>第一个Groovy-Eclipse项目</h3>
<p>1. 启动 Eclipse，从菜单中选择<em><strong>File &gt; New &gt; Other</strong></em>，在类型列表中找到<em><strong>Groovy</strong></em>目录，选中<em><strong>Groovy Project</strong></em>，点击<em><strong>Next</strong></em>按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052810101936.png" alt="" /></p>
<p>&nbsp;</p>
<p>2. 输入项目名称，点击<em><strong>Next</strong></em>按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052810120481.png" alt="" /></p>
<p>&nbsp;</p>
<p>3. 不用修改<em><strong>Build Settings</strong></em>的任何内容，直接点击<em><strong>Finish</strong></em>按钮。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052810141871.png" alt="" /></p>
<p>&nbsp;</p>
<p>4.&nbsp;</p>]]></description></item><item><title>Groovy系列 - 安装Groovy</title><link>http://www.cnblogs.com/eastson/archive/2012/05/25/2517423.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 25 May 2012 00:38:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/25/2517423.html</guid><description><![CDATA[<p>Groovy&nbsp;是 Java 平台上设计的面向对象编程语言。这门动态语言拥有类似&nbsp;Python、Ruby&nbsp;和&nbsp;Smalltalk&nbsp;中的一些特性，可以作为 Java 平台的脚本语言使用。Groovy 的语法与 Java 非常相似，以至于多数的 Java 代码也是正确的 Groovy 代码。Groovy 代码动态的被编译器转换成 Java 字节码。由于其运行在 JVM 上的特性，Groovy 可以使用其他 Java 语言编写的库。</p>
<p>&nbsp;</p>
<p>本文的目的是在Windows系列电脑上安装Groovy，原始文档请参考<em><strong><a href="http://groovy.codehaus.org/Installing+Groovy" target="_blank">Installing Groovy</a></strong></em>。</p>
<p>&nbsp;</p>
<p>第一步：打开网站<em><strong><a href="http://groovy.codehaus.org/Download" target="_blank">http://groovy.codehaus.org/Download</a></strong></em>，下载最新的Groovy（当前最新版本为<em><strong>1.8.6）</strong></em>。<em><strong>注意：本文使用的是zip格式的binary发行版，不是Windows Installer格式的安装版</strong></em>。下载完毕后解压到<em><strong>D:\develop\groovy-1.8.6</strong></em>目录：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052508284090.png" alt="" /></p>
<p>&nbsp;</p>
<p>第二步：设置环境变量<em><strong>GROOVY_HOME =&nbsp;D:\develop\groovy-1.8.6</strong></em>。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052508304760.png" alt="" /></p>
<p>&nbsp;</p>
<p>第三步：将<em><strong>%GROOVY_HOME%\bin</strong></em>目录添加到PATH环境变量。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052508565557.png" alt="" /></p>
<p>&nbsp;</p>
<p>第四步：到这里就算安装完毕了。打开命令提示符窗口，输入<em><strong>groovySh</strong></em>，就可以开启Groovy命令交互界面了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052508365234.png" alt="" /></p>
<p>也可以在命令提示符下输入<em><strong>groovyConsole</strong></em>，然后打开Groovy图形交互界面：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052515403996.png" alt="" /></p>]]></description></item><item><title>Spring学习之旅（1） - 第一个Controller</title><link>http://www.cnblogs.com/eastson/archive/2012/05/23/2513580.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 23 May 2012 01:57:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/23/2513580.html</guid><description><![CDATA[<p>经过两天不懈的奋战，我的第一个Spring Web程序终于看到结果了。本文记录了开发的详细过程，借此纪念自己的辛苦付出。</p>
<p>&nbsp;</p>
<p>第一步：开发环境的准备。我的开发环境用的是Eclipse Indigo JavaEE 3.7.2 +&nbsp;JBoss Tools 3.3 +&nbsp;SpringSource Tool Suite for Eclipse Indigo (3.7) 2.9.1。</p>
<p>&nbsp;</p>
<p>第二步：下载Spring Framework，当前的最新版本是3.1.1.RELEASE，下载地址是<a class="ui-accordion-link accBundle releaseStyle selected" href="http://s3.amazonaws.com/dist.springframework.org/release/SPR/spring-framework-3.1.1.RELEASE-with-docs.zip" target="_blank">http://s3.amazonaws.com/dist.springframework.org/release/SPR/spring-framework-3.1.1.RELEASE-with-docs.zip</a>。将下载完成后的文件解压缩到D:\develop\spring-framework-3.1.1，下图是其解开后的目录结构：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052217032370.png" alt="" /></p>
<p>&nbsp;</p>
<p>第三步：打开Eclipse，新建一个Dynamic Web Project项目guestbook-spring，将D:\develop\spring-framework-3.1.1\dist目录下所有的jar文件复制到项目的WEB-INF/lib目录。其实dist目录下的很多文件本文中都不会用到，但为了以后使用方便，就一次性的将所有jar文件复制了过来。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052217125324.png" alt="" /></p>
<p>&nbsp;</p>
<p>第四步：新增控制器HelloController.java，完整内容如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">package</span><span style="color: #000000;"> org.reindeer.tutorials.guestbook.spring;
</span><span style="color: #008080;"> 2</span> 
<span style="color: #008080;"> 3</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.stereotype.Controller;
</span><span style="color: #008080;"> 4</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.web.bind.annotation.RequestMapping;
</span><span style="color: #008080;"> 5</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.web.bind.annotation.RequestMethod;
</span><span style="color: #008080;"> 6</span> <span style="color: #0000ff;">import</span><span style="color: #000000;"> org.springframework.web.servlet.ModelAndView;
</span><span style="color: #008080;"> 7</span> 
<span style="color: #008080;"> 8</span> <span style="color: #000000;">@Controller
</span><span style="color: #008080;"> 9</span> <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span><span style="color: #000000;"> HelloController {
</span><span style="color: #008080;">10</span>     @RequestMapping(value = "/hello", method =<span style="color: #000000;"> RequestMethod.GET)
</span><span style="color: #008080;">11</span>     <span style="color: #0000ff;">public</span><span style="color: #000000;"> ModelAndView index() {
</span><span style="color: #008080;">12</span>         <span style="color: #0000ff;">return</span> <span style="color: #0000ff;">new</span> ModelAndView("welcome"<span style="color: #000000;">);
</span><span style="color: #008080;">13</span> <span style="color: #000000;">    }
</span><span style="color: #008080;">14</span> }</pre>
</div>
<p>说明：</p>
<ul>
<li>第8行的@Controller，表明了HelloController类是一个Spring MVC的控制器。</li>
<li>第10行@RequestMapping用来指明方法的请求映射，当前方法映射到/hello的GET请求.</li>
<li>第12行的welcome是视图的名称。</li>
</ul>
<p>&nbsp;</p>
<p>第五步：新增文件WEB-INF/views/welcome.jsp，完整内容如下：</p>
<div class="cnblogs_code">
<pre><span style="background-color: #ffff00; color: #000000;">&lt;%</span><span style="background-color: #f5f5f5; color: #000000;">@ page language</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #800000;">java</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #000000;"> contentType</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #800000;">text/html; charset=UTF-8</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #000000;">
    pageEncoding</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #800000;">UTF-8</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #ffff00; color: #000000;">%&gt;</span>
<span style="background-color: #ffff00; color: #000000;">&lt;%</span><span style="background-color: #f5f5f5; color: #000000;">@ page import</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #800000;">"</span><span style="background-color: #f5f5f5; color: #800000;">java.util.*</span><span style="background-color: #f5f5f5; color: #800000;">"</span> <span style="background-color: #ffff00; color: #000000;">%&gt;</span>

<span style="color: #0000ff;">&lt;!</span><span style="color: #ff00ff;">DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">html</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">head</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">meta </span><span style="color: #ff0000;">http-equiv</span><span style="color: #0000ff;">="Content-Type"</span><span style="color: #ff0000;"> content</span><span style="color: #0000ff;">="text/html; charset=UTF-8"</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">title</span><span style="color: #0000ff;">&gt;</span>Insert title here<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">title</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">head</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">body</span><span style="color: #0000ff;">&gt;</span><span style="color: #000000;">Welcome!</span><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">br</span><span style="color: #0000ff;">/&gt;</span>Current time is <span style="background-color: #ffff00; color: #000000;">&lt;%</span><span style="background-color: #f5f5f5; color: #000000;">=</span><span style="background-color: #f5f5f5; color: #0000ff;">new</span> <span style="background-color: #f5f5f5; color: #0000ff;">Date</span><span style="background-color: #f5f5f5; color: #000000;">()</span><span style="background-color: #ffff00; color: #000000;">%&gt;</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">body</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">html</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>第六步：新增文件WEB-INF/config/application-context.xml，完整内容如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">beans </span><span style="color: #ff0000;">xmlns</span><span style="color: #0000ff;">="http://www.springframework.org/schema/beans"</span><span style="color: #ff0000;">
    xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;">
    xmlns:context</span><span style="color: #0000ff;">="http://www.springframework.org/schema/context"</span><span style="color: #ff0000;">
    default-lazy-init</span><span style="color: #0000ff;">="true"</span><span style="color: #ff0000;">
    xmlns:mvc</span><span style="color: #0000ff;">="http://www.springframework.org/schema/mvc"</span><span style="color: #ff0000;">
    xmlns:p</span><span style="color: #0000ff;">="http://www.springframework.org/schema/p"</span><span style="color: #ff0000;">
    xsi:schemaLocation</span><span style="color: #0000ff;">="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"</span><span style="color: #0000ff;">&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">mvc:annotation-driven </span><span style="color: #0000ff;">/&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">context:component-scan </span><span style="color: #ff0000;">base-package</span><span style="color: #0000ff;">="org.reindeer.tutorials.guestbook.spring"</span> <span style="color: #0000ff;">/&gt;</span>

    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">bean
        </span><span style="color: #ff0000;">class</span><span style="color: #0000ff;">="org.springframework.web.servlet.view.InternalResourceViewResolver"</span><span style="color: #ff0000;">
        p:prefix</span><span style="color: #0000ff;">="/WEB-INF/views/"</span><span style="color: #ff0000;"> p:suffix</span><span style="color: #0000ff;">=".jsp"</span> <span style="color: #0000ff;">/&gt;</span>

<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">beans</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>第七步：新增文件WEB-INF/config/servlet-context.xml，完整内容如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">beans </span><span style="color: #ff0000;">xmlns</span><span style="color: #0000ff;">="http://www.springframework.org/schema/beans"</span><span style="color: #ff0000;">
    xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;">
    xmlns:context</span><span style="color: #0000ff;">="http://www.springframework.org/schema/context"</span><span style="color: #ff0000;">
    default-lazy-init</span><span style="color: #0000ff;">="true"</span><span style="color: #ff0000;">
    xmlns:mvc</span><span style="color: #0000ff;">="http://www.springframework.org/schema/mvc"</span><span style="color: #ff0000;">
    xmlns:p</span><span style="color: #0000ff;">="http://www.springframework.org/schema/p"</span><span style="color: #ff0000;">
    xsi:schemaLocation</span><span style="color: #0000ff;">="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">beans</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>第八步：修改WEB-INF/web.xml，完整内容下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;?</span><span style="color: #ff00ff;">xml version="1.0" encoding="UTF-8"</span><span style="color: #0000ff;">?&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">web-app </span><span style="color: #ff0000;">id</span><span style="color: #0000ff;">="WebApp_ID"</span><span style="color: #ff0000;"> version</span><span style="color: #0000ff;">="3.0"</span><span style="color: #ff0000;">
 xmlns</span><span style="color: #0000ff;">="http://java.sun.com/xml/ns/javaee"</span><span style="color: #ff0000;">
 xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;"> xsi:schemaLocation</span><span style="color: #0000ff;">="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span><span style="color: #0000ff;">&gt;</span>
 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">display-name</span><span style="color: #0000ff;">&gt;</span>guestbook-spring<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">display-name</span><span style="color: #0000ff;">&gt;</span>
 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">context-param</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>contextConfigLocation<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>/WEB-INF/config/application-context.xml<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>
 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">context-param</span><span style="color: #0000ff;">&gt;</span>
 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">listener</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">listener-class</span><span style="color: #0000ff;">&gt;</span>org.springframework.web.context.ContextLoaderListener<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">listener-class</span><span style="color: #0000ff;">&gt;</span>
 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">listener</span><span style="color: #0000ff;">&gt;</span>
 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">servlet</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">servlet-name</span><span style="color: #0000ff;">&gt;</span>spring-servlet<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">servlet-name</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">servlet-class</span><span style="color: #0000ff;">&gt;</span>org.springframework.web.servlet.DispatcherServlet<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">servlet-class</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;</span>
   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>contextConfigLocation<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-name</span><span style="color: #0000ff;">&gt;</span>
   <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>/WEB-INF/config/servlet-context.xml<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">param-value</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">init-param</span><span style="color: #0000ff;">&gt;</span>
 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">servlet</span><span style="color: #0000ff;">&gt;</span>
 <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">servlet-mapping</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">servlet-name</span><span style="color: #0000ff;">&gt;</span>spring-servlet<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">servlet-name</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>/spring/*<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">url-pattern</span><span style="color: #0000ff;">&gt;</span>
 <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">servlet-mapping</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">web-app</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>最后一步：将项目发布到JBoss AS，打开浏览器，输入网址http://localhost:8080/guestbook-spring/spring/hello，就可以成功的看到我们的欢迎页面。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012052217365585.png" alt="" /></p>
<p>&nbsp;</p>
<p><strong>让我们详细的解释一下整个的实现过程：</strong></p>
<ul>
<li>在Web应用程序中集成Spring MVC框架，必须要在web.xml文件中注册<em><strong>org.springframework.web.context.ContextLoaderListener</strong></em>监听程序和<em><strong>org.springframework.web.servlet.DispatcherServlet</strong></em>服务程序。</li>
<li><em><strong>ContextLoaderListener</strong></em>监听程序使用<em><strong>&lt;context-param&gt;contextConfigLocation&lt;/context-param&gt;</strong></em>指定的配置文件（本例中是<em><strong>/WEB-INF/config/application-context.xml</strong></em>）初始化应用程序上下文环境。</li>
<li><em><strong>DispatcherServlet</strong></em>服务程序使用<em><strong>&lt;init-param&gt;contextConfigLocation&lt;/init-param&gt;</strong></em>指定的配置文件（本例中是<em><strong>/WEB-INF/config/servlet-context.xml</strong></em>）初始化应用程序上下文环境。</li>
<li><em><strong>ContextLoaderListener</strong></em>上下文环境和<em><strong><em><strong>DispatcherServlet</strong></em></strong></em>上下文环境是有上下级隶属关系的。在一个Web应用程序，只能定义一个<em><strong>ContextLoaderListener</strong></em>监听程序，但是可以定义多个<em><strong>DispatcherServlet</strong></em>服务程序。每个<em><strong>DispatcherServlet</strong></em>服务程序都可以有专属的本地上下文环境，但是他们都共享一个相同的<em><strong>ContextLoaderListener</strong></em>上下文环境。</li>
<li><em><strong>application-context.xml</strong></em>使用了Spring MVC的注解功能。<em><strong>&lt;mvc:annotation-driven&gt;</strong></em>指示开启Spring的注解功能，<em><strong>&lt;context:component-scan&gt;</strong></em>指示Spring搜索<em><strong>org.reindeer.tutorials.guestbook.spring</strong></em>包中的所有类。</li>
<li><em><strong>org.springframework.web.servlet.view.InternalResourceViewResolver</strong></em>指示使用Spring内置的视图解析方法，每一个视图都应该能够对应到文件<em><strong>/WEB-INF/views/视图名.jsp</strong></em>。例如，<em><strong>HelloController.index()</strong></em>方法返回一个名为<strong>welcome</strong>的视图，转换为内部的文件就应该是<em><strong>/WEB-INF/views/welcome.jsp</strong></em>。</li>
<li>在web.xml文件中我们指定了spring-servlet的请求格式为<em><strong>/spring/*</strong></em>，相应的<em><strong>HelloController.index()</strong></em>方法的请求URI就应该是<em><strong>/spring/hello</strong></em>。</li>
</ul>
<p>&nbsp;</p>
<p>guestbook-spring项目文件下载地址（不包括Spring库文件）：<a href="http://files.cnblogs.com/eastson/guestbook-spring-0.01.rar" target="_blank">guestbook-spring-0.01.rar</a></p>]]></description></item><item><title>OSGi系列 - 使用Eclipse查看Bundle源码</title><link>http://www.cnblogs.com/eastson/archive/2012/05/18/2507373.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 18 May 2012 02:43:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/18/2507373.html</guid><description><![CDATA[<p>使用Eclipse开发OSGi Bundle时，会发现有很多现成的Bundle可以用。但如何使用这些Bundle呢？除了上网搜索查资料外，阅读这些Bundle的源码也是一个很好的方法。</p>
<p>&nbsp;</p>
<p>本文以<em><strong>org.eclipse.osgi.services</strong></em>为例，说明如何用Eclipse阅读其源码。</p>
<p>&nbsp;</p>
<p>第一步：打开Eclipse，从菜单项<em><strong>Run &gt;&gt; Run Configurations...</strong></em>打开运行配置对话框，在左侧列表找到<em><strong>OSGi Framework</strong></em>，点击<em><strong>New</strong></em>按钮，如下图。找到OSGi对应的版本，这里是<em><strong>3.7.2</strong></em>，记下来，然后点击<em><strong>Close</strong></em>按钮，这里没有必要保存。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051810291570.png" alt="" /></p>
<p>&nbsp;</p>
<p>第二步：打开浏览器，进入Equinox下载网址<em><strong><a href="http://download.eclipse.org/equinox/" target="_blank">http://download.eclipse.org/equinox/</a></strong></em>，找到对应的版本：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051810333452.png" alt="" /></p>
<p>点击进入，选择<em><strong>All of Equinox</strong></em>下载类型：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051810371788.png" alt="" /></p>
<p>&nbsp;</p>
<p>第三步：下载完毕后解压缩，然后进入<em><strong>plguins</strong></em>目录，找到想阅读其源码的Bundle源码文件，这里需要注意版本对应的问题。Eclipse使用的<em><strong>是org.eclipse.osgi.services_3.3.0.v20110513</strong></em>，在<em><strong>plugins</strong></em>目录下就应该有两个jar文件：<em><strong>org.eclipse.osgi.services_3.3.0.v20110513.jar</strong></em>和<em><strong>org.eclipse.osgi.services.source_3.3.0.v20110513.jar</strong></em>，后面的文件就是Bundle源码文件。将对应的源码文件复制到Eclipse安装位置下载<em><strong>plugins</strong></em>目录。</p>
<p>&nbsp;</p>
<p>第四步：在Eclipse新建一个Bundle项目，在<em><strong>MANIFEST.MF</strong></em>文件加入对<em><strong>org.eclipse.osgi.services</strong></em>的导入：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051810452323.png" alt="" /></p>
<p>&nbsp;</p>
<p>第五步：导入<em><strong>org.eclipse.osgi.services</strong></em>后，在项目的<em><strong>Plug-in Dependencies</strong></em>分类下就会出现该Bundle，展开下面的包，双击类名就可以看到对应的源码了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051810524438.png" alt="" /></p>]]></description></item><item><title>OSGi系列 - 开发服务端Web应用之二：静态资源</title><link>http://www.cnblogs.com/eastson/archive/2012/05/17/2505976.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 17 May 2012 04:02:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/17/2505976.html</guid><description><![CDATA[<p>在前篇文章《<a id="CategoryEntryList1_EntryStoryList_Entries_TitleUrl_0" href="http://www.cnblogs.com/eastson/archive/2012/05/17/2505897.html" target="_blank">OSGi系列 - 开发服务端Web应用之一：Servlet实现</a>》里，我们讲述了如何在OSGi框架下开发Servlet的方法。但是不是所有的Web应用都只有Servlet，还有很多的静态资源，例如HTML、图片、CSS、JS等等，这篇文章我们继续讲述如何在Bundle里面如何包含这些静态资源，然后通过浏览器进行访问。</p>
<p>&nbsp;</p>
<p>第一步：打开<em><strong>HelloWorldBundle</strong></em>项目，在<em><strong>src</strong></em>目录下加入下图的这些静态资源：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051711533992.png" alt="" /></p>
<p><em><strong>index.html</strong></em>是一个简单的测试网页，包含对<em><strong>images/equinox.png</strong></em>图片的使用。index.html的内容如下：</p>
<div class="cnblogs_code">
<pre>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8"&gt;
&lt;title&gt;感谢Equinox&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;<span style="color: #000000;">
你知不知道，我是在Equinox怀抱里诞生的？
</span>&lt;br /&gt;&lt;br /&gt;
&lt;a href="http://eclipse.org/equinox/"&gt;&lt;img src="images/equinox.png" /&gt;&lt;/a&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
</div>
<p>&nbsp;</p>
<p>第二步：修改<em><strong>Activator.java</strong></em>，将静态资源注册到HTTP服务。Activator.java的内容如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> helloworldbundle;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleActivator;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleContext;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceEvent;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceListener;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceReference;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.service.http.HttpService;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> Activator <span style="color: #0000ff;">implements</span><span style="color: #000000;"> BundleActivator, ServiceListener 
{
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> BundleContext ctx;
    </span><span style="color: #0000ff;">private</span> ServiceReference&lt;HttpService&gt;<span style="color: #000000;"> ref;
    
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> start(BundleContext context) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception 
    {
        ctx </span>=<span style="color: #000000;"> context;
        context.addServiceListener(</span><span style="color: #0000ff;">this</span>, "(objectClass=" + HttpService.<span style="color: #0000ff;">class</span>.getName() + ")"<span style="color: #000000;">);
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> stop(BundleContext context) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception 
    {
        context.removeServiceListener(</span><span style="color: #0000ff;">this</span><span style="color: #000000;">);
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> serviceChanged(ServiceEvent event) 
    {
        </span><span style="color: #0000ff;">switch</span><span style="color: #000000;"> (event.getType()){
            </span><span style="color: #0000ff;">case</span><span style="color: #000000;"> ServiceEvent.REGISTERED:
                registerServlet();
                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
    
            </span><span style="color: #0000ff;">case</span><span style="color: #000000;"> ServiceEvent.UNREGISTERING:
                unregisterServlet();
                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
        }
    }
    
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> registerServlet()
    {
        </span><span style="color: #0000ff;">if</span> (ref == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            ref </span>= ctx.getServiceReference(HttpService.<span style="color: #0000ff;">class</span><span style="color: #000000;">);
            
            </span><span style="color: #0000ff;">if</span> (ref != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
                </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
                    HttpService http </span>=<span style="color: #000000;"> ctx.getService(ref);
                    
                    http.registerServlet(</span>"/demo/hello", <span style="color: #0000ff;">new</span> HelloServlet(ctx), <span style="color: #0000ff;">null</span>, <span style="color: #0000ff;">null</span><span style="color: #000000;">);
                    System.out.println(</span>"/demo/hello已经被注册"<span style="color: #000000;">);
                    
                    http.registerResources(</span>"/demo/static", "static", <span style="color: #0000ff;">null</span><span style="color: #000000;">);
                    System.out.println(</span>"/demo/static已经被注册"<span style="color: #000000;">);
                    
                } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e) {
                    e.printStackTrace();
                }
            } 
        }
    }
    
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> unregisterServlet() 
    {
        </span><span style="color: #0000ff;">if</span> (ref != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
                HttpService http </span>=<span style="color: #000000;"> ctx.getService(ref);
                
                http.unregister(</span>"/demo/hello"<span style="color: #000000;">);
                System.out.println(</span>"/demo/hello已经被卸载"<span style="color: #000000;">);
                
                http.unregister(</span>"/demo/static"<span style="color: #000000;">);
                System.out.println(</span>"/demo/static已经被卸载"<span style="color: #000000;">);
                
                ref </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
            }
            </span><span style="color: #0000ff;">catch</span><span style="color: #000000;">(Exception e){
                e.printStackTrace();
            }
        }
    }

}</span></pre>
</div>
<p>&nbsp;</p>
<p>第三步：运行HelloWorldBundle，通过浏览器访问<em><strong>http://localhost/demo/static/index.html</strong></em>。呃，图片出来没有？</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051711592371.png" alt="" /></p>
<p>&nbsp;</p>
<p>本文中的Eclipse项目源码可以通过下面的链接下载：</p>
<p><a href="http://files.cnblogs.com/eastson/osgi-HelloWorldBundle2.rar" target="_blank">osgi-HelloWorldBundle2.rar</a></p>]]></description></item><item><title>OSGi系列 - 开发服务端Web应用之一：Servlet实现</title><link>http://www.cnblogs.com/eastson/archive/2012/05/17/2505897.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 17 May 2012 03:42:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/17/2505897.html</guid><description><![CDATA[<p>在OSGi框架下如何开发Web应用？这是个问题。OSGi框架下的Web应用运行方式可以归纳为两种：第一种，将Web容器作为一个Bundle，然后运行在OSGi框架中。第二种，将OSGi框架置于Web容器中。本系列文章以第一种运行方式为主，在系列的最后会适当的对第二种运行方式做些介绍。</p>
<p>&nbsp;</p>
<p>第一步：打开Eclipse，新建Bundle项目<em><strong>HelloWorldBundle</strong></em>（使用Elicpse建立Bundle项目的详细过程可以参考&nbsp;<a id="cb_post_title_url" class="singleposttitle" href="http://www.cnblogs.com/eastson/archive/2012/05/15/2501610.html">OSGi系列 - 用Eclipse开发Bundle</a>）。HelloWorldBundle项目的目录结构如下图：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051711105356.png" alt="" /></p>
<p>&nbsp;</p>
<p>第二步：打开<em><strong>MANIFEST.MF</strong></em>文件，切换到<em><strong>Dependencies</strong></em>标签页，在<strong><em>Required Plug-ins</em></strong>加入两个依赖插件：<em><strong>javax.servlet</strong></em>和<em><strong>org.eclipse.osgi.services</strong></em>。javax.servlet提供了我们开发Servlet时必需的Servlet API，org.eclipse.osgi.services提供在Activator注册我们编写的Servlet时需要用到的HTTP服务。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051711165389.png" alt="" /></p>
<p>保存MANIFEST.MF，完整的ANIFEST.MF内容如下：</p>
<div class="cnblogs_code">
<pre>Manifest-Version: 1.0<span style="color: #000000;">
Bundle-ManifestVersion: </span>2<span style="color: #000000;">
Bundle-Name: HelloWorldBundle
Bundle-SymbolicName: HelloWorldBundle
Bundle-Version: </span>1.0.0<span style="color: #000000;">
Bundle-Activator: helloworldbundle.Activator
Import-Package: org.osgi.framework</span><span style="color: #008000;">;</span><span style="color: #008000;">version="1.3.0"</span>
Bundle-RequiredExecutionEnvironment: JavaSE-1.6<span style="color: #000000;">
Require-Bundle: javax.servlet</span><span style="color: #008000;">;</span><span style="color: #008000;">bundle-version="2.5.0",</span>
 org.eclipse.osgi.services<span style="color: #008000;">;</span><span style="color: #008000;">bundle-version="3.3.0"</span></pre>
</div>
<p>&nbsp;</p>
<p>第三步：新建<em><strong>HelloServlet .java</strong></em>，作为我们的Servlet演示。HelloServlet .java的内容如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> helloworldbundle;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.IOException;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.PrintWriter;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServlet;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequest;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletResponse;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpSession;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleContext;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> HelloServlet <span style="color: #0000ff;">extends</span><span style="color: #000000;"> HttpServlet 
{
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">final</span> <span style="color: #0000ff;">long</span> serialVersionUID = 1L<span style="color: #000000;">;
    
    @SuppressWarnings(</span>"unused"<span style="color: #000000;">)
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> BundleContext context;
    
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> HelloServlet(BundleContext context)
    {
        </span><span style="color: #0000ff;">this</span>.context =<span style="color: #000000;"> context;
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> doGet(HttpServletRequest request,  HttpServletResponse response) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException
    {
         HttpSession session </span>=<span style="color: #000000;"> request.getSession();
         
         </span><span style="color: #0000ff;">int</span><span style="color: #000000;"> counter;
         </span><span style="color: #0000ff;">if</span> (<span style="color: #0000ff;">null</span> != session.getAttribute("counter"<span style="color: #000000;">)) {
             counter </span>= (Integer) session.getAttribute("counter") + 1<span style="color: #000000;">;
         } </span><span style="color: #0000ff;">else</span><span style="color: #000000;"> {
             counter </span>= 1<span style="color: #000000;">;
         }
         session.setAttribute(</span>"counter"<span style="color: #000000;">, counter);
         
         response.setCharacterEncoding(</span>"GBK"<span style="color: #000000;">); 
         response.setContentType(</span>"text/html"<span style="color: #000000;">);
         
         PrintWriter out </span>=<span style="color: #000000;"> response.getWriter(); 
         out.println(</span>"&lt;html&gt;"<span style="color: #000000;">); 
         out.println(</span>"&lt;body&gt;"<span style="color: #000000;">); 
         out.println(</span>"&lt;head&gt;"<span style="color: #000000;">); 
         out.println(</span>"&lt;title&gt;Hello World&lt;/title&gt;"<span style="color: #000000;">); 
         out.println(</span>"&lt;/head&gt;"<span style="color: #000000;">); 
         out.println(</span>"&lt;body&gt;"<span style="color: #000000;">); 
         out.println(</span>"Now time: " + (<span style="color: #0000ff;">new</span> java.util.Date()) + ", Counter: " +<span style="color: #000000;"> counter); 
         out.println(</span>"&lt;/body&gt;"<span style="color: #000000;">); 
         out.println(</span>"&lt;/html&gt;"<span style="color: #000000;">); 
         out.flush(); 
         out.close(); 
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>第四步：实现<em><strong>Activator.java</strong></em>，管理HelloWorldBundle的生命周期。在Activator的启动和停止方法里面，我们相应的增加和删除了一个服务监听器，用来监听Http服务的注册和卸载。当HTTP服务被注册时，同时将HelloServlet注册到HTTP服务；当HTTP服务被卸载时，同时也将HelloServlet从HTTP服务上卸载掉。Activator.java的内容如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> helloworldbundle;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleActivator;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleContext;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceEvent;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceListener;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceReference;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.service.http.HttpService;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> Activator <span style="color: #0000ff;">implements</span><span style="color: #000000;"> BundleActivator, ServiceListener 
{
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> BundleContext ctx;
    </span><span style="color: #0000ff;">private</span> ServiceReference&lt;HttpService&gt;<span style="color: #000000;"> ref;
    
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> start(BundleContext context) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception 
    {
        ctx </span>=<span style="color: #000000;"> context;
        context.addServiceListener(</span><span style="color: #0000ff;">this</span>, "(objectClass=" + HttpService.<span style="color: #0000ff;">class</span>.getName() + ")"<span style="color: #000000;">);
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> stop(BundleContext context) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception 
    {
        context.removeServiceListener(</span><span style="color: #0000ff;">this</span><span style="color: #000000;">);
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> serviceChanged(ServiceEvent event) 
    {
        </span><span style="color: #0000ff;">switch</span><span style="color: #000000;"> (event.getType()){
            </span><span style="color: #0000ff;">case</span><span style="color: #000000;"> ServiceEvent.REGISTERED:
                registerServlet();
                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
    
            </span><span style="color: #0000ff;">case</span><span style="color: #000000;"> ServiceEvent.UNREGISTERING:
                unregisterServlet();
                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
        }
    }
    
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> registerServlet()
    {
        </span><span style="color: #0000ff;">if</span> (ref == <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            ref </span>= ctx.getServiceReference(HttpService.<span style="color: #0000ff;">class</span><span style="color: #000000;">);
            
            </span><span style="color: #0000ff;">if</span> (ref != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
                </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
                    HttpService http </span>=<span style="color: #000000;"> ctx.getService(ref);
                    
                    http.registerServlet(</span>"/demo/hello", <span style="color: #0000ff;">new</span> HelloServlet(ctx), <span style="color: #0000ff;">null</span>, <span style="color: #0000ff;">null</span><span style="color: #000000;">);
                    System.out.println(</span>"/demo/hello已经被注册"<span style="color: #000000;">);
                    
                } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e) {
                    e.printStackTrace();
                }
            } 
        }
    }
    
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> unregisterServlet() 
    {
        </span><span style="color: #0000ff;">if</span> (ref != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
                HttpService http </span>=<span style="color: #000000;"> ctx.getService(ref);
                
                http.unregister(</span>"/demo/hello"<span style="color: #000000;">);
                System.out.println(</span>"/demo/hello已经被卸载"<span style="color: #000000;">);
                
                ref </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
            }
            </span><span style="color: #0000ff;">catch</span><span style="color: #000000;">(Exception e){
                e.printStackTrace();
            }
        }
    }

}</span></pre>
</div>
<p>&nbsp;</p>
<p>第五步：从Elicpse菜单上选择<em><strong>Run &gt;&gt; Run Configurations...</strong></em>，在弹出的<em><strong>Run Configurations</strong></em>对话框左侧列表中找到<em><strong>OSGi Framework</strong></em>，点击New按钮：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051711291070.png" alt="" /></p>
<p>在右侧Bundles列表中，选择<em><strong>Workspace</strong></em>下的<em><strong>HelloWordBundle</strong></em>项目，然后在<em><strong>Target Platform</strong></em>下选择一下项目：</p>
<ul>
<li>javax.servlet</li>
<li>org.eclipse.osgi.services</li>
<li>org.eclipse.equinox.http.servlet</li>
<li>org.eclipse.equinox.http.jetty</li>
<li>org.mortbay.jetty.server</li>
<li>org.mortbay.jetty.util</li>
</ul>
<p>最后点击对话框右下角的<em><strong>Run</strong></em>按钮，如果一切正常，就会出现我们熟悉的<em><strong>osgi&gt;</strong></em>提示符：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051711353723.png" alt="" /></p>
<p>&nbsp;</p>
<p>第六步：打开浏览器，输入网址<em><strong>http://localhost/demo/hello</strong></em>，如果出现下面的画面，那么，恭喜你，成功了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051711381481.png" alt="" /></p>
<p>&nbsp;</p>
<p>撰写本文章，特别需要感谢《<a href="http://www.doc88.com/p-04268147846.html" target="_blank">OSGI实战</a>》和《<a href="http://www.ibm.com/developerworks/cn/web/0907_osgiweb_liuqing/" target="_blank">使用 Equinox 框架进行 OSGi 环境下的 Web 开发</a>》两篇文章对我的指点，谢谢！</p>]]></description></item><item><title>OSGi系列 - 《OSGi实战》之用户验证</title><link>http://www.cnblogs.com/eastson/archive/2012/05/16/2504004.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 16 May 2012 06:58:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/16/2504004.html</guid><description><![CDATA[<p>这两天看BlueDavy写的一篇OSGi入门的文章《<a href="http://www.doc88.com/p-04268147846.html" target="_blank">OSGi实战</a>》，在道客巴巴有这篇文章的链接。</p>
<p>&nbsp;</p>
<p>在这篇文章里面有这样一个例子：一个网站，有一个验证用户名和密码的页面（UserValidatorWebBundle）。验证的方式有三种：LDAP验证（LDAPValidatorBundle）﹑数据库验证（DBValidatorBundle）和配置文件验证（ConfigValidatorBundle）。在OSGi框架来讲，这分别是四个Bundle，UserValidatorWebBundle提供前端Web访问服务，执行时需要调用到三个验证Bundle中某一个提供的验证服务。三个验证Bundle在实际环境下可以通过启动其中一个﹑停止其它两个的方法实现动态的改变验证方式。</p>
<p>&nbsp;</p>
<p>另外，还有一个UserValidatorBundle，这个Bundle实际上只包含了一个验证服务的接口类，在LDAPValidatorBundle﹑DBValidatorBundle和ConfigValidatorBundle三个Bundle之间提供验证服务的公共定义。</p>
<p>&nbsp;</p>
<p>特别说明，我的开发环境是Eclipse JaveEE&nbsp;Indigo 3.7.2。</p>
<p>&nbsp;</p>
<h3>实现UserValidatorBundle</h3>
<p>UserValidatorBundle提供验证服务的接口类Validator。由于它不要注册任何的服务和监听器，因此这里我们不需要为该Bundle提供Activator实现。它的作用就是将验证接口Validator通在MANIFEST.MF的Export-Package导出去，然后供其它具体实现验证服务的Bundle使用。</p>
<p>&nbsp;</p>
<p>Bundle的详细开发过程可以参考《<a id="ArchiveDay1_SingleDay_DayList_TitleUrl_0" href="http://www.cnblogs.com/eastson/archive/2012/05/15/2501610.html" target="_blank">OSGi系列 - 用Eclipse开发Bundle</a>》，这里只对关键地方进行说明。</p>
<p>&nbsp;</p>
<p>UserValidatorBundle的目录结构，注意该Bundle没有Activator类：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051615171472.png" alt="" /></p>
<p>&nbsp;</p>
<p>Validator.java文件内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> org.riawork.demo.service.user;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">interface</span><span style="color: #000000;"> Validator {
    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">boolean</span> validate(String username, String password) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception;
}</span></pre>
</div>
<p>&nbsp;</p>
<p>打开MANIFEST.MF文件，在出现的元数据编辑页面中选择底部的Runtime标签页，然后点击Exported Packages旁边的Add...按钮，添加如下的内容：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051615530728.png" alt="" /></p>
<p>这个操作实际上就是在MANIFEST.MF文件里面增加一条Export-Package项目：</p>
<div class="cnblogs_code">
<pre>Export-Package: org.riawork.demo.service.user</pre>
</div>
<p>&nbsp;</p>
<p>MANIFEST.MF文件完整的内容：</p>
<div class="cnblogs_code">
<pre>Manifest-Version: 1.0<span style="color: #000000;">
Bundle</span>-ManifestVersion: 2<span style="color: #000000;">
Bundle</span>-<span style="color: #000000;">Name: UserValidatorBundle
Bundle</span>-<span style="color: #000000;">SymbolicName: UserValidatorBundle
Bundle</span>-Version: 1.0.0<span style="color: #000000;">
Import</span>-Package: org.osgi.framework;version="1.3.0"<span style="color: #000000;">
Bundle</span>-RequiredExecutionEnvironment: JavaSE-1.6<span style="color: #000000;">
Export</span>-Package: org.riawork.demo.service.user</pre>
</div>
<p>&nbsp;</p>
<h3>实现LDAPValidatorBundle</h3>
<p>LDAPValidatorBundle提供LDAP验证方式。</p>
<p>&nbsp;</p>
<p>LDAPValidatorBundle提供了一个LDAPValidator验证类，该类需要实现UserValidatorBundle里面的Valdiator接口，因此需要在MANIFEST.MF文件中通过Import-Package导入Validator接口所在的包org.riawork.demo.service.user。</p>
<p>&nbsp;</p>
<p>LDAPValidatorBundle同时也提供了一个LDAPActivator类，用来管理Bundle的生命周期，在start()和stop()方法中实现LDAPValidator验证服务的注册和卸载。</p>
<p>&nbsp;</p>
<p>作为演示用途，这里所有的验证方式都使用的是字符串硬编码的简单方式。</p>
<p>&nbsp;</p>
<p>LDAPValidatorBundle的目录结构：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051615343069.png" alt="" /></p>
<p>&nbsp;</p>
<p>打开MANIFEST.MF文件，在出现的元数据编辑页面中选择底部的Dependencies标签页，然后点击Imported Packages旁边的Add...按钮，添加如下的内容：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051615582532.png" alt="" /></p>
<p>这个操作实际上就是在MANIFEST.MF文件里面增加一条Import-Package项目：</p>
<div class="cnblogs_code">
<pre>Import-Package: org.osgi.framework;version="1.3.0"<span style="color: #000000;">,
 org.riawork.demo.service.user</span></pre>
</div>
<p>&nbsp;</p>
<p>MANIFEST.MF文件完整的内容：</p>
<div class="cnblogs_code">
<pre>Manifest-Version: 1.0<span style="color: #000000;">
Bundle</span>-ManifestVersion: 2<span style="color: #000000;">
Bundle</span>-<span style="color: #000000;">Name: LDAPValidatorBundle
Bundle</span>-<span style="color: #000000;">SymbolicName: LDAPValidatorBundle
Bundle</span>-Version: 1.0.0<span style="color: #000000;">
Bundle</span>-<span style="color: #000000;">Activator: org.riawork.demo.service.user.impl.LDAPActivator
Import</span>-Package: org.osgi.framework;version="1.3.0"<span style="color: #000000;">,
 org.riawork.demo.service.user
Bundle</span>-RequiredExecutionEnvironment: JavaSE-1.6</pre>
</div>
<p>&nbsp;</p>
<p>LDAPValidator.java文件内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> org.riawork.demo.service.user.impl;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.riawork.demo.service.user.Validator;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> LDAPValidator <span style="color: #0000ff;">implements</span><span style="color: #000000;"> Validator {

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">boolean</span> validate(String username, String password) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        System.out.println(</span>"LDAPValidator.validate()方法被调用"<span style="color: #000000;">);
        
        </span><span style="color: #0000ff;">if</span> ("jerry".equals(username) &amp;&amp; "jerry"<span style="color: #000000;">.equals(password)){
            </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }
        
        </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
    }

}</span></pre>
</div>
<p>&nbsp;</p>
<p>LDAPActivator.java文件内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> org.riawork.demo.service.user.impl;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleActivator;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleContext;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceRegistration;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.riawork.demo.service.user.Validator;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> LDAPActivator <span style="color: #0000ff;">implements</span><span style="color: #000000;"> BundleActivator {

    </span><span style="color: #0000ff;">private</span> ServiceRegistration serviceReg = <span style="color: #0000ff;">null</span><span style="color: #000000;">;

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> start(BundleContext bundleContext) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        System.out.println(</span>"LDAPValidator服务被注册"<span style="color: #000000;">);
        
        serviceReg </span>= bundleContext.registerService(Validator.<span style="color: #0000ff;">class</span>.getName(), <span style="color: #0000ff;">new</span> LDAPValidator(), <span style="color: #0000ff;">null</span><span style="color: #000000;">);
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> stop(BundleContext bundleContext) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        </span><span style="color: #0000ff;">if</span>(serviceReg != <span style="color: #0000ff;">null</span><span style="color: #000000;">)
            serviceReg.unregister();
        
        System.out.println(</span>"LDAPValidator服务被卸载"<span style="color: #000000;">);
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<h3>实现DBValidatorBundle</h3>
<p>DBValidatorBundle提供数据库验证方式，该Bundle的实现方式完全同LDAPValidatorBundle。</p>
<p>&nbsp;</p>
<p>DBValidatorBundle的目录结构：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051616072756.png" alt="" /></p>
<p>&nbsp;</p>
<p>MANIFEST.MF文件内容：</p>
<div class="cnblogs_code">
<pre>Manifest-Version: 1.0<span style="color: #000000;">
Bundle-ManifestVersion: </span>2<span style="color: #000000;">
Bundle-Name: DBValidatorBundle
Bundle-SymbolicName: DBValidatorBundle
Bundle-Version: </span>1.0.0<span style="color: #000000;">
Bundle-Activator: org.riawork.demo.service.user.impl.DBActivator
Import-Package: org.osgi.framework</span><span style="color: #008000;">;</span><span style="color: #008000;">version="1.3.0",</span>
<span style="color: #000000;"> org.riawork.demo.service.user
Bundle-RequiredExecutionEnvironment: JavaSE-</span>1.6</pre>
</div>
<p>&nbsp;</p>
<p>DBValidator.java文件内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> org.riawork.demo.service.user.impl;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.riawork.demo.service.user.Validator;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> DBValidator <span style="color: #0000ff;">implements</span><span style="color: #000000;"> Validator {

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">boolean</span> validate(String username, String password) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        System.out.println(</span>"DBValidator.validate()方法被调用"<span style="color: #000000;">);
        
        </span><span style="color: #0000ff;">if</span> ("jerry".equals(username) &amp;&amp; "jerry"<span style="color: #000000;">.equals(password)){
            </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }
        
        </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>DBActivator.java文件内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> org.riawork.demo.service.user.impl;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleActivator;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleContext;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceRegistration;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.riawork.demo.service.user.Validator;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> DBActivator <span style="color: #0000ff;">implements</span><span style="color: #000000;"> BundleActivator {

    </span><span style="color: #0000ff;">private</span> ServiceRegistration serviceReg = <span style="color: #0000ff;">null</span><span style="color: #000000;">;

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> start(BundleContext bundleContext) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        System.out.println(</span>"DBValidator服务被注册"<span style="color: #000000;">);
        
        serviceReg </span>= bundleContext.registerService(Validator.<span style="color: #0000ff;">class</span>.getName(), <span style="color: #0000ff;">new</span> DBValidator(), <span style="color: #0000ff;">null</span><span style="color: #000000;">);
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> stop(BundleContext bundleContext) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        </span><span style="color: #0000ff;">if</span>(serviceReg != <span style="color: #0000ff;">null</span><span style="color: #000000;">)
            serviceReg.unregister();
        
        System.out.println(</span>"DBValidator服务被卸载"<span style="color: #000000;">);
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<h3>实现ConfigValidatorBundle</h3>
<p>ConfigValidatorBundle提供配置人家验证方式，该Bundle的实现方式完全同LDAPValidatorBundle。</p>
<p>&nbsp;</p>
<p>ConfigValidatorBundle的目录结构：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051616100781.png" alt="" /></p>
<p>&nbsp;</p>
<p>MANIFEST.MF文件内容：</p>
<div class="cnblogs_code">
<pre>Manifest-Version: 1.0<span style="color: #000000;">
Bundle-ManifestVersion: </span>2<span style="color: #000000;">
Bundle-Name: ConfigValidatorBundle
Bundle-SymbolicName: ConfigValidatorBundle
Bundle-Version: </span>1.0.0<span style="color: #000000;">
Bundle-Activator: org.riawork.demo.service.user.impl.ConfigActivator
Import-Package: org.osgi.framework</span><span style="color: #008000;">;</span><span style="color: #008000;">version="1.3.0",</span>
<span style="color: #000000;"> org.riawork.demo.service.user
Bundle-RequiredExecutionEnvironment: JavaSE-</span>1.6</pre>
</div>
<p>&nbsp;</p>
<p>ConfigValidator.java文件内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> org.riawork.demo.service.user.impl;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.riawork.demo.service.user.Validator;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> ConfigValidator <span style="color: #0000ff;">implements</span><span style="color: #000000;"> Validator {

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">boolean</span> validate(String username, String password) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        System.out.println(</span>"ConfigValidator.validate()方法被调用"<span style="color: #000000;">);
        
        </span><span style="color: #0000ff;">if</span> ("jerry".equals(username) &amp;&amp; "jerry"<span style="color: #000000;">.equals(password)){
            </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">true</span><span style="color: #000000;">;
        }
        
        </span><span style="color: #0000ff;">return</span> <span style="color: #0000ff;">false</span><span style="color: #000000;">;
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>ConfigActivator.java文件内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> org.riawork.demo.service.user.impl;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleActivator;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleContext;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceRegistration;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.riawork.demo.service.user.Validator;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> ConfigActivator <span style="color: #0000ff;">implements</span><span style="color: #000000;"> BundleActivator {

    </span><span style="color: #0000ff;">private</span> ServiceRegistration serviceReg = <span style="color: #0000ff;">null</span><span style="color: #000000;">;

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> start(BundleContext bundleContext) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        System.out.println(</span>"ConfigValidator服务被注册"<span style="color: #000000;">);
        
        serviceReg </span>= bundleContext.registerService(Validator.<span style="color: #0000ff;">class</span>.getName(), <span style="color: #0000ff;">new</span> ConfigValidator(), <span style="color: #0000ff;">null</span><span style="color: #000000;">);
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> stop(BundleContext bundleContext) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        </span><span style="color: #0000ff;">if</span>(serviceReg != <span style="color: #0000ff;">null</span><span style="color: #000000;">)
            serviceReg.unregister();
        
        System.out.println(</span>"ConfigValidator服务被卸载"<span style="color: #000000;">);
    }
}<br /></span></pre>
</div>
<p>&nbsp;</p>
<h3>实现UserValidatorWebBundle</h3>
<p>UserValidatorWebBundle提供使用者前端访问。该Bundle提供一个login.html页面，输入用户名和密码后，点击登录按钮，将数据提交到LoginServlet。LoginServlet检查，获取已经注册的Validator验证服务，调用validate()方法检查传过来的用户名和密码是否正确。</p>
<p>&nbsp;</p>
<p>该Bundle使用到了Servlet API和HTTP服务，因此必需javax.servlet和org.eclipse.osgi.services两个额外的Bundle。</p>
<p>&nbsp;</p>
<p>UserValidatorWebBundle的目录结构：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051616275675.png" alt="" /></p>
<p>&nbsp;</p>
<p>打开MANIFEST.MF文件，选择底部的Dependencies标签页，添加如下的内容：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051616293928.png" alt="" /></p>
<p>这个操作实际上就是在MANIFEST.MF文件里面增加Import-Package项目和Require-Bundle项目：</p>
<div class="cnblogs_code">
<pre>Import-Package: org.osgi.framework<span style="color: #008000;">;</span><span style="color: #008000;">version="1.3.0",</span>
<span style="color: #000000;"> org.riawork.demo.service.user
Require-Bundle: javax.servlet</span><span style="color: #008000;">;</span><span style="color: #008000;">bundle-version="2.5.0",</span>
 org.eclipse.osgi.services<span style="color: #008000;">;</span><span style="color: #008000;">bundle-version="3.3.0"</span></pre>
</div>
<p>&nbsp;</p>
<p>MANIFEST.MF文件完整的内容：</p>
<div class="cnblogs_code">
<pre>Manifest-Version: 1.0<span style="color: #000000;">
Bundle-ManifestVersion: </span>2<span style="color: #000000;">
Bundle-Name: UserValidatorWebBundle
Bundle-SymbolicName: UserValidatorWebBundle
Bundle-Version: </span>1.0.0<span style="color: #000000;">
Bundle-Activator: org.riawork.demo.web.Activator
Import-Package: org.osgi.framework</span><span style="color: #008000;">;</span><span style="color: #008000;">version="1.3.0",</span>
<span style="color: #000000;"> org.riawork.demo.service.user
Bundle-RequiredExecutionEnvironment: JavaSE-</span>1.6<span style="color: #000000;">
Require-Bundle: javax.servlet</span><span style="color: #008000;">;</span><span style="color: #008000;">bundle-version="2.5.0",</span>
 org.eclipse.osgi.services<span style="color: #008000;">;</span><span style="color: #008000;">bundle-version="3.3.0"</span></pre>
</div>
<p>&nbsp;</p>
<p>在src目录下新建page目录，然后在page目录下新增login.html文件。login.html文件内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">HTML</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">HEAD</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">TITLE</span><span style="color: #0000ff;">&gt;</span>OSGI Opendoc Demo<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">TITLE</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">meta </span><span style="color: #ff0000;">http-equiv</span><span style="color: #0000ff;">="Content-Type"</span><span style="color: #ff0000;"> content</span><span style="color: #0000ff;">="text/html;charset=utf-8"</span> <span style="color: #0000ff;">/&gt;</span> 
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span>

    <span style="background-color: #f5f5f5; color: #0000ff;">function</span><span style="background-color: #f5f5f5; color: #000000;"> login(){
        </span><span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;">(document.frmLogin.username.value</span><span style="background-color: #f5f5f5; color: #000000;">==</span><span style="background-color: #f5f5f5; color: #000000;">""</span><span style="background-color: #f5f5f5; color: #000000;">){
            alert(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">必须输入用户名</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">);
            document.frmLogin.username.focus();
            </span><span style="background-color: #f5f5f5; color: #0000ff;">return</span><span style="background-color: #f5f5f5; color: #000000;">;
        }
        </span><span style="background-color: #f5f5f5; color: #0000ff;">if</span><span style="background-color: #f5f5f5; color: #000000;">(document.frmLogin.userpass.value</span><span style="background-color: #f5f5f5; color: #000000;">==</span><span style="background-color: #f5f5f5; color: #000000;">""</span><span style="background-color: #f5f5f5; color: #000000;">){
            alert(</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">必须输入密码</span><span style="background-color: #f5f5f5; color: #000000;">"</span><span style="background-color: #f5f5f5; color: #000000;">);
            document.frmLogin.userpass.focus();
            </span><span style="background-color: #f5f5f5; color: #0000ff;">return</span><span style="background-color: #f5f5f5; color: #000000;">;
        }
        document.frmLogin.submit();
    }

</span><span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">script</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">HEAD</span><span style="color: #0000ff;">&gt;</span>

<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">BODY</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;</span><span style="color: #800000;">table </span><span style="color: #ff0000;">style</span><span style="color: #0000ff;">="width:45%;border:1px solid;height:100px"</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">form </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">=frmLogin </span><span style="color: #ff0000;">method</span><span style="color: #0000ff;">="post"</span><span style="color: #ff0000;"> action</span><span style="color: #0000ff;">="/demo/login"</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">tr </span><span style="color: #ff0000;">bgcolor</span><span style="color: #0000ff;">="#C0C0C0"</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">td </span><span style="color: #ff0000;">colspan</span><span style="color: #0000ff;">="2"</span><span style="color: #ff0000;"> align</span><span style="color: #0000ff;">="center"</span><span style="color: #0000ff;">&gt;</span>用户登录模块示例<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">td</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">tr</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">tr</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">td </span><span style="color: #ff0000;">width</span><span style="color: #0000ff;">="30%"</span><span style="color: #0000ff;">&gt;</span>用户名<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">td</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">td</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="text"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="username"</span><span style="color: #ff0000;"> size</span><span style="color: #0000ff;">="30"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">td</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">tr</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">tr</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">td</span><span style="color: #0000ff;">&gt;</span>密<span style="color: #ff0000;">&amp;nbsp;&amp;nbsp;</span>码<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">td</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">td</span><span style="color: #0000ff;">&gt;&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">="password"</span><span style="color: #ff0000;"> name</span><span style="color: #0000ff;">="userpass"</span><span style="color: #ff0000;"> size</span><span style="color: #0000ff;">="33"</span><span style="color: #0000ff;">&gt;&lt;/</span><span style="color: #800000;">td</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">tr</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">tr </span><span style="color: #ff0000;">bgcolor</span><span style="color: #0000ff;">="#C0C0C0"</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">td </span><span style="color: #ff0000;">colspan</span><span style="color: #0000ff;">="2"</span><span style="color: #ff0000;"> align</span><span style="color: #0000ff;">="center"</span><span style="color: #0000ff;">&gt;</span>
                <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">input </span><span style="color: #ff0000;">type</span><span style="color: #0000ff;">=button </span><span style="color: #ff0000;">name</span><span style="color: #0000ff;">=btnSubmit </span><span style="color: #ff0000;">value</span><span style="color: #0000ff;">="登录"</span><span style="color: #ff0000;"> onclick</span><span style="color: #0000ff;">="login();"</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">td</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">tr</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">form</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">table</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">BODY</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">HTML</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>LoginServlet.java文件内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> org.riawork.demo.web;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> java.io.IOException;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.ServletOutputStream;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServlet;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletRequest;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.http.HttpServletResponse;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleContext;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceReference;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.riawork.demo.service.user.Validator;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> LoginServlet <span style="color: #0000ff;">extends</span><span style="color: #000000;"> HttpServlet {

    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">static</span> <span style="color: #0000ff;">final</span> <span style="color: #0000ff;">long</span> serialVersionUID = 1L<span style="color: #000000;">;
    
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> BundleContext context;
    
    </span><span style="color: #0000ff;">public</span><span style="color: #000000;"> LoginServlet(BundleContext context){
        </span><span style="color: #0000ff;">this</span>.context=<span style="color: #000000;">context;
    }
    
    </span><span style="color: #008000;">/**</span><span style="color: #008000;"> 
     * Web Post Method 
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> doPost(HttpServletRequest request,  HttpServletResponse response)
              </span><span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException{
        doGet(request, response);
    }

    </span><span style="color: #008000;">/**</span><span style="color: #008000;"> 
     * Web GET Method 
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> doGet(HttpServletRequest request,  HttpServletResponse response)
        </span><span style="color: #0000ff;">throws</span><span style="color: #000000;"> IOException{
        String username</span>=request.getParameter("username"<span style="color: #000000;">);
        String userpass</span>=request.getParameter("userpass"<span style="color: #000000;">);
        response.setContentType(</span>"text/html"<span style="color: #000000;">);
        ServletOutputStream output</span>=<span style="color: #000000;">response.getOutputStream();
        ServiceReference serviceRef</span>=context.getServiceReference(Validator.<span style="color: #0000ff;">class</span><span style="color: #000000;">.getName());
        Validator validator</span>=<span style="color: #000000;">(Validator) context.getService(serviceRef);
        </span><span style="color: #0000ff;">if</span>(validator==<span style="color: #0000ff;">null</span><span style="color: #000000;">){
            output.println(</span>"No usable validator service"<span style="color: #000000;">);
            output.close();
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
        }
        </span><span style="color: #0000ff;">boolean</span> result=<span style="color: #0000ff;">false</span><span style="color: #000000;">;
        </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
            result</span>=<span style="color: #000000;">validator.validate(username, userpass);
            </span><span style="color: #0000ff;">if</span><span style="color: #000000;">(result)
                output.println(</span>"Login success"<span style="color: #000000;">);
            </span><span style="color: #0000ff;">else</span><span style="color: #000000;">
                output.println(</span>"Login Fail,please check username and password"<span style="color: #000000;">);
            output.close();
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
        } 
        </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e) {
            output.println(</span>"Login error:"<span style="color: #000000;">);
            output.println(e.toString());
            </span><span style="color: #0000ff;">return</span><span style="color: #000000;">;
        }
    }

}</span></pre>
</div>
<p>&nbsp;</p>
<p>Activator.java文件内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> org.riawork.demo.web;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> javax.servlet.Servlet;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleActivator;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleContext;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceEvent;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceListener;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceReference;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.service.http.HttpService;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.riawork.demo.web.LoginServlet;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> Activator <span style="color: #0000ff;">implements</span><span style="color: #000000;"> BundleActivator,ServiceListener{

    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> BundleContext bc;
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> ServiceReference ref;
    </span><span style="color: #0000ff;">private</span><span style="color: #000000;"> Servlet servlet;

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> start(BundleContext context) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        bc</span>=<span style="color: #000000;">context;
        servlet</span>=<span style="color: #0000ff;">new</span><span style="color: #000000;"> LoginServlet(bc);
        registerServlet();
        context.addServiceListener(</span><span style="color: #0000ff;">this</span>, "(objectClass=" + HttpService.<span style="color: #0000ff;">class</span>.getName() + ")"<span style="color: #000000;">);
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> stop(BundleContext context) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
            unregisterServlet();
        } </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Throwable t) {
            t.printStackTrace();
        }

        servlet </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
        bc </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
        ref </span>= <span style="color: #0000ff;">null</span><span style="color: #000000;">;
    }

    </span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> serviceChanged(ServiceEvent event) {
        </span><span style="color: #0000ff;">switch</span><span style="color: #000000;"> (event.getType()){
            </span><span style="color: #0000ff;">case</span><span style="color: #000000;"> ServiceEvent.REGISTERED:
                registerServlet();
                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;

            </span><span style="color: #0000ff;">case</span><span style="color: #000000;"> ServiceEvent.UNREGISTERING:
                unregisterServlet();
                </span><span style="color: #0000ff;">break</span><span style="color: #000000;">;
        }
    }
    
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> registerServlet() {
        </span><span style="color: #0000ff;">if</span> (ref == <span style="color: #0000ff;">null</span><span style="color: #000000;">)
            ref </span>= bc.getServiceReference(HttpService.<span style="color: #0000ff;">class</span><span style="color: #000000;">.getName());
     
        </span><span style="color: #0000ff;">if</span> (ref != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
                HttpService http </span>=<span style="color: #000000;"> (HttpService) bc.getService(ref);
                http.registerServlet(</span>"/demo/login", servlet, <span style="color: #0000ff;">null</span>, <span style="color: #0000ff;">null</span><span style="color: #000000;">);
                http.registerResources(</span>"/demo/page","page",<span style="color: #0000ff;">null</span><span style="color: #000000;">);
                System.out.println(</span>"已启动用户登录验证web模块，请通过/demo/page/login.htm访问"<span style="color: #000000;">);
            } 
            </span><span style="color: #0000ff;">catch</span><span style="color: #000000;"> (Exception e) {
                e.printStackTrace();
            }
        }
    }
    
    </span><span style="color: #0000ff;">private</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> unregisterServlet() {
        </span><span style="color: #0000ff;">if</span> (ref != <span style="color: #0000ff;">null</span><span style="color: #000000;">) {
            </span><span style="color: #0000ff;">try</span><span style="color: #000000;"> {
                HttpService http </span>=<span style="color: #000000;"> (HttpService) bc.getService(ref);
                http.unregister(</span>"/demo/login"<span style="color: #000000;">);
                http.unregister(</span>"/demo/page"<span style="color: #000000;">);
                System.out.println(</span>"已卸载用户登录验证web模块！"<span style="color: #000000;">);
            }
            </span><span style="color: #0000ff;">catch</span><span style="color: #000000;">(Exception e){
                e.printStackTrace();
            }
        }
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<h3>创建OSGi Run Configuration</h3>
<p>选择菜单Run &gt;&gt; Run Configurations...，在弹出的Run Configurations对话框左边找到OSGi Framework，在该项目上点击鼠标右键选择New菜单项，画面如下：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051616393712.png" alt="" /></p>
<p>&nbsp;</p>
<p>下表的Bundle在Run Configurations对话框中必须被选中：</p>
<ul>
<li>UserValidatorBundle</li>
<li>LDAPValidatorBundle</li>
<li>DBValidatorBundle</li>
<li>ConfigValidatorBundle</li>
<li>UserValidatorWebBundle</li>
<li>javax.servlet</li>
<li>org.eclipse.osgi.services</li>
<li>org.eclipse.equinox.http.servlet</li>
<li>org.eclipse.equinox.http.jetty</li>
<li>org.mortbay.jetty.server</li>
<li>org.mortbay.jetty.util</li>
</ul>
<p>&nbsp;</p>
<p>配置完毕后，点击右下角的Run按钮，启动OSGi框架。如果一切正常，就会出现osgi&gt;提示符，以及Bundle被启动时输出的提示信息：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051616525034.png" alt="" /></p>
<p>&nbsp;</p>
<p>从上图我们应该发现一个问题，实际上三个不同的验证方式都被启动了。</p>
<p>&nbsp;</p>
<h3>动态的切换验证方式</h3>
<p>打开浏览器，输入http://localhost/demo/page/login.html，出现输入用户名和密码画面：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051616571336.png" alt="" /></p>
<p>&nbsp;</p>
<p>输入一个用户名和密码（正确的是jerry和jerry），点击登录按钮，浏览器网址转到了http://localhost/demo/login，这实际上就是我们注册的LoginServlet（参考UserValidatorWebBundle的Activator.java文件）。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051616585675.png" alt="" /></p>
<p>&nbsp;</p>
<p>请注意，这个时候我们查看OSGi控制台，有看到一条信息&ldquo;ConfigValidator.validate()方法被调用&rdquo;，说明当前使用的验证方式是配置文件验证。因为我们提供的三种验证服务都被启动了，换句话说，在OSGi框架中，Validator服务有三个提供者，在服务被调用时具体用的是哪一个提供者会由OSGi框架随机的决定。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051617030484.png" alt="" /></p>
<p>&nbsp;</p>
<p>停止Config和DB验证，只启动LDAP验证，然后再次提交http://localhost/demo/page/login.html，观察OSGi控制台，发现这次使用的是LDAP验证。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051617104990.png" alt="" /></p>
<p>&nbsp;</p>
<p>停止LDAP和Config验证，启动DB验证，观察OSGi控制台，是不是就是我们所期望的DB验证？</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051617134243.png" alt="" /></p>
<p>&nbsp;</p>
<p>这篇文章实在是有点太长了，对于没耐心从头看到尾的朋友，下面提供了一个压缩文件下载链接，希望能帮助你省一点点时间。</p>
<p><a href="http://files.cnblogs.com/eastson/osgi-user-valiator-code.rar" target="_blank">http://files.cnblogs.com/eastson/osgi-user-valiator-code.rar</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>OSGi系列 - 用Eclipse开发Bundle</title><link>http://www.cnblogs.com/eastson/archive/2012/05/15/2501610.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 15 May 2012 07:01:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/15/2501610.html</guid><description><![CDATA[<p>Bundle开发过程中如何调试一直是个困扰的问题，今天我们看看Eclipse在这方面是如何解决的。</p>
<p>&nbsp;</p>
<p>我用的<em><strong>Eclipse JavaEE&nbsp;Indigo 3.7.2</strong></em>版本。</p>
<p>&nbsp;</p>
<p>第一步：开启Eclipse，新增一个<em><strong>Plug-in</strong></em>项目。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051514454882.png" alt="" /></p>
<p>&nbsp;</p>
<p>第二步：输入项目名称<em><strong>HelloWorldBundle</strong></em>，注意这里的插件运行方式要选择<em><strong>an OSGi Framework</strong></em>。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051514482455.png" alt="" /></p>
<p>&nbsp;</p>
<p>第三步：输入Bundle有关的元数据信息，这里我们使用默认值。我们选择自动产生<em><strong>Activator</strong></em>类，以便简化我们后面的处理。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051514510796.png" alt="" /></p>
<p>&nbsp;</p>
<p>第四步：我们选择从<em><strong>Hello OSGi Bundle</strong></em>模板生成Bundle项目。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051514525075.png" alt="" /></p>
<p>&nbsp;</p>
<p>第五步：输入Hello OSGi Bundle模板需要的启动和停止信息。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051514540019.png" alt="" /></p>
<p>&nbsp;</p>
<p>第六步：到此为止，Eclipse依据我们的选择自动生成了HelloWorldBundle插件。虽然这是一个非常简单的Bundle，但是毫无疑问，这个是一个完整的Bundle，它是可以直接运行的。</p>
<p>&nbsp;</p>
<p>HelloWorldBundle的目录结构：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051514584984.png" alt="" /></p>
<p>&nbsp;</p>
<p>Activator.java文件的内容：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> helloworldbundle;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleActivator;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleContext;

</span><span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> Activator <span style="color: #0000ff;">implements</span><span style="color: #000000;"> BundleActivator {

    </span><span style="color: #008000;">/*</span><span style="color: #008000;">
     * (non-Javadoc)
     * @see org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext)
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> start(BundleContext context) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        System.out.println(</span>"Hello World!!"<span style="color: #000000;">);
    }
    
    </span><span style="color: #008000;">/*</span><span style="color: #008000;">
     * (non-Javadoc)
     * @see org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext)
     </span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span> stop(BundleContext context) <span style="color: #0000ff;">throws</span><span style="color: #000000;"> Exception {
        System.out.println(</span>"Goodbye World!!"<span style="color: #000000;">);
    }

}</span></pre>
</div>
<p>&nbsp;</p>
<p>MANIFEST.MF的内容：</p>
<div class="cnblogs_code">
<pre>Manifest-Version: 1.0<span style="color: #000000;">
Bundle-ManifestVersion: </span>2<span style="color: #000000;">
Bundle-Name: HelloWorldBundle
Bundle-SymbolicName: HelloWorldBundle
Bundle-Version: </span>1.0.0<span style="color: #000000;">.qualifier
Bundle-Activator: helloworldbundle.Activator
Import-Package: org.osgi.framework</span><span style="color: #008000;">;</span><span style="color: #008000;">version="1.3.0"</span>
Bundle-RequiredExecutionEnvironment: JavaSE-1.6</pre>
</div>
<p>&nbsp;</p>
<p>第七步：在Activator.java的<em><strong>start()</strong></em>和<em><strong>stop()</strong></em>方法处增加两个断点：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051515061312.png" alt="" /></p>
<p>&nbsp;</p>
<p>第八步：在HelloWorldBundle项目上点击鼠标右键，在弹出的<em><strong>Debug As</strong></em>功能里面选择<em><strong>OSGi Framework</strong></em>：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051515081893.png" alt="" /></p>
<p>&nbsp;</p>
<p>第九步：一切OK，Eclipse切换到了Debug视图，Console窗口出现了<em><strong>OSGi&gt;</strong></em>提示符，代码也在我们定义的start断点处停了下来。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051515115956.png" alt="" /></p>
<p>&nbsp;</p>
<p>第十步：在OSGi&gt;提示符后面输入<em><strong>close</strong></em>命令，以便停止OSGi框架（shutdown and exit）。这个时候，代码就会在stop断点处停下来。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051515164929.png" alt="" /></p>
<p>&nbsp;</p>
<p>使用Eclipse提供的调试功能，将可以让我们在Bundle的开发过程中如虎添翼了。</p>
<p>&nbsp;</p>
<p>更多的参考链接：</p>
<p><a href="http://www.eclipse.org/equinox/documents/osgicongress2005/coding.html" target="_blank">Coding bundles on the Slug demo movie</a></p>
<p><a href="http://www.eclipse.org/equinox/documents/osgicongress2005/debugging.html">Remote debugging on the Slug demo movie</a></p>]]></description></item><item><title>OSGi系列 - Equinox初体验</title><link>http://www.cnblogs.com/eastson/archive/2012/05/15/2501461.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 15 May 2012 06:06:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/15/2501461.html</guid><description><![CDATA[<p>Equinox是Eclipse的一个OSGi实现，Eclipse3.1后面的版本都是通过它来启动的。</p>
<p>&nbsp;</p>
<p>可以从Eclipse网站下载Equinox最新版，网址是<a href="http://download.eclipse.org/equinox/">http://download.eclipse.org/equinox/</a>。如果你有安装Eclipse 3.1后面的版本，在<span><em><strong>&lt;install location&gt;/plugins</strong></em>目录下就可以找到一个<em><strong>org.eclipse.osgi_3.2.0_xxx.jar</strong></em>这样的文件，这就是Equinox的实现文件。</span></p>
<p><span>&nbsp;</span></p>
<p><span>这里的文章我们以<em><strong>org.eclipse.osgi_3.7.2.v20120110-1415.jar</strong></em>为例。</span></p>
<p><span>&nbsp;</span></p>
<p>新建目录<em><strong>D:\develop\equinox-osgi</strong></em>，将下载的文件<em><strong>org.eclipse.osgi_3.7.2.v20120110-1415.jar</strong></em>复制到新建的目录。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051513553265.png" alt="" /></p>
<p>&nbsp;</p>
<p>打开DOS窗口，切换到D:\develop\equinox-osgi目录，执行如下命令以便启动Equinox：</p>
<div class="cnblogs_code">
<pre>java -jar org.eclipse.osgi_3.<span style="color: #800080;">7.2</span>.v20120110-<span style="color: #800080;">1415</span>.jar -console</pre>
</div>
<p>&nbsp;</p>
<p>Equinox如果启动成功，接下来我们就可以看到<em><strong>osgi&gt;</strong></em>提示符了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051514031588.png" alt="" /></p>
<p>&nbsp;</p>
<p>敲入<em><strong>??</strong></em>，就可以看到的Equinox支持的所有命令了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051514055760.png" alt="" /></p>
<p>&nbsp;</p>
<p>更多的信息可以参考下面的链接：</p>
<p><a href="http://eclipse.org/equinox/documents/quickstart-framework.php" target="_blank">Getting and using the Equinox OSGi implementation</a></p>]]></description></item><item><title>OSGi系列 - 文章链接</title><link>http://www.cnblogs.com/eastson/archive/2012/05/15/2501041.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 15 May 2012 02:29:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/15/2501041.html</guid><description><![CDATA[<p>Equinox相关的链接：</p>
<p><a href="http://eclipse.org/equinox/" target="_blank">Eclipse&nbsp;Equinox Home</a></p>
<p><a href="http://eclipse.org/equinox/documents/quickstart.php" target="_blank">Getting Started with Equinox</a></p>]]></description></item><item><title>OSGi系列 - 我理解的OSGi</title><link>http://www.cnblogs.com/eastson/archive/2012/05/15/2500958.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 15 May 2012 01:47:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/15/2500958.html</guid><description><![CDATA[<p>估计很多人都接触过路由器，大部分的路由器都支持模块的热插拔，这就意味着可以在路由器运行的状态下给它动态的增加新的功能或者卸载不需要的功能，硬件界的这种热插拔技术一直就是软件界所追求的，而OSGi则使得热插拔技术在软件界成为现实。</p>
<p>&nbsp;</p>
<p>基于OSGi的系统，可以通过安装新的Bundle﹑更新或停止现有的Bundle来实现系统功能的插拔。</p>
<p>&nbsp;</p>
<p>那么到底什么是Bundle呢？Bundle其实就是一个jar文件，这个jar文件和普通的jar文件唯一不同的地方就是META-INF目录下的MANIFEST.MF文件的内容，关于Bundle的所有信息都在MANIFEST.MF中进行描述，也就是说，这些都是Bundle的元数据，包含有象Bundle的名称﹑描述﹑开发商﹑classpath﹑需要导入的包以及输出的包等等。</p>
<p>&nbsp;</p>
<p>Bundle通过实现BundleActivator接口去控制其生命周期，在Activator中编写Bundle启动﹑停止时所需要进行的工作，同时也可以在Activator中发布或者监听框架的事件状态信息，以根据框架的运行状态做出相应的调整。但同时要注意，如果框架是被类似Ctrl+C等方式强行终止的话，那么Activator中的stop方法是不会被调用的。</p>
<p>&nbsp;</p>
<p>在OSGi框架中对于每个Bundle采用的是独立的classloader机制，这也就意味着不能采用传统的如引用其他Bundle的工程来实现Bundle间的协作了，那么在OSGi框架中Bundle之间是怎样协作的呢？在OSGi框架中对于每个Bundle可以定义输出的包以及引用的包，这样在Bundle间就可以共享包中的类了。尽管这样也可以实现简单的Bundle的协作，但在OSGi框架中更加推荐的是采用Service的方式。Service-Oriented的概念大家都接触多了，OSGi框架也同样是如此的，每个Bundle可以通过BundleContext注册对外提供的服务，同时也可以通过BundleContext来获得需要引用的服务，采用Service-Oriented的方式可以使得对外提供的服务能够更加的封闭，不需要为了使用别的Bundle提供的Service而做环境依赖等的设置。</p>]]></description></item><item><title>OSGi系列 - 第一个OSGi Bundle</title><link>http://www.cnblogs.com/eastson/archive/2012/05/14/2499357.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 14 May 2012 06:41:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/14/2499357.html</guid><description><![CDATA[<p>安装好了Apache Felix，下面要做的是开发我的第一个Bundle。整个过程是参考<a href="http://felix.apache.org/site/apache-felix-tutorial-example-1.html" target="_blank"><em><strong>Apache Felix Tutorial Example 1 - Service Event Listener Bundle</strong></em></a>实现的。</p>
<p>&nbsp;</p>
<p>打开一个DOS窗口，切换到要存放Bundle的目录，这里以<em><strong>D:\develop\eclipse-jee-indigo-SR2-win32\workspace\felix-analysis</strong></em>为例。然后使用Maven创建一个空的项目。</p>
<div class="cnblogs_code">
<pre>mvn archetype:create -DgroupId=felix.tutorial -DartifactId=example1 -DpackageName=felix.tutorial.example1 -Dversion=1.0.0</pre>
</div>
<p>&nbsp;</p>
<p>执行完成后会出现下面的目录结构：</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051414484895.png" alt="" /></p>
<p>&nbsp;</p>
<p>切换到目录<em><strong>src\main\java\felix\tutorial\example1，</strong></em>删除Maven创建的App.java文件，新建文件<strong><em>Activator.java</em></strong>，文件内容如下：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">package</span><span style="color: #000000;"> felix.tutorial.example1;

</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleActivator;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.BundleContext;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceListener;
</span><span style="color: #0000ff;">import</span><span style="color: #000000;"> org.osgi.framework.ServiceEvent;

</span><span style="color: #008000;">/**</span><span style="color: #008000;">
 * This class implements a simple bundle that utilizes the OSGi
 * framework's event mechanism to listen for service events. Upon
 * receiving a service event, it prints out the event's details.
*</span><span style="color: #008000;">*/</span>
<span style="color: #0000ff;">public</span> <span style="color: #0000ff;">class</span> Activator <span style="color: #0000ff;">implements</span><span style="color: #000000;"> BundleActivator, ServiceListener
{
    </span><span style="color: #008000;">/**</span><span style="color: #008000;">
     * Implements BundleActivator.start(). Prints
     * a message and adds itself to the bundle context as a service
     * listener.
     * </span><span style="color: #808080;">@param</span><span style="color: #008000;"> context the framework context for the bundle.
    *</span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> start(BundleContext context)
    {
        System.out.println(</span>"Starting to listen for service events."<span style="color: #000000;">);
        context.addServiceListener(</span><span style="color: #0000ff;">this</span><span style="color: #000000;">);
    }

    </span><span style="color: #008000;">/**</span><span style="color: #008000;">
     * Implements BundleActivator.stop(). Prints
     * a message and removes itself from the bundle context as a
     * service listener.
     * </span><span style="color: #808080;">@param</span><span style="color: #008000;"> context the framework context for the bundle.
    *</span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> stop(BundleContext context)
    {
        context.removeServiceListener(</span><span style="color: #0000ff;">this</span><span style="color: #000000;">);
        System.out.println(</span>"Stopped listening for service events."<span style="color: #000000;">);

        </span><span style="color: #008000;">//</span><span style="color: #008000;"> Note: It is not required that we remove the listener here,
        </span><span style="color: #008000;">//</span><span style="color: #008000;"> since the framework will do it automatically anyway.</span>
<span style="color: #000000;">    }

    </span><span style="color: #008000;">/**</span><span style="color: #008000;">
     * Implements ServiceListener.serviceChanged().
     * Prints the details of any service event from the framework.
     * </span><span style="color: #808080;">@param</span><span style="color: #008000;"> event the fired service event.
    *</span><span style="color: #008000;">*/</span>
    <span style="color: #0000ff;">public</span> <span style="color: #0000ff;">void</span><span style="color: #000000;"> serviceChanged(ServiceEvent event)
    {
        String[] objectClass </span>=<span style="color: #000000;"> (String[])
            event.getServiceReference().getProperty(</span>"objectClass"<span style="color: #000000;">);

        </span><span style="color: #0000ff;">if</span> (event.getType() ==<span style="color: #000000;"> ServiceEvent.REGISTERED)
        {
            System.out.println(
                </span>"Ex1: Service of type " + objectClass[0] + " registered."<span style="color: #000000;">);
        }
        </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (event.getType() ==<span style="color: #000000;"> ServiceEvent.UNREGISTERING)
        {
            System.out.println(
                </span>"Ex1: Service of type " + objectClass[0] + " unregistered."<span style="color: #000000;">);
        }
        </span><span style="color: #0000ff;">else</span> <span style="color: #0000ff;">if</span> (event.getType() ==<span style="color: #000000;"> ServiceEvent.MODIFIED)
        {
            System.out.println(
                </span>"Ex1: Service of type " + objectClass[0] + " modified."<span style="color: #000000;">);
        }
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>用文字编辑软件打开pom.xml文件，修改成如下内容（注意这里的packaging变成了bundle）：</p>
<div class="cnblogs_code">
<pre><span style="color: #0000ff;">&lt;</span><span style="color: #800000;">project </span><span style="color: #ff0000;">xmlns</span><span style="color: #0000ff;">="http://maven.apache.org/POM/4.0.0"</span><span style="color: #ff0000;"> xmlns:xsi</span><span style="color: #0000ff;">="http://www.w3.org/2001/XMLSchema-instance"</span><span style="color: #ff0000;">
  xsi:schemaLocation</span><span style="color: #0000ff;">="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">modelVersion</span><span style="color: #0000ff;">&gt;</span>4.0.0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">modelVersion</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>felix.tutorial<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>example1<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>1.0.0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">packaging</span><span style="color: #0000ff;">&gt;</span>bundle<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">packaging</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">name</span><span style="color: #0000ff;">&gt;</span>Service listener example<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">name</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>A bundle that displays messages at startup and when service events occur<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">description</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">organization</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">name</span><span style="color: #0000ff;">&gt;</span>Apache Felix<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">name</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">organization</span><span style="color: #0000ff;">&gt;</span>
  
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">properties</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">project.build.sourceEncoding</span><span style="color: #0000ff;">&gt;</span>UTF-8<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">project.build.sourceEncoding</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">properties</span><span style="color: #0000ff;">&gt;</span>
  
  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">build</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">plugins</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">plugin</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>org.apache.felix<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>maven-bundle-plugin<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">extensions</span><span style="color: #0000ff;">&gt;</span>true<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">extensions</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">configuration</span><span style="color: #0000ff;">&gt;</span>
          <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">instructions</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">Bundle-Activator</span><span style="color: #0000ff;">&gt;</span>felix.tutorial.example1.Activator<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">Bundle-Activator</span><span style="color: #0000ff;">&gt;</span>
            <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">Import-Package</span><span style="color: #0000ff;">&gt;</span>org.osgi.framework<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">Import-Package</span><span style="color: #0000ff;">&gt;</span>
          <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">instructions</span><span style="color: #0000ff;">&gt;</span>
        <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">configuration</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">plugin</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">plugins</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">build</span><span style="color: #0000ff;">&gt;</span>

  <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dependencies</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>org.apache.felix<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>org.osgi.core<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>1.0.0<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>junit<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">groupId</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>junit<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">artifactId</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>3.8.1<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">version</span><span style="color: #0000ff;">&gt;</span>
      <span style="color: #0000ff;">&lt;</span><span style="color: #800000;">scope</span><span style="color: #0000ff;">&gt;</span>test<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">scope</span><span style="color: #0000ff;">&gt;</span>
    <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dependency</span><span style="color: #0000ff;">&gt;</span>
  <span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">dependencies</span><span style="color: #0000ff;">&gt;</span>
<span style="color: #0000ff;">&lt;/</span><span style="color: #800000;">project</span><span style="color: #0000ff;">&gt;</span></pre>
</div>
<p>&nbsp;</p>
<p>打包bundle，在DOS窗口下执行<em><strong>mvn package</strong></em>。执行完成后target目录下有一个<em><strong>example1-1.0.0.jar</strong></em>文件，这就是最终需要发布的bundle文件。使用WinRar打开<em><strong>example1-1.0.0.jar</strong></em>，找到<em><strong>META-INFI/MANIFEST.MF</strong></em>，查看其内容，会发现<em><strong>maven-bundle-plugin</strong></em>产生了很多的条目，这些内容对OSGi容器非常的重要。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051415591142.png" alt="" /></p>
<p>&nbsp;</p>
<p>启动Felix，使用<em><strong>start file:/D:/develop/eclipse-jee-indigo-SR2-win32/workspace/felix-analysis/example1/target/example1-1.0.0.jar</strong></em>命令启动bundle。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051416074211.png" alt="" /></p>
<p>&nbsp;</p>
<p>为了测试我们的bundle，可以对它进行停止和启动，相应的会输出对应的信息提示。<em><strong>注意：这里启动和停止命令后面的5，是特定于当前Felix实例的example bundle序号，需要根据情况相应进行改变。</strong></em></p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051416111651.png" alt="" /></p>
<p>&nbsp;</p>
<p>到这一步，我们的第一个bundle也就大功告成了。</p>
<p>&nbsp;</p>
<p>使用Maven开发Bundle的文章：</p>
<p><a href="http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html" target="_blank">Bundle Plugin for Maven</a></p>]]></description></item><item><title>OSGi系列 - Apache Felix初体检</title><link>http://www.cnblogs.com/eastson/archive/2012/05/14/2498824.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 14 May 2012 00:38:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/14/2498824.html</guid><description><![CDATA[<p><span>Felix是一个OSGi版本4规范的Apache实现。</span></p>
<p><span>&nbsp;</span></p>
<p><span>OSGi是一个基于Java的服务平台规范，其目标是被需要长时间运行、动态更新、对运行环境破坏最小化的系统所使用。有许多公司(包括Eclipse IDE，它是第一个采用OSGi技术的重要项目)已经使用OSGi去创建其微内核和</span>插件<span>架构，以允许在运行时刻获得好的模块化和动态组装特性。几个其他项目如Apache Directory、Geronimo、Jackrabbit、Spring以及JOnAS也都正在转向采用OSGi。</span></p>
<p><span>&nbsp;</span></p>
<p>从<a href="http://felix.apache.org/site/downloads.cgi">http://felix.apache.org/site/downloads.cgi</a>下载Apache Felix的最新版（当前的最新版本是4.0.2），下载完毕后解压缩到D:\develop\felix-framework-4.0.2目录，这就算安装完毕了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051408360512.png" alt="" /></p>
<p>&nbsp;</p>
<p>打开一个DOS窗口，切换到D:\develop\felix-framework-4.0.2目录，执行<strong><em>java -jar bin\felix.jar</em></strong>命令。如果出现如下画面，就说明Felix启动成功了。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051408372781.png" alt="" /></p>
<p>&nbsp;</p>
<p>执行<em><strong>help</strong></em>命令，Felix列出了当前安装所有的可用命令。</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051408424738.png" alt="" /></p>
<p>&nbsp;</p>
<p>使用<strong><em>help 命令名</em></strong>格式，可以查看指定命令更具体的使用说明.</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051408435610.png" alt="" /></p>
<p>&nbsp;</p>
<p>更详细的使用说明可以参阅下面的链接：</p>
<p><a href="http://felix.apache.org/site/apache-felix-framework-usage-documentation.html" target="_blank">Apache Felix Usage Documentation</a></p>
<p><a href="http://felix.apache.org/site/getting-started.html" target="_blank">Apache Felix Getting Started</a></p>]]></description></item><item><title>Maven系列 - 自定义本地库的位置</title><link>http://www.cnblogs.com/eastson/archive/2012/05/11/2495351.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 11 May 2012 00:35:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/11/2495351.html</guid><description><![CDATA[<p>Maven默认的本地库位置是<span>${user.home}\.m2\repository，</span>可以修改${maven_home}\conf\settings.xml实现自定义本地库位置。</p>
<p>&nbsp;</p>
<p><img src="http://pic002.cnblogs.com/images/2012/111826/2012051108332671.png" alt="" /></p>]]></description></item><item><title>什么是有价值的人生</title><link>http://www.cnblogs.com/eastson/archive/2012/05/09/2491554.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 09 May 2012 04:49:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/09/2491554.html</guid><description><![CDATA[<p><object width="640" height="480" data="http://player.youku.com/player.php/sid/XMTgzOTM2NDYw/v.swf" type="application/x-shockwave-flash"><param name="src" value="http://player.youku.com/player.php/sid/XMTgzOTM2NDYw/v.swf" /></object></p>
<p><a href="http://v.youku.com/v_show/id_XMTgzOTM2NDYw.html">http://v.youku.com/v_show/id_XMTgzOTM2NDYw.html</a></p>]]></description></item><item><title>JSF系列 - 文章索引</title><link>http://www.cnblogs.com/eastson/archive/2012/05/08/2489525.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 08 May 2012 01:03:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/08/2489525.html</guid><description><![CDATA[<p>DeveloperWorks针对JSF的相关文章：</p>
<p><a href="http://www.ibm.com/developerworks/cn/java/j-jsf1/index.html" target="_blank">怀疑论者的 JSF: 消除关于 JSF 的 FUD</a></p>
<p><a href="http://www.ibm.com/developerworks/cn/java/j-jsf2/" target="_blank">怀疑论者的 JSF: JSF 应用程序的生命周期</a></p>
<p><a href="http://www.ibm.com/developerworks/cn/java/j-jsf3/index.html" target="_blank">怀疑论者的 JSF: JSF 转换与验证</a></p>
<p><a href="http://www.ibm.com/developerworks/cn/java/j-jsf4/index.html" target="_blank">怀疑论者的 JSF: JSF 组件开发</a></p>
<p><a href="http://www.ibm.com/developerworks/cn/java/j-facelets/" target="_blank">Facelets 非常适合 JSF</a>&nbsp;：很详细的介绍Facelets的模板和复合组件。</p>
<p>&nbsp;</p>
<p>Google上搜到的一些JSF文章：</p>
<p><a href="http://wenku.baidu.com/view/9388d63a376baf1ffc4fad43.html" target="_blank">JSF入门教程</a></p>]]></description></item><item><title>I will find my way home</title><link>http://www.cnblogs.com/eastson/archive/2012/05/07/2487225.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 07 May 2012 05:10:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/07/2487225.html</guid><description><![CDATA[<p><object width="640" height="480" data="http://player.youku.com/player.php/sid/XMTIxMDA3OTU2/v.swf" type="application/x-shockwave-flash"><param name="src" value="http://player.youku.com/player.php/sid/XMTIxMDA3OTU2/v.swf" /></object></p>
<p><a href="http://v.youku.com/v_show/id_XMTIxMDA3OTU2.html">http://v.youku.com/v_show/id_XMTIxMDA3OTU2.html</a></p>]]></description></item><item><title>门户系列 - 文章链接</title><link>http://www.cnblogs.com/eastson/archive/2012/05/06/2486537.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 06 May 2012 12:40:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/05/06/2486537.html</guid><description><![CDATA[<p title="JSR168+PORLET标准手册汉化整理">Portal最新的规范是2.0，也就是JSR268：</p>
<p title="JSR168+PORLET标准手册汉化整理"><a href="http://www.jcp.org/en/jsr/detail?id=286" target="_blank"><span>JSR 286: Portlet Specification 2.0</span></a></p>
<p title="JSR168+PORLET标准手册汉化整理"><span>&nbsp;</span></p>
<p title="JSR168+PORLET标准手册汉化整理"><span>下面是以前版本的一些中文翻译，没有找到2.0的，可以作为起步参考：</span></p>
<p title="JSR168+PORLET标准手册汉化整理"><a href="http://www.doc88.com/p-18561786009.html" target="_blank">Portlet标准汉化手册</a><a href="http://www.doc88.com/p-5800464878.html" target="_blank"><br /></a></p>]]></description></item><item><title>C#开发系列 - 文章索引</title><link>http://www.cnblogs.com/eastson/archive/2012/04/26/2472010.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 26 Apr 2012 12:48:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2012/04/26/2472010.html</guid><description><![CDATA[<p class="fn"><a href="http://www.cnblogs.com/smallsoftfox/archive/2012/02/02/2335563.html" target="_blank">WebForm控件系列 -&nbsp;介绍一些开源的第三方控件</a></p>
<p class="fn"><a href="http://www.codeproject.com/Articles/18401/XPanderControls" target="_blank">WebForm控件系列 -&nbsp;XPanderControls</a>&nbsp;</p>
<p class="fn"><a href="http://www.cnblogs.com/wuhuacong/archive/2009/07/09/1520082.html" target="_blank">WebForm控件系列 -&nbsp;WeifenLuo.WinFormsUI.Docking的使用</a>&nbsp;</p>
<p class="fn"><a href="http://www.cnblogs.com/wuhuacong/archive/2009/07/10/1520148.html" target="_blank">WebForm控件系列 -&nbsp;OutLookBar工具条</a>&nbsp;</p>
<p class="fn"><a href="http://www.cnblogs.com/wuhuacong/archive/2009/07/08/1519309.html" target="_parent">WebForm控件系列 -&nbsp;SplashScreen控件</a>&nbsp;</p>
<p class="fn"><a href="http://www.cnblogs.com/wuhuacong/archive/2009/07/07/1518346.html" target="_blank">WebForm控件系列 -&nbsp;HTML内容编辑控件</a>&nbsp;</p>
<p class="fn">&nbsp;</p>
<p class="fn"><a href="http://build.sharpdevelop.net/buildartefacts/" target="_blank">SharpDevelop系列 -&nbsp;SharpDevelop Build Server</a></p>
<p class="fn"><a href="http://wiki.sharpdevelop.net/" target="_blank">SharpDevelop系列 -&nbsp;SharpDevelop Wiki</a></p>
<p id="ctl00_TitleArea_ArticleTitle" class="fn"><a href="http://www.codeproject.com/Articles/12587/Building-Applications-with-the-SharpDevelop-Core" target="_blank">SharpDevelop系列 -&nbsp;Building Applications with the SharpDevelop Core</a></p>
<div>
<p id="ctl00_TitleArea_ArticleTitle" class="fn"><a href="http://laputa.sharpdevelop.net/WritingASharpDevelopAddInImageViewer.aspx" target="_blank">SharpDevelop系列 -&nbsp;Writing a SharpDevelop AddIn - Image Viewer</a></p>
<p class="fn">&nbsp;</p>
<p class="fn"><a href="http://www.mono-project.com/Introduction_to_Mono.Addins" target="_blank">Mono.Addins系列 -&nbsp;Introduction to Mono.Addins</a></p>
<p class="fn"><a href="http://monoaddins.codeplex.com/documentation?referringTitle=Home" target="_blank">Mono.Addins系列 - Mono.Addins&nbsp;Documentation</a></p>
<p class="fn">&nbsp;&nbsp;</p>
<p class="fn"><a href="http://www.cnblogs.com/wuhuacong/archive/2011/06/30/2095080.html" target="_blank">资源系列 -&nbsp;丰富的公用类库（1）</a></p>
<p class="fn"><a href="http://www.cnblogs.com/wuhuacong/archive/2011/07/04/2097771.html" target="_blank">资源系列 -&nbsp;丰富的公用类库（2）</a></p>
<p class="fn"><a href="http://www.cnblogs.com/wuhuacong/archive/2011/07/09/2101760.html" target="_blank">资源系列 -&nbsp;丰富的公用类库（3）</a></p>
<p class="fn"><a href="http://www.cnblogs.com/wuhuacong/archive/2011/07/30/2121829.html" target="_blank">资源系列 -&nbsp;丰富的公用类库（4）</a></p>
<p class="fn"><a href="http://www.cnblogs.com/wuhuacong/archive/2011/10/13/2211008.html" target="_blank">资源系列 -&nbsp;丰富的公用类库（5）</a></p>
<p class="fn"><a href="http://www.cnblogs.com/wuhuacong/archive/2011/10/20/2219665.html" target="_blank">资源系列 -&nbsp;丰富的公用类库（6）</a></p>
<p class="fn"><a href="http://www.famfamfam.com/lab/icons/silk/previews/index_abc.png" target="_blank">资源系列 - FamFamFam Icons</a></p>
</div>]]></description></item><item><title>HIBERNATE使用方法</title><link>http://www.cnblogs.com/eastson/archive/2011/01/23/1942677.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sun, 23 Jan 2011 13:34:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2011/01/23/1942677.html</guid><description><![CDATA[<p>&lt;class name="Product"&gt;<br />&nbsp;&nbsp;&nbsp; &lt;id name="serialNumber" column="productSerialNumber"/&gt;<br />&nbsp;&nbsp;&nbsp; &lt;set name="parts"&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;key column="productSerialNumber" not-null="true"/&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;one-to-many class="Part"/&gt;<br />&nbsp;&nbsp;&nbsp; &lt;/set&gt;<br />&lt;/class&gt;</p>]]></description></item><item><title>工作计划</title><link>http://www.cnblogs.com/eastson/archive/2010/03/25/1696172.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 25 Mar 2010 13:50:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2010/03/25/1696172.html</guid><description><![CDATA[<p>A1. 学习《C++ Primer》，《windows程序设计》和《windows核心编程》，每天一章</p>
<p>A2. 完成VC++的网页浏览和Python集成</p>
<p>A3. PHP源代码调试</p>
<p>&nbsp;</p>
<p>B1. NextBooks前台单据完成</p>
<p>B2. NextBooks后台数据处理</p>
<p>B3. NextBooks的报表解决方式</p>
<p>&nbsp;</p>
<p>================================================================================</p>
<p>&nbsp;</p>
<p>1. 实现自己的VCL控件</p>
<p>2. 实现集中控制，也就是说集中控制权限，系统设置等功能。wlserver\demo_book</p>
<p>&nbsp;</p>
<p>================================================================================</p>
<p>&nbsp;</p>
<p>2010-03-29 </p>
<p>计划：1.实现可锁的出入库, 用另开资料库的方式</p>
<p>&nbsp;</p>
<p>================================================================================</p>
<p>&nbsp;</p>
<p>2010-03-27 </p>
<p>计划：1. 找到简单的货品输入方式，可以用开窗选择模式</p>
<p>　　　2. 收集到足够输入的图标</p>
<p>&nbsp;</p>
<p>================================================================================</p>
<p>&nbsp;</p>
<p>2010-03-26 </p>
<p>计划：1. 实现销售/采购/生产资料的输入</p>
<p>　　　2. 可锁的入库单和出库单</p>
<p>完成：1.实现了销售和采购，生产没有完成</p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>周工作计划 2010/03/01</title><link>http://www.cnblogs.com/eastson/archive/2010/03/01/1675387.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 01 Mar 2010 01:25:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2010/03/01/1675387.html</guid><description><![CDATA[<p>1. 实现简单的输入控件</p>
<p>2. 基本资料的维护进行完善</p>
<p>3. 速达帮助的理解</p>
<p>&nbsp;</p>]]></description></item><item><title>[转载]Delphi中的Access技巧集</title><link>http://www.cnblogs.com/eastson/archive/2010/02/17/1668948.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 17 Feb 2010 08:48:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2010/02/17/1668948.html</guid><description><![CDATA[<p>　　1.DELPHI中操作ACCESS数据库(建立.mdb文件,压缩数据库) <br />　　以下代码在WIN2K,D6,MDAC2.6下测试通过, <br />　　编译好的程序在WIN98第二版无ACCESS环境下运行成功. <br />　　//在之前uses ComObj,ActiveX <br />　　//声明连接字符串 <br />　　Const <br />　　SConnectionString = 'Provider=Microsoft.Jet.OLEDB.4.0;Data Source=%s;' <br />　　+'Jet OLEDB:Database Password=%s;'; <br />　　<br />　　//============================================================================= <br />　　// Procedure: GetTempPathFileName <br />　　// Author : ysai <br />　　// Date : 2003-01-27 <br />　　// Arguments: (None) <br />　　// Result : string <br />　　//============================================================================= <br />　　function GetTempPathFileName():string; <br />　　//取得临时文件名 <br />　　var <br />　　SPath,Sfile&amp;:array [0..254] of char; <br />　　begin <br />　　GetTempPath(254,SPath); <br />　　GetTempFileName(SPath,'~SM',0,SFile); <br />　　result:=SFile; <br />　　DeleteFile(PChar(result)); <br />　　end; <br />　　//============================================================================= <br />　　// Procedure: CreateAccessFile <br />　　// Author : ysai <br />　　// Date : 2003-01-27 <br />　　// Arguments: FileName:String;PassWord:string='' <br />　　// Result : boolean <br />　　//============================================================================= <br />　　function CreateAccessFile(FileName:String;PassWord:string=''):boolean; <br />　　//建立Access文件，如果文件存在则失败 <br />　　var <br />　　STempFileName:string; <br />　　vCatalog:OleVariant; <br />　　begin <br />　　STempFileName:=GetTempPathFileName; <br />　　try <br />　　vCatalog:=CreateOleObject('ADOX.Catalog'); <br />　　vCatalog.Create(format(SConnectionString,[STempFileName,PassWord])); <br />　　result:=CopyFile(PChar(STempFileName),PChar(FileName),True); <br />　　DeleteFile(STempFileName); <br />　　except <br />　　result:=false; <br />　　end; <br />　　end; <br />　　//============================================================================= <br />　　// Procedure: CompactDatabase <br />　　// Author : ysai <br />　　// Date : 2003-01-27 <br />　　// Arguments: AFileName,APassWord:string <br />　　// Result : boolean <br />　　//============================================================================= <br />　　function CompactDatabase(AFileName,APassWord:string):boolean; <br />　　//压缩与修复数据库,覆盖源文件 <br />　　var <br />　　STempFileName:string; <br />　　vJE:OleVariant; <br />　　begin <br />　　STempFileName:=GetTempPathFileName; <br />　　try <br />　　vJE:=CreateOleObject('JRO.JetEngine'); <br />　　vJE.CompactDatabase(format(SConnectionString,[AFileName,APassWord]), <br />　　format(SConnectionString,[STempFileName,APassWord])); <br />　　result:=CopyFile(PChar(STempFileName),PChar(AFileName),false); <br />　　DeleteFile(STempFileName); <br />　　except <br />　　result:=false; <br />　　end; <br />　　end; <br />　　 //============================================================================= <br />　　// Procedure: ChangeDatabasePassword <br />　　// Author : ysai <br />　　// Date : 2003-01-27 <br />　　// Arguments: AFileName,AOldPassWord,ANewPassWord:string <br />　　// Result : boolean <br />　　//============================================================================= <br />　　function ChangeDatabasePassword(AFileName,AOldPassWord,ANewPassWord:string):boolean; <br />　　//修改ACCESS数据库密码 <br />　　var <br />　　STempFileName:string; <br />　　vJE:OleVariant; <br />　　begin <br />　　STempFileName:=GetTempPathFileName; <br />　　try <br />　　vJE:=CreateOleObject('JRO.JetEngine'); <br />　　vJE.CompactDatabase(format(SConnectionString,[AFileName,AOldPassWord]), <br />　　format(SConnectionString,[STempFileName,ANewPassWord])); <br />　　result:=CopyFile(PChar(STempFileName),PChar(AFileName),false); <br />　　DeleteFile(STempFileName); <br />　　except <br />　　result:=false; <br />　　end; <br />　　end; <br />　　2.ACCESS中使用SQL语句应注意的地方及几点技巧 <br />　　以下SQL语句在ACCESS XP的查询中测试通过 <br />　　建表: <br />　　Create Table Tab1 ( <br />　　ID Counter, <br />　　Name string, <br />　　Age integer, <br />　　[Date] DateTime); <br />　　技巧: <br />　　自增字段用 Counter 声明. <br />　　字段名为关键字的字段用方括号[]括起来,数字作为字段名也可行. <br />　　建立索引: <br />　　下面的语句在Tab1的Date列上建立可重复索引 <br />　　Create Index iDate ON Tab1 ([Date]); <br />　　完成后ACCESS中字段Date索引属性显示为 - 有(有重复). <br />　　下面的语句在Tab1的Name列上建立不可重复索引 <br />　　Create Unique Index iName ON Tab1 (Name); <br />　　完成后ACCESS中字段Name索引属性显示为 - 有(无重复). <br />　　下面的语句删除刚才建立的两个索引 <br />　　Drop Index iDate ON Tab1; <br />　　Drop Index iName ON Tab1; <br />　　ACCESS与SQLSERVER中的UPDATE语句对比: <br />　　SQLSERVER中更新多表的UPDATE语句: <br />　　UPDATE Tab1 <br />　　SET a.Name = b.Name <br />　　FROM Tab1 a,Tab2 b <br />　　WHERE a.ID = b.ID; <br />　　同样功能的SQL语句在ACCESS中应该是 <br />　　UPDATE Tab1 a,Tab2 b <br />　　SET a.Name = b.Name <br />　　WHERE a.ID = b.ID; <br />　　即:ACCESS中的UPDATE语句没有FROM子句,所有引用的表都列在UPDATE关键字后. <br />　　上例中如果Tab2可以不是一个表,而是一个查询,例: <br />　　UPDATE Tab1 a,(Select ID,Name From Tab2) b <br />　　SET a.Name = b.Name <br />　　WHERE a.ID = b.ID; <br />　　访问多个不同的ACCESS数据库-在SQL中使用In子句: <br />　　Select a.*,b.* From Tab1 a,Tab2 b In 'db2.mdb' Where a.ID=b.ID; <br />　　上面的SQL语句查询出当前数据库中Tab1和db2.mdb(当前文件夹中)中Tab2以ID为关联的所有记录. <br />　　缺点-外部数据库不能带密码. <br />　　补充:看到ugvanxk在一贴中的答复,可以用 <br />　　Select * from [c:\aa\a.mdb;pwd=1111].table1; <br />　　ACCESS XP测试通过 <br />　　在ACCESS中访问其它ODBC数据源 <br />　　下例在ACCESS中查询SQLSERVER中的数据 <br />　　SELECT * FROM Tab1 IN [ODBC] <br />　　[ODBC;Driver=SQL Server;UID=sa;PWD=;Server=127.0.0.1;DataBase=Demo;] <br />　　外部数据源连接属性的完整参数是: <br />　　[ODBC;DRIVER=driver;SERVER=server;DATABASE=database;UID=user;PWD=password;] <br />　　其中的DRIVER=driver可以在注册表中的 <br />　　HKEY_LOCAL_MACHINE\SOFTWARE\ODBC\ODBCINST.INI\ <br />　　中找到 <br />　　异构数据库之间导数据参见 碧血剑 <br />　　ACCESS支持子查询 <br />　　ACCESS支持外连接,但不包括完整外部联接,如支持 <br />　　LEFT JOIN 或 RIGHT JOIN <br />　　但不支持 <br />　　FULL OUTER JOIN 或 FULL JOIN <br />　　ACCESS中的日期查询 <br />　　注意:ACCESS中的日期时间分隔符是#而不是引号 <br />　　Select * From Tab1 Where [Date]&gt;#2002-1-1#; <br />　　在DELPHI中我这样用 <br />　　SQL.Add(Format( <br />　　'Select * From Tab1 Where [Date]&gt;#%s#;', <br />　　[DateToStr(Date)])); <br />　　ACCESS中的字符串可以用双引号分隔,但SQLSERVER不认,所以为了迁移方便和兼容, 建议用单引号作为字符串分隔符.</p>]]></description></item><item><title>[转载]DELPHI组件安装全攻略</title><link>http://www.cnblogs.com/eastson/archive/2010/02/06/1664889.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Sat, 06 Feb 2010 04:25:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2010/02/06/1664889.html</guid><description><![CDATA[<p style="margin: 4px 2px 0px;" class="content">一、前言 <br />&nbsp; &nbsp; 由于系统不稳定，经常要重装DELPHI。而每次安装DELPHI的时候，原来注册的组件都被刷新，只能重新安装组件。众所周知，DELPHI的第三方组件N多，这个安装着实令人头疼。更有甚者，因为某些莫名其妙的原因，DELPHI的组件面板上有时居然只剩下一个标准组件。碰到这种情况，我不知道各位如何处理，我每次都是重新安装。为了解决这个难题，我决定深入了解DELPHI组件是如何被注册。以下是我的一点发现，发表出来供大家参考，以便抛砖引玉。<br /><br />&nbsp;二、DELPHI组件安装的构成<br /><br />&nbsp; &nbsp; &nbsp; 安装一个组件到DELPHI上，实际上DELPHI只做几个有限的动作。<br /><br />&nbsp; &nbsp; &nbsp; 1、添加文件路径到搜索路径上；<br /><br />&nbsp; &nbsp; &nbsp; 2、记录包所在的路径以及包的名字；<br /><br />&nbsp; &nbsp; &nbsp; 3、将帮助文件登记在系统中。<br /><br />&nbsp; &nbsp; &nbsp; 而这些内容都可以在注册表中找到，这意味着，我们可以只要注册表中内容导出，就可以不用重新安装组件，而只要简单将注册表内容导入到注册表中就可以啦。<br /><br />&nbsp;三、DELPHI的Library搜索路径<br /><br />&nbsp; &nbsp; &nbsp; Library的搜索路径被记录在注册表中，每次DELPHI启动时，都是直接从这个项读入数据。以下是他的注册项，大家可以根据自己的需要，自由的编辑。<br /><br />&nbsp; &nbsp; &nbsp;[HKEY_CURRENT_USER\Software\Borland\Delphi\5.0\Library]<br /><br />&nbsp; &nbsp; &nbsp;"Search Path" = "$(DELPHI)\\Bin;$(DELPHI)\\Lib"<br /><br />&nbsp; &nbsp; 这里修改的内容可以从DELPHI的菜单项Tools\Environment Options..\Library\LibraryPath中找到，他的作用在于单元和库的查找。当你进行编辑时，DELPHI会按照这里的路径顺序进行搜索，直到找到第一个文件为止。曾经发现一个问题，即一个文件同时存在两个路径中，其中有版本兼容问题，如果将版本问题的文件放在前一个路径中，编译就会发生错误。<br /><br />&nbsp; &nbsp; &nbsp;有时候，我们在DELPHI的IDE环境中，想跟踪进源码时，却无法找到源码，就是因为没有将源码的路径添加到搜索路径中。<br /><br />&nbsp;四、DELPHI包的安装<br /><br />&nbsp; &nbsp; &nbsp;每次在DELPHI中安装组件，都要考虑是否冲突，还要在N多的组件中找到那个组件。很多情况下，在组件面板中显示的不是包文件的名字，那更头疼。这事实上只是DELPHI的障眼法，真正的内情事实上十分简单。每次DELPHI启动时，都要在读取注册表的记录的文件名和路径，然后从包文件中解出所包含的组件，再写入面板。以下是注册表的内容。<br /><br />&nbsp; &nbsp; &nbsp; [HKEY_CURRENT_USER\Software\Borland\Delphi\5.0\Known Packages]<br /><br />&nbsp; &nbsp; &nbsp; "$(DELPHI)\\Bin\dclstd50.bpl" = "Borland Standard Components"<br /><br />&nbsp; &nbsp; &nbsp;前一部分是DesignTime包的文件名，后一部分是该包的名称。向DELPHI注册的包，可以不需要在IDE中安装，只需要往这里添加个项就可以了。主要把这个注册表的项目保存下来，不管安装多少次DELPHI都没有关系，还可以自由编辑安装，改变后重新导入即可。<br /><br />&nbsp; &nbsp; &nbsp; 这个注册表的内容都可以在DELPHI的IDE的菜单项 Component\Install Packages\Packages中找到。<br /><br />&nbsp; &nbsp; &nbsp; 需要注意的是，注册表中有个项记录被禁止使用的包，如果某个包被记录在这里，那么即使在Known Packages被登记也不会被使用，直到被从这里删除为止。这个项是下面这个。<br /><br />&nbsp; &nbsp; &nbsp; [HKEY_CURRENT_USER\Software\Borland\Delphi\5.0\Disable Packages]<br /><br />&nbsp;五、ActiveX控件的安装<br /><br />&nbsp; &nbsp; &nbsp; 安装ActiveX组件，可以直接使用RegSvr32.exe，但是这个文件不是每个Windows版本都有，但应该可以找到类似的可执行程序。<br /><br />&nbsp; &nbsp; &nbsp; RegSvr32 /u/s DLLlName<br /><br />&nbsp; &nbsp; &nbsp; /u 表示卸载该控件；/s 表示安装后，不显示信息（silent）<br /><br />&nbsp; &nbsp; &nbsp;这个步骤仅仅是向操作系统注册，在DELPHI还不能用。但在IDE的菜单项Component\Import ActiveXControl\ImportActiveX的列表中，可以看到刚才注册的控件，选定该控件，再点击Install...，系统就自动为这个控件生成一个文件，然后注册，于是乎就可以在DELPHI中象普通组件那样被使用。<br /><br />&nbsp;六、Run Time包的搜索<br /><br />&nbsp; &nbsp; &nbsp; 在DELPHI启动时，会搜索Run Time包，这些包一般会放在System32、${DELPHI}\bin、${DELPHI}\lib等目录下，这些包含在windows的环境变量 Path 中，但是为了方便安装，事实上可以把他们统一放在另外的目录下，然后再向windows登记这个路径。Run Time的搜索和Design Time的不同，他使用的是操作系统的路径，因此要特别小心重复放置。<br /><br />&nbsp;七、帮助的链接<br /><br />&nbsp; &nbsp; &nbsp; 1、在 &nbsp;delphi5.cnt &nbsp;文件中添加 :Include &times;&times;&times;.cnt ；这个项是在目录中内容<br /><br />&nbsp; &nbsp; &nbsp; 2、在 &nbsp;delphi5.ohi &nbsp;文件中添加 <br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&times;&times;&times;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;:Index &times;&times;&times; = &times;&times;&times;.hlp<br /><br />&nbsp; &nbsp; &nbsp; 这个项是搜索索引用的。<br /><br />&nbsp; &nbsp; &nbsp; 3、在 &nbsp;delphi5.ohl &nbsp;文件中添加<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&times;&times;&times;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;:Link &times;&times;&times;.hlp<br /><br />&nbsp; &nbsp; &nbsp; 这个项添加链接<br /><br />&nbsp; &nbsp; &nbsp; 4、在 &nbsp;delphi5.ohc &nbsp;文件中添加<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&times;&times;&times;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;:Include &times;&times;&times;.toc<br /><br />&nbsp; &nbsp; &nbsp; 5、在注册表中添加各个文件的路径<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[HKEY_LOCAL_MACHINE\SOFTWART\Microsoft\Windows\Help]<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;"teechart.hlp" = "D:\Borland\Delphi5\Help" &nbsp; &nbsp; &nbsp;<br /><br />&nbsp; &nbsp; &nbsp; 6、删除delphi5.hlp所在的目录下的*.GID文件，该文件是隐藏文件，将其删除后，重新打开delphi5.hlp，系统将重新生成一个GID文件，你在上面添加的内容就被编译到GID文件中，呵呵，一切就这么OK了。 </p>]]></description></item><item><title>[转载]InnoSetup5.2.3啊风增强版 安装代码</title><link>http://www.cnblogs.com/eastson/archive/2010/02/04/1663816.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Thu, 04 Feb 2010 09:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2010/02/04/1663816.html</guid><description><![CDATA[<p>[Setup]<br />; 注: AppId的值为单独标识该应用程序。<br />; 不要为其他安装程序使用相同的AppId值。<br />; (生成新的GUID，点击 工具|在IDE中生成GUID。)<br />AppName=InnoSetup5.2.3啊风增强版<br />AppVerName=InnoSetup5.2.3啊风增强版<br />AppPublisher=啊风(A_Wind)<br />AppPublisherURL=http://windsoft.blogbus.com<br />AppSupportURL=http://windsoft.blogbus.com<br />AppUpdatesURL=http://windsoft.blogbus.com<br />DefaultDirName={pf}\InnoSetup5<br />DefaultGroupName=InnoSetup5.2.3啊风增强版<br />InfoBeforeFile=embedded\说明.txt<br />OutputDir=OutputDir<br />OutputBaseFilename=InnoSetup<br />SetupIconFile=embedded\MAINICON.ico<br />Compression=lzma<br />SolidCompression=true<br />AlwaysShowDirOnReadyPage=true<br />AlwaysShowGroupOnReadyPage=true<br />InternalCompressLevel=max<br />VersionInfoVersion=5.2.3<br />VersionInfoCompany=http://windsoft.blogbus.com<br />VersionInfoDescription=Innosetup5啊风增强版<br />VersionInfoTextVersion=5.2.3<br />ChangesAssociations=true<br />ChangesEnvironment=true<br />AllowNoIcons=true<br />ShowLanguageDialog=auto<br />AppVersion=5.2.3<br />AlwaysShowComponentsList=true<br />;当这个指令设置为 yes，安装程序将总是显示定制安装的组件列表。如果这个设置为 no，安装程序将只在用户在类型列表中选择自定义类型时才显示组件列表。<br />ShowComponentSizes=true<br />;当这个指令设置为 yes，安装程序将在组件列表中显示组件大小。根据最大的组件，安装程序将用 KB 或 MB 为单位显示。<br />WizardImageFile=embedded\WizardImage.bmp<br />WizardSmallImageFile=embedded\a_wind.bmp</p>
<p>[Languages]<br />Name: chinesesimp; MessagesFile: embedded\Default.isl</p>
<p>[Files]<br />Source: {app}\Builtins.iss; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\CodeTemplates.dat; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Compil32.exe; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Default.isl; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\isbunzip.dll; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\isbzip.dll; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\ISCC.exe; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\ISCmplr.dll; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\ISCmplr.dls; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\ISCrypt.dll; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\ISetup.cnt; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\isfaq.htm; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\islzma.dll; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\ISPPCC.EXE; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\isunzlib.dll; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\iszlib.dll; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\license.txt; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Setup.e32; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\SetupLdr.e32; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Templates.dat; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\whatsnew.htm; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\WizModernImage.bmp; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\WizModernImage-IS.bmp; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\WizModernSmallImage.bmp; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\WizModernSmallImage-IS.bmp; DestDir: {app}; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\64Bit.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\64BitThreeArch.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\64BitTwoArch.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\CodeAutomation.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\CodeClasses.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\CodeDlg.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\CodeDll.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\CodeExample1.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\Components.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\Example1.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\Example2.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\Example3.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\ISPPExample1.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\ISPPExample1License.txt; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\Languages.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\MyDll.dll; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\MyProg-IA64.exe; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\MyProg-x64.exe; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\MyProg.chm; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\MyProg.exe; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\Readme-Dutch.txt; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\Readme-German.txt; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\Readme.txt; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\UninstallCodeDll.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\UninstallCodeExample1.iss; DestDir: {app}\Examples; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\MyDll\C\MyDll.c; DestDir: {app}\Examples\MyDll\C\MyDll.c; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\MyDll\C\MyDll.def; DestDir: {app}\Examples\MyDll\C\MyDll.def; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\MyDll\C\MyDll.dsp; DestDir: {app}\Examples\MyDll\C\MyDll.dsp; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Examples\MyDll\Delphi\MyDll.dpr; DestDir: {app}\Examples\MyDll\Delphi\MyDll.dpr; Components: Inno; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Languages\*; DestDir: {app}\Languages; Components: Inno; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />;Inno必装文件<br />Source: {app}\Help\InnoSetup5.0.7中文帮助.pdf; DestDir: {app}\Help; Components: inno\Help and inno\Help\Inno507; Flags: ignoreversion uninsrestartdelete&nbsp; uninsrestartdelete<br />Source: {app}\Help\Inno技术贴集.chm; DestDir: {app}\Help; Components: inno\Help and inno\Help\InnoJS; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Help\ISetup5.2.3Eng.chm; DestDir: {app}\Help; Components: inno\Help and inno\Help\Inno523E; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Help\ISetup5.2.3SC.chm; DestDir: {app}\Help; Components: inno\Help and inno\Help\Inno523C; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Help\IsExtendSC.chm; DestDir: {app}\Help; Components: inno\Help and inno\Help\IsExtendSC; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Help\ISppEng.chm; DestDir: {app}\Help; Components: inno\Help and inno\Help\ISPPE; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\Help\ISppSC.chm; DestDir: {app}\Help; Components: inno\Help and inno\Help\ISPPC; Flags: ignoreversion uninsrestartdelete<br />;Inno帮助文档<br />Source: {app}\unpacker\CompiledCode.bin; DestDir: {app}\unpacker; Components: unpacker and unpacker\innogui; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\unpacker\DisasmGUI.exe; DestDir: {app}\unpacker; Components: unpacker and unpacker\disasmgui; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\JanHKill.exe; DestDir: {app}; Components: unpacker and unpacker\disasmgui; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\psvince.dll; DestDir: {app}; Components: unpacker and unpacker\disasmgui; Flags: ignoreversion uninsrestartdelete<br />Source: {app}\unpacker\InnoGPW.exe; DestDir: {app}\unpacker; Components: unpacker and unpacker\innogpw; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\unpacker\InnoGPW.txt; DestDir: {app}\unpacker; Components: unpacker and unpacker\innogpw; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\unpacker\InnoPWLib.dll; DestDir: {app}\unpacker; Components: unpacker and unpacker\innogpw; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\unpacker\InnoGui.exe; DestDir: {app}\unpacker; Components: unpacker and unpacker\innogui; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\unpacker\innounp.exe; DestDir: {app}\unpacker; Components: unpacker and unpacker\innosup; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\unpacker\Innounp.txt; DestDir: {app}\unpacker; Components: unpacker and unpacker\innosup; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\unpacker\ISUnp.exe; DestDir: {app}\unpacker; Components: unpacker and unpacker\innosup; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\unpacker\ISUnp.txt; DestDir: {app}\unpacker; Components: unpacker and unpacker\innosup; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\unpacker\ShowPW.exe; DestDir: {app}\unpacker; Components: unpacker and unpacker\ShowPW; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\unpacker\ShowPW.txt; DestDir: {app}\unpacker; Components: unpacker and unpacker\ShowPW; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />;Inno解包套装<br />Source: {app}\istool\*; DestDir: {app}\istool; Components: tools and tools\IStool; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />;istool<br />Source: {app}\isfd\*; DestDir: {app}\isfd; Components: tools and tools\isfd; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />;isfd<br />Source: {app}\issi\*; DestDir: {app}\issi; Components: tools and tools\issi; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />;issi<br />Source: {app}\ISSkinExample\*; DestDir: {app}\ISSkinExample; Components: tools and tools\isskin; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />;ISSkin<br />Source: {app}\UninsHs\*; DestDir: {app}\UninsHs; Components: tools\uninshs; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\UninsHs.exe; DestDir: {app}; Components: tools\uninshs; Flags: ignoreversion uninsrestartdelete<br />;UninsHs<br />Source: {app}\Plugins\callback\*; DestDir: {app}\Plugins\callback; Components: Plugins and Plugins\callback; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\Plugins\Description\*; DestDir: {app}\Plugins\Description; Components: Plugins and Plugins\Description; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\Plugins\fire\*; DestDir: {app}\Plugins\fire; Components: Plugins and Plugins\firelib; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\Plugins\flash\*; DestDir: {app}\Plugins\flash; Components: Plugins and Plugins\flashlib; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\Plugins\Gif\*; DestDir: {app}\Plugins\Gif; Components: Plugins and Plugins\giflib; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\Plugins\Water\*; DestDir: {app}\Plugins\Water; Components: Plugins and Plugins\waterlib; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\Plugins\timectrl\*; DestDir: {app}\Plugins\timectrl; Components: Plugins and Plugins\timectrl; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />Source: {app}\Plugins\splash_music\*; DestDir: {app}\Plugins\splash_music; Components: Plugins and Plugins\spmu; Flags: ignoreversion recursesubdirs createallsubdirs uninsrestartdelete<br />;IS效果插件相关文件<br />[Registry]<br />Root: HKCR; Subkey: InnoSetupScriptFile\shell\Compile; ValueType: String; ValueData: 编译(&amp;L); Components: Inno; Tasks: fileassoc; Flags: uninsdeletekey<br />Root: HKCR; Subkey: .iss; ValueName: Content Type; ValueType: String; ValueData: text/plain; Components: Inno; Tasks: fileassoc; Flags: uninsdeletekey<br />Root: HKCR; Subkey: InnoSetupScriptFile; ValueType: String; ValueData: Inno Setup 脚本; Components: Inno; Tasks: fileassoc; Flags: uninsdeletekey<br />Root: HKCR; Subkey: InnoSetupScriptFile\shell\OpenWithInnoSetup; ValueType: String; ValueData: 用 &amp;Inno Setup 打开; Components: Inno; Tasks: fileassoc; Flags: uninsdeletekey<br />;Inno主程序注册信息<br />Root: HKCR; Subkey: exefile\shell\Inno Setup UnPacker GUI; Components: unpacker\innogui; Tasks: innogui_icon; Flags: uninsdeletekey noerror<br />Root: HKCR; Subkey: exefile\shell\Inno Setup UnPacker GUI\command; ValueType: String; ValueData: """{app}\unpacker\InnoGui.exe"" ""%1"""; Components: unpacker\innogui; Tasks: innogui_icon; MinVersion: 4.1,4.0</p>
<p>Root: HKCR; Subkey: exefile\shell\Inno Setup Unpacker Explorer; Components: unpacker\innosup; Tasks: innosup_icon; Flags: uninsdeletekey noerror<br />Root: HKCR; Subkey: exefile\shell\Inno Setup Unpacker Explorer\Command; ValueType: String; ValueData: """{app}\unpacker\ISUnp.exe"" ""%1"""; Components: unpacker\innosup; Tasks: innosup_icon; MinVersion: 4.1,4.0<br />;Inno解包套件注册信息</p>
<p>Root: HKCR; Subkey: .iss; ValueType: String; ValueData: InnoSetupScriptFile; Components: tools\IStool; Tasks: shelllIST; Flags: uninsdeletekey<br />Root: HKCU; Subkey: InnoSetupScriptFile; Components: tools\IStool; Tasks: shelllIST; Flags: uninsdeletevalue<br />Root: HKCR; Subkey: InnoSetupScriptFile\DefaultIcon; ValueType: String; ValueData: {app}\ISTool\ISTool.exe,0; Components: tools\IStool; Tasks: shelllIST; Flags: uninsdeletevalue<br />Root: HKCU; Subkey: InnoSetupScriptFile\shell; Components: tools\IStool; Tasks: shelllIST; Flags: uninsdeletevalue<br />Root: HKCU; Subkey: InnoSetupScriptFile\shell\open; Components: tools\IStool; Tasks: shelllIST; Flags: uninsdeletevalue<br />Root: HKCR; Subkey: InnoSetupScriptFile\shell\open\command; ValueType: String; ValueData: {app}\ISTool\ISTool.exe %1; Components: tools\IStool; Tasks: shelllIST; Flags: uninsdeletevalue<br />Root: HKCR; Subkey: InnoSetupScriptFile\shell\OpenWithISTool; ValueType: String; ValueData: 用 &amp;ISTool 打开; Components: tools\IStool; Tasks: shelllIST; Flags: uninsdeletevalue<br />Root: HKCR; Subkey: InnoSetupScriptFile\shell\OpenWithISTool\command; ValueType: String; ValueData: {app}\ISTool\ISTool.exe %1; Components: tools\IStool; Tasks: shelllIST; Flags: uninsdeletevalue<br />;ISTool注册信息<br />Root: HKCR; Subkey: .isf; ValueType: String; ValueData: Inno Setup Form; Components: tools\isfd; Tasks: shelllISFD; Flags: uninsdeletekey<br />Root: HKCR; Subkey: Inno Setup Form; ValueType: String; ValueData: Inno Setup Form; Components: tools\isfd; Tasks: shelllISFD; Flags: uninsdeletekey<br />Root: HKCR; Subkey: Inno Setup Form\Shell\Open\Command; ValueType: String; ValueData: """{app}\ISFD\ISFD.exe"" ""%1"""; Components: tools\isfd; Tasks: shelllISFD; Flags: uninsdeletevalue<br />Root: HKCR; Subkey: Inno Setup Form\DefaultIcon; ValueType: String; ValueData: {app}\ISFD\ISFD.exe,0; Components: tools\isfd; Tasks: shelllISFD; Flags: uninsdeletevalue<br />Root: HKCU; Subkey: Software\Majahr\InstalledApps; ValueName: ISFD; ValueType: String; ValueData: {app}\ISFD; Components: tools\isfd; Tasks: shelllISFD; Flags: uninsclearvalue uninsdeletekeyifempty<br />;isfd注册信息<br />[Icons]<br />Name: {group}\解包套件\InnoUnpGui; Filename: {app}\unpacker\InnoGui.exe; Components: unpacker\innogui<br />Name: {group}\解包套件\ISUnp文件浏览器; Filename: {app}\unpacker\ISUnp.exe; Components: unpacker\innosup<br />Name: {group}\解包套件\IS密码获取器; Filename: {app}\unpacker\InnoGPW.exe; Components: unpacker\innogpw<br />Name: {group}\解包套件\DisasmGUI; Filename: {app}\unpacker\DisasmGUI.exe; Components: unpacker\disasmgui</p>
<p>Name: {group}\帮助文档\InnoSetupFAQ; Filename: {app}\isfaq.htm; Components: inno<br />Name: {group}\帮助文档\InnoSetup帮助(中文); Filename: {app}\Help\ISetup5.2.3SC.chm; Components: inno\Help\Inno523C<br />Name: {group}\帮助文档\InnoSetup帮助(英文); Filename: {app}\Help\ISetup5.2.3Eng.chm; Components: inno\Help\Inno523E<br />Name: {group}\帮助文档\InnoSetup功能扩展帮助(中文); Filename: {app}\Help\IsExtendSC.chm; Components: inno\Help\Inno507<br />Name: {group}\帮助文档\InnoSetup预处理器帮助(中文); Filename: {app}\Help\ISppSC.chm; Components: inno\Help\ISPPC<br />Name: {group}\帮助文档\InnoSetup预处理器帮助(英文); Filename: {app}\Help\ISppEng.chm; Components: inno\Help\ISPPE<br />Name: {group}\帮助文档\Inno技术贴集(中文); Filename: {app}\Help\Inno技术贴集.chm; Components: inno\Help\InnoJS<br />Name: {group}\帮助文档\InnoSetup5.0.7帮助(pdf中文); Filename: {app}\Help\InnoSetup5.0.7中文帮助.pdf; Components: inno\Help\Inno507</p>
<p>Name: {group}\访问啊风的Blog; Filename: <a href="http://www.windsoft.blogbus.com/">http://www.windsoft.blogbus.com</a>; WorkingDir: {app}; Components: Inno<br />Name: {group}\Compil32编译器增强版; Filename: {app}\Compil32.exe; WorkingDir: {app}; Components: Inno<br />Name: {group}\ISTool5.2.1; Filename: {app}\istool\ISTool.exe; WorkingDir: {app}\istool; Components: tools\IStool<br />Name: {group}\ISFD; Filename: {app}\isfd\ISFD.exe; WorkingDir: {app}\isfd; Components: tools\isfd<br />Name: {group}\卸载InnoSetup5; Filename: {uninstallexe}; MinVersion: 4.1,4.0</p>
<p>[UninstallRun]<br />Filename: {app}\Compil32.exe; Parameters: /UNASSOC; RunOnceId: RemoveISSAssoc; StatusMsg: 卸载InnoSetup5啊风增强版&hellip;&hellip;</p>
<p>[UninstallDelete]<br />Type: filesandordirs; Name: {app}</p>
<p>[Run]<br />Filename: {app}\Compil32.exe; Parameters: /ASSOC; StatusMsg: {cm:AssocingFileExtension,Inno Setup,.iss}; Components: Inno; Tasks: fileassoc; MinVersion: 4.1,4.0<br />Filename: {app}\UninsHs.exe; Parameters: /r0=Inno Setup 5 增强版,{language},{srcexe},{userappdata}\$Inst$\Setup.exe; Components: tools\uninshs<br />Filename: {pf}\Internet Explorer\iexplore.exe; Parameters: <a href="http://windsoft.blogbus.com/">http://windsoft.blogbus.com</a>; Description: 访问 啊风(A_WInd)的Blog; Flags: postinstall skipifsilent<br />Filename: {pf}\Internet Explorer\iexplore.exe; Parameters: <a href="http://bbs.skygz.com/">http://bbs.skygz.com</a>; Description: 访问 枫叶在线论坛; Flags: postinstall skipifsilent<br />Filename: {pf}\Internet Explorer\iexplore.exe; Parameters: <a href="http://bbs.hanzify.org/">http://bbs.hanzify.org</a>; Description: 访问 汉化新世纪论坛; Flags: postinstall skipifsilent<br />Filename: {pf}\Internet Explorer\iexplore.exe; Parameters: <a href="http://www.dreams8.com/">http://www.dreams8.com</a>; Description: 访问 梦想吧论坛; Flags: postinstall skipifsilent<br />Filename: {pf}\Internet Explorer\iexplore.exe; Parameters: <a href="http://bbs.wmzhe.com/">http://bbs.wmzhe.com</a>; Description: 访问 完美者论坛; Flags: postinstall skipifsilent<br />Filename: {pf}\Internet Explorer\iexplore.exe; Parameters: <a href="http://bbs.realqwh.cn/">http://bbs.realqwh.cn</a>; Description: 访问 秋无痕论坛; Flags: postinstall skipifsilent</p>
<p>[CustomMessages]<br />AssocFileExtension=将 %2 文件扩展名与 %1 建立关联(&amp;J)<br />AssocingFileExtension=正在将 %2 文件扩展名与 %1 建立关联...<br />AssocRightFileExtension=将 %2 文件扩展名与 %1 建立右键关联(&amp;A)</p>
<p>[Tasks]<br />Name: fileassoc; Description: {cm:AssocFileExtension,Inno Setup,.iss}; GroupDescription: 文件关联选项:; Components: Inno</p>
<p>Name: shelllIST; Description: 用ISTool关联 *.ISS 文件(&amp;I); GroupDescription: 文件关联选项:; Components: tools\IStool</p>
<p>Name: shelllISFD; Description: 用ISFD关联 *.ISF 文件(&amp;F); GroupDescription: 文件关联选项:; Components: tools\isfd</p>
<p>Name: innogui_icon; Description: {cm:AssocRightFileExtension,Inno Setup Unpacker GUI,.exe}; GroupDescription: 文件关联选项:; Components: unpacker\innogui<br />Name: innosup_icon; Description: {cm:AssocRightFileExtension,Inno Setup Unpacker Explorer,.exe}; GroupDescription: 文件关联选项:; Components: unpacker\innosup</p>
<p>Name: quicklaunchicon; Description: 在快速启动栏创建Compil32图标(&amp;C); GroupDescription: 附加快捷方式:; Components: inno; Flags: unchecked; Languages: <br />Name: desktopicon; Description: 在桌面创建Compil32图标(&amp;D); GroupDescription: 附加快捷方式:; Components: inno</p>
<p>Name: ISTQ; Description: 在快速启动栏创建ISTool图标(&amp;E); GroupDescription: 附加快捷方式:; Components: tools\IStool; Flags: unchecked<br />Name: ISTD; Description: 在桌面创建ISTool图标(&amp;F); GroupDescription: 附加快捷方式:; Components: tools\IStool</p>
<p>Name: ISFDQ; Description: 在快速启动栏创建ISFD图标(&amp;G); GroupDescription: 附加快捷方式:; Components: tools\isfd; Flags: unchecked<br />Name: ISFDD; Description: 在桌面创建ISFD图标(&amp;H); GroupDescription: 附加快捷方式:; Components: tools\isfd</p>
<p>[Types]<br />Name: full; Description: 全部安装<br />Name: lite; Description: 简洁安装<br />Name: custom; Description: 定制安装; Flags: iscustom<br />;告诉安装程序这个类型是自定义类型。必须定义这个参数，才能显示出组件选择框（特此感谢dream8 似水年华的指点！）</p>
<p>[Components]<br />Name: inno; Description: Inno Setup 5.2.3 简体中文增强版(Build:080717); Types: custom lite full; Flags: fixed<br />Name: inno\Help; Description: Inno Setup帮助文档; Types: custom lite full<br />Name: inno\Help\Inno507; Description: InnoSetup5.0.7中文帮助(PDF); Types: custom lite full<br />Name: inno\Help\InnoJS; Description: InnoSetup技术贴集(中文); Types: custom lite full<br />Name: inno\Help\Inno523C; Description: InnoSetup5.2.3帮助文档(中文); Types: custom lite full<br />Name: inno\Help\Inno523E; Description: InnoSetup5.2.3帮助文档(英文); Types: custom lite full<br />Name: inno\Help\ISPPC; Description: Inno Setup 预处理器(ISPP)帮助文档(中文); Types: custom lite full<br />Name: inno\Help\ISPPE; Description: Inno Setup 预处理器(ISPP)帮助文档(英文); Types: custom lite full<br />Name: inno\Help\IsExtendSC; Description: Inno Setup 功能扩展帮助文档(中文); Types: custom lite full</p>
<p>Name: unpacker; Description: Inno Setup解包套件; Types: custom full<br />Name: unpacker\innogui; Description: Inno Setup Unpacker GUI v1.1; Types: custom full<br />Name: unpacker\innosup; Description: Inno Setup Unpacker Explorer v1.5.9; Types: custom full<br />Name: unpacker\disasmgui; Description: DisASM Gui Tools v0.19; Types: custom full<br />Name: unpacker\innogpw; Description: "Inno Setup 密码获取器 v0.04 "; Types: custom full<br />Name: unpacker\ShowPW; Description: 针对restools的解包工具; Types: custom full</p>
<p>Name: Plugins; Description: Inno Setup功能插件; Types: full<br />Name: Plugins\flashlib; Description: Flash效果插件 1.0.0.0; Types: full<br />Name: Plugins\giflib; Description: GIF效果插件 1.0.0.1; Types: full<br />Name: Plugins\waterlib; Description: 水纹效果插件 1.0.0.1; Types: full<br />Name: Plugins\firelib; Description: 火焰效果插件 1.0.0.0; Types: full<br />Name: Plugins\callback; Description: 函数回调插件 1.0.0.0; Types: full<br />Name: Plugins\Description; Description: 组件描述插件 1.0.0.0; Types: full<br />Name: Plugins\timectrl; Description: 倒数N秒后激活按钮插件 1.0.0.0; Types: full<br />Name: Plugins\spmu; Description: 闪屏和背景音乐插件; Types: full</p>
<p><br />Name: tools; Description: Inno Setup相关工具; Types: full<br />Name: tools\IStool; Description: Inno Setup脚本编辑器(ISTool) 5.2.1汉化版; Types: full<br />Name: tools\isfd; Description: Inno Setup 界面设计器 (ISFD) 2.0.8汉化版; Types: full<br />Name: tools\issi; Description: Inno Setup 脚本示例集 (ISSI) 5.19; Types: full<br />Name: tools\uninshs; Description: UninsHs 2.1.0.277; Types: full<br />Name: tools\isskin; Description: ISSkin 1.0.0.2; Types: full</p>
<p>[Messages]<br />BeveledLabel=InnoSetup5.2.3啊风增强版</p>
<p>&nbsp;</p>]]></description></item><item><title>AppControls</title><link>http://www.cnblogs.com/eastson/archive/2010/01/29/1659090.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 29 Jan 2010 03:40:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2010/01/29/1659090.html</guid><description><![CDATA[<p><span style="font-size: 10pt; color: #000000; font-family: Arial;">The Advanced Application Controls (AppControls) is the set of over <strong>92</strong> top quality multipurpose components for all versions of Delphi and C++ Builder for Win32. The package contains everything you need to add neat and, more important, truly professional appearance for your software, making development of great interfaces and internal utilities trully rapid. All components are highly integrated each other and extremely easy to use.&nbsp;&nbsp;</span></p>
<p><span style="font-size: 10pt; color: #000000; font-family: Arial;">&nbsp;</span></p>
<p>相关链接:</p>
<p><a href="http://www.appcontrols.com/manuals/appcontrols/index.html" target="_blank">Advanced Application Controls</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>[转载]Bat CMD 批处理文件脚本总结(英文)</title><link>http://www.cnblogs.com/eastson/archive/2010/01/29/1658948.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Fri, 29 Jan 2010 00:47:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2010/01/29/1658948.html</guid><description><![CDATA[<p style="margin: 0in 0in 0pt 0.25in; text-indent: -0.25in; line-height: normal;"><strong><span style="font-size: 18pt; color: #166488;">1.<span style="font: 7pt 'Times New Roman';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></strong><strong><span style="font-size: 18pt; color: #166488;">Overview</span></strong><strong><span style="font-size: 18pt; color: #166488;"></span></strong></p>
<p style="margin: 0in 0in 0pt 60pt; text-indent: -24pt; line-height: normal;"><span>1.1.<span style="font: 7pt 'Times New Roman';">&nbsp;&nbsp;&nbsp; </span></span>&ldquo;<span>.bat</span><span>&rdquo;</span><span>: The first extension used by Microsoft for batch files. This extension can be run in most Microsoft Operating Systems, including MS-DOS and most versions of Microsoft Windows.</span> </p>
<p style="margin: 0in 0in 0pt 60pt; text-indent: -24pt; line-height: normal;"><span>1.2.<span style="font: 7pt 'Times New Roman';">&nbsp;&nbsp;&nbsp; </span></span>&ldquo;<span>.<span>cmd</span></span><span>&rdquo;</span><span>: Designates a Windows NT Command Script, which is written for the Cmd.exe shell, and is not backward-compatible with COMMAND.COM.</span></p>
<p style="margin: 0in 0in 0pt 60pt; text-indent: -24pt; line-height: normal;"><span>1.3.<span style="font: 7pt 'Times New Roman';">&nbsp;&nbsp;&nbsp; </span></span>The only known difference between .<span>cmd</span><span> and .bat file processing is that in a .<span>cmd file the ERRORLEVEL variable changes even on a successful command that is affected by Command Extensions (when Command Extensions are enabled), whereas in .bat files the ERRORLEVEL variable changes only upon errors.</span></span></p>
<p style="margin: 0in 0in 0pt 60pt; line-height: normal;">&nbsp;</p>
<p style="margin: 0in 0in 0pt 0.25in; text-indent: -0.25in; line-height: normal;"><strong><span style="font-size: 18pt; color: #166488;">2.<span style="font: 7pt 'Times New Roman';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></strong><strong><span style="font-size: 18pt; color: #166488;">@echo off/echo on</span></strong><strong></strong></p>
<p><span style="font-size: 12pt; line-height: 115%;">1. &ldquo;</span><span style="font-size: 12pt; line-height: 115%;">echo</span><span style="font-size: 12pt; line-height: 115%;">&rdquo; is used to display messages on console screen.</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">2. &ldquo;</span><span style="font-size: 12pt; line-height: 115%;">echo</span><span style="font-size: 12pt; line-height: 115%;">.&rdquo; Is used to display <span>a empty line.</span></span></p>
<p><span style="font-size: 12pt; line-height: 115%;">3. &ldquo;</span><span style="font-size: 12pt; line-height: 115%;">echo</span><span style="font-size: 12pt; line-height: 115%;"> off&rdquo;: Only display the command output on screen without command name.</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">4. &ldquo;</span><span style="font-size: 12pt; line-height: 115%;">echo</span><span style="font-size: 12pt; line-height: 115%;"> on&rdquo;: It is the default setting. Display the command and all outputs.</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">5. &ldquo;</span><span style="font-size: 12pt; line-height: 115%;">echo</span><span style="font-size: 12pt; line-height: 115%;">&rdquo;: When execute echo alone, it will display the echo status like &ldquo;ECHO is on&rdquo; or &ldquo;ECHO is off&rdquo;.</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">6. &ldquo;@&rdquo;:@ symbol is the same as ECHO OFF applied to the current line only. The command name will not show when use @ </span><span style="font-size: 12pt; line-height: 115%;">sysmbol</span><span style="font-size: 12pt; line-height: 115%;">.</span></p>
<p style="margin: 0in 0in 0pt 0.25in; text-indent: -0.25in; line-height: normal;"><strong><span style="font-size: 18pt; color: #166488;">3.<span style="font: 7pt 'Times New Roman';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></strong><strong><span style="font-size: 18pt; color: #166488;">SETLOCAL/ENDLOCAL</span></strong><strong></strong></p>
<p><span style="font-size: 12pt; line-height: 115%;">1. SETLOCAL is used to control the visibility of environment variables in a batch file. </span><span style="color: black;">If a batch script does not use SETLOCAL and ENDLOCAL then all variables will be Global</span><span style="color: black;">, <span style="color: black;">visible and modifiable by other scripts</span></span><span style="color: black;">.</span></p>
<table border="1" cellpadding="0" cellspacing="0" style="margin-left: 0.5in; border-collapse: collapse;">
<tbody>
<tr>
<td width="590" valign="top" style="padding-right: 5.4pt; padding-left: 5.4pt; padding-bottom: 0in; width: 6.15in; padding-top: 0in; border: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">@echo off</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">setlocal</span> </p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">set version=1.0</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">echo %version%</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">endlocal</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">echo Show %version%</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; color: #00b050; line-height: 115%;">::The follow is global variable</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">set version=2.0</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">echo %version%</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; line-height: 115%;">2. </span><span style="font-size: 12pt; line-height: 115%;">EnableDelayedExpansion</span><span style="font-size: 12pt; line-height: 115%;">. </span><a target="_blank" href="http://www.cnblogs.com/linglizeng/admin/mhtml:http://sharepointasia/sites/vmmtcsgc/Shared%20Documents/The%20Efficient%20Life/ScriptingTraining/01.Bat%20and%20CMD%20Overview.mht!x-usc:http://baike.baidu.com/view/2923132.htm"><span style="font-size: 12pt; line-height: 115%;">Help link</span></a><span style="font-size: 12pt; line-height: 115%;">.</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">Normally batch files will expand environment variables once for each command/line.</span></p>
<table border="1" cellpadding="0" cellspacing="0" style="margin-left: 0.5in; border-collapse: collapse;">
<tbody>
<tr>
<td width="295" valign="top" style="padding-right: 5.4pt; padding-left: 5.4pt; padding-bottom: 0in; width: 221.4pt; padding-top: 0in; border: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Code</span></p>
</td>
<td width="295" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 221.4pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Output</span></p>
</td>
</tr>
<tr>
<td width="295" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: windowtext 1pt solid; width: 221.4pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">@echo off</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">setlocal</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">set </span><span style="font-size: 12pt; line-height: 115%;">var</span><span style="font-size: 12pt; line-height: 115%;">=test &amp; echo </span><span style="font-size: 12pt; line-height: 115%;">show </span><span style="font-size: 12pt; line-height: 115%;">%</span><span style="font-size: 12pt; line-height: 115%;">var</span><span style="font-size: 12pt; line-height: 115%;">%</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">endlocal</span></p>
</td>
<td width="295" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 221.4pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">show</span></p>
</td>
</tr>
<tr>
<td width="295" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: windowtext 1pt solid; width: 221.4pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">@echo off</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Setlocal</span><span style="font-size: 12pt; line-height: 115%;"> ENABLEDELAYEDEXPANSION</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">set</span><span style="font-size: 12pt; line-height: 115%;"> <span>var=test &amp; echo </span></span><span style="font-size: 12pt; line-height: 115%;">show !<span>var!</span></span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">endlocal</span></p>
</td>
<td width="295" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 221.4pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">show test</span></p>
</td>
</tr>
<tr>
<td width="295" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: windowtext 1pt solid; width: 221.4pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">@echo off</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">setlocal</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">:: count to 5</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">set _</span><span style="font-size: 12pt; line-height: 115%;">tst</span><span style="font-size: 12pt; line-height: 115%;">=0</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">FOR /l %%G in (1,1,5) Do (echo [%_</span><span style="font-size: 12pt; line-height: 115%;">tst</span><span style="font-size: 12pt; line-height: 115%;">%] &amp; set /a _<span>tst+=1)</span></span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">echo Total = %_</span><span style="font-size: 12pt; line-height: 115%;">tst</span><span style="font-size: 12pt; line-height: 115%;">%</span></p>
</td>
<td width="295" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 221.4pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">[0]</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">[0]</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">[0]</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">[0]</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">[0]</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Total = 5</span></p>
</td>
</tr>
<tr>
<td width="295" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: windowtext 1pt solid; width: 221.4pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">@echo off</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">setlocal</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">:: count to 5</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">set _</span><span style="font-size: 12pt; line-height: 115%;">tst</span><span style="font-size: 12pt; line-height: 115%;">=0</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">FOR /l %%G in (1</span><span style="font-size: 12pt; line-height: 115%;">,1,5</span><span style="font-size: 12pt; line-height: 115%;">) Do (echo [!_<span>tst!] &amp; set /a _tst+=1)</span></span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">echo</span><span style="font-size: 12pt; line-height: 115%;"> Total = !_<span>tst!</span></span></p>
</td>
<td width="295" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 221.4pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">[0]</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">[1]</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">[2]</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">[3]</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">[4]</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Total = 5</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; line-height: 115%;">With ENABLEDELAYEDEXPANSION, the caret ^ escapes each special character all the time, not just for one command.</span><span style="font-size: 12pt; line-height: 115%;"> This makes it possible to work with HTML and XML formatted strings in a variable.</span></p>
<table border="1" cellpadding="0" cellspacing="0" style="margin-left: 0.5in; border-collapse: collapse;">
<tbody>
<tr>
<td width="590" valign="top" style="padding-right: 5.4pt; padding-left: 5.4pt; padding-bottom: 0in; width: 6.15in; padding-top: 0in; border: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">SETLOCAL</span> </p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Set _html= Hello^&gt;</span><span style="font-size: 12pt; line-height: 115%;">World.text</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Echo %_html%</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">ENDLOCAL</span></p>
</td>
</tr>
<tr>
<td width="590" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: windowtext 1pt solid; width: 6.15in; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">SETLOCAL </span><span style="font-size: 12pt; line-height: 115%;">EnableDelayedExpansion</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Set _html= Hello^&gt;</span><span style="font-size: 12pt; line-height: 115%;">World.text</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Echo !</span><span style="font-size: 12pt; line-height: 115%;">_html!</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">ENDLOCAL</span></p>
</td>
</tr>
<tr>
<td width="590" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: windowtext 1pt solid; width: 6.15in; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">SETLOCAL </span><span style="font-size: 12pt; line-height: 115%;">EnableDelayedExpansion</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Set _html=html format: ^&lt;title^&gt;Hello world^&lt;/title^&gt;</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Echo !</span><span style="font-size: 12pt; line-height: 115%;">_html!</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">ENDLOCAL</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; line-height: 115%;">3. DISABLEEXTENSIONS.</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">&nbsp;&nbsp;&nbsp; Command extension doesn&rsquo;t mean file expanded-name. You can use &ldquo;/F&rdquo; parameter for &ldquo;For loop&rdquo; statement.</span></p>
<p><span style="color: #cc0000;">&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color: #cc0000;">FOR /F "DELIMS=" %%</span><span style="color: #cc0000;">a<span style="color: #cc0000;"> IN (</span></span><span style="color: #cc0000;">test<span style="color: #cc0000;">.TXT) DO </span></span><span style="color: #cc0000;">@echo %%a</span> </p>
<p><span style="font-size: 12pt; line-height: 115%;">&nbsp;&nbsp;&nbsp; Command Extensions are enabled by default. With DISABLEEXTENSIONS, </span></p>
<p>&nbsp;</p>
<p style="margin: 0in 0in 0pt 0.25in; text-indent: -0.25in; line-height: normal;"><strong><span style="font-size: 18pt; color: #166488;">4.<span style="font: 7pt 'Times New Roman';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></strong><strong><span style="font-size: 18pt; color: #166488;">Set</span></strong><strong></strong></p>
<p><span style="font-size: 12pt; line-height: 115%;">1. Use SET without parameters: display all environment variables of the current user</span><span style="font-size: 12pt; line-height: 115%;">.(</span><span style="font-size: 12pt; line-height: 115%;">set)</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">2. Use SET with a variable name: display all environment variables begin with that name. (</span><span style="font-size: 12pt; line-height: 115%;">set</span><span style="font-size: 12pt; line-height: 115%;"> PROCESSOR)</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">3. SET variable=string: Assign a text string to the variable.</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">4. SET &ldquo;&rdquo;: Display undocumented variables. (</span><span style="font-size: 12pt; line-height: 115%;">echo</span><span style="font-size: 12pt; line-height: 115%;"> %=C:%)</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">5. SET &ldquo;</span><span style="font-size: 12pt; line-height: 115%;">var</span><span style="font-size: 12pt; line-height: 115%;">=<span>&rdquo;(or SET var=): Delete a variable name.</span></span></p>
<p><span style="color: black;">6. SET /A variable=expression: Use arithmetic operation to assign value.</span></p>
<table border="1" cellpadding="0" cellspacing="0" style="margin-left: 0.5in; border-collapse: collapse;">
<tbody>
<tr>
<td width="590" valign="top" style="padding-right: 5.4pt; padding-left: 5.4pt; padding-bottom: 0in; width: 6.15in; padding-top: 0in; border: windowtext 1pt solid;">
<p><span style="color: black;">()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - grouping</span></p>
<p><span style="color: black;">! ~ -&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - unary operators</span></p>
<p><span style="color: black;">* / %&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - arithmetic operators</span></p>
<p><span style="color: black;">+ -&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- arithmetic operators</span></p>
<p><span style="color: black;">&lt;&lt; &gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - logical shift</span></p>
<p><span style="color: black;">&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - bitwise and</span></p>
<p><span style="color: black;">^&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - bitwise exclusive or</span></p>
<p><span style="color: black;">|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - bitwise or</span></p>
<p><span style="color: black;">= *= /= %= += -=&nbsp;&nbsp;&nbsp; - assignment</span></p>
<p><span style="color: black;">&nbsp;&amp;= ^= |= &lt;&lt;= &gt;&gt;=</span></p>
<p style="margin-left: 0in;"><span style="color: black;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- expression separator</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p><span style="color: black;">7.</span> <span style="color: black;">SET /P variable<span>=[promptString]: Prompt for user input. The PromptString is displayed before the user input is read. The PromptString can be empty.</span></span> </p>
<p><span style="color: black;">The CHOICE command is an alternative to SET /P.</span></p>
<table border="1" cellpadding="0" cellspacing="0" style="margin-left: 0.5in; border-collapse: collapse;">
<tbody>
<tr>
<td width="590" valign="top" style="padding-right: 5.4pt; padding-left: 5.4pt; padding-bottom: 0in; width: 6.15in; padding-top: 0in; border: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="color: black;">@echo off</span></p>
<p style="margin-left: 0in;"><span style="color: black;">SETLOCAL</span></p>
<p style="margin-left: 0in;"><span style="color: black;">set /p version=Please enter the Pangaea version:</span></p>
<p style="margin-left: 0in;"><span style="color: black;">echo you will install Pangaea %version%</span></p>
<p style="margin-left: 0in;"><span style="color: black;">endlocal</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p><span style="color: black;">8. Useful environment variable.</span></p>
<table border="1" cellpadding="0" cellspacing="0" style="margin-left: 0.5in; border-collapse: collapse;">
<tbody>
<tr>
<td width="590" valign="top" style="padding-right: 5.4pt; padding-left: 5.4pt; padding-bottom: 0in; width: 6.15in; padding-top: 0in; border: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="color: black;">%CD% - expands to the current directory string.</span></p>
<p style="margin-left: 0in;"><span style="color: black;">%DATE% - expands to current date using same format as DATE command.</span></p>
<p style="margin-left: 0in;"><span style="color: black;">%TIME% - expands to current time using same format as TIME command.</span></p>
<p style="margin-left: 0in;"><span style="color: black;">%RANDOM% - expands to a random decimal number between 0 and 32767.</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p style="margin: 0in 0in 0pt 0.25in; text-indent: -0.25in; line-height: normal;"><strong><span style="font-size: 18pt; color: #166488;">5.<span style="font: 7pt 'Times New Roman';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></strong><strong><span style="font-size: 18pt; color: #166488;">Choice</span></strong><strong></strong></p>
<p><span style="font-size: 12pt; line-height: 115%;">1. Detailed.</span></p>
<table border="1" cellpadding="0" cellspacing="0" style="margin-left: 0.5in; border-collapse: collapse;">
<tbody>
<tr>
<td colspan="2" width="590" valign="top" style="padding-right: 5.4pt; padding-left: 5.4pt; padding-bottom: 0in; width: 6.15in; padding-top: 0in; border: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">CHOICE [/C choices] [/N] [/CS] [/T timeout /D choice] [/M text]</span></p>
<p>&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Description:</span></p>
<p style="text-indent: 12pt;"><span style="font-size: 12pt; line-height: 115%;">This tool allows users to select one item from a list of choices and returns the index of the selected choice.</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">NOTE:</span></p>
<p style="text-indent: 12pt;"><span style="font-size: 12pt; line-height: 115%;">The ERRORLEVEL environment variable is set to the index of the key that was selected from the set of choices. The first choice listed returns a value of 1, the second a value of 2, and so on. If the user presses a key that is not a valid choice, the tool sounds a warning beep. If tool detects an error condition, it returns an ERRORLEVEL value of 255. If the user presses CTRL+BREAK or CTRL+C, the tool returns an ERRORLEVEL value of 0. When you use ERRORLEVEL parameters in a batch program, list them in decreasing order.</span></p>
</td>
</tr>
<tr>
<td width="161" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: windowtext 1pt solid; width: 121.1pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p><span style="font-size: 12pt; line-height: 115%;">/C&nbsp;&nbsp;&nbsp; choices</span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; line-height: 115%;">&nbsp;/N</span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; line-height: 115%;">&nbsp;/CS</span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; line-height: 115%;">&nbsp;/T&nbsp;&nbsp;&nbsp; timeout</span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; line-height: 115%;">&nbsp;/D&nbsp;&nbsp;&nbsp; choice</span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; line-height: 115%;">&nbsp;/M&nbsp;&nbsp;&nbsp; text</span></p>
<p style="margin-left: 0in;">&nbsp;</p>
</td>
<td width="429" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 321.7pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Specifies the list of choices to be created.</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Default list is "YN".</span></p>
<p>&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Hides the list of choices in the </span><span style="font-size: 12pt; line-height: 115%;">prompt.The</span><span style="font-size: 12pt; line-height: 115%;"> message before the prompt is displayed and the choices are still enabled.</span></p>
<p>&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Enables case-sensitive choices to be selected.</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">By default, the utility is case-insensitive.</span></p>
<p>&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">&nbsp;The number of seconds to pause before a default choice is made. Acceptable values are from 0 to 9999. If 0 is specified, there will be no pause and the default choice is selected.</span></p>
<p>&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Specifies the default choice after </span><span style="font-size: 12pt; line-height: 115%;">nnnn</span><span style="font-size: 12pt; line-height: 115%;"> seconds. Character must be in the set of choices specified by /C option and must also specify <span>nnnn with /T.</span></span></p>
<p>&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Specifies the message to be displayed before the prompt. If not specified, the utility displays only a prompt.</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; line-height: 115%;">2. Example.</span></p>
<table border="1" cellpadding="0" cellspacing="0" style="margin-left: 0.5in; border-collapse: collapse;">
<tbody>
<tr>
<td width="590" valign="top" style="padding-right: 5.4pt; padding-left: 5.4pt; padding-bottom: 0in; width: 6.15in; padding-top: 0in; border: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">@echo off</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">SETLOCAL</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">CHOICE /C ADL /M "Press A for Administrator, D for Domain user or L for Local user."</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">IF %</span><span style="font-size: 12pt; line-height: 115%;">errorlevel</span><span style="font-size: 12pt; line-height: 115%;">%==1 <span>goto :Admin</span></span> </p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">IF %</span><span style="font-size: 12pt; line-height: 115%;">errorlevel</span><span style="font-size: 12pt; line-height: 115%;">%==2 <span>goto :Domain</span></span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">IF %</span><span style="font-size: 12pt; line-height: 115%;">errorlevel</span><span style="font-size: 12pt; line-height: 115%;">%==3 <span>goto :Local</span></span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">goto</span><span style="font-size: 12pt; line-height: 115%;"> Exit</span></p>
<p>&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">:Admin</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">echo You are a </span><span style="font-size: 12pt; line-height: 115%;">administartor</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">goto</span><span style="font-size: 12pt; line-height: 115%;"> Exit</span></p>
<p>&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">:Domain</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">echo You are a Domain user</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">goto</span><span style="font-size: 12pt; line-height: 115%;"> Exit</span></p>
<p>&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">:Local</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">echo You are a Local user</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">goto</span><span style="font-size: 12pt; line-height: 115%;"> Exit</span></p>
<p>&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">:Exit</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">endlocal</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p style="margin: 0in 0in 0pt 0.25in; text-indent: -0.25in; line-height: normal;"><strong><span style="font-size: 18pt; color: #166488;">6.<span style="font: 7pt 'Times New Roman';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></strong><strong><span style="font-size: 18pt; color: #166488;">Rem and Arguments.</span></strong><strong></strong></p>
<p><span style="font-size: 12pt; line-height: 115%;">1. REM [comment]: Records comments (remarks) in a batch file. You can use &ldquo;</span><span style="font-size: 12pt; line-height: 115%;">::&rdquo;</span><span style="font-size: 12pt; line-height: 115%;"> instead of REM.</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">2. Arguments.</span></p>
<table border="1" cellpadding="0" cellspacing="0" style="margin-left: 0.5in; border-collapse: collapse;">
<tbody>
<tr>
<td width="73" valign="top" style="padding-right: 5.4pt; padding-left: 5.4pt; padding-bottom: 0in; width: 55.05pt; padding-top: 0in; border: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Test.cmd</span></p>
</td>
<td width="34" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 25.55pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">1</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">2</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">3</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">4</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">5</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">6</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">7</span></p>
</td>
<td width="35" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 25.95pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">8</span></p>
</td>
<td width="37" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 28.05pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">9</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">&hellip;</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">n</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">&hellip;</span></p>
</td>
<td width="54" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: windowtext 1pt solid; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 40.5pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">255</span></p>
</td>
</tr>
<tr>
<td width="73" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: windowtext 1pt solid; width: 55.05pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">%0</span></p>
</td>
<td width="34" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 25.55pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">%1</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">%2</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">%3</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">%4</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">%5</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">%6</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">%7</span></p>
</td>
<td width="35" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 25.95pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">%8</span></p>
</td>
<td width="37" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 28.05pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">%9</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">&hellip;</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">%n</span></p>
</td>
<td width="36" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 27pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">&hellip;</span></p>
</td>
<td width="54" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: medium none; width: 40.5pt; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">%255</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; line-height: 115%;">3. Filename Parameter Extensions.</span></p>
<table border="1" cellpadding="0" cellspacing="0" style="margin-left: 0.5in; border-collapse: collapse;">
<tbody>
<tr>
<td width="590" valign="top" style="padding-right: 5.4pt; padding-left: 5.4pt; padding-bottom: 0in; width: 6.15in; padding-top: 0in; border: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="color: black;">When a parameter is used to supply a <strong>filename </strong>then the following extended syntax can be applied</span><span style="color: black;">. W<span style="color: black;">e are using the variable %1 (but this works for any parameter)<br /><br /></span></span><span style="font-size: 12pt; color: black; line-height: 115%;">%~f1</span><span style="color: black;"> - expands %1 to a Fully qualified path name</span><span style="color: black;">.</span><span style="color: black; font-family: 'Courier New';"><br /></span><span style="font-size: 12pt; color: black; line-height: 115%;">%~d1</span><span style="color: black;"> - expands %1 to a Drive letter only</span><span style="color: black;">.<span style="color: black;"><br /></span></span><span style="font-size: 12pt; color: black; line-height: 115%;">%~p1</span><span style="color: black;"> - expands %1 to a Path only</span><span style="color: black;">.<span style="color: black;"><br /></span></span><span style="font-size: 12pt; color: black; line-height: 115%;">%~n1</span><span style="color: black;"> - expands %1 to a file Name, or if only a path is present (with no trailing backslash\) - the last folder in that path<br /></span><span style="font-size: 12pt; color: black; line-height: 115%;">%~x1</span><span style="color: black;"> - expands %1 to a file eXtension only - .txt<br /></span><span style="font-size: 12pt; color: black; line-height: 115%;">%~s1</span><span style="color: black;"> - changes the meaning of f, n and x to reference the Short name (see note below) <br /></span><span style="font-size: 12pt; color: black; line-height: 115%;">%~1</span><span style="color: black;"> - expand %1 removing any surrounding quotes (")<br /></span><span style="font-size: 12pt; color: black; line-height: 115%;">%~a1</span><span style="color: black;"> - display the file attributes of %1<br /></span><span style="font-size: 12pt; color: black; line-height: 115%;">%~t1</span><span style="color: black;"> - display the date/time of %1<br /></span><span style="font-size: 12pt; color: black; line-height: 115%;">%~z1</span><span style="color: black;"> - display the file size of %1<br /><br /></span><span style="font-size: 12pt; color: black; line-height: 115%;">%~$PATH:1</span><span style="color: black;"> - search the PATH environment variable and expand %1 to the fully qualified name of the first match found.</span></p>
<p>&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; color: red; line-height: 115%;">The modifiers above can be combined:</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">%~dp1 - expands %1 to a drive letter and path only</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">%~nx2 - expands %2 to a file name and extension only</span></p>
</td>
</tr>
<tr>
<td width="590" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: windowtext 1pt solid; width: 6.15in; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="color: black;">::Test.bat</span></p>
<p style="margin-left: 0in;"><span style="color: black;">::Example: test.bat test.bat</span></p>
<p style="margin-left: 0in;"><span style="color: black;">@echo off</span></p>
<p style="margin-left: 0in;"><span style="color: black;">SETLOCAL</span></p>
<p style="margin-left: 0in;"><span style="color: black;">set </span><span style="color: black;">fn</span><span style="color: black;">=%~f1</span></p>
<p style="margin-left: 0in;"><span style="color: black;">echo %</span><span style="color: black;">fn</span><span style="color: black;">%</span></p>
<p style="margin-left: 0in;"><span style="color: black;">endlocal</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p style="margin: 0in 0in 0pt 0.25in; text-indent: -0.25in; line-height: normal;"><strong><span style="font-size: 18pt; color: #166488;">7.<span style="font: 7pt 'Times New Roman';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></strong><strong><span style="font-size: 18pt; color: #166488;">IF statement.</span></strong><strong></strong></p>
<p><span style="font-size: 12pt; line-height: 115%;">1. Detailed.</span></p>
<table border="1" cellpadding="0" cellspacing="0" style="margin-left: 0.5in; border-collapse: collapse;">
<tbody>
<tr>
<td width="590" valign="top" style="padding-right: 5.4pt; padding-left: 5.4pt; padding-bottom: 0in; width: 6.15in; padding-top: 0in; border: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">File syntax</span><span style="font-size: 12pt; line-height: 115%;">&nbsp;&nbsp; </span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">IF [NOT] EXIST filename command</span> </p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">IF [NOT] EXIST filename (command) ELSE (command)</span></p>
<p>&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">String syntax</span><span style="font-size: 12pt; line-height: 115%;">&nbsp;&nbsp; </span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">IF [/I] [NOT] item1==item2 command</span> </p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">IF [/I] item1 compare-op item2 command</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">IF [/I] item1 compare-op item2 (command) ELSE (command)</span></p>
<p style="margin-left: 0in;">&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Error Check Syntax</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">IF [NOT] DEFINED variable command</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">IF [NOT] ERRORLEVEL number command</span> </p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">IF CMDEXTVERSION number command</span></p>
<p style="margin-left: 0in;">&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Key</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">/I&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : Do a case Insensitive string comparison.</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">compare-op :</span> </p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; EQU : equal </span></p>
<p><span style="font-size: 12pt; line-height: 115%;">NEQ : not equal</span> </p>
<p><span style="font-size: 12pt; line-height: 115%;">LSS : less than</span> </p>
<p><span style="font-size: 12pt; line-height: 115%;">LEQ : less than or equal</span> </p>
<p><span style="font-size: 12pt; line-height: 115%;">GTR : greater than</span> </p>
<p><span style="font-size: 12pt; line-height: 115%;">GEQ : greater than or equal</span> </p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; line-height: 115%;">2. Example.</span></p>
<table border="1" cellpadding="0" cellspacing="0" style="margin-left: 0.5in; border-collapse: collapse;">
<tbody>
<tr>
<td width="590" valign="top" style="padding-right: 5.4pt; padding-left: 5.4pt; padding-bottom: 0in; width: 6.15in; padding-top: 0in; border: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">IF EXIST filename (del filename) ELSE </span><span style="font-size: 12pt; line-height: 115%;">( echo</span><span style="font-size: 12pt; line-height: 115%;"> The file was not found.)</span></p>
</td>
</tr>
<tr>
<td width="590" valign="top" style="border-right: windowtext 1pt solid; padding-right: 5.4pt; border-top: medium none; padding-left: 5.4pt; padding-bottom: 0in; border-left: windowtext 1pt solid; width: 6.15in; padding-top: 0in; border-bottom: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">IF EXIST filename (</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">del filename</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">) ELSE (</span> </p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">echo</span><span style="font-size: 12pt; line-height: 115%;"> The file was not found.</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">)</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p style="margin: 0in 0in 0pt 0.25in; text-indent: -0.25in; line-height: normal;"><strong><span style="font-size: 18pt; color: #166488;">8.<span style="font: 7pt 'Times New Roman';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></strong><strong><span style="font-size: 18pt; color: #166488;">For loop.</span></strong><strong></strong></p>
<p><span style="font-size: 12pt; line-height: 115%;">1. Detailed.</span></p>
<table border="1" cellpadding="0" cellspacing="0" style="margin-left: 0.5in; border-collapse: collapse;">
<tbody>
<tr>
<td width="590" valign="top" style="padding-right: 5.4pt; padding-left: 5.4pt; padding-bottom: 0in; width: 6.15in; padding-top: 0in; border: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">FOR-Files</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">FOR %%parameter IN (set) DO command</span> </p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">FOR-Files-Rooted at Path</span><span style="font-size: 12pt; line-height: 115%;">&nbsp;&nbsp; </span></p>
<p><span style="font-size: 12pt; line-height: 115%;">FOR /R [[drive:]path] %%parameter IN (set) DO command</span> </p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">FOR-Folders</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">FOR /D %%parameter IN (</span><span style="font-size: 12pt; line-height: 115%;">folder_set</span><span style="font-size: 12pt; line-height: 115%;">) DO command</span> </p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">FOR-List of numbers</span><span style="font-size: 12pt; line-height: 115%;">&nbsp;&nbsp; </span></p>
<p><span style="font-size: 12pt; line-height: 115%;">FOR /L %%parameter IN (</span><span style="font-size: 12pt; line-height: 115%;">start,step,end</span><span style="font-size: 12pt; line-height: 115%;">) DO command</span> </p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">FOR-File contents</span><span style="font-size: 12pt; line-height: 115%;">&nbsp;&nbsp; </span></p>
<p><span style="font-size: 12pt; line-height: 115%;">FOR /F ["options"] %%parameter IN (</span><span style="font-size: 12pt; line-height: 115%;">filenameset</span><span style="font-size: 12pt; line-height: 115%;">) DO command</span> </p>
<p><span style="font-size: 12pt; line-height: 115%;">FOR /F ["options"] %%parameter IN ("Text string to process") DO command</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">FOR-Command Results</span> </p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FOR /F ["options"] %%parameter IN ('command to process') DO command</span></p>
<p style="margin-left: 0in;">&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Options:</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">eol</span><span style="font-size: 12pt; line-height: 115%;">=</span><span style="font-size: 12pt; line-height: 115%;">c<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - specifies a line comment character.</span></span></p>
<p><span style="font-size: 12pt; line-height: 115%;">skip=</span><span style="font-size: 12pt; line-height: 115%;">n<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - specifies the number of lines to skip at the beginning of the file.</span></span></p>
<p><span style="font-size: 12pt; line-height: 115%;">delims</span><span style="font-size: 12pt; line-height: 115%;">=</span><span style="font-size: 12pt; line-height: 115%;">xxx<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - specifies a delimiter set.&nbsp;This replaces the default delimiter</span></span></p>
<p><span style="font-size: 12pt; line-height: 115%;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<span>set</span> <span>&nbsp;&nbsp;of space and tab.</span></span></p>
<p><span style="font-size: 12pt; line-height: 115%;">tokens=</span><span style="font-size: 12pt; line-height: 115%;">x,y,m</span><span style="font-size: 12pt; line-height: 115%;">-n&nbsp;- specifies which tokens from each line are to be passed</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<span>to</span> the for body for each iteration.</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">usebackq</span><span style="font-size: 12pt; line-height: 115%;"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - allows use double quotes to quote file names in filenameset.</span></span></p>
<p style="margin-left: 0in;">&nbsp;</p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">Note:</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">If you are using the FOR command at the command line rather than in a batch program, specify %parameter instead of %%parameter. Variable names are case sensitive, so %g is different from %G.</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">(set)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Specifies a set of one or more files.&nbsp;<span style="color: red;">Wildcards may be used</span>.</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p><span style="font-size: 12pt; line-height: 115%;">2. Example.</span></p>
<table border="1" cellpadding="0" cellspacing="0" style="margin-left: 0.5in; border-collapse: collapse;">
<tbody>
<tr>
<td width="590" valign="top" style="padding-right: 5.4pt; padding-left: 5.4pt; padding-bottom: 0in; width: 6.15in; padding-top: 0in; border: windowtext 1pt solid;">
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">@echo off</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">SETLOCAL</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">for %%G in (*.bat *.txt) do echo %%G</span></p>
<p style="margin-left: 0in;"><span style="font-size: 12pt; line-height: 115%;">endlocal</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<p style="margin: 0in 0in 0pt 0.25in; text-indent: -0.25in; line-height: normal;"><strong><span style="font-size: 18pt; color: #166488;">9.<span style="font: 7pt 'Times New Roman';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></strong><strong><span style="font-size: 18pt; color: #166488;">Net.</span></strong><strong></strong></p>
<p><span style="font-size: 12pt; line-height: 115%;">1. Manage Services: Net start, stop, </span><span style="font-size: 12pt; line-height: 115%;">pause</span><span style="font-size: 12pt; line-height: 115%;">, continue [service].</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">2. Connect to a file/print </span><span style="font-size: 12pt; line-height: 115%;">share(</span><span style="font-size: 12pt; line-height: 115%;">Drive Map):Net use.</span></p>
<p><span style="font-size: 12pt; color: #00b050; line-height: 115%;">&nbsp;&nbsp;&nbsp; NET USE [<span>driveletter</span>:] \\ComputerName\ShareName[\volume] [password] [/USER<span>:[Domain\]UserName]</span> </span></p>
<p><span style="font-size: 12pt; color: #00b050; line-height: 115%;">&nbsp;&nbsp;&nbsp; NET USE <span>drvieletter</span>: /delete</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">3. Net share: Display all local </span><span style="font-size: 12pt; line-height: 115%;">share</span><span style="font-size: 12pt; line-height: 115%;">.</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">4. Net share </span><span style="font-size: 12pt; line-height: 115%;">ShareName</span><span style="font-size: 12pt; line-height: 115%;">: Display the share info of <span>ShareName.</span></span> </p>
<p><span style="font-size: 12pt; line-height: 115%;">5. Create a local file share: NET SHARE </span><span style="font-size: 12pt; line-height: 115%;">sharename</span><span style="font-size: 12pt; line-height: 115%;">=<span>drive<span>:path</span> /REMARK:"text" [/CACHE:Manual | Automatic | No ]</span></span></p>
<p><span style="font-size: 12pt; line-height: 115%;">6. Change user limited number and edit remark:</span> </p>
<p><span style="font-size: 12pt; line-height: 115%;">&nbsp;&nbsp;&nbsp; NET SHARE </span><span style="font-size: 12pt; line-height: 115%;">sharename</span><span style="font-size: 12pt; line-height: 115%;"> /<span>USERS<span>:number</span> /REMARK:"text"</span></span></p>
<p><span style="font-size: 12pt; line-height: 115%;">&nbsp;&nbsp;&nbsp; NET SHARE sharename /UNLIMITED /</span><span style="font-size: 12pt; line-height: 115%;">REMARK:"text</span><span style="font-size: 12pt; line-height: 115%;">"</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">7. Delete a share: NET SHARE {</span><span style="font-size: 12pt; line-height: 115%;">sharename</span><span style="font-size: 12pt; line-height: 115%;"> | <span>devicename | drive<span>:path</span>} /DELETE</span></span></p>
<p><span style="font-size: 12pt; line-height: 115%;">8. Net view \\ComputerName: List all shares on a remote computer.</span></p>
<p><span style="font-size: 12pt; line-height: 115%;">9. Net </span><span style="font-size: 12pt; line-height: 115%;">localgroup</span><span style="font-size: 12pt; line-height: 115%;">: net <span>localgroup administrators <span style="color: #00b050;">fareast</span><span style="color: #00b050;">\esdcvsec </span>/add</span></span></p>
<p><span style="font-size: 12pt; line-height: 115%;">10. Rename a computer: </span><span><strong><span style="color: black;">netdom</span></strong></span><span style="color: black;"> <span>renamecomputer </span></span><span><em><span style="color: #00b050;">SourceName</span><span style="color: black;"> /newname<span>:<em><span style="color: #00b050;">TargetName</span></em></span></span></em></span><em> </em><span style="color: black;">[/<span>UserD:<span style="color: #00b050;">user</span></span></span><em> </em><span style="color: black;">[/<span>PasswordD:</span></span><em><span style="color: #00b050;">[password]]]</span><em></em></em></p>
<p><span style="font-size: 12pt; line-height: 115%;">11. Join in a domain: net </span><span style="font-size: 12pt; line-height: 115%;">dom</span><span style="font-size: 12pt; line-height: 115%;"> join <span>ComputerName /domain: fareast.corp.microsoft.com /UserD<span>:esdcvsec</span> /PasswordD:123456</span></span></p>
<p>&nbsp;</p>
<p style="margin: 0in 0in 0pt 0.25in; text-indent: -0.25in; line-height: normal;"><strong><span style="font-size: 18pt; color: #166488;">10.<span style="font: 7pt 'Times New Roman';">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></strong><strong><span style="font-size: 18pt; color: #166488;">Reference</span></strong><strong></strong></p>
<p><span style="font-size: 12pt; line-height: 115%;">1. </span><a target="_blank" href="http://www.cnblogs.com/linglizeng/admin/mhtml:http://sharepointasia/sites/vmmtcsgc/Shared%20Documents/The%20Efficient%20Life/ScriptingTraining/01.Bat%20and%20CMD%20Overview.mht!x-usc:http://ss64.com/nt/"><span style="font-size: 12pt; line-height: 115%;">http://ss64.com/nt/</span></a> </p>]]></description></item><item><title>[转载]FastReport问题整理</title><link>http://www.cnblogs.com/eastson/archive/2010/01/27/1657591.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Wed, 27 Jan 2010 07:26:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2010/01/27/1657591.html</guid><description><![CDATA[<p>更新历史： 2009-02-27 加入套打方案全攻略（原：jinzhili博客） 2009-03-03 FastReport打印CxGrid数据 ======================================================================== 新版本 1.FastReport中如果访问报表中的对象？可以使用FindObject方法。 TfrxMemoView(frxReport1.FindObject(&rsquo;memo1&prime;)).Text:=&rsquo;FastReport&rsquo;;</p>
<p>2.FastReport中如何使用上下标？设置frxmemoview.AllowHTMLTags := True;在Text输入如下上标：mm<sup>2</sup> 下表：k<sub>6</sub> 举一反三，你还可以使用其他HTML标记。</p>
<p>3.FastReport中如何打印总页数？设置两次报表后加入引号内内容 &ldquo;第[Page#]页 共[TotalPages#]页&rdquo;</p>
<p>4.FastReport中如何动态加入变量及变量组？建立变量组名 frxreport1.Variables.Add.Name:=&rsquo; &lsquo;+变量组名; 建立变量名 frxreport1.Variables.AddVariable(&rsquo;组名，如果为不存的组或空，则为默认组，这里不需要空格&rsquo;,变量名,变量初始值); 例如要建立变量组Yuan,二个变量Yuan1,Yuan2，则为 frxreport1.Variables.Add.Name:=&rsquo; Yuan&rsquo;注意前面是空格 frxreport1.Variables.AddVariable(&rsquo;Yuan&rsquo;,Yuan1,初始值) frxreport1.Variables.AddVariable(&rsquo;Yuan&rsquo;,Yuan2,初始值)</p>
<p>5.FastReport中如何加入自定义函数？ Fastreport可以自己加入需要的函数，来实现特定的功能。过程就是： 1)添加函数到报表中。 frxreport1.AddFunction(&rsquo;完整的函数声明&rsquo;); 如有一个自定义函数，为GetName(Old:String):String;这个函数通过数据集的一个字段，得到另一个返回值。则语句为：frxreport1.AddFunction(&rsquo;Function GetName(Old:String):String;&rsquo;); 2)脚本中使用函数。在脚本中或报表中使用自定义函数，就像使用其它Fastreport内置函数一样。 3)程序中处理函数。使用函数是通过frxreport1的OnUserFunction函数来实现的。 OnUserFunction的声明如下：Function(const MethodName: String;var Params: Variant): Variant; 比如上面的函数，首先要有一个函数，这个函数是GetName的实现部分。如有一个在程序中实现的函数。 function RealGetName(Old:String):String;这个函数名是无所谓的，也可以是GetName。在OnUserFunction的事件处理中有如下代码即可完成自定义函数在报表中的使用。 if CompareText(MethodName,&rsquo;GetName&rsquo;)=0 then Result:=RealGetName(VarToStr(Params[0])); 我一般都是使用CompareText来比较函数名，因为我发现二个版本的Fastreport，一个是 MethodName全部自动变成了小写，一个是全部自动变成了大写，所以干脆用CompareText来比较，肯定不会出错。如果有多个参数，则依次传递Params[0],Params[1]即可，要保持顺序一致。这里要注意一点，如果参数为指针，则不能直接使用Pointer(Integer(Params[0]))。因为实际传递过来的是指针的整数值，可以使用Pointer(StrToInt(VarToStr(Params[0])))。</p>
<p>6.FastReport中如何共用TFrxreport及TfrxDBDataSet？一个程序中，不管多么大的程序，只要打印或预览时是模式的，则完全可以共用一个TFrxreport 变量及几个TfrxDBDataSet。只不过，要注意完成一个报表程序的步骤，主要是下面几步 <br />1)清除报表，得到一个全新的报表内容。 Frxreport1.clear。 <br />2)设置要使用的TfrxDBDataSet的别名，如果不需要可以省略这一步，但一般最好不同的报表用不同的别名。注意这一步要在加载报表文件之前，因为一般设计报表文件时已经包含了别名信息。 frxDBDataSet1.UserName:=别名; <br />3)加载报表或动态建立一个TfrxReportPage。 Frxreport1.LoadFromFile(报表文件的完整文件名); <br />4)关联TfrxDBDataSet与TDataset，并设置要使用哪些TfrxDBDataSet。 Frxreport1.DataSets.Clear;//先清除原来的数据集 frxDBDataSet1.DataSet:=dataset1;//关联Fastreport的组件与TDataset数据集。 Frxreport1.DataSets.Add(frxDBDataSet1);//加载关联好的TfrxDBDataSet到报表中。经过这几步后，就可以像单独使用一个Tfrxreport一样使用共用的报表组件了</p>
<p>7.FastReport中如何使用脚本，脚本中使用变量？很多时候，我们希望把对报表的控制放到报表的脚本中，通常我这样做有二个原因： <br />1)能够根据字段内容的变化而使用不同的设置，因为如果想在程序中实现这样功能，就不得不用自定义函数，函数的实现要放到程序中，函数可能需要传递很多参数，效率低下。<br />2)把不同报表的控制放到脚本中，可以实现报表的模块化，程序只是简单的设置数据集的关系，并加载硬盘上的报表文件，不同报表的不同实现方式，显示方式，均放到报表文件中，程序简洁，易维护，易升级。当然，这样的缺点就是程序中加载报表时的数据集别名必须与设计报表时的别名一致。脚本的使用与通常程序的使用并没有太多的区别，就是像正常的程序那样引用控件的名称即可。但注意对变量的使用，需要把变量名或表达式用&lt;&gt;括起来。实现打印分组的页数。基本的原理就是：<br />１）必须使用二遍报表，因为FS算总页数就是需要二遍报表的。<br />２）在第一遍报表中，在GroupBand打印前，动态的建立整数型数组变量，用以保存上一个分组的总页数。<br />３）在最后一遍报表时，需要显示分组页数的Tfrxmemoview取得数组中的数据，但最后一个分组不会有总数，可以通过总页数减去GroupBand事件中保存的页数来取得。<br />４）代码中处理了一页多组，及一组多页打印分组头的情况。可以看到这些特殊处理的代码说明。<br />５）我特意在分组尾及页脚都用了Tfrxmemoview来显示这些数据，说明在不同情况下的显示。</p>
<p>8.FastReport中如何在脚本中根据字段名改变Tfrxmemoview的内容？假设有数据表&ldquo;用户&rdquo;，字段ID为用户标识，Name为用户名，打印时要求，如果用户名为空，则打印&ldquo;无用户名&rdquo;，否则打印出&ldquo;用户名：实际的用户&rdquo;，则可以在ID的Tfrxmemoview控件的 OnAfterData事件中写如下脚本。 if &lt;frxDBDataSet1.&rdquo;Name&rdquo;&gt;=&rdquo; then Memo2.Text:=&rsquo;无用户名&rsquo; else Memo2.Text:=&rsquo;用户名：[frxDBDataSet1."Name"]&lsquo; Memo2是放置用户名称数据的Tfrxmemoview控件。这里注意，要在脚本中访问变量需要把变量用&lt;&gt;包括起来。</p>
<p>9.FastReport中如何动态调整高度？我经常使用下面的几个函数来实现Band及Tfrxmemoview高度的动态调整，需要注意的是：下面的函数只能调整一个Band中多行的最后一行，如果只有一行（多数情况下应该是这样）就无所谓了，而且这是在宽度已经固定的前提下。在想要调整高度的Band的OnBeforePrint事件中写 SetMemo(Sender);，代码如下，粘贴到代码页中就可以使用。下面的代码也可以演变一些，实现动态宽度等。我多处都判断了Tag是否为7635,因为我经常需要单独调用其中的某个函数。 //7635为保留数字，表示不作任何调整，通常用在多行的最上方 function Biger(Old:Extended):Integer; begin Result:=Trunc(Old); if Frac(Old)&gt;0 then Result:=Result+1; end; procedure JustHeight(Sender:TfrxComponent); var RealHeight:Integer; begin RealHeight:=Biger(TFrxMemoView(Sender).CalcHeight+TFrxMemoView(Sender).Top); if Biger(TfrxBand(Sender.Parent).Height)&lt;RealHeight then begin //若MEMO的高度小于BAND但计算高度大于BAND，则在调整BAND的函数中就会被调整 TfrxBand(Sender.Parent).Height:=Biger(RealHeight); JustBandHeight(Sender.Parent); end else TfrxMemoView(Sender).Height:=TfrxBand(Sender.Parent).Height -TfrxMemoView(Sender).Top; end; procedure JustBandHeight(Sender:TfrxComponent); var I:Integer; begin for I:=0 to Sender.Objects.Count-1 do if TObject(Sender.Objects.Items[I]) is TFrxMemoView then if TFrxMemoView(Sender.Objects.Items[I]).Tag=7635 then Continue else //如果小才改变，如果大则不能改变 if Biger(TfrxMemoView(Sender.Objects.Items[I]).Height+ TfrxMemoView(Sender.Objects.Items[I]).Top)&lt;&gt;Biger(TfrxBand(Sender).Height) then TfrxMemoView(Sender.Objects.Items[I]).Height:= Biger(TfrxBand(Sender).Height-TfrxMemoView(Sender.Objects.Items[I]).Top); end; procedure JustMemo(Sender:TfrxComponent); begin if not Engine.FinalPass then Exit; if Sender.Tag&lt;&gt;7635 then JustHeight(Sender); end; procedure SetMemo(Sender:TfrxComponent); var I:Integer; begin for I:=0 to Sender.Objects.Count-1 do if TObject(Sender.Objects.Items[I]) is TFrxMemoView then if TfrxMemoView(Sender.Objects.Items[I]).Tag&lt;&gt;7635 then TfrxMemoView(Sender.Objects.Items[I]).OnAfterData:=&rsquo;JustMemo&rsquo;; end;</p>
<p>10.FastReport中如何实现套打？纸张是连续的带锯齿的已经印刷好的，类似于通信公司发票这里设计的是客户销售记录。客户有两个要求： 1、因为打印纸张是印刷的，明细记录只有8行，所以，如果明细记录如果不到8行，就将公司名称、销售记录打印在上面，下一个公司的信息打印在下一页，而不能接在该页上（呵呵，是啊，如果接在一起，那印刷单就失去意义了） 2、如果销售记录超过8行，则从第9行开始的销售记录打印在下一页（所谓下一页，其实就是锯齿分割的下一*，称呼&ldquo;下一份&rdquo;比较妥切？），并且抬头（也就是公司名称）也要打上（如果不打印抬头，撕下了后，可能弄混淆了，不知道这一页是哪个公司的）问题描述标准说法是不是应该叫&ldquo;打印固定行&rdquo;、&ldquo;强制换页&rdquo;？回答：每页打印抬头的问题，就是把包含公司名称的Band每页重复打印即可。属性中有一个的。勾选就行了。至于固定行，实际上设计套打时，页面大小都是固定的，每一行的高度也都是固定的，页眉与页脚也是固定的，这样设计出来的报表可打印的行数自然就是你要求的 8行了。根本不需要什么强制换页。因为根据纸张会自动换页的。你要做的就是设计好纸张尽寸、页面布局，就得了，套打是一种最简单的打印，不用想的太复杂。</p>
<p>11.FastReport中如何实现连续打印？很多人认为Fr不能实现连续打印，以为只能通过自己写函数调用打印函数来实现连续打印，实际上，Fr可以轻易的实现连续打印，同时，实现时又是非常简单，你甚至可以在你的程序的打印设置中简单的让客户选择是否连续打印，其它都可以保持不变。 function PelsTomm(Pels:Extended):Extended; begin Result:=Pels/Screen.PixelsPerInch*25.4; end; procedure PrintSerial(Frx:TFrxReport;SequencePage:Byte=0); var P:TfrxReportPage; R,R1:Extended; begin {必须是二遍报表，否则无法计算总页数。下面的方法只适用于没有页脚的情况，因为如果有页脚的话 FreeSpace就始终为0了。可以用报表脚来代替。因为是连续打印，也可以看作只有一页，报表脚也就相当于页脚了} if not Frx.Engine.DoublePass then Exit; //SequencePage指要连续打印的页面，普通报表就是0 P:=TfrxReportPage(Frx.Pages[SequencePage]); R1:=P.TopMargin+P.BottomMargin; while Frx.PrepareReport do begin if (Frx.Engine.TotalPages&lt;=1) then Break; R:=Pelstomm(Frx.Engine.TotalPages*Frx.Engine.PageHeight- Frx.Engine.FreeSpace)+R1; P:=TfrxReportPage(Frx.Pages[SequencePage]); P.PaperHeight:=R; end; {必须用上面的循环代码来得到准确的空白区域不能用通过计算总页数减去各页的页边距的方法来获得空白区域因为如果碰到一条记录过宽的情况导致换页，就不准确了。} R:=Pelstomm(Frx.Engine.TotalPages*Frx.Engine.PageHeight- Frx.Engine.FreeSpace)+R1; P:=TfrxReportPage(Frx.Pages[SequencePage]); P.PaperHeight:=R; end; 在预览或打印前先调用PrintSerial即可。</p>
<p>12.如何在程序中指定打印机名称? frxReport1.Report.PrintOptions.Printer := &lsquo;打印机名称&rsquo;;</p>
<p>13.如何使用打印机直接打印? implementation uses Printers; {$R *.dfm} procedure TForm1.Button1Click(Sender: TObject); begin Printer.PrinterIndex := 0;{网络打印机也是要安装在你本地的操作系统中的，直接使用顺序试试吧} Printers.Printer.SetPrinter(&rsquo;HP1020&prime;,&rsquo;HP1020&prime;,&rsquo;LPT1&prime;,0);{打印机名字，驱动，端口等，自查，我是用虚拟打印机测试的} Printers.Printer.BeginDoc; Printers.Printer.Canvas.TextOut(10,10,&rsquo;打印这一行字&rsquo;); Printers.Printer.EndDoc; end;</p>
<p>14.如何打印空白处？在打印报表的Band处的OnBeforePrint事件中添加代码： while FreeSpace &gt; 20 do ShowBand(Child1)</p>
<p>15.如何打印指定行数后换页？在master band中OnBeforePrint事件中写代码： var vLineCount: integer; begin vLineCount := vLineCount + 1; if vLineCount = 10 then begin vLineCount := 0; NewPage; end; end;</p>
<p>16.fastreport中如何把数据显示为百分比 DisplayFormat属性，其中的Kind你设置成fkNumeric,FormatStr [&lt;frxDBDataset1."sjl"&gt;*100 #n%2.2f]%&rdquo;。</p>
<p>17.FastReport如何打印表格式的空行？ var PageLine: integer; //在現在頁列印到第幾行 PageMaxRow: integer=15; //設定每頁列數 procedure MasterData1OnBeforePrint(Sender: TfrxComponent); begin PageLine :=







mod PageMaxRow; if (PageLine = 1) and (







&gt; 1) then Engine.newpage; child1.visible := False; end; //Footer1高度設為0 procedure Footer1OnBeforePrint(Sender: TfrxComponent); var i: integer; begin i := iif(PageLine=0, PageMaxRow, PageLine); child1.visible := True; while i &lt; PageMaxRow do begin i := i + 1; Engine.ShowBand(Child1); //印空白表格 end; child1.visible := False; end; begin end.</p>
<p>======================================================================== 早期版本 &mdash;&mdash;&mdash;&mdash;&mdash;- 使用自定义函数 &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-</p>
<p>Q: 我怎样添加我的自定义函数?<br />A: 使用 TfrReport.OnUserFunction 事件. 这里有一个简单的例子: procedure TForm1.frReport1UserFunction(const Name: String; p1, p2, p3: Variant; var val: Variant); begin if AnsiCompareText(&rsquo;SUMTOSTR&rsquo;, Name) = 0 then val := My_Convertion_Routine(frParser.Calc(p1)); end; 然后，你就可以在报表（任何表达式或脚本）的任何地方使用 SumToStr 函数了。</p>
<p>Q: 但是它仅仅能工作在一个TfrReport组件中。可我想在任何地方（在所有的TfrReport组件中）使用的我的自定义函数？ <br />A: 使 OnUserFunction event 句柄作为所有组件的公用句柄。如果你不能做到这一点，你需要创建函数库： type TMyFunctionLibrary = class(TfrFunctionLibrary) public constructor Create; override; procedure DoFunction(Fno: Integer; p1, p2, p3: Variant; var val: Variant); override; end; constructor TMyFunctionLibrary.Create; begin inherited Create; with List do begin Add(&rsquo;DATETOSTR&rsquo;); Add(&rsquo;SUMTOSTR&rsquo;); end; end; procedure TMyFunctionLibrary.DoFunction(Fno: Integer; p1, p2, p3: Variant; var val: Variant); begin val := 0; case Fno of 0: val := My_DateConvertion_Routine(frParser.Calc(p1)); 1: val := My_SumConvertion_Routine(frParser.Calc(p1)); end; end; 要注册函数库，调用 frRegisterFunctionLibrary(TMyFunctionLibrary); 要卸载函数库，调用 frUnRegisterFunctionLibrary(TMyFunctionLibrary); Q: 我怎样将我的函数添加到函数列表中 (用表达式生成器)? A: 使用 frAddFunctionDesc 过程 (在FR_Class 单元中): frAddFunctionDesc(FuncLib, &lsquo;SUMTOSTR&rsquo;, &lsquo;My functions&rsquo;, &lsquo;SUMTOSTR()/Converts number to its verbal presentation.&rsquo;); 注意: &ldquo;/&rdquo; 符号是必须的! 它从它的描述中分隔函数语法。 FuncLib 被声明为你自己的函数库 (如果你不使用函数库可以将其设置为nil). 当函数库未注册时，所有它的函数将自动从函数列表中删除。 &mdash;&mdash;&mdash;&mdash;&mdash;- 使用变量 &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-</p>
<p>Q: 我怎样编程实现填充变量列表（在数据词典中）? <br />A: 数据词典中的所有变量及分类都被存储在 TfrReport.Dictionary.Variables 中. with frReport1.Dictionary do begin // 创建分类(名称用空白) Variables[' New category'] := &lsquo; &lsquo;; // 创建变量 Variables['New Variable'] := &lsquo;CustomerData.Customers.&rdquo;CustNo&rdquo;&lsquo;; Variables['Another Variable'] := &lsquo;Page#&rsquo;; end;</p>
<p>Q: 我定义了字符串变量: with frReport1.Dictionary do Variables['Month'] := &lsquo;March&rsquo;; 但是当我运行报表是，出现了错误，为什么? <br />A: 因为 FastReport 假定数据词典中的字符串变量值是一个表达式，它需要分析、计算它。可以使用其它的方法: with frReport1.Dictionary do Variables['Month'] := &rdquo;&rdquo; +&rsquo;March&rsquo; + &rdquo;&rdquo;; 或者, 使用 frVariables 来传输固定数据到报表。</p>
<p>Q: 我不想在数据词典中显示某些数据集？<br />A: 使用 TfrReport.Dictionary.DisabledDatasets: with frReport1.Dictionary do begin // 关闭该数据集 DisabledDatasets.Add(&rsquo;CustomerData.Bio&rsquo;); // 或者, 关闭整个数据模块/窗体 DisabledDatasets.Add(&rsquo;CustomerData*&rsquo;); end;</p>
<p>Q: 我怎样将数据传送到报表? <br />A: 有几个方法可以实现它. 第一是使用全局对象 frVariables (在 FR_Class 单元中被定义): frVariables['My variable'] := 10; 这段代码创建了一个名称为&ldquo;My variable&rdquo;，值为 10 的变量。这是最好的传输固定数据的报表的方法。第二种方法是使用 TfrReport.OnGetValue 事件. 这可以使用这个方法来传送动态数据、记录等。 procedure TForm1.frReport1GetValue(ParName: String; var ParValue: Variant); begin if ParName = &lsquo;MyField&rsquo; then ParValue := Table1MyField.Value; end; 最后, 第三种方法是通过编程在数据词典中定义变量（可以参考以前的问题）: with frReport1.Dictionary do begin Variables['MyVariable'] := &lsquo;CustomerData.Customers.&rdquo;CustNo&rdquo;&lsquo;; Variables['Another Variable'] := &rsquo;10&rsquo;; end;</p>
<p>Q: 我能在报表和程序间传送数据吗? <br />A: 使用 frVariables 对象. 如果你在报表的任何对象的脚本中写入以下代码： MyVariable := 10 那么，在你的程序中，你可以使用以下代码来获取 MyVariable 的值: v := frVariables['MyVariable']; &mdash;&mdash;&mdash;&mdash;&mdash;- 脚本 (FastReport Pascal) &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>
<p>Q: Band 中是否可以使用脚本?<br />A: 当然. 选择 band ，然后按 Ctrl+Enter 或在对象浏览器中选择 &ldquo;OnBeforePrint&rdquo; 属性。</p>
<p>Q: 报表页中是否可以使用脚本?<br />A: 当然. 选择页 (在空白处单击) ，然后在对象浏览器中选择 &ldquo;OnBeforePrint&rdquo; 属性。如果该页是一个对话框窗体，那么这个属性就是 &ldquo;OnActivate&rdquo;.</p>
<p>Q: 我有两个对象: Memo1 和 Memo2. 我能否在 Memo1 的脚本中调用 Memo2 的属性和方法？ <br />A: 当然， 例如，你可以这样做： 对象名.属性名.</p>
<p>Q: 在脚本中，我可以使用对象的哪些属性?<br />A: 几乎所有你能在对象浏览器中看到的属性。例如，可以使用 Font.Name, Font.Size等来存取字体属性。 &mdash;&mdash;&mdash;&mdash;&mdash;- 其它问题 &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>
<p>Q: 怎样改变多页报表中某一页的顺序?<br />A: 拖动页标签到目的位置。</p>
<p>Q: 我想查看所有的字段及变量，我想在报表中使用列表来实现它？ <br />A: 设置 TfrReport.MixVariablesAndDBFields := True.现在，所有的数据字段及变量可在&ldquo;插入数据字段&rdquo;对话框中可存取了。</p>
<p>Q: 我不想显示导入选项对话框？<br />A: 在导入组件（比如，TfrTextExport)中设置所有必需的选项，然后通过设置ShowDialog属性为 False来关闭此对话框。</p>
<p>Q: 为什么 TotalPages 变量不起作用? 它总是返回 0.<br />A: 在你的报表中设置 Two-pass 选项. 要设置它，你需要在报表设计器的&ldquo;文件&rdquo;菜单中，打开 &ldquo;报表选项&rdquo;对话框。</p>
<p>Q: 我用BLOB字段来存储我的报表。当我运行报表设计器时，它显示我的报表未命名？<br />A: 在运行报表设计器前，这样做: frReport1.FileName := &lsquo;Name of my report&rsquo;;</p>
<p>Q: 我想在重新定义报表设计器中的&ldquo;打开&rdquo;及&ldquo;保存&rdquo;按钮的功能？ <br />A: 查看 TfrDesigner 组件. 它有几个必需的事件: OnLoadReport 和 OnSaveReport. 这里有一小段代码例子: procedure TForm1.frDesigner1LoadReport(Report: TfrReport; var ReportName: String; var Opened: Boolean); begin with MyOpenDialog do begin Opened := ShowModal = mrOk; if Opened then begin Report.LoadFromBlobField(&hellip;); ReportName := &hellip;; end; end; end; procedure TForm1.frDesigner1SaveReport(Report: TfrReport; var ReportName: String; SaveAs: Boolean; var Saved: Boolean); begin if SaveAs then with MySaveDialog do begin Saved := ShowModal = mrOk; if Saved then begin Report.SaveToBlobField(&hellip;); ReportName := &hellip;; end; end else Report.SaveToBlobField(&hellip;); end;</p>
<p>Q: 在 QR 中, 我可以写这样的代码： QRLabel1.Caption := &rsquo;Some text&rsquo;. 我可以用FR这样做吗？ <br />A: FR 对象并不是一个组件 (这并不像 QR, RB). 但使用 TfrReport.FindObject 方法可以通过对象名称找到该对象。 var t: TfrMemoView; begin t := TfrMemoView(frReport1.FindObject(&rsquo;Memo1&rsquo;)); if t &lt;&gt; nil then t.Memo.Text := &rsquo;FastReport&rsquo;; end;</p>
<p>Q: 我想在用户预览（TfrPreview组件）中自定义热键？<br />A: 这个组件有个窗口: Tform 属性. 将自定义句柄指定到 Window.OnKeyDown 属性.</p>
<p>Q: Fast Report 2.4 不能装载 FreeReport 2.21 文件？ <br />A: 这仅需要使用16进制数改变报表文件的第一字节，然后在源代码中修改下面的部分。在这些修改之后， 装载报表并保存它. 最后，返回到源代码处. FR_Class: function ReadString(Stream: Tstream): String; begin { if frVersion &gt;= 23 then} Result := frReadString(Stream) {else Result := frReadString22(Stream);} end; procedure ReadMemo(Stream: Tstream; Memo: Tstrings); begin { if frVersion &gt;= 23 then} frReadMemo(Stream, Memo){ else frReadMemo22(Stream, Memo);} end; FR_Utils: procedure frReadMemo(Stream: Tstream; l: Tstrings); var s: String; b: Byte; n: Word; begin l.Clear; l.Text := frReadString(Stream); exit; Stream.Read(n, 2); if n &gt; 0 then repeat Stream.Read(n, 2); SetLength(s, n); Stream.Read(s[1], n); l.Add(s); Stream.Read(b, 1); until b = 0 else Stream.Read(b, 1); end; function frReadString(Stream: Tstream): String; var s: String; n: Integer; b: Byte; begin Stream.Read(n, 4); SetLength(s, n); Stream.Read(s[1], n); if (n &gt; 0) and (s[n] = #$0A) then SetLength(s, n &ndash; 2); // Stream.Read(b, 1); Result := s; end;</p>
<p>Q: 怎样不在打印预览中打印报表？ <br />A: 这里有一段代码: frReport1.PrepareReport; frReport1.PrintPreparedReport(&rdquo;, 1, True, frAll); 或 frReport1.PrintPreparedReportDlg;</p>
<p>Q: 我想在报表中旋转图片。问题是这张图片是由我的应用程序生成的。是否有方法可以在打印前将这幅图片装载到报表中？ <br />A: 使用 TfrReport.OnBeforePrint 事件: if View.Name = &lsquo;Picture1&prime; then TfrPictureView(View).Picture.LoadFromFile(&hellip;) 或 .Assign 或 .你所想要做的任何事情 FastReport 套打全攻略 //以设计套打行为6行为例进行说明一、定义变量 TaoDa 0 是套打 1 不套打 cPage 系统变量 页# caPage 系统变量 总页数二、TfrPage.OnBeforePrint事件中写 { if TaoDa = &lsquo;0&prime; then begin title.visible:=false; //不用打印的设置Visible为False; danweiv.frametyp := 0; //只打印数据的不需要打印边框的设置 frametyp 为 0; &hellip; end; i := 0 ; //定义一个变量并进行初始化。 } 二、主项数据.OnBeforePrint事件中写 { if TaoDa = &lsquo;0&prime; then begin i := i + 1; bm.memo := i; if (i &gt; 5 ) then if ((i-1) mod 6 ) = 0 then newpage; end; } 三、主项脚.OnBeforePrint事件中写 { j := i mod 6; if j &lt;&gt; 0 then begin for k := j to 5 do begin ShowBand(Child1); //Child1是子的名称 显示空白行 end; end; } 四、栏目脚.OnBeforePrint事件中写 { if cpage &lt;&gt; capage then begin shi.memo := &rdquo;; //十 bai.memo := &rdquo;; //百 qian.memo := &rdquo;; //千 wan.memeo := &rdquo;; //万 end else begin shi.memo := v1; bai.memo := v2; qian.memo := v3; wan.memo := v4; end; } 这段代码是用来控制在有多页情况下，在最后一页上显示总金额。其中：v1,v2,v3,v4 是自定义变量。报表结构组成：栏目头 //画报表的标头主项数据 //显示的数据，会与数据源进行绑定主项脚 //什么也不用放，只用来控制 visible := false; 子 //画出空白行显示的组件栏目脚 //显示总的金额、数量页脚 //显示页数调用方法： frReportA.LoadFromFile(s); s 是文件 frReportA.Dictionary.Variables['taoda']:=&rsquo;1&prime;; 进行查询打印： frReportA.PrepareReport; frreportA.PrintPreparedReport(&rdquo;,1,true,frall); 预览： frReportA.ShowReport; FastReport打印CxGrid数据用惯了FastReport，就不愿意再使用其他的Print Component。用FastReport打印CxGrid Filter后的数据，网上一直没有很好的办法和例程。看到有将CxGrid的Fileter Text取出后再赋给DataSet的说明，没有具体去试验，太麻烦。如此著名的Component肯定有解决此问题的方法。于是今天到Dev Express英文站点去浏览了一番，在该站上搜索了一下，居然出来N多此问题的提问者，看了几个这类的问题后，终于解决了。解决此问题可以使用以下方法： <br />1、将View的datacontroller.filter.autodatasetfilter属性设为True。此方法需要DataSet支持才能设置。<br />2、是在FastReport的frDBDataSet的CheckEof Event里写如下代码： EOF := frUserDataset1.RecNo &gt;= Grid.ViewData.RecordCount; 在frReport的GetValue Event里写代码： if ParName=&rsquo;Field1&prime; then ParValue := Grid.ViewData.Records[frDataset1.RecNo].Values[2]); 此代码也可这样写： ParValue :=Grid.ViewData.Records[frDataset1.RecNo].Values[View.GetColumnByFieldName(ParName).Index]); ReportMachine 1.如何使用代码指定打印机？ RMReport1.LoadFromFile(&rsquo;Untitled.rmf&rsquo;); rmreport1.PrinterName:=&rsquo;\192.168.10.1HP LaserJet 1022&prime;;</p>]]></description></item><item><title>[转载]FastReport 报表排序与cxGrid同步.</title><link>http://www.cnblogs.com/eastson/archive/2010/01/26/1656757.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 26 Jan 2010 07:14:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2010/01/26/1656757.html</guid><description><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp; //描述: cxGrid的 TableView 数据排序与对应的数据集同步, 该方法主要用于打印时<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 的排序与所见到的排序保持一致;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //参数: @tv: 排序的cxGridTableView<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //说明: @tv: 对应的数据集只支持 ADOQuery与 ClientDataSet;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; procedure cxGridSortSyncToDataSet(tv: TcxGridDBTableView); overload;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //描述: 功能同上, 实现代码一样, 如果有更改就同步更改<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; procedure cxGridSortSyncToDataSet(tv: TcxGridDBBandedTableView); overload;</p>
<p>procedure cxGridSortSyncToDataSet(tv: TcxGridDBTableView);<br />const<br />&nbsp;&nbsp;&nbsp;&nbsp; SortArray: array[soAscending..soDescending] of string = ('ASC', 'DESC');<br />var<br />&nbsp;&nbsp;&nbsp;&nbsp; AscFields, DescFields, S, SortOrder: string;<br />&nbsp;&nbsp;&nbsp;&nbsp; IndexPrint: string;<br />&nbsp;&nbsp;&nbsp;&nbsp; I: integer;<br />&nbsp;&nbsp;&nbsp;&nbsp; Index: integer;<br />&nbsp;&nbsp;&nbsp;&nbsp; cds: TClientDataSet;<br />begin<br />&nbsp;&nbsp;&nbsp;&nbsp; S := '';<br />&nbsp;&nbsp;&nbsp;&nbsp; AscFields := '';<br />&nbsp;&nbsp;&nbsp;&nbsp; DescFields := '';<br />&nbsp;&nbsp;&nbsp;&nbsp; if tv.SortedItemCount = 0 then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Exit;<br />&nbsp;&nbsp;&nbsp;&nbsp; if tv.DataController.DataSource.DataSet is TADOQuery then begin<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for I := 0 to tv.SortedItemCount - 1 do begin<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SortOrder := SortArray[tv.SortedItems[I].SortOrder];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if S &lt;&gt; '' then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S := S + ', ';<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Index := tv.SortedItems[I].Index;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S := S + tv.Columns[Index].DataBinding.Field.FieldName + ' ' + SortOrder;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (tv.DataController.DataSource.DataSet as TADOQuery).Sort := S;<br />&nbsp;&nbsp;&nbsp;&nbsp; end else if (tv.DataController.DataSource.DataSet is TClientDataSet)&nbsp;&nbsp;&nbsp;&nbsp; then begin<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cds := tv.DataController.DataSource.DataSet as TClientDataSet;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for I := 0 to tv.SortedItemCount - 1 do begin<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Index := tv.SortedItems[I].Index;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S := tv.Columns[Index].DataBinding.Field.FieldName +';';<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AscFields := AscFields + S;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if tv.SortedItems[I].SortOrder = soDescending then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DescFields := DescFields + S;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if AscFields &lt;&gt; '' then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Delete(AscFields, Length(AscFields), 1); //删除 ;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if DescFields &lt;&gt; '' then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Delete(DescFields, Length(DescFields), 1);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IndexPrint := TimeToStr(Now());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cds.IndexDefs.Clear;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IndexPrint := TimeToStr(Now());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cds.AddIndex(IndexPrint, AscFields, [], DescFields);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cds.IndexName := IndexPrint;<br />&nbsp;&nbsp;&nbsp;&nbsp; end;<br />end;</p>
<p>&nbsp;</p>]]></description></item><item><title>[转载]Delphi中用FastReport制作报表</title><link>http://www.cnblogs.com/eastson/archive/2010/01/26/1656756.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 26 Jan 2010 07:12:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2010/01/26/1656756.html</guid><description><![CDATA[<div id="blog_text" class="cnt">报表作为系统信息的典型输出形式之一，是大多数应用系统特别是MIS系统的重要功能。是否具有一个良好的打印功能，往往从一定程度上关系到系统的成败。Delphi有很强的报表功能，但是它的报表功能还不能满足我们的需要。于是许多Delphi高手相继推出了不少优秀的报表控件（模块），作为QuickReport的补充，其中FastReport就是一个代表。
<p>　　FastReport综合了QuickReport和Re portBuilder的优点，个头小，速度快，并带有全部源码。笔者在开发一个药品管理系统时，用FastReport2.51成功制作出了和药品验收单、药品调拨单一模一样的表单式报表。下面给朋友们介绍一下。</p>
<p>　　FastReport V3.19.4下载地址：http://down.ddvip.com/view/11509923603352.html。</p>
<p>　　报表的需求分析</p>
<p>　　在医院工作的朋友都知道，药品入库时要填写药品验收单，药房工作人员领取药品时要填写药品调拨单。笔者单位使用的药品验收单和调拨单不是专用的，而是通用的商品验收单和调拨单。与百货业、电信系统使用的报表不同，它的形状为条形，每张固定可填五种药品，内容包括发货单位、发货单号、收货单位、品名、规格、单位、价格、金额等，一式三联。</p>
<p>　　综上所述，我们可以把报表设计的需求归纳如下：</p>
<p>　　1. 大小为：长21cm，宽10cm；</p>
<p>　　2. 每张可以打印5种药品，表单下面有本页小计。</p>
<p>　　3. 多于5种药品时开始新一张表单的打印，不足5种药品时要用空行补足。</p>
<p>　　报表设计</p>
<p>　　1.打开FastReport的报表设计器，按照图1设计出&ldquo;药品验收单&rdquo;。</p>
<img src="http://img.ddvip.com/2006_07/1154278208_ddvip_6760.jpg" alt="" />
<p>　　另外，InHJ、OutHJ、CaHj、LineCount这几个变量分别表示&ldquo;入库合计&rdquo;、&ldquo;出库合计&rdquo;、&ldquo;差价合计&rdquo;和&ldquo;数据总行数&rdquo;，在程序中将对这几个变量赋值。</p>
<p>　　2.按F11键，调出对象查看器，选中Band2，在它的OnBeforPrint事件中输入如下代码：</p>
<p>　　<code><span style="font-family: NSimsun;">begin<br />if LINE# -1　&lt;&gt;0　 and LINE# -1　 mod 5=0　 then<br />begin<br />showBand Child1　 <br />showBand band1　 <br />end <br />end </span></code></p>
<p>　　代码中用FastReport的内置函数 LINE# 取得当前行号，如果满足条件，就显示页头和Child3，开始新的一张表单。</p>
<p>　　3.选中Child3，在它的OnBeforPrint事件中输入如下代码：</p>
<p>　　<code><span style="font-family: NSimsun;">begin<br />lin = lineCount //在程序中要对该变量赋值<br />while lin mod 5&lt;&gt;0　 do<br />begin<br />showband child2　 //打印空行<br />inc lin　 <br />end <br />showBand child3　 <br />end </span></code></p>
<p>　　这段代码的用途是如果最后数据行不够一张表单显示时，就打印空行。</p>
<p>　　4. 选中Band3，在它的OnBeforPrint事件中输入如下代码：</p>
<p>　　<code><span style="font-family: NSimsun;">begin<br />showband child1　 //到达报表结束时显示表单底部的内容<br />end </span></code></p>
<p>　　5.将报表保存后回到Delphi开发环境。</p>
<p>　　Delphi编程部分</p>
<p>　　在Delphi编程部分我们主要完成报表所需参数的传递，因为要在好几个过程中访问这些参数，所以要将这几个参数设为全局变量：</p>
<p>　　<code><span style="font-family: NSimsun;">private<br />line1 line2 integer //保存行号<br />inputXj intemp //入库小计 ，每5行后清零，下同<br />outXj outemp //出库小计<br />CajiaXj catemp Real //差价小计<br />下面是几个主要过程的代码清单。<br />//单张表单数据合并过程<br />procedure TInputForm.frDBDataSet1Next Sender TObject　 <br />var<br />ReCount integer <br />begin<br />ReCount = Adoruku.RecordCount <br />Inc line1　 // 该变量传至报表文件控制打印空行<br />Inc line2　 // 该变量控制清零小计值<br />if not Adoruku.Eof then<br />begin<br />inputXj =inputXj+ADORuku.fieldByName '入库金额'　.AsFloat <br />outXj =outXj+Adoruku.fieldByName '出库金额'　.AsFloat <br />CajiaXj =CajiaXj+AdorukuJXCJ.AsFloat <br />end <br />//每5行后将小计值清零<br />if line2 mod 5 = 0　 and ReCount&gt; line2 div 5　 5　　 then<br />begin<br />intemp =inputXj <br />outemp =outXj <br />Catemp =CajiaXj <br />inputXj =0 <br />outXj =0 <br />CajiaXj =0 <br />end <br />//到达数据集末尾时给变量赋值<br />if Adoruku.Eof then<br />begin<br />intemp =inputXj <br />outemp =outXj <br />Catemp =CajiaXj <br />end <br />end </span></code></p>
<p>　　以上程序在Windows 2000/XP+Delphi6.0中调试通过。至此，我们已经完成了药品验收单的设计工作，其他的类似报表设计可以参照以上过程。图2是程序运行时生成的报表预览效果。</p>

<img src="http://img.ddvip.com/2006_07/1154278216_ddvip_6285.jpg" alt="" /></div>
<p>&nbsp;</p>
<p>&nbsp;</p>]]></description></item><item><title>[转载]动态创建fastReport报表</title><link>http://www.cnblogs.com/eastson/archive/2010/01/26/1656749.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 26 Jan 2010 07:08:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2010/01/26/1656749.html</guid><description><![CDATA[<p>frReport1.Pages.Clear;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; frReport1.Pages.Add;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;&nbsp; create&nbsp;&nbsp;&nbsp; page&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Page&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; frReport1.Pages[0];&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; frdbdataset1.DataSet:=dm.dts_salary;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; TfrBandView.Create;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;&nbsp; create&nbsp;&nbsp;&nbsp; Title&nbsp;&nbsp;&nbsp; band&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.SetBounds(0,&nbsp;&nbsp;&nbsp; 20,&nbsp;&nbsp;&nbsp; 0,&nbsp;&nbsp;&nbsp; 79);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;&nbsp; position&nbsp;&nbsp;&nbsp; and&nbsp;&nbsp;&nbsp; size&nbsp;&nbsp;&nbsp; in&nbsp;&nbsp;&nbsp; pixels&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.BandType&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; btReportTitle;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;&nbsp; (only&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; and&nbsp;&nbsp;&nbsp; Height&nbsp;&nbsp;&nbsp; are&nbsp;&nbsp;&nbsp; significant&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Page.Objects.Add(b);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for&nbsp;&nbsp;&nbsp; the&nbsp;&nbsp;&nbsp; band)&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; TfrMemoView.Create;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;&nbsp; create&nbsp;&nbsp;&nbsp; memo&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v.SetBounds(20,&nbsp;&nbsp;&nbsp; 60,&nbsp;&nbsp;&nbsp; 300,&nbsp;&nbsp;&nbsp; 23);&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v.BandAlign&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; baWidth;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v.Prop['Alignment']&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; frtaCenter;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;&nbsp; another&nbsp;&nbsp;&nbsp; way&nbsp;&nbsp;&nbsp; to&nbsp;&nbsp;&nbsp; access&nbsp;&nbsp;&nbsp; properties&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v.Prop['Font.size']&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; 14;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v.Prop['Font.name']&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; '隶书';&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v.Memo.Add('公司'+inttostr(u_main.pub_year)+'年'+inttostr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (u_main.pub_month)+'月'+'工资表');&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Page.Objects.Add(v);&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DocMode&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; dmDesigning;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; TfrBandView.Create;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.SetBounds(0,&nbsp;&nbsp;&nbsp; 100,&nbsp;&nbsp;&nbsp; 800,&nbsp;&nbsp;&nbsp; 22);&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.BandType&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; btgroupheader;//标题表头&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.Prop['formnewpage']&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; True;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.name:='groupheader1';&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.Prop['condition']&nbsp;&nbsp;&nbsp; :='[dm.dts_salary."name"]';&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //b.GroupCondition:='[]';&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; page.Objects.Add(b);&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v:=TfrMemoView.Create;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;&nbsp; create&nbsp;&nbsp;&nbsp; memo&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v.SetBounds(25,&nbsp;&nbsp;&nbsp; 101,&nbsp;&nbsp;&nbsp; 65,&nbsp;&nbsp;&nbsp; 15);&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v.Memo.Text:='姓名';&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //v.Parent.Name:='groupheader1';&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v.Prop['Font.size']&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; 10;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v.Prop['Font.name']&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; '宋体';&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Page.Objects.Add(v);&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; TfrBandView.Create;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.SetBounds(0,&nbsp;&nbsp;&nbsp; 125,&nbsp;&nbsp;&nbsp; 700,&nbsp;&nbsp;&nbsp; 20);&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.BandType&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; btMasterData;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //主项数据&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.Dataset&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; 'frDBDataSet1';&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; page.Objects.Add(b);&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i:=1;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while&nbsp;&nbsp;&nbsp; a_field_no[i]&lt;&gt;''&nbsp;&nbsp;&nbsp; do&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; begin&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; TfrMemoView.Create;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp;&nbsp;&nbsp; create&nbsp;&nbsp;&nbsp; memo&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v.SetBounds(25+65*(i-1),&nbsp;&nbsp;&nbsp; 126,&nbsp;&nbsp;&nbsp; 65,&nbsp;&nbsp;&nbsp; 15);&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v.Memo.Add('[dm.dts_salary.'+'"'+a_field_no[i]+'"'+']');&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v.Prop['Font.size']&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; 10;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; v.Prop['Font.name']&nbsp;&nbsp;&nbsp; :=&nbsp;&nbsp;&nbsp; '宋体';&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Page.Objects.Add(v);&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i:=i+1;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; frReport1.ShowReport</p>
<p>&nbsp;</p>]]></description></item><item><title>[转载]使用FastReport 3.0及以上版本创建动态报表的几个技巧</title><link>http://www.cnblogs.com/eastson/archive/2010/01/26/1656726.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 26 Jan 2010 06:51:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2010/01/26/1656726.html</guid><description><![CDATA[<p>1.已经生成的报表保存到流中，再从流中取出<br />&nbsp;&nbsp; TfrxReport.PreviewPages.SaveToStream(TStream);<br />&nbsp;&nbsp; TfrxReport.PreviewPages.LoadFromStream(TStream);<br /><br />2.把变量添加到报表中<br />&nbsp;&nbsp; with frxReport1 do<br />&nbsp;&nbsp; begin<br />&nbsp;&nbsp;&nbsp;&nbsp; with Variables do<br />&nbsp;&nbsp;&nbsp;&nbsp; begin<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Category:=Add;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Category.Name := ' ' + '自定义变量1';&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //注意！！第一个' '内是一个空格！！如果没有空格，不能正确添加分类<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; with Add do Name := ' ' + '自定义变量2';&nbsp;&nbsp;&nbsp; //更简化的格式<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AddVariable('自定义变量1', '变量11', QuotedStr('大写金额'));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AddVariable('自定义变量1', '变量12', QuotedStr('大写金额'));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AddVariable('自定义变量1', '变量13', QuotedStr('大写金额'));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AddVariable('自定义变量2', '变量21', 1880);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AddVariable('自定义变量2', '变量22', QuotedStr('大写金额'));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AddVariable('自定义变量2', '变量23', QuotedStr('大写金额'));<br />&nbsp;&nbsp;&nbsp;&nbsp; end;<br />&nbsp;&nbsp; end;<br /><br />3.动态添加数据集，要注意！！！！！<br />在取报表格式之前，应该先把数据集对象放好，这样才能保证在报表控件在取格式文件后，<br />安置报表对象时，可以拿到数据对象，如果操作顺序搞反了，则报表对象就无法<br />拿到数据对象，在预览数据时，就会产生&ldquo;没有数据集&rdquo;的错误了！！<br />var<br />&nbsp;&nbsp; tmpDataSet: T数据集;<br />&nbsp;&nbsp; DataSource: TDataSource;<br />&nbsp;&nbsp; frxDBDataSet: TfrxDBDataset;<br />begin<br />&nbsp;&nbsp; tmpDataSet:=T数据集.Create(Self);<br />&nbsp;&nbsp; DataSource:=TDataSource.Create(Self);<br />&nbsp;&nbsp; frxDBDataSet:=TfrxDBDataset.Create(Self);<br /><br />&nbsp;&nbsp; DataSource.DataSet:=tmpDataSet;<br />&nbsp;&nbsp; frxDBDataSet.DataSource:=DataSource;<br />&nbsp;&nbsp; //frxDBDataSet.DataSet:=tmpDataSet;&nbsp;&nbsp;&nbsp;&nbsp; //这条语句与上一条都可用，我也不知道区别在哪<br />&nbsp;&nbsp; frxDBDataSet.UserName:='数据项名称';&nbsp;&nbsp;&nbsp;&nbsp; //好用在于可以用中文名<br />&nbsp;&nbsp; frxReport1.DataSets.Add(frxDBDataSet);<br />-------------注意：在把报表格式LoadFromFile或LoadFromStream之前，必须完成上面这几条语句的程序！！！！<br /><br />4.将报表设置数据保存到流中，只要设置TfrxDesigner.OnSaveReport就可以了，但不知道这东西怎么和Report联接起来的，只需要在界面上放一个控件就OK了，怪怪的，不过挺爽<br />&nbsp;&nbsp;<br />5.自定义预览窗口<br />&nbsp;&nbsp; 通过引用frxPreview来建立继承类TfrxPreview，然后在继承的类中加入自己的特性，这样是最省事的了<br /><br />6.处理顺序的信条（真理）：假设报表模板是保存在数据库中的<br />a.必须在把报表模板提取出来前，把表对象注入数据中，否则在预览时就知错<br />b.必须在在把报表模板提取出来后，再把动态变量加到报表中，否则看不到变量存在<br />这两个顺序必须当信条来理解，至于什么原因，偶还没空看FastReport的源程序咧，嘿嘿~~，这两个处理机制可是偶经过了N多失败之后才发现的哦<br /><br />7.添加自定义函数<br />a.建立自己的函数，可以是类的成员函数（要注意实例化类哟），也可以是全局函数<br />b.用TfrxReport.AddFunction把函数加到注册项中，注意，必须是函数的完整定义，比如，你的函数是：<br />&nbsp;&nbsp;&nbsp; function MyFunction(Para0: Float): string;<br />　那么AddFunction格式应该这样：<br />&nbsp;&nbsp;&nbsp; frxReport1.AddFunction('function MyFunction(Para0: Float): string','自定义函数','');<br />c.必须在TfrxReport.OnUserFunction中对函数的返回值进行处理，否则在报表中即使写的格式正确，也没有返回值，这是必须注意的<br /><br />8.在自定义函数中使用报表中的对象<br />a.建立自定义函数<br /><br />function TForm1.GetCrossObject(CrossObj: TfrxCustomCrossView): string;<br />begin<br />&nbsp;&nbsp; // 取数据对象<br />&nbsp;&nbsp; Result:='行数:'+IntToStr(CrossObj.Matrix.RowCount);<br />end;<br /><br />b.注册函数，可以在Form1.Create时注册哦<br /><br />&nbsp;&nbsp; with frxReport1 do<br />&nbsp;&nbsp; begin<br />&nbsp;&nbsp;&nbsp;&nbsp; AddFunction('function GetCrossObject(CrossObj: TfrxCustomCrossView): String',<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; '扩展函数', '');<br />&nbsp;&nbsp; end;<br /><br />c.必须在TfrxReport.OnUserFunction中对函数的返回值进行处理<br /><br />function TForm1.frxReport1UserFunction(const MethodName: String;<br />&nbsp;&nbsp; var Params: Variant): Variant;<br />begin<br />&nbsp;&nbsp; if UpperCase(MethodName)=UpperCase('GetCrossObject') then<br />&nbsp;&nbsp;&nbsp;&nbsp; Result:=GetCrossObject(TfrxCustomCrossView(Integer(Params[0])));&nbsp;&nbsp; //类型转换才能编译通过哦&nbsp;&nbsp;<br />end;</p>]]></description></item><item><title>[转载]fastreport报表增加自定义函数 小写金额转换为大写</title><link>http://www.cnblogs.com/eastson/archive/2010/01/26/1656717.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 26 Jan 2010 06:45:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2010/01/26/1656717.html</guid><description><![CDATA[<p>//以下函数能将小于十万亿元的小写金额转换为大写<br />//作者 方小庆（inrm@263.net）<br />Function NtoC(n0 :real) :wideString;stdcall;<br />Function IIF(b :boolean; s1,s2:string):string;<br />begin //本函数在VFP和VB中均为系统内部函数<br />if b then IIF:=s1 else IIF:=s2;<br />end;<br />Const c = '零壹贰叁肆伍陆柒捌玖◇分角圆拾佰仟万拾佰仟亿拾佰仟万';<br />var L,i,n, code :integer;<br />Z :boolean;<br />s, st,st1 :string;<br />begin<br />s :=FormatFloat( '0.00', n0);<br />L :=Length(s);<br />Z :=n0&lt;1;<br />For i:= 1 To L-3 do<br />begin<br />Val(Copy(s, L-i-2, 1), n, code);<br />st:=IIf((n=0)And(Z Or (i=9)Or(i=5)Or(i=1)), '', Copy(c, n*2+1, 2)) <br />+ IIf((n=0)And((i&lt;&gt;9)And(i&lt;&gt;5)And(i&lt;&gt;1)Or Z And(i=1)),'',Copy(c,(i+13)*2-1,2))<br />+ st;<br />Z := (n=0);<br />end;<br />Z := False;<br />For i:= 1 To 2 do<br />begin<br />Val(Copy(s, L-i+1, 1), n, code);<br />st1:= IIf((n=0)And((i=1)Or(i=2)And(Z Or (n0&lt;1))), '', Copy(c, n*2+1, 2))<br />+ IIf((n&gt;0), Copy(c,(i+11)*2-1, 2), IIf((i=2) Or Z, '', '整'))<br />+ st1;<br />Z := (n=0);<br />end;<br />For i := 1 To Length(st) do If Copy(st, i, 4) = '亿万' Then Delete(st,i+2,2);<br />NtoC := IIf( n0=0, '零', st + st1);<br />End;<br /><br />////////////////////////<br /><br />function TForm2.frxpt1UserFunction(const MethodName: String;<br />var Params: Variant): Variant;<br />begin<br />if UpperCase(MethodName) = UpperCase('F2C') then<br />Result := f2c(Params[0]);<br />end;<br /><br />procedure TForm2.FormCreate(Sender: TObject);<br />begin<br />frxpt1.AddFunction('function F2C(n0: real): String;','Myfunction','小写金额转大写的函数');<br />end;</p>
<p>&nbsp;</p>]]></description></item><item><title>ZeosLib</title><link>http://www.cnblogs.com/eastson/archive/2010/01/26/1656650.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Tue, 26 Jan 2010 05:45:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2010/01/26/1656650.html</guid><description><![CDATA[<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ZeosLib的主要功能是为Borland 编译器(如Delphi, C++ Builder 和Kylix)提供一套支持MySQL, PostgreSQL, Interbase, Firebird, MS SQL, Sybase, Oracle, DB/2的本地数据库和数据库组件。<a href="http://sourceforge.net/projects/zeoslib/">http://sourceforge.net/projects/zeoslib/</a>&nbsp;</p>
<p align="left">&nbsp;</p>
<p align="left">&nbsp;&nbsp;&nbsp;&nbsp;The ZeosLib is a set of database components for MySQL, PostgreSQL, Interbase, Firebird, MS SQL, Sybase, Oracle, DB/2 forDelphi, Kylix and C++ Builder. Lazarus support is under way. &gt;&gt;&gt; Please visit our forum at http://zeosforum.net.ms &lt;&lt;&lt;</p>
<p>&nbsp;</p>
<p>相关连接:</p>
<p><span style="font-size: small;"><a href="http://sourceforge.net/projects/zeoslib/" target="_blank"><span style="color: #888888;">ZeosLib | Get ZeosLib at SourceForge.net</span></a></span></p>
<p><a href="http://zeos.firmos.at/portal.php" target="_blank">Zeoslib Portal&nbsp; Home</a></p>
<p><a href="http://download.csdn.net/source/138362" target="_blank">zeoslib 6.1.3 beta CSDN 下载频道</a></p>
<p><a href="http://overblue.blogbus.com/logs/1892020.html" target="_blank">用 ZeosLib 创建 Firebird 数据库</a></p>
<p>&nbsp;</p>]]></description></item><item><title>FastReport</title><link>http://www.cnblogs.com/eastson/archive/2010/01/25/1655777.html</link><dc:creator>eastson</dc:creator><author>eastson</author><pubDate>Mon, 25 Jan 2010 04:40:00 GMT</pubDate><guid>http://www.cnblogs.com/eastson/archive/2010/01/25/1655777.html</guid><description><![CDATA[<p>FastReport 4.7.19 FastReport 是非常强大的报表控件，相比QuickReport，ReportBuilder更加灵活，又非常小巧，速度快。VCL版本支持Borland Delphi 2-6 and Borland C++Builder 1-6。CLX版本支持Delphi和Kylix。　</p>
<p>&nbsp;</p>
<p>相关连接:</p>
<p><a href="http://fast-report.com/en/" target="_blank">Fast Reports Inc</a></p>
<p><a href="http://fast-report.com/documentation/UserMan/index.html" target="_blank">FastReport 4.6 User's Manual</a></p>
<p><a href="http://fast-report.com/documentation/DevMan/index.html" target="_blank">FastReport 4.0 Developer's manual</a></p>
<p><a href="http://fast-report.com/documentation/ProgMan/index.html" target="_blank">FastReport 4.6 Programmer's manual</a></p>
<p>&nbsp;</p>]]></description></item></channel></rss>